<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-DSC-SLP-
| Next Error Code: 40
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-discount_saleprice">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Specific Sale Price">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1100">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.00">
	<MvASSIGN NAME = "l.module:features"	VALUE = "data_store, discount, vis_product, not_prod, fields_prod, provision_store, json, clientside, clientside_sri, copy_prod">
</MvFUNCTION>

<MvCOMMENT>
|
| data_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'SalePricing
						  (
							pgrp_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							subterm_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							price		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'SalePricing_1 ON ' $ g.Store_Table_Prefix $ 'SalePricing ( pgrp_id, product_id, subterm_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'SalePricing_2 ON ' $ g.Store_Table_Prefix $ 'SalePricing ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00018', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'SalePricing' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Read" PARAMETERS = "saleprice var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.saleprice:pgrp_id"		VALUE = "{ SalePricing.d.pgrp_id }">
	<MvASSIGN NAME = "l.saleprice:product_id"	VALUE = "{ SalePricing.d.product_id }">
	<MvASSIGN NAME = "l.saleprice:subterm_id"	VALUE = "{ SalePricing.d.subterm_id }">
	<MvASSIGN NAME = "l.saleprice:price"		VALUE = "{ SalePricing.d.price }">
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Insert" PARAMETERS = "saleprice var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'SalePricing
						  ( pgrp_id, product_id, subterm_id, price )
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.saleprice:pgrp_id, l.saleprice:product_id, l.saleprice:subterm_id, l.saleprice:price">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Update" PARAMETERS = "saleprice var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'SalePricing
						  SET
							price		= ?
						  WHERE
							pgrp_id		= ?	AND
							product_id	= ?	AND
							subterm_id	= ?' }"
			 FIELDS	= "l.saleprice:price,
					   l.saleprice:pgrp_id, l.saleprice:product_id, l.saleprice:subterm_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Set" PARAMETERS = "pgrp_id, product_id, subterm_id, price" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.saleprice:pgrp_id"		VALUE = "{ l.pgrp_id }">
	<MvASSIGN NAME = "l.saleprice:product_id"	VALUE = "{ l.product_id }">
	<MvASSIGN NAME = "l.saleprice:subterm_id"	VALUE = "{ l.subterm_id }">
	<MvASSIGN NAME = "l.saleprice:price"		VALUE = "{ l.price }">

	<MvIF EXPR = "{ SalePrice_Insert( l.saleprice ) }">														<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">	<MvFUNCTIONRETURN VALUE = "{ SalePrice_Update( l.saleprice ) }">
	<MvELSE>																								<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Delete_All_PriceGroup" PARAMETERS = "pgrp_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'SalePricing
						  WHERE
							pgrp_id		= ?' }"
			 FIELDS	= "l.pgrp_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'SalePricing
						  WHERE
							product_id	= ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Delete" PARAMETERS = "pgrp_id, product_id, subterm_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'SalePricing
						  WHERE
							pgrp_id		= ?	AND
							product_id	= ?	AND
							subterm_id	= ?' }"
			 FIELDS	= "l.pgrp_id, l.product_id, l.subterm_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Copy_All_PriceGroup" PARAMETERS = "source_pgrp_id, dest_pgrp_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'SalePricing ( pgrp_id, product_id, subterm_id, price )
			 			  SELECT ?, product_id, subterm_id, price FROM ' $ g.Store_Table_Prefix $ 'SalePricing WHERE pgrp_id = ?' }"
			 FIELDS = "l.dest_pgrp_id, l.source_pgrp_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00034', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalePriceList_Load_Product" PARAMETERS = "product_id, subterm_id, salepricing var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "SalePricing"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'SalePricing WHERE product_id = ? AND subterm_id = ?' }"
			    FIELDS	= "l.product_id, l.subterm_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.salepricing"		VALUE = "">
	<MvASSIGN NAME = "l.saleprice_count"	VALUE = 0>

	<MvWHILE EXPR = "{ NOT SalePricing.d.EOF }">
		<MvEVAL EXPR = "{ SalePrice_Read( l.salepricing[ ++l.saleprice_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "SalePricing" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalePricing">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-DSC-SLP-00015', l.saleprice_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "SalePriceLookup_Load_PriceGroup_Eligible_Products" PARAMETERS = "pgrp_id, eligible_products var, eligible_product_count, salepricing var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.overrides"	VALUE = "">

	<MvIF EXPR = "{ l.eligible_product_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCAPTURE VARIABLE = "l.query_products">
		<MvEVAL EXPR = "( ">

		<MvFOR INDEX = "l.pos" COUNT = "{ l.eligible_product_count }">
			<MvIF EXPR = "{ l.pos GT 1 }">
				<MvEVAL EXPR = " OR ">
			</MvIF>

			<MvEVAL EXPR = "sp.product_id = ?">

			<MvASSIGN NAME = "l.null"	VALUE = "{ miva_array_insert( l.query_fields, 'l.eligible_products[' $ l.pos $ ']:product_id', -1 ) }">
		</MvFOR>

		<MvEVAL EXPR = " )">
	</MvCAPTURE>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "SalePricing"
				QUERY	= "{ 'SELECT
								sp.product_id	AS product_id,
								sp.subterm_id	AS subterm_id,
								p.price			AS product_price,
								sp.price		AS sale_price
							  FROM
								' $ g.Store_Table_Prefix $ 'SalePricing sp,
								' $ g.Store_Table_Prefix $ 'Products p
							  WHERE
								sp.pgrp_id		= ?				AND
								' $ l.query_products $ '		AND
								p.id			= sp.product_id
							  ORDER BY
								sp.pgrp_id, sp.product_id' }"
			    FIELDS	= "{ 'l.pgrp_id,' $ l.query_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00008', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.salepricing"	VALUE = "">

	<MvWHILE EXPR = "{ NOT SalePricing.d.EOF }">
		<MvIF EXPR = "{ SalePricing.d.product_id GT 0 }">
			<MvIF EXPR = "{ SalePricing.d.subterm_id }">
				<MvREFERENCE VARIABLE = "l.subterm_salepricing" NAME = "l.salepricing" INDEX = "{ SalePricing.d.product_id }" MEMBER = "subscriptions">

				<MvASSIGN NAME = "l.subterm_salepricing"	INDEX = "{ SalePricing.d.subterm_id }"	MEMBER = "product_price"	VALUE = "{ SalePricing.d.product_price }">
				<MvASSIGN NAME = "l.subterm_salepricing"	INDEX = "{ SalePricing.d.subterm_id }"	MEMBER = "sale_price"		VALUE = "{ SalePricing.d.sale_price }">
			<MvELSE>
				<MvASSIGN NAME = "l.salepricing" 			INDEX = "{ SalePricing.d.product_id }"	MEMBER = "product_price"	VALUE = "{ SalePricing.d.product_price }">
				<MvASSIGN NAME = "l.salepricing" 			INDEX = "{ SalePricing.d.product_id }"	MEMBER = "sale_price"		VALUE = "{ SalePricing.d.sale_price }">
			</MvIF>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "SalePricing" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalePricing">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupList_Load_SalePricing_Product" PARAMETERS = "module_id, product_id, pricegroups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pricegroup_count"	VALUE = 0>
	<MvASSIGN NAME = "l.pricegroups"		VALUE = "">
	<MvASSIGN NAME = "l.inclusion_ids"		VALUE = "">
	<MvASSIGN NAME = "l.exclusion_ids"		VALUE = "">

	<MvCOMMENT>
	|
	| PriceGroupXProduct
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PriceGroups"
				QUERY	= "{ 'SELECT
								pg.*,
								sp.price AS sale_price
							  FROM
								' $ g.Store_Table_Prefix $ 'PriceGroups pg
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'SalePricing sp ON sp.pgrp_id = pg.id AND sp.product_id = ? AND sp.subterm_id = 0,
								' $ g.Store_Table_Prefix $ 'PriceGroupXProduct pgxp
							  WHERE
								pg.module_id	= ?		AND
								pg.exclusion	= 0		AND
								pgxp.pgrp_id	= pg.id	AND
								pgxp.product_id	= ?
							  UNION ALL
							  SELECT
								pg.*,
								sp.price AS sale_price
							  FROM
								' $ g.Store_Table_Prefix $ 'PriceGroups pg
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'SalePricing sp ON sp.pgrp_id = pg.id AND sp.product_id = ? AND sp.subterm_id = 0
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct pgxep ON pgxep.pgrp_id = pg.id AND pgxep.product_id = ?
							  WHERE
								pg.module_id	= ?		AND
								pg.exclusion	= 1		AND
								pgxep.pgrp_id IS NULL' }"
				FIELDS	= "l.product_id, l.module_id, l.product_id, l.product_id, l.product_id, l.module_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00009', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT PriceGroups.d.EOF }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Read( l.pricegroup ) }">

		<MvASSIGN NAME = "l.pricegroup:sale_price"							VALUE = "{ PriceGroups.d.sale_price }">

		<MvIF EXPR = "{ l.pricegroup:exclusion }">
			<MvASSIGN NAME = "l.exclusion_ids" INDEX ="{ l.pricegroup:id }" VALUE = 1>
		<MvELSE>
			<MvASSIGN NAME = "l.inclusion_ids" INDEX ="{ l.pricegroup:id }" VALUE = 1>
			<MvASSIGN NAME = "l.pricegroup_count"							VALUE = "{ miva_array_insert_var( l.pricegroups, l.pricegroup, -1 ) }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">

	<MvCOMMENT>
	|
	| PriceGroupXCategory
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "PriceGroups"
				QUERY 	= "{ 'SELECT
								pg.*,
								sp.price AS sale_price
							  FROM
							  	' $ g.Store_Table_Prefix $ 'PriceGroups pg
    							LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'SalePricing sp ON sp.pgrp_id = pg.id AND sp.product_id = ? AND sp.subterm_id = 0,
							  	' $ g.Store_Table_Prefix $ 'PriceGroupXCategory pgxc,
							  	' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp
							  WHERE
							  	pg.module_id	= ?				AND
							  	pg.exclusion	= 0				AND
							  	pg.id			= pgxc.pgrp_id	AND
							  	cxp.product_id	= ?				AND
							  	cxp.cat_id		= pgxc.cat_id
							  UNION
							  SELECT
							  	pg.*,
							  	sp.price AS sale_price
							  FROM
							  	' $ g.Store_Table_Prefix $ 'PriceGroups pg
							  	LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory pgxec ON pgxec.pgrp_id = pg.id
							  	LEFT OUTER JOIN	' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp ON cxp.cat_id = pgxec.cat_id AND cxp.product_id = ?
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'SalePricing sp ON sp.pgrp_id = pg.id AND sp.product_id = ? AND sp.subterm_id = 0
							  WHERE
							  	pg.module_id	= ? AND
							  	pg.exclusion	= 1 AND
							  	cxp.product_id IS NULL' }"
				FIELDS	= "l.product_id, l.module_id, l.product_id, l.product_id, l.product_id, l.module_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00019', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT PriceGroups.d.EOF }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Read( l.pricegroup ) }">

		<MvASSIGN NAME = "l.pricegroup:sale_price"		VALUE = "{ PriceGroups.d.sale_price }">

		<MvIF EXPR = "{ l.pricegroup:exclusion }">
			<MvIF EXPR = "{ l.exclusion_ids[ l.pricegroup:id ] }">
				<MvASSIGN NAME = "l.pricegroup_count"	VALUE = "{ miva_array_insert_var( l.pricegroups, l.pricegroup, -1 ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT l.inclusion_ids[ l.pricegroup:id ] }">
				<MvASSIGN NAME = "l.pricegroup_count"	VALUE = "{ miva_array_insert_var( l.pricegroups, l.pricegroup, -1 ) }">
			</MvIF>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-DSC-SLP-00010', l.pricegroup_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupList_Load_SalePricing_Product_Cached" PARAMETERS = "module_id, product_id, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cached_saleprice_list"				VARIABLE = "g.Session">
		<MvMEMBER NAME = "cache">
		<MvMEMBER NAME = "pricegrouplist_load_salepricing_product">
		<MvMEMBER NAME = "{ l.module_id }">
		<MvMEMBER NAME = "{ l.product_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cached_saleprice_list:count }">
		<MvASSIGN NAME = "l.cached_saleprice_list:count"				VALUE = "{ PriceGroupList_Load_SalePricing_Product( l.module_id, l.product_id, l.cached_saleprice_list:cache ) }">
		<MvIF EXPR = "{ l.cached_saleprice_list:count EQ 0 }">
			<MvASSIGN NAME = "l.cached_saleprice_list:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cached_saleprice_list:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cached_saleprice_list:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.cached_saleprice_list:count EQ 0 }">
		<MvIF EXPR = "{ l.cached_saleprice_list:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cached_saleprice_list:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cached_saleprice_list:error_code, l.cached_saleprice_list:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroups"									VALUE = "{ l.cached_saleprice_list:cache }">

	<MvFUNCTIONRETURN VALUE = "{ l.cached_saleprice_list:count }">
</MvFUNCTION>

<MvCOMMENT>
|
| discount
|
</MvCOMMENT>

<MvFUNCTION NAME = "DiscountModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:items"					VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:basket"				VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:shipping"				VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:tax"					VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Fields" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.pricegroup:id }">
		<MvASSIGN NAME = "g.SpecificSalePrice:customfield_code" VALUE = "{ l.pricegroup:config:customfield_code }">
	<MvELSE>
		<MvASSIGN NAME = "g.SpecificSalePrice:customfield_code" VALUE = "">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "instructions,customfield_code">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'customfield_code' }">
		<MvFUNCTIONRETURN VALUE = "Custom Field Code:">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'instructions' }">
		Product sale pricing is controlled on a per-product basis
	<MvELSEIF EXPR = "{ l.field_id EQ 'customfield_code' }">
		<input type="text" name="SpecificSalePrice:customfield_code" value="{ encodeentities( g.SpecificSalePrice:customfield_code ) }" />
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Validate" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.SpecificSalePrice:customfield_code" VALUE = "{ trim( g.SpecificSalePrice:customfield_code ) }">

	<MvIF EXPR = "{ NOT ISNULL g.SpecificSalePrice:customfield_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( g.SpecificSalePrice:customfield_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'SpecificSalePrice:customfield_code', g.Validation_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ isdigit( g.SpecificSalePrice:customfield_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'SpecificSalePrice:customfield_code', 'Custom field code cannot be an integer' ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.loaded_pricegroup" ARRAY = "l.pricegroups" COUNT = "{ [ g.Module_Feature_PGR_DB ].PriceGroupList_Load_Module( l.module:id, l.pricegroups ) }">
			<MvIF EXPR = "{ l.loaded_pricegroup:id EQ l.pricegroup:id }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ strcasecmp( l.loaded_pricegroup:config:customfield_code, g.SpecificSalePrice:customfield_code ) EQ 0 }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'SpecificSalePrice:customfield_code', 'Price Group \'' $ l.loaded_pricegroup:name $ '\' already uses custom field code \'' $ g.SpecificSalePrice:customfield_code $ '\'' ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Update" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pricegroup:config:customfield_code" VALUE = "{ g.SpecificSalePrice:customfield_code }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Discount_Items" PARAMETERS = "module var, pricegroup var, discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"				VALUE = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Eligible_Items( l.discount_state, l.items ) }">
	<MvASSIGN NAME = "l.eligible_product_count"	VALUE = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Eligible_Products( l.discount_state, l.eligible_products ) }">

	<MvIF EXPR = "{ NOT SalePriceLookup_Load_PriceGroup_Eligible_Products( l.pricegroup:id, l.eligible_products, l.eligible_product_count, l.salepricing ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items" COUNT = "{ l.item_count }">
		<MvCOMMENT>
		|
		| Apply discounts for eligible sum-of-parts inventory variant part products
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.item:productvariantpricing:method EQ 2 }">
			<MvASSIGN NAME = "l.sale_price"					VALUE = "{ l.item:price }">

			<MvFOREACH ITERATOR = "l.part_product" ARRAY = "l.item:part_products" COUNT = "{ l.item:part_product_count }">
				<MvIF EXPR = "{ miva_element_exists( l.salepricing, l.part_product:id ) }">
					<MvIF EXPR = "{ NOT ISNULL l.salepricing[ l.part_product:id ]:sale_price }">
						<MvASSIGN NAME = "l.sale_price"		VALUE = "{ l.sale_price - ( ( l.salepricing[ l.part_product:id ]:product_price - l.salepricing[ l.part_product:id ]:sale_price ) * l.part_product:quantity ) }">
					</MvIF>
				</MvIF>
			</MvFOREACH>

			<MvCOMMENT>
			|
			| If the resulting sale_price is higher than the current price in the basket, we only adjust the
			| price of the product if there are no discounts already applied.
			|
			| If we apply a discount this way, we do not apply any further discounts to the master product,
			| even if it is explicitly eligible.
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ ( l.sale_price LT l.item:price ) OR
							( ( l.sale_price GT l.item:price ) AND ( l.item:price EQ l.item:base_price ) ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Discount_Item_Fixed( l.discount_state, l.item, l.item:quantity, l.item:price - l.sale_price ) }">

				<MvFOREACHCONTINUE>
			</MvIF>
		</MvIF>

		<MvCOMMENT>
		|
		| It is possible to have the product assigned to the price group product level as well as subscription level.
		| Prioritize the subscription level over the product level.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ miva_element_exists( l.salepricing, l.item:product_id ) }">
			<MvIF EXPR = "{ l.item:subterm_id AND miva_element_exists( l.salepricing[ l.item:product_id ]:subscriptions, l.item:subterm_id ) }">
				<MvASSIGN NAME = "l.sale_price" VALUE = "{ l.salepricing[ l.item:product_id ]:subscriptions[ l.item:subterm_id ]:sale_price }">
			<MvELSEIF EXPR = "{ NOT ISNULL l.salepricing[ l.item:product_id ]:sale_price }">
				<MvASSIGN NAME = "l.sale_price" VALUE = "{ l.salepricing[ l.item:product_id ]:sale_price }">
			<MvELSE>
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvCOMMENT>
			|
			| If the configured sale_price is higher than the current price in the basket, we only adjust the
			| price of the product if there are no discounts already applied and the item isn't upsold.
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ ( l.sale_price LT l.item:price ) OR
							( ( l.sale_price GT l.item:price ) AND ( l.item:price EQ l.item:base_price ) AND ( NOT l.item:upsold ) ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Discount_Item_Fixed( l.discount_state, l.item, l.item:quantity, l.item:price - l.sale_price ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Provision_Settings" PARAMETERS = "module var, pricegroup var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'CustomField_Code', l.customfield_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.customfield_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.customfield_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:tags:CustomField_Code[ 1 ], g.Validation_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ isdigit( l.customfield_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:tags:CustomField_Code[ 1 ], 'Custom field code cannot be an integer' ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.loaded_pricegroup" ARRAY = "l.pricegroups" COUNT = "{ [ g.Module_Feature_PGR_DB ].PriceGroupList_Load_Module( l.module:id, l.pricegroups ) }">
			<MvIF EXPR = "{ l.loaded_pricegroup:id EQ l.pricegroup:id }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ strcasecmp( l.loaded_pricegroup:config:customfield_code, l.customfield_code ) EQ 0 }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:tags:CustomField_Code[ 1 ], 'Price Group \'' $ l.loaded_pricegroup:name $ '\' already uses custom field code \'' $ l.customfield_code $ '\'' ) }">
			</MvIF>
		</MvFOREACH>

		<MvASSIGN NAME = "l.pricegroup:config:customfield_code" VALUE = "{ l.customfield_code }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_PriceGroup_Copy" PARAMETERS = "module var, source_pricegroup var, dest_pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT SalePrice_Delete_All_PriceGroup( l.dest_pricegroup:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ SalePrice_Copy_All_PriceGroup( l.source_pricegroup:id, l.dest_pricegroup:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_PriceGroup_Delete" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ SalePrice_Delete_All_PriceGroup( l.pricegroup:id ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| vis_product
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Head" PARAMETERS = "module var, tab, product var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">

	<MvEVAL EXPR = "{ Element_ProductSubscriptionTerm_SalePriceList_CSS( l.module ) }">

	<MvIF EXPR = "{  Element_SalePrice_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_ProductSubscriptionTerm_SalePriceList_JavaScript( l.module ) }">

		<MvEVAL EXPR = "{  Element_SalePrice_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Tabs" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) OR
					l.product:id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">
		<MvIF EXPR = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionSettings_Load_Product( l.product:id, l.productsubscriptionsettings ) AND l.productsubscriptionsettings:enabled }">
			<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.tabs, 'SUBSCRIPTIONTERM_SALEPRICING:Subscription Term Sale Pricing', -1 ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ PriceGroupList_Load_SalePricing_Product_Cached( l.module:id, l.product:id, l.pricegroups ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.tabs, 'GT_PROD/SALEPRICING:Sale Pricing', -1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ miva_joinstring( l.tabs, ',', '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Content" PARAMETERS = "module var, tab, load_fields, product var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) OR
					l.product:id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.SalePricing" VALUE = "">

		<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ PriceGroupList_Load_SalePricing_Product_Cached( l.module:id, l.product:id, l.pricegroups ) }">
			<MvIF EXPR = "{ NOT ISNULL l.pricegroup:sale_price }">	<MvASSIGN NAME = "g.SalePricing" INDEX = "{ l.pricegroup:id }"	VALUE = "{ [ g.Module_Library_Utilities ].Price_Pad( l.pricegroup:sale_price ) }">
			<MvELSE>												<MvASSIGN NAME = "g.SalePricing" INDEX = "{ l.pricegroup:id }"	VALUE = "">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">
		<MvIF EXPR = "{ l.tab EQ 'SUBSCRIPTIONTERM_SALEPRICING' }">
			<script type="text/javascript">
				MMScreen_LoadFinished( function() { new ProductSubscriptionTerm_SalePriceList( <MvEVAL EXPR = "{ int( l.product:id ) }"> ); } );
			</script>

			<MvEVAL EXPR = "{ Element_ProductSubscriptionTerm_SalePriceList_HTML( l.module ) }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, 'SALEPRICING' ) }">
		<MvHIDE FIELDS = "g.SalePricing">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PROD', 'SALEPRICING' ) }">

		<MvASSIGN NAME = "l.index"	VALUE = 0>

		<table border="0" cellspacing="0" cellpadding="2" width="100%">
		<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ PriceGroupList_Load_SalePricing_Product_Cached( l.module:id, l.product:id, l.pricegroups ) }">
			<tr><td nowrap>
				<MvEVAL EXPR = "{ encodeentities( l.pricegroup:name ) }">:
			</td><td width="100%">
				<input type="text" size="10" name="{ 'SalePricing[' $ l.pricegroup:id $ ']' }" value="{ encodeentities( g.SalePricing[ l.pricegroup:id ] ) }">
			</td></tr>
		</MvFOREACH>
		</table>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH INDEX = "l.pgrp_id" ITERATOR = "l.price" ARRAY = "g.SalePricing">
		<MvASSIGN NAME = "l.price"	VALUE = "{ trim( l.price ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_Optional( l.price ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'SALEPRICING', 'SalePricing[' $ l.pgrp_id $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH INDEX = "l.pgrp_id" ITERATOR = "l.price" ARRAY = "g.SalePricing">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_ID( l.pgrp_id, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ NOT Product_PriceGroup_Validate( l.module, l.product, l.pricegroup ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.price }">
			<MvIF EXPR = "{ NOT SalePrice_Delete( l.pricegroup:id, l.product:id, 0 ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ NOT SalePrice_Set( l.pricegroup:id, l.product:id, 0, l.price ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| not_prod
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ SalePrice_Delete_All_Product( l.product:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_LowStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_OutOfStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| fields_prod
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"			VALUE = "">
	<MvASSIGN NAME = "l.capabilities:query"		VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:search"	VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields"			VALUE = "">
	<MvASSIGN NAME = "l.field_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ PriceGroupList_Load_Module_Cached( l.module:id, l.pricegroups ) }">
		<MvIF EXPR = "{ NOT ISNULL l.pricegroup:config:customfield_code }">	<MvASSIGN NAME = "l.code" VALUE = "{ l.pricegroup:config:customfield_code }">
		<MvELSE>															<MvASSIGN NAME = "l.code" VALUE = "{ l.pricegroup:id }">
		</MvIF>

		<MvASSIGN NAME = "l.field"			VALUE = "">
		<MvASSIGN NAME = "l.field:code"		VALUE = "{ l.code }">
		<MvASSIGN NAME = "l.field:name"		VALUE = "{ 'Sale Price: ' $ l.pricegroup:name }">
		<MvASSIGN NAME = "l.field:type"		VALUE = "price_optional">

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ ConvertCustomFieldCode_To_PriceGroupID( l.module:id, l.code ) }">

	<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Load_ID( l.pgrp_id, l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ 'Sale Price: ' $ l.pricegroup:name }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value" PARAMETERS = "module var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pgrp_id"	VALUE = "{ ConvertCustomFieldCode_To_PriceGroupID( l.module:id, l.code ) }">

	<MvIF EXPR = "{ l.pgrp_id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:discount_saleprice:customfields">

	<MvIF EXPR = "{ l.cache:product_id NE l.product_id }">
		<MvASSIGN NAME = "l.cache:product_id"	VALUE = "{ l.product_id }">
		<MvASSIGN NAME = "l.cache:lookup"		VALUE = "">

		<MvFOREACH ITERATOR = "l.saleprice" ARRAY = "l.salepricing" COUNT = "{ SalePriceList_Load_Product( l.product_id, 0, l.salepricing ) }">
			<MvIF EXPR = "{ l.saleprice:pgrp_id GT 0 }">
				<MvASSIGN NAME = "l.cache:lookup" INDEX = "{ l.saleprice:pgrp_id }" VALUE = "{ l.saleprice:price }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.cache:lookup[ l.pgrp_id ] }">	<MvFUNCTIONRETURN VALUE = "">
	<MvELSE>												<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Price_Pad( l.cache:lookup[ l.pgrp_id ] ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value_Array" PARAMETERS = "module var, product_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field" PARAMETERS = "module var, product_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pgrp_id"	VALUE = "{ ConvertCustomFieldCode_To_PriceGroupID( l.module:id, l.code ) }">
	<MvASSIGN NAME = "l.value"		VALUE = "{ trim( l.value ) }">

	<MvIF EXPR = "{ l.pgrp_id LE 0 }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00016', 'Invalid price group' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_Optional( l.value ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00017', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID_Cached( l.product_id, l.product ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountPrice_Delete_All_PriceGroupProduct( l.pgrp_id, l.product_id ) OR
					NOT [ g.Module_Feature_PGR_DB ].DiscountVariantPrice_Delete_All_PriceGroupProduct( l.pgrp_id, l.product_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.value }">
		<MvIF EXPR = "{ NOT SalePrice_Delete( l.pgrp_id, l.product_id, 0 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Load_ID( l.pgrp_id, l.pricegroup ) }">
		<MvIF EXPR = "{ l.pricegroup:module_id NE l.module:id }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00036', 'Price group \'' $ l.pricegroup:name $ '\' does not apply specific sale pricing' ) }">
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:exclusion }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupXExcludedProduct_Delete( l.pricegroup:id, l.product_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupXProduct_Load( l.pricegroup:id, l.product_id, l.pricegroupxproduct ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupXProduct_Insert( l.pricegroup:id, l.product_id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT SalePrice_Set( l.pricegroup:id, l.product_id, 0, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update the in-memory cache, if required
	|
	</MvCOMMENT>

	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:discount_saleprice:customfields">

	<MvIF EXPR = "{ l.cache:product_id EQ l.product_id }">
		<MvASSIGN NAME = "l.cache:lookup" INDEX = "{ l.pgrp_id }" VALUE = "{ l.value }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field_Array" PARAMETERS = "module var, product_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00035', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ SalePrice_Query( l.module, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'discount_saleprice', l.ref ) }">

	<MvIF EXPR = "{ NOT SalePrice_Query( l.module, l.query, l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.data" VARIABLE = "l.ref:data:pricegroup_data">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, 'NUMBER', l.data:alias $ '.price', l.operator, l.value, 'AND', 'AND' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'discount_saleprice', l.ref ) }">

	<MvIF EXPR = "{ NOT SalePrice_Query( l.module, l.query, l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.data" VARIABLE = "l.ref:data:pricegroup_data">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY_Flag_With_Alias_And_Member( l.query,
																				 			 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( l.data:alias $ '.price', '0' ),
																							 '',
																			 				 l.data:alias $ ':price',
																			 				 l.direction,
																			 				 'null_number' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, product_id, code" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ ConvertCustomFieldCode_To_PriceGroupID( l.module:id, l.code ) }">

	<MvREFERENCEARRAY NAME = "l.data" VARIABLE = "l.loaded_record">
		<MvMEMBER NAME = "{ SalePrice_Generate_Alias( l.pgrp_id ) }">
	</MvREFERENCEARRAY>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "SalePricing"
				QUERY 	= "{ 'SELECT price FROM ' $ g.Store_Table_Prefix $ 'SalePricing WHERE pgrp_id = ? AND product_id = ? AND subterm_id = 0' }"
				FIELDS	= "l.pgrp_id, l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00033', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ SalePricing.d.EOF }">	<MvASSIGN NAME = "l.data:price" VALUE = "">
	<MvELSE>								<MvASSIGN NAME = "l.data:price" VALUE = "{ SalePricing.d.price }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalePricing">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ ConvertCustomFieldCode_To_PriceGroupID( l.module:id, l.code ) }">

	<MvFUNCTIONRETURN VALUE = "{ miva_variable_value( l.view_name $ '.d.' $ SalePrice_Generate_Alias( l.pgrp_id ) $ '_price' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| provision_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"		VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'productsaleprice' }">	<MvEVAL EXPR = "{ Module_Provision_Store_ProductSalePrice( l.module, l.child_xml ) }">
		<MvELSE>											<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Unknown tag' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.child_pos"	VALUE = "{ l.child_pos + 1 }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductSalePrice" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product_code',	l.product_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'group_name',	l.pricegroup_name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Exists( l.provide_xml, 'term_descrip' ) }">
		<MvASSIGN NAME = "l.productsubscriptionterm:id" VALUE = 0>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'term_descrip', l.term_descrip ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_Description( l.product:id, l.term_descrip, l.productsubscriptionterm ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product subscription term with the description \'' $ l.term_descrip $ '\' does not exist for product \'' $ l.product:code $ '\'' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( l.pricegroup_name, l.pricegroup ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Price group \'' $ l.pricegroup_name $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.productsubscriptionterm:id }">
		<MvIF EXPR = "{ NOT ProductSubscriptionTerm_PriceGroup_Validate( l.module, l.product, l.pricegroup, l.productsubscriptionterm ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT Product_PriceGroup_Validate( l.module, l.product, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountPrice_Delete_All_PriceGroupProduct( l.pricegroup:id, l.product:id ) OR
					NOT [ g.Module_Feature_PGR_DB ].DiscountVariantPrice_Delete_All_PriceGroupProduct( l.pricegroup:id, l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value"	VALUE = "{ trim( l.provide_xml:value ) }">

	<MvIF EXPR = "{ ISNULL l.value }">
		<MvIF EXPR = "{ NOT SalePrice_Delete( l.pricegroup:id, l.product:id, l.productsubscriptionterm:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_Required( l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Invalid sale price: ' $ g.Validation_Message ) }">
	<MvELSEIF EXPR = "{ NOT SalePrice_Set( l.pricegroup:id, l.product:id, l.productsubscriptionterm:id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'ProductSubscriptionTerm_SalePriceList_Load_Query' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_ProductSubscriptionTerm_SalePriceList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductSubscriptionTerm_SalePrice_Update' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_ProductSubscriptionTerm_SalePrice_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductSubscriptionTerm_SalePrice_Delete' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_ProductSubscriptionTerm_SalePrice_Delete( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_SalePriceList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
						NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
						NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
						NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.fields"				VALUE = "">
	<MvASSIGN NAME = "l.query"				VALUE = "">
	<MvASSIGN NAME = "l.query_include"		VALUE = "">
	<MvASSIGN NAME = "l.query_exclude"		VALUE = "">
	<MvASSIGN NAME = "l.union_fields"		VALUE = "">
	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.order_fields"		VALUE = "name,custscope,rate,discount,markup,exclusion,config,descrip,display,dt_start,dt_end,qmn_subtot,
													 qmx_subtot,qmn_quan,qmx_quan,qmn_weight,qmx_weight,bmn_subtot,bmx_subtot,bmn_quan,bmx_quan,bmn_weight,
													 bmx_weight,priority,sale_price,subterm_descrip">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.name',			'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.custscope',	'custscope' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.rate',			'rate' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.discount',		'discount' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.markup',		'markup' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.dt_start',		'dt_start' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.dt_end',		'dt_end' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.priority',		'priority' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pg.exclusion',	'exclusion' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.descrip',		'descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pg.display',		'display' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmn_subtot',	'qmn_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmx_subtot',	'qmx_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.qmn_quan',		'qmn_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.qmx_quan',		'qmx_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmn_weight',	'qmn_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmx_weight',	'qmx_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmn_subtot',	'bmn_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmx_subtot',	'bmx_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.bmn_quan',		'bmn_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.bmx_quan',		'bmx_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmn_weight',	'bmn_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmx_weight',	'bmx_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'sp.sale_price',	'sale_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pst.descrip',		'subterm_descrip' ) }">

	<MvCOMMENT>
	|
	| sNN_PriceGroupXProductSubscription
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query_include, 'pg.*,
																				  sp.price			AS sale_price,
																				  pst.id			AS subterm_id,
																				  pst.descrip		AS subterm_descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_include,	g.Store_Table_Prefix $ 'PriceGroups',	'pg' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_include,	g.Store_Table_Prefix $ 'PriceGroupXProductSubscription',	'pgxps' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_include, 'pgxps', g.Store_Table_Prefix $ 'SalePricing', 'sp', 'sp.pgrp_id = pgxps.pgrp_id AND sp.product_id = ? AND sp.subterm_id = pgxps.subterm_id', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_include,	g.Store_Table_Prefix $ 'ProductSubscriptionTerms',	'pst' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query_include, 'pg.module_id		= ?					AND
																				 pg.exclusion		= 0					AND
																				 pg.id				= pgxps.pgrp_id		AND
																				 pst.id				= pgxps.subterm_id 	AND
																				 pgxps.product_id	= ?', [ g.Module_Library_DB ].SQL_Query_Field( l.module:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvCOMMENT>
	|
	| sNN_PriceGroupXExcludedProductSubscription
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query_exclude, 'pg.*,
																				  sp.price			AS sale_price,
																				  pst.id			AS subterm_id,
																				  pst.descrip		AS subterm_descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_exclude,	g.Store_Table_Prefix $ 'PriceGroups',	'pg' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_exclude, 'pg', g.Store_Table_Prefix $ 'ProductSubscriptionTerms', 'pst', 'pst.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_exclude, 'pg', g.Store_Table_Prefix $ 'SalePricing', 'sp', 'sp.pgrp_id = pg.id AND sp.product_id = ? AND sp.subterm_id = pst.id', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_exclude, 'pg', g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct', 'pgxep', 'pgxep.pgrp_id = pg.id AND pgxep.product_id = pst.product_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_exclude, 'pg', g.Store_Table_Prefix $ 'PriceGroupXExcludedProductSubscription', 'pgxeps', 'pgxeps.pgrp_id = pg.id				AND
																																						 					pgxeps.product_id = pst.product_id	AND
																						                                                                 					pgxeps.subterm_id = pst.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query_exclude, 'pg.module_id	= ?			AND
																				 pg.exclusion	= 1			AND
																				 pgxep.product_id IS NULL	AND
																				 pgxeps.product_id IS NULL', [ g.Module_Library_DB ].SQL_Query_Field( l.module:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query_include, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query_exclude, l.filter, l.available_filters ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_include ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_exclude ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, l.order_fields, 'name' ) }">

	<MvASSIGN NAME = "l.sql" 					VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">
	<MvASSIGN NAME = "l.query_include_count"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build_Count( l.query_include, l.null ) }">
	<MvASSIGN NAME = "l.query_exclude_count"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build_Count( l.query_exclude, l.null ) }">
	<MvASSIGN NAME = "l.query_count"			VALUE = "{ l.query_include_count $ ' UNION ALL ' $ l.query_exclude_count }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Count( l.query_count, l.fields, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'PriceGroups', l.sql, l.fields, l.offset , l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-DSC-SLP-00021', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ NOT PriceGroups.d.EOF }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count ) }">
			"id": 				<MvEVAL EXPR = "{ PriceGroups.d.id }">,
			"name": 			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( PriceGroups.d.name ) }">",
			"custscope":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( PriceGroups.d.custscope ) }">",
			"rate":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( PriceGroups.d.rate ) }">",
			"discount":			<MvEVAL EXPR = "{ PriceGroups.d.discount ROUND 2 }">,
			"markup":			<MvEVAL EXPR = "{ PriceGroups.d.markup ROUND 2 }">,
			"module_id":		<MvEVAL EXPR = "{ int( PriceGroups.d.module_id ) }">,
			"exclusion":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( PriceGroups.d.exclusion ) }">,
			"config":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( PriceGroups.d.config ) }">",
			"descrip":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( PriceGroups.d.descrip ) }">",
			"display":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( PriceGroups.d.display ) }">,
			"dt_start":			<MvEVAL EXPR = "{ int( PriceGroups.d.dt_start ) }">,
			"dt_end":			<MvEVAL EXPR = "{ int( PriceGroups.d.dt_end ) }">,
			"qmn_subtot":		<MvEVAL EXPR = "{ PriceGroups.d.qmn_subtot ROUND 2 }">,
			"qmx_subtot":		<MvEVAL EXPR = "{ PriceGroups.d.qmx_subtot ROUND 2 }">,
			"qmn_quan":			<MvEVAL EXPR = "{ int( PriceGroups.d.qmn_quan ) }">,
			"qmx_quan":			<MvEVAL EXPR = "{ int( PriceGroups.d.qmx_quan ) }">,
			"qmn_weight":		<MvEVAL EXPR = "{ PriceGroups.d.qmn_weight ROUND 2 }">,
			"qmx_weight":		<MvEVAL EXPR = "{ PriceGroups.d.qmx_weight ROUND 2 }">,
			"bmn_subtot":		<MvEVAL EXPR = "{ PriceGroups.d.bmn_subtot ROUND 2 }">,
			"bmx_subtot":		<MvEVAL EXPR = "{ PriceGroups.d.bmx_subtot ROUND 2 }">,
			"bmn_quan":			<MvEVAL EXPR = "{ int( PriceGroups.d.bmn_quan ) }">,
			"bmx_quan":			<MvEVAL EXPR = "{ int( PriceGroups.d.bmx_quan ) }">,
			"bmn_weight":		<MvEVAL EXPR = "{ PriceGroups.d.bmn_weight ROUND 2 }">,
			"bmx_weight":		<MvEVAL EXPR = "{ PriceGroups.d.bmx_weight ROUND 2 }">,
			"priority":			<MvEVAL EXPR = "{ int( PriceGroups.d.priority ) }">,
			"subterm_id":		<MvEVAL EXPR = "{ int( PriceGroups.d.subterm_id ) }">,
			"subterm_descrip":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( PriceGroups.d.subterm_descrip ) }">"

			<MvIF EXPR = "{ NOT ISNULL PriceGroups.d.sale_price }">
				,"sale_price":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( PriceGroups.d.sale_price ) }">"
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_SalePrice_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_PGR_JSON ].JSON_PriceGroup_Load( l.pricegroup ) }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.pricegroup:module_id NE l.module:id }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-DSC-SLP-00022', 'Price group \'' $ l.pricegroup:name $ '\' does not apply specific sale pricing' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:product_id NE l.product:id }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-DSC-SLP-00023', 'Product subscription term with the description \'' $ l.productsubscriptionterm:descrip $ '\' is invalid for product \'' $ l.product:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductSubscriptionTerm_PriceGroup_Validate( l.module, l.product, l.pricegroup, l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Price( 'R', 'Sale_Price', l.sale_price ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT SalePrice_Set( l.pricegroup:id, l.product:id, l.productsubscriptionterm:id, l.sale_price )  }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_SalePrice_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }"> 	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_PGR_JSON ].JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.pricegroup:module_id NE l.module:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-DSC-SLP-00026', 'Price group \'' $ l.pricegroup:name $ '\' does not apply specific sale pricing' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:product_id NE l.product:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-DSC-SLP-00027', 'Product subscription term with the description \'' $ l.productsubscriptionterm:descrip $ '\' is invalid for product \'' $ l.product:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT SalePrice_Delete( l.pricegroup:id, l.product:id, l.productsubscriptionterm:id )  }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module Client Side Feature (clientside)
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/discount/saleprice/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_SalePrice_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/discount/saleprice/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/discount/saleprice/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/discount/saleprice/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Copy Product Feature (copy_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Copy_Product" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT SalePrice_Delete_All_Product( l.dest_product:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Copy all Sale Pricing where a Product Subscription Term is not used
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'SalePricing ( pgrp_id, product_id, subterm_id, price )
						  SELECT
							pgrp_id, ?, subterm_id, price
						  FROM ' $
							g.Store_Table_Prefix $ 'SalePricing
						  WHERE
							product_id = ? AND
							subterm_id = 0' }"
			 FIELDS = "l.dest_product:id,
					   l.source_product:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00037', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Copy all Sale Pricing where a Product Subscription Term is used
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'SalePricing ( pgrp_id, product_id, subterm_id, price )
						  SELECT
							sp.pgrp_id, ?, dest_pst.id, sp.price
						  FROM ' $
							g.Store_Table_Prefix $ 'SalePricing sp,							' $
							g.Store_Table_Prefix $ 'ProductSubscriptionTerms source_pst,	' $
							g.Store_Table_Prefix $ 'ProductSubscriptionTerms dest_pst
						  WHERE
							sp.product_id		= ?					AND
							source_pst.id		= sp.subterm_id		AND
							dest_pst.product_id	= ?					AND
							dest_pst.descrip	= source_pst.descrip' }"
			 FIELDS = "l.dest_product:id,
					   l.source_product:id, l.dest_product:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00038', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Product_PriceGroup_Validate" PARAMETERS = "module var, product var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.pricegroup:module_id NE l.module:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00028', 'Price group \'' $ l.pricegroup:name $ '\' does not apply specific sale pricing' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.pricegroup:exclusion }">
		<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXExcludedProduct_Load( l.pricegroup:id, l.product:id, l.pricegroupxproduct ) }">
			<MvASSIGN NAME = "l.assigned" VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Product_In_PriceGroupXExcludedCategory( l.pricegroup:id, l.product:id ) }">
			<MvASSIGN NAME = "l.assigned" VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.assigned" VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00029', 'Product \'' $ l.product:code $ '\' is excluded from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXProduct_Load( l.pricegroup:id, l.product:id, l.pricegroupxproduct ) }">
			<MvASSIGN NAME = "l.assigned" VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Product_In_PriceGroupXCategory( l.pricegroup:id, l.product:id ) }">
			<MvASSIGN NAME = "l.assigned" VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.assigned" VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00030', 'Product \'' $ l.product:code $ '\' is not assigned to price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSubscriptionTerm_PriceGroup_Validate" PARAMETERS = "module var, product var, pricegroup var, productsubscriptionterm var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.pricegroup:module_id NE l.module:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00031', 'Price group \'' $ l.pricegroup:name $ '\' does not apply specific sale pricing' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:product_id NE l.product:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00032', 'Product subscription term with the description \'' $ l.productsubscriptionterm:descrip $ '\' is invalid for product \'' $ l.product:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.pricegroup:exclusion }">
		<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXExcludedProductSubscription_Load( l.pricegroup:id, l.product:id, l.productsubscriptionterm:id, l.pricegroupxexcludedproductsubscription ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00024', 'Product subscription term with the description \'' $ l.productsubscriptionterm:descrip $ '\' for product \'' $ l.product:code $ '\' is excluded from price group \'' $ l.pricegroup:name $ '\'' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupXProductSubscription_Load( l.pricegroup:id, l.product:id, l.productsubscriptionterm:id, l.pricegroupxproductsubscription ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00025', 'Product subscription term with the description \'' $ l.productsubscriptionterm:descrip $ '\' for product \'' $ l.product:code $ '\' is not assigned to price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupList_Load_Module_Cached" PARAMETERS = "module_id, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:discount_saleprice:pricegroups">

	<MvIF EXPR = "{ ISNULL l.cache }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupList_Load_Module( l.module_id, l.cache:pricegroups ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroups"					VALUE = "{ l.cache:pricegroups }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "ConvertCustomFieldCode_To_PriceGroupID" PARAMETERS = "module_id, code" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:discount_saleprice:pricegroups_lookup">

	<MvIF EXPR = "{ ISNULL l.cache }">
		<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ PriceGroupList_Load_Module_Cached( l.module_id, l.pricegroups ) }">
			<MvASSIGN NAME = "l.cache" MEMBER = "{ l.pricegroup:id }" VALUE = "{ l.pricegroup:id }">

			<MvIF EXPR = "{ NOT ISNULL l.pricegroup:config:customfield_code }">
				<MvASSIGN NAME = "l.cache" MEMBER = "{ l.pricegroup:config:customfield_code }" VALUE = "{ l.pricegroup:id }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.pgrp_id" VARIABLE = "l.cache">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ int( l.pgrp_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Generate_Alias" PARAMETERS = "pgrp_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'sp_' $ int( l.pgrp_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "SalePrice_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'discount_saleprice', l.ref ) }">

	<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ ConvertCustomFieldCode_To_PriceGroupID( l.module:id, l.code ) }">

	<MvIF EXPR = "{ l.pgrp_id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DSC-SLP-00039', 'Invalid price group' ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried_pricegroup_ids">
		<MvMEMBER NAME = "{ l.pgrp_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.queried }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.data" VARIABLE = "l.ref:data:pricegroup_data">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.queried"	VALUE = 1>
	<MvASSIGN NAME = "l.data:alias"	VALUE = "{ SalePrice_Generate_Alias( l.pgrp_id ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.data:alias $ '.price AS ' $ l.data:alias $ '_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'SalePricing', l.data:alias, l.data:alias $ '.pgrp_id = ? AND ' $ l.data:alias $ '.subterm_id = 0 AND ' $ l.data:alias $ '.product_id = prod.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pgrp_id ) ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvINCLUDE FILE = "modules/discount/saleprice/functions.mv">
<MvINCLUDE FILE = "modules/discount/saleprice/productsubscriptionterm_salepricelist.mv">

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2020 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-LOG-MLF-
| Next Error Code: 8    
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-malf">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Miva Merchant Access Log">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0000">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "5.00">
	<MvASSIGN NAME = "l.module:description"	VALUE = "The Miva Merchant Access Log is a general purpose log file to help troubleshoot your store.  Note that this log file captures a large amount of data and can use a lot of space on your server.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "log, vis_log, data_store, provision_store">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'MALF
						  (
							logfile	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 ) $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-LOG-MLF-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.malf:logfile"	VALUE = "malf.log">

	<MvFUNCTIONRETURN VALUE = "{ MALF_Insert( l.malf ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'MALF' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Logging_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Log_MALF:logfile" VALUE = "{ trim( g.Log_MALF:logfile ) }">

	<MvIF EXPR = "{ len( g.Log_MALF:logfile ) EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'MALF', 'Log_MALF:logfile', 'Please specify a log file' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Logging_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT MALF_Update( g.Log_Malf ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-LOG-MLF-00006', 'MALF Configuration updated' ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Logging_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "MALF:Miva Merchant Access Log">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Logging_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvIF EXPR = "{ NOT MALF_Load( g.Log_MALF ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'MALF' }">
		<table border=0 cellpadding = 2 cellspacing = 0>
		<tr><td nowrap>
			<font size=-1 face="Arial, Helvetica"><b>
			Log File:
			</b></font>
		</td><td width="100%">
			<input type="text" name="Log_MALF:logfile" size=40 value = "{ encodeentities( g.Log_MALF:logfile ) }">
		</td></tr>
		</table>
	<MvELSE>
		<MvHIDE FIELDS = "g.Log_MALF">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_Action" PARAMETERS = "module var, action" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.action EQ 'ALGI' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'ALGI', '', g.Affiliate_Code ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'UAFL' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'UAFL', '', g.Affiliate_Code ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'IAFL' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'IAFL', '', g.Affiliate_Code ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'AFPW' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'AFPW', '', g.Affiliate_Code ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'LOGN' }">
		<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].Customer_Load_Login( g.Customer_Login, l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'LOGN', '', l.customer:ship_email ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.action EQ 'EMPW' }">
		<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].Customer_Load_Login( g.Customer_Login, l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'EMPW', '', l.customer:ship_email ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.action EQ 'UCST' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'UCST', '', g.Customer_ShipEmail ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'ICST' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'ICST', '', g.Customer_ShipEmail ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'ADPR' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'ADPR', '', g.Product_Code $ ' ' $ g.Quantity ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'AUPR' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'AUPR', '', g.Product_Code ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'AUPM' }">
		<MvASSIGN NAME = "l.pos" 		VALUE = "{ [ g.Module_Library_Utilities ].FirstSparseArrayElement( g.Upsell_Selected ) }">
		<MvASSIGN NAME = "l.count"		VALUE = "{ miva_array_max( g.Upsell_Selected ) }">

		<MvWHILE EXPR = "{ l.pos LE l.count }">
			<MvIF EXPR = "{ g.Upsell_Selected[ l.pos ] }">
				<MvIF EXPR = "{ NOT MALF_LogActivity( 'AUPM', '', g.Product[ l.pos ]:code ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.pos"	VALUE = "{ [ g.Module_Library_Utilities ].NextSparseArrayElement( g.Upsell_Selected, l.pos ) }">
		</MvWHILE>

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.action EQ 'QNTY' }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].BasketItem_Load_Line( g.Basket:basket_id, g.Basket_Line, l.basketitem ) }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Runtime_Product_Load_BasketItem( l.basketitem, l.product ) }">
				<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'QNTY', '', l.product:code $ ' ' $ g.Quantity ) }">
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ l.action EQ 'RPRD' }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].BasketItem_Load_Line( g.Basket:basket_id, g.Basket_Line, l.basketitem ) }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Runtime_Product_Load_BasketItem( l.basketitem, l.product ) }">
				<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'RPRD', '', l.product:code ) }">
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ l.action EQ 'ORDR' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'ORDR', '', g.Basket:order_id ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'CTAX' }">
		<MvASSIGN NAME = "l.tax_total" VALUE = 0>
		<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.basketcharge_count" VALUE = "{ BasketChargeList_Load_Type( g.Basket:basket_id, 'TAX', l.basket_charge ) }">

		<MvASSIGN NAME = "l.pos" VALUE = 1>
		<MvWHILE EXPR = "{ l.pos LE l.basketcharge_count }">
			<MvASSIGN NAME = "l.tax_total" VALUE = "{ l.tax_total + l.basket_charge[ l.pos ]:amount }">

			<MvASSIGN NAME = "l.pos" VALUE = "{ l.pos + 1 }">
		</MvWHILE>

		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'CTAX', '', g.Basket:order_id $ ' ' $ l.tax_total ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'SHIP' }">
		<MvASSIGN NAME = "l.ship_total" VALUE = 0>
		<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.basketcharge_count" VALUE = "{ BasketChargeList_Load_Type( g.Basket:basket_id, 'SHIPPING', l.basketcharge ) }">

		<MvASSIGN NAME = "l.pos" VALUE = 1>
		<MvWHILE EXPR = "{ l.pos LE l.basketcharge_count }">
			<MvASSIGN NAME = "l.ship_total" VALUE = "{ l.ship_total + l.basketcharge[ l.pos ]:amount }">

			<MvASSIGN NAME = "l.pos" VALUE = "{ l.pos + 1 }">
		</MvWHILE>

		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'SHIP', '', g.Basket:order_id $ ' ' $ l.ship_total ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'AUTH' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'AUTH', '', g.Basket:order_id $ ' ' $ g.Order:total ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_Screen" PARAMETERS = "module var, screen" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.screen EQ 'AFAD' }">
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'AFAE', '' ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'AFED' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'AFAE', '' ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'ATTR' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'PATR', g.Product_Code ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'UATR' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'UATR', g.Product_Code ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'INVC' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'INVC', g.Order:id ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'SFNT' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'SFNT', g.Store:code ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'SRCH' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'SRCH', g.Search ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'PLST' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'PLST', '' ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'CTGY' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'CTGY', g.Category_Code ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'PROD' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'PROD', g.Product_Code ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'BASK' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'BASK', '' ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'OINF' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'OINF', '' ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'OUSL' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'OUSL', g.Basket:order_id $ ' ' $ g.Product_Code ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'OSEL' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'OSEL', g.Basket:order_id ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'OPAY' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'OPAY', g.Basket:order_id ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'LOGN' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'LOGN', '' ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'ACAD' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'ACNT', g.Customer_ShipEmail ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'ACED' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( '', 'ACNT', g.Customer_ShipEmail ) }">
	<MvELSEIF EXPR = "{ l.screen EQ 'POUT' }">	
		<MvFUNCTIONRETURN VALUE = "{ MALF_LogActivity( 'POUT', '', g.Product_Code $ ' ' $ g.Quantity ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_UIException" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MALF_LogActivity" PARAMETERS = "action, screen, parameters" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT g.MALF_Loaded }">
		<MvASSIGN NAME = "g.MALF_Loaded"	VALUE = 1>

		<MvIF EXPR = "{ NOT MALF_Load( g.MALF ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.remote_host" VALUE = "{ s.remote_host }">
	<MvASSIGN NAME = "l.store" VALUE = "{ '"' $ g.Store:code $ '"' }">

	<MvASSIGN NAME = "l.session_id" VALUE = "{ g.Session_ID }">

	<MvIF EXPR = "{ timezone() LT 0 }">
		<MvASSIGN NAME = "l.timezone" VALUE = "{ '-0' $ ( 0 - timezone() ) $ '00' }">
	<MvELSE>
		<MvASSIGN NAME = "l.timezone" VALUE = "{ '0' $ timezone() $ '00' }">
	</MvIF>

	<MvASSIGN NAME = "l.time" VALUE = "{ '[' $ padl( s.dyn_tm_mday, 2, '0' ) $ '/' $ s.dyn_stm_mon $ '/' $ s.dyn_tm_year $ ':' $
											   padl( s.dyn_tm_hour, 2, '0' ) $ ':' $ padl( s.dyn_tm_min, 2, '0' ) $ ':' $
											   padl( s.dyn_tm_sec, 2, '0' ) $ ' ' $ l.timezone $ ']' }">

	<MvIF EXPR = "{ len( l.action ) EQ 0 }">
		<MvASSIGN NAME = "l.action" VALUE = "-">
	</MvIF>

	<MvIF EXPR = "{ len( l.screen ) EQ 0 }">
		<MvASSIGN NAME = "l.screen" VALUE = "-">
	</MvIF>

	<MvIF EXPR = "{ len( l.parameters ) EQ 0 }">
		<MvASSIGN NAME = "l.parameters" VALUE = "{ '"-"' }">
	<MvELSE>
		<MvASSIGN NAME = "l.parameters" VALUE = "{ '"' $ l.parameters $ '"' }">
	</MvIF>

	<MvASSIGN NAME = "l.status" VALUE = 200>
	<MvASSIGN NAME = "l.bytes" VALUE = "-">

	<MvIF EXPR = "{ len( s.http_referer ) }">
		<MvASSIGN NAME = "l.referer" VALUE = "{ '"' $ s.http_referer $ '"' }">
	<MvELSE>
		<MvASSIGN NAME = "l.referer" VALUE = "{ '"-"' }">
	</MvIF>

	<MvASSIGN NAME = "l.user_agent" VALUE = "{ '"' $ s.http_user_agent $ '"' }">

	<MvEXPORT FILE = "{ g.MALF:logfile }"
			  FIELDS = "l.remote_host, l.store, l.session_id, l.time, l.action,
						l.screen, l.parameters, l.status, l.bytes, l.referer, l.user_agent"
			  DELIMITER = " ">
	<MvIF EXPR = "{ g.MvEXPORT_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-LOG-MLF-00002', g.MvEXPORT_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT MALF_Load( l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml,	'File',	l.settings:logfile ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvIF EXPR = "{ NOT MALF_Update( l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-LOG-MLF-00007', 'MALF Configuration updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "MALF_Load" PARAMETERS = "malf var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "MALF"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'MALF' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-LOG-MLF-00003', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.malf:logfile" 	VALUE = "{ MALF.d.logfile }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "MALF">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MALF_Insert" PARAMETERS = "malf var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'MALF
						  ( logfile )
						  VALUES
						  ( ? )' }"
			 FIELDS	= "l.malf:logfile">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-LOG-MLF-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MALF_Update" PARAMETERS = "malf var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'MALF
						  SET
							logfile		= ?' }"
			 FIELDS	= "l.malf:logfile">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-LOG-MLF-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

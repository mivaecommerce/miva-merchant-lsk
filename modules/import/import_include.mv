<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-IMP-INC-
| Next Error Code: 1    
|
</MvCOMMENT>

<MvCOMMENT>
|
| Validation Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Validate_Code" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ len( l.field ) EQ 0 }">
        <MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field ) }">
        <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field \'' $ l.field $ '\'.  ' $ g.Validation_Message ) }">
        <MvFUNCTIONRETURN VALUE = 0>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Login" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ len( l.field ) EQ 0 }">
        <MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Login( l.field ) }">
        <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field \'' $ l.field $ '\'.  ' $ g.Validation_Message ) }">
        <MvFUNCTIONRETURN VALUE = 0>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_String" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ len( l.field ) EQ 0 AND l.required }">
        <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
        <MvFUNCTIONRETURN VALUE = 0>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Email" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ len( l.field ) EQ 0 }">
        <MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Email( l.field ) }">
        <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field \'' $ l.field $ '\'.  ' $ g.Validation_Message ) }">
        <MvFUNCTIONRETURN VALUE = 0>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Float" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ l.required }">
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_FloatingPoint_Required( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_FloatingPoint_Optional( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Weight" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.record">
    	<MvMEMBER NAME = "{ l.column:field }">
    </MvREFERENCEARRAY>

    <MvASSIGN NAME = "l.field" VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ l.required }">
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Weight_Required( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Weight_Optional( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Currency" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvCOMMENT>
	|
	| Strip commonly used currency formatting characters from the field
	|
	</MvCOMMENT>

	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, '$', '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, '¥', '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, '£', '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, asciichar( 128 ), '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, ',', '' ) }">

    <MvIF EXPR = "{ l.required }">
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Currency_NonNegative_Required( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Currency_NonNegative_Optional( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Price" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.record">
		<MvMEMBER NAME = "{ l.column:field }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.field" VALUE = "{ trim( l.field ) }">

	<MvCOMMENT>
	|
	| Strip commonly used currency formatting characters from the field
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field" VALUE = "{ glosub( l.field, '$', '' ) }">
	<MvASSIGN NAME = "l.field" VALUE = "{ glosub( l.field, '¥', '' ) }">
	<MvASSIGN NAME = "l.field" VALUE = "{ glosub( l.field, '£', '' ) }">
	<MvASSIGN NAME = "l.field" VALUE = "{ glosub( l.field, asciichar( 128 ), '' ) }">
	<MvASSIGN NAME = "l.field" VALUE = "{ glosub( l.field, ',', '' ) }">

	<MvIF EXPR = "{ l.required }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_NonNegative_Required( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_NonNegative_Optional( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Integer" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ l.required }">
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Required( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Optional( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Integer_NonNegative" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ l.required }">
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Int_Or_D" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

    <MvIF EXPR = "{ len( l.field ) EQ 0 }">
        <MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSEIF EXPR = "{ tolower( l.field ) EQ 'default' }">
        <MvASSIGN NAME = "l.field" VALUE = "{ l.column:default }">
        <MvIF EXPR = "{ l.column:related_field }">
            <MvASSIGN NAME = "l.record" MEMBER = "{ l.column:related_field }" VALUE = "{ l.column:related_default }">
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber( l.field ) }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        <MvELSE>
            <MvIF EXPR = "{ l.column:related_field }">
                <MvASSIGN NAME = "l.record" MEMBER = "{ l.column:related_field }" VALUE = 0>
            </MvIF>
        </MvIF>
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Bool" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

    <MvIF EXPR = "{ len( l.value ) EQ 0 }">
        <MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ ( l.value EQ 'no' ) OR ( l.value EQ 'false' ) OR ( ( 'x' $ l.value ) EQ 'x0' ) }">
            <MvASSIGN NAME = "l.field" VALUE = 0>
        <MvELSEIF EXPR = "{ ( l.value EQ 'yes' ) OR ( l.value EQ 'true' ) OR ( ( 'x' $ l.value ) EQ 'x1' ) }">
            <MvASSIGN NAME = "l.field" VALUE = 1>
        <MvELSE>
            <MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field contains an unrecognized value.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF> 
    </MvIF> 

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Bool_Or_D" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

    <MvIF EXPR = "{ len( l.value ) EQ 0 }">
        <MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    <MvELSE>
        <MvIF EXPR = "{ ( l.value EQ 'no' ) OR ( l.value EQ 'false' ) OR ( ( 'x' $ l.value ) EQ 'x0' ) }">
            <MvASSIGN NAME = "l.field" VALUE = "n">
        <MvELSEIF EXPR = "{ ( l.value EQ 'yes' ) OR ( l.value EQ 'true' ) OR ( ( 'x' $ l.value ) EQ 'x1' ) }">
            <MvASSIGN NAME = "l.field" VALUE = "y">
        <MvELSEIF EXPR = "{ l.value EQ 'default' }">
            <MvASSIGN NAME = "l.field" VALUE = "d">
        <MvELSE>
            <MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field contains an unrecognized value.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF> 
    </MvIF> 

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_List" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

	<MvIF EXPR = "{ ISNULL l.value }">
		<MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.values"			VALUE = "{ gettoken( l.column:validation, ':', 2 ) }">
	<MvASSIGN NAME = "l.results"		VALUE = "{ gettoken( l.column:validation, ':', 3 ) }">

	<MvASSIGN NAME = "l.pos"			VALUE = 1>
	<MvASSIGN NAME = "l.pos_value"		VALUE = "{ tolower( trim( gettoken( l.values , ',', l.pos ) ) ) }">
	
	<MvWHILE EXPR = "{ NOT ISNULL l.pos_value }">
		<MvIF EXPR = "{ l.value EQ l.pos_value }">
			<MvASSIGN NAME = "l.field"	VALUE = "{ trim( gettoken( l.results, ',', l.pos ) ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.pos"		VALUE = "{ l.pos + 1 }">
		<MvASSIGN NAME = "l.pos_value"	VALUE = "{ tolower( trim( gettoken( l.values, ',', l.pos ) ) ) }">
	</MvWHILE>

	<MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field must be one of: ' $ l.values $ '.' ) }">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION> 

<MvFUNCTION NAME = "Validate_TimeT" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
    <MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
    <MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

	<MvIF EXPR = "{ ISNULL l.value }">
		<MvIF EXPR = "{ l.required }">
            <MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Straight numeric values are considered a raw time_t and passed through as-is
	| Other values are parsed as MM/DD/YYYY HH:MM:SS, with the time being optional
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT isdigit( l.value ) }">
		<MvASSIGN NAME = "l.date"		VALUE = "{ trim( gettoken( l.value, ' ', 1 ) ) }">
		<MvASSIGN NAME = "l.time"		VALUE = "{ trim( gettoken( l.value, ' ', 2 ) ) }">

		<MvASSIGN NAME = "l.year"		VALUE = "{ gettoken( l.date, '/', 3 ) }">
		<MvIF EXPR = "{ l.year LT 100 }">
			<MvASSIGN NAME = "l.year"	VALUE = "{ l.year + 2000 }">
		</MvIF>

		<MvASSIGN NAME = "l.value"		VALUE = "{ mktime_t( l.year, gettoken( l.date, '/', 1 ), gettoken( l.date, '/', 2 ),
															 gettoken( l.time, ':', 1 ), gettoken( l.time, ':', 2 ), gettoken( l.time, ':', 3 ),
															 g.Merchant_Local_Timezone ) }">
		<MvIF EXPR = "{ l.value LT 0 }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field must be a valid date/time in the format MM/DD/YYYY HH:MM:SS' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.field"		VALUE = "{ l.value }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION> 

<MvFUNCTION NAME = "Validate_Field" PARAMETERS = "session var, record var, run_data var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.type"	VALUE = "{ gettoken( l.column:validation, ':', 1 ) }">

    <MvIF EXPR = "{ l.type EQ 'code' }">				<MvFUNCTIONRETURN VALUE = "{ Validate_Code( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'login' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Login( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'string' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_String( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'float' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Float( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'currency' }">		<MvFUNCTIONRETURN VALUE = "{ Validate_Currency( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'price' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Price( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'weight' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Weight( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'bool' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Bool( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'dbool' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Bool_Or_D( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'integer' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Integer( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'integer_nonneg' }">	<MvFUNCTIONRETURN VALUE = "{ Validate_Integer_NonNegative( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'int_or_d' }">		<MvFUNCTIONRETURN VALUE = "{ Validate_Int_Or_D( l.session, l.record, l.column, l.required ) }">
    <MvELSEIF EXPR = "{ l.type EQ 'email' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Email( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'list' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_List( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'time_t' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_TimeT( l.session, l.record, l.column, l.required ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Record_Skip( l.session, 'unknown validation type for ' $ l.column:name $ ' field.' ) }">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Set_Field_Default" PARAMETERS = "session var, record var, run_data var, column var" STANDARDOUTPUTLEVEL = "">
    <MvIF EXPR = "{ len( l.column:default ) NE 0 }">
        <MvREFERENCE NAME = "l.field" VARIABLE = "{ 'l.record:' $ l.column:field }">

        <MvIF EXPR = "{ NOT l.column:present }">
            <MvASSIGN NAME = "l.field" VALUE = "{ l.column:default }">
        <MvELSEIF EXPR = "{ len( l.field ) EQ 0 }">
            <MvASSIGN NAME = "l.field" VALUE = "{ l.column:default }">
        </MvIF>
    </MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Optional_Code" PARAMETERS = "code" STANDARDOUTPUTLEVEL = "">
    <MvIF EXPR = "{ NOT ISNULL l.code }">
        <MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].Validate_Code( l.code ) }">
    </MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Miscellaneous Utility Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Create_Columns_Present" PARAMETERS = "import var, columns_present var" STANDARDOUTPUTLEVEL = "">
    <MvASSIGN NAME = "l.columns_present"            VALUE = "">
    <MvFOREACH ITERATOR = "l.field" ARRAY = "l.import:map" INDEX = "l.pos">
        <MvIF EXPR = "{ len( l.field ) }">
            <MvASSIGN NAME = "l.columns_present" MEMBER = "{ l.field }" VALUE = "{ l.pos }">
        </MvIF>
    </MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Add_Standard_Column" PARAMETERS = "columns var, field, name, header, required, default, validation" STANDARDOUTPUTLEVEL = "">
    <MvASSIGN       NAME = "l.column:field"         VALUE = "{ l.field }">
    <MvASSIGN       NAME = "l.column:name"          VALUE = "{ l.name }">
    <MvASSIGN       NAME = "l.column:header"        VALUE = "{ l.header }">
    <MvASSIGN       NAME = "l.column:required"      VALUE = "{ l.required }">
    <MvASSIGN       NAME = "l.column:default"       VALUE = "{ l.default }">
    <MvASSIGN       NAME = "l.column:validation"    VALUE = "{ l.validation }">

    <MvASSIGN       NAME = "l.column_pos"           VALUE = "{ miva_array_max( l.columns ) + 1 }">
    <MvREFERENCE    NAME = "l.columns"              INDEX = "{ l.column_pos }"      VARIABLE = "l.column">
</MvFUNCTION>

<MvFUNCTION NAME = "Add_Custom_Field_Column" PARAMETERS = "columns var, field var, module var" STANDARDOUTPUTLEVEL = "">
    <MvASSIGN       NAME = "l.column:field"         VALUE = "{ 'custom-' $ l.module:code $ '-' $ l.field:code }">
    <MvASSIGN       NAME = "l.column:name"          VALUE = "{ l.field:name }">
    <MvASSIGN       NAME = "l.column:header"        VALUE = "{ toupper( glosub( l.field:name, ' ', '_' ) ) }">
    <MvASSIGN       NAME = "l.column:required"      VALUE = 0>
    <MvASSIGN       NAME = "l.column:default"       VALUE = "">
    <MvASSIGN       NAME = "l.column:validation"    VALUE = "string">
    <MvASSIGN       NAME = "l.column:code"          VALUE = "{ l.field:code }">
    <MvASSIGN       NAME = "l.column:module"        VALUE = "{ l.module }">

    <MvASSIGN       NAME = "l.column_pos"           VALUE = "{ miva_array_max( l.columns ) + 1 }">
    <MvREFERENCE    NAME = "l.columns"              INDEX = "{ l.column_pos }"      VARIABLE = "l.column">
</MvFUNCTION>

<MvFUNCTION NAME = "Add_Status_Field" PARAMETERS = "fields var, code, prompt, initial" STANDARDOUTPUTLEVEL = "">
    <MvASSIGN       NAME = "l.field_pos"        VALUE = "{ miva_array_max( l.fields ) + 1 }">
    <MvREFERENCE    NAME = "l.field"            VARIABLE = "{ 'l.fields[' $ l.field_pos $ ']' }">
    <MvASSIGN       NAME = "l.field:code"       VALUE = "{ l.code }">
    <MvASSIGN       NAME = "l.field:prompt"     VALUE = "{ l.prompt }">
    <MvASSIGN       NAME = "l.field:initial"    VALUE = "{ l.initial }">
</MvFUNCTION>

<MvFUNCTION NAME = "Column_Map_Version" STANDARDOUTPUTLEVEL = "">
    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Column_Map_Upgrade" PARAMETERS = "import var, columns var, column_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.updated_map" VALUE = "">

	<MvIF EXPR = "{ l.import:config:map_version LT 1 }">
		<MvFOREACH ITERATOR = "l.map" ARRAY = "l.import:map" INDEX = "l.pos">
			<MvIF EXPR = "{ ( 'custom-' IN l.map ) NE 1 }">
				<MvASSIGN NAME = "l.updated_map" INDEX = "{ l.pos }" VALUE = "{ l.map }">

				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.field_code"		VALUE = "{ substring_var( l.map, 8, len_var( l.map ) - 7 ) }">
			<MvASSIGN NAME = "l.module_code"	VALUE = "">

			<MvCOMMENT>
			|
			| Traverse the array backwards to preserve original module of the selected map code
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.index"			VALUE = "{ l.column_count }">

			<MvWHILE EXPR = "{ l.index GT 0 }">
				<MvIF EXPR = "{ NOT ISNULL l.columns[ l.index ]:module AND strcasecmp( l.field_code, l.columns[ l.index ]:code ) EQ 0 }">
					<MvASSIGN NAME = "l.module_code"	VALUE = "{ l.columns[ l.index ]:module:code }">

					<MvWHILESTOP>
				</MvIF>

				<MvASSIGN NAME = "l.index" VALUE = "{ l.index - 1 }">
			</MvWHILE>

			<MvIF EXPR = "{ NOT ISNULL l.module_code }">	<MvASSIGN NAME = "l.updated_map" INDEX = "{ l.pos }" VALUE = "{ 'custom-' $ l.module_code $ '-' $ l.field_code }">
			<MvELSE>										<MvASSIGN NAME = "l.updated_map" INDEX = "{ l.pos }" VALUE = "{ l.map }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.updated_map }">
</MvFUNCTION>

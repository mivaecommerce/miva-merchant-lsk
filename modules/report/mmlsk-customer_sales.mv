<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2022 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-RPT-CUST-SALES-
| Next Error Code: 40   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-report_customer_sales">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Customer Sales Report">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0300">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "5.62">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Use this module to generate reports on sales to repeat customers.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "report">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:date_range"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:date_interval"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:display"				VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_chart"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_tabular"		VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_custom"			VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Fields" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:id }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Metric"				VALUE = "{ l.report:config:metric }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Customers_In"			VALUE = "{ l.report:config:customers_in }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Customers_PriceGroup"	VALUE = "{ l.report:config:customers_pricegroup }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Category"				VALUE = "{ l.report:config:category }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Product"				VALUE = "{ l.report:config:product }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Display_TopN"			VALUE = "{ l.report:config:display_topn }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Chart_TopN"			VALUE = "{ l.report:config:chart_topn }">
		<MvASSIGN NAME = "g.Report_CustomerSales_Export_TopN"			VALUE = "{ l.report:config:export_topn }">
	<MvELSE>
		<MvASSIGN NAME = "g.Report_CustomerSales_Metric"				VALUE = "gross">
		<MvASSIGN NAME = "g.Report_CustomerSales_Customers_In"			VALUE = 1>
		<MvASSIGN NAME = "g.Report_CustomerSales_Customers_PriceGroup"	VALUE = "">
		<MvASSIGN NAME = "g.Report_CustomerSales_Category"				VALUE = "">
		<MvASSIGN NAME = "g.Report_CustomerSales_Product"				VALUE = "">
		<MvASSIGN NAME = "g.Report_CustomerSales_Display_TopN"			VALUE = 10>
		<MvASSIGN NAME = "g.Report_CustomerSales_Chart_TopN"			VALUE = 10>
		<MvASSIGN NAME = "g.Report_CustomerSales_Export_TopN"			VALUE = 10>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "metric,customers,category,product,topn">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'metric' }">			<MvFUNCTIONRETURN VALUE = "<b>Compare Using:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'customers' }">	<MvFUNCTIONRETURN VALUE = "Customers:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'category' }">	<MvFUNCTIONRETURN VALUE = "Category:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'product' }">		<MvFUNCTIONRETURN VALUE = "Product:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">		<MvFUNCTIONRETURN VALUE = "<b>Display:</b>">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'metric' }">
		<select name="Report_CustomerSales_Metric">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'gross',	g.Report_CustomerSales_Metric, 'Gross Revenue' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'orders',	g.Report_CustomerSales_Metric, 'Number of Orders' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'units',	g.Report_CustomerSales_Metric, 'Units Sold' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'customers' }">
		<span style="white-space: nowrap;">
			<select name="Report_CustomerSales_Customers_In">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 1, g.Report_CustomerSales_Customers_In, 'In' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 0, g.Report_CustomerSales_Customers_In, 'Not In' ) }">
			</select>
			<span style="position: relative; vertical-align: middle;">
				Price Group:
				<input type="text" size="20" id="Report_CustomerSales_Customers_PriceGroup" name="Report_CustomerSales_Customers_PriceGroup" value="{ encodeentities( g.Report_CustomerSales_Customers_PriceGroup ) }">
				<a href="JavaScript:PriceGroupLookupDialog( 'Report_CustomerSales_Customers_PriceGroup' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
			</span>
		</span>
	<MvELSEIF EXPR = "{ l.field_id EQ 'category' }">
		<input type="text" size="20" id="Report_CustomerSales_Category" name="Report_CustomerSales_Category" value="{ encodeentities( g.Report_CustomerSales_Category ) }">
		<a href="JavaScript:CategoryLookupDialog( 'Report_CustomerSales_Category' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
	<MvELSEIF EXPR = "{ l.field_id EQ 'product' }">
		<input type="text" size="20" id="Report_CustomerSales_Product" name="Report_CustomerSales_Product" value="{ encodeentities( g.Report_CustomerSales_Product ) }">
		<a href="JavaScript:ProductLookupDialog( 'Report_CustomerSales_Product' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">
		<input type="text" size="5" name="Report_CustomerSales_Display_TopN" value="{ encodeentities( g.Report_CustomerSales_Display_TopN ) }"> customer(s) on the main screen<br>
		<input type="text" size="5" name="Report_CustomerSales_Chart_TopN" value="{ encodeentities( g.Report_CustomerSales_Chart_TopN ) }"> customer(s) on the expanded chart<br>
		<input type="text" size="5" name="Report_CustomerSales_Export_TopN" value="{ encodeentities( g.Report_CustomerSales_Export_TopN ) }"> customer(s) in exported data
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Validate" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Report_CustomerSales_Metric"				VALUE = "{ trim( g.Report_CustomerSales_Metric ) }">
	<MvASSIGN NAME = "g.Report_CustomerSales_Customers_In"			VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Report_CustomerSales_Customers_In ) }">
	<MvASSIGN NAME = "g.Report_CustomerSales_Customers_PriceGroup"	VALUE = "{ trim( g.Report_CustomerSales_Customers_PriceGroup ) }">
	<MvASSIGN NAME = "g.Report_CustomerSales_Category"				VALUE = "{ trim( g.Report_CustomerSales_Category ) }">
	<MvASSIGN NAME = "g.Report_CustomerSales_Product"				VALUE = "{ trim( g.Report_CustomerSales_Product ) }">
	<MvASSIGN NAME = "g.Report_CustomerSales_Display_TopN"			VALUE = "{ trim( g.Report_CustomerSales_Display_TopN ) }">
	<MvASSIGN NAME = "g.Report_CustomerSales_Chart_TopN"			VALUE = "{ trim( g.Report_CustomerSales_Chart_TopN ) }">
	<MvASSIGN NAME = "g.Report_CustomerSales_Export_TopN"			VALUE = "{ trim( g.Report_CustomerSales_Export_TopN ) }">

	<MvIF EXPR = "{ ( g.Report_CustomerSales_Metric NE 'gross' ) AND
					( g.Report_CustomerSales_Metric NE 'orders' ) AND
					( g.Report_CustomerSales_Metric NE 'units' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', '', 'Please select a metric' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Report_CustomerSales_Customers_PriceGroup }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( g.Report_CustomerSales_Customers_PriceGroup, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_CustomerSales_Customers_PriceGroup', 'Price Group \'' $ g.Report_CustomerSales_Customers_PriceGroup $ '\' not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Report_CustomerSales_Category }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( g.Report_CustomerSales_Category, l.category ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_CustomerSales_Category', 'Category \'' $ g.Report_CustomerSales_Category $ '\' not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT CustomerSales_Validate_CategoryHeirarchy( l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_CustomerSales_Category', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Report_CustomerSales_Product }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( g.Report_CustomerSales_Product, l.product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_CustomerSales_Category', 'Product \'' $ g.Report_CustomerSales_Product $ '\' not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_CustomerSales_Display_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_CustomerSales_Display_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_CustomerSales_Chart_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_CustomerSales_Chart_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_CustomerSales_Export_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_CustomerSales_Export_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Update" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:config:metric"				VALUE = "{ g.Report_CustomerSales_Metric }">
	<MvASSIGN NAME = "l.report:config:customers_in"			VALUE = "{ g.Report_CustomerSales_Customers_In }">
	<MvASSIGN NAME = "l.report:config:customers_pricegroup"	VALUE = "{ g.Report_CustomerSales_Customers_PriceGroup }">
	<MvASSIGN NAME = "l.report:config:category"				VALUE = "{ g.Report_CustomerSales_Category }">
	<MvASSIGN NAME = "l.report:config:product"				VALUE = "{ g.Report_CustomerSales_Product }">
	<MvASSIGN NAME = "l.report:config:display_topn"			VALUE = "{ g.Report_CustomerSales_Display_TopN }">
	<MvASSIGN NAME = "l.report:config:chart_topn"			VALUE = "{ g.Report_CustomerSales_Chart_TopN }">
	<MvASSIGN NAME = "l.report:config:export_topn"			VALUE = "{ g.Report_CustomerSales_Export_TopN }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Calculate_DateRange_All" PARAMETERS = "module var, report var, time_t_start var, time_t_end var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderDates"
				QUERY	= "{ 'SELECT
								MIN( orderdate ) AS min_orderdate,
								MAX( orderdate ) AS max_orderdate
							  FROM
								' $ g.Store_Table_Prefix $ 'Orders' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderDates.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderDates">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.time_t_start"	VALUE = "{ OrderDates.d.min_orderdate }">
	<MvASSIGN NAME = "l.time_t_end"		VALUE = "{ OrderDates.d.max_orderdate + 1 }">	<MvCOMMENT> Compensate for < end </MvCOMMENT>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderDates">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Run_Intervals" PARAMETERS = "module var, report var, time_t_start, time_t_end, intervals var, interval_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Delete_Report( l.report:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.query:topn"					VALUE = "{ max( l.report:config:display_topn, max( l.report:config:chart_topn, l.report:config:export_topn ) ) }">
	<MvASSIGN NAME = "l.query:time_t_start"			VALUE = "{ l.time_t_start }">
	<MvASSIGN NAME = "l.query:time_t_end"			VALUE = "{ l.time_t_end }">
	<MvASSIGN NAME = "l.query:pricegroup_in"		VALUE = "{ l.report:config:customers_in }">
	<MvASSIGN NAME = "l.query:customers"			VALUE = "">

	<MvIF EXPR = "{ ISNULL l.report:config:customers_pricegroup }">
		<MvASSIGN NAME = "l.query:pricegroup_id"	VALUE = 0>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( l.report:config:customers_pricegroup, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00002', 'Price Group \'' $ l.report:config:customers_pricegroup $ '\' not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.query:pricegroup_id"	VALUE = "{ l.pricegroup:id }">
	</MvIF>

	<MvASSIGN NAME = "l.result"			VALUE = 1>

	<MvIF EXPR = "{ NOT ISNULL l.report:config:product OR NOT ISNULL l.report:config:category }">
		<MvIF EXPR = "{ NOT CustomerSales_Create_Product_TempTable( l.query ) }">
			<MvASSIGN NAME = "l.result"	VALUE = 0>
		<MvELSEIF EXPR = "{ NOT ISNULL l.report:config:product }">
			<MvASSIGN NAME = "l.result"	VALUE = "{ CustomerSales_Populate_Product_TempTable_Product( l.query, l.report:config:product ) }">
		<MvELSEIF EXPR = "{ NOT ISNULL l.report:config:category }">
			<MvASSIGN NAME = "l.result"	VALUE = "{ CustomerSales_Populate_Product_TempTable_Category( l.query, l.report:config:category ) }">
		</MvIF>

		<MvIF EXPR = "{ l.result }">
			<MvASSIGN NAME = "l.result" VALUE = "{ CustomerSales_Index_Product_TempTable( l.query ) }">
		</MvIF>
	</MvIF>
			
	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ CustomerSales_Create_Order_TempTable( l.query ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ CustomerSales_Create_Customer_TempTable( l.query ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ CustomerSales_Run_Intervals( l.report, l.query, l.intervals, l.interval_count ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ISNULL l.query:product_temp_table }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ l.result AND CustomerSales_Drop_TempTable( l.query:product_temp_table ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.query:order_temp_table }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ l.result AND CustomerSales_Drop_TempTable( l.query:order_temp_table ) }">	
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.query:customer_temp_table }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ l.result AND CustomerSales_Drop_TempTable( l.query:customer_temp_table ) }">	
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Format_Vertical_Label" PARAMETERS = "module var, report var, set_id, label" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.label ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.label ROUND 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Display" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.customer_count"			VALUE = "{ miva_array_elements( l.report:last_state:customers ) }">
	<MvASSIGN NAME = "l.color_count"			VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_Palette( l.colors ) }">

	<MvIF EXPR = "{ l.customer_count EQ 0 }">
		<i>Not Available</i>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<table style="border-collapse: collapse; font-size: small; font-family: Veradna, Arial, Helvetica, sans-serif;" cellspacing="0" cellpadding="0">
		<thead style="font-weight: bold;">
			<tr style="height: 20px;">
				<td>&nbsp;</td>
				<td align="center">
					<MvIF EXPR = "{ l.report:last_state:setsize EQ 1 }">
						<MvIF EXPR = "{ l.report:date_group EQ 'H' }">		1 Hour
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'D' }">	1 Day
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'W' }">	1 Week
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'M' }">	1 Month
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'Y' }">	1 Year
						</MvIF>
					<MvELSE>
						<MvEVAL EXPR = "{ encodeentities( l.report:last_state:setsize ) }">
						
						<MvIF EXPR = "{ l.report:date_group EQ 'H' }">		Hours
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'D' }">	Days
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'W' }">	Weeks
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'M' }">	Months
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'Y' }">	Years
						</MvIF>
					</MvIF>
				</td>
				<td align="right">
					<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }"> Total Gross Sales
					<MvELSEIF EXPR = "{ l.report:config:metric EQ 'orders' }"> Total Orders
					<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }"> Total Units Sold
					</MvIF>
				</td>
			</tr>
		</thead>

		<tbody>
		<MvASSIGN NAME = "l.customer_pos"		VALUE = 1>
		<MvASSIGN NAME = "l.color_pos"			VALUE = 1>
		<MvWHILE EXPR = "{ ( l.customer_pos LE l.customer_count ) AND ( l.customer_pos LE l.report:config:display_topn ) }">
			<MvASSIGN NAME = "l.rgb_color"		VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_HexToRGB( l.colors[ l.color_pos ] ) }">
			<MvASSIGN NAME = "l.image_source"	VALUE = "{ g.json_nosessionurl																		$
														   'ST=admin'																				$
														   '&Store_Code='	$ encodeattribute( g.Store:code )										$
														   '&Function=ReportData_Graph_Line'														$
														   '&Report_ID='	$ encodeattribute( l.report:id )										$
														   '&Smoothing=0'																			$
														   '&Width=100'																				$ 
														   '&Height=20'																				$
														   '&Set_IDs='		$ encodeattribute( l.report:last_state:customers[ l.customer_pos ]:id )	$
														   '&Colors='		$ encodeattribute( l.rgb_color )										$
														   '&Background=255,255,255' }">

			<tr style="height: 20px;">
				<td><MvEVAL EXPR = "{ encodeentities( l.report:last_state:customers[ l.customer_pos ]:login ) }"></td>
				<td align="center" style="padding-left: 5px; padding-right: 5px;">
					<a href="#" onclick="{ 'Report_Display_Chart( \'' $ [ g.Module_Admin ].JavaScriptEncode( g.Store:code ) $ '\', ' $ int( l.report:id ) $ ', true, ' $ int( l.report:last_state:customers[ l.customer_pos ]:id ) $ ' ); return false' }">
						<MvEVAL EXPR = "{ [ g.Module_Feature_RPT_UT ].Report_Draw_DelayedImage( l.image_source, 100, 20, l.rgb_color ) }">
					</a>
				</td>
				<td align="right"><MvEVAL EXPR = "{ ReportModule_Format_Vertical_Label( l.module, l.report, l.report:last_state:customers[ l.customer_pos ]:id, l.report:last_state:customers[ l.customer_pos ]:report_total ) }"></td>
			</tr>

			<MvASSIGN NAME = "l.customer_pos"	VALUE = "{ l.customer_pos + 1 }">
			<MvASSIGN NAME = "l.color_pos"		VALUE = "{ l.color_pos + 1 }">

			<MvIF EXPR = "{ l.color_pos GT l.color_count }">
				<MvASSIGN NAME = "l.color_pos"	VALUE = 1>
			</MvIF>
		</MvWHILE>
		</tbody>
	</table>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Chart_Type" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "canvas_chart">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Canvas_Chart_Definition" PARAMETERS = "module var, report var, chart var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.color_pos"						VALUE = 0>
	<MvASSIGN NAME = "l.color_count"					VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_Palette( l.colors ) }">

	<MvFOREACH INDEX = "l.customer_pos" ITERATOR = "l.customer" ARRAY = "l.report:last_state:customers">
		<MvIF EXPR = "{ l.customer_pos GT l.report:config:chart_topn }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvIF EXPR = "{ ++l.color_pos GT l.color_count }">
			<MvASSIGN NAME = "l.color_pos"				VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.dataset:set_id"				VALUE = "{ l.customer:id }">
		<MvASSIGN NAME = "l.dataset:color"				VALUE = "{ l.colors[ l.customer_pos ] }">
		<MvASSIGN NAME = "l.dataset:name"				VALUE = "{ l.customer:login }">

		<MvASSIGN NAME = "l.dataset:force_visible"		VALUE = "{ g.Report_Chart_Param EQ l.customer:id }">

		<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
			<MvASSIGN NAME = "l.dataset:data_type"		VALUE = "currency">
		<MvELSE>
			<MvASSIGN NAME = "l.dataset:data_type"		VALUE = "numeric">
		</MvIF>

		<MvASSIGN NAME = "l.chart:dataset_count"		VALUE = "{ miva_array_insert( l.chart:datasets, l.dataset, -1 ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Canvas_Output_LabelFormat_JavaScript" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Tabular_Definition" PARAMETERS = "module var, report var, definition var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.definition"		VALUE = "">

	<MvASSIGN NAME = "l.customer_count"	VALUE = "{ min( miva_array_elements( l.report:last_state:customers ), l.report:config:export_topn ) }">
	<MvASSIGN NAME = "l.label_count"	VALUE = "{ miva_splitstring( 'CUSTOMER_LOGIN,CUSTOMER_BUSINESS_ACCOUNT,CUSTOMER_CREATED_TIMESTAMP,CUSTOMER_LAST_UPDATED_TIMESTAMP,CUSTOMER_LAST_LOGIN_TIMESTAMP,
																	  CUSTOMER_SHIPPING_FIRST_NAME,CUSTOMER_SHIPPING_LAST_NAME,CUSTOMER_SHIPPING_ADDRESS,CUSTOMER_SHIPPING_ADDRESS2,
																	  CUSTOMER_SHIPPING_CITY,CUSTOMER_SHIPPING_STATE,CUSTOMER_SHIPPING_ZIP,CUSTOMER_SHIPPING_COUNTRY,
																	  CUSTOMER_SHIPPING_EMAIL,CUSTOMER_SHIPPING_PHONE,CUSTOMER_SHIPPING_FAX,CUSTOMER_SHIPPING_COMPANY,
																	  CUSTOMER_BILLING_FIRST_NAME,CUSTOMER_BILLING_LAST_NAME,CUSTOMER_BILLING_ADDRESS,CUSTOMER_BILLING_ADDRESS2,
																	  CUSTOMER_BILLING_CITY,CUSTOMER_BILLING_STATE,CUSTOMER_BILLING_ZIP,CUSTOMER_BILLING_COUNTRY,CUSTOMER_BILLING_EMAIL,
																	  CUSTOMER_BILLING_PHONE,CUSTOMER_BILLING_FAX,CUSTOMER_BILLING_COMPANY',
																	 ',', l.labels, 'trim' ) }">
	<MvASSIGN NAME = "l.member_count"	VALUE = "{ miva_splitstring( 'login,account_title,dt_created,dt_updated,dt_login,ship_fname,ship_lname,ship_addr1,ship_addr2,ship_city,ship_state,
																	  ship_zip,ship_cntry,ship_email,ship_phone,ship_fax,ship_comp,bill_fname,bill_lname,bill_addr1,bill_addr2,bill_city,
																	  bill_state,bill_zip,bill_cntry,bill_email,bill_phone,bill_fax,bill_comp',
																	 ',', l.members, 'trim' ) }">

	<MvCOMMENT>
	|
	| Labels
	|
	</MvCOMMENT>

	<MvFOREACH INDEX = "l.label_pos" ITERATOR = "l.label" ARRAY = "l.labels" COUNT = "{ l.label_count }">
		<MvASSIGN NAME = "l.column:type"											VALUE = "values">
		<MvASSIGN NAME = "l.column:start"											VALUE = 1>
		<MvASSIGN NAME = "l.column:values"		INDEX = 1							VALUE = "{ l.label }">

		<MvFOREACH INDEX = "l.customer_pos" ITERATOR = "l.customer" ARRAY = "l.report:last_state:customers" COUNT = "{ l.customer_count }">
			<MvASSIGN NAME = "l.column:values"	INDEX = "{ 1 + l.customer_pos }"	VALUE = "{ miva_variable_value( 'l.customer:' $ l.members[ l.label_pos ] ) }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.column_count"											VALUE = "{ miva_array_insert_var( l.definition:columns, l.column, -1 ) }">
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Partial Row for the ReportData timestamps, starting after the customer columns.  We just use the set_id from the first customer for this
	| as all the start/end dates will be the same.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.customer_count GE 1 }">
		<MvASSIGN NAME = "l.row:type"	VALUE = "reportdata_date">
		<MvASSIGN NAME = "l.row:start"	VALUE = "{ l.column_count + 1 }">
		<MvASSIGN NAME = "l.row:set_id"	VALUE = "{ l.report:last_state:customers[ 1 ]:id }">

		<MvASSIGN NAME = "l.row_count"	VALUE = "{ miva_array_insert_var( l.definition:rows, l.row, -1 ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Data
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.customer" ARRAY = "l.report:last_state:customers" COUNT = "{ l.customer_count }">
		<MvASSIGN NAME = "l.row:type"	VALUE = "reportdata">
		<MvASSIGN NAME = "l.row:start"	VALUE = "{ l.column_count + 1 }">
		<MvASSIGN NAME = "l.row:set_id"	VALUE = "{ l.customer:id }">

		<MvASSIGN NAME = "l.row_count"	VALUE = "{ miva_array_insert_var( l.definition:rows, l.row, -1 ) }">
	</MvFOREACH>

	<MvCOMMENT>
	|
	| If there are more than 256 datapoints, rotate the output to be vertical to avoid
	| issues with Excel
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:last_state:setsize GT 256 }">
		<MvASSIGN NAME = "l.temp"				VALUE = "{ l.definition:rows }">
		<MvASSIGN NAME = "l.definition:rows"	VALUE = "{ l.definition:columns }">
		<MvASSIGN NAME = "l.definition:columns"	VALUE = "{ l.temp }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Provision_Settings" PARAMETERS = "module var, report var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:config:display_topn"			VALUE = 10>
	<MvASSIGN NAME = "l.report:config:chart_topn"			VALUE = 10>
	<MvASSIGN NAME = "l.report:config:export_topn"			VALUE = 10>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R', l.provide_xml, 'Metric',		l.report:config:metric,		'gross,orders,units', 'gross,orders,units' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o', l.provide_xml, 'Category',		l.report:config:category )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o', l.provide_xml, 'Product',		l.report:config:product )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Display_TopN',	l.report:config:display_topn )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Chart_TopN',	l.report:config:chart_topn )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Export_TopN',	l.report:config:export_topn ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'PriceGroup' ) }">
		<MvASSIGN NAME = "l.report:config:customers_in"			VALUE = 1>
		<MvASSIGN NAME = "l.report:config:customers_pricegroup"	VALUE = "">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_List(			l.provide_xml:tags:PriceGroup[ 1 ],	'customers',	l.report:config:customers_in, 'in,out', '1,0' ) OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',	l.provide_xml,						'PriceGroup',	l.report:config:customers_pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.report:config:customers_pricegroup }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( l.report:config:customers_pricegroup, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Price Group \'' $ l.report:config:customers_pricegroup $ '\' does not exist' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.report:config:category }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.report:config:category, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category \'' $ l.report:config:category $ '\' does not exist' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT CustomerSales_Validate_CategoryHeirarchy( l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.report:config:product }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.report:config:product, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product \'' $ l.report:config:product $ '\' does not exist' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Temporary Table Functions
|
| This report uses the following temporary tables:
|
|	Product: sNN_TempCSRPNN ( code ): query:product_temp_table (may be NULL)
|		Contains the codes of every product for which report data is generated, if restricting output to a category or product.
|		Does not exist if we are not restricting output based on products.
|
|	Order: sNN_TempCSRONN ( id, cust_id, orderdate, total ): query:order_temp_table (always present)
|		Contains the ID and date of every order within the overall date range subject to the following restrictions (if configured):
|			Customer in/out of price group
|			Containing at least one product if restricting by product
|
|	Customer: sNN_TempCSRCNN ( id ): query:customer_temp_table (always present)
|		Contains the ID of customers meeting the Top-N restriction within the overall date range
|
| There is some overlap between the temporary tables because the whittling-down of entries from one temporary table to the next is
| done progressively in an attempt to increase efficiency.  For example, the Order temporary table is created before the Customer
| temporary table to make calculating the final set of customers (subject to Top-N) more efficient, and the two temporary tables are
| then used in conjunction when calculating the per-interval data.
|
</MvCOMMENT>

<MvFUNCTION NAME = "CustomerSales_Create_Product_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"						VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.query:product_temp_table"	VALUE = "{ g.Store_Table_Prefix $ 'TempCSRP' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:product_temp_table $ '
							  (
								code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) $ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"					VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Product_TempTable_Product" PARAMETERS = "query var, product_code" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:product_temp_table $ ' ( code ) VALUES ( ? )' }"
			 FIELDS	= "l.product_code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00028', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Product_TempTable_Category" PARAMETERS = "query var, category_code" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.category_code, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00003', 'Category \'' $ l.category_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerSales_Build_CategoryHeirarchy_SQL( l.category:id, l.category_sql ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:product_temp_table $ '
						  SELECT DISTINCT
							p.code
						  FROM
							' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
							' $ g.Store_Table_Prefix $ 'Products p
						  WHERE
							p.id = cxp.product_id AND
							' $ l.category_sql }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Index_Product_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ l.query:product_temp_table $ '_1 ON ' $ l.query:product_temp_table $ ' ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Validate_CategoryHeirarchy" PARAMETERS = "category_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count"	VALUE = 1>
	<MvFUNCTIONRETURN VALUE = "{ CustomerSales_Validate_Category_Children( l.category_id, l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Validate_Category_Children" PARAMETERS = "category_id, count var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child" ARRAY = "l.children" COUNT = "{ [ g.Module_Library_DB ].CategoryList_Load_Parent( l.category_id, l.children ) }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ l.count + 1 }">

		<MvIF EXPR = "{ l.count GT 100 }">
			<MvASSIGN NAME = "g.Validation_Message" VALUE = "The specified category hierarchy contains more than 100 categories.  Please select a hierarchy with fewer categories.">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT CustomerSales_Validate_Category_Children( l.child:id, l.count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Build_CategoryHeirarchy_SQL" PARAMETERS = "category_id, sql var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id_count"				VALUE = 1>
	<MvASSIGN NAME = "l.ids"		INDEX = 1	VALUE = "{ l.category_id }">

	<MvIF EXPR = "{ NOT CustomerSales_Add_Category_Children( l.category_id, l.ids, l.id_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.sql"					VALUE = "{ 'cxp.cat_id IN ( ' $ int( l.ids[ 1 ] ) }">
	<MvASSIGN NAME = "l.id_pos"					VALUE = 2>
	<MvWHILE EXPR = "{ l.id_pos LE l.id_count }">
		<MvASSIGN NAME = "l.sql"				VALUE = "{ l.sql $ ', ' $ int( l.ids[ l.id_pos ] ) }">
		<MvASSIGN NAME = "l.id_pos"				VALUE = "{ l.id_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.sql"					VALUE = "{ l.sql $ ' )' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Add_Category_Children" PARAMETERS = "category_id, ids var, id_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.child_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.child_count"		VALUE = "{ [ g.Module_Library_DB ].CategoryList_Load_Parent( l.category_id, l.children ) }">

	<MvWHILE EXPR = "{ l.child_pos LE l.child_count }">
		<MvASSIGN NAME = "l.id_count"								VALUE = "{ l.id_count + 1 }">
		<MvASSIGN NAME = "l.ids"		INDEX = "{ l.id_count }"	VALUE = "{ l.children[ l.child_pos ]:id }">

		<MvIF EXPR = "{ l.id_count GT 100 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00008', 'The specified category hierarchy contains more than 100 categories.  Please select a hierarchy with fewer categories.' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT CustomerSales_Add_Category_Children( l.children[ l.child_pos ]:id, l.ids, l.id_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.child_pos"		VALUE = "{ l.child_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Create_Order_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"						VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.query:order_temp_table"	VALUE = "{ g.Store_Table_Prefix $ 'TempCSRO' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:order_temp_table $ '
							  (
								id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
								cust_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
								orderdate	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
								total		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"					VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Order_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.select_query, 'o.id, o.cust_id, o.orderdate, o.total' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, g.Store_Table_Prefix $ 'Orders', 'o' ) }">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'o.orderdate >= ? AND o.orderdate < ?',
															   [ g.Module_Library_DB ].SQL_Query_Field( l.query:time_t_start ) $ ', ' $
															   [ g.Module_Library_DB ].SQL_Query_Field( l.query:time_t_end ) ) }">

	<MvIF EXPR = "{ NOT l.query:pricegroup_id }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'o.cust_id <> 0', '' ) }">
	<MvELSE>
		<MvIF EXPR = "{ l.query:pricegroup_in }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, g.Store_Table_Prefix $ 'PriceGroupXCustomer', 'pgxc' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'pgxc.pgrp_id = ? AND o.cust_id = pgxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.query:pricegroup_id ) ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.select_query, 'o', g.Store_Table_Prefix $ 'PriceGroupXCustomer', 'pgxc', 'pgxc.pgrp_id = ? AND pgxc.cust_id = o.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.query:pricegroup_id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'o.cust_id <> 0 AND pgxc.cust_id IS NULL', '' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.query:product_temp_table }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_DISTINCT( l.select_query ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, g.Store_Table_Prefix $ 'OrderItems', 'oi' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, l.query:product_temp_table, 'p' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'oi.order_id = o.id AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ), '' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.select_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.select_query, l.select_fields ) }">
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:order_temp_table $ ' ' $ l.select_sql }"
			 FIELDS	= "{ l.select_fields }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00016', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Index_Order_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ l.query:order_temp_table $ '_1 ON ' $ l.query:order_temp_table $ ' ( orderdate )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Create_Customer_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"						VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.query:customer_temp_table"	VALUE = "{ g.Store_Table_Prefix $ 'TempCSRC' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:customer_temp_table $ '
							  (
								id ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"					VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00029', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Insert_Customer_TempTable" PARAMETERS = "query var, id, total" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:customer_temp_table $ ' ( id ) VALUES ( ? )' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00030', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Register this customer in the persistent query customer information, so that it can be persisted for report display.
	| Only the columns we use in the report are copied, to avoid including sensitive information
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.query_customer"								VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.id, l.customer ) }">
		<MvASSIGN NAME = "l.query_customer:id"						VALUE = "{ l.id }">
		<MvASSIGN NAME = "l.query_customer:login"					VALUE = "{ '#' $ l.id }">
	<MvELSE>
		<MvASSIGN NAME = "l.query_customer:id"						VALUE = "{ l.customer:id }">
		<MvASSIGN NAME = "l.query_customer:login"					VALUE = "{ l.customer:login }">

		<MvIF EXPR = "{ l.customer:account_id }">
			<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].BusinessAccount_Load( l.customer:account_id, l.businessaccount ) }">
				<MvASSIGN NAME = "l.query_customer:account_title"	VALUE = "{ l.businessaccount:title }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.query_customer:dt_created"				VALUE = "{ l.customer:dt_created }">
		<MvASSIGN NAME = "l.query_customer:dt_updated"				VALUE = "{ l.customer:dt_updated }">
		<MvASSIGN NAME = "l.query_customer:dt_login"				VALUE = "{ l.customer:dt_login }">

		<MvASSIGN NAME = "l.query_customer:ship_fname"				VALUE = "{ l.customer:ship_fname }">
		<MvASSIGN NAME = "l.query_customer:ship_lname"				VALUE = "{ l.customer:ship_lname }">
		<MvASSIGN NAME = "l.query_customer:ship_addr1"				VALUE = "{ l.customer:ship_addr1 }">
		<MvASSIGN NAME = "l.query_customer:ship_addr2"				VALUE = "{ l.customer:ship_addr2 }">
		<MvASSIGN NAME = "l.query_customer:ship_city"				VALUE = "{ l.customer:ship_city }">
		<MvASSIGN NAME = "l.query_customer:ship_state"				VALUE = "{ l.customer:ship_state }">
		<MvASSIGN NAME = "l.query_customer:ship_zip"				VALUE = "{ l.customer:ship_zip }">
		<MvASSIGN NAME = "l.query_customer:ship_cntry"				VALUE = "{ l.customer:ship_cntry }">
		<MvASSIGN NAME = "l.query_customer:ship_email"				VALUE = "{ l.customer:ship_email }">
		<MvASSIGN NAME = "l.query_customer:ship_phone"				VALUE = "{ l.customer:ship_phone }">
		<MvASSIGN NAME = "l.query_customer:ship_fax"				VALUE = "{ l.customer:ship_fax }">
		<MvASSIGN NAME = "l.query_customer:ship_comp"				VALUE = "{ l.customer:ship_comp }">

		<MvASSIGN NAME = "l.query_customer:bill_fname"				VALUE = "{ l.customer:bill_fname }">
		<MvASSIGN NAME = "l.query_customer:bill_lname"				VALUE = "{ l.customer:bill_lname }">
		<MvASSIGN NAME = "l.query_customer:bill_addr1"				VALUE = "{ l.customer:bill_addr1 }">
		<MvASSIGN NAME = "l.query_customer:bill_addr2"				VALUE = "{ l.customer:bill_addr2 }">
		<MvASSIGN NAME = "l.query_customer:bill_city"				VALUE = "{ l.customer:bill_city }">
		<MvASSIGN NAME = "l.query_customer:bill_state"				VALUE = "{ l.customer:bill_state }">
		<MvASSIGN NAME = "l.query_customer:bill_zip"				VALUE = "{ l.customer:bill_zip }">
		<MvASSIGN NAME = "l.query_customer:bill_cntry"				VALUE = "{ l.customer:bill_cntry }">
		<MvASSIGN NAME = "l.query_customer:bill_email"				VALUE = "{ l.customer:bill_email }">
		<MvASSIGN NAME = "l.query_customer:bill_phone"				VALUE = "{ l.customer:bill_phone }">
		<MvASSIGN NAME = "l.query_customer:bill_fax"				VALUE = "{ l.customer:bill_fax }">
		<MvASSIGN NAME = "l.query_customer:bill_comp"				VALUE = "{ l.customer:bill_comp }">
	</MvIF>

	<MvASSIGN NAME = "l.query_customer:report_total"				VALUE = "{ l.total }">
	<MvASSIGN NAME = "l.null"										VALUE = "{ miva_array_insert_var( l.query:customers, l.query_customer, -1 ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Customer_TempTable_Gross" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.query:product_temp_table }">	<MvFUNCTIONRETURN VALUE = "{ CustomerSales_Populate_Customer_TempTable_Gross_Total( l.query ) }">
	<MvELSE>												<MvFUNCTIONRETURN VALUE = "{ CustomerSales_Populate_Customer_TempTable_Gross_Items( l.query ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Customer_TempTable_Gross_Total" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI].DB_OPENVIEW_Range( 'Merchant', 'CustomerSales_Gross',
																		    'SELECT
																				cust_id			AS cust_id,
																				SUM( total  )	AS gross
																			 FROM
																				' $ l.query:order_temp_table $ '
																			 GROUP BY
																				cust_id
																			 ORDER BY
																				gross DESC, cust_id ASC',
																		    '',
																		    0, l.query:topn ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00031', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count"	VALUE = 0>

	<MvWHILE EXPR = "{ ( NOT CustomerSales_Gross.d.EOF ) AND ( ++l.count LE l.query:topn ) }">
		<MvIF EXPR = "{ NOT CustomerSales_Insert_Customer_TempTable( l.query, CustomerSales_Gross.d.cust_id, CustomerSales_Gross.d.gross ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Gross">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Gross" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Gross">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Customer_TempTable_Gross_Items" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerSales_Gross"
				QUERY	= "{ 'SELECT
								o.cust_id		AS cust_id,
								oi.line_id		AS orderitem_line_id,
								oi.price		AS orderitem_price,
								oi.quantity		AS orderitem_quantity,
								SUM( oo.price )	AS orderoption_price
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'OrderOptions oo ON oo.line_id = oi.line_id,
								' $ l.query:product_temp_table $ ' p
							  WHERE
								oi.order_id		= o.id	AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ '
							  GROUP BY
								cust_id, orderitem_line_id, orderitem_price, orderitem_quantity' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00032', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Construct an array indexed by customer id that contains the gross sales per customer:
	|
	| l.customers[ cust_id ]:id
	| l.customers[ cust_id ]:gross
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ NOT CustomerSales_Gross.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.customer" VARIABLE = "l.customers">
			<MvDIMENSION INDEX = "{ CustomerSales_Gross.d.cust_id }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.customer:id"	VALUE = "{ CustomerSales_Gross.d.cust_id }">
		<MvASSIGN NAME = "l.customer:gross"	VALUE = "{ l.customer:gross + ( ( CustomerSales_Gross.d.orderitem_price + CustomerSales_Gross.d.orderoption_price ) * CustomerSales_Gross.d.orderitem_quantity ) }">

		<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Gross" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Gross">

	<MvCOMMENT>
	|
	| Sort the array by gross descending and insert the top_n customers into the Customer temporary table
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customer_count"		VALUE = "{ miva_array_sort( l.customers, 'CustomerSales_Gross_Sort_Callback', l.null ) }">

	<MvFOREACH ITERATOR = "l.customer" ARRAY = "l.customers" COUNT = "{ min( l.customer_count, l.query:topn ) }">
		<MvIF EXPR = "{ NOT CustomerSales_Insert_Customer_TempTable( l.query, l.customer:id, l.customer:gross ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Gross_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:gross LT l.right:gross }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.left:gross GT l.right:gross }">	<MvFUNCTIONRETURN VALUE = -1>

	<MvELSEIF EXPR = "{ l.left:id LT l.right:id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:id GT l.right:id }">			<MvFUNCTIONRETURN VALUE = 1>

	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Customer_TempTable_Orders" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI].DB_OPENVIEW_Range( 'Merchant', 'CustomerSales_Orders',
																		    'SELECT
																				cust_id		AS cust_id,
																				COUNT( * )	AS orders
																			 FROM
																				' $ l.query:order_temp_table $ '
																			 GROUP BY
																				cust_id
																			 ORDER BY
																				orders DESC, cust_id ASC',
																		    '',
																		    0, l.query:topn ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00033', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count"	VALUE = 0>

	<MvWHILE EXPR = "{ ( NOT CustomerSales_Orders.d.EOF ) AND ( ++l.count LE l.query:topn ) }">
		<MvIF EXPR = "{ NOT CustomerSales_Insert_Customer_TempTable( l.query, CustomerSales_Orders.d.cust_id, CustomerSales_Orders.d.orders ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Orders">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Orders" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Orders">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Populate_Customer_TempTable_Units" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.units_query, 'o.cust_id			AS cust_id,
																				SUM( oi.quantity )	AS units' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.units_query, l.query:order_temp_table, 'o' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.units_query, g.Store_Table_Prefix $ 'OrderItems', 'oi' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.units_query, 'oi.order_id = o.id', '' ) }">

	<MvIF EXPR = "{ NOT ISNULL l.query:product_temp_table }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.units_query, l.query:product_temp_table, 'p' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.units_query, 'oi.order_id = o.id AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ), '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.units_query, 'cust_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.units_query, 'units', 'DESC' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.units_query, 'cust_id', 'ASC' ) }">

	<MvASSIGN NAME = "l.units_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.units_query, l.units_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CustomerSales_Units', l.units_sql, l.units_fields, 0, l.query:topn ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00034', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count"		VALUE = 0>

	<MvWHILE EXPR = "{ ( NOT CustomerSales_Units.d.EOF ) AND ( ++l.count LE l.query:topn ) }">
		<MvIF EXPR = "{ NOT CustomerSales_Insert_Customer_TempTable( l.query, CustomerSales_Units.d.cust_id, CustomerSales_Units.d.units ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Units">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Units" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Units">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Index_Customer_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ l.query:customer_temp_table $ '_1 ON ' $ l.query:customer_temp_table $ ' ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00035', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Drop_TempTable" PARAMETERS = "table_name" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ l.table_name }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Report Data Generation Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "CustomerSales_Run_Intervals" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Populate the Order temporary table, satisfying any product or price group restrictions
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT CustomerSales_Populate_Order_TempTable( l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerSales_Index_Order_TempTable( l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Populate the Customer temporary table
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
		<MvIF EXPR = "{ NOT CustomerSales_Populate_Customer_TempTable_Gross( l.query ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.report:config:metric EQ 'orders' }">
		<MvIF EXPR = "{ NOT CustomerSales_Populate_Customer_TempTable_Orders( l.query ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }">
		<MvIF EXPR = "{ NOT CustomerSales_Populate_Customer_TempTable_Units( l.query ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerSales_Index_Customer_TempTable( l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Generate data for each interval
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
		<MvIF EXPR = "{ NOT CustomerSales_Run_Gross( l.report, l.query, l.intervals, l.interval_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.report:config:metric EQ 'orders' }">
		<MvIF EXPR = "{ NOT CustomerSales_Run_Orders( l.report, l.query, l.intervals, l.interval_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }">
		<MvIF EXPR = "{ NOT CustomerSales_Run_Units( l.report, l.query, l.intervals, l.interval_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.report:last_state:customers"	VALUE = "{ l.query:customers }">
	<MvASSIGN NAME = "l.report:last_state:setsize"		VALUE = "{ l.interval_count }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Run_Gross" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.query:product_temp_table }">	<MvFUNCTIONRETURN VALUE = "{ CustomerSales_Run_Gross_Total( l.report, l.query, l.intervals, l.interval_count ) }">
	<MvELSE>												<MvFUNCTIONRETURN VALUE = "{ CustomerSales_Run_Gross_Items( l.report, l.query, l.intervals, l.interval_count ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Run_Gross_Total" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerSales_Gross"
				QUERY	= "{ 'SELECT
								o.cust_id	AS cust_id,
								o.total		AS total,
								o.orderdate	AS orderdate
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ l.query:customer_temp_table $ ' c
							  WHERE
								c.id	= o.cust_id
							  ORDER BY
								cust_id ASC, orderdate ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00036', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.reportdata:report_id"			VALUE = "{ l.report:id }">

	<MvCOMMENT>
	|
	| The query is sorted by customer id and then order date, so the outer WHILE loop here iterates over customers, and the inner loop
	| handles each interval for a single customer.
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ NOT CustomerSales_Gross.d.EOF }">
		<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
		<MvASSIGN NAME = "l.interval_data"				VALUE = "">

		<MvASSIGN NAME = "l.reportdata:set_id"			VALUE = "{ CustomerSales_Gross.d.cust_id }">

		<MvWHILE EXPR = "{ ( NOT CustomerSales_Gross.d.EOF ) AND ( l.interval_pos LE l.interval_count ) }">
			<MvASSIGN NAME = "l.reportdata:data"		VALUE = 0.00>
			<MvASSIGN NAME = "l.reportdata:dt_start"	VALUE = "{ l.intervals[ l.interval_pos ]:time_t_start }">
			<MvASSIGN NAME = "l.reportdata:dt_end"		VALUE = "{ l.intervals[ l.interval_pos ]:time_t_end }">

			<MvCOMMENT>
			|
			| We have moved on to the next customer
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ CustomerSales_Gross.d.cust_id NE l.reportdata:set_id }">
				<MvWHILESTOP>
			</MvIF>

			<MvCOMMENT>
			|
			| While we are within this interval, accumulate the gross amount for each involved orderitem
			|
			</MvCOMMENT>

			<MvWHILE EXPR = "{ ( NOT CustomerSales_Gross.d.EOF ) AND ( CustomerSales_Gross.d.cust_id EQ l.reportdata:set_id ) AND ( CustomerSales_Gross.d.orderdate LT l.intervals[ l.interval_pos ]:time_t_end ) }">
				<MvASSIGN NAME = "l.reportdata:data"	VALUE = "{ l.reportdata:data + CustomerSales_Gross.d.total }">

				<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Gross" ROWS = 1>
			</MvWHILE>

			<MvCOMMENT>
			|
			| Insert data for this interval, if needed, and skip to the next one
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.reportdata:data NE 0.00 }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Gross">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Gross">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Run_Gross_Items" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerSales_Gross"
				QUERY	= "{ 'SELECT
								o.cust_id		AS cust_id,
								o.orderdate		AS orderdate,
								oi.line_id		AS orderitem_line_id,
								oi.price		AS orderitem_price,
								oi.quantity		AS orderitem_quantity,
								SUM( oo.price )	AS orderoption_price
						      FROM
								' $ l.query:order_temp_table $ ' o,
								' $ l.query:customer_temp_table $ ' c,
								' $ g.Store_Table_Prefix $ 'OrderItems oi
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'OrderOptions oo ON oo.line_id = oi.line_id,
								' $ l.query:product_temp_table $ ' p
							  WHERE
								c.id		= o.cust_id	AND
								oi.order_id	= o.id		AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ '
							  GROUP BY
								cust_id, orderdate, orderitem_line_id, orderitem_price, orderitem_quantity
							  ORDER BY
								cust_id ASC, orderdate ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00037', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.reportdata:report_id"			VALUE = "{ l.report:id }">

	<MvCOMMENT>
	|
	| The query is sorted by customer id and then order date, so the outer WHILE loop here iterates over customers, and the inner loop
	| handles each interval for a single customer.
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ NOT CustomerSales_Gross.d.EOF }">
		<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
		<MvASSIGN NAME = "l.interval_data"				VALUE = "">

		<MvASSIGN NAME = "l.reportdata:set_id"			VALUE = "{ CustomerSales_Gross.d.cust_id }">

		<MvWHILE EXPR = "{ ( NOT CustomerSales_Gross.d.EOF ) AND ( l.interval_pos LE l.interval_count ) }">
			<MvASSIGN NAME = "l.reportdata:data"		VALUE = 0.00>
			<MvASSIGN NAME = "l.reportdata:dt_start"	VALUE = "{ l.intervals[ l.interval_pos ]:time_t_start }">
			<MvASSIGN NAME = "l.reportdata:dt_end"		VALUE = "{ l.intervals[ l.interval_pos ]:time_t_end }">

			<MvCOMMENT>
			|
			| We have moved on to the next customer
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ CustomerSales_Gross.d.cust_id NE l.reportdata:set_id }">
				<MvWHILESTOP>
			</MvIF>

			<MvCOMMENT>
			|
			| While we are within this interval, accumulate the gross amount for each involved orderitem
			|
			</MvCOMMENT>

			<MvWHILE EXPR = "{ ( NOT CustomerSales_Gross.d.EOF ) AND ( CustomerSales_Gross.d.cust_id EQ l.reportdata:set_id ) AND ( CustomerSales_Gross.d.orderdate LT l.intervals[ l.interval_pos ]:time_t_end ) }">
				<MvASSIGN NAME = "l.reportdata:data"	VALUE = "{ l.reportdata:data + ( ( CustomerSales_Gross.d.orderitem_price + CustomerSales_Gross.d.orderoption_price ) * CustomerSales_Gross.d.orderitem_quantity ) }">

				<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Gross" ROWS = 1>
			</MvWHILE>

			<MvCOMMENT>
			|
			| Insert data for this interval, if needed, and skip to the next one
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.reportdata:data NE 0.00 }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Gross">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Gross">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Run_Orders" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerSales_Orders"
				QUERY	= "{ 'SELECT
								o.cust_id	AS cust_id,
								o.orderdate	AS orderdate
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ l.query:customer_temp_table $ ' c
							  WHERE
								c.id	= o.cust_id
							  ORDER BY
								cust_id ASC, orderdate ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00038', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.reportdata:report_id"			VALUE = "{ l.report:id }">

	<MvCOMMENT>
	|
	| The query is sorted by customer id and then order date, so the outer WHILE loop here iterates over customers, and the inner loop
	| handles each interval for a single customer.
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ NOT CustomerSales_Orders.d.EOF }">
		<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
		<MvASSIGN NAME = "l.interval_data"				VALUE = "">

		<MvASSIGN NAME = "l.reportdata:set_id"			VALUE = "{ CustomerSales_Orders.d.cust_id }">

		<MvWHILE EXPR = "{ ( NOT CustomerSales_Orders.d.EOF ) AND ( l.interval_pos LE l.interval_count ) }">
			<MvASSIGN NAME = "l.reportdata:data"		VALUE = 0>
			<MvASSIGN NAME = "l.reportdata:dt_start"	VALUE = "{ l.intervals[ l.interval_pos ]:time_t_start }">
			<MvASSIGN NAME = "l.reportdata:dt_end"		VALUE = "{ l.intervals[ l.interval_pos ]:time_t_end }">

			<MvCOMMENT>
			|
			| We have moved on to the next customer
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ CustomerSales_Orders.d.cust_id NE l.reportdata:set_id }">
				<MvWHILESTOP>
			</MvIF>

			<MvCOMMENT>
			|
			| While we are within this interval, accumulate the gross amount for each involved orderitem
			|
			</MvCOMMENT>

			<MvWHILE EXPR = "{ ( NOT CustomerSales_Orders.d.EOF ) AND ( CustomerSales_Orders.d.cust_id EQ l.reportdata:set_id ) AND ( CustomerSales_Orders.d.orderdate LT l.intervals[ l.interval_pos ]:time_t_end ) }">
				<MvASSIGN NAME = "l.reportdata:data"	VALUE = "{ l.reportdata:data + 1 }">

				<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Orders" ROWS = 1>
			</MvWHILE>

			<MvCOMMENT>
			|
			| Insert data for this interval, if needed, and skip to the next one
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.reportdata:data NE 0 }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Orders">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Orders">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerSales_Run_Units" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.units_query, 'o.cust_id			AS cust_id,
																				o.orderdate			AS orderdate,
																				SUM( oi.quantity )	AS orderitem_quantity' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.units_query, l.query:order_temp_table, 'o' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.units_query, l.query:customer_temp_table, 'c' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.units_query, g.Store_Table_Prefix $ 'OrderItems', 'oi' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.units_query, 'c.id			= o.cust_id AND
																			   oi.order_id	= o.id',
															   '' ) }">

	<MvIF EXPR = "{ NOT ISNULL l.query:product_temp_table }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.units_query, l.query:product_temp_table, 'p' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.units_query, 'oi.order_id = o.id AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ), '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.units_query, 'cust_id, orderdate' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.units_query, 'cust_id', 'ASC' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.units_query, 'orderdate', 'ASC' ) }">

	<MvASSIGN NAME = "l.units_sql"						VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.units_query, l.units_fields ) }">

	<MvOPENVIEW NAME = "Merchant"
				VIEW = "CustomerSales_Units"
				QUERY	= "{ l.units_sql }"
				FIELDS	= "{ l.units_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-CUST-SALES-00039', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.reportdata:report_id"			VALUE = "{ l.report:id }">

	<MvCOMMENT>
	|
	| The query is sorted by customer id and then order date, so the outer WHILE loop here iterates over customers, and the inner loop
	| handles each interval for a single customer.
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ NOT CustomerSales_Units.d.EOF }">
		<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
		<MvASSIGN NAME = "l.interval_data"				VALUE = "">

		<MvASSIGN NAME = "l.reportdata:set_id"			VALUE = "{ CustomerSales_Units.d.cust_id }">

		<MvWHILE EXPR = "{ ( NOT CustomerSales_Units.d.EOF ) AND ( l.interval_pos LE l.interval_count ) }">
			<MvASSIGN NAME = "l.reportdata:data"		VALUE = 0>
			<MvASSIGN NAME = "l.reportdata:dt_start"	VALUE = "{ l.intervals[ l.interval_pos ]:time_t_start }">
			<MvASSIGN NAME = "l.reportdata:dt_end"		VALUE = "{ l.intervals[ l.interval_pos ]:time_t_end }">

			<MvCOMMENT>
			|
			| We have moved on to the next customer
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ CustomerSales_Units.d.cust_id NE l.reportdata:set_id }">
				<MvWHILESTOP>
			</MvIF>

			<MvCOMMENT>
			|
			| While we are within this interval, accumulate the units amount for each involved orderitem
			|
			</MvCOMMENT>

			<MvWHILE EXPR = "{ ( NOT CustomerSales_Units.d.EOF ) AND ( CustomerSales_Units.d.cust_id EQ l.reportdata:set_id ) AND ( CustomerSales_Units.d.orderdate LT l.intervals[ l.interval_pos ]:time_t_end ) }">
				<MvASSIGN NAME = "l.reportdata:data"	VALUE = "{ l.reportdata:data + CustomerSales_Units.d.orderitem_quantity }">

				<MvSKIP NAME = "Merchant" VIEW = "CustomerSales_Units" ROWS = 1>
			</MvWHILE>

			<MvCOMMENT>
			|
			| Insert data for this interval, if needed, and skip to the next one
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.reportdata:data NE 0 }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Units">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerSales_Units">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

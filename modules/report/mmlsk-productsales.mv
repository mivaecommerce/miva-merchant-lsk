<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2022 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-RPT-PRODSALES-
| Next Error Code: 28   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-report_productsales">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Product Sales Report">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0300">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "5.62">
	<MvASSIGN NAME = "l.module:features"	VALUE = "report">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:date_range"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:date_interval"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:display"				VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_chart"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_tabular"		VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_custom"			VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Fields" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:id }">
		<MvASSIGN NAME = "g.Report_ProductSales_Metric"					VALUE = "{ l.report:config:metric }">
		<MvASSIGN NAME = "g.Report_ProductSales_Customers_In"			VALUE = "{ l.report:config:customers_in }">
		<MvASSIGN NAME = "g.Report_ProductSales_Customers_PriceGroup"	VALUE = "{ l.report:config:customers_pricegroup }">
		<MvASSIGN NAME = "g.Report_ProductSales_Category"				VALUE = "{ l.report:config:category }">
		<MvASSIGN NAME = "g.Report_ProductSales_Display_TopN"			VALUE = "{ l.report:config:display_topn }">
		<MvASSIGN NAME = "g.Report_ProductSales_Chart_TopN"				VALUE = "{ l.report:config:chart_topn }">
		<MvASSIGN NAME = "g.Report_ProductSales_Export_TopN"			VALUE = "{ l.report:config:export_topn }">
	<MvELSE>
		<MvASSIGN NAME = "g.Report_ProductSales_Metric"					VALUE = "gross">
		<MvASSIGN NAME = "g.Report_ProductSales_Customers_In"			VALUE = 1>
		<MvASSIGN NAME = "g.Report_ProductSales_Customers_PriceGroup"	VALUE = "">
		<MvASSIGN NAME = "g.Report_ProductSales_Category"				VALUE = "">
		<MvASSIGN NAME = "g.Report_ProductSales_Display_TopN"			VALUE = 10>
		<MvASSIGN NAME = "g.Report_ProductSales_Chart_TopN"				VALUE = 10>
		<MvASSIGN NAME = "g.Report_ProductSales_Export_TopN"			VALUE = 10>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "metric,customers,category,topn">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'metric' }">			<MvFUNCTIONRETURN VALUE = "<b>Compare Using:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'customers' }">	<MvFUNCTIONRETURN VALUE = "Customers:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'category' }">	<MvFUNCTIONRETURN VALUE = "Category:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">		<MvFUNCTIONRETURN VALUE = "<b>Display:</b>">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'metric' }">
		<select name="Report_ProductSales_Metric">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'gross',	g.Report_ProductSales_Metric, 'Gross Revenue' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'units',	g.Report_ProductSales_Metric, 'Units Sold' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'customers' }">
		<span style="white-space: nowrap;">
			<select name="Report_ProductSales_Customers_In">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 1, g.Report_ProductSales_Customers_In, 'In' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 0, g.Report_ProductSales_Customers_In, 'Not In' ) }">
			</select>
			<span style="position: relative; vertical-align: middle;">
				Price Group:
				<input type="text" size="20" id="Report_ProductSales_Customers_PriceGroup" name="Report_ProductSales_Customers_PriceGroup" value="{ encodeentities( g.Report_ProductSales_Customers_PriceGroup ) }">
				<a href="JavaScript:PriceGroupLookupDialog( 'Report_ProductSales_Customers_PriceGroup' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
			</span>
		</span>
	<MvELSEIF EXPR = "{ l.field_id EQ 'category' }">
		<input type="text" size="20" id="Report_ProductSales_Category" name="Report_ProductSales_Category" value="{ encodeentities( g.Report_ProductSales_Category ) }">
		<a href="JavaScript:CategoryLookupDialog( 'Report_ProductSales_Category' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">
		<input type="text" size="5" name="Report_ProductSales_Display_TopN" value="{ encodeentities( g.Report_ProductSales_Display_TopN ) }"> product(s) on the main screen<br>
		<input type="text" size="5" name="Report_ProductSales_Chart_TopN" value="{ encodeentities( g.Report_ProductSales_Chart_TopN ) }"> product(s) on the expanded chart<br>
		<input type="text" size="5" name="Report_ProductSales_Export_TopN" value="{ encodeentities( g.Report_ProductSales_Export_TopN ) }"> product(s) in exported data
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Validate" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Report_ProductSales_Metric"					VALUE = "{ trim( g.Report_ProductSales_Metric ) }">
	<MvASSIGN NAME = "g.Report_ProductSales_Customers_In"			VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Report_ProductSales_Customers_In ) }">
	<MvASSIGN NAME = "g.Report_ProductSales_Customers_PriceGroup"	VALUE = "{ trim( g.Report_ProductSales_Customers_PriceGroup ) }">
	<MvASSIGN NAME = "g.Report_ProductSales_Category"				VALUE = "{ trim( g.Report_ProductSales_Category ) }">
	<MvASSIGN NAME = "g.Report_ProductSales_Display_TopN"			VALUE = "{ trim( g.Report_ProductSales_Display_TopN ) }">
	<MvASSIGN NAME = "g.Report_ProductSales_Chart_TopN"				VALUE = "{ trim( g.Report_ProductSales_Chart_TopN ) }">
	<MvASSIGN NAME = "g.Report_ProductSales_Export_TopN"			VALUE = "{ trim( g.Report_ProductSales_Export_TopN ) }">

	<MvIF EXPR = "{ ( g.Report_ProductSales_Metric NE 'gross' ) AND
					( g.Report_ProductSales_Metric NE 'units' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', '', 'Please select a metric' ) }">
	</MvIF>

	<MvIF EXPR = "{ len( g.Report_ProductSales_Customers_PriceGroup ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( g.Report_ProductSales_Customers_PriceGroup, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_ProductSales_Customers_PriceGroup', 'Price Group \'' $ g.Report_ProductSales_Customers_PriceGroup $ '\' not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ len( g.Report_ProductSales_Category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( g.Report_ProductSales_Category, l.category ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_ProductSales_Category', 'Category \'' $ g.Report_ProductSales_Category $ '\' not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT ProductSales_Validate_CategoryHeirarchy( l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_ProductSales_Category', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_ProductSales_Display_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_ProductSales_Display_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_ProductSales_Chart_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_ProductSales_Chart_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_ProductSales_Export_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_ProductSales_Export_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Update" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:config:metric"				VALUE = "{ g.Report_ProductSales_Metric }">
	<MvASSIGN NAME = "l.report:config:customers_in"			VALUE = "{ g.Report_ProductSales_Customers_In }">
	<MvASSIGN NAME = "l.report:config:customers_pricegroup"	VALUE = "{ g.Report_ProductSales_Customers_PriceGroup }">
	<MvASSIGN NAME = "l.report:config:category"				VALUE = "{ g.Report_ProductSales_Category }">
	<MvASSIGN NAME = "l.report:config:display_topn"			VALUE = "{ g.Report_ProductSales_Display_TopN }">
	<MvASSIGN NAME = "l.report:config:chart_topn"			VALUE = "{ g.Report_ProductSales_Chart_TopN }">
	<MvASSIGN NAME = "l.report:config:export_topn"			VALUE = "{ g.Report_ProductSales_Export_TopN }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Calculate_DateRange_All" PARAMETERS = "module var, report var, time_t_start var, time_t_end var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderDates"
				QUERY	= "{ 'SELECT
								MIN( orderdate ) AS min_orderdate,
								MAX( orderdate ) AS max_orderdate
							  FROM
								' $ g.Store_Table_Prefix $ 'Orders' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderDates.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderDates">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.time_t_start"	VALUE = "{ OrderDates.d.min_orderdate }">
	<MvASSIGN NAME = "l.time_t_end"		VALUE = "{ OrderDates.d.max_orderdate + 1 }">	<MvCOMMENT> Compensate for < end </MvCOMMENT>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderDates">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Run_Intervals" PARAMETERS = "module var, report var, time_t_start, time_t_end, intervals var, interval_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Delete_Report( l.report:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.query:topn"					VALUE = "{ l.report:config:display_topn }">
	<MvIF EXPR = "{ l.report:config:chart_topn GT l.query:topn }">
		<MvASSIGN NAME = "l.query:topn"				VALUE = "{ l.report:config:chart_topn }">
	</MvIF>
	<MvIF EXPR = "{ l.report:config:export_topn GT l.query:topn }">
		<MvASSIGN NAME = "l.query:topn"				VALUE = "{ l.report:config:export_topn }">
	</MvIF>

	<MvASSIGN NAME = "l.query:time_t_start"			VALUE = "{ l.time_t_start }">
	<MvASSIGN NAME = "l.query:time_t_end"			VALUE = "{ l.time_t_end }">
	<MvASSIGN NAME = "l.query:product_count"		VALUE = 0>

	<MvIF EXPR = "{ ISNULL l.report:config:customers_pricegroup }">
		<MvASSIGN NAME = "l.query:pricegroup_id"	VALUE = 0>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( l.report:config:customers_pricegroup, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00002', 'Price Group \'' $ l.report:config:customers_pricegroup $ '\' not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.query:pricegroup_id"	VALUE = "{ l.pricegroup:id }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.report:config:category }">
		<MvASSIGN NAME = "l.query:category_id"		VALUE = 0>
		<MvASSIGN NAME = "l.query:product_code"		VALUE = "{ l.report:config:product }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.report:config:category, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00003', 'Category \'' $ l.report:config:category $ '\' not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.query:category_id"		VALUE = "{ l.category:id }">

		<MvIF EXPR = "{ NOT ProductSales_Build_Category_TempTable( l.query ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.result"			VALUE = 1>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ ProductSales_Create_Order_TempTable( l.query ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ ProductSales_Create_Product_TempTable( l.query ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ ProductSales_Run_Intervals( l.report, l.query, l.intervals, l.interval_count ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ISNULL l.query:category_temp_table }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ l.result AND ProductSales_Drop_TempTable( l.query:category_temp_table ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.query:order_temp_table }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ l.result AND ProductSales_Drop_TempTable( l.query:order_temp_table ) }">	
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.query:product_temp_table }">
		<MvASSIGN NAME = "l.result"		VALUE = "{ l.result AND ProductSales_Drop_TempTable( l.query:product_temp_table ) }">	
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Format_Vertical_Label" PARAMETERS = "module var, report var, set_id, label" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.label ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.label ROUND 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Display" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.product_count"			VALUE = "{ miva_array_elements( l.report:last_state:products ) }">
	<MvASSIGN NAME = "l.color_count"			VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_Palette( l.colors ) }">

	<MvIF EXPR = "{ l.product_count EQ 0 }">
		<i>Not Available</i>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<table style="border-collapse: collapse; font-size: small; font-family: Veradna, Arial, Helvetica, sans-serif;" cellspacing="0" cellpadding="0">
		<thead style="font-weight: bold;">
			<tr style="height: 20px;">
				<td>&nbsp;</td>
				<td align="center">
					<MvIF EXPR = "{ l.report:last_state:setsize EQ 1 }">
						<MvIF EXPR = "{ l.report:date_group EQ 'H' }">		1 Hour
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'D' }">	1 Day
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'W' }">	1 Week
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'M' }">	1 Month
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'Y' }">	1 Year
						</MvIF>
					<MvELSE>
						<MvEVAL EXPR = "{ encodeentities( l.report:last_state:setsize ) }">
						
						<MvIF EXPR = "{ l.report:date_group EQ 'H' }">		Hours
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'D' }">	Days
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'W' }">	Weeks
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'M' }">	Months
						<MvELSEIF EXPR = "{ l.report:date_group EQ 'Y' }">	Years
						</MvIF>
					</MvIF>
				</td>
				<td align="right">
					<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }"> Total Gross Sales
					<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }"> Total Units Sold
					</MvIF>
				</td>
			</tr>
		</thead>

		<tbody>
		<MvASSIGN NAME = "l.product_pos"		VALUE = 1>
		<MvASSIGN NAME = "l.color_pos"			VALUE = 1>
		<MvWHILE EXPR = "{ ( l.product_pos LE l.product_count ) AND ( l.product_pos LE l.report:config:display_topn ) }">
			<MvASSIGN NAME = "l.rgb_color"		VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_HexToRGB( l.colors[ l.color_pos ] ) }">
			<MvASSIGN NAME = "l.image_source"	VALUE = "{ g.json_nosessionurl																			$
														   'ST=admin'																					$
														   '&Store_Code='	$ encodeattribute( g.Store:code )											$
														   '&Function=ReportData_Graph_Line'															$
														   '&Report_ID='	$ encodeattribute( l.report:id )											$
														   '&Smoothing=0'																				$
														   '&Width=100'																					$ 
														   '&Height=20'																					$
														   '&Set_IDs='		$ encodeattribute( l.report:last_state:products[ l.product_pos ]:set_id )	$
														   '&Colors='		$ encodeattribute( l.rgb_color )											$
														   '&Background=255,255,255' }">
			<tr style="height: 20px;">
				<td><MvEVAL EXPR = "{ encodeentities( l.report:last_state:products[ l.product_pos ]:name ) }"></td>
				<td align="center" style="padding-left: 5px; padding-right: 5px;">
					<a href="#" onclick="{ 'Report_Display_Chart( \'' $ [ g.Module_Admin ].JavaScriptEncode( g.Store:code ) $ '\', ' $ int( l.report:id ) $ ', true, ' $ int( l.report:last_state:products[ l.product_pos ]:set_id ) $ ' ); return false' }">
						<MvEVAL EXPR = "{ [ g.Module_Feature_RPT_UT ].Report_Draw_DelayedImage( l.image_source, 100, 20, l.rgb_color ) }">
					</a>
				</td>
				<td align="right"><MvEVAL EXPR = "{ ReportModule_Format_Vertical_Label( l.module, l.report, l.report:last_state:products[ l.product_pos ]:set_id, l.report:last_state:products[ l.product_pos ]:total ) }"></td>
			</tr>

			<MvASSIGN NAME = "l.product_pos"	VALUE = "{ l.product_pos + 1 }">
			<MvASSIGN NAME = "l.color_pos"		VALUE = "{ l.color_pos + 1 }">

			<MvIF EXPR = "{ l.color_pos GT l.color_count }">
				<MvASSIGN NAME = "l.color_pos"	VALUE = 1>
			</MvIF>
		</MvWHILE>
		</tbody>
	</table>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Chart_Type" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "canvas_chart">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Canvas_Chart_Definition" PARAMETERS = "module var, report var, chart var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.color_pos"						VALUE = 0>
	<MvASSIGN NAME = "l.color_count"					VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_Palette( l.colors ) }">

	<MvFOREACH INDEX = "l.product_pos" ITERATOR = "l.product" ARRAY = "l.report:last_state:products">
		<MvIF EXPR = "{ l.product_pos GT l.report:config:chart_topn }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvIF EXPR = "{ ++l.color_pos GT l.color_count }">
			<MvASSIGN NAME = "l.color_pos"				VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.dataset:set_id"				VALUE = "{ l.product:set_id }">
		<MvASSIGN NAME = "l.dataset:color"				VALUE = "{ l.colors[ l.color_pos ] }">
		<MvASSIGN NAME = "l.dataset:name"				VALUE = "{ l.product:name }">
		<MvASSIGN NAME = "l.dataset:force_visible"		VALUE = "{ g.Report_Chart_Param EQ l.product:set_id }">

		<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
			<MvASSIGN NAME = "l.dataset:data_type"		VALUE = "currency">
		<MvELSE>
			<MvASSIGN NAME = "l.dataset:data_type"		VALUE = "numeric">
		</MvIF>

		<MvASSIGN NAME = "l.chart:dataset_count"		VALUE = "{ miva_array_insert( l.chart:datasets, l.dataset, -1 ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Canvas_Output_LabelFormat_JavaScript" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Tabular_Definition" PARAMETERS = "module var, report var, definition var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_count"																VALUE = "{ miva_array_elements( l.report:last_state:products ) }">

	<MvCOMMENT>
	|
	| Labels
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.product_pos"																VALUE = 1>
	<MvASSIGN NAME = "l.labels"					INDEX = 1											VALUE = "PRODUCT_CODE">
	<MvWHILE EXPR = "{ ( l.product_pos LE l.product_count ) AND ( l.product_pos LE l.report:config:export_topn ) }">
		<MvASSIGN NAME = "l.labels"				INDEX = "{ l.product_pos + 1 }"						VALUE = "{ l.report:last_state:products[ l.product_pos ]:code }">

		<MvASSIGN NAME = "l.product_pos"															VALUE = "{ l.product_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.definition:columns"		INDEX = 1						MEMBER = "type"		VALUE = "values">
	<MvASSIGN NAME = "l.definition:columns"		INDEX = 1						MEMBER = "start"	VALUE = 1>
	<MvASSIGN NAME = "l.definition:columns"		INDEX = 1						MEMBER = "values"	VALUE = "{ l.labels }">

	<MvASSIGN NAME = "l.product_pos"																VALUE = 1>
	<MvASSIGN NAME = "l.labels"					INDEX = 1											VALUE = "PRODUCT_NAME">
	<MvWHILE EXPR = "{ ( l.product_pos LE l.product_count ) AND ( l.product_pos LE l.report:config:export_topn ) }">
		<MvASSIGN NAME = "l.labels"				INDEX = "{ l.product_pos + 1 }"						VALUE = "{ l.report:last_state:products[ l.product_pos ]:name }">

		<MvASSIGN NAME = "l.product_pos"															VALUE = "{ l.product_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.definition:columns"		INDEX = 2						MEMBER = "type"		VALUE = "values">
	<MvASSIGN NAME = "l.definition:columns"		INDEX = 2						MEMBER = "start"	VALUE = 1>
	<MvASSIGN NAME = "l.definition:columns"		INDEX = 2						MEMBER = "values"	VALUE = "{ l.labels }">

	<MvCOMMENT>
	|
	| Data
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.product_count GE 1 }">
		<MvASSIGN NAME = "l.definition:rows"		INDEX = 1						MEMBER = "type"		VALUE = "reportdata_date">
		<MvASSIGN NAME = "l.definition:rows"		INDEX = 1						MEMBER = "start"	VALUE = 3>
		<MvASSIGN NAME = "l.definition:rows"		INDEX = 1						MEMBER = "set_id"	VALUE = "{ l.report:last_state:products[ 1 ]:set_id }">

		<MvASSIGN NAME = "l.product_pos"																VALUE = 1>
		<MvWHILE EXPR = "{ ( l.product_pos LE l.product_count ) AND ( l.product_pos LE l.report:config:export_topn ) }">
			<MvASSIGN NAME = "l.definition:rows"	INDEX = "{ l.product_pos + 1 }" MEMBER = "type"		VALUE = "reportdata">
			<MvASSIGN NAME = "l.definition:rows"	INDEX = "{ l.product_pos + 1 }" MEMBER = "start"	VALUE = 3>
			<MvASSIGN NAME = "l.definition:rows"	INDEX = "{ l.product_pos + 1 }" MEMBER = "set_id"	VALUE = "{ l.report:last_state:products[ l.product_pos ]:set_id }">

			<MvASSIGN NAME = "l.product_pos"															VALUE = "{ l.product_pos + 1 }">
		</MvWHILE>
	</MvIF>

	<MvCOMMENT>
	|
	| If there are more than 256 datapoints, rotate the output to be vertical to avoid
	| issues with Excel
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:last_state:setsize GT 256 }">
		<MvASSIGN NAME = "l.temp"											VALUE = "{ l.definition:rows }">
		<MvASSIGN NAME = "l.definition:rows"								VALUE = "{ l.definition:columns }">
		<MvASSIGN NAME = "l.definition:columns"								VALUE = "{ l.temp }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Provision_Settings" PARAMETERS = "module var, report var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:config:display_topn"			VALUE = 10>
	<MvASSIGN NAME = "l.report:config:chart_topn"			VALUE = 10>
	<MvASSIGN NAME = "l.report:config:export_topn"			VALUE = 10>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R', l.provide_xml, 'Metric',		l.report:config:metric, 'gross,units', 'gross,units' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Category',		l.report:config:category )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Display_TopN',	l.report:config:display_topn )							OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Chart_TopN',	l.report:config:chart_topn )							OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Export_TopN',	l.report:config:export_topn ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'PriceGroup' ) }">
		<MvASSIGN NAME = "l.report:config:customers_in"			VALUE = 0>
		<MvASSIGN NAME = "l.report:config:customers_pricegroup"	VALUE = "">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_List(			l.provide_xml:tags:PriceGroup[ 1 ],	'customers',	l.report:config:customers_in, 'in,out', '1,0' ) OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O',	l.provide_xml,						'PriceGroup',	l.report:config:customers_pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ len( l.report:config:customers_pricegroup ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( l.report:config:customers_pricegroup, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Price Group \'' $ l.report:config:customers_pricegroup $ '\' does not exist' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ len( l.report:config:category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.report:config:category, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category \'' $ l.report:config:category $ '\' does not exist' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT ProductSales_Validate_CategoryHeirarchy( l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Run_Intervals" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.query:category_id }">
		<MvIF EXPR = "{ NOT l.query:pricegroup_id }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Order_TempTable_Category( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.report:config:customers_in }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Order_TempTable_Category_PriceGroup_In( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT ProductSales_Populate_Order_TempTable_Category_PriceGroup_Out( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ProductSales_Index_Order_TempTable( l.query ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	
		<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Category_Gross( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Category_Units( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT l.query:pricegroup_id }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Order_TempTable( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.report:config:customers_in }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Order_TempTable_PriceGroup_In( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT ProductSales_Populate_Order_TempTable_PriceGroup_Out( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ProductSales_Index_Order_TempTable( l.query ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Gross( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }">
			<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Units( l.query ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductSales_Index_Product_TempTable( l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
		<MvIF EXPR = "{ NOT ProductSales_Run_Gross( l.report, l.query, l.intervals, l.interval_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }">
		<MvIF EXPR = "{ NOT ProductSales_Run_Units( l.report, l.query, l.intervals, l.interval_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.report:last_state:products"		VALUE = "{ l.query:products }">
	<MvASSIGN NAME = "l.report:last_state:setsize"		VALUE = "{ l.interval_count }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Build_Category_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"								VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.query:category_temp_table"	VALUE = "{ g.Store_Table_Prefix $ 'TempPSRC' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:category_temp_table $ '
							  (
								code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) $ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"	VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductSales_Build_CategoryHeirarchy_SQL( l.query:category_id, l.category_sql ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:category_temp_table $ '
						  SELECT DISTINCT
							p.code
						  FROM
							' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
							' $ g.Store_Table_Prefix $ 'Products p
						  WHERE
							p.id = cxp.product_id AND
							' $ l.category_sql }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ l.query:category_temp_table $ '_1 ON ' $ l.query:category_temp_table $ ' ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Drop_TempTable" PARAMETERS = "table_name" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ l.table_name }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Validate_CategoryHeirarchy" PARAMETERS = "category_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count"	VALUE = 1>
	<MvFUNCTIONRETURN VALUE = "{ ProductSales_Validate_Category_Children( l.category_id, l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Validate_Category_Children" PARAMETERS = "category_id, count var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child" ARRAY = "l.children" COUNT = "{ [ g.Module_Library_DB ].CategoryList_Load_Parent( l.category_id, l.children ) }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ l.count + 1 }">

		<MvIF EXPR = "{ l.count GT 100 }">
			<MvASSIGN NAME = "g.Validation_Message" VALUE = "The specified category hierarchy contains more than 100 categories.  Please select a hierarchy with fewer categories.">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT ProductSales_Validate_Category_Children( l.child:id, l.count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Build_CategoryHeirarchy_SQL" PARAMETERS = "category_id, sql var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id_count"				VALUE = 1>
	<MvASSIGN NAME = "l.ids"		INDEX = 1	VALUE = "{ l.category_id }">

	<MvIF EXPR = "{ NOT ProductSales_Add_Category_Children( l.category_id, l.ids, l.id_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.sql"					VALUE = "{ 'cxp.cat_id IN ( ' $ int( l.ids[ 1 ] ) }">
	<MvASSIGN NAME = "l.id_pos"					VALUE = 2>
	<MvWHILE EXPR = "{ l.id_pos LE l.id_count }">
		<MvASSIGN NAME = "l.sql"				VALUE = "{ l.sql $ ', ' $ int( l.ids[ l.id_pos ] ) }">
		<MvASSIGN NAME = "l.id_pos"				VALUE = "{ l.id_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.sql"					VALUE = "{ l.sql $ ' )' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Add_Category_Children" PARAMETERS = "category_id, ids var, id_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.child_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.child_count"		VALUE = "{ [ g.Module_Library_DB ].CategoryList_Load_Parent( l.category_id, l.children ) }">

	<MvWHILE EXPR = "{ l.child_pos LE l.child_count }">
		<MvASSIGN NAME = "l.id_count"								VALUE = "{ l.id_count + 1 }">
		<MvASSIGN NAME = "l.ids"		INDEX = "{ l.id_count }"	VALUE = "{ l.children[ l.child_pos ]:id }">

		<MvIF EXPR = "{ l.id_count GT 100 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00008', 'The specified category hierarchy contains more than 100 categories.  Please select a hierarchy with fewer categories.' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT ProductSales_Add_Category_Children( l.children[ l.child_pos ]:id, l.ids, l.id_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.child_pos"		VALUE = "{ l.child_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Create_Order_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"						VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.query:order_temp_table"	VALUE = "{ g.Store_Table_Prefix $ 'TempPSRO' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:order_temp_table $ '
							  (
								id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
								orderdate	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"					VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Index_Order_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ l.query:order_temp_table $ '_1 ON ' $ l.query:order_temp_table $ ' ( orderdate )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Create_Product_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"						VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.query:product_temp_table"	VALUE = "{ g.Store_Table_Prefix $ 'TempPSRP' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:product_temp_table $ '
							  (
								set_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
								code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"					VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Index_Product_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ l.query:product_temp_table $ '_1 ON ' $ l.query:product_temp_table $ ' ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Order_TempTable_Category" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:order_temp_table $ '
						  SELECT DISTINCT
							o.id, o.orderdate
						  FROM
							' $ g.Store_Table_Prefix $ 'Orders o,
							' $ g.Store_Table_Prefix $ 'OrderItems oi,
							' $ l.query:category_temp_table $ ' p
						  WHERE
							orderdate >= ?		AND
							orderdate < ?		AND
							oi.order_id = o.id	AND
							' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) }"
			 FIELDS	= "l.query:time_t_start, l.query:time_t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Order_TempTable_Category_PriceGroup_In" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:order_temp_table $ '
						  SELECT DISTINCT
							o.id, o.orderdate
						  FROM
							' $ g.Store_Table_Prefix $ 'PriceGroupXCustomer pxc,
							' $ g.Store_Table_Prefix $ 'Orders o,
							' $ g.Store_Table_Prefix $ 'OrderItems oi,
							' $ l.query:category_temp_table $ ' p
						  WHERE
							pxc.pgrp_id = ?				AND
							o.cust_id	= pxc.cust_id	AND
							orderdate	>= ?			AND
							orderdate	< ?				AND
							oi.order_id = o.id			AND
							' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) }"
			 FIELDS	= "l.query:pricegroup_id, l.query:time_t_start, l.query:time_t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00014', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Order_TempTable_Category_PriceGroup_Out" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:order_temp_table $ '
						  SELECT DISTINCT
							o.id, o.orderdate
						  FROM
							' $ g.Store_Table_Prefix $ 'Orders o
							LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXCustomer pxc ON pxc.pgrp_id = ? AND pxc.cust_id = o.cust_id,
							' $ g.Store_Table_Prefix $ 'OrderItems oi,
							' $ l.query:category_temp_table $ ' p
						  WHERE
							orderdate	>= ?	AND
							orderdate	< ?		AND
							oi.order_id = o.id	AND
							pxc.cust_id IS NULL	AND
							' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) }"
			 FIELDS	= "l.query:pricegroup_id, l.query:time_t_start, l.query:time_t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00015', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Order_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:order_temp_table $ '
						  SELECT DISTINCT
							id, orderdate
						  FROM
							' $ g.Store_Table_Prefix $ 'Orders
						  WHERE
							orderdate >= ? AND
							orderdate < ?' }"
			 FIELDS	= "l.query:time_t_start, l.query:time_t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00016', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Order_TempTable_PriceGroup_In" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:order_temp_table $ '
						  SELECT DISTINCT
							o.id, o.orderdate
						  FROM
							' $ g.Store_Table_Prefix $ 'PriceGroupXCustomer pxc,
							' $ g.Store_Table_Prefix $ 'Orders o
						  WHERE
							pxc.pgrp_id	= ?				AND
							o.cust_id	= pxc.cust_id	AND
							orderdate	>= ?			AND
							orderdate	< ?' }"
			 FIELDS	= "l.query:pricegroup_id, l.query:time_t_start, l.query:time_t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00017', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Order_TempTable_PriceGroup_Out" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:order_temp_table $ '
						  SELECT DISTINCT
							o.id, o.orderdate
						  FROM
							' $ g.Store_Table_Prefix $ 'Orders o
							LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXCustomer pxc ON pxc.pgrp_id = ? AND pxc.cust_id = o.cust_id
						  WHERE
							orderdate >= ?	AND
							orderdate < ?	AND
							pxc.cust_id IS NULL' }"
			 FIELDS	= "l.query:pricegroup_id, l.query:time_t_start, l.query:time_t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00018', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Product_TempTable_Category_Gross" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_OI_Gross"
				QUERY	= "{ 'SELECT
								oi.code							AS code,
								SUM( oi.price * oi.quantity )	AS gross
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi,
								' $ l.query:category_temp_table $ ' p
							  WHERE
								oi.order_id = o.id		AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ '
							  GROUP BY
								oi.code' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00019', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Gross_LowLevel_OrderItems( l.query ) }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OI_Gross">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OI_Gross">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_OO_Gross"
				QUERY	= "{ 'SELECT
								oi.code							AS code,
								SUM( oo.price * oi.quantity )	AS gross
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi,
								' $ g.Store_Table_Prefix $ 'OrderOptions oo,
								' $ l.query:category_temp_table $ ' p
							  WHERE
								oi.order_id = o.id		AND
								oo.line_id = oi.line_id	AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ '
							  GROUP BY
								oi.code' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00020', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Gross_LowLevel_OrderOptions( l.query ) }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OO_Gross">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OO_Gross">

	<MvFUNCTIONRETURN VALUE = "{ ProductSales_Finalize_Products( l.query ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Product_TempTable_Gross" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_OI_Gross"
				QUERY	= "{ 'SELECT
								oi.code							AS code,
								SUM( oi.price * oi.quantity )	AS gross
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi
							  WHERE
								oi.order_id = o.id
							  GROUP BY
								oi.code' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00021', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Gross_LowLevel_OrderItems( l.query ) }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OI_Gross">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OI_Gross">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_OO_Gross"
				QUERY	= "{ 'SELECT
								oi.code							AS code,
								SUM( oo.price * oi.quantity )	AS gross
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi,
								' $ g.Store_Table_Prefix $ 'OrderOptions oo
							  WHERE
								oi.order_id = o.id		AND
								oo.line_id = oi.line_id
							  GROUP BY
								oi.code' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00022', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductSales_Populate_Product_TempTable_Gross_LowLevel_OrderOptions( l.query ) }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OO_Gross">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_OO_Gross">

	<MvFUNCTIONRETURN VALUE = "{ ProductSales_Finalize_Products( l.query ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Product_TempTable_Gross_LowLevel_OrderItems" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "">
	<MvWHILE EXPR = "{ NOT ProductSales_OI_Gross.d.EOF }">
		<MvEVAL EXPR = "{ ProductSales_Add_Product( l.query, ProductSales_OI_Gross.d.code, ProductSales_OI_Gross.d.gross ) }">
		<MvSKIP NAME = "Merchant" VIEW = "ProductSales_OI_Gross" ROWS = 1>
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Product_TempTable_Gross_LowLevel_OrderOptions" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "">
	<MvWHILE EXPR = "{ NOT ProductSales_OO_Gross.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.query">
			<MvMEMBER NAME = "product_lookup">
			<MvMEMBER NAME = "{ ProductSales_OO_Gross.d.code }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.product:total"	VALUE = "{ l.product:total + ProductSales_OO_Gross.d.gross }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductSales_OO_Gross" ROWS = 1>
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Product_TempTable_Category_Units" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_Units"
				QUERY	= "{ 'SELECT
								oi.code				AS code,
								SUM( oi.quantity )  AS units 
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi,
								' $ l.query:category_temp_table $ ' p
							  WHERE
								oi.order_id = o.id	AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ '
							  GROUP BY
								oi.code
							  ORDER BY
								units DESC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00023', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.result"	VALUE = "{ ProductSales_Populate_Product_TempTable_Units_LowLevel( l.query ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_Units">

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Product_TempTable_Units" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_Units"
				QUERY	= "{ 'SELECT
								oi.code				AS code,
								SUM( oi.quantity )  AS units 
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi
							  WHERE
								oi.order_id = o.id
							  GROUP BY
								oi.code
							  ORDER BY
								units DESC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00024', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.result"	VALUE = "{ ProductSales_Populate_Product_TempTable_Units_LowLevel( l.query ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_Units">

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Populate_Product_TempTable_Units_LowLevel" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "">
	<MvWHILE EXPR = "{ NOT ProductSales_Units.d.EOF }">
		<MvEVAL EXPR = "{ ProductSales_Add_Product( l.query, ProductSales_Units.d.code, ProductSales_Units.d.units ) }">
		<MvSKIP NAME = "Merchant" VIEW = "ProductSales_Units" ROWS = 1>
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = "{ ProductSales_Finalize_Products( l.query ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Add_Product" PARAMETERS = "query var, code, total" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This function exists to allow the same variable to be referenced inside both
	| l.query:product_lookup and l.query:products, which requires a function call in
	| order to force a new temporary variable to be created.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.query:product_count"	VALUE = "{ l.query:product_count + 1 }">

	<MvASSIGN NAME = "l.product:code"			VALUE = "{ l.code }">
	<MvASSIGN NAME = "l.product:total"			VALUE = "{ l.total }">

	<MvREFERENCE NAME = "l.query:product_lookup"	MEMBER = "{ l.code }"				VARIABLE = "l.product">
	<MvREFERENCE NAME = "l.query:products"			INDEX = "{ l.query:product_count }"	VARIABLE = "l.product">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Finalize_Products" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null"						VALUE = "{ miva_array_sort( l.query:products, 'ProductSales_SortCallback', l.null ) }">

	<MvASSIGN NAME = "l.product_pos"				VALUE = 1>
	<MvWHILE EXPR = "{ ( l.product_pos LE l.query:product_count ) AND ( l.product_pos LE l.query:topn ) }">
		<MvREFERENCEARRAY NAME = "l.topn_product" VARIABLE = "l.topn_products">
			<MvDIMENSION INDEX = "{ l.product_pos }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.topn_product:set_id"	VALUE = "{ l.product_pos }">
		<MvASSIGN NAME = "l.topn_product:code"		VALUE = "{ l.query:products[ l.product_pos ]:code }">
		<MvASSIGN NAME = "l.topn_product:total"		VALUE = "{ l.query:products[ l.product_pos ]:total }">

		<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.topn_product:code, l.product ) }">
			<MvASSIGN NAME = "l.topn_product:name"	VALUE = "{ l.product:name }">
		<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvASSIGN NAME = "l.topn_product:name"	VALUE = "{ l.topn_product:code }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'INSERT INTO ' $ l.query:product_temp_table $ ' ( set_id, code ) VALUES ( ?, ? )' }"
				 FIELDS	= "l.topn_product:set_id, l.topn_product:code">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00025', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product_pos"			VALUE = "{ l.product_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.query:products"				VALUE = "{ l.topn_products }">
	<MvASSIGN NAME = "l.query:product_count"		VALUE = "{ l.product_pos - 1 }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_SortCallback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:total LT l.right:total }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.left:total GT l.right:total }">	<MvFUNCTIONRETURN VALUE = -1>

	<MvELSEIF EXPR = "{ l.left:code LT l.right:code }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:code GT l.right:code }">		<MvFUNCTIONRETURN VALUE = 1>

	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Run_Gross" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_Gross"
				QUERY	= "{ 'SELECT
								o.orderdate		AS orderdate,
								p.set_id		AS set_id,
								oi.line_id		AS line_id,
								oi.quantity		AS quantity,
								oi.price		AS oi_price,
								oo.price		AS oo_price
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'OrderOptions oo ON oo.line_id = oi.line_id,
								' $ l.query:product_temp_table $ ' p
							  WHERE
								oi.order_id = o.id	AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ '
							  ORDER BY
								orderdate, line_id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00026', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.last_line_id"				VALUE = -1>
	<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.interval_data"				VALUE = "">

	<MvWHILE EXPR = "{ NOT ProductSales_Gross.d.EOF }">
		<MvWHILE EXPR = "{ ProductSales_Gross.d.orderdate GE l.intervals[ l.interval_pos ]:time_t_end }">
			<MvIF EXPR = "{ NOT ProductSales_Insert_IntervalData( l.report, l.query, l.intervals[ l.interval_pos ], l.interval_data, 2 ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_Gross">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.interval_data"		VALUE = "">
			<MvASSIGN NAME = "l.interval_pos"		VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>

		<MvIF EXPR = "{ ProductSales_Gross.d.line_id NE l.last_line_id }">
			<MvASSIGN NAME = "l.interval_data" INDEX = "{ ProductSales_Gross.d.set_id }"	VALUE = "{ l.interval_data[ ProductSales_Gross.d.set_id ] + ( ProductSales_Gross.d.oi_price * ProductSales_Gross.d.quantity ) }">
			<MvASSIGN NAME = "l.last_line_id"												VALUE = "{ ProductSales_Gross.d.line_id }">
		</MvIF>

		<MvASSIGN NAME = "l.interval_data" INDEX = "{ ProductSales_Gross.d.set_id }"		VALUE = "{ l.interval_data[ ProductSales_Gross.d.set_id ] + ( ProductSales_Gross.d.oo_price * ProductSales_Gross.d.quantity ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductSales_Gross" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_Gross">

	<MvIF EXPR = "{ NOT ProductSales_Insert_IntervalData( l.report, l.query, l.intervals[ l.interval_pos ], l.interval_data, 2 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.interval_pos"				VALUE = "{ l.interval_pos + 1 }">
	<MvASSIGN NAME = "l.interval_data"				VALUE = "">

	<MvWHILE EXPR = "{ l.interval_pos LE l.interval_count }">
		<MvIF EXPR = "{ NOT ProductSales_Insert_IntervalData( l.report, l.query, l.intervals[ l.interval_pos ], l.interval_data, 2 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Run_Units" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductSales_Units"
				QUERY	= "{ 'SELECT
								o.orderdate		AS orderdate,
								p.set_id		AS set_id,
								oi.quantity		AS quantity
							  FROM
								' $ l.query:order_temp_table $ ' o,
								' $ g.Store_Table_Prefix $ 'OrderItems oi,
								' $ l.query:product_temp_table $ ' p
							  WHERE
								oi.order_id = o.id	AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ '
							  ORDER BY
								orderdate' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-PRODSALES-00027', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.interval_data"				VALUE = "">

	<MvWHILE EXPR = "{ NOT ProductSales_Units.d.EOF }">
		<MvWHILE EXPR = "{ ProductSales_Units.d.orderdate GE l.intervals[ l.interval_pos ]:time_t_end }">
			<MvIF EXPR = "{ NOT ProductSales_Insert_IntervalData( l.report, l.query, l.intervals[ l.interval_pos ], l.interval_data, 0 ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_Units">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.interval_data"		VALUE = "">
			<MvASSIGN NAME = "l.interval_pos"		VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>

		<MvASSIGN NAME = "l.interval_data" INDEX = "{ ProductSales_Units.d.set_id }"		VALUE = "{ l.interval_data[ ProductSales_Units.d.set_id ] + ProductSales_Units.d.quantity }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductSales_Units" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSales_Units">

	<MvIF EXPR = "{ NOT ProductSales_Insert_IntervalData( l.report, l.query, l.intervals[ l.interval_pos ], l.interval_data, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.interval_pos"				VALUE = "{ l.interval_pos + 1 }">
	<MvASSIGN NAME = "l.interval_data"				VALUE = "">

	<MvWHILE EXPR = "{ l.interval_pos LE l.interval_count }">
		<MvIF EXPR = "{ NOT ProductSales_Insert_IntervalData( l.report, l.query, l.intervals[ l.interval_pos ], l.interval_data, 0 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductSales_Insert_IntervalData" PARAMETERS = "report var, query var, interval var, data var, rounding" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.reportdata:report_id"	VALUE = "{ l.report:id }">
	<MvASSIGN NAME = "l.reportdata:dt_start"	VALUE = "{ l.interval:time_t_start }">
	<MvASSIGN NAME = "l.reportdata:dt_end"		VALUE = "{ l.interval:time_t_end }">

	<MvWHILE EXPR = "{ l.product_pos LE l.query:product_count }">
		<MvASSIGN NAME = "l.reportdata:set_id"	VALUE = "{ l.query:products[ l.product_pos ]:set_id }">
		<MvASSIGN NAME = "l.reportdata:data"	VALUE = "{ l.data[ l.reportdata:set_id ] ROUND l.rounding }">

		<MvIF EXPR = "{ l.reportdata:data NE 0 }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.product_pos"		VALUE = "{ l.product_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

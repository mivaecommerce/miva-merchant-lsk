<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-RPT-SCR-
| Next Error Code: 12   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-report_sales_commission">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Sales Commission Report">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0900">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "5.62">
	<MvASSIGN NAME = "l.module:description" VALUE = "Use this module to generate reports of orders created by administrative users">
	<MvASSIGN NAME = "l.module:features"	VALUE = "report">
</MvFUNCTION>

<MvCOMMENT>
|
| Report Feature (report)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ReportModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:date_range"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:date_interval"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:display"				VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_chart"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_tabular"		VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_custom"			VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Fields" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:id }">
		<MvASSIGN NAME = "g.Report_SalesCommission_OrderSource"		VALUE = "{ l.report:config:ordersource }">
		<MvASSIGN NAME = "g.Report_SalesCommission_Display_TopN" 	VALUE = "{ l.report:config:display_topn }">
		<MvASSIGN NAME = "g.Report_SalesCommission_Chart_TopN"		VALUE = "{ l.report:config:chart_topn }">
		<MvASSIGN NAME = "g.Report_SalesCommission_Export_TopN"		VALUE = "{ l.report:config:export_topn }">
	<MvELSE>
		<MvASSIGN NAME = "g.Report_SalesCommission_OrderSource"		VALUE = "all">
		<MvASSIGN NAME = "g.Report_SalesCommission_Display_TopN" 	VALUE = 10>
		<MvASSIGN NAME = "g.Report_SalesCommission_Chart_TopN"		VALUE = 10>
		<MvASSIGN NAME = "g.Report_SalesCommission_Export_TopN"		VALUE = 10>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "ordersource,topn">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'ordersource' }">	<MvFUNCTIONRETURN VALUE = "<b>Order Source(s):<b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">	<MvFUNCTIONRETURN VALUE = "<b>Display:<b>">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'ordersource' }">
		<span style="white-space: nowrap;">
			<select name="Report_SalesCommission_OrderSource">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'all',					g.Report_SalesCommission_OrderSource, 'All' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'all_groupbysource',	g.Report_SalesCommission_OrderSource, 'All - Group By Source' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'user',				g.Report_SalesCommission_OrderSource, 'Admin' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'shopascustomer',		g.Report_SalesCommission_OrderSource, 'Shop As Customer' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'reviewbaskets',		g.Report_SalesCommission_OrderSource, 'Review Baskets' ) }">
			</select>
		</span>
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">
		<div style="margin-bottom: 3px;"><input type="text" size="5" name="Report_SalesCommission_Display_TopN" value="{ encodeentities( g.Report_SalesCommission_Display_TopN ) }"> record(s) on the main screen</div>
		<div style="margin-bottom: 3px;"><input type="text" size="5" name="Report_SalesCommission_Chart_TopN" value="{ encodeentities( g.Report_SalesCommission_Chart_TopN ) }"> record(s) on the expanded chart</div>
		<div style="margin-bottom: 3px;"><input type="text" size="5" name="Report_SalesCommission_Export_TopN" value="{ encodeentities( g.Report_SalesCommission_Export_TopN ) }"> record(s) in exported data</div>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Validate" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Report_SalesCommission_OrderSource" VALUE = "{ trim( g.Report_SalesCommission_OrderSource ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.Report_SalesCommission_OrderSource, 'all,all_groupbysource,user,reviewbaskets,shopascustomer' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_SalesCommission_OrderSource', 'Please select a valid Order Source' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_SalesCommission_Display_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_SalesCommission_Display_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_SalesCommission_Chart_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_SalesCommission_Chart_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_SalesCommission_Export_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_SalesCommission_Export_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Update" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:config:display_topn" 	VALUE = "{ g.Report_SalesCommission_Display_TopN }">
	<MvASSIGN NAME = "l.report:config:chart_topn"		VALUE = "{ g.Report_SalesCommission_Chart_TopN }">
	<MvASSIGN NAME = "l.report:config:export_topn"		VALUE = "{ g.Report_SalesCommission_Export_TopN }">
	<MvASSIGN NAME = "l.report:config:ordersource" 		VALUE = "{ g.Report_SalesCommission_OrderSource }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Calculate_DateRange_All" PARAMETERS = "module var, report var, time_t_start var, time_t_end var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderDates"
				QUERY	= "{ 'SELECT
								MIN( orderdate ) AS min_orderdate,
								MAX( orderdate ) AS max_orderdate
							  FROM
								' $ g.Store_Table_Prefix $ 'Orders' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderDates.d.EOF OR ( ( ISNULL OrderDates.d.min_orderdate ) AND ( ISNULL OrderDates.d.max_orderdate ) ) }">
		<MvASSIGN NAME = "l.time_t_start"	VALUE = "{ s.time_t }">
		<MvASSIGN NAME = "l.time_t_end"		VALUE = "{ s.time_t }">
	<MvELSE>
		<MvASSIGN NAME = "l.time_t_start"	VALUE = "{ OrderDates.d.min_orderdate }">
		<MvASSIGN NAME = "l.time_t_end"		VALUE = "{ OrderDates.d.max_orderdate + 1 }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderDates">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Run_Intervals" PARAMETERS = "module var, report var, time_t_start, time_t_end, intervals var, interval_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Delete_Report( l.report:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.query:topn"			VALUE = "{ max( l.report:config:display_topn, max( l.report:config:chart_topn, l.report:config:export_topn ) ) }">
	<MvASSIGN NAME = "l.query:time_t_start"	VALUE = "{ l.time_t_start }">
	<MvASSIGN NAME = "l.query:time_t_end"	VALUE = "{ l.time_t_end }">
	<MvASSIGN NAME = "l.query:users"		VALUE = "">

	<MvASSIGN NAME = "l.result"				VALUE = 1>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"			VALUE = "{ SalesCommission_Create_OrderUser_TempTable( l.query ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"			VALUE = "{ SalesCommission_Create_TopNUser_TempTable( l.query ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result }">
		<MvASSIGN NAME = "l.result"			VALUE = "{ SalesCommission_Run_Intervals( l.report, l.query, l.intervals, l.interval_count ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.query:orderuser_temp_table }">
		<MvASSIGN NAME = "l.result"			VALUE = "{ l.result AND SalesCommission_Drop_TempTable( l.query:orderuser_temp_table ) }">	
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.query:topnuser_temp_table }">
		<MvASSIGN NAME = "l.result"			VALUE = "{ l.result AND SalesCommission_Drop_TempTable( l.query:topnuser_temp_table ) }">	
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Format_Vertical_Label" PARAMETERS = "module var, report var, set_id, label" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.label ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Display" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.report:config:ordersource EQ 'all_groupbysource' }">
		<MvASSIGN NAME = "l.set_count" 		VALUE = "{ miva_array_elements( l.report:last_state:sets ) }">
		<MvREFERENCE NAME = "l.sets" VARIABLE = "l.report:last_state:sets">
	<MvELSE>
		<MvASSIGN NAME = "l.set_count" 		VALUE = "{ miva_array_elements( l.report:last_state:users ) }">
		<MvREFERENCE NAME = "l.sets" VARIABLE = "l.report:last_state:users">
	</MvIF>

	<MvIF EXPR = "{ l.set_count EQ 0 }">
		<i>Not Available</i>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<table style="border-collapse: collapse; font-size: small; font-family: Verdana, Arial, Helvetica, sans-serif;" cellspacing="0" cellpadding="0">
		<thead style="font-weight: bold;">
			<tr style="height: 20px;">
				<td>&nbsp;</td>
				<td align="center">
					<MvEVAL EXPR = "{ encodeentities( l.report:last_state:setsize ) }">

					<MvIF EXPR = "{ l.report:date_group EQ 'H' }">		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Plural( l.report:last_state:setsize, 'Hour',	'Hours' ) }">
					<MvELSEIF EXPR = "{ l.report:date_group EQ 'D' }">	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Plural( l.report:last_state:setsize, 'Day',	'Days' ) }">
					<MvELSEIF EXPR = "{ l.report:date_group EQ 'W' }">	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Plural( l.report:last_state:setsize, 'Week',	'Weeks' ) }">
					<MvELSEIF EXPR = "{ l.report:date_group EQ 'M' }">	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Plural( l.report:last_state:setsize, 'Month',	'Months' ) }">
					<MvELSEIF EXPR = "{ l.report:date_group EQ 'Y' }">	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Plural( l.report:last_state:setsize, 'Year',	'Years' ) }">
					</MvIF>
				</td>
				<td align="right">
					Total Gross Sales
				</td>
			</tr>
		</thead>

		<tbody>
			<MvASSIGN NAME = "l.color_pos"			VALUE = 0>
			<MvASSIGN NAME = "l.color_count" 		VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_Palette( l.colors ) }">

			<MvFOREACH INDEX = "l.set_pos" ITERATOR = "l.set" ARRAY = "l.sets" COUNT = "{ l.set_count }">
				<MvIF EXPR = "{ ++l.color_pos GT l.color_count }">
					<MvASSIGN NAME = "l.color_pos"	VALUE = 1>
				</MvIF>

				<MvIF EXPR = "{ l.set_pos GT l.report:config:chart_topn }">
					<MvFOREACHSTOP>
				</MvIF>

				<MvASSIGN NAME = "l.rgb_color"		VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_HexToRGB( l.colors[ l.color_pos ] ) }">
				<MvASSIGN NAME = "l.image_source"	VALUE = "{ g.json_nosessionurl									$
															   'ST=admin'											$
															   '&Store_Code='	$ encodeattribute( g.Store:code )	$
															   '&Function=ReportData_Graph_Line'					$
															   '&Report_ID='	$ encodeattribute( l.report:id )	$
															   '&Smoothing=0'										$
															   '&Width=100'											$ 
															   '&Height=20'											$
															   '&Set_IDs='		$ encodeattribute( l.set:id )		$
															   '&Colors='		$ encodeattribute( l.rgb_color )	$
															   '&Background=255,255,255' }">

				<tr style="height: 20px;">
					<MvIF EXPR = "{ l.report:config:ordersource EQ 'all_groupbysource' }">
						<td><MvEVAL EXPR = "{ encodeentities( l.set:username ) $ ' (' $  SalesCommission_OrderSource_Mapping( l.set:source ) $ ')' }"></td>
					<MvELSE>
						<td><MvEVAL EXPR = "{ encodeentities( l.set:name ) }"></td>
					</MvIF>
					<td align="center" style="padding-left: 5px; padding-right: 5px;">
						<a href="#" onclick="{ 'Report_Display_Chart( \'' $ [ g.Module_Admin ].JavaScriptEncode( g.Store:code ) $ '\', ' $ int( l.report:id ) $ ', true, ' $ int( l.set:id ) $ ' ); return false' }">
							<MvEVAL EXPR = "{ [ g.Module_Feature_RPT_UT ].Report_Draw_DelayedImage( l.image_source, 100, 20, l.rgb_color ) }">
						</a>
					</td>
					<td align="right">
						<MvEVAL EXPR = "{ ReportModule_Format_Vertical_Label( l.module, l.report, l.set:id, l.set:metric ) }">
					</td>
				</tr>
			</MvFOREACH>
		</tbody>
	</table>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Chart_Type" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "canvas_chart">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Canvas_Chart_Definition" PARAMETERS = "module var, report var, chart var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.color_pos" 					VALUE = 0>
	<MvASSIGN NAME = "l.color_count" 				VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_Palette( l.colors ) }">

	<MvIF EXPR = "{ l.report:config:ordersource EQ 'all_groupbysource' }">
		<MvREFERENCE NAME = "l.sets" VARIABLE = "l.report:last_state:sets">
	<MvELSE>
		<MvREFERENCE NAME = "l.sets" VARIABLE = "l.report:last_state:users">
	</MvIF>

	<MvFOREACH INDEX = "l.set_pos" ITERATOR = "l.set" ARRAY = "l.sets">
		<MvIF EXPR = "{ l.set_pos GT l.report:config:chart_topn }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvIF EXPR = "{ ++l.color_pos GT l.color_count }">
			<MvASSIGN NAME = "l.color_pos" 			VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ l.report:config:ordersource EQ 'all_groupbysource' }">	<MvASSIGN NAME = "l.dataset:name" VALUE = "{ l.set:username $ ' (' $ SalesCommission_OrderSource_Mapping( l.set:source ) $ ')' }">
		<MvELSE>																<MvASSIGN NAME = "l.dataset:name" VALUE = "{ l.set:name }">
		</MvIF>

		<MvASSIGN NAME = "l.dataset:set_id" 		VALUE = "{ l.set:id }">
		<MvASSIGN NAME = "l.dataset:color" 			VALUE = "{ l.colors[ l.color_pos ] }">
		<MvASSIGN NAME = "l.dataset:force_visible" 	VALUE = "{ g.Report_Chart_Param EQ l.set:id }">
		<MvASSIGN NAME = "l.dataset:data_type"		VALUE = "currency">

		<MvASSIGN NAME = "l.chart:dataset_count" 	VALUE = "{ miva_array_insert_var( l.chart:datasets, l.dataset, -1 ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Canvas_Output_LabelFormat_JavaScript" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Tabular_Definition" PARAMETERS = "module var, report var, definition var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:config:ordersource EQ 'all_groupbysource' }">
		<MvFUNCTIONRETURN VALUE = "{ ReportModule_Tabular_Definition_LowLevel_GroupBySource( l.module, l.report, l.definition ) }">
	</MvIF> 

	<MvFUNCTIONRETURN VALUE = "{ ReportModule_Tabular_Definition_LowLevel( l.module, l.report, l.definition ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Tabular_Definition_LowLevel" PARAMETERS = "module var, report var, definition var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.definition:rows"			VALUE = "">
	<MvASSIGN NAME = "l.definition:columns"			VALUE = "">

	<MvCOMMENT>
	|
	| Labels
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.user_count"					VALUE = "{ miva_array_elements( l.report:last_state:users ) }">

	<MvASSIGN NAME = "l.column"						VALUE = "">
	<MvASSIGN NAME = "l.column:type"				VALUE = "values">
	<MvASSIGN NAME = "l.column:start"				VALUE = 1>
	<MvASSIGN NAME = "l.column:values"				VALUE = "">
	<MvASSIGN NAME = "l.column:value_count"			VALUE = "{ miva_array_insert( l.column:values, 'USERNAME', -1 ) }">

	<MvFOREACH INDEX = "l.user_pos" ITERATOR = "l.user" ARRAY = "l.report:last_state:users">
		<MvIF EXPR = "{ l.user_pos GT l.report:config:export_topn }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvASSIGN NAME = "l.column:value_count"		VALUE = "{ miva_array_insert_var( l.column:values, l.user:name, -1 ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.definition:column_count"	VALUE = "{ miva_array_insert_var( l.definition:columns, l.column, -1 ) }">

	<MvCOMMENT>
	|
	| Data
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.user_count GE 1 }">
		<MvASSIGN NAME = "l.row"						VALUE = "">
		<MvASSIGN NAME = "l.row:type"					VALUE = "reportdata_date">
		<MvASSIGN NAME = "l.row:start"					VALUE = 2>
		<MvASSIGN NAME = "l.row:set_id"					VALUE = "{ l.report:last_state:users[ 1 ]:id }">

		<MvASSIGN NAME = "l.definition:row_count"		VALUE = "{ miva_array_insert_var( l.definition:rows, l.row, -1 ) }">

		<MvFOREACH INDEX = "l.user_pos" ITERATOR = "l.user" ARRAY = "l.report:last_state:users" COUNT = "{ l.user_count }">
			<MvIF EXPR = "{ l.user_pos GT l.report:config:export_topn }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.row"					VALUE = "">
			<MvASSIGN NAME = "l.row:type"				VALUE = "reportdata">
			<MvASSIGN NAME = "l.row:start"				VALUE = 2>
			<MvASSIGN NAME = "l.row:set_id"				VALUE = "{ l.user:id }">

			<MvASSIGN NAME = "l.definition:row_count"	VALUE = "{ miva_array_insert_var( l.definition:rows, l.row, -1 ) }">
		</MvFOREACH>
	</MvIF>

	<MvCOMMENT>
	|
	| If there are more than 256 datapoints, rotate the output to be vertical to avoid
	| issues with Excel
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:last_state:setsize GT 256 }">
		<MvASSIGN NAME = "l.temp"					VALUE = "{ l.definition:rows }">
		<MvASSIGN NAME = "l.definition:rows"		VALUE = "{ l.definition:columns }">
		<MvASSIGN NAME = "l.definition:columns"		VALUE = "{ l.temp }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Tabular_Definition_LowLevel_GroupBySource" PARAMETERS = "module var, report var, definition var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.definition:rows"			VALUE = "">
	<MvASSIGN NAME = "l.definition:columns"			VALUE = "">

	<MvCOMMENT>
	|
	| Labels
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.set_count"						VALUE = "{ miva_array_elements( l.report:last_state:sets ) }">

	<MvASSIGN NAME = "l.user_column"					VALUE = "">
	<MvASSIGN NAME = "l.user_column:type"				VALUE = "values">
	<MvASSIGN NAME = "l.user_column:start"				VALUE = 1>
	<MvASSIGN NAME = "l.user_column:values"				VALUE = "">
	<MvASSIGN NAME = "l.user_column:value_count"		VALUE = "{ miva_array_insert( l.user_column:values, 'USERNAME', -1 ) }">

	<MvASSIGN NAME = "l.source_column"					VALUE = "">
	<MvASSIGN NAME = "l.source_column:type"				VALUE = "values">
	<MvASSIGN NAME = "l.source_column:start"			VALUE = 1>
	<MvASSIGN NAME = "l.source_column:values"			VALUE = "">
	<MvASSIGN NAME = "l.source_column:value_count"		VALUE = "{ miva_array_insert( l.source_column:values, 'ORDER SOURCE', -1 ) }">

	<MvFOREACH INDEX = "l.set_pos" ITERATOR = "l.set" ARRAY = "l.report:last_state:sets" COUNT = "{ l.set_count }">
		<MvIF EXPR = "{ l.set_pos GT l.report:config:chart_topn }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvASSIGN NAME = "l.user_column:value_count"	VALUE = "{ miva_array_insert_var( l.user_column:values, l.set:username, -1 ) }">
		<MvASSIGN NAME = "l.source_column:value_count"	VALUE = "{ miva_array_insert( l.source_column:values, SalesCommission_OrderSource_Mapping( l.set:source ), -1 ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.definition:column_count"		VALUE = "{ miva_array_insert_var( l.definition:columns, l.user_column, -1 ) }">
	<MvASSIGN NAME = "l.definition:column_count"		VALUE = "{ miva_array_insert_var( l.definition:columns, l.source_column, -1 ) }">

	<MvCOMMENT>
	|
	| Data
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.set_count GE 1 }">
		<MvASSIGN NAME = "l.row"						VALUE = "">
		<MvASSIGN NAME = "l.row:type"					VALUE = "reportdata_date">
		<MvASSIGN NAME = "l.row:start" 					VALUE = "{ ternary( l.report:last_state:setsize GT 256, 3, 2 ) }">
		<MvASSIGN NAME = "l.row:set_id"					VALUE = "{ l.report:last_state:sets[ 1 ]:id }">

		<MvASSIGN NAME = "l.definition:row_count"		VALUE = "{ miva_array_insert_var( l.definition:rows, l.row, -1 ) }">

		<MvFOREACH INDEX = "l.set_pos" ITERATOR = "l.set" ARRAY = "l.report:last_state:sets" COUNT = "{ l.set_count }">
			<MvIF EXPR = "{ l.set_pos GT l.report:config:chart_topn }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.row"					VALUE = "">
			<MvASSIGN NAME = "l.row:type"				VALUE = "reportdata">
			<MvASSIGN NAME = "l.row:start" 				VALUE = "{ ternary( l.report:last_state:setsize GT 256, 3, 2 ) }">
			<MvASSIGN NAME = "l.row:set_id"				VALUE = "{ l.set:id }">

			<MvASSIGN NAME = "l.definition:row_count"	VALUE = "{ miva_array_insert_var( l.definition:rows, l.row, -1 ) }">
		</MvFOREACH>
	</MvIF>

	<MvCOMMENT>
	|
	| If there are more than 256 datapoints, rotate the output to be vertical to avoid
	| issues with Excel
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:last_state:setsize GT 256 }">
		<MvASSIGN NAME = "l.temp"					VALUE = "{ l.definition:rows }">
		<MvASSIGN NAME = "l.definition:rows"		VALUE = "{ l.definition:columns }">
		<MvASSIGN NAME = "l.definition:columns"		VALUE = "{ l.temp }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Provision_Settings" PARAMETERS = "module var, report var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:module_id NE l.module:id }">
		<MvASSIGN NAME = "l.report:config:display_topn"		VALUE = 10>
		<MvASSIGN NAME = "l.report:config:chart_topn"		VALUE = 10>
		<MvASSIGN NAME = "l.report:config:export_topn"		VALUE = 10>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R', l.provide_xml, 'OrderSource',	l.report:config:ordersource, 'all,all_groupbysource,user,shopascustomer,reviewbaskets', 'all,all_groupbysource,user,shopascustomer,reviewbaskets' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Display_TopN',	l.report:config:display_topn )																														OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Chart_TopN',	l.report:config:chart_topn )																														OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Export_TopN',	l.report:config:export_topn ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Delete" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Temporary Table Functions
|
| This report uses the following temporary tables:
|
|	Order User: sNN_TempSCMOUNN ( user_id, user_name, orderdate, total ): query:orderuser_temp_table (always present)
|		Contains the user_id, user_name, date, and order total of every order/user within the overall date range
|
|	TopN User: sNN_TempSCMTUNN ( user_id ): query:topnuser_temp_table (always present)
|		Contains the id of users meeting the Top-N restriction within the overall date range
|
| There is some overlap between the temporary tables because the whittling-down of entries from one temporary table to the next is
| done progressively in an attempt to increase efficiency.  For example, the Order temporary table is created before the User
| temporary table to make calculating the final set of users (subject to Top-N) more efficient, and the two temporary tables are
| then used in conjunction when calculating the per-interval data.
|
</MvCOMMENT>

<MvFUNCTION NAME = "SalesCommission_Create_OrderUser_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvFOR INDEX = "l.attempt" COUNT = 5>
		<MvASSIGN NAME = "l.query:orderuser_temp_table" VALUE = "{ g.Store_Table_Prefix $ 'TempSCMOU' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:orderuser_temp_table $ '
							  (
								user_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
								user_name	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 40 )		$ ',
								orderdate	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
								total		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
								source		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvFORSTOP>
		</MvIF>
	</MvFOR>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Populate_OrderUser_TempTable" PARAMETERS = "report var, query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.select_query, 'u.id, u.name, o.orderdate, o.total, o.source' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, 'Users', 'u' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, g.Store_Table_Prefix $ 'Orders', 'o' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'o.orderdate	>= ?',		[ g.Module_Library_DB ].SQL_Query_Field( l.query:time_t_start ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'o.orderdate	<= ?',		[ g.Module_Library_DB ].SQL_Query_Field( l.query:time_t_end ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'o.source_id	= u.id',	'' ) }">

	<MvIF EXPR = "{ l.report:config:ordersource EQ 'user' }">					<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, '( o.source = \'user\' )', 			'' ) }">
	<MvELSEIF EXPR = "{ l.report:config:ordersource EQ 'shopascustomer' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, '( o.source = \'shopascustomer\' )',	'' ) }">
	<MvELSEIF EXPR = "{ l.report:config:ordersource EQ 'reviewbaskets' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, '( o.source = \'reviewbaskets\' )',	'' ) }">
	<MvELSE>																	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, '( o.source = \'user\' OR
																																							  o.source = \'shopascustomer\' OR
																																							  o.source = \'reviewbaskets\' )',	'' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.select_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.select_query, l.select_fields ) }">

	<MvQUERY NAME	= "Merchant"	
			 QUERY	= "{ 'INSERT INTO ' $ l.query:orderuser_temp_table $ ' ' $ l.select_sql }"
			 FIELDS	= "{ l.select_fields }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Index_OrderUser_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ l.query:orderuser_temp_table $ '_1 ON ' $ l.query:orderuser_temp_table $ ' ( orderdate )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Create_TopNUser_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvFOR INDEX = "l.attempt" COUNT = 5>
		<MvASSIGN NAME = "l.query:topnuser_temp_table" VALUE = "{ g.Store_Table_Prefix $ 'TempSCMTU' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.query:topnuser_temp_table $ '
							  (
								id ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvFORSTOP>
		</MvIF>
	</MvFOR>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Insert_TopNUser_TempTable" PARAMETERS = "report var, query var, id, name, metric, count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.query:topnuser_temp_table $ ' ( id ) VALUES ( ? )' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Register this user in the persistent query user information, so that it can be persisted for report display
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:config:ordersource EQ 'all_groupbysource' }">
		<MvASSIGN NAME = "l.query:users" MEMBER = "{ l.name }" VALUE = "{ l.count }">
	<MvELSE>
		<MvASSIGN NAME = "l.user:id"		VALUE = "{ l.id }">
		<MvASSIGN NAME = "l.user:name"		VALUE = "{ l.name }">
		<MvASSIGN NAME = "l.user:metric"	VALUE = "{ l.metric }">

		<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert_var( l.query:users, l.user, -1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Populate_TopNUser_TempTable" PARAMETERS = "report var, query var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.select_query, 'user_id		AS user_id,
																				 user_name		AS user_name,
																				 SUM( total )	AS metric' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, l.query:orderuser_temp_table, '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.select_query, 'user_id, user_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.select_query, 'metric', 'DESC' ) }">

	<MvASSIGN NAME = "l.select_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.select_query, l.select_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI].DB_OPENVIEW_Range( 'Merchant', 'SalesCommission_Orders',
																		    l.select_sql, l.select_fields,
																		    0, l.query:topn ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00007', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ ( NOT SalesCommission_Orders.d.EOF ) AND ( ++l.count LE l.query:topn ) }">
		<MvIF EXPR = "{ NOT SalesCommission_Insert_TopNUser_TempTable( l.report, l.query, SalesCommission_Orders.d.user_id, SalesCommission_Orders.d.user_name, SalesCommission_Orders.d.metric, l.count ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalesCommission_Orders">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "SalesCommission_Orders" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalesCommission_Orders">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Index_TopNUser_TempTable" PARAMETERS = "query var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ l.query:topnuser_temp_table $ '_1 ON ' $ l.query:topnuser_temp_table $ ' ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Drop_TempTable" PARAMETERS = "table_name" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ l.table_name }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Report Data Generation Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "SalesCommission_Run_Intervals" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Populate the Order temporary table, satisfying any product or price group restrictions
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT SalesCommission_Populate_OrderUser_TempTable( l.report, l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT SalesCommission_Index_OrderUser_TempTable( l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Populate the User temporary table
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT SalesCommission_Populate_TopNUser_TempTable( l.report, l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT SalesCommission_Index_TopNUser_TempTable( l.query ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Generate data for each interval
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:config:ordersource EQ 'all_groupbysource' }">
		<MvIF EXPR = "{ NOT SalesCommission_Run_Metric_GroupBySource( l.report, l.query, l.intervals, l.interval_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.report:last_state:sets" 	VALUE = "{ l.query:sets }">
	<MvELSE>
		<MvIF EXPR = "{ NOT SalesCommission_Run_Metric( l.report, l.query, l.intervals, l.interval_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.report:last_state:users"	VALUE = "{ l.query:users }">
	</MvIF>

	<MvASSIGN NAME = "l.report:last_state:setsize"		VALUE = "{ l.interval_count }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Run_Metric" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.select_query, 'o.user_id		AS user_id,
																				 o.orderdate	AS orderdate,
																				 SUM( o.total )	AS metric' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, l.query:orderuser_temp_table,	'o' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, l.query:topnuser_temp_table,	'u' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'u.id = o.user_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.select_query, 'o.user_id, o.orderdate' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.select_query, 'user_id',	'ASC' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.select_query, 'orderdate',	'ASC' ) }">

	<MvASSIGN NAME = "l.units_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.select_query, l.units_fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "SalesCommission_Units"
				QUERY	= "{ l.units_sql }"
				FIELDS	= "{ l.units_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00010', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.reportdata:report_id"			VALUE = "{ l.report:id }">

	<MvCOMMENT>
	|
	| The query is sorted by user code and then order date, so the outer WHILE loop here iterates over users, and the inner loop
	| handles each interval for a single user.
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ NOT SalesCommission_Units.d.EOF }">
		<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
		<MvASSIGN NAME = "l.interval_data"				VALUE = "">

		<MvASSIGN NAME = "l.reportdata:set_id"			VALUE = "{ SalesCommission_Units.d.user_id }">

		<MvWHILE EXPR = "{ ( NOT SalesCommission_Units.d.EOF ) AND ( l.interval_pos LE l.interval_count ) }">
			<MvASSIGN NAME = "l.reportdata:data"		VALUE = 0>
			<MvASSIGN NAME = "l.reportdata:dt_start"	VALUE = "{ l.intervals[ l.interval_pos ]:time_t_start }">
			<MvASSIGN NAME = "l.reportdata:dt_end"		VALUE = "{ l.intervals[ l.interval_pos ]:time_t_end }">

			<MvCOMMENT>
			|
			| We have moved on to the next user
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ SalesCommission_Units.d.user_id NE l.reportdata:set_id }">
				<MvWHILESTOP>
			</MvIF>

			<MvCOMMENT>
			|
			| While we are within this interval, accumulate the units amount for each involved orderitem
			|
			</MvCOMMENT>

			<MvWHILE EXPR = "{ ( NOT SalesCommission_Units.d.EOF ) AND ( SalesCommission_Units.d.user_id EQ l.reportdata:set_id ) AND ( SalesCommission_Units.d.orderdate LT l.intervals[ l.interval_pos ]:time_t_end ) }">
				<MvASSIGN NAME = "l.reportdata:data"	VALUE = "{ l.reportdata:data + SalesCommission_Units.d.metric }">

				<MvSKIP NAME = "Merchant" VIEW = "SalesCommission_Units" ROWS = 1>
			</MvWHILE>

			<MvCOMMENT>
			|
			| Insert data for this interval, if needed, and skip to the next one
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.reportdata:data NE 0 }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalesCommission_Units">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalesCommission_Units">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Run_Metric_GroupBySource" PARAMETERS = "report var, query var, intervals var, interval_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.select_query, 'o.user_id		AS user_id,
																				 o.user_name 	AS username,
																				 o.source		AS source,
																				 o.orderdate	AS orderdate,
																				 SUM( o.total )	AS metric' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, l.query:orderuser_temp_table,	'o' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.select_query, l.query:topnuser_temp_table,	'u' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.select_query, 'u.id = o.user_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.select_query, 'o.user_id, o.source, o.user_name, o.orderdate' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.select_query, 'user_id',	'ASC' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.select_query, 'source',		'ASC' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.select_query, 'orderdate',	'ASC' ) }">

	<MvASSIGN NAME = "l.units_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.select_query, l.units_fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "SalesCommission_Units"
				QUERY	= "{ l.units_sql }"
				FIELDS	= "{ l.units_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-SCR-00011', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.reportdata:report_id"			VALUE = "{ l.report:id }">

	<MvCOMMENT>
	|
	| The query is sorted by user, then source, and then order date, so the outer WHILE loop here iterates over unique userXsource combinations, and the inner loop
	| handles each interval for a single userXsource combination.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.set_id" 						VALUE = 1>
	<MvASSIGN NAME = "l.query:sets" 					VALUE = "">

	<MvWHILE EXPR = "{ NOT SalesCommission_Units.d.EOF }">
		<MvASSIGN NAME = "l.interval_pos"				VALUE = 1>
		<MvASSIGN NAME = "l.interval_data"				VALUE = "">

		<MvASSIGN NAME = "l.reportdata:set_id"			VALUE = "{ l.set_id++ }">

		<MvASSIGN NAME = "l.current_user" 				VALUE = "{ SalesCommission_Units.d.user_id }">
		<MvASSIGN NAME = "l.current_source" 			VALUE = "{ SalesCommission_Units.d.source }">

		<MvASSIGN NAME = "l.set" 						VALUE = "">
		<MvASSIGN NAME = "l.set:source" 				VALUE = "{ l.current_source }">
		<MvASSIGN NAME = "l.set:id" 					VALUE = "{ l.reportdata:set_id }">
		<MvASSIGN NAME = "l.set:username" 				VALUE = "{ SalesCommission_Units.d.username }">
		<MvASSIGN NAME = "l.set:user_id" 				VALUE = "{ l.current_user }">
		<MvASSIGN NAME = "l.set:disp_order" 			VALUE = "{ miva_variable_value( 'l.query:users:' $ l.set:username ) }">
		<MvASSIGN NAME = "l.set:metric" 				VALUE = 0>

		<MvWHILE EXPR = "{ ( NOT SalesCommission_Units.d.EOF ) AND ( l.interval_pos LE l.interval_count ) }">
			<MvASSIGN NAME = "l.reportdata:data"		VALUE = 0>
			<MvASSIGN NAME = "l.reportdata:dt_start"	VALUE = "{ l.intervals[ l.interval_pos ]:time_t_start }">
			<MvASSIGN NAME = "l.reportdata:dt_end"		VALUE = "{ l.intervals[ l.interval_pos ]:time_t_end }">

			<MvCOMMENT>
			|
			| While we are within this interval, accumulate the units amount for each involved orderitem
			|
			</MvCOMMENT>

			<MvWHILE EXPR = "{ ( NOT SalesCommission_Units.d.EOF ) AND ( SalesCommission_Units.d.user_id EQ l.current_user ) AND ( SalesCommission_Units.d.source EQ l.current_source ) AND ( SalesCommission_Units.d.orderdate LT l.intervals[ l.interval_pos ]:time_t_end ) }">
				<MvASSIGN NAME = "l.reportdata:data"	VALUE = "{ l.reportdata:data + SalesCommission_Units.d.metric }">

				<MvSKIP NAME = "Merchant" VIEW = "SalesCommission_Units" ROWS = 1>
			</MvWHILE>

			<MvCOMMENT>
			|
			| Insert data for this interval, if needed, and skip to the next one
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.reportdata:data NE 0 }">
				<MvASSIGN NAME = "l.set:metric" 		VALUE = "{ l.set:metric + l.reportdata:data }">

				<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalesCommission_Units">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.interval_pos"			VALUE = "{ l.interval_pos + 1 }">
		</MvWHILE>

		<MvASSIGN NAME = "l.null" 						VALUE = "{ miva_array_insert_var( l.query:sets, l.set, -1 ) }">
	</MvWHILE>

	<MvASSIGN NAME = "l.null" 							VALUE = "{ miva_array_sort( l.query:sets, 'SalesCommission_Sort_Callback', l.null ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SalesCommission_Units">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:disp_order GT l.right:disp_order }"> 	<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.left:disp_order LT l.right:disp_order }"> <MvFUNCTIONRETURN VALUE = -1>
	</MvIF>

	<MvIF EXPR = "{ l.left:metric LT l.right:metric }">				<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.left:metric GT l.right:metric }"> 		<MvFUNCTIONRETURN VALUE = -1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ strcmp( l.left:source, l.right:source ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "SalesCommission_OrderSource_Mapping" PARAMETERS = "source" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.source EQ 'user' }"> 					<MvFUNCTIONRETURN VALUE = "Manual">
	<MvELSEIF EXPR = "{ l.source EQ 'shopascustomer' }">	<MvFUNCTIONRETURN VALUE = "Shop As Customer">
	<MvELSEIF EXPR = "{ l.source EQ 'reviewbaskets' }">		<MvFUNCTIONRETURN VALUE = "Review Baskets">
	</MvIF>
</MvFUNCTION>

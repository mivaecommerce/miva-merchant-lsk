<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2022 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-RPT-GEOSALES-
| Next Error Code: 15   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-report_geosales">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Geographic Sales Report">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0500">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "5.62">
	<MvASSIGN NAME = "l.module:features"	VALUE = "report">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:date_range"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:date_interval"			VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:display"				VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_chart"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_tabular"		VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:output_custom"			VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Fields" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:id }">
		<MvASSIGN NAME = "g.Report_GeoSales_Category"		VALUE = "{ l.report:config:category }">
		<MvASSIGN NAME = "g.Report_GeoSales_Product"		VALUE = "{ l.report:config:product }">
		<MvASSIGN NAME = "g.Report_GeoSales_Metric"			VALUE = "{ l.report:config:metric }">
		<MvASSIGN NAME = "g.Report_GeoSales_Address"		VALUE = "{ l.report:config:address }">
		<MvASSIGN NAME = "g.Report_GeoSales_Country"		VALUE = "{ l.report:config:country }">
		<MvASSIGN NAME = "g.Report_GeoSales_State"			VALUE = "{ l.report:config:state }">
		<MvASSIGN NAME = "g.Report_GeoSales_Group"			VALUE = "{ l.report:config:group }">
		<MvASSIGN NAME = "g.Report_GeoSales_Display_TopN"	VALUE = "{ l.report:config:display_topn }">
		<MvASSIGN NAME = "g.Report_GeoSales_Chart_TopN"		VALUE = "{ l.report:config:chart_topn }">
	<MvELSE>
		<MvASSIGN NAME = "g.Report_GeoSales_Category"		VALUE = "">
		<MvASSIGN NAME = "g.Report_GeoSales_Product"		VALUE = "">
		<MvASSIGN NAME = "g.Report_GeoSales_Metric"			VALUE = "gross">
		<MvASSIGN NAME = "g.Report_GeoSales_Address"		VALUE = "billing">
		<MvASSIGN NAME = "g.Report_GeoSales_Country"		VALUE = "">
		<MvASSIGN NAME = "g.Report_GeoSales_State"			VALUE = "">
		<MvASSIGN NAME = "g.Report_GeoSales_Group"			VALUE = "country">
		<MvASSIGN NAME = "g.Report_GeoSales_Display_TopN"	VALUE = 5>
		<MvASSIGN NAME = "g.Report_GeoSales_Chart_TopN"		VALUE = 25>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "category,product,metric,address,country,state,group,topn">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'category' }">		<MvFUNCTIONRETURN VALUE = "Category:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'product' }">		<MvFUNCTIONRETURN VALUE = "Product:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'metric' }">		<MvFUNCTIONRETURN VALUE = "<b>Metric:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'address' }">		<MvFUNCTIONRETURN VALUE = "<b>Address:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'country' }">		<MvFUNCTIONRETURN VALUE = "<b>Country:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'state' }">		<MvFUNCTIONRETURN VALUE = "<b>State:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'group' }">		<MvFUNCTIONRETURN VALUE = "<b>Group by:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">		<MvFUNCTIONRETURN VALUE = "<b>Display:</b>">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'category' }">
		<input type="text" size="20" id="Report_GeoSales_Category" name="Report_GeoSales_Category" value="{ encodeentities( g.Report_GeoSales_Category ) }">
		<a href="JavaScript:CategoryLookupDialog( 'Report_GeoSales_Category' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
	<MvELSEIF EXPR = "{ l.field_id EQ 'product' }">
		<input type="text" size="20" id="Report_GeoSales_Product" name="Report_GeoSales_Product" value="{ encodeentities( g.Report_GeoSales_Product ) }">
		<a href="JavaScript:ProductLookupDialog( 'Report_GeoSales_Product' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
	<MvELSEIF EXPR = "{ l.field_id EQ 'metric' }">
		<select name="Report_GeoSales_Metric">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'gross',	g.Report_GeoSales_Metric, 'Gross Revenue' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'units',	g.Report_GeoSales_Metric, 'Units Sold' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'address' }">
		<select name="Report_GeoSales_Address">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'billing',		g.Report_GeoSales_Address, 'Billing' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'shipping',	g.Report_GeoSales_Address, 'Shipping' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'country' }">
		<select name="Report_GeoSales_Country">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( '', g.Report_GeoSales_Country, '&lt;Include all Countries&gt;' ) }">

		<MvASSIGN NAME = "l.country_pos"		VALUE = 1>
		<MvASSIGN NAME = "l.country_count"		VALUE = "{ [ g.Module_Library_DB ].StoreCountryList_Load_All( l.countries ) }">

		<MvWHILE EXPR = "{ l.country_pos LE l.country_count }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( l.countries[ l.country_pos ]:alpha,
																		 g.Report_GeoSales_Country,
																		 encodeentities( l.countries[ l.country_pos ]:name ) ) }">
			<MvASSIGN NAME = "l.country_pos"	VALUE = "{ l.country_pos + 1 }">	
		</MvWHILE>
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'state' }">
		<select name="Report_GeoSales_State">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( '', g.Report_GeoSales_State, '&lt;Include all States&gt;' ) }">

		<MvASSIGN NAME = "l.state_pos"		VALUE = 1>
		<MvASSIGN NAME = "l.state_count"	VALUE = "{ [ g.Module_Library_DB ].StateList_Load_All( l.states ) }">

		<MvWHILE EXPR = "{ l.state_pos LE l.state_count }">
			<MvIF EXPR = "{ len( l.states[ l.state_pos ]:code ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( l.states[ l.state_pos ]:code,
																			 g.Report_GeoSales_State,
																			 encodeentities( l.states[ l.state_pos ]:name ) ) }">
			</MvIF>

			<MvASSIGN NAME = "l.state_pos"	VALUE = "{ l.state_pos + 1 }">	
		</MvWHILE>
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'group' }">
		<select name="Report_GeoSales_Group">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'country',	g.Report_GeoSales_Group, 'Country' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'state',	g.Report_GeoSales_Group, 'State' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'city',	g.Report_GeoSales_Group, 'City' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'zip',		g.Report_GeoSales_Group, 'Zip/Postal Code' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'topn' }">
		<input type="text" size="5" name="Report_GeoSales_Display_TopN" value="{ encodeentities( g.Report_GeoSales_Display_TopN ) }"> item(s) on the main screen<br>
		<input type="text" size="5" name="Report_GeoSales_Chart_TopN" value="{ encodeentities( g.Report_GeoSales_Chart_TopN ) }"> item(s) on the expanded chart 
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Validate" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Report_GeoSales_Category"		VALUE = "{ trim( g.Report_GeoSales_Category ) }">
	<MvASSIGN NAME = "g.Report_GeoSales_Product"		VALUE = "{ trim( g.Report_GeoSales_Product ) }">
	<MvASSIGN NAME = "g.Report_GeoSales_Country"		VALUE = "{ trim( g.Report_GeoSales_Country ) }">
	<MvASSIGN NAME = "g.Report_GeoSales_State"			VALUE = "{ trim( g.Report_GeoSales_State ) }">
	<MvASSIGN NAME = "g.Report_GeoSales_Display_TopN"	VALUE = "{ trim( g.Report_GeoSales_Display_TopN ) }">
	<MvASSIGN NAME = "g.Report_GeoSales_Chart_TopN"		VALUE = "{ trim( g.Report_GeoSales_Chart_TopN ) }">

	<MvIF EXPR = "{ len( g.Report_GeoSales_Category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( g.Report_GeoSales_Category, l.category ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_GeoSales_Category', 'Category \'' $ g.Report_GeoSales_Category $ '\' not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT GeoSales_Validate_CategoryHeirarchy( l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_GeoSales_Category', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ( g.Report_GeoSales_Metric NE 'gross' ) AND
					( g.Report_GeoSales_Metric NE 'units' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', '', 'Please select a metric' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( g.Report_GeoSales_Address NE 'billing' ) AND
					( g.Report_GeoSales_Address NE 'shipping' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', '', 'Please select an address' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( g.Report_GeoSales_Group NE 'country' ) AND
					( g.Report_GeoSales_Group NE 'state' ) AND
					( g.Report_GeoSales_Group NE 'city' ) AND
					( g.Report_GeoSales_Group NE 'zip' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', '', 'Please select a value to group by' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_GeoSales_Display_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_GeoSales_Display_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Report_GeoSales_Chart_TopN ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Report_GeoSales_Chart_TopN', g.Validation_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Update" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:config:category"		VALUE = "{ g.Report_GeoSales_Category }">
	<MvASSIGN NAME = "l.report:config:product"		VALUE = "{ g.Report_GeoSales_Product }">
	<MvASSIGN NAME = "l.report:config:metric"		VALUE = "{ g.Report_GeoSales_Metric }">
	<MvASSIGN NAME = "l.report:config:address"		VALUE = "{ g.Report_GeoSales_Address }">
	<MvASSIGN NAME = "l.report:config:country"		VALUE = "{ g.Report_GeoSales_Country }">
	<MvASSIGN NAME = "l.report:config:state"		VALUE = "{ g.Report_GeoSales_State }">
	<MvASSIGN NAME = "l.report:config:group"		VALUE = "{ g.Report_GeoSales_Group }">
	<MvASSIGN NAME = "l.report:config:display_topn"	VALUE = "{ g.Report_GeoSales_Display_TopN }">
	<MvASSIGN NAME = "l.report:config:chart_topn"	VALUE = "{ g.Report_GeoSales_Chart_TopN }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Calculate_DateRange_All" PARAMETERS = "module var, report var, time_t_start var, time_t_end var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderDates"
				QUERY	= "{ 'SELECT
								MIN( orderdate ) AS min_orderdate,
								MAX( orderdate ) AS max_orderdate
							  FROM
								' $ g.Store_Table_Prefix $ 'Orders' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderDates.d.EOF OR ( ( ISNULL OrderDates.d.min_orderdate ) AND ( ISNULL OrderDates.d.max_orderdate ) ) }">
		<MvASSIGN NAME = "l.time_t_start"	VALUE = "{ s.time_t }">
		<MvASSIGN NAME = "l.time_t_end"		VALUE = "{ s.time_t }">
	<MvELSE>
		<MvASSIGN NAME = "l.time_t_start"	VALUE = "{ OrderDates.d.min_orderdate }">
		<MvASSIGN NAME = "l.time_t_end"		VALUE = "{ OrderDates.d.max_orderdate + 1 }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderDates">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Run_DateRange" PARAMETERS = "module var, report var, time_t_start, time_t_end" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:last_state:sets"			VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Delete_Report( l.report:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ len( l.report:config:product ) OR
					( len( l.report:config:category ) EQ 0 ) }">
		<MvASSIGN NAME = "l.category_id"			VALUE = 0>
		<MvASSIGN NAME = "l.category_temp_table"	VALUE = "">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.report:config:category, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00001', 'Category \'' $ l.report:config:category $ '\' not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.category_id"			VALUE = "{ l.category:id }">

		<MvIF EXPR = "{ NOT GeoSales_Build_Category_TempTable( l.category_id, l.category_temp_table ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
		<MvASSIGN NAME = "l.ok"	VALUE = "{ GeoSales_Calculate_Gross( l.report, l.time_t_start, l.time_t_end, l.category_id, l.category_temp_table ) }">
	<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }">
		<MvASSIGN NAME = "l.ok"	VALUE = "{ GeoSales_Calculate_Units( l.report, l.time_t_start, l.time_t_end, l.category_id, l.category_temp_table ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.ok" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00002', 'Unsupported metric \'' $ l.report:config:metric $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.category_id }">
		<MvIF EXPR = "{ NOT GeoSales_Drop_TempTable( l.category_temp_table ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.ok }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Format_Vertical_Label" PARAMETERS = "module var, report var, set_id, label" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.label ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.label ROUND 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Display" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ miva_array_elements( l.report:last_state:sets ) EQ 0 }">
		<i>Not Available</i>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ GeoSales_Draw( l.module, l.report, l.report:config:display_topn, 1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Chart_Type" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "html">
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_HTML_Chart" PARAMETERS = "module var, report var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ miva_array_elements( l.report:last_state:sets ) EQ 0 }">
		<div style="margin: 20px; font-style: italic;">There are no orders matching this report's criteria within the configured date range</div>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ GeoSales_Draw( l.module, l.report, l.report:config:chart_topn, 0 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Draw" PARAMETERS = "module var, report var, topn, delay_image_load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.set_count"		VALUE = "{ miva_array_elements( l.report:last_state:sets ) }">
	<MvIF EXPR = "{ l.set_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.set_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.color_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.color_count"			VALUE = "{ [ g.Module_Feature_RPT_UT ].Chart_Color_Palette( l.colors ) }">
	<MvASSIGN NAME = "l.other_total"			VALUE = "">
	<MvASSIGN NAME = "l.displayed_total"		VALUE = 0.00>

	<MvWHILE EXPR = "{ ( l.set_pos LE l.topn ) AND ( l.set_pos LE l.set_count ) }">
		<MvIF EXPR = "{ l.set_pos GT 1 }">
			<MvASSIGN NAME = "l.graph_percents"	VALUE = "{ l.graph_percents $ '|' }">
			<MvASSIGN NAME = "l.graph_colors"	VALUE = "{ l.graph_colors $ '|' }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Sum_Set( l.report:id, l.report:last_state:sets[ l.set_pos ]:set_id, l.data[ l.set_pos ]:total ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.data" INDEX = "{ l.set_pos }" MEMBER = "percent"	VALUE = "{ ( ( l.data[ l.set_pos ]:total * 100 ) / l.report:last_state:total ) ROUND 2 }">
		<MvASSIGN NAME = "l.data" INDEX = "{ l.set_pos }" MEMBER = "label"		VALUE = "{ l.report:last_state:sets[ l.set_pos ]:label }">
		<MvASSIGN NAME = "l.data" INDEX = "{ l.set_pos }" MEMBER = "color"		VALUE = "{ l.colors[ l.color_pos ] }">

		<MvASSIGN NAME = "l.displayed_total"	VALUE = "{ l.displayed_total + l.data[ l.set_pos ]:total }">
		<MvASSIGN NAME = "l.graph_percents"		VALUE = "{ l.graph_percents $ l.data[ l.set_pos ]:percent }">
		<MvASSIGN NAME = "l.graph_colors"		VALUE = "{ l.graph_colors $ [ g.Module_Feature_RPT_UT ].Chart_Color_HexToRGB( l.colors[ l.color_pos ] ) }">
		
		<MvASSIGN NAME = "l.set_pos"			VALUE = "{ l.set_pos + 1 }">
		<MvASSIGN NAME = "l.color_pos"			VALUE = "{ l.color_pos + 1 }">
		<MvIF EXPR = "{ l.color_pos GT l.color_count }">
			<MvASSIGN NAME = "l.color_pos"		VALUE = 1>
		</MvIF>
	</MvWHILE>

	<MvIF EXPR = "{ l.set_pos LE l.set_count }">
		<MvASSIGN NAME = "l.other_total"		VALUE = "{ l.report:last_state:total - l.displayed_total }">
		<MvASSIGN NAME = "l.other_percent"		VALUE = "{ ( ( l.other_total * 100 ) / l.report:last_state:total ) ROUND 2 }">

		<MvASSIGN NAME = "l.graph_percents"		VALUE = "{ l.graph_percents $ '|' $ l.other_percent }">
		<MvASSIGN NAME = "l.graph_colors"		VALUE = "{ l.graph_colors $ '|' $ [ g.Module_Feature_RPT_UT ].Chart_Color_HexToRGB( l.colors[ l.color_pos ] ) }">
		<MvASSIGN NAME = "l.diameter"			VALUE = "{ ( l.topn + 1 ) * 20 }">
	<MvELSE>
		<MvASSIGN NAME = "l.diameter"			VALUE = "{ l.topn * 20 }">
	</MvIF>

	<MvIF EXPR = "{ l.diameter GT 495 }">
		<MvASSIGN NAME = "l.diameter"			VALUE = 495>
	</MvIF>

	<style type="text/css">
		.mm_report_geosales_table
		{
			width: 100%;
			border-collapse: collapse;
		}

		.mm_report_geosales_table tr td
		{
			padding: 6px 5px;
		}

		.mm_report_geosales_table_col_colorswatch
		{
			width: 20px;
		}

		.mm_report_geosales_table_col_percent
		{
			width: 45px;
			font-size: 13px;
			font-weight: 500;
			color: #494a53;
		}

		.mm_report_geosales_table_col_total
		{
			width: 75px;
			font-size: 13px;
			font-weight: normal;
			color: #6a6e79;
		}

		.mm_report_geosales_table_col_label
		{
			width: 100%;
			text-align: right;
			font-size: 13px;
			font-weight: normal;
			color: #6a6e79;
		}

		.mm_report_geosales_colorswatch
		{
			position: relative;
			display: inline-block;
			width: 20px;
			height: 20px;
			border-radius: 4px; 
		}
	</style>

	<table class="mm_report_geosales_table">
		<tr><td>
			<MvASSIGN NAME = "l.image_source"	VALUE = "{ g.json_nosessionurl										$
														   'ST=admin'												$
														   '&Store_Code='	$ encodeattribute( g.Store:code )		$
														   '&Function=ReportData_Graph_Donut'						$
														   '&Report_ID='	$ encodeattribute( l.report:id )		$
														   '&Diameter='		$ encodeattribute( l.diameter )			$
														   '&Percentages='	$ encodeattribute( l.graph_percents )	$
														   '&Colors='		$ encodeattribute( l.graph_colors )		$
														   '&Background=255,255,255' }">

			<MvIF EXPR = "{ l.delay_image_load }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_RPT_UT ].Report_Draw_DelayedImage( l.image_source, l.diameter, l.diameter, gettoken( l.graph_colors, '|', 1 ) ) }">
			<MvELSE>
				<img border="0" src="{ encodeentities( l.image_source ) }">
			</MvIF>
		</td><td valign="top">
			<table class="mm_report_geosales_table">
			<MvASSIGN NAME = "l.set_pos"		VALUE = 1>
			<MvWHILE EXPR = "{ ( l.set_pos LE l.topn ) AND ( l.set_pos LE l.set_count ) }">
				<tr>
					<td class="mm_report_geosales_table_col_colorswatch"><span class="mm_report_geosales_colorswatch" style="{ 'background-color: ' $ encodeentities( l.data[ l.set_pos ]:color ) }"></span></td>
					<td class="mm_report_geosales_table_col_percent"><MvEVAL EXPR = "{ l.data[ l.set_pos ]:percent ROUND 2 }">%</td>
					<td class="mm_report_geosales_table_col_total">
						<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">	<MvEVAL EXPR = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.data[ l.set_pos ]:total ) }">
						<MvELSE>												<MvEVAL EXPR = "{ l.data[ l.set_pos ]:total ROUND 0 }">
						</MvIF>
					</td>
					<td class="mm_report_geosales_table_col_label"><MvEVAL EXPR = "{ encodeentities( l.data[ l.set_pos ]:label ) }"></td>
				</tr>

				<MvASSIGN NAME = "l.set_pos"	VALUE = "{ l.set_pos + 1 }">
			</MvWHILE>

			<MvIF EXPR = "{ NOT ISNULL l.other_total }">
				<tr>
					<td class="mm_report_geosales_table_col_colorswatch"><span class="mm_report_geosales_colorswatch" style="{ 'background-color: ' $ encodeentities( l.colors[ l.color_pos ] ) }"></span></td>
					<td class="mm_report_geosales_table_col_percent"><MvEVAL EXPR = "{ l.other_percent ROUND 2 }">%</td>
					<td class="mm_report_geosales_table_col_total">
						<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">	<MvEVAL EXPR = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.other_total ) }">
						<MvELSE>												<MvEVAL EXPR = "{ l.other_total ROUND 0 }">
						</MvIF>
					</td>
					<td class="mm_report_geosales_table_col_label" align="right">All Others</td>
				</tr>
			</MvIF>
			</table>
		</td></tr>
	</table>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Tabular_Definition" PARAMETERS = "module var, report var, definition var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.set_count"																VALUE = "{ miva_array_elements( l.report:last_state:sets ) }">

	<MvCOMMENT>
	|
	| Create a row with the static labels
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.report:config:group EQ 'country' }">		<MvASSIGN NAME = "l.labels" INDEX = 1 VALUE = "Country">
	<MvELSEIF EXPR = "{ l.report:config:group EQ 'state' }">	<MvASSIGN NAME = "l.labels" INDEX = 1 VALUE = "State">
	<MvELSEIF EXPR = "{ l.report:config:group EQ 'city' }">		<MvASSIGN NAME = "l.labels" INDEX = 1 VALUE = "City">
	<MvELSEIF EXPR = "{ l.report:config:group EQ 'zip' }">		<MvASSIGN NAME = "l.labels" INDEX = 1 VALUE = "Zip/Postal Code">
	</MvIF>

	<MvIF EXPR = "{ l.report:config:metric EQ 'gross' }">		<MvASSIGN NAME = "l.labels" INDEX = 2 VALUE = "Gross Revenue">
	<MvELSEIF EXPR = "{ l.report:config:metric EQ 'units' }">	<MvASSIGN NAME = "l.labels" INDEX = 2 VALUE = "Units Sold">
	</MvIF>

	<MvASSIGN NAME = "l.definition:rows"		INDEX = 1					MEMBER = "type"		VALUE = "values">
	<MvASSIGN NAME = "l.definition:rows"		INDEX = 1					MEMBER = "values"	VALUE = "{ l.labels }">

	<MvCOMMENT>
	|
	| Create a column with labels for the datapoints
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.set_pos"																VALUE = 1>
	<MvASSIGN NAME = "l.labels"																	VALUE = "">

	<MvWHILE EXPR = "{ l.set_pos LE l.set_count }">
		<MvASSIGN NAME = "l.labels"				INDEX = "{ l.set_pos }"							VALUE = "{ l.report:last_state:sets[ l.set_pos ]:label }">
		<MvASSIGN NAME = "l.set_pos"															VALUE = "{ l.set_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.definition:columns"		INDEX = 1					MEMBER = "type"		VALUE = "values">
	<MvASSIGN NAME = "l.definition:columns"		INDEX = 1					MEMBER = "start"	VALUE = 2>
	<MvASSIGN NAME = "l.definition:columns"		INDEX = 1					MEMBER = "values"	VALUE = "{ l.labels }">

	<MvCOMMENT>
	|
	| Create rows with the values
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.set_pos"																VALUE = 1>

	<MvWHILE EXPR = "{ l.set_pos LE l.set_count }">
		<MvASSIGN NAME = "l.definition:rows"	INDEX = "{ l.set_pos + 1 }"	MEMBER = "type"		VALUE = "reportdata">
		<MvASSIGN NAME = "l.definition:rows"	INDEX = "{ l.set_pos + 1 }"	MEMBER = "start"	VALUE = 2>
		<MvASSIGN NAME = "l.definition:rows"	INDEX = "{ l.set_pos + 1 }"	MEMBER = "set_id"	VALUE = "{ l.report:last_state:sets[ l.set_pos ]:set_id }">

		<MvASSIGN NAME = "l.set_pos"															VALUE = "{ l.set_pos + 1 }">
	</MvWHILE>
</MvFUNCTION>

<MvFUNCTION NAME = "ReportModule_Provision_Settings" PARAMETERS = "module var, report var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:config:display_topn"			VALUE = 5>
	<MvASSIGN NAME = "l.report:config:chart_topn"			VALUE = 25>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Category',		l.report:config:category )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Product',		l.report:config:product )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R', l.provide_xml, 'Metric',		l.report:config:metric,		'gross,units',
																																		'gross,units' )				OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R', l.provide_xml, 'Address',		l.report:config:address,	'billing,shipping',
																																		'billing,shipping' )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Country',		l.report:config:country )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'State',		l.report:config:state )									OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R', l.provide_xml, 'Group',		l.report:config:group,		'country,state,city,zip',
																																		'country,state,city,zip' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Display_TopN',	l.report:config:display_topn )							OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml, 'Chart_TopN',	l.report:config:chart_topn ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ len( l.report:config:category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.report:config:category, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category \'' $ l.report:config:category $ '\' does not exist' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT GeoSales_Validate_CategoryHeirarchy( l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Calculate_Gross" PARAMETERS = "report var, time_t_start, time_t_end, category_id, category_temp_table" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:last_state:total"	VALUE = 0.00>

	<MvIF EXPR = "{ len( l.report:config:product ) }">
		<MvIF EXPR = "{ NOT GeoSales_Build_Order_TempTable_Product_Gross( l.report, l.time_t_start, l.time_t_end, l.order_temp_table ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "GeoSales_Orders"
					QUERY	= "{ 'SELECT
									label,
									SUM( total ) AS gross
								  FROM
									' $ l.order_temp_table $ '
								  GROUP BY
									label
								  ORDER BY
									gross DESC' }">
	<MvELSEIF EXPR = "{ l.category_id }">
		<MvIF EXPR = "{ NOT GeoSales_Build_Order_TempTable_Category_Gross( l.report, l.time_t_start, l.time_t_end, l.category_temp_table, l.order_temp_table ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "GeoSales_Orders"
					QUERY	= "{ 'SELECT
									label,
									SUM( total ) AS gross
								  FROM
									' $ l.order_temp_table $ '
								  GROUP BY
									label
								  ORDER BY
									gross DESC' }">
	<MvELSE>
		<MvASSIGN NAME = "l.where_sql"		VALUE = "{ GeoSales_Where( l.report, l.time_t_start, l.time_t_end, l.fields ) }">
		<MvIF EXPR = "{ NOT ISNULL l.where_sql }">
			<MvASSIGN NAME = "l.where_sql"	VALUE = "{ ' WHERE ' $ l.where_sql }">
		</MvIF>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "GeoSales_Orders"
					QUERY	= "{ 'SELECT
									o.' $ GeoSales_Group_Column( l.report ) $ '	AS label,
									SUM( o.total )								AS gross 
								  FROM
									' $ g.Store_Table_Prefix $ 'Orders o
									' $ l.where_sql $ '
								  GROUP BY
									o.' $ GeoSales_Group_Column( l.report ) $ '
								  ORDER BY
									gross DESC' }"
					FIELDS	= "{ l.fields }">
	</MvIF>

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00003', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.set_id"						VALUE = 1>
	<MvASSIGN NAME = "l.reportdata:report_id"		VALUE = "{ l.report:id }">
	<MvASSIGN NAME = "l.reportdata:dt_start"		VALUE = "{ l.time_t_start }">
	<MvASSIGN NAME = "l.reportdata:dt_end"			VALUE = "{ l.time_t_end }">

	<MvWHILE EXPR = "{ NOT GeoSales_Orders.d.EOF }">
		<MvASSIGN NAME = "l.report:last_state:total"											VALUE = "{ l.report:last_state:total + GeoSales_Orders.d.gross }">
		<MvASSIGN NAME = "l.report:last_state:sets" INDEX = "{ l.set_id }" MEMBER = "set_id"	VALUE = "{ l.set_id }">
		<MvASSIGN NAME = "l.report:last_state:sets" INDEX = "{ l.set_id }" MEMBER = "label"		VALUE = "{ GeoSales_Orders.d.label }">

		<MvASSIGN NAME = "l.reportdata:set_id"		VALUE = "{ l.set_id }">
		<MvASSIGN NAME = "l.reportdata:data"		VALUE = "{ GeoSales_Orders.d.gross }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "GeoSales_Orders">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.set_id"					VALUE = "{ l.set_id + 1 }">

		<MvSKIP NAME = "Merchant" VIEW = "GeoSales_Orders" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GeoSales_Orders">

	<MvIF EXPR = "{ len( l.report:config:product ) OR l.category_id }">
		<MvIF EXPR = "{ NOT GeoSales_Drop_TempTable( l.order_temp_table ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Calculate_Units" PARAMETERS = "report var, time_t_start, time_t_end, category_id, category_temp_table" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.report:last_state:total"	VALUE = 0>

	<MvASSIGN NAME = "l.where_sql"				VALUE = "{ GeoSales_Where( l.report, l.time_t_start, l.time_t_end, l.fields ) }">
	<MvIF EXPR = "{ NOT ISNULL l.where_sql }">
		<MvASSIGN NAME = "l.where_sql"			VALUE = "{ l.where_sql $ ' AND' }">
	</MvIF>

	<MvIF EXPR = "{ len( l.report:config:product ) }">
		<MvIF EXPR = "{ NOT ISNULL l.fields }">
			<MvASSIGN NAME = "l.fields"		VALUE = "{ l.fields $ ', ' }">
		</MvIF>
	
		<MvASSIGN NAME = "l.fields"			VALUE = "{ l.fields $ 'l.report:config:product' }">

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "GeoSales_Orders"
					QUERY	= "{ 'SELECT
									o.' $ GeoSales_Group_Column( l.report ) $ '	AS label,
									SUM( oi.quantity )							AS units
								  FROM
									' $ g.Store_Table_Prefix $ 'Orders o,
									' $ g.Store_Table_Prefix $ 'OrderItems oi
								  WHERE
									' $ l.where_sql $ '
									oi.order_id = o.id AND
									' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( '?' ) $ '
								  GROUP BY
									o.' $ GeoSales_Group_Column( l.report ) $ '
								  ORDER BY
									units DESC' }"
					FIELDS	= "{ l.fields }">
	<MvELSEIF EXPR = "{ l.category_id }">
		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "GeoSales_Orders"
					QUERY	= "{ 'SELECT
									o.' $ GeoSales_Group_Column( l.report ) $ '	AS label,
									SUM( oi.quantity )							AS units
								  FROM
									' $ g.Store_Table_Prefix $ 'Orders o,
									' $ g.Store_Table_Prefix $ 'OrderItems oi,
									' $ l.category_temp_table $ ' p
								  WHERE
									' $ l.where_sql $ '
									oi.order_id = o.id AND
									' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ '
								  GROUP BY
									o.' $ GeoSales_Group_Column( l.report ) $ '
								  ORDER BY
									units DESC' }"
					FIELDS	= "{ l.fields }">
	<MvELSE>
		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "GeoSales_Orders"
					QUERY	= "{ 'SELECT
									o.' $ GeoSales_Group_Column( l.report ) $ '	AS label,
									SUM( oi.quantity )							AS units
								  FROM
									' $ g.Store_Table_Prefix $ 'Orders o,
									' $ g.Store_Table_Prefix $ 'OrderItems oi
								  WHERE
									' $ l.where_sql $ '
									oi.order_id = o.id
								  GROUP BY
									o.' $ GeoSales_Group_Column( l.report ) $ '
								  ORDER BY
									units DESC' }"
					FIELDS	= "{ l.fields }">
	</MvIF>

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.set_id"						VALUE = 1>
	<MvASSIGN NAME = "l.reportdata:report_id"		VALUE = "{ l.report:id }">
	<MvASSIGN NAME = "l.reportdata:dt_start"		VALUE = "{ l.time_t_start }">
	<MvASSIGN NAME = "l.reportdata:dt_end"			VALUE = "{ l.time_t_end }">

	<MvWHILE EXPR = "{ NOT GeoSales_Orders.d.EOF }">
		<MvASSIGN NAME = "l.report:last_state:total"											VALUE = "{ l.report:last_state:total + GeoSales_Orders.d.units }">
		<MvASSIGN NAME = "l.report:last_state:sets" INDEX = "{ l.set_id }" MEMBER = "set_id"	VALUE = "{ l.set_id }">
		<MvASSIGN NAME = "l.report:last_state:sets" INDEX = "{ l.set_id }" MEMBER = "label"		VALUE = "{ GeoSales_Orders.d.label }">

		<MvASSIGN NAME = "l.reportdata:set_id"		VALUE = "{ l.set_id }">
		<MvASSIGN NAME = "l.reportdata:data"		VALUE = "{ GeoSales_Orders.d.units }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_DB ].ReportData_Insert( l.reportdata ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "GeoSales_Orders">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.set_id"					VALUE = "{ l.set_id + 1 }">

		<MvSKIP NAME = "Merchant" VIEW = "GeoSales_Orders" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GeoSales_Orders">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Build_Category_TempTable" PARAMETERS = "category_id, table_name var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"		VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.table_name"	VALUE = "{ g.Store_Table_Prefix $ 'TempSRC' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.table_name $ '
							  (
								code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) $ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"	VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT GeoSales_Build_CategoryHeirarchy_SQL( l.category_id, l.category_sql ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.table_name $ '
						  SELECT DISTINCT
							p.code
						  FROM
							' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
							' $ g.Store_Table_Prefix $ 'Products p
						  WHERE
							p.id = cxp.product_id AND
							' $ l.category_sql }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ l.table_name $ '_1 ON ' $ l.table_name $ ' ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Drop_TempTable" PARAMETERS = "table_name" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ l.table_name }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Validate_CategoryHeirarchy" PARAMETERS = "category_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count"	VALUE = 1>
	<MvFUNCTIONRETURN VALUE = "{ GeoSales_Validate_Category_Children( l.category_id, l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Validate_Category_Children" PARAMETERS = "category_id, count var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child" ARRAY = "l.children" COUNT = "{ [ g.Module_Library_DB ].CategoryList_Load_Parent( l.category_id, l.children ) }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ l.count + 1 }">

		<MvIF EXPR = "{ l.count GT 100 }">
			<MvASSIGN NAME = "g.Validation_Message" VALUE = "The specified category hierarchy contains more than 100 categories.  Please select a hierarchy with fewer categories.">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT GeoSales_Validate_Category_Children( l.child:id, l.count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Build_CategoryHeirarchy_SQL" PARAMETERS = "category_id, sql var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id_count"				VALUE = 1>
	<MvASSIGN NAME = "l.ids"		INDEX = 1	VALUE = "{ l.category_id }">

	<MvIF EXPR = "{ NOT GeoSales_Add_Category_Children( l.category_id, l.ids, l.id_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.sql"					VALUE = "{ 'cxp.cat_id IN ( ' $ int( l.ids[ 1 ] ) }">
	<MvASSIGN NAME = "l.id_pos"					VALUE = 2>
	<MvWHILE EXPR = "{ l.id_pos LE l.id_count }">
		<MvASSIGN NAME = "l.sql"				VALUE = "{ l.sql $ ', ' $ int( l.ids[ l.id_pos ] ) }">
		<MvASSIGN NAME = "l.id_pos"				VALUE = "{ l.id_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.sql"					VALUE = "{ l.sql $ ' )' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Add_Category_Children" PARAMETERS = "category_id, ids var, id_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.child_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.child_count"		VALUE = "{ [ g.Module_Library_DB ].CategoryList_Load_Parent( l.category_id, l.children ) }">

	<MvWHILE EXPR = "{ l.child_pos LE l.child_count }">
		<MvASSIGN NAME = "l.id_count"								VALUE = "{ l.id_count + 1 }">
		<MvASSIGN NAME = "l.ids"		INDEX = "{ l.id_count }"	VALUE = "{ l.children[ l.child_pos ]:id }">

		<MvIF EXPR = "{ l.id_count GT 100 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00009', 'The specified category hierarchy contains more than 100 categories.  Please select a hierarchy with fewer categories.' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT GeoSales_Add_Category_Children( l.children[ l.child_pos ]:id, l.ids, l.id_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.child_pos"		VALUE = "{ l.child_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Build_Order_TempTable_Category_Gross" PARAMETERS = "report var, time_t_start, time_t_end, category_temp_table, table_name var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"		VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.table_name"	VALUE = "{ g.Store_Table_Prefix $ 'TempGSRO' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.table_name $ '
							  (
								order_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
								label		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
								total		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"	VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.where_sql"		VALUE = "{ GeoSales_Where( l.report, l.time_t_start, l.time_t_end, l.fields ) }">
	<MvIF EXPR = "{ NOT ISNULL l.where_sql }">
		<MvASSIGN NAME = "l.where_sql"	VALUE = "{ l.where_sql $ ' AND' }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.table_name $ '
						  SELECT DISTINCT
							o.id, o.' $ GeoSales_Group_Column( l.report ) $ ', o.total
						  FROM
							' $ g.Store_Table_Prefix $ 'Orders o,
							' $ g.Store_Table_Prefix $ 'OrderItems oi,
							' $ l.category_temp_table $ ' p
						  WHERE
							' $ l.where_sql $ '
							oi.order_id = o.id AND
							' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) }"
			 FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Build_Order_TempTable_Product_Gross" PARAMETERS = "report var, time_t_start, time_t_end, table_name var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attempt"		VALUE = 1>
	<MvWHILE EXPR = "{ l.attempt LE 5 }">
		<MvASSIGN NAME = "l.table_name"	VALUE = "{ g.Store_Table_Prefix $ 'TempGSRO' $ l.attempt }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'CREATE TABLE ' $ l.table_name $ '
							  (
								order_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
								label		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
								total		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ '
							  )' }">
		<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.attempt"	VALUE = "{ l.attempt + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.where_sql"		VALUE = "{ GeoSales_Where( l.report, l.time_t_start, l.time_t_end, l.fields ) }">
	
	<MvIF EXPR = "{ NOT ISNULL l.where_sql }">	<MvASSIGN NAME = "l.where_sql"	VALUE = "{ l.where_sql $ ' AND' }">	</MvIF>
	<MvIF EXPR = "{ NOT ISNULL l.fields }">		<MvASSIGN NAME = "l.fields"		VALUE = "{ l.fields $ ', ' }">		</MvIF>
	
	<MvASSIGN NAME = "l.fields"			VALUE = "{ l.fields $ 'l.report:config:product' }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ l.table_name $ '
						  SELECT DISTINCT
							o.id, o.' $ GeoSales_Group_Column( l.report ) $ ', o.total
						  FROM
							' $ g.Store_Table_Prefix $ 'Orders o,
							' $ g.Store_Table_Prefix $ 'OrderItems oi
						  WHERE
							' $ l.where_sql $ '
							oi.order_id = o.id AND
							' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( 'oi.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_Upper( '?' ) }"
			 FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-RPT-GEOSALES-00013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Group_Column" PARAMETERS = "report var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.report:config:address EQ 'billing' }">
		<MvIF EXPR = "{ l.report:config:group EQ 'country' }">		<MvFUNCTIONRETURN VALUE = "bill_cntry">
		<MvELSEIF EXPR = "{ l.report:config:group EQ 'state' }">	<MvFUNCTIONRETURN VALUE = "bill_state">
		<MvELSEIF EXPR = "{ l.report:config:group EQ 'city' }">		<MvFUNCTIONRETURN VALUE = "bill_city">
		<MvELSEIF EXPR = "{ l.report:config:group EQ 'zip' }">		<MvFUNCTIONRETURN VALUE = "bill_zip">
		</MvIF>
	<MvELSEIF EXPR = "{ l.report:config:address EQ 'shipping' }">
		<MvIF EXPR = "{ l.report:config:group EQ 'country' }">		<MvFUNCTIONRETURN VALUE = "ship_cntry">
		<MvELSEIF EXPR = "{ l.report:config:group EQ 'state' }">	<MvFUNCTIONRETURN VALUE = "ship_state">
		<MvELSEIF EXPR = "{ l.report:config:group EQ 'city' }">		<MvFUNCTIONRETURN VALUE = "ship_city">
		<MvELSEIF EXPR = "{ l.report:config:group EQ 'zip' }">		<MvFUNCTIONRETURN VALUE = "ship_zip">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "GeoSales_Where" PARAMETERS = "report var, time_t_start, time_t_end, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.report:date_start NE 'ALL' ) AND ( l.report:date_end NE 'ALL' ) }">
		<MvASSIGN NAME = "l.sql"		VALUE = "{ l.sql $ 'o.orderdate >= ? AND o.orderdate < ?' }">
		<MvASSIGN NAME = "l.fields"		VALUE = "l.time_t_start, l.time_t_end">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.report:config:country }">
		<MvIF EXPR = "{ l.report:config:address EQ 'billing' }">
			<MvIF EXPR = "{ NOT ISNULL l.sql }">	<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ ' AND ' }">	</MvIF>
			<MvIF EXPR = "{ NOT ISNULL l.fields }">	<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ ', ' }">	</MvIF>

			<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ 'o.bill_cntry = ?' }">
			<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ 'l.report:config:country' }">
		<MvELSEIF EXPR = "{ l.report:config:address EQ 'shipping' }">
			<MvIF EXPR = "{ NOT ISNULL l.sql }">	<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ ' AND ' }">	</MvIF>
			<MvIF EXPR = "{ NOT ISNULL l.fields }">	<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ ', ' }">	</MvIF>

			<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ 'o.ship_cntry = ?' }">
			<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ 'l.report:config:country' }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.report:config:state }">
		<MvIF EXPR = "{ l.report:config:address EQ 'billing' }">
			<MvIF EXPR = "{ NOT ISNULL l.sql }">	<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ ' AND ' }">	</MvIF>
			<MvIF EXPR = "{ NOT ISNULL l.fields }">	<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ ', ' }">	</MvIF>

			<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ 'o.bill_state = ?' }">
			<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ 'l.report:config:state' }">
		<MvELSEIF EXPR = "{ l.report:config:address EQ 'shipping' }">
			<MvIF EXPR = "{ NOT ISNULL l.sql }">	<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ ' AND ' }">	</MvIF>
			<MvIF EXPR = "{ NOT ISNULL l.fields }">	<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ ', ' }">	</MvIF>

			<MvASSIGN NAME = "l.sql"	VALUE = "{ l.sql $ 'o.ship_state = ?' }">
			<MvASSIGN NAME = "l.fields"	VALUE = "{ l.fields $ 'l.report:config:state' }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.sql }">
</MvFUNCTION>

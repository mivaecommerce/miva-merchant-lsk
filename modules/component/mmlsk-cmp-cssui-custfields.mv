<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CSSUI-CMP-CUST-
| Next Error Code: 6    
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-cmp-cssui-custfields">
	<MvASSIGN NAME = "l.module:name"		VALUE = "CSSUI Customer Fields">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1000">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.08">
	<MvASSIGN NAME = "l.module:features"	VALUE = "component, not_fields, component_prov, skins">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Customer Fields' }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.fields:mode"							VALUE = "{ trim( l.fields:mode ) }">
	<MvASSIGN NAME = "l.fields:prevent_template_auto_update"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:prevent_template_auto_update ) }">

	<MvEVAL EXPR = "{ ModeToSettings_Convert( l.fields:mode, l.mode_settings ) }">

	<MvIF EXPR = "{ ( l.mode_settings:editable EQ l.settings:editable ) AND
					( l.mode_settings:mode EQ l.settings:mode ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StandardFields_Load( l.standard_fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.settings:prevent_template_auto_update" VALUE = "{ l.fields:prevent_template_auto_update }">

	<MvEVAL EXPR = "{ ModeToSettings_Convert( l.fields:mode, l.mode_settings ) }">

	<MvIF EXPR = "{ ( l.mode_settings:editable NE l.settings:editable ) OR
					( l.mode_settings:mode NE l.settings:mode ) }">
		<MvASSIGN NAME = "l.settings:editable"	VALUE = "{ l.mode_settings:editable }">
		<MvASSIGN NAME = "l.settings:mode"		VALUE = "{ l.mode_settings:mode }">
		
		<MvEVAL EXPR = "{ Generate_Code( l.standard_fields, l.settings, l.fields:template_code, l.null ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.fields:template_code, l.settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields:template_code"					VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"				VALUE = "{ l.settings:template_filename }">
		<MvASSIGN NAME = "l.fields:prevent_template_auto_update"	VALUE = "{ l.settings:prevent_template_auto_update }">

		<MvEVAL EXPR = "{ SettingsToMode_Convert( l.settings, l.fields:mode ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border=0 cellpadding=2 cellspacing=0 width="100%">

		<MvIF EXPR = "{ l.fields:mode EQ 'tokens_only_nodisplay' }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_code' ) }">
		<MvELSE>
			<tr><td colspan="2" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 100, l.templateversion:templ_id ) }">
			</td></tr>

			<tr><td colspan="2">&nbsp;</td></tr>
		</MvIF>

		<tr><td>
			&nbsp;
		</td><td>
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:prevent_template_auto_update, l.field_prefix $ 'prevent_template_auto_update', 'Yes', 'Prevent Automatic Updates to This Template' ) }">
		</td></tr>

		<tr><td>
			Mode:
		</td><td>
			<select name="{ encodeentities( l.field_prefix ) $ 'mode' }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'checkout_display_only',	l.fields:mode, 'Checkout: Display-Only' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'checkout_editable',		l.fields:mode, 'Checkout: Editable' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'customer_legacy',			l.fields:mode, 'Customer: Legacy Add/Edit' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'customer_add',			l.fields:mode, 'Customer: Add' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'customer_edit',			l.fields:mode, 'Customer: Edit' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'tokens_only_nodisplay',	l.fields:mode, 'Tokens Only - No Display' ) }">
			</select>
		</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, '' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StandardFields_Load( l.fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ Generate_Code( l.fields, l.settings, l.template_source, l.page ) }">

	<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-' $ tolower( l.item ) $ '.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.template_source, l.settings, l.settings:template_filename ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'states' )		OR
					NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'countries' )	OR
					NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'tax' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.settings:template_filename ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Branch_Head( l.source_branch:id, l.source_settings:template_filename, l.source_templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Branch_Filename( l.dest_branch:id, l.dest_settings:template_filename, l.dest_managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.dest_settings"						VALUE = "{ l.source_settings }">
	<MvASSIGN NAME = "l.dest_settings:template_filename"	VALUE = "{ l.dest_managedtemplate:version:settings:template_filename }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.dest_managedtemplate, '', l.source_templateversion:source, l.dest_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.source_branch:id EQ l.dest_branch:id }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-CUST-00004', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' on branch \'' $ l.dest_branch:name $ '\'' ) }">
	<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-CUST-00005', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' from branch \'' $ l.source_branch:name $ '\' to branch \'' $ l.dest_branch:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:id"				VALUE = "{ g.Customer:id }">
	<MvASSIGN NAME = "l.settings:pgrpcount"			VALUE = "{ g.Customer:pgrpcount }">
	<MvASSIGN NAME = "l.settings:login"				VALUE = "{ g.Customer:login }">
	<MvASSIGN NAME = "l.settings:pw_email"			VALUE = "{ g.Customer:pw_email }">
	<MvASSIGN NAME = "l.settings:password"			VALUE = "{ g.Customer:password }">
	<MvASSIGN NAME = "l.settings:ship_id" 			VALUE = "{ g.Customer:ship_id }">
	<MvASSIGN NAME = "l.settings:ship_res" 			VALUE = "{ g.Customer:ship_res }">
	<MvASSIGN NAME = "l.settings:ship_fname"		VALUE = "{ g.Customer:ship_fname }">
	<MvASSIGN NAME = "l.settings:ship_lname"		VALUE = "{ g.Customer:ship_lname }">
	<MvASSIGN NAME = "l.settings:ship_email"		VALUE = "{ g.Customer:ship_email }">
	<MvASSIGN NAME = "l.settings:ship_comp"			VALUE = "{ g.Customer:ship_comp }">
	<MvASSIGN NAME = "l.settings:ship_phone"		VALUE = "{ g.Customer:ship_phone }">
	<MvASSIGN NAME = "l.settings:ship_fax"			VALUE = "{ g.Customer:ship_fax }">
	<MvASSIGN NAME = "l.settings:ship_addr"			VALUE = "{ g.Customer:ship_addr }">
	<MvASSIGN NAME = "l.settings:ship_addr1"		VALUE = "{ g.Customer:ship_addr1 }">
	<MvASSIGN NAME = "l.settings:ship_addr2"		VALUE = "{ g.Customer:ship_addr2 }">
	<MvASSIGN NAME = "l.settings:ship_city"			VALUE = "{ g.Customer:ship_city }">
	<MvASSIGN NAME = "l.settings:ship_state"		VALUE = "{ g.Customer:ship_state }">
	<MvASSIGN NAME = "l.settings:ship_zip"			VALUE = "{ g.Customer:ship_zip }">
	<MvASSIGN NAME = "l.settings:ship_cntry"		VALUE = "{ g.Customer:ship_cntry }">
	<MvASSIGN NAME = "l.settings:bill_id"			VALUE = "{ g.Customer:bill_id }">
	<MvASSIGN NAME = "l.settings:bill_fname"		VALUE = "{ g.Customer:bill_fname }">
	<MvASSIGN NAME = "l.settings:bill_lname"		VALUE = "{ g.Customer:bill_lname }">
	<MvASSIGN NAME = "l.settings:bill_email"		VALUE = "{ g.Customer:bill_email }">
	<MvASSIGN NAME = "l.settings:bill_comp"			VALUE = "{ g.Customer:bill_comp }">
	<MvASSIGN NAME = "l.settings:bill_phone"		VALUE = "{ g.Customer:bill_phone }">
	<MvASSIGN NAME = "l.settings:bill_fax"			VALUE = "{ g.Customer:bill_fax }">
	<MvASSIGN NAME = "l.settings:bill_addr"			VALUE = "{ g.Customer:bill_addr }">
	<MvASSIGN NAME = "l.settings:bill_addr1"		VALUE = "{ g.Customer:bill_addr1 }">
	<MvASSIGN NAME = "l.settings:bill_addr2"		VALUE = "{ g.Customer:bill_addr2 }">
	<MvASSIGN NAME = "l.settings:bill_city"			VALUE = "{ g.Customer:bill_city }">
	<MvASSIGN NAME = "l.settings:bill_state"		VALUE = "{ g.Customer:bill_state }">
	<MvASSIGN NAME = "l.settings:bill_zip"			VALUE = "{ g.Customer:bill_zip }">
	<MvASSIGN NAME = "l.settings:bill_cntry"		VALUE = "{ g.Customer:bill_cntry }">
	<MvASSIGN NAME = "l.settings:credit"			VALUE = "{ g.Customer:credit }">
	<MvASSIGN NAME = "l.settings:formatted_credit"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.settings:credit ) }">

	<MvIF EXPR = "{ g.Basket:cust_id AND g.Customer_Session_Verified }">
		<MvFOREACH ITERATOR = "l.address" INDEX = "l.pos" ARRAY = "l.customeraddresses" COUNT = "{ [ g.Module_Feature_CUS_DB ].CustomerAddressList_Load_Customer( g.Basket:cust_id, l.customeraddresses ) }">
			<MvASSIGN NAME = "l.settings:address_count" VALUE = "{ miva_array_insert( l.settings:addresses, l.address, -1 ) }">
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ SettingsToMode_Convert( l.settings, l.mode ) }">

	<MvIF EXPR = "{ l.mode EQ 'tokens_only_nodisplay' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.settings:prefix" VALUE = "{ CustomerField_Prefix( l.mode ) }">

	<MvIF EXPR = "{ l.settings:editable }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StandardFields_Load_Cached( l.std_fields ) }">
			<MvASSIGN NAME = "l.std_fields:primaddr"			VALUE = "shipping">
			<MvASSIGN NAME = "l.std_fields:shipping"			VALUE = "D">
			<MvASSIGN NAME = "l.std_fields:billing"				VALUE = "O">
		</MvIF>

		<MvASSIGN NAME = "l.settings:primaddr" 					VALUE = "{ l.std_fields:primaddr }">

		<MvASSIGN NAME = "l.settings:validated_ship_addresses"	VALUE = "">
		<MvASSIGN NAME = "l.settings:validated_bill_addresses"	VALUE = "">

		<MvIF EXPR = "{ g.UI_Exception AND ( ( g.Session:cache:last_ui_exception EQ 'customer_validate_addinfo' )	OR
											 ( g.Session:cache:last_ui_exception EQ 'customer_validate_editinfo' )	OR
											 ( g.Session:cache:last_ui_exception EQ 'order_validate_info' ) ) }">
			<MvFOREACH ITERATOR = "l.validated_address" ARRAY = "{ 'g.' $ l.settings:prefix $ 'ValidatedShipAddresses' }">
				<MvASSIGN NAME = "l.address"			VALUE = "{ l.validated_address }">
				<MvASSIGN NAME = "l.address:validated"	VALUE = 1>

				<MvASSIGN NAME = "l.null" 				VALUE = "{ miva_array_insert( l.settings:validated_ship_addresses, l.address, -1 ) }">
			</MvFOREACH>

			<MvFOREACH ITERATOR = "l.validated_address" ARRAY = "{ 'g.' $ l.settings:prefix $ 'ValidatedBillAddresses' }">
				<MvASSIGN NAME = "l.address"			VALUE = "{ l.validated_address }">
				<MvASSIGN NAME = "l.address:validated"	VALUE = 1>

				<MvASSIGN NAME = "l.null" 				VALUE = "{ miva_array_insert( l.settings:validated_bill_addresses, l.address, -1 ) }">
			</MvFOREACH>

			<MvASSIGN NAME = "l.ship_search"			VALUE = "">
			<MvASSIGN NAME = "l.ship_search_count"		VALUE = 0>

			<MvIF EXPR = "{ l.std_fields:mode_comp NE 'H' }">	<MvASSIGN NAME = "l.ship_search_count" VALUE = "{ miva_array_insert( l.ship_search, '( strcasecmp( l.ship_search_address:comp,		g.' $ l.settings:prefix $ 'ShipCompany )	EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_addr NE 'H' }">	<MvASSIGN NAME = "l.ship_search_count" VALUE = "{ miva_array_insert( l.ship_search, '( strcasecmp( l.ship_search_address:addr1,		g.' $ l.settings:prefix $ 'ShipAddress1 )	EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_addr2 NE 'H' }">	<MvASSIGN NAME = "l.ship_search_count" VALUE = "{ miva_array_insert( l.ship_search, '( strcasecmp( l.ship_search_address:addr2,		g.' $ l.settings:prefix $ 'ShipAddress2 )	EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_city NE 'H' }">	<MvASSIGN NAME = "l.ship_search_count" VALUE = "{ miva_array_insert( l.ship_search, '( strcasecmp( l.ship_search_address:city,		g.' $ l.settings:prefix $ 'ShipCity )		EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_state NE 'H' }">	<MvASSIGN NAME = "l.ship_search_count" VALUE = "{ miva_array_insert( l.ship_search, '( strcasecmp( l.ship_search_address:state,		g.' $ l.settings:prefix $ 'ShipState )		EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_zip NE 'H' }">	<MvASSIGN NAME = "l.ship_search_count" VALUE = "{ miva_array_insert( l.ship_search, '( strcasecmp( l.ship_search_address:zip,		g.' $ l.settings:prefix $ 'ShipZip )		EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_cntry NE 'H' }">	<MvASSIGN NAME = "l.ship_search_count" VALUE = "{ miva_array_insert( l.ship_search, '( strcasecmp( l.ship_search_address:country,	g.' $ l.settings:prefix $ 'ShipCountry )	EQ 0 )', -1 ) }"> </MvIF>

			<MvIF EXPR = "{ NOT miva_array_search( l.settings:validated_ship_addresses, 1, l.ship_search_address, miva_joinstring( l.ship_search, ' AND ', 'trim' ) ) }">
				<MvASSIGN NAME = "l.ship_address:validated"	VALUE = 0>
				<MvASSIGN NAME = "l.ship_address:comp"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipCompany' ) }">
				<MvASSIGN NAME = "l.ship_address:addr1"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipAddress1' ) }">
				<MvASSIGN NAME = "l.ship_address:addr2"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipAddress2' ) }">
				<MvASSIGN NAME = "l.ship_address:city"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipCity' ) }">
				<MvASSIGN NAME = "l.ship_address:state"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipState' ) }">
				<MvASSIGN NAME = "l.ship_address:zip"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipZip' ) }">
				<MvASSIGN NAME = "l.ship_address:country"	VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipCountry' ) }">
				<MvASSIGN NAME = "l.ship_address:resdntl"	VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipResidential' ) }">

				<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_insert( l.settings:validated_ship_addresses, l.ship_address, 1 ) }">
			</MvIF>

			<MvASSIGN NAME = "l.bill_search"				VALUE = "">
			<MvASSIGN NAME = "l.bill_search_count"			VALUE = 0>

			<MvIF EXPR = "{ l.std_fields:mode_comp NE 'H' }">	<MvASSIGN NAME = "l.bill_search_count" VALUE = "{ miva_array_insert( l.bill_search, '( strcasecmp( l.bill_search_address:comp,		g.' $ l.settings:prefix $ 'BillCompany )	EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_addr NE 'H' }">	<MvASSIGN NAME = "l.bill_search_count" VALUE = "{ miva_array_insert( l.bill_search, '( strcasecmp( l.bill_search_address:addr1,		g.' $ l.settings:prefix $ 'BillAddress1 )	EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_addr2 NE 'H' }">	<MvASSIGN NAME = "l.bill_search_count" VALUE = "{ miva_array_insert( l.bill_search, '( strcasecmp( l.bill_search_address:addr2,		g.' $ l.settings:prefix $ 'BillAddress2 )	EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_city NE 'H' }">	<MvASSIGN NAME = "l.bill_search_count" VALUE = "{ miva_array_insert( l.bill_search, '( strcasecmp( l.bill_search_address:city,		g.' $ l.settings:prefix $ 'BillCity )		EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_state NE 'H' }">	<MvASSIGN NAME = "l.bill_search_count" VALUE = "{ miva_array_insert( l.bill_search, '( strcasecmp( l.bill_search_address:state,		g.' $ l.settings:prefix $ 'BillState )		EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_zip NE 'H' }">	<MvASSIGN NAME = "l.bill_search_count" VALUE = "{ miva_array_insert( l.bill_search, '( strcasecmp( l.bill_search_address:zip,		g.' $ l.settings:prefix $ 'BillZip )		EQ 0 )', -1 ) }"> </MvIF>
			<MvIF EXPR = "{ l.std_fields:mode_cntry NE 'H' }">	<MvASSIGN NAME = "l.bill_search_count" VALUE = "{ miva_array_insert( l.bill_search, '( strcasecmp( l.bill_search_address:country,	g.' $ l.settings:prefix $ 'BillCountry )	EQ 0 )', -1 ) }"> </MvIF>

			<MvIF EXPR = "{ NOT miva_array_search( l.settings:validated_bill_addresses, 1, l.bill_search_address, miva_joinstring( l.bill_search, ' AND ', 'trim' ) ) }">
				<MvASSIGN NAME = "l.bill_address:validated"	VALUE = 0>
				<MvASSIGN NAME = "l.bill_address:comp"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillCompany' ) }">
				<MvASSIGN NAME = "l.bill_address:addr1"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillAddress1' ) }">
				<MvASSIGN NAME = "l.bill_address:addr2"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillAddress2' ) }">
				<MvASSIGN NAME = "l.bill_address:city"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillCity' ) }">
				<MvASSIGN NAME = "l.bill_address:state"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillState' ) }">
				<MvASSIGN NAME = "l.bill_address:zip"		VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillZip' ) }">
				<MvASSIGN NAME = "l.bill_address:country"	VALUE = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillCountry' ) }">

				<MvASSIGN NAME = "l.null" 					VALUE = "{ miva_array_insert( l.settings:validated_bill_addresses, l.bill_address, 1 ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT CustomerFields_Invalid() AND NOT g.Basket:cust_id }">
			<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipResidential' }" 		VALUE = "{ l.std_fields:ship_res EQ 'R' }">
		</MvIF>

		<MvIF EXPR = "{ NOT CustomerFields_Invalid() }">
			<MvIF EXPR = "{ ( l.mode EQ 'checkout_editable' ) AND g.Checkout_Session_Verified }">
				<MvASSIGN NAME = "g.ShipFirstName"										VALUE = "{ g.Basket:ship_fname }">
				<MvASSIGN NAME = "g.ShipLastName"										VALUE = "{ g.Basket:ship_lname }">
				<MvASSIGN NAME = "g.ShipEmail"											VALUE = "{ g.Basket:ship_email }">
				<MvASSIGN NAME = "g.ShipCompany"										VALUE = "{ g.Basket:ship_comp }">
				<MvASSIGN NAME = "g.ShipPhone"											VALUE = "{ g.Basket:ship_phone }">
				<MvASSIGN NAME = "g.ShipFax"											VALUE = "{ g.Basket:ship_fax }">
				<MvASSIGN NAME = "g.ShipAddress"										VALUE = "{ g.Basket:ship_addr }">
				<MvASSIGN NAME = "g.ShipAddress1"										VALUE = "{ g.Basket:ship_addr1 }">
				<MvASSIGN NAME = "g.ShipAddress2"										VALUE = "{ g.Basket:ship_addr2 }">
				<MvASSIGN NAME = "g.ShipCity"											VALUE = "{ g.Basket:ship_city }">
				<MvASSIGN NAME = "g.ShipState"											VALUE = "{ g.Basket:ship_state }">
				<MvASSIGN NAME = "g.ShipZip"											VALUE = "{ g.Basket:ship_zip }">
				<MvASSIGN NAME = "g.ShipCountry"										VALUE = "{ g.Basket:ship_cntry }">
				<MvASSIGN NAME = "g.ShipResidential"									VALUE = "{ g.Basket:ship_res }">

				<MvASSIGN NAME = "g.BillFirstName"										VALUE = "{ g.Basket:bill_fname }">
				<MvASSIGN NAME = "g.BillLastName"										VALUE = "{ g.Basket:bill_lname }">
				<MvASSIGN NAME = "g.BillEmail"											VALUE = "{ g.Basket:bill_email }">
				<MvASSIGN NAME = "g.BillCompany"										VALUE = "{ g.Basket:bill_comp }">
				<MvASSIGN NAME = "g.BillPhone"											VALUE = "{ g.Basket:bill_phone }">
				<MvASSIGN NAME = "g.BillFax"											VALUE = "{ g.Basket:bill_fax }">
				<MvASSIGN NAME = "g.BillAddress"										VALUE = "{ g.Basket:bill_addr }">
				<MvASSIGN NAME = "g.BillAddress1"										VALUE = "{ g.Basket:bill_addr1 }">
				<MvASSIGN NAME = "g.BillAddress2"										VALUE = "{ g.Basket:bill_addr2 }">
				<MvASSIGN NAME = "g.BillCity"											VALUE = "{ g.Basket:bill_city }">
				<MvASSIGN NAME = "g.BillState"											VALUE = "{ g.Basket:bill_state }">
				<MvASSIGN NAME = "g.BillCountry"										VALUE = "{ g.Basket:bill_cntry }">
				<MvASSIGN NAME = "g.BillZip"											VALUE = "{ g.Basket:bill_zip }">

				<MvASSIGN NAME = "l.ship_address:fname"									VALUE = "{ g.Basket:ship_fname }">
				<MvASSIGN NAME = "l.ship_address:lname"									VALUE = "{ g.Basket:ship_lname }">
				<MvASSIGN NAME = "l.ship_address:email"									VALUE = "{ g.Basket:ship_email }">
				<MvASSIGN NAME = "l.ship_address:comp"									VALUE = "{ g.Basket:ship_comp }">
				<MvASSIGN NAME = "l.ship_address:phone"									VALUE = "{ g.Basket:ship_phone }">
				<MvASSIGN NAME = "l.ship_address:fax"									VALUE = "{ g.Basket:ship_fax }">
				<MvASSIGN NAME = "l.ship_address:addr1"									VALUE = "{ g.Basket:ship_addr1 }">
				<MvASSIGN NAME = "l.ship_address:addr2"									VALUE = "{ g.Basket:ship_addr2 }">
				<MvASSIGN NAME = "l.ship_address:city"									VALUE = "{ g.Basket:ship_city }">
				<MvASSIGN NAME = "l.ship_address:state"									VALUE = "{ g.Basket:ship_state }">
				<MvASSIGN NAME = "l.ship_address:zip"									VALUE = "{ g.Basket:ship_zip }">
				<MvASSIGN NAME = "l.ship_address:cntry"									VALUE = "{ g.Basket:ship_cntry }">

				<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_AddressFields( g.Basket:cust_id, l.ship_address, l.customershipaddress ) }">
					<MvASSIGN NAME = "g.ShipDescription"								VALUE = "{ l.customershipaddress:descrip }">
				<MvELSE>
					<MvASSIGN NAME = "g.ShipDescription"								VALUE = "{ g.Basket:ship_addr1 }">
				</MvIF>

				<MvASSIGN NAME = "l.bill_address:fname"									VALUE = "{ g.Basket:bill_fname }">
				<MvASSIGN NAME = "l.bill_address:lname"									VALUE = "{ g.Basket:bill_lname }">
				<MvASSIGN NAME = "l.bill_address:email"									VALUE = "{ g.Basket:bill_email }">
				<MvASSIGN NAME = "l.bill_address:comp"									VALUE = "{ g.Basket:bill_comp }">
				<MvASSIGN NAME = "l.bill_address:phone"									VALUE = "{ g.Basket:bill_phone }">
				<MvASSIGN NAME = "l.bill_address:fax"									VALUE = "{ g.Basket:bill_fax }">
				<MvASSIGN NAME = "l.bill_address:addr1"									VALUE = "{ g.Basket:bill_addr1 }">
				<MvASSIGN NAME = "l.bill_address:addr2"									VALUE = "{ g.Basket:bill_addr2 }">
				<MvASSIGN NAME = "l.bill_address:city"									VALUE = "{ g.Basket:bill_city }">
				<MvASSIGN NAME = "l.bill_address:state"									VALUE = "{ g.Basket:bill_state }">
				<MvASSIGN NAME = "l.bill_address:zip"									VALUE = "{ g.Basket:bill_zip }">
				<MvASSIGN NAME = "l.bill_address:cntry"									VALUE = "{ g.Basket:bill_cntry }">

				<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_AddressFields( g.Basket:cust_id, l.bill_address, l.customerbilladdress ) }">
					<MvASSIGN NAME = "g.BillDescription"								VALUE = "{ l.customerbilladdress:descrip }">
				<MvELSE>
					<MvASSIGN NAME = "g.BillDescription"								VALUE = "{ g.Basket:bill_addr1 }">
				</MvIF>
			<MvELSEIF EXPR = "{ g.Basket:cust_id AND g.Customer_Session_Verified }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'LoginEmail' }"			VALUE = "{ g.Customer:pw_email }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'Login' }"				VALUE = "{ g.Customer:login }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'PasswordEmail' }"		VALUE = "{ g.Customer:pw_email }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'CurrentPassword' }"		VALUE = "">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'Password' }"			VALUE = "">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'VerifyPassword' }"		VALUE = "">

				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipFirstName' }"		VALUE = "{ g.Customer:ship_fname }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipLastName' }"		VALUE = "{ g.Customer:ship_lname }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipEmail' }"			VALUE = "{ g.Customer:ship_email }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipCompany' }"			VALUE = "{ g.Customer:ship_comp }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipPhone' }"			VALUE = "{ g.Customer:ship_phone }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipFax' }"				VALUE = "{ g.Customer:ship_fax }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipAddress' }"			VALUE = "{ g.Customer:ship_addr }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipAddress1' }"		VALUE = "{ g.Customer:ship_addr1 }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipAddress2' }"		VALUE = "{ g.Customer:ship_addr2 }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipCity' }"			VALUE = "{ g.Customer:ship_city }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipState' }"			VALUE = "{ g.Customer:ship_state }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipZip' }"				VALUE = "{ g.Customer:ship_zip }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipCountry' }"			VALUE = "{ g.Customer:ship_cntry }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipResidential' }"		VALUE = "{ g.Customer:ship_res }">

				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillFirstName' }"		VALUE = "{ g.Customer:bill_fname }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillLastName' }"		VALUE = "{ g.Customer:bill_lname }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillEmail' }"			VALUE = "{ g.Customer:bill_email }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillCompany' }"			VALUE = "{ g.Customer:bill_comp }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillPhone' }"			VALUE = "{ g.Customer:bill_phone }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillFax' }"				VALUE = "{ g.Customer:bill_fax }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillAddress' }"			VALUE = "{ g.Customer:bill_addr }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillAddress1' }"		VALUE = "{ g.Customer:bill_addr1 }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillAddress2' }"		VALUE = "{ g.Customer:bill_addr2 }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillCity' }"			VALUE = "{ g.Customer:bill_city }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillState' }"			VALUE = "{ g.Customer:bill_state }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillCountry' }"			VALUE = "{ g.Customer:bill_cntry }">
				<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillZip' }"				VALUE = "{ g.Customer:bill_zip }">

				<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID( g.Customer:ship_id, l.customershipaddress ) }">
					<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipDescription' }"	VALUE = "{ l.customershipaddress:descrip }">
				<MvELSE>
					<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipDescription' }"	VALUE = "{ g.Customer:ship_addr1 }">
				</MvIF>

				<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID( g.Customer:bill_id, l.customerbilladdress ) }">
					<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillDescription' }"	VALUE = "{ l.customerbilladdress:descrip }">
				<MvELSE>
					<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillDescription' }"	VALUE = "{ g.Customer:bill_addr1 }">
				</MvIF>

				<MvIF EXPR = "{ l.settings:mode NE 'customer' }">
					<MvASSIGN NAME = "g.Update_Customer" VALUE = "Yes">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.std_fields:primaddr EQ 'shipping' }">		<MvASSIGN NAME = "l.primary_prefix" VALUE = "Ship"> <MvASSIGN NAME = "l.secondary_prefix" VALUE = "Bill">
			<MvELSEIF EXPR = "{ l.std_fields:primaddr EQ 'billing' }">	<MvASSIGN NAME = "l.primary_prefix" VALUE = "Bill"> <MvASSIGN NAME = "l.secondary_prefix" VALUE = "Ship">
			</MvIF>

			<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'FirstName' )	EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'FirstName' )	AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'LastName' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'LastName' )	AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Email' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Email' )		AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Company' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Company' )		AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Phone' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Phone' )		AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Fax' )			EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Fax' )			AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Address' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Address' )		AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Address1' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Address1' )	AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Address2' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Address2' )	AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'City' )			EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'City' )		AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'State' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'State' )		AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Zip' )			EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Zip' )			AND
							miva_variable_value( 'g.' $ l.settings:prefix $ l.primary_prefix $ 'Country' )		EQ miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Country' ) }">
				<MvASSIGN NAME = "l.settings:match" VALUE = 1>
			<MvELSEIF EXPR = "{ ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'FirstName' )	AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'LastName' )	AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Email' )		AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Company' )		AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Phone' )		AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Fax' )			AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Address' )		AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Address1' )	AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Address2' )	AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'City' )		AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'State' )		AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Zip' )			AND
								ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ l.secondary_prefix $ 'Country' ) }">
				<MvASSIGN NAME = "l.settings:match" VALUE = 1>
			<MvELSE>
				<MvASSIGN NAME = "l.settings:match" VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ l.std_fields:primaddr EQ 'shipping' }">
				<MvIF EXPR = "{ ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipCountry' ) }">
					<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipCountry' }"	VALUE = "{ g.Store:country }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.std_fields:primaddr EQ 'billing' }">
				<MvIF EXPR = "{ ISNULL miva_variable_value( 'g.' $ l.settings:prefix $ 'BillCountry' ) }">
					<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillCountry' }"	VALUE = "{ g.Store:country }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ len( miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipState' ) ) AND
						[ g.Module_Library_DB ].State_Load_Code( miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipState' ), l.state ) }">
			<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipStateSelect' }"	VALUE = "{ l.state:code }">
			<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'ShipState' }"		VALUE = "">
		</MvIF>

		<MvIF EXPR = "{ len( miva_variable_value( 'g.' $ l.settings:prefix $ 'BillState' ) ) AND
						[ g.Module_Library_DB ].State_Load_Code( miva_variable_value( 'g.' $ l.settings:prefix $ 'BillState' ), l.state ) }">
			<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillStateSelect' }"	VALUE = "{ l.state:code }">
			<MvASSIGN NAME = "{ 'g.' $ l.settings:prefix $ 'BillState' }"		VALUE = "">
		</MvIF>

		<MvASSIGN NAME = "g.State_Count" VALUE = "{ [ g.Module_Library_DB ].State_Count() }">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'LoginEmail_Invalid' ) }">
		<MvASSIGN NAME = "g.LoginEmail_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.LoginEmail_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'Login_Invalid' ) }">
		<MvASSIGN NAME = "g.Login_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Login_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'PasswordEmail_Invalid' ) }">
		<MvASSIGN NAME = "g.PasswordEmail_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.PasswordEmail_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'CurrentPassword_Invalid' ) }">
		<MvASSIGN NAME = "g.CurrentPassword_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.CurrentPassword_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'Password_Invalid' ) }">
		<MvASSIGN NAME = "g.Password_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Password_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'VerifyPassword_Invalid' ) }">
		<MvASSIGN NAME = "g.VerifyPassword_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.VerifyPassword_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipID_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipID_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipID_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipFirstName_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipFirstName_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipFirstName_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipLastName_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipLastName_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipLastName_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipEmail_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipEmail_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipEmail_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipPhone_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipPhone_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipPhone_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipFax_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipFax_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipFax_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipCompany_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipCompany_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipCompany_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipAddress1_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipAddress1_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipAddress1_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipAddress2_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipAddress2_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipAddress2_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipCity_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipCity_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipCity_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipState_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipState_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipState_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipZip_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipZip_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipZip_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'ShipCountry_Invalid' ) }">
		<MvASSIGN NAME = "g.ShipCountry_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.ShipCountry_Row" VALUE = "form_row">
	</MvIF>

	<MvASSIGN NAME = "g.ShipResidential_Row" VALUE = "form_row">

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillID_Invalid' ) }">
		<MvASSIGN NAME = "g.BillID_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillID_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillFirstName_Invalid' ) }">
		<MvASSIGN NAME = "g.BillFirstName_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillFirstName_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillLastName_Invalid' ) }">
		<MvASSIGN NAME = "g.BillLastName_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillLastName_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillEmail_Invalid' ) }">
		<MvASSIGN NAME = "g.BillEmail_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillEmail_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillPhone_Invalid' ) }">
		<MvASSIGN NAME = "g.BillPhone_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillPhone_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillFax_Invalid' ) }">
		<MvASSIGN NAME = "g.BillFax_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillFax_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillCompany_Invalid' ) }">
		<MvASSIGN NAME = "g.BillCompany_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillCompany_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillAddress1_Invalid' ) }">
		<MvASSIGN NAME = "g.BillAddress1_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillAddress1_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillAddress2_Invalid' ) }">
		<MvASSIGN NAME = "g.BillAddress2_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillAddress2_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillCity_Invalid' ) }">
		<MvASSIGN NAME = "g.BillCity_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillCity_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillState_Invalid' ) }">
		<MvASSIGN NAME = "g.BillState_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillState_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillZip_Invalid' ) }">
		<MvASSIGN NAME = "g.BillZip_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillZip_Row" VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ miva_variable_value( 'g.' $ l.settings:prefix $ 'BillCountry_Invalid' ) }">
		<MvASSIGN NAME = "g.BillCountry_Row" VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.BillCountry_Row" VALUE = "form_row">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside_Deferred( l.all_settings, 'runtime_ui.js' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( l.settings:template_filename, l.all_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_StandardFields" PARAMETERS = "module var, standardfields var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items" COUNT = "{ [ g.Module_Feature_TUI_DB ].ItemList_Load_Module( l.module:id, l.items ) }">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item( l.item:id, l.pages ) }">
			<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
				<MvMEMBER NAME = "{ l.item:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ l.settings:prevent_template_auto_update }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ Generate_Code( l.standardfields, l.settings, l.template_code, l.page ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate,
																													  'Field Settings Update: ' $ [ g.Module_Library_Utilities ].Format_Date( s.dyn_time_t, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( s.dyn_time_t, s.miva_language ),
																													  l.template_code,
																													  l.settings ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-CUST-00003', 'Created managed template version \'' $ l.managedtemplate:id $ '\'' ) }">
		</MvFOREACH>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code" PARAMETERS = "fields var, settings var, code var, page" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:prefix" VALUE = "{ CustomerField_Prefix( l.settings:mode ) }">

	<MvCAPTURE VARIABLE = "l.code">
		<MvIF EXPR = "{ l.settings:mode EQ 'tokens_only_nodisplay' }">
			<MvCOMMENT> Empty Template </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.settings:editable }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ Generate_Code_Editable( l.settings, l.fields, l.page ) }"><MIVA STANDARDOUTPUTLEVEL = "">
		<MvELSE>
				<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ Generate_Code_Readonly( l.settings, l.fields ) }">
	<div class="clear"></div><MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Readonly" PARAMETERS = "settings var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.fields:primaddr EQ 'shipping' }">		<MvASSIGN NAME = "l.order" VALUE = "shipping,billing">
	<MvELSEIF EXPR = "{ l.fields:primaddr EQ 'billing' }">	<MvASSIGN NAME = "l.order" VALUE = "billing,shipping">
	</MvIF>

	<MvASSIGN NAME = "l.pos"		VALUE = 1>
	<MvCAPTURE VARIABLE = "l.field_code">
	<MvWHILE EXPR = "{ l.pos LE 2 }">
		<MvASSIGN NAME = "l.type"	VALUE = "{ gettoken( l.order, ',', l.pos ) }">

		<MvIF EXPR = "{ ( l.type EQ 'shipping' ) AND ( l.fields:shipping NE 'H' ) }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ Generate_Code_Readonly_Shipping( l.settings, l.fields ) }"><MIVA STANDARDOUTPUTLEVEL = "">
		<MvELSEIF EXPR = "{ ( l.type EQ 'billing' ) AND ( l.fields:billing NE 'H' ) }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ Generate_Code_Readonly_Billing( l.settings, l.fields ) }"><MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 1 }">
	</MvWHILE>
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Readonly_Shipping" PARAMETERS = "settings var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.field_code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="ship-to">
	<h2 class="fields-heading">
		Ship To:
	</h2>
	<div id="ship-to-fields"><MIVA STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.fields:mode_fname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Name:</label>
			<mvt:if expr="g.Basket:ship_fname OR g.Basket:ship_lname">
			&mvte:global:Basket:ship_fname; &mvte:global:Basket:ship_lname;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_email NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Email Address:</label>
			<mvt:if expr="g.Basket:ship_email">
			&mvte:global:Basket:ship_email;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div>
	</MvIF><MIVA STANDARDOUTPUTLEVEL = "">

	<MvIF EXPR = "{ l.fields:mode_phone NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Phone Number:</label>
			<mvt:if expr="g.Basket:ship_phone">
			&mvte:global:Basket:ship_phone;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_fax NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Fax Number:</label>
			<mvt:if expr="g.Basket:ship_fax">
			&mvte:global:Basket:ship_fax;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Company:</label>
			<mvt:if expr="g.Basket:ship_comp">
			&mvte:global:Basket:ship_comp;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
		<MvASSIGN NAME = "l.address_ship_content" VALUE = "{ '&mvte:global:Basket:ship_addr1;<br />' $ asciichar( 10 ) }">

		<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
			<MvASSIGN NAME = "l.address_ship_content" VALUE = "{ l.address_ship_content $ '<mvt:if expr=\"g.Basket:ship_addr2\">&mvte:global:Basket:ship_addr2;<br /></mvt:if>' $ asciichar( 10 ) }">
		</MvIF>

		<MvIF EXPR = "{ ( l.fields:mode_city NE 'H' ) OR ( l.fields:mode_state NE 'H' ) OR ( l.fields:mode_zip NE 'H' ) }">
			<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
				<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
					<MvASSIGN NAME = "l.address_ship_content" VALUE = "{ l.address_ship_content $ 
																		   '<mvt:if expr="( NOT ISNULL g.Basket:ship_city ) AND ( NOT ISNULL g.Basket:ship_state )">'	$ asciichar( 10 ) $
																		   '	&mvte:global:Basket:ship_city;,'														$ asciichar( 10 ) $
																		   '<mvt:else>'																					$ asciichar( 10 ) $
																		   '	&mvte:global:Basket:ship_city;'															$ asciichar( 10 ) $
																		   '</mvt:if>'																					$ asciichar( 10 ) }">
				<MvELSE>
					<MvASSIGN NAME = "l.address_ship_content" VALUE = "{ l.address_ship_content $ '&mvte:global:Basket:ship_city;' $ asciichar( 10 ) }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
				<MvASSIGN NAME = "l.address_ship_content"	VALUE = "{ l.address_ship_content $ '&mvte:global:Basket:ship_state;' $ asciichar( 10 ) }">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
				<MvASSIGN NAME = "l.address_ship_content"	VALUE = "{ l.address_ship_content $ '&mvte:global:Basket:ship_zip;' }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }">
			<MvASSIGN NAME = "l.address_ship_content"	VALUE = "{ l.address_ship_content $ '<br /> &mvte:global:Basket:ship_cntry;' }">
		</MvIF>
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Address:</label>
			<div>
				<mvt:if expr="g.Basket:ship_addr1 OR g.Basket:ship_addr2 OR g.Basket:ship_city OR g.Basket:ship_state OR g.Basket:ship_zip OR g.Basket:ship_cntry OR g.Basket:ship_res">
				<MvEVAL EXPR = "{ l.address_ship_content }">

					<mvt:if expr="g.Basket:ship_res">
						<br />
						Residential Address
					</mvt:if>
				<mvt:else>
				&nbsp;
				</mvt:if>
			</div>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	</div>
</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Readonly_Billing" PARAMETERS = "settings var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.field_code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="bill-to">
	<h2 class="fields-heading">
		Bill To:
	</h2>
	<div id="bill-to-fields"><MIVA STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.fields:mode_fname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Name:</label>
			<mvt:if expr="g.Basket:bill_fname OR g.Basket:bill_lname">
			&mvte:global:Basket:bill_fname; &mvte:global:Basket:bill_lname;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_email NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Email Address:</label>
			<mvt:if expr="g.Basket:bill_email">
			&mvte:global:Basket:bill_email;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_phone NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Phone Number:</label>
			<mvt:if expr="g.Basket:bill_phone">
			&mvte:global:Basket:bill_phone;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_fax NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Fax Number:</label>
			<mvt:if expr="g.Basket:bill_fax">
			&mvte:global:Basket:bill_fax;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Company:</label>
			<mvt:if expr="g.Basket:bill_comp">
			&mvte:global:Basket:bill_comp;
			<mvt:else>
			&nbsp;
			</mvt:if>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
		<MvASSIGN NAME = "l.address_bill_content" VALUE = "{ '&mvte:global:Basket:bill_addr1;<br />' $ asciichar( 10 ) }">

		<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
			<MvASSIGN NAME = "l.address_bill_content"			VALUE = "{ l.address_bill_content $ '<mvt:if expr=\"g.Basket:bill_addr2\">&mvte:global:Basket:bill_addr2;<br /></mvt:if>' $ asciichar( 10 ) }">
		</MvIF>

		<MvIF EXPR = "{ ( l.fields:mode_city NE 'H' ) OR ( l.fields:mode_state NE 'H' ) OR ( l.fields:mode_zip NE 'H' ) }">
			<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
				<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
					<MvASSIGN NAME = "l.address_bill_content"	VALUE = "{ l.address_bill_content $ 
																		   '<mvt:if expr="( NOT ISNULL g.Basket:bill_city ) AND ( NOT ISNULL g.Basket:bill_state )">'	$ asciichar( 10 ) $
																		   '	&mvte:global:Basket:bill_city;,'														$ asciichar( 10 ) $
																		   '<mvt:else>'																					$ asciichar( 10 ) $
																		   '	&mvte:global:Basket:bill_city;'															$ asciichar( 10 ) $
																		   '</mvt:if>'																					$ asciichar( 10 ) }">
				<MvELSE>
					<MvASSIGN NAME = "l.address_bill_content"	VALUE = "{ l.address_bill_content $ '&mvte:global:Basket:bill_city;' $ asciichar( 10 ) }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
				<MvASSIGN NAME = "l.address_bill_content"		VALUE = "{ l.address_bill_content $ '&mvte:global:Basket:bill_state;' $ asciichar( 10 ) }">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
				<MvASSIGN NAME = "l.address_bill_content"		VALUE = "{ l.address_bill_content $ '&mvte:global:Basket:bill_zip;' $ asciichar( 10 ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }">
			<MvASSIGN NAME = "l.address_bill_content"			VALUE = "{ l.address_bill_content $ '<br /> &mvte:global:Basket:bill_cntry;' }">
		</MvIF>
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="form_row">
			<label>Address:</label>
			<div>
				<mvt:if expr="g.Basket:bill_addr1 OR g.Basket:bill_addr2 OR g.Basket:bill_city OR g.Basket:bill_state OR g.Basket:bill_zip OR g.Basket:bill_cntry">
				<MvEVAL EXPR = "{ l.address_bill_content }">
				<mvt:else>
				&nbsp;
				</mvt:if>
			</div>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	</div>
</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Validated_Address_Shipping" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.field_code" STANDARDOUTPUTLEVEL = "text, html">
				<mvt:if expr="NOT ISNULL l.settings:customer:validated_ship_addresses">
					<div id="shipping-validated-addresses" class="validated-addresses-container">
						<div>
							<h3>Shipping Address</h3>
							<span>Please select a validated shipping address</span>
						</div>
						<div class="validated-address-row">
							<mvt:foreach iterator="address" array="customer:validated_ship_addresses">
								<div class="validated-address-modal-container">
									<input type="radio" name="{ l.settings:prefix $ 'ShipValidatedSelector' }" class="validated-address-radio" data-mm_address_addr1="&mvte:address:addr1;"
																			    data-mm_address_addr2="&mvte:address:addr2;"
																			    data-mm_address_city="&mvte:address:city;"
																			    data-mm_address_state="&mvte:address:state;"
																			    data-mm_address_zip="&mvte:address:zip;"
																			    data-mm_address_country="&mvte:address:country;"
																			    data-mm_address_resdntl="&mvte:address:resdntl;"
																			    data-mm_address_comp="&mvte:address:comp;" />
									<div class="validated-address-display">
										<mvt:if expr="l.settings:address:validated">
											<b>Validated Address</b><br />
										<mvt:else>
											<b>Use As Entered</b><br />
										</mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:comp"><b>&mvte:address:comp;</b><br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:addr1">&mvte:address:addr1;<br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:addr2">&mvte:address:addr2;<br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:city">&mvte:address:city;</mvt:if><mvt:if expr="( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:state ) OR ( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:zip )">, </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state">&mvte:address:state;</mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state AND NOT ISNULL l.settings:address:zip"> </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:zip">&mvte:address:zip;<br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:country">&mvte:address:country;<br></mvt:if>
										<mvt:if expr="l.settings:address:resdntl">
											<br />
											Residential Address
										</mvt:if>
									</div>
								</div>
							</mvt:foreach>
						</div>
						<input type="hidden" name="{ l.settings:prefix $ 'ShipValidated' }" value="1" />
					</div>
				</mvt:if>
</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Validated_Address_Billing" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.field_code" STANDARDOUTPUTLEVEL = "text, html">
				<mvt:if expr="NOT ISNULL l.settings:customer:validated_bill_addresses">
					<div id="billing-validated-addresses" class="validated-addresses-container">
						<div>
							<h3>Billing Address</h3>
							<span>Please select a validated billing address</span>
						</div>
						<div class="validated-address-row">
							<mvt:foreach iterator="address" array="customer:validated_bill_addresses">
								<div class="validated-address-modal-container">
									<input type="radio" name="{ l.settings:prefix $ 'BillValidatedSelector' }" class="validated-address-radio" data-mm_address_addr1="&mvte:address:addr1;"
																			    data-mm_address_addr2="&mvte:address:addr2;"
																			    data-mm_address_city="&mvte:address:city;"
																			    data-mm_address_state="&mvte:address:state;"
																			    data-mm_address_zip="&mvte:address:zip;"
																			    data-mm_address_country="&mvte:address:country;"
																			    data-mm_address_comp="&mvte:address:comp;" />
									<div class="validated-address-display">
										<mvt:if expr="l.settings:address:validated">
											<b>Validated Address</b><br />
										<mvt:else>
											<b>Use As Entered</b><br />
										</mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:comp"><b>&mvte:address:comp;</b><br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:addr1">&mvte:address:addr1;<br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:addr2">&mvte:address:addr2;<br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:city">&mvte:address:city;</mvt:if><mvt:if expr="( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:state ) OR ( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:zip )">, </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state">&mvte:address:state;</mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state AND NOT ISNULL l.settings:address:zip"> </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:zip">&mvte:address:zip;<br></mvt:if>
										<mvt:if expr="NOT ISNULL l.settings:address:country">&mvte:address:country;<br></mvt:if>
									</div>
								</div>
							</mvt:foreach>
						</div>
						<input type="hidden" name="{ l.settings:prefix $ 'BillValidated' }" value="1" />
					</div>
				</mvt:if>
</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Validated_Address_Modal" PARAMETERS = "settings var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.field_code">
<MIVA STANDARDOUTPUTLEVEL = "text, html"><div id="validated-address-modal" class="validated-address-modal" style="display: none;">
		<div id="validated-address-modal-content" class="validated-address-modal-content">
			<h1>ADDRESS VERIFICATION</h1>
			<div id="validated-addresses" class="validated-addresses"><MIVA STANDARDOUTPUTLEVEL = "">

		<MvIF EXPR = "{ l.fields:primaddr EQ 'shipping' }">		<MvASSIGN NAME = "l.order" VALUE = "shipping,billing">
		<MvELSEIF EXPR = "{ l.fields:primaddr EQ 'billing' }">	<MvASSIGN NAME = "l.order" VALUE = "billing,shipping">
		</MvIF>

		<MvASSIGN NAME = "l.pos"		VALUE = 1>
		<MvWHILE EXPR = "{ l.pos LE 2 }">
			<MvASSIGN NAME = "l.type"	VALUE = "{ gettoken( l.order, ',', l.pos ) }">

			<MvIF EXPR = "{ ( l.type EQ 'shipping' ) AND ( l.fields:shipping NE 'H' ) }">
				<MvEVAL EXPR = "{ Generate_Code_Validated_Address_Shipping( l.settings ) }">
			<MvELSEIF EXPR = "{ ( l.type EQ 'billing' ) AND ( l.fields:billing NE 'H' ) }">
				<MvEVAL EXPR = "{ Generate_Code_Validated_Address_Billing( l.settings ) }">
			</MvIF>

			<MvIF EXPR = "{ l.pos EQ 1 }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
				<div style="flex-basis:100%;height:0;"></div>
<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 1 }">
		</MvWHILE>

<MIVA STANDARDOUTPUTLEVEL = "text, html">			</div>
			<div id="validated-addresses-modal-footer" class="validated-addresses-modal-footer">
				<input id="continue"	type="button" value="Continue"	class="button" >
				<input id="cancel"		type="button" value="Cancel"	class="button" >
			</div>
		</div>
	</div>
	<script type="text/javascript">
		function Validated_Address_Modal( prefix )
		{
			var self = this;
			var i, forms;

			forms                = document.getElementsByTagName( 'form' );

			this.modal           = document.getElementById( 'validated-address-modal' );
			this.continue_button = document.getElementById( 'continue' );
			this.cancel_button   = document.getElementById( 'cancel' );

			for ( i = 0; i < forms.length; i++ )
			{<MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ l.settings:mode EQ 'customer' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'ICST' || forms[ i ].elements[ 'Action' ].value === 'UCST' ) )
				{
					this.element_form = forms[ i ];
					break;
				}<MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSEIF EXPR = "{ l.settings:mode EQ 'customer_add' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'ICST' ) )
				{
					this.element_form = forms[ i ];
					break;
				}<MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSEIF EXPR = "{ l.settings:mode EQ 'customer_edit' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'UCST' ) )
				{
					this.element_form = forms[ i ];
					break;
				}<MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSEIF EXPR = "{ l.settings:mode EQ 'order' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'ORDR' ) )
				{
					this.element_form = forms[ i ];
					break;
				}<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">
			}

			if ( !this.element_form )
			{
				return;
			}
<MIVA STANDARDOUTPUTLEVEL = "">
		<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_comp               = this.element_form.elements[ prefix + 'ShipCompany' ];
			this.element_bill_comp               = this.element_form.elements[ prefix + 'BillCompany' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_addr1              = this.element_form.elements[ prefix + 'ShipAddress1' ];
			this.element_bill_addr1              = this.element_form.elements[ prefix + 'BillAddress1' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_addr2              = this.element_form.elements[ prefix + 'ShipAddress2' ];
			this.element_bill_addr2              = this.element_form.elements[ prefix + 'BillAddress2' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_city               = this.element_form.elements[ prefix + 'ShipCity' ];
			this.element_bill_city               = this.element_form.elements[ prefix + 'BillCity' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_state              = this.element_form.elements[ prefix + 'ShipState' ];
			this.element_ship_stateselect        = this.element_form.elements[ prefix + 'ShipStateSelect' ];
			this.element_bill_state              = this.element_form.elements[ prefix + 'BillState' ];
			this.element_bill_stateselect        = this.element_form.elements[ prefix + 'BillStateSelect' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_zip                = this.element_form.elements[ prefix + 'ShipZip' ];
			this.element_bill_zip                = this.element_form.elements[ prefix + 'BillZip' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_cntry EQ 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_country            = this.element_form.elements[ prefix + 'ShipCountry' ];
			this.element_bill_country            = this.element_form.elements[ prefix + 'BillCountry' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:ship_res NE 'A' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_resdntl            = this.element_form.elements[ prefix + 'ShipResidential' ];<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_ship_id                 = this.element_form.elements[ prefix + 'ShipID' ];
			this.element_ship_validated          = this.element_form.elements[ prefix + 'ShipValidated' ];
			this.element_ship_validated_selector = document.getElementsByName( prefix + 'ShipValidatedSelector' );
			this.element_shipping_modal_content  = document.getElementById( 'shipping-validated-addresses' );
			this.element_bill_id                 = this.element_form.elements[ prefix + 'BillID' ];
			this.element_bill_validated          = this.element_form.elements[ prefix + 'BillValidated' ];
			this.element_bill_validated_selector = document.getElementsByName( prefix + 'BillValidatedSelector' );
			this.element_billing_modal_content   = document.getElementById( 'billing-validated-addresses' );<MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ l.fields:primaddr EQ 'billing' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_shipping_to_show        = this.element_form.elements[ 'shipping_to_show' ];<MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSEIF EXPR = "{ l.fields:primaddr EQ 'shipping' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
			this.element_billing_to_show         = this.element_form.elements[ 'billing_to_show' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:primaddr EQ 'shipping' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_billing_to_show.checked )
			{
				this.element_billing_modal_content.style.display = 'none';
			}<MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSEIF EXPR = "{ l.fields:primaddr EQ 'billing' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_shipping_to_show.checked )
			{
				this.element_shipping_modal_content.style.display = 'none';
			}<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_validated_selector )
			{
				if ( this.element_ship_validated_selector.length === 1 )     this.element_ship_validated_selector[ 0 ].checked = true;
				else if ( this.element_ship_validated_selector.length > 1 )  this.element_ship_validated_selector[ 1 ].checked = true;
			}

			if ( this.element_bill_validated_selector )
			{
				if ( this.element_bill_validated_selector.length === 1 )     this.element_bill_validated_selector[ 0 ].checked = true;
				else if ( this.element_bill_validated_selector.length > 1 )  this.element_bill_validated_selector[ 1 ].checked = true;
			}

			AddEvent( document, 'keydown', function( e ){ self.Focus_Handler( e ); } )
			AddEvent( this.continue_button, 'click', function( e ){ self.Submit( e ); } )
			AddEvent( this.cancel_button, 'click', function( e ){ self.Cancel(); } )

			this.modal.style.display = 'block';

			this.continue_button.focus();
		};

		Validated_Address_Modal.prototype.onError = function( error )
		{
			alert( error );
		}

		Validated_Address_Modal.prototype.Focus_Handler = function( e )
		{
			var focusable_elements, first_focusable_element, focusable_content, last_focusable_element, tab_pressed;

			focusable_elements      = '#cancel, #continue, input.validated-address-radio, [tabindex]:not([tabindex="-1"])';

			first_focusable_element = this.modal.querySelectorAll( focusable_elements )[0];
			focusable_content       = this.modal.querySelectorAll( focusable_elements );
			last_focusable_element  = focusable_content[ focusable_content.length - 1 ];

			tab_pressed = e.key === 'Tab' || e.keyCode === 9;

			if ( !tab_pressed )
			{
				return;
			}

			if ( e.shiftKey )
			{
				if ( document.activeElement === first_focusable_element )
				{
					last_focusable_element.focus();
					e.preventDefault();
				}
			}
			else
			{
				if ( document.activeElement === last_focusable_element )
				{
					first_focusable_element.focus();
					e.preventDefault();
				}
			}
		}

		Validated_Address_Modal.prototype.Submit = function( e )
		{
			var element_submit;

			if ( !this.Submit_Shipping_Form() || !this.Submit_Billing_Form() )
			{
				return;
			}

			if ( this.element_form.requestSubmit )
			{
				this.element_form.requestSubmit();
			}
			else
			{
				element_submit          = document.createElement( 'input' );
				element_submit.type     = 'submit';
				element_submit.hidden   = true;

				this.element_form.appendChild( element_submit );
				element_submit.click();
				this.element_form.removeChild( element_submit );
			}

			this.modal.style.display    = 'none';
		}

		Validated_Address_Modal.prototype.Cancel = function()
		{
			this.element_bill_validated.value = 0;
			this.element_ship_validated.value = 0;
			this.modal.style.display          = 'none';
		}

		Validated_Address_Modal.prototype.Submit_Shipping_Form = function( e )
		{
			var i, i_len, selected_radio_shipping;<MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ l.fields:primaddr EQ 'billing' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_shipping_to_show.checked )
			{
				return true;
			}<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">

			for ( i = 0; i < this.element_ship_validated_selector.length; i++ )
			{
				if ( this.element_ship_validated_selector[ i ].checked )
				{
					selected_radio_shipping = this.element_ship_validated_selector[ i ];
					break;
				}
			}

			if ( !selected_radio_shipping )
			{
				this.onError( 'Please select a validated address.' );
				return false;
			}
<MIVA STANDARDOUTPUTLEVEL = "">

		<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			if ( this.element_ship_addr1 )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_addr1' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_addr1' ) === 'string' )
				{
					this.element_ship_addr1.value = selected_radio_shipping.getAttribute( 'data-mm_address_addr1' );
				}
				else
				{
					this.element_ship_addr1.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_addr2 )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_addr2' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_addr2' ) === 'string' )
				{
					this.element_ship_addr2.value = selected_radio_shipping.getAttribute( 'data-mm_address_addr2' );
				}
				else
				{
					this.element_ship_addr2.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_city NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_city )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_city' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_city' ) === 'string' )
				{
					this.element_ship_city.value = selected_radio_shipping.getAttribute( 'data-mm_address_city' );
				}
				else
				{
					this.element_ship_city.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_state NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_state || this.element_ship_stateselect )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_state' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_state' ) === 'string' )
				{
					if ( !this.element_ship_stateselect )
					{
						this.element_ship_state.value = selected_radio_shipping.getAttribute( 'data-mm_address_state' );
					}
					else if ( !( this.element_ship_stateselect instanceof HTMLSelectElement ) )
					{
						if ( this.element_ship_state )
						{
							this.element_ship_state.value = '';
						}

						this.element_ship_stateselect.value = selected_radio_shipping.getAttribute( 'data-mm_address_state' );
					}
					else
					{
						for ( i = 0, i_len = this.element_ship_stateselect.options.length; i < i_len; i++ )
						{
							if ( this.element_ship_stateselect.options[ i ].value == selected_radio_shipping.getAttribute( 'data-mm_address_state' ) )
							{
								if ( this.element_ship_state )
								{
									this.element_ship_state.value = '';
								}

								this.element_ship_stateselect.selectedIndex = i;

								break;
							}
						}

						if ( i === i_len )
						{
							this.element_ship_stateselect.selectedIndex = 0;

							if ( this.element_ship_state )
							{
								this.element_ship_state.value = selected_radio_shipping.getAttribute( 'data-mm_address_state' );
							}
						}
					}
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_zip )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_zip' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_zip' ) === 'string' )
				{
					this.element_ship_zip.value = selected_radio_shipping.getAttribute( 'data-mm_address_zip' );
				}
				else
				{
					this.element_ship_zip.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_country )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_country' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_country' ) === 'string' )
				{
					this.element_ship_country.value = selected_radio_shipping.getAttribute( 'data-mm_address_country' );
				}
				else
				{
					this.element_ship_country.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_comp )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_comp' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_comp' ) === 'string' )
				{
					this.element_ship_comp.value = selected_radio_shipping.getAttribute( 'data-mm_address_comp' );
				}
				else
				{
					this.element_ship_comp.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:ship_res NE 'A' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_ship_resdntl )
			{
				if ( selected_radio_shipping.hasAttribute( 'data-mm_address_resdntl' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_resdntl' ) === 'string' )
				{
					this.element_ship_resdntl.value = selected_radio_shipping.getAttribute( 'data-mm_address_resdntl' );
				}
				else
				{
					this.element_ship_resdntl.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">

			// disable "radio" element so it doesn't send in the form
			selected_radio_shipping.disabled = true;

			return true;
		}

		Validated_Address_Modal.prototype.Submit_Billing_Form = function( e )
		{
			var i, i_len, selected_radio_billing;<MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ l.fields:primaddr EQ 'shipping' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_billing_to_show.checked )
			{
				return true;
			}<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( !this.element_bill_validated_selector )
			{
				return;
			}

			for ( i = 0; i < this.element_bill_validated_selector.length; i++ )
			{
				if ( this.element_bill_validated_selector[ i ].checked )
				{
					selected_radio_billing = this.element_bill_validated_selector[ i ];
					break;
				}
			}

			if ( !selected_radio_billing )
			{
				this.onError( 'Please select a validated address.' );
				return false;
			}
<MIVA STANDARDOUTPUTLEVEL = "">

		<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			if ( this.element_bill_addr1 )
			{
				if ( selected_radio_billing.hasAttribute( 'data-mm_address_addr1' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_addr1' ) === 'string' )
				{
					this.element_bill_addr1.value = selected_radio_billing.getAttribute( 'data-mm_address_addr1' );
				}
				else
				{
					this.element_bill_addr1.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_bill_addr2 )
			{
				if ( selected_radio_billing.hasAttribute( 'data-mm_address_addr2' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_addr2' ) === 'string' )
				{
					this.element_bill_addr2.value = selected_radio_billing.getAttribute( 'data-mm_address_addr2' );
				}
				else
				{
					this.element_bill_addr2.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_city NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_bill_city )
			{
				if ( selected_radio_billing.hasAttribute( 'data-mm_address_city' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_city' ) === 'string' )
				{
					this.element_bill_city.value = selected_radio_billing.getAttribute( 'data-mm_address_city' );
				}
				else
				{
					this.element_bill_city.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_state NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_bill_state || this.element_bill_stateselect )
			{
				if ( selected_radio_billing.hasAttribute( 'data-mm_address_state' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_state' ) === 'string' )
				{
					if ( !this.element_bill_stateselect )
					{
						this.element_bill_state.value = selected_radio_billing.getAttribute( 'data-mm_address_state' );
					}
					else if ( !( this.element_bill_stateselect instanceof HTMLSelectElement ) )
					{
						if ( this.element_bill_state )
						{
							this.element_bill_state.value = '';
						}

						this.element_bill_stateselect.value = selected_radio_billing.getAttribute( 'data-mm_address_state' );
					}
					else
					{
						for ( i = 0, i_len = this.element_bill_stateselect.options.length; i < i_len; i++ )
						{
							if ( this.element_bill_stateselect.options[ i ].value == selected_radio_billing.getAttribute( 'data-mm_address_state' ) )
							{
								if ( this.element_bill_state )
								{
									this.element_bill_state.value = '';
								}

								this.element_bill_stateselect.selectedIndex = i;

								break;
							}
						}

						if ( i === i_len )
						{
							this.element_bill_stateselect.selectedIndex = 0;

							if ( this.element_bill_state )
							{
								this.element_bill_state.value = selected_radio_billing.getAttribute( 'data-mm_address_state' );
							}
						}
					}
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_bill_zip )
			{
				if ( selected_radio_billing.hasAttribute( 'data-mm_address_zip' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_zip' ) === 'string' )
				{
					this.element_bill_zip.value = selected_radio_billing.getAttribute( 'data-mm_address_zip' );
				}
				else
				{
					this.element_bill_zip.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_bill_country )
			{
				if ( selected_radio_billing.hasAttribute( 'data-mm_address_country' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_country' ) === 'string' )
				{
					this.element_bill_country.value = selected_radio_billing.getAttribute( 'data-mm_address_country' );
				}
				else
				{
					this.element_bill_country.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

			if ( this.element_bill_comp )
			{
				if ( selected_radio_billing.hasAttribute( 'data-mm_address_comp' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_comp' ) === 'string' )
				{
					this.element_bill_comp.value = selected_radio_billing.getAttribute( 'data-mm_address_comp' );
				}
				else
				{
					this.element_bill_comp.value = '';
				}
			}<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">

			// disable "radio" element so it doesn't send in the form
			selected_radio_billing.disabled = true;

			return true;
		};

		(function( obj, eventType, fn )
		{
			if ( obj.addEventListener )
			{
				obj.addEventListener( eventType, fn, false );
			}
			else if ( obj.attachEvent )
			{
				obj.attachEvent( 'on' + eventType, fn );
			}
		})( window, 'load', function()
		{
			window.validated_address_modal = new Validated_Address_Modal( "<MvEVAL EXPR = "{ encodejavascriptstring( l.settings:prefix ) }">" );
		} );
	</script><MIVA STANDARDOUTPUTLEVEL = "">
</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Editable_Shipping" PARAMETERS = "settings var, fields var, page" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.field_code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="ship-to">
	<h2 class="fields-heading">
		Ship To:
		<span id="shipping_controls" class="controls">
			<mvt:if expr="g.Action AND g.shipping_to_show">
			<input name="shipping_to_show" id="shipping_to_show" type="checkbox" value="1" class="checkbox" checked />
			<mvt:else>
			<input name="shipping_to_show" id="shipping_to_show" type="checkbox" value="1" class="checkbox" />
			</mvt:if>
			<label for="shipping_to_show">same as billing</label>
		</span>
	</h2>

	<div id="shipping_fields">
		<mvt:if expr="g.Basket:cust_id AND g.Customer_Session_Verified">
			<div class="&mvte:global:ShipID_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'ShipID', l.settings, 'Saved Address:', 'R' ) }">
				<select name="{ l.settings:prefix $ 'ShipID' }" id="shipping_selector">
					<option value="-1">&lt;New&gt;</option>
					<mvt:foreach iterator="address" array="customer:addresses">
						<mvt:if expr="{ 'toupper( l.settings:address:fname ) EQ toupper( g.' $ l.settings:prefix $ 'ShipFirstName ) AND
										 toupper( l.settings:address:lname ) EQ toupper( g.' $ l.settings:prefix $ 'ShipLastName ) AND
										 toupper( l.settings:address:email ) EQ toupper( g.' $ l.settings:prefix $ 'ShipEmail ) AND
										 toupper( l.settings:address:comp ) EQ toupper( g.' $ l.settings:prefix $ 'ShipCompany ) AND
										 toupper( l.settings:address:phone ) EQ toupper( g.' $ l.settings:prefix $ 'ShipPhone ) AND
										 toupper( l.settings:address:fax ) EQ toupper( g.' $ l.settings:prefix $ 'ShipFax ) AND
										 toupper( l.settings:address:addr1 ) EQ toupper( g.' $ l.settings:prefix $ 'ShipAddress1 ) AND
										 toupper( l.settings:address:addr2 ) EQ toupper( g.' $ l.settings:prefix $ 'ShipAddress2 ) AND
										 toupper( l.settings:address:city ) EQ toupper( g.' $ l.settings:prefix $ 'ShipCity ) AND
										 (
										 	( ( NOT ISNULL g.' $ l.settings:prefix $ 'ShipStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.' $ l.settings:prefix $ 'ShipStateSelect ) ) ) OR
										 	( ( ISNULL g.' $ l.settings:prefix $ 'ShipStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.' $ l.settings:prefix $ 'ShipState ) ) )
										 ) AND
										 toupper( l.settings:address:zip ) EQ toupper( g.' $ l.settings:prefix $ 'ShipZip ) AND
										 toupper( l.settings:address:cntry ) EQ toupper( g.' $ l.settings:prefix $ 'ShipCountry )' }">
							<option value="&mvte:address:id;" selected>&mvte:address:descrip;</option>
						<mvt:else>
							<option value="&mvte:address:id;">&mvte:address:descrip;</option>
						</mvt:if>
					</mvt:foreach>
				</select>
			</div>
			<div class="form_row">
				<MvEVAL EXPR = "{ Generate_Prompt( 'ShipDescription', l.settings, 'Description:', l.fields:ship_descrip ) }">
				<input type="text" name="{ l.settings:prefix $ 'ShipDescription' }" id="{ l.settings:prefix $ 'ShipDescription' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipDescription;' }" class="textfield" />
			</div>
		</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">

	<MvIF EXPR = "{ l.fields:mode_fname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipFirstName_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipFirstName', l.settings, 'First Name:', l.fields:mode_fname ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipFirstName' }" id="{ l.settings:prefix $ 'ShipFirstName' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipFirstName;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_lname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipLastName_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipLastName', l.settings, 'Last Name:', l.fields:mode_lname ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipLastName' }" id="{ l.settings:prefix $ 'ShipLastName' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipLastName;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_email NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipEmail_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipEmail', l.settings, 'Email Address:', l.fields:mode_email ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipEmail' }" id="{ l.settings:prefix $ 'ShipEmail' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipEmail;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_phone NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipPhone_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipPhone', l.settings, 'Phone Number:', l.fields:mode_phone ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipPhone' }" id="{ l.settings:prefix $ 'ShipPhone' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipPhone;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_fax NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipFax_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipFax', l.settings, 'Fax Number:', l.fields:mode_fax ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipFax' }" id="{ l.settings:prefix $ 'ShipFax' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipFax;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipCompany_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipCompany', l.settings, 'Company:', l.fields:mode_comp ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipCompany' }" id="{ l.settings:prefix $ 'ShipCompany' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipCompany;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipAddress1_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipAddress1', l.settings, 'Address:', l.fields:mode_addr ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipAddress1' }" id="{ l.settings:prefix $ 'ShipAddress1' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipAddress1;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipAddress2_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipAddress2', l.settings, 'Address 2:', l.fields:mode_addr2 ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipAddress2' }" id="{ l.settings:prefix $ 'ShipAddress2' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipAddress2;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipCity_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipCity', l.settings, 'City:', l.fields:mode_city ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipCity' }" id="{ l.settings:prefix $ 'ShipCity' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipCity;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<mvt:if expr="g.States_Empty">
			<div class="&mvte:global:ShipState_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'ShipState', l.settings, 'State/Province:', l.fields:mode_state ) }">
				<input type="text" name="{ l.settings:prefix $ 'ShipState' }" id="{ l.settings:prefix $ 'ShipState' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipState;' }" class="textfield" />
			</div>
		<mvt:else>
			<div class="&mvte:global:ShipState_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'ShipStateSelect', l.settings, 'State/Province:', l.fields:mode_state ) }">
				<mvt:item name="states" param="{ l.settings:prefix $ 'ShipStateSelect' }" />
			</div>

			<div class="&mvte:global:ShipState_Row;">
				<label class="italic" for="{ l.settings:prefix $ 'ShipState' }">Other State/Province:</label>
				<input type="text" name="{ l.settings:prefix $ 'ShipState' }" id="{ l.settings:prefix $ 'ShipState' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipState;' }" class="textfield">
			</div>
		</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipZip_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipZip', l.settings, 'Zip/Postal Code:', l.fields:mode_zip ) }">
			<input type="text" name="{ l.settings:prefix $ 'ShipZip' }" id="{ l.settings:prefix $ 'ShipZip' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipZip;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_cntry EQ 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<input type="hidden" name="{ l.settings:prefix $ 'ShipCountry' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'ShipCountry;' }" /><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSE>
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipCountry_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipCountry', l.settings, 'Country:', l.fields:mode_cntry ) }">
			<mvt:item name="countries" param="{ l.settings:prefix $ 'ShipCountry' }" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:ship_res NE 'A' }">
		<MvASSIGN NAME = "l.ship_res_token" VALUE = "{ 'g.' $ l.settings:prefix $ 'ShipResidential' }">

		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:ShipResidential_Row;">
			<MIVA STANDARDOUTPUTLEVEL = "">
			<MvEVAL EXPR = "{ Generate_Prompt( 'ShipResidential', l.settings, '', '' ) }">

			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<mvt:if expr="{ l.ship_res_token }">
				<input type="checkbox" name="{ l.settings:prefix $ 'ShipResidential' }" id="{ l.settings:prefix $ 'ShipResidential' }" value="1" checked />
			<mvt:else>
				<input type="checkbox" name="{ l.settings:prefix $ 'ShipResidential' }" id="{ l.settings:prefix $ 'ShipResidential' }" value="1" />
			</mvt:if>

			<span class="italic">Address is a Residence</span>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	</div>
</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Editable_Billing" PARAMETERS = "settings var, fields var, page" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.field_code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="bill-to">
	<h2 class="fields-heading">
		Bill To:
		<span id="billing_controls" class="controls">
			<mvt:if expr="g.Action AND g.billing_to_show">
			<input name="billing_to_show" id="billing_to_show" type="checkbox" value="1" class="checkbox" checked />
			<mvt:else>
			<input name="billing_to_show" id="billing_to_show" type="checkbox" value="1" class="checkbox" />
			</mvt:if>
			<label for="billing_to_show">same as shipping</label>
		</span>
	</h2>
	<div id="billing_fields" >
		<mvt:if expr="g.Basket:cust_id AND g.Customer_Session_Verified">
			<div class="&mvte:global:BillID_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'BillID', l.settings, 'Saved Address:', 'R' ) }">
				<select name="{ l.settings:prefix $ 'BillID' }" id="billing_selector">
					<option value="-1">&lt;New&gt;</option>
					<mvt:foreach iterator="address" array="customer:addresses">
						<mvt:if expr="{ 'toupper( l.settings:address:fname ) EQ toupper( g.' $ l.settings:prefix $ 'BillFirstName ) AND
										 toupper( l.settings:address:lname ) EQ toupper( g.' $ l.settings:prefix $ 'BillLastName ) AND
										 toupper( l.settings:address:email ) EQ toupper( g.' $ l.settings:prefix $ 'BillEmail ) AND
										 toupper( l.settings:address:comp ) EQ toupper( g.' $ l.settings:prefix $ 'BillCompany ) AND
										 toupper( l.settings:address:phone ) EQ toupper( g.' $ l.settings:prefix $ 'BillPhone ) AND
										 toupper( l.settings:address:fax ) EQ toupper( g.' $ l.settings:prefix $ 'BillFax ) AND
										 toupper( l.settings:address:addr1 ) EQ toupper( g.' $ l.settings:prefix $ 'BillAddress1 ) AND
										 toupper( l.settings:address:addr2 ) EQ toupper( g.' $ l.settings:prefix $ 'BillAddress2 ) AND
										 toupper( l.settings:address:city ) EQ toupper( g.' $ l.settings:prefix $ 'BillCity ) AND
										 (
										 	( ( NOT ISNULL g.' $ l.settings:prefix $ 'BillStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.' $ l.settings:prefix $ 'BillStateSelect ) ) ) OR
										 	( ( ISNULL g.' $ l.settings:prefix $ 'BillStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.' $ l.settings:prefix $ 'BillState ) ) )
										 ) AND
										 toupper( l.settings:address:zip ) EQ toupper( g.' $ l.settings:prefix $ 'BillZip ) AND
										 toupper( l.settings:address:cntry ) EQ toupper( g.' $ l.settings:prefix $ 'BillCountry )' }">
							<option value="&mvte:address:id;" selected>&mvte:address:descrip;</option>
						<mvt:else>
							<option value="&mvte:address:id;">&mvte:address:descrip;</option>
						</mvt:if>
					</mvt:foreach>
				</select>
			</div>
			<div class="form_row">
				<MvEVAL EXPR = "{ Generate_Prompt( 'BillDescription', l.settings, 'Description:', l.fields:bill_descrip ) }">
				<input type="text" name="{ l.settings:prefix $ 'BillDescription' }" id="{ l.settings:prefix $ 'BillDescription' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillDescription;' }" class="textfield" />
			</div>
		</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">

	<MvIF EXPR = "{ l.fields:mode_fname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillFirstName_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillFirstName', l.settings, 'First Name:', l.fields:mode_fname ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillFirstName' }" id="{ l.settings:prefix $ 'BillFirstName' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillFirstName;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_lname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillLastName_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillLastName', l.settings, 'Last Name:', l.fields:mode_lname ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillLastName' }" id="{ l.settings:prefix $ 'BillLastName' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillLastName;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_email NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillEmail_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillEmail', l.settings, 'Email Address:', l.fields:mode_email ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillEmail' }" id="{ l.settings:prefix $ 'BillEmail' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillEmail;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_phone NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillPhone_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillPhone', l.settings, 'Phone Number:', l.fields:mode_phone ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillPhone' }" id="{ l.settings:prefix $ 'BillPhone' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillPhone;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_fax NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillFax_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillFax', l.settings, 'Fax Number:', l.fields:mode_fax ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillFax' }" id="{ l.settings:prefix $ 'BillFax' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillFax;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillCompany_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillCompany', l.settings, 'Company:', l.fields:mode_comp ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillCompany' }" id="{ l.settings:prefix $ 'BillCompany' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillCompany;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillAddress1_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillAddress1', l.settings, 'Address:', l.fields:mode_addr ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillAddress1' }" id="{ l.settings:prefix $ 'BillAddress1' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillAddress1;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillAddress2_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillAddress2', l.settings, 'Address 2:', l.fields:mode_addr2 ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillAddress2' }" id="{ l.settings:prefix $ 'BillAddress2' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillAddress2;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillCity_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillCity', l.settings, 'City:', l.fields:mode_city ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillCity' }" id="{ l.settings:prefix $ 'BillCity' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillCity;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<mvt:if expr="g.States_Empty">
			<div class="&mvte:global:BillState_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'BillState', l.settings, 'State/Province:', l.fields:mode_state ) }">
				<input type="text" name="{ l.settings:prefix $ 'BillState' }" id="{ l.settings:prefix $ 'BillState' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillState;' }" class="textfield" />
			</div>
		<mvt:else>
			<div class="&mvte:global:BillState_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'BillStateSelect', l.settings, 'State/Province:', l.fields:mode_state ) }">
				<mvt:item name="states" param="{ l.settings:prefix $ 'BillStateSelect' }" />
			</div>

			<div class="&mvte:global:BillState_Row;">
				<label class="italic" for="{ l.settings:prefix $ 'BillState' }">Other State/Province:</label>
				<input type="text" name="{ l.settings:prefix $ 'BillState' }" id="{ l.settings:prefix $ 'BillState' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillState;' }" class="textfield" />
			</div>
		</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:BillZip_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillZip', l.settings, 'Zip/Postal Code:', l.fields:mode_zip ) }">
			<input type="text" name="{ l.settings:prefix $ 'BillZip' }" id="{ l.settings:prefix $ 'BillZip' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillZip;' }" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_cntry EQ 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<input type="hidden" name="{ l.settings:prefix $ 'BillCountry' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'BillCountry;' }" /><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSE>
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvt:global:BillCountry_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'BillCountry', l.settings, 'Country:', l.fields:mode_cntry ) }">
			<mvt:item name="countries" param="{ l.settings:prefix $ 'BillCountry' }" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	</div>
</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Editable" PARAMETERS = "settings var, fields var, page" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerSettings_Load( l.customersettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCAPTURE VARIABLE = "l.field_code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html"><div id="fields-key">
	<div><span class="required">Bold</span> = Required</div>
	<div><span class="italic">Italic</span> = Optional</div>
	<mvt:if expr="( g.UI_Exception EQ 1 ) AND ( ( g.Session:cache:last_ui_exception EQ 'order_invalid_info' ) OR ( g.Session:cache:last_ui_exception EQ 'customer_invalid_addinfo' ) OR ( g.Session:cache:last_ui_exception EQ 'customer_invalid_editinfo' ) )">
	<div><span class="red">Red</span> = Invalid</div>
	</mvt:if>
</div><MIVA STANDARDOUTPUTLEVEL = "">

	<MvIF EXPR = "{ l.settings:mode EQ 'customer' }">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="login-details">
	<div class="&mvte:global:Login_Row;">
		<label for="{ l.settings:prefix $ 'Login' }" class="required">Username:</label><input type="text" name="{ l.settings:prefix $ 'Login' }" id="{ l.settings:prefix $ 'Login' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'Login;' }" class="textfield" autocomplete="off" />
	</div>

	<div class="&mvte:global:PasswordEmail_Row;">
		<label for="{ l.settings:prefix $ 'PasswordEmail' }" class="required">Email Lost Passwords To:</label><input type="text" name="{ l.settings:prefix $ 'PasswordEmail' }" id="{ l.settings:prefix $ 'PasswordEmail' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'PasswordEmail;' }" class="textfield" autocomplete="off" />
	</div><MIVA STANDARDOUTPUTLEVEL = "">

	<MvIF EXPR = "{ l.customersettings:pwchgauth }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

	<mvt:if expr="g.Basket:cust_id">
		<div class="&mvte:global:CurrentPassword_Row;">
			<label for="{ l.settings:prefix $ 'CurrentPassword' }" class="required">Current Password:</label><input type="password" name="Customer_CurrentPassword" id="{ l.settings:prefix $ 'CurrentPassword' }" class="textfield" autocomplete="off" />
		</div>
	</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MIVA STANDARDOUTPUTLEVEL = "text, html">

	<div class="&mvte:global:Password_Row;">
		<label for="{ l.settings:prefix $ 'Password' }" class="required">New Password:</label><input type="password" name="Customer_Password" id="{ l.settings:prefix $ 'Password' }" class="textfield" autocomplete="off" />
	</div>

	<div class="&mvte:global:VerifyPassword_Row;">
		<label for="{ l.settings:prefix $ 'VerifyPassword' }" class="required">Confirm Password:</label><input type="password" name="{ l.settings:prefix $ 'VerifyPassword' }" id="{ l.settings:prefix $ 'VerifyPassword' }" class="textfield" autocomplete="off" />
	</div>
</div><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSEIF EXPR = "{ l.settings:mode EQ 'customer_add' }">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="login-details">
	<div class="&mvte:global:LoginEmail_Row;">
		<label for="{ l.settings:prefix $ 'LoginEmail' }" class="required">Email Address:</label>

		<mvt:if expr="l.settings:customer:primaddr EQ 'shipping'">
			<input type="text" name="{ l.settings:prefix $ 'LoginEmail' }" id="{ l.settings:prefix $ 'LoginEmail' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'LoginEmail;' }" class="textfield" autocomplete="off" onblur="if ( document.getElementById( 'Customer_ShipEmail' ) && ( document.getElementById( 'Customer_ShipEmail' ).value == '' ) ) document.getElementById( 'Customer_ShipEmail' ).value = this.value;" />
		<mvt:elseif expr="l.settings:customer:primaddr EQ 'billing'">
			<input type="text" name="{ l.settings:prefix $ 'LoginEmail' }" id="{ l.settings:prefix $ 'LoginEmail' }" value="{ '&mvte:global:' $ l.settings:prefix $ 'LoginEmail;' }" class="textfield" autocomplete="off" onblur="if ( document.getElementById( 'Customer_BillEmail' ) && ( document.getElementById( 'Customer_BillEmail' ).value == '' ) ) document.getElementById( 'Customer_BillEmail' ).value = this.value;" />
		</mvt:if>
	</div>

	<div class="&mvte:global:Password_Row;">
		<label for="{ l.settings:prefix $ 'Password' }" class="required">Password:</label><input type="password" name="Customer_Password" value="&mvte:global:Customer_Password;" id="{ l.settings:prefix $ 'Password' }" class="textfield" autocomplete="off" />
	</div>

	<div class="&mvte:global:VerifyPassword_Row;">
		<label for="{ l.settings:prefix $ 'VerifyPassword' }" class="required">Confirm Password:</label><input type="password" name="{ l.settings:prefix $ 'VerifyPassword' }" value="&mvte:global:Customer_VerifyPassword;" id="{ l.settings:prefix $ 'VerifyPassword' }" class="textfield" autocomplete="off" />
	</div>
</div><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSEIF EXPR = "{ l.settings:mode EQ 'customer_edit' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
<input type="hidden" name="Customer_Login" value="&mvte:global:Customer:login;" />
<input type="hidden" name="Customer_PasswordEmail" value="&mvte:global:Customer:pw_email;" /><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:primaddr EQ 'shipping' }">		<MvASSIGN NAME = "l.order" VALUE = "shipping,billing">
	<MvELSEIF EXPR = "{ l.fields:primaddr EQ 'billing' }">	<MvASSIGN NAME = "l.order" VALUE = "billing,shipping">
	</MvIF>

	<MvASSIGN NAME = "l.pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pos LE 2 }">
		<MvASSIGN NAME = "l.type"	VALUE = "{ gettoken( l.order, ',', l.pos ) }">

			<MvIF EXPR = "{ ( l.type EQ 'shipping' ) AND ( l.fields:shipping NE 'H' ) }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ Generate_Code_Editable_Shipping( l.settings, l.fields, l.page ) }"><MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSEIF EXPR = "{ ( l.type EQ 'billing' ) AND ( l.fields:billing NE 'H' ) }">	
				<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ Generate_Code_Editable_Billing( l.settings, l.fields, l.page ) }"><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

		<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 1 }">
	</MvWHILE>
<MIVA STANDARDOUTPUTLEVEL = "text, html">
<mvt:if expr="NOT ISNULL l.settings:customer:validated_bill_addresses OR NOT ISNULL l.settings:customer:validated_ship_addresses">
	<MvEVAL EXPR = "{ Generate_Code_Validated_Address_Modal( l.settings, l.fields ) }">
</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">

	<MvIF EXPR = "{ l.settings:mode EQ 'order' }">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="tax-fields">
<mvt:foreach array="tax:fields" iterator="field">
	<mvt:if expr="l.settings:field:invalid">
	<div class="form_row invalid">
	<mvt:else>
	<div class="form_row">
	</mvt:if>
		<label>&mvt:field:prompt;</label>
		<mvt:item name="tax" param="field:code" />
	</div>
</mvt:foreach>
</div>

<mvt:if expr="g.Basket:cust_id">
<div id="update-record">
	<mvt:if expr="g.Update_Customer">
	<input type="checkbox" name="Update_Customer" value="Yes" checked />
	<mvt:else>
	<input type="checkbox" name="Update_Customer" value="Yes" />
	</mvt:if>
	Update Customer Record With This Information
</div>
</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Library_DB ].StandardFields_Load( l.std_fields ) }">

	<MvIF EXPR = "{ l.std_fields:billing NE 'H' AND l.std_fields:shipping NE 'H' }">
<MIVA STANDARDOUTPUTLEVEL = "text, html">
<mvt:if expr="l.settings:customer:match">
<script>
<mvt:if expr="l.settings:customer:primaddr EQ 'shipping'">
document.getElementById( 'billing_to_show' ).checked = true;
<mvt:elseif expr="l.settings:customer:primaddr EQ 'billing'">
document.getElementById( 'shipping_to_show' ).checked = true;
</mvt:if>
</script>
</mvt:if>

<mvt:if expr="g.Basket:cust_id AND g.Customer_Session_Verified AND l.settings:customer:address_count">
	<script type="text/javascript">
		var MvCustomerAddresses = [];

		<mvt:foreach iterator="address" array="customer:addresses">
			MvCustomerAddresses[ <mvt:eval expr="int( l.settings:address:id )" /> ] = {
				"id":		<mvt:eval expr="int( l.settings:address:id )" />,
				"cust_id":	<mvt:eval expr="int( l.settings:address:cust_id )" />,
				"descrip":	"&mvtj:address:descrip;",
				"fname":	"&mvtj:address:fname;",
				"lname":	"&mvtj:address:lname;",
				"email":	"&mvtj:address:email;",
				"comp":		"&mvtj:address:comp;",
				"phone":	"&mvtj:address:phone;",
				"fax":		"&mvtj:address:fax;",
				"addr1":	"&mvtj:address:addr1;",
				"addr2":	"&mvtj:address:addr2;",
				"city":		"&mvtj:address:city;",
				"state":	"&mvtj:address:state;",
				"zip":		"&mvtj:address:zip;",
				"cntry":	"&mvtj:address:cntry;",
				"resdntl":	<mvt:if expr="l.settings:address:resdntl">true<mvt:else>false</mvt:if>
			};
		</mvt:foreach>
	</script>
</mvt:if>

<MvEVAL EXPR = "{ '<script src="&mvte:global:clientside_url;Store_Code=&mvta:store:code;&amp;Filename=ToggleDetails.js&amp;Primaddr=' $ encodeattribute( l.std_fields:primaddr ) $ '&amp;Shipping=' $ encodeattribute( l.std_fields:shipping ) $ '&amp;Billing=' $ encodeattribute( l.std_fields:billing ) $ '"></script>' }"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>
</MvCAPTURE>
	
	<MvFUNCTIONRETURN VALUE = "{ l.field_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Prompt" PARAMETERS = "fieldname, settings var, prompt, mode" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
	<MvIF EXPR = "{ l.mode EQ 'R' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><label class="required" for="{ l.settings:prefix $ l.fieldname }"><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSE>
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><label class="italic" for="{ l.settings:prefix $ l.fieldname }"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>
	<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ l.prompt }"></label><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.code }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Provision" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' )	AND
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Mode' )		AND
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'PreventAutomaticTemplateUpdates' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Either Template, Mode, or PreventAutomaticTemplateUpdates must be specified' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'o', l.provide_xml,	'Template',							l.template )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml,	'Notes',							l.notes )									OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'PreventAutomaticTemplateUpdates',	l.settings:prevent_template_auto_update )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O', l.provide_xml,	'Mode',								l.mode,
																																'tokens_only_nodisplay, checkout_display_only, checkout_editable, customer_legacy, customer_add, customer_edit',
																																'tokens_only_nodisplay, checkout_display_only, checkout_editable, customer_legacy, customer_add, customer_edit' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.mode }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StandardFields_Load( l.standard_fields ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ ModeToSettings_Convert( l.mode, l.settings ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
			<MvEVAL EXPR = "{ Generate_Code( l.standard_fields, l.settings, l.template, l.null ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.template, l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Description" PARAMETERS = "module var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pages" VALUE = "{ [ g.Module_Feature_TUI_DB ].Item_Load_PageList( l.item ) }">
	
	<MvFUNCTIONRETURN VALUE = "{ 'Exports Customer View/Add/Edit Content template from pages: ' $ l.pages }">
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.output" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item_Runtime( l.item:id, l.pages ) }">
			<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
				<MvMEMBER NAME = "{ l.item:code }">
			</MvREFERENCEARRAY>

			<MvEVAL EXPR = "{ SettingsToMode_Convert( l.settings, l.mode ) }">

			<Page_Update code="{ l.page:code }">
				<Item code="{ l.item:code }">
					<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
						<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.templateversion:source ) }"></Template>
					</MvIF>

					<Mode><MvEVAL EXPR = "{ miva_cdata_encode( l.mode ) }"></Mode>
					<PreventAutomaticTemplateUpdates><MvIF EXPR = "{ l.settings:prevent_template_auto_update }">Yes<MvELSE>No</MvIF></PreventAutomaticTemplateUpdates>
					<Notes>#Set_Current_Time#</Notes>
				</Item>
			</Page_Update>
		</MvFOREACH>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "SettingsToMode_Convert" PARAMETERS = "settings var, mode var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.settings:editable AND ( l.settings:mode EQ 'order' ) }">				<MvASSIGN NAME = "l.mode" VALUE = "checkout_display_only">
	<MvELSEIF EXPR = "{ l.settings:editable AND ( l.settings:mode EQ 'order' ) }">				<MvASSIGN NAME = "l.mode" VALUE = "checkout_editable">
	<MvELSEIF EXPR = "{ l.settings:editable AND ( l.settings:mode EQ 'customer' ) }">           <MvASSIGN NAME = "l.mode" VALUE = "customer_legacy">
	<MvELSEIF EXPR = "{ l.settings:editable AND ( l.settings:mode EQ 'customer_add' ) }">       <MvASSIGN NAME = "l.mode" VALUE = "customer_add">
	<MvELSEIF EXPR = "{ l.settings:editable AND ( l.settings:mode EQ 'customer_edit' ) }">      <MvASSIGN NAME = "l.mode" VALUE = "customer_edit">
	<MvELSEIF EXPR = "{ ( l.settings:mode EQ 'tokens_only_nodisplay' ) }">						<MvASSIGN NAME = "l.mode" VALUE = "tokens_only_nodisplay">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ModeToSettings_Convert" PARAMETERS = "mode var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.mode EQ 'checkout_display_only' }">		<MvASSIGN NAME = "l.settings:mode" VALUE = "order">					<MvASSIGN NAME = "l.settings:editable" VALUE = 0>
	<MvELSEIF EXPR = "{ l.mode EQ 'checkout_editable' }">		<MvASSIGN NAME = "l.settings:mode" VALUE = "order">					<MvASSIGN NAME = "l.settings:editable" VALUE = 1>
	<MvELSEIF EXPR = "{ l.mode EQ 'customer_legacy' }">			<MvASSIGN NAME = "l.settings:mode" VALUE = "customer">				<MvASSIGN NAME = "l.settings:editable" VALUE = 1>
	<MvELSEIF EXPR = "{ l.mode EQ 'customer_add' }">			<MvASSIGN NAME = "l.settings:mode" VALUE = "customer_add">			<MvASSIGN NAME = "l.settings:editable" VALUE = 1>
	<MvELSEIF EXPR = "{ l.mode EQ 'customer_edit' }">			<MvASSIGN NAME = "l.settings:mode" VALUE = "customer_edit">			<MvASSIGN NAME = "l.settings:editable" VALUE = 1>
	<MvELSEIF EXPR = "{ l.mode EQ 'tokens_only_nodisplay' }">	<MvASSIGN NAME = "l.settings:mode" VALUE = "tokens_only_nodisplay">	<MvASSIGN NAME = "l.settings:editable" VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFields_Invalid" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ( g.UI_Exception EQ 1 ) AND
								 (
									( g.Session:cache:last_ui_exception EQ 'customer_validate_editinfo' )			OR
									( g.Session:cache:last_ui_exception EQ 'customer_validate_addinfo' )			OR
									( g.Session:cache:last_ui_exception EQ 'order_validate_info' )					OR
									( g.Session:cache:last_ui_exception EQ 'order_invalid_info' )					OR
									( g.Session:cache:last_ui_exception EQ 'customer_invalid_addinfo' )				OR
									( g.Session:cache:last_ui_exception EQ 'customer_invalid_editinfo' )
								 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Prefix" PARAMETERS = "mode" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.mode EQ 'customer'		OR
					l.mode EQ 'customer_add'	OR
					l.mode EQ 'customer_edit' }">	<MvFUNCTIONRETURN VALUE = "Customer_">
	<MvELSE>										<MvFUNCTIONRETURN VALUE = "">
	</MvIF>
</MvFUNCTION>

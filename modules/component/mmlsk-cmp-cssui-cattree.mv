<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CSSUI-CMP-TREE-
| Next Error Code: 35   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-cmp-cssui-cattree">
	<MvASSIGN NAME = "l.module:name"		VALUE = "CSSUI Category Tree">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0902">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "5.60">
	<MvASSIGN NAME = "l.module:features"	VALUE = "component, data_store, vis_store, vis_category, provision_store, skins, fields_cat">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: data_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree-header.mvc', l.null_managedtemplate ) }">
		<MvEVAL EXPR = "{ Generate_Code_Header( l.code ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.code, l.null, 'cattree-header.mvc' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree.mvc', l.null_managedtemplate ) }">
		<MvEVAL EXPR = "{ Generate_Code_Main( l.code ) }">
		<MvIF EXPR  = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.code, l.null, 'cattree.mvc' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree-footer.mvc', l.null_managedtemplate ) }">
		<MvEVAL EXPR = "{ Generate_Code_Footer( l.code ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.code, l.null, 'cattree-footer.mvc' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-TREE-00034', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( 'cattree-header.mvc' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( 'cattree.mvc' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( 'cattree-footer.mvc' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: vis_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Store_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CSSUI_CatTree_Load_Templates( l.header_managedtemplate, l.cattree_managedtemplate, l.footer_managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( g.CategoryTree:header ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'CSSUI-CATTREE', 'CategoryTree:header', g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( g.CategoryTree:main ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'CSSUI-CATTREE', 'CategoryTree:main', g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( g.CategoryTree:footer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'CSSUI-CATTREE', 'CategoryTree:footer', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CSSUI_CatTree_Load_Templates( l.header_managedtemplate, l.cattree_managedtemplate, l.footer_managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree.mvc', l.cattree_templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.cattree_settings"	VALUE = "{ l.cattree_templateversion:settings }">
	<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( g.CategoryTree:cstmfields, l.cattree_settings:cstmfields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.header_managedtemplate, '', g.CategoryTree:header, l.null_settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( 'CSSUI-CATTREE', 'CategoryTree:header', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.cattree_managedtemplate, '', g.CategoryTree:main, l.cattree_settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( 'CSSUI-CATTREE', 'CategoryTree:main', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.footer_managedtemplate, '', g.CategoryTree:footer, l.null_settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( 'CSSUI-CATTREE', 'CategoryTree:footer', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "GT_UISETTINGS/CSSUI-CATTREE:Category Tree Template">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT CSSUI_CatTree_Load_TemplateVersions( l.header_templateversion, l.cattree_templateversion, l.footer_templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.CategoryTree:header"	VALUE = "{ l.header_templateversion:source }">
		<MvASSIGN NAME = "g.CategoryTree:footer"	VALUE = "{ l.footer_templateversion:source }">
		<MvASSIGN NAME = "g.CategoryTree:main"		VALUE = "{ l.cattree_templateversion:source }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].InitializeCustomFieldSelect( l.cattree_templateversion:settings:cstmfields, g.CategoryTree:cstmfields ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( g.Tab, 'CSSUI-CATTREE' ) }">
		<MvHIDE FIELDS = "g.CategoryTree">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_UISETTINGS', 'CSSUI-CATTREE' ) }">
		<table width="100%">
		<tr><td valign="top" nowrap>
			Template:
		</td><td colspan="2" width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( 'CategoryTree:main', g.CategoryTree:main, 20, 100, l.cattree_templateversion:templ_id ) }">
		</td></tr>

		<MvASSIGN NAME = "l.customfield_count"		VALUE = "{ [ g.Module_Library_Utilities ].CategoryCustomFieldList_Load( l.customfields ) }">

		<MvIF EXPR = "{ l.customfield_count }">
			<tr><td align="left" valign="top" nowrap>
				<b>Custom Fields:</b>
			</td><td align="left" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCustomFieldSelect( 'CategoryTree:cstmfields', g.CategoryTree:cstmfields, l.customfields, l.customfield_count ) }">
			</td></tr>
		</MvIF>

		<tr><td colspan="2">&nbsp;</td></tr>

		<tr><td valign="top" nowrap>
			Category Tree Header:
		</td><td width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( 'CategoryTree:header', g.CategoryTree:header, 10, 58, l.header_templateversion:templ_id ) }">
		</td></tr>

		<tr><td valign="top" nowrap>
			Category Tree Footer:
		</td><td width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( 'CategoryTree:footer', g.CategoryTree:footer, 10, 58, l.footer_templateversion:templ_id ) }">
		</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

    <MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: vis_category
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Category_Tabs" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "GT_CTGY/CMP-CSSUI-CATTREE:Category Tree">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Content" PARAMETERS = "module var, tab, load_fields, category var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.can_modify"	VALUE = "{ [ g.Module_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">
	<MvASSIGN NAME = "l.can_add"	VALUE = "{ [ g.Module_Admin ].CanI( 'CTGY', 0, 1, 0, 0 ) }">

	<MvIF EXPR = "{ l.category:id }">
		<MvIF EXPR = "{ l.load_fields }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersion_Load_Category_Current( 'cssui_cattree', l.category:id, l.managedproperty ) }">
				<MvASSIGN NAME = "g.Category_CSSUI_CategoryTree_Image"	VALUE = "">
			<MvELSE>
				<MvASSIGN NAME = "g.Category_CSSUI_CategoryTree_Image"	VALUE = "{ CSSUI_CatTree_ManagedPropertyAndVersion_To_ImagePath( l.managedproperty ) }">
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ l.load_fields }">
			<MvASSIGN NAME = "g.Category_CSSUI_CategoryTree_Image"		VALUE = "">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, 'CMP-CSSUI-CATTREE' ) }">
		<MvHIDE FIELDS = "g.Category_CSSUI_CategoryTree_Image">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_CTGY', 'CMP-CSSUI-CATTREE' ) }">
		<table border=0 cellpadding=2 cellspacing = 0 width = "100%">
		<tr><td nowrap>
			Tree Image:
		</td><td width="100%" nowrap>
			<MvIF EXPR = "{ ( l.can_modify ) OR ( l.can_add AND NOT len( g.Category_CSSUI_CategoryTree_Image ) ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawMMImagePicker_SingleSelect( 'Category_CSSUI_CategoryTree_Image', g.Category_CSSUI_CategoryTree_Image, 0 ) }">
			<MvELSE>
				<input type="text" size="40" name="Category_CSSUI_CategoryTree_Image" value="{ encodeentities( g.Category_CSSUI_CategoryTree_Image ) }" disabled="disabled">
			</MvIF>
		</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Category_CSSUI_CategoryTree_Image"	VALUE = "{ trim( g.Category_CSSUI_CategoryTree_Image ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Insert" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CSSUI_CatTree_InsertOrUpdate( l.category:id, g.Category_CSSUI_CategoryTree_Image ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Update" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CSSUI_CatTree_InsertOrUpdate( l.category:id, g.Category_CSSUI_CategoryTree_Image ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Delete" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: component
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_URI_DB ].URISettings_Load_Cached( l.urisettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree.mvc', l.cattree_templateversion ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCE NAME = "l.category_list"			VARIABLE = "l.all_settings:cattree_categories">

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'category' ) }">
		<MvREFERENCE NAME = "l.current_category"	VARIABLE = "l.all_settings:category">
	<MvELSE>
		<MvASSIGN NAME = "l.current_category:id"	VALUE = 0>

		<MvIF EXPR = "{ NOT ISNULL g.Category_Code }">
			<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Library_DB ].Runtime_Category_Load_Code( g.Category_Code, l.current_category ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.current_category:id }">
		<MvIF EXPR = "{ l.urisettings:source EQ 'uri' }">	<MvASSIGN NAME = "l.category_count" VALUE = "{ CSSUI_CatTree_CategoryList_Load_Parent_With_URI( 0, l.category_list ) }">
		<MvELSE>											<MvASSIGN NAME = "l.category_count" VALUE = "{ CSSUI_CatTree_CategoryList_Load_Parent_Without_URI( 0, l.category_list ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.category" ARRAY = "l.category_list" COUNT = "{ l.category_count }">
			<MvASSIGN NAME = "l.category:level"		VALUE = 1>
		</MvFOREACH>
	<MvELSE>
		<MvASSIGN NAME = "l.category_pathtoroot_count"			VALUE = "{ CategoryList_Load_PathToRoot( l.current_category, l.category_pathtoroot_list ) }">
		<MvASSIGN NAME = "l.null"								VALUE = "{ CategoryList_PathToRoot_Adjust_ParentID( l.category_pathtoroot_list, l.category_pathtoroot_count ) }">
		<MvASSIGN NAME = "l.current_category:cattree_parent_id"	VALUE = "{ l.category_pathtoroot_list[ 1 ]:cattree_parent_id }">
		<MvASSIGN NAME = "l.pos"								VALUE = "{ l.category_pathtoroot_count }">
		<MvREFERENCE NAME = "l.categories"						VARIABLE = "l.category_array">

		<MvWHILE EXPR = "{ l.pos GT 0 }">
			<MvASSIGN NAME = "l.found_pos" VALUE = "{ CategoryList_Make_Array( l.urisettings, l.category_pathtoroot_list[ l.pos ]:cattree_parent_id, l.category_pathtoroot_list[ l.pos ], l.categories, l.category_pathtoroot_count - l.pos + 1 ) }">
			<MvREFERENCE NAME = "l.categories" VARIABLE = "{ 'l.categories[' $ l.found_pos $ ']:children' }">

			<MvASSIGN NAME = "l.pos" VALUE = "{ l.pos - 1 }">
		</MvWHILE>

		<MvASSIGN NAME = "l.null"			VALUE = "{ CategoryList_Make_Array( l.urisettings, l.category_pathtoroot_list[ 1 ]:id, l.empty_element, l.categories, l.category_pathtoroot_count - l.pos + 1 ) }">
		<MvASSIGN NAME = "l.category_count" VALUE = "{ CategoryList_Flatten_Categories( l.category_array, l.category_list, 0 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_UT ].CommonComponentFields_Initialize_Category_CustomField_Lookup( l.all_settings, l.cattree_templateversion:settings:cstmfields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code_Cached( 'CTGY', l.default_page ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.category" ARRAY = "l.category_list" COUNT = "{ l.category_count }">
		<MvASSIGN NAME = "l.url_flags"			VALUE = "">
		<MvASSIGN NAME = "l.url_flags:secure"	VALUE = "{ g.Domain:mm_secure OR l.category:page_secure OR ( NOT l.category:page_id AND l.default_page:secure ) }">

		<MvIF EXPR = "{ NOT ISNULL l.category:uri }">
			<MvASSIGN NAME = "l.category:link"	VALUE = "{ [ g.Module_Feature_URI_UT ].URL_Build_URI( l.urisettings, l.url_flags, l.category:uri, '' ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.category:link"	VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Category_URL( l.category, l.url_flags ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_UT ].CommonComponentFields_Initialize_Category_CustomFields( l.category:id, l.category, l.all_settings, l.cattree_templateversion:settings:cstmfields ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryList_Load_PathToRoot" PARAMETERS = "category, category_list var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.category_count"									VALUE = 1>
    <MvASSIGN NAME = "l.category_list" INDEX = "{ l.category_count }"	VALUE = "{ l.category }">

	<MvWHILE EXPR = "{ l.category:parent_id GT 0 }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Runtime_Category_Load_ID_Cached( l.category:parent_id, l.category ) }">
			<MvASSIGN NAME = "l.category_count"									VALUE = "{ l.category_count + 1 }">
			<MvASSIGN NAME = "l.category_list" INDEX = "{ l.category_count }"	VALUE = "{ l.category }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( l.category:parent_id, l.category ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = "{ l.category_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryList_PathToRoot_Adjust_ParentID" PARAMETERS = "category_list var, category_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pos" VALUE = "{ l.category_count }">

	<MvWHILE EXPR = "{ l.pos GT 0 }">
		<MvIF EXPR = "{ l.pos EQ l.category_count }">
			<MvASSIGN NAME = "l.category_list" INDEX = "{ l.pos }" MEMBER = "cattree_parent_id" VALUE = 0>
		<MvELSEIF EXPR = "{ l.pos + 1 LE l.category_count }">
			<MvASSIGN NAME = "l.category_list" INDEX = "{ l.pos }" MEMBER = "cattree_parent_id" VALUE = "{ l.category_list[ l.pos + 1 ]:id }">
		</MvIF>

		<MvASSIGN NAME = "l.pos" VALUE = "{ l.pos - 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryList_Load_Tree" PARAMETERS = "id, category_list var, level, urisettings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.category_count" VALUE = 0>
	<MvASSIGN NAME = "l.category_list" VALUE = "">

	<MvIF EXPR = "{ l.urisettings:source EQ 'uri' }">	<MvASSIGN NAME = "l.sibling_count" VALUE = "{ CSSUI_CatTree_CategoryList_Load_Parent_With_URI( l.id, l.siblings ) }">
	<MvELSE>											<MvASSIGN NAME = "l.sibling_count" VALUE = "{ CSSUI_CatTree_CategoryList_Load_Parent_Without_URI( l.id, l.siblings ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.sibling" ARRAY = "l.siblings" COUNT = "{ l.sibling_count }">
		<MvASSIGN NAME = "l.category_count"													VALUE = "{ l.category_count + 1 }">
		<MvASSIGN NAME = "l.category_list" INDEX = "{ l.category_count }"					VALUE = "{ l.sibling }">
		<MvASSIGN NAME = "l.category_list" INDEX = "{ l.category_count }" MEMBER = "level"	VALUE = "{ l.level }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.category_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryList_Make_Array" PARAMETERS = "urisettings var, cattree_parent_id, category var, categories var, level" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.found_pos" VALUE = 0>
	<MvASSIGN NAME = "l.category_count" VALUE = "{ CategoryList_Load_Tree( l.cattree_parent_id, l.children, l.level, l.urisettings ) }">

	<MvFOREACH ITERATOR = "l.sibling" ARRAY = "l.children" INDEX = "l.index">
		<MvIF EXPR = "{ l.sibling:id EQ l.category:id }">
			<MvASSIGN NAME = "l.found_pos"	VALUE = "{ l.index }">
			<MvASSIGN NAME = "l.sibling:cattree_parent_id" VALUE = "{ l.cattree_parent_id }">
			<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.categories" VALUE = "{ l.children }">

	<MvIF EXPR = "{ NOT l.found_pos }">
		<MvASSIGN NAME = "l.found_pos" VALUE = "{ l.category_count + 1 }">

		<MvIF EXPR = "{ l.category:id }">
			<MvASSIGN NAME = "l.categories" INDEX = "{ l.found_pos }"								VALUE = "{ l.category }">
			<MvASSIGN NAME = "l.categories" INDEX = "{ l.found_pos }" MEMBER = "level"				VALUE = "{ l.level }">
			<MvASSIGN NAME = "l.categories" INDEX = "{ l.found_pos }" MEMBER = "cattree_parent_id"	VALUE = "{ l.cattree_parent_id }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.found_pos }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryList_Flatten_Categories" PARAMETERS = "orig_category_list var, category_list var, category_count" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.category" ARRAY = "l.orig_category_list">
		<MvIF EXPR = "{ NOT ISNULL l.category:children }">
			<MvIF EXPR = "{ NOT ISNULL l.category:id }">
				<MvASSIGN NAME = "l.category_count"									VALUE = "{ l.category_count + 1 }">
				<MvASSIGN NAME = "l.category_list" INDEX = "{ l.category_count }"	VALUE = "{ l.category }">
			</MvIF>

			<MvASSIGN NAME = "l.category_count" VALUE = "{ CategoryList_Flatten_Categories( l.category:children, l.category_list, l.category_count ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.category_count"									VALUE = "{ l.category_count + 1 }">
			<MvASSIGN NAME = "l.category_list" INDEX = "{ l.category_count }"	VALUE = "{ l.category }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.category_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( 'cattree-header.mvc',	l.all_settings ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( 'cattree.mvc',			l.all_settings ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( 'cattree-footer.mvc',	l.all_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL="">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: provision_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"		VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'image' }">				<MvEVAL EXPR = "{ Module_Provision_Store_Image( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'header_update' }">	<MvEVAL EXPR = "{ Module_Provision_Store_Header_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'cattree_update' }">	<MvEVAL EXPR = "{ Module_Provision_Store_Cattree_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'footer_update' }">	<MvEVAL EXPR = "{ Module_Provision_Store_Footer_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'fields' }">
			<MvCOMMENT>
			|
			| Legacy Fields import. This still exists for backward compatibility only.
			| Field importing has been moved into the CatTree_Update tag as a sub-tag.
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ Module_Provision_Store_Fields_Update( l.module, l.child_xml ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Image" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'category_code', l.category_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.category_code, l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load category \'' $ l.category_code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUI_CatTree_InsertOrUpdate( l.category:id, trim( l.provide_xml:value ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Header_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'r', l.provide_xml, 'Template',	l.template ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Notes',		l.notes ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree-header.mvc', l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.template, l.null_settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Cattree_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( 'cattree.mvc', l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings" VALUE = "{ l.managedtemplate:version:settings }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Template',	l.template ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Notes',		l.notes ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Fields' ) }">
		<MvIF EXPR = "{ NOT Module_Provision_Store_Cattree_Update_Fields( l.module, l.provide_xml:tags:Fields[ 1 ], l.settings ) }">
			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
		<MvASSIGN NAME = "l.template" VALUE = "{ l.managedtemplate:version:source }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion_LowLevel( l.managedtemplate, l.managedtemplate:version, l.notes, l.template, l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Cattree_Update_Fields" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:cstmfields" VALUE = "">

	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children" COUNT = "{ miva_array_elements( l.provide_xml:children ) }">
		<MvASSIGN NAME = "l.name"					VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'custom' }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child_xml, 'module',	l.module_code ) OR
							NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child_xml, 'code',	l.field_code ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.entry"			VALUE = "">
			<MvASSIGN NAME = "l.entry:module"	VALUE = "{ l.module_code }">
			<MvASSIGN NAME = "l.entry:code"		VALUE = "{ l.field_code }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert_var( l.settings:cstmfields, l.entry, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Fields_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( 'cattree.mvc', l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings" VALUE = "{ l.managedtemplate:version:settings }">

	<MvIF EXPR = "{ NOT Module_Provision_Store_Cattree_Update_Fields( l.module, l.provide_xml, l.settings ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion_LowLevel( l.managedtemplate, l.managedtemplate:version, l.notes, l.managedtemplate:version:source, l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Footer_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'r', l.provide_xml, 'Template',	l.template ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Notes',		l.notes ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree-footer.mvc', l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.template, l.null_settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: skins
|
</MvCOMMENT>

<MvFUNCTION NAME = "SkinsComponentModule_Description" PARAMETERS = "module var, item var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "Exports all available Category Tree Images for categories, Category Tree Header & Footer and the Category Tree template (Global Code)">
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.output" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<Module code="{ encodeentities( l.module:code ) }" feature="component">
			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree-header.mvc', l.header_templateversion ) }">
				<Header_Update>
					<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.header_templateversion:source ) }"></Template>
					<Notes>#Set_Current_Time#</Notes>
				</Header_Update>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree-footer.mvc', l.footer_templateversion ) }">
				<Footer_Update>
					<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.footer_templateversion:source ) }"></Template>
					<Notes>#Set_Current_Time#</Notes>
				</Footer_Update>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree.mvc', l.cattree_templateversion ) }">
				<Cattree_Update>
					<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.cattree_templateversion:source ) }"></Template>
					<Notes>#Set_Current_Time#</Notes>
					<Fields>
						<MvFOREACH ITERATOR = "l.field" ARRAY = "l.cattree_templateversion:settings:cstmfields">
							<Custom module="{ encodeentities( l.field:module ) }" code="{ encodeentities( l.field:code ) }" />
						</MvFOREACH>
					</Fields>
				</Cattree_Update>
			</MvIF>

			<MvFOREACH ITERATOR = "l.managedproperty" ARRAY = "l.managedproperties" COUNT = "{ [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersionList_Load_Type_Current( 'cssui_cattree', l.managedproperties ) }">
				<MvIF EXPR = "{ [ g.Module_Library_DB ].Category_Load_ID( l.managedproperty:cat_id, l.category ) }">
					<Image category_code="{ encodeentities( l.category:code ) }"><MvEVAL EXPR = "{ miva_cdata_encode( CSSUI_CatTree_ManagedPropertyAndVersion_To_ImagePath( l.managedproperty ) ) }"></Image>
				</MvIF>
			</MvFOREACH>
		</Module>
	</MvCAPTURE>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature fields_cat
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Category_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields" INDEX = 1 MEMBER = "code"	VALUE = "category_tree_image">
	<MvASSIGN NAME = "l.fields" INDEX = 1 MEMBER = "name"	VALUE = "Category Tree Image">
	<MvASSIGN NAME = "l.fields" INDEX = 1 MEMBER = "public"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code EQ 'category_tree_image' }">
		<MvFUNCTIONRETURN VALUE = "Category Tree Image">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Value" PARAMETERS = "module var, cat_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code EQ 'category_tree_image' }">
		<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersion_Load_Category_Current( 'cssui_cattree', l.cat_id, l.managedproperty ) }">
			<MvFUNCTIONRETURN VALUE = "{ CSSUI_CatTree_ManagedPropertyAndVersion_To_ImagePath( l.managedproperty ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Set_Field" PARAMETERS = "module var, cat_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code EQ 'category_tree_image' }">
		<MvIF EXPR = "{ NOT CSSUI_CatTree_InsertOrUpdate( l.cat_id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Generate_Code_Main" PARAMETERS = "template_code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.template_code" STANDARDOUTPUTLEVEL = "text, html">
<div id="category-tree">
<mvt:foreach array="cattree_categories" iterator="cattree_category">
	<mvt:if expr="NOT ISNULL l.settings:category:id AND l.settings:category:id EQ l.settings:cattree_category:id">
	<div class="level-&mvte:cattree_category:level; active">
	<mvt:elseif expr="NOT ISNULL g.Category_Code AND ISNULL l.settings:category:id AND l.settings:cattree_category:code EQ g.Category_Code">
	<div class="level-&mvte:cattree_category:level; active">
	<mvt:else>
	<div class="level-&mvte:cattree_category:level;">
	</mvt:if>
		<a href="&mvte:cattree_category:link;">
		<mvt:if expr="l.settings:cattree_category:image">
		<img src="&mvte:cattree_category:image;" alt="&mvte:cattree_category:name;" />
		<mvt:else>
		&mvte:cattree_category:name;
		</mvt:if>
		</a>
	</div>
</mvt:foreach>
</div>	
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Header" PARAMETERS = "template_code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.template_code" STANDARDOUTPUTLEVEL = "text, html">
<div id="category-tree-header"></div>
<div id="category-tree-top-image">
	<div id="category-tree-bottom-image">
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code_Footer" PARAMETERS = "template_code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.template_code" STANDARDOUTPUTLEVEL = "text, html">
	</div>
</div>
<div id="category-tree-footer"></div>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUI_CatTree_Load_Templates" PARAMETERS = "header_managedtemplate var, cattree_managedtemplate var, footer_managedtemplate var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree-header.mvc', l.header_managedtemplate ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree.mvc', l.cattree_managedtemplate ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( 'cattree-footer.mvc', l.footer_managedtemplate ) }">		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUI_CatTree_Load_TemplateVersions" PARAMETERS = "header_templateversion var, cattree_templateversion var, footer_templateversion var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree-header.mvc', l.header_templateversion ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree.mvc', l.cattree_templateversion ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( 'cattree-footer.mvc', l.footer_templateversion ) }">		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUI_CatTree_Load" PARAMETERS = "cat_id, cssui_category var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersion_Load_Category_Current( 'cssui_cattree', l.cat_id, l.managedproperty ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.cssui_category:cat_id"	VALUE = "{ l.managedproperty:cat_id }">
	<MvASSIGN NAME = "l.cssui_category:image"	VALUE = "{ CSSUI_CatTree_ManagedPropertyAndVersion_To_ImagePath( l.managedproperty ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUI_CatTree_InsertOrUpdate" PARAMETERS = "cat_id, image" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.image_id"	VALUE = 0>
	<MvASSIGN NAME = "l.settings"	VALUE = "">
	
	<MvIF EXPR = "{ NOT ISNULL l.image }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Image_FindOrInsert_ExistingFile( l.image, l.loaded_image ) }">	<MvASSIGN NAME = "l.image_id"		VALUE = "{ l.loaded_image:id }">
		<MvELSE>																								<MvASSIGN NAME = "l.settings:image"	VALUE = "{ l.image }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.settings"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_ManagedProperty_SettingsAndImage( l.settings, l.image_id ) }">
	
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersion_Load_Category_Current( 'cssui_cattree', l.cat_id, l.managedproperty ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvCOMMENT>
		|
		| Do not create a property if the settings are empty
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ( l.settings:image_id EQ 0 ) AND ( ISNULL l.settings:settings:image ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Category_ManagedProperty( 'cssui_cattree', l.cat_id, 'nosync,notemplate', l.null, l.settings, l.managedproperty ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-TREE-00032', 'CSSUI category tree image for category ' $ l.cat_id $ ' created' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Do not create a new version if none of the settings have changed
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ( l.managedproperty:version:image_id EQ l.settings:image_id ) AND ( l.managedproperty:version:settings:image EQ l.settings:settings:image ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedPropertyVersion( l.managedproperty, l.settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-TREE-00033', 'CSSUI category tree image for category ' $ l.cat_id $ ' updated' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUI_CatTree_CategoryList_Load_Parent_Without_URI" PARAMETERS = "cat_id, categories var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.working_branch_id"		VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cat.*,
																		  pbv.page_id,
																		  mpv.settings	AS cattree_settings,
																		  i.id			AS image_id,
																		  i.image		AS image_image' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'ManagedPropertyBranchVersions', 'mpbv', 'mpbv.branch_id = ? AND mpbv.head = 1 AND mpbv.type = \'cssui_cattree\' AND mpbv.code = \'\' AND mpbv.product_id = 0 AND mpbv.cat_id = cat.id', [ g.Module_Library_DB ].SQL_Query_Field( l.working_branch_id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'ManagedPropertyVersions', 'mpv', 'mpv.id = mpbv.version_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'Images', 'i', 'i.id = mpv.image_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( l.working_branch_id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'cat.active	= 1 AND cat.parent_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.cat_id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ [ g.Module_Library_DB ].Runtime_Category_AvailabilityGroup_Where( l.agrp_fields ) $ ' )', l.agrp_fields ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'cat.disp_order', '' ) }">

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'catlimit', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_CategoryLimitation_Query( l.module, l.query, 'cat', 'id' ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Categories"
				QUERY	= "{ l.sql }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-TREE-00028', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.category_count"				VALUE = 0>

	<MvWHILE EXPR = "{ NOT Categories.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.category" VARIABLE = "l.categories">
			<MvDIMENSION INDEX = "{ ++l.category_count }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Category_Read( l.category ) }">

		<MvASSIGN NAME = "l.category:uri" 			VALUE = "">
		<MvASSIGN NAME = "l.category:page_secure" 	VALUE = 0>
		<MvASSIGN NAME = "l.category:page_id" 		VALUE = "{ Categories.d.page_id }">
		<MvASSIGN NAME = "l.category:image_id"		VALUE = "{ Categories.d.image_id }">
		<MvASSIGN NAME = "l.category:image"			VALUE = "{ Categories.d.image_image }">

		<MvCOMMENT>
		|
		| Fallback to the the configured image path from the settings if the image does not exist
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ISNULL l.category:image_id }">
			<MvASSIGN NAME = "l.settings"			VALUE = "{ miva_array_deserialize( Categories.d.cattree_settings ) }">
			<MvASSIGN NAME = "l.category:image"		VALUE = "{ l.settings:image }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CSSUI-CMP-TREE-00029', l.category_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUI_CatTree_CategoryList_Load_Parent_With_URI" PARAMETERS = "cat_id, categories var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.working_branch_id"		VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cat.*,
																		  pbv.page_id,
																		  mpv.settings	AS cattree_settings,
																		  i.id			AS image_id,
																		  i.image		AS image_image' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'ManagedPropertyBranchVersions', 'mpbv', 'mpbv.branch_id = ? AND mpbv.head = 1 AND mpbv.type = \'cssui_cattree\' AND mpbv.code = \'\' AND mpbv.product_id = 0 AND mpbv.cat_id = cat.id', [ g.Module_Library_DB ].SQL_Query_Field( l.working_branch_id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'ManagedPropertyVersions', 'mpv', 'mpv.id = mpbv.version_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'Images', 'i', 'i.id = mpv.image_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( l.working_branch_id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'cat.active	= 1 AND cat.parent_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.cat_id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ [ g.Module_Library_DB ].Runtime_Category_AvailabilityGroup_Where( l.agrp_fields ) $ ' )', l.agrp_fields ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'cat.disp_order', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', 'URIs', 'uri', 'uri.store_id 	= ? 		AND
																				    					 uri.screen 	= \'\' 		AND
																										 uri.page_code 	= \'\' 		AND
																										 uri.cat_id 	= cat.id 	AND
																										 uri.product_id = 0 		AND
																										 uri.feed_id 	= 0 		AND
																				    					 uri.canonical 	= 1', 'g.Store:id' ) }">

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'catlimit', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_CategoryLimitation_Query( l.module, l.query, 'cat', 'id' ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Categories"
				QUERY	= "{ l.sql }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-TREE-00031', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.category_count"				VALUE = 0>

	<MvWHILE EXPR = "{ NOT Categories.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.category" VARIABLE = "l.categories">
			<MvDIMENSION INDEX = "{ ++l.category_count }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Category_Read( l.category ) }">

		<MvASSIGN NAME = "l.category:uri" 			VALUE = "{ Categories.d.uri_uri }">
		<MvASSIGN NAME = "l.category:page_secure" 	VALUE = "{ Categories.d.page_secure }">
		<MvASSIGN NAME = "l.category:page_id"		VALUE = "{ Categories.d.page_id }">
		<MvASSIGN NAME = "l.category:image_id"		VALUE = "{ Categories.d.image_id }">
		<MvASSIGN NAME = "l.category:image"			VALUE = "{ Categories.d.image_image }">

		<MvCOMMENT>
		|
		| Fallback to the the configured image path from the settings if the image does not exist
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ISNULL l.category:image_id }">
			<MvASSIGN NAME = "l.settings"			VALUE = "{ miva_array_deserialize( Categories.d.cattree_settings ) }">
			<MvASSIGN NAME = "l.category:image"		VALUE = "{ l.settings:image }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CSSUI-CMP-TREE-00030', l.category_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUI_CatTree_ManagedPropertyAndVersion_To_ImagePath" PARAMETERS = "managedproperty var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.managedproperty:version:image_id }">	<MvFUNCTIONRETURN VALUE = "{ l.managedproperty:version:image:image }">
	<MvELSE>												<MvFUNCTIONRETURN VALUE = "{ l.managedproperty:version:settings:image }">
	</MvIF>
</MvFUNCTION>

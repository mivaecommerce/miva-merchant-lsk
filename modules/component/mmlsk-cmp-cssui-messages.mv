<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CSSUI-CMP-MESS-
| Next Error Code: 17   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-cmp-cssui-messages">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Standard Validation/Error/Informational Messages">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0900">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "5.70">
	<MvASSIGN NAME = "l.module:features"	VALUE = "component, data_store, vis_store, clientside, clientside_sri, json, provision_store, skins">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: component
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:error_messages"			VALUE = "{ g.Session:cache:error_messages }">
	<MvASSIGN NAME = "l.settings:error_message_count"		VALUE = "{ g.Session:cache:error_message_count }">
	<MvASSIGN NAME = "l.settings:information_messages"		VALUE = "{ g.Session:cache:information_messages }">
	<MvASSIGN NAME = "l.settings:information_message_count"	VALUE = "{ g.Session:cache:information_message_count }">

	<MvEVAL EXPR = "{ Translate_Messages( l.all_settings, 'E', l.settings:error_messages ) }">
	<MvEVAL EXPR = "{ Translate_Messages( l.all_settings, 'I', l.settings:information_messages ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvFOREACH ITERATOR = "l.error_message" ARRAY = "l.settings:error_messages">
		<MvEVAL EXPR = "{ l.error_message }"><br>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.information_message" ARRAY = "l.settings:information_messages">
		<MvEVAL EXPR = "{ l.information_message }"><br>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: data_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CSSUI_Messages
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							type		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 )		$ ',
							message		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							templ_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CSSUI_Messages_1 ON ' $ g.Store_Table_Prefix $ 'CSSUI_Messages ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CSSUI_Messages_2 ON ' $ g.Store_Table_Prefix $ 'CSSUI_Messages ( type, message )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CSSUI_Messages', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default (static) message list for CSSUI.  Additional messages are captured dynamically as they
	| are displayed or can be added by an adminsitrator.  Messages that are constructed using dynamic
	| data are not listed here and must be captured on the fly.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'Attributes in <span class="bold">bold</span> are required.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'Invalid coupon code.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'Invalid payment method.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'Invalid shipping method.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'One or more coupons have been removed from your basket.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'One or more required fields were not filled out correctly.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'Please select a valid combination of attributes.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'Shipping could not be calculated for your basket.  This may be due to a network or configuration error, or the contents of your basket may not be able to be shipped in a single shipment.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The contents of your basket changed during the checkout process.  As a security precaution, you have been returned to the beginning of the checkout process.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The email address you entered is already in use.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The email addresses do not match.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The login or password you entered is incorrect.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The login you selected is already in use.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The password reset link you followed is not valid or has expired.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The passwords do not match.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'The username or password you entered is incorrect.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'E', 'Your basket is not eligible for the specified coupon.' ) }">

	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'I', 'Email Address Updated Successfully.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'I', 'Instructions to reset your password have been sent to the email address on file with your account.  Please contact us if you require further assistance.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'I', 'Password Updated Successfully.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'I', 'Your password has been sent.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'I', 'Your session has expired.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ CSSUIMessage_Record( 'I', 'Your session has timed out.' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CSSUI_Messages' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Delete( 'CSSUI_Messages' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: vis_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Store_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "CMP-CSSUI-MESSAGES:Error Messages">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab EQ 'CMP-CSSUI-MESSAGES' }">
		<MvEVAL EXPR = "{ Element_CSSUIMessageList_CSS( l.module ) }">

		<MvIF EXPR = "{ Element_CSSUIMessage_JavaScript_Combined_Begin( l.module ) }">
			<MvEVAL EXPR = "{ Element_CSSUIMessageList_JavaScript( l.module ) }">
			<MvEVAL EXPR = "{ Element_CSSUIMessage_JavaScript_Combined_End( l.module ) }">
		</MvIF>

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new CSSUIMessageList(); } );
		</script>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.tab EQ 'CMP-CSSUI-MESSAGES' }">
		<MvEVAL EXPR = "{ Element_CSSUIMessageList_HTML( l.module ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: clientside
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/component/cmp-cssui-messages/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_CSSUIMessage_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/component/cmp-cssui-messages/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/component/cmp-cssui-messages/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/component/cmp-cssui-messages/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: json
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'CSSUIMessageList_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_CSSUIMessageList_Load_Query() }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CSSUIMessage_Insert' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CSSUIMessage_Insert() }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CSSUIMessage_Update' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CSSUIMessage_Update() }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CSSUIMessage_Delete' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CSSUIMessage_Delete() }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CSSUIMessage_Restore_Default' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_CSSUIMessage_Restore_Default() }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CSSUIMessageList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( 		l.available_filters, 'm.type',		'type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( 		l.available_filters, 'm.message',	'message' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NULL_CHAR( l.available_filters, 'mtv.source',	'template_source' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'm.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'mtv.source', 'template_source' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CSSUI_Messages', 'm' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'm', g.Store_Table_Prefix $ 'ManagedTemplates',				'mt',	'mt.id = m.templ_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'm', g.Store_Table_Prefix $ 'ManagedTemplateBranchVersions',	'mtbv',	'mtbv.branch_id = ? AND mtbv.templ_id = m.templ_id AND mtbv.head = 1', [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'm', g.Store_Table_Prefix $ 'ManagedTemplateVersions',	'mtv',	'mtv.id = mtbv.version_id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'type:m.type,message:m.message,template_source:mtv.source:null_char', 'm.id' ) }">
	
	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CSSUI_Messages', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-MESS-00005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.message_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT CSSUI_Messages.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.message_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.message_count ) }">
				"id":				<MvEVAL EXPR = "{ CSSUI_Messages.d.id }">,
				"type":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CSSUI_Messages.d.type ) }">",
				"message":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CSSUI_Messages.d.message ) }">",
				"templ_id":			 <MvEVAL EXPR = "{ CSSUI_Messages.d.templ_id }">,
				"template_source":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CSSUI_Messages.d.template_source ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "CSSUI_Messages" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CSSUIMessage_Load" PARAMETERS = "cssui_message var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Message_ID"	VALUE = "{ int( g.Message_ID ) }">

	<MvIF EXPR = "{ NOT CSSUIMessage_Load_ID( g.Message_ID, l.cssui_message ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00006', 'Message not found' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CSSUIMessage_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Type"						VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Type ) }">
	<MvASSIGN NAME = "g.Message"					VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Message ) }">
	<MvASSIGN NAME = "g.Template_Source"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Template_Source ) }">

	<MvIF EXPR = "{ ( g.Type NE 'E' ) AND ( g.Type NE 'I' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Type', 'Invalid message type' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Message }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Message', 'Please specify a message' ) }">
	<MvELSEIF EXPR = "{ CSSUIMessage_Load_Message( g.Type, g.Message, l.existing_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Message', 'Message already exists' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.cssui_message:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CSSUI_Messages' ) }">
	<MvASSIGN NAME = "l.cssui_message:type"			VALUE = "{ g.Type }">
	<MvASSIGN NAME = "l.cssui_message:message"		VALUE = "{ g.Message }">

	<MvIF EXPR = "{ ISNULL g.Template_Source }">
		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.template_filename"		VALUE = "{ 'cssui-message-' $ l.cssui_message:id $ '.mvc' }">
		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Unsynced_ManagedTemplate_NoDuplicates( g.Template_Source, l.null, l.template_filename ) }">

		<MvIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Template_Source', g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Insert_LowLevel( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"id":		<MvEVAL EXPR = "{ l.cssui_message:id }">,
		"templ_id":	<MvEVAL EXPR = "{ l.cssui_message:templ_id }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CSSUIMessage_Update" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CSSUIMessage_Load( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Type"						VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Type ) }">
	<MvASSIGN NAME = "g.Message"					VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Message ) }">
	<MvASSIGN NAME = "g.Template_Source"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Template_Source ) }">

	<MvIF EXPR = "{ ( g.Type NE 'E' ) AND ( g.Type NE 'I' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Type', 'Invalid message type' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Message }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Message', 'Please specify a message' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( l.cssui_message:type NE g.Type ) OR
					( l.cssui_message:message NE g.Message ) }">
		<MvIF EXPR = "{ CSSUIMessage_Load_Message( g.Type, g.Message, l.existing_message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Message', 'Message already exists' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.cssui_message:type"			VALUE = "{ g.Type }">
	<MvASSIGN NAME = "l.cssui_message:message"		VALUE = "{ g.Message }">

	<MvIF EXPR = "{ ISNULL g.Template_Source }">
		<MvIF EXPR = "{ l.cssui_message:templ_id }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate( l.cssui_message:templ_id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.cssui_message:templ_id" VALUE = 0>
	<MvELSEIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
		<MvASSIGN NAME = "l.template_filename"		VALUE = "{ 'cssui-message-' $ l.cssui_message:id $ '.mvc' }">
		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Unsynced_ManagedTemplate_NoDuplicates( g.Template_Source, l.null, l.template_filename ) }">

		<MvIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Template_Source', g.Error_Message ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.cssui_message:templ_id, l.managedtemplate ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.managedtemplate:current_id, l.managedtemplateversion ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Replace_ManagedTemplateVersion( l.managedtemplate, l.managedtemplateversion, g.Template_Source, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Template_Source', g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Update( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"id":		<MvEVAL EXPR = "{ l.cssui_message:id }">,
		"templ_id":	<MvEVAL EXPR = "{ l.cssui_message:templ_id }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CSSUIMessage_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CSSUIMessage_Load( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Delete( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CSSUIMessage_Restore_Default" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CSSUIMessage_Load( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.cssui_message:templ_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate( l.cssui_message:templ_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = 0>

		<MvIF EXPR = "{ NOT CSSUIMessage_Update( l.cssui_message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: provision_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"	VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'message_add' }">						<MvEVAL EXPR = "{ Module_Provision_Store_Message_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'message_update' }">				<MvEVAL EXPR = "{ Module_Provision_Store_Message_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'message_replace' }">				<MvEVAL EXPR = "{ Module_Provision_Store_Message_Replace( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'message_delete' }">				<MvEVAL EXPR = "{ Module_Provision_Store_Message_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'message_restore_default' }">		<MvEVAL EXPR = "{ Module_Provision_Store_Message_Restore_Default( l.module, l.child_xml ) }">
		<MvELSE>														<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Unknown tag' ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Message_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'R', l.provide_xml, 'Type',		l.cssui_message:type, 'Error,Information', 'E,I' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Message',	l.cssui_message:message )							OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Template',	l.template_source ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CSSUIMessage_Load_Message( l.cssui_message:type, l.cssui_message:message, l.existing_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Message already exists' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.cssui_message:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CSSUI_Messages' ) }">

	<MvIF EXPR = "{ ISNULL l.template_source }">
		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.template_filename"		VALUE = "{ 'cssui-message-' $ l.cssui_message:id $ '.mvc' }">
		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Unsynced_ManagedTemplate_NoDuplicates( l.template_source, l.null, l.template_filename ) }">

		<MvIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Insert_LowLevel( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Message_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_List( l.provide_xml, 'type',		l.type,		'Error,Information', 'E,I' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'message',	l.message ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Load_Message( l.type, l.message, l.cssui_message ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Message not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_type"		VALUE = "{ l.cssui_message:type }">
	<MvASSIGN NAME = "l.original_message"	VALUE = "{ l.cssui_message:message }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml, 'Type',		l.cssui_message:type, 'Error,Information', 'E,I' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Message',	l.cssui_message:message ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ( l.cssui_message:type NE l.original_type ) OR
					( l.cssui_message:message NE l.original_message ) }">
		<MvIF EXPR = "{ CSSUIMessage_Load_Message( l.cssui_message:type, l.cssui_message:message, l.existing_message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Message already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Template', l.template_source ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
			<MvASSIGN NAME = "l.template_filename"		VALUE = "{ 'cssui-message-' $ l.cssui_message:id $ '.mvc' }">
			<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Unsynced_ManagedTemplate_NoDuplicates( l.template_source, l.null, l.template_filename ) }">

			<MvIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.cssui_message:templ_id, l.managedtemplate ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.managedtemplate:current_id, l.managedtemplateversion ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Replace_ManagedTemplateVersion( l.managedtemplate, l.managedtemplateversion, l.template_source, l.null ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Update( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Message_Replace" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'R', l.provide_xml, 'Type',		l.type, 'Error,Information', 'E,I' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Message',	l.message )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Template',	l.template_source ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Load_Message( l.type, l.message, l.cssui_message ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvASSIGN NAME = "l.cssui_message:id"		VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CSSUI_Messages' ) }">
		<MvASSIGN NAME = "l.cssui_message:type"		VALUE = "{ l.type }">
		<MvASSIGN NAME = "l.cssui_message:message"	VALUE = "{ l.message }">

		<MvASSIGN NAME = "l.template_filename"		VALUE = "{ 'cssui-message-' $ l.cssui_message:id $ '.mvc' }">
		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Unsynced_ManagedTemplate_NoDuplicates( l.template_source, l.null, l.template_filename ) }">

		<MvIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT CSSUIMessage_Insert_LowLevel( l.cssui_message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
		<MvASSIGN NAME = "l.template_filename"		VALUE = "{ 'cssui-message-' $ l.cssui_message:id $ '.mvc' }">
		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Unsynced_ManagedTemplate_NoDuplicates( l.template_source, l.null, l.template_filename ) }">

		<MvIF EXPR = "{ l.cssui_message:templ_id EQ 0 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT CSSUIMessage_Update( l.cssui_message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.cssui_message:templ_id, l.managedtemplate ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.managedtemplate:current_id, l.managedtemplateversion ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Replace_ManagedTemplateVersion( l.managedtemplate, l.managedtemplateversion, l.template_source, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Message_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_List( l.provide_xml, 'type',		l.type,		'Error,Information', 'E,I' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'message',	l.message ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Load_Message( l.type, l.message, l.cssui_message ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Message not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Delete( l.cssui_message ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Message_Restore_Default" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_List( l.provide_xml, 'type',		l.type,		'Error,Information', 'E,I' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'message',	l.message ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CSSUIMessage_Load_Message( l.type, l.message, l.cssui_message ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Message not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.cssui_message:templ_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate( l.cssui_message:templ_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = 0>

		<MvIF EXPR = "{ NOT CSSUIMessage_Update( l.cssui_message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: skins
|
</MvCOMMENT>

<MvFUNCTION NAME = "SkinsComponentModule_Description" PARAMETERS = "module var, item var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "Exports replacement text for error and information messages">
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.branch_id" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Primary_Branch_ID() }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CSSUI_Messages"
				QUERY	= "{ 'SELECT
								m.type,
								m.message,
								mtv.source AS template_source
							  FROM
								' $ g.Store_Table_Prefix $ 'CSSUI_Messages m,
								' $ g.Store_Table_Prefix $ 'ManagedTemplateBranchVersions bv,
								' $ g.Store_Table_Prefix $ 'ManagedTemplateVersions mtv
							  WHERE
								m.templ_id		<> 0			AND
								bv.branch_id	= ?				AND
								bv.templ_id		= m.templ_id	AND
								bv.head			= 1				AND
								mtv.id			= bv.version_id' }"
			    FIELDS	= "l.branch_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00007', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvCAPTURE VARIABLE = "l.output"><MIVA STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<Module code="{ l.module:code }" feature="component">

		<MvWHILE EXPR = "{ NOT CSSUI_Messages.d.EOF }">
			<Message_Replace>
				<Type><MvIF EXPR = "{ CSSUI_Messages.d.type EQ 'E' }">Error<MvELSEIF EXPR = "{ CSSUI_Messages.d.type EQ 'I' }">Information<MvELSE><MvEVAL EXPR = "{ CSSUI_Messages.d.type }"></MvIF></Type>
				<Message><MvEVAL EXPR = "{ miva_cdata_encode( CSSUI_Messages.d.message ) }"></Message>
				<Template><MvEVAL EXPR = "{ miva_cdata_encode( CSSUI_Messages.d.template_source ) }"></Template>
			</Message_Replace>
			
			<MvSKIP NAME = "Merchant" VIEW = "CSSUI_Messages" ROWS = 1>
		</MvWHILE>

		</Module>
	<MIVA STANDARDOUTPUTLEVEL = ""></MvCAPTURE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Database functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "CSSUIMessage_Read" PARAMETERS = "cssui_message var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.cssui_message:id"		VALUE = "{ CSSUI_Messages.d.id }">
	<MvASSIGN NAME = "l.cssui_message:type"		VALUE = "{ CSSUI_Messages.d.type }">
	<MvASSIGN NAME = "l.cssui_message:message"	VALUE = "{ CSSUI_Messages.d.message }">
	<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = "{ CSSUI_Messages.d.templ_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Record" PARAMETERS = "type, message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.cssui_message:type"		VALUE = "{ l.type }">
	<MvASSIGN NAME = "l.cssui_message:message"	VALUE = "{ l.message }">
	<MvASSIGN NAME = "l.cssui_message:templ_id"	VALUE = 0>

	<MvFUNCTIONRETURN VALUE = "{ CSSUIMessage_Insert( l.cssui_message ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Insert" PARAMETERS = "cssui_message var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.cssui_message:id"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CSSUI_Messages' ) }">

	<MvFUNCTIONRETURN VALUE = "{ CSSUIMessage_Insert_LowLevel( l.cssui_message ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Insert_LowLevel" PARAMETERS = "cssui_message var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CSSUI_Messages
						  ( id, type, message, templ_id ) 
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.cssui_message:id, l.cssui_message:type, l.cssui_message:message, l.cssui_message:templ_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Update" PARAMETERS = "cssui_message var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CSSUI_Messages
						  SET
							type		= ?,
							message		= ?,
							templ_id	= ?
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.cssui_message:type, l.cssui_message:message, l.cssui_message:templ_id,
					   l.cssui_message:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Delete" PARAMETERS = "cssui_message var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.cssui_message:templ_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate( l.cssui_message:templ_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CSSUIMessage_Delete_LowLevel( l.cssui_message:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CSSUI_Messages WHERE id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Load_ID" PARAMETERS = "id, cssui_message var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CSSUI_Messages"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CSSUI_Messages WHERE id = ?' }"
			    FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00011', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CSSUI_Messages.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-CSSUI-CMP-MESS-00012' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CSSUIMessage_Read( l.cssui_message ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessage_Load_Message" PARAMETERS = "type, message, cssui_message var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CSSUI_Messages"
				QUERY	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'CSSUI_Messages
							  WHERE
								type	= ?	AND
								message	= ?' }"
			    FIELDS	= "l.type, l.message">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CSSUI_Messages.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-CSSUI-CMP-MESS-00014' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CSSUIMessage_Read( l.cssui_message ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CSSUIMessageAndTemplate_Load_Message" PARAMETERS = "type, message, cssui_message var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CSSUI_Messages"
				QUERY	= "{ 'SELECT
								m.*,
								mt.filename	AS template_filename
							  FROM
								' $ g.Store_Table_Prefix $ 'CSSUI_Messages m
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ManagedTemplates mt ON mt.id = m.templ_id
							  WHERE
								m.type		= ? AND
								m.message	= ?' }"
			    FIELDS	= "l.type, l.message">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CSSUI-CMP-MESS-00015', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CSSUI_Messages.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-CSSUI-CMP-MESS-00016' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CSSUIMessage_Read( l.cssui_message ) }">

	<MvASSIGN NAME = "l.cssui_message:template_filename"	VALUE = "{ CSSUI_Messages.d.template_filename }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CSSUI_Messages">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Translate_Messages" PARAMETERS = "all_settings var, type, messages var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.message" ARRAY = "l.messages">
		<MvIF EXPR = "{ NOT CSSUIMessageAndTemplate_Load_Message( l.type, l.message, l.cssui_message ) }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvASSIGN NAME = "l.null"	VALUE = "{ CSSUIMessage_Record( l.type, l.message ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.cssui_message:templ_id }">
			<MvCAPTURE VARIABLE = "l.message">
				<MvDO FILE = "{ g.Store_Template_Path $ l.cssui_message:template_filename }" NAME = "l.null" VALUE = "{ Template_Render( l.null, l.all_settings ) }">
			</MvCAPTURE>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvINCLUDE FILE = "modules/component/cmp-cssui-messages/functions.mv">
<MvINCLUDE FILE = "modules/component/cmp-cssui-messages/list.mv">

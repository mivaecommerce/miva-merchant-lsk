<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CSSUI-CMP-ATTR-
| Next Error Code: 5    
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-cmp-cssui-attributes">
	<MvASSIGN NAME = "l.module:name"		VALUE = "CSSUI Product Attributes">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0800">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.08">
	<MvASSIGN NAME = "l.module:features"	VALUE = "component, component_prov, skins">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Product Attribute Template' }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.fields:template_code, l.settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "text,html,compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields:template_code" VALUE = "{ l.templateversion:source }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<table border=0 cellpadding=2 cellspacing=0 width="100%">
		<tr><td colspan=2 width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 100, l.templateversion:templ_id ) }">
		</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, '' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ Generate_Code( l.settings, l.template_source ) }">

	<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-' $ tolower( l.item ) $ '.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.template_source, l.settings, l.settings:template_filename ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'product' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.settings:template_filename ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Branch_Head( l.source_branch:id, l.source_settings:template_filename, l.source_templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Branch_Filename( l.dest_branch:id, l.dest_settings:template_filename, l.dest_managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.dest_settings"						VALUE = "{ l.source_settings }">
	<MvASSIGN NAME = "l.dest_settings:template_filename"	VALUE = "{ l.dest_managedtemplate:version:settings:template_filename }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.dest_managedtemplate, '', l.source_templateversion:source, l.dest_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.source_branch:id EQ l.dest_branch:id }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-ATTR-00003', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' on branch \'' $ l.dest_branch:name $ '\'' ) }">
	<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-ATTR-00004', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' from branch \'' $ l.source_branch:name $ '\' to branch \'' $ l.dest_branch:name $ '\'' ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Reference_Cache( l.all_settings, l.module:code, l.cache ) }">

	<MvIF EXPR = "{ ISNULL l.param }">
		<MvREFERENCE NAME = "l.product"			VARIABLE = "l.all_settings:product">
	<MvELSE>
		<MvASSIGN NAME = "l.param_len"			VALUE = "{ len_var( l.param ) }">

		<MvIF EXPR = "{ ( ':id' IN l.param ) EQ ( l.param_len - 2 ) }">
			<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.all_settings">
				<MvMEMBER NAME = "{ substring_var( l.param, 1, l.param_len - 3 ) }">
			</MvREFERENCEARRAY>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( miva_variable_value( 'l.all_settings:' $ l.param ), l.product ) }">
			<MvASSIGN NAME = "l.product:id"		VALUE = "{ miva_variable_value( 'l.all_settings:' $ l.param ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.product:id LE 0 }">
		<MvREFERENCE NAME = "l.all_settings:attributes"		VARIABLE = "l.empty_attributes">
		<MvREFERENCE NAME = "l.all_settings:subscription"	VARIABLE = "l.empty_subscription">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ l.cache:data:prerendered_product_id EQ l.product:id }">
		<MvFUNCTIONRETURN>
	<MvELSEIF EXPR = "{ miva_element_exists( l.cache:data:attributes, l.product:id ) AND miva_element_exists( l.cache:data:subscription, l.product:id ) }">
		<MvREFERENCEARRAY NAME = "l.all_settings:attributes" VARIABLE = "l.cache:data:attributes">
			<MvDIMENSION INDEX = "{ l.product:id }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.all_settings:subscription" VARIABLE = "l.cache:data:subscription">
			<MvDIMENSION INDEX = "{ l.product:id }">
		</MvREFERENCEARRAY>

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.all_settings:attributes" VARIABLE = "l.cache:data:attributes">
		<MvDIMENSION INDEX = "{ l.product:id }">
	</MvREFERENCEARRAY>

	<MvREFERENCEARRAY NAME = "l.all_settings:subscription" VARIABLE = "l.cache:data:subscription">
		<MvDIMENSION INDEX = "{ l.product:id }">
	</MvREFERENCEARRAY>

	<MvREFERENCE NAME = "l.subscription"				VARIABLE = "l.all_settings:subscription">
	<MvASSIGN NAME = "l.subscription:term_count"		VALUE = 0>

	<MvIF EXPR = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionSettings_Load_Product_Cached( l.product:id, l.subscription ) }">
		<MvFOREACH ITERATOR = "l.productsubscriptionterm" ARRAY = "l.productsubscriptionterms" COUNT = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermList_Load_Product_Cached( l.product:id, l.productsubscriptionterms ) }">
			<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">
				<MvASSIGN NAME = "l.productsubscriptionterm:productsubscriptiontermdate_count"	VALUE = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermDateList_Load_ProductSubscriptionTerm( l.productsubscriptionterm:id, l.productsubscriptionterm:productsubscriptiontermdates ) }">
			</MvIF>

			<MvASSIGN NAME = "l.subscription:terms" INDEX = "{ ++l.subscription:term_count }"	VALUE = "{ l.productsubscriptionterm }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ g.Variant_ID AND ( ISNULL g.Product_Attributes ) }">
		<MvASSIGN NAME = "l.productvariant_count"		VALUE = "{ [ g.Module_Library_DB ].ProductVariantList_Load_Variant( l.product:id, g.Variant_ID, l.productvariants ) }">
	</MvIF>

	<MvREFERENCE NAME = "l.output_attributes"			VARIABLE = "l.all_settings:attributes">
	<MvASSIGN NAME = "l.output_attribute_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.product_attribute" ARRAY = "l.product_attributes" COUNT = "{ [ g.Module_Library_DB ].AttributeList_Load_Product( l.product:id, l.product_attributes ) }">
		<MvIF EXPR = "{ l.product_attribute:type EQ 'template' }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_ATT_DB ].AttributeTemplate_Load_ID( l.product_attribute:attemp_id, l.template ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvFOREACH ITERATOR = "l.template_attribute" ARRAY = "l.template_attributes" COUNT = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateAttrList_Load_Template( l.template:id, l.template_attributes ) }">
				<MvREFERENCEARRAY NAME = "l.output_attribute" VARIABLE = "l.output_attributes">
					<MvDIMENSION INDEX = "{ ++l.product_attribute_count }">
				</MvREFERENCEARRAY>

				<MvASSIGN NAME = "l.output_attribute"					VALUE = "{ l.template_attribute }">
				<MvASSIGN NAME = "l.output_attribute:index"				VALUE = "{ l.product_attribute_count }">
				<MvASSIGN NAME = "l.output_attribute:id"				VALUE = "{ l.product_attribute:id }">
				<MvASSIGN NAME = "l.output_attribute:attmpat_id"		VALUE = "{ l.template_attribute:id }">
				<MvASSIGN NAME = "l.output_attribute:template_code"		VALUE = "{ l.template_attribute:code }">
				<MvASSIGN NAME = "l.output_attribute:code"				VALUE = "{ l.product_attribute:code }">
				<MvASSIGN NAME = "l.output_attribute:price"				VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.output_attribute:price, l.output_attribute:cost ) }">
				<MvASSIGN NAME = "l.output_attribute:formatted_price"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_attribute:price ) }">
				<MvASSIGN NAME = "l.output_attribute:formatted_cost"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_attribute:cost ) }">
				<MvASSIGN NAME = "l.output_attribute:raw_prompt"		VALUE = "{ l.template_attribute:prompt }">

				<MvIF EXPR = "{ ( l.output_attribute:type NE 'checkbox' ) AND ( substring_var( l.output_attribute:raw_prompt, len_var( l.output_attribute:raw_prompt ), 1 ) NE ':' ) }">
					<MvASSIGN NAME = "l.output_attribute:prompt"		VALUE = "{ l.output_attribute:raw_prompt $ ':' }">
				<MvELSE>
					<MvASSIGN NAME = "l.output_attribute:prompt"		VALUE = "{ l.output_attribute:raw_prompt }">
				</MvIF>

				<MvFOREACH ITERATOR = "l.output_option" ARRAY = "l.output_attribute:options" COUNT = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateOptionList_Load_Attribute( l.template_attribute:id, l.output_attribute:options ) }">
					<MvASSIGN NAME = "l.output_option:price"			VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.output_option:price, l.output_option:cost ) }">
					<MvASSIGN NAME = "l.output_option:formatted_price"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_option:price ) }">
					<MvASSIGN NAME = "l.output_option:formatted_cost"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_option:cost ) }">
				</MvFOREACH>

				<MvIF EXPR = "{ NOT ISNULL g.Product_Attributes[ l.output_attribute:index ]:value }">
					<MvASSIGN NAME = "l.output_attribute:value"			VALUE = "{ g.Product_Attributes[ l.output_attribute:index ]:value }">
				<MvELSEIF EXPR = "{ ( l.output_attribute:type NE 'text' ) AND ( l.output_attribute:type NE 'memo' ) AND g.Variant_ID }">
					<MvIF EXPR = "{ miva_array_search( l.productvariants, 1, l.productvariant, '( l.productvariant:attr_id EQ l.output_attribute:id ) AND ( l.productvariant:attmpat_id EQ l.output_attribute:attmpat_id )' ) }">
						<MvIF EXPR = "{ l.output_attribute:type EQ 'checkbox' }">
							<MvIF EXPR = "{ l.productvariant:option_id }">	<MvASSIGN NAME = "l.output_attribute:value"	VALUE = 1>
							<MvELSE>										<MvASSIGN NAME = "l.output_attribute:value" VALUE = "">
							</MvIF>
						<MvELSEIF EXPR = "{ miva_array_search( l.output_attribute:options, 1, l.output_option, 'l.output_option:id EQ l.productvariant:option_id' ) }">
							<MvASSIGN NAME = "l.output_attribute:value"	VALUE = "{ l.output_option:code }">
						</MvIF>
					</MvIF>
				</MvIF>
			</MvFOREACH>
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.output_attribute" VARIABLE = "l.output_attributes">
				<MvDIMENSION INDEX = "{ ++l.product_attribute_count }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.output_attribute"						VALUE = "{ l.product_attribute }">
			<MvASSIGN NAME = "l.output_attribute:index"					VALUE = "{ l.product_attribute_count }">
			<MvASSIGN NAME = "l.output_attribute:attmpat_id"			VALUE = 0>
			<MvASSIGN NAME = "l.output_attribute:price"					VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.output_attribute:price, l.output_attribute:cost ) }">
			<MvASSIGN NAME = "l.output_attribute:formatted_price"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_attribute:price ) }">
			<MvASSIGN NAME = "l.output_attribute:formatted_cost"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_attribute:cost ) }">
			<MvASSIGN NAME = "l.output_attribute:raw_prompt"			VALUE = "{ l.product_attribute:prompt }">

			<MvIF EXPR = "{ ( l.output_attribute:type NE 'checkbox' ) AND ( substring_var( l.output_attribute:raw_prompt, len_var( l.output_attribute:raw_prompt ), 1 ) NE ':' ) }">
				<MvASSIGN NAME = "l.output_attribute:prompt"			VALUE = "{ l.output_attribute:raw_prompt $ ':' }">
			<MvELSE>
				<MvASSIGN NAME = "l.output_attribute:prompt"			VALUE = "{ l.output_attribute:raw_prompt }">
			</MvIF>

			<MvFOREACH ITERATOR = "l.output_option" ARRAY = "l.output_attribute:options" COUNT = "{ [ g.Module_Library_DB ].OptionList_Load_Attribute( l.product_attribute:id, l.output_attribute:options ) }">
				<MvASSIGN NAME = "l.output_option:price"				VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.output_option:price, l.output_option:cost ) }">
				<MvASSIGN NAME = "l.output_option:formatted_price"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_option:price ) }">
				<MvASSIGN NAME = "l.output_option:formatted_cost"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.output_option:cost ) }">
			</MvFOREACH>

			<MvIF EXPR = "{ NOT ISNULL g.Product_Attributes[ l.output_attribute:index ]:value }">
				<MvASSIGN NAME = "l.output_attribute:value"				VALUE = "{ g.Product_Attributes[ l.output_attribute:index ]:value }">
			<MvELSEIF EXPR = "{ ( l.output_attribute:type NE 'text' ) AND ( l.output_attribute:type NE 'memo' ) AND g.Variant_ID }">
				<MvIF EXPR = "{ miva_array_search( l.productvariants, 1, l.productvariant, '( l.productvariant:attr_id EQ l.output_attribute:id ) AND ( l.productvariant:attmpat_id EQ l.output_attribute:attmpat_id )' ) }">
					<MvIF EXPR = "{ l.output_attribute:type EQ 'checkbox' }">
						<MvIF EXPR = "{ l.productvariant:option_id }">	<MvASSIGN NAME = "l.output_attribute:value"	VALUE = 1>
						<MvELSE>										<MvASSIGN NAME = "l.output_attribute:value" VALUE = "">
						</MvIF>
					<MvELSEIF EXPR = "{ miva_array_search( l.output_attribute:options, 1, l.output_option, 'l.output_option:id EQ l.productvariant:option_id' ) }">
						<MvASSIGN NAME = "l.output_attribute:value"		VALUE = "{ l.output_option:code }">
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Save and restore g.Product_Attributes in case this module is used
	| more than once on a single page
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.save_attributes"			VALUE = "{ g.Product_Attributes }">
	<MvASSIGN NAME = "g.Product_Attributes"			VALUE = "{ l.all_settings:attributes }">

	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( l.settings:template_filename, l.all_settings ) }">

	<MvASSIGN NAME = "g.Product_Attributes"			VALUE = "{ l.save_attributes }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code" PARAMETERS = "settings var, code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
	<MIVA STANDARDOUTPUTLEVEL = "text,html">
<table>
<mvt:foreach iterator="attribute" array="attributes">
	<tr>
		<td class="prompt">
			<input type="hidden" name="Product_Attributes[&mvt:attribute:index;]:code" value="&mvte:attribute:code;" />
			<mvt:if expr="l.settings:attribute:template_code NE 0">
				<input type="hidden" name="Product_Attributes[&mvt:attribute:index;]:template_code" value="&mvte:attribute:template_code;" />
			</mvt:if>
			<mvt:if expr="l.settings:attribute:type NE 'checkbox'">
				<mvt:if expr="l.settings:attribute:image">
					<img src="&mvte:attribute:image;" alt="&mvte:attribute:raw_prompt;" />
				<mvt:else>
					<mvt:if expr="l.settings:attribute:required">
						<span class="required">
					<mvt:else>
						<span>
					</mvt:if>
							&mvt:attribute:prompt;
						</span>
				</mvt:if>
			<mvt:else>
				&nbsp;
			</mvt:if>
		</td>
		<td class="field">
			<mvt:if expr="l.settings:attribute:type EQ 'text'">
				<input type="text" name="Product_Attributes[&mvt:attribute:index;]:value" value="&mvte:attribute:value;" class="textfield" />
			<mvt:elseif expr="l.settings:attribute:type EQ 'memo'">
				<textarea name="Product_Attributes[&mvt:attribute:index;]:value">&mvte:attribute:value;</textarea>
			<mvt:elseif expr="l.settings:attribute:type EQ 'radio'">
				<mvt:foreach iterator="option" array="attribute:options">
					<div>
					<mvt:if expr="( ( ISNULL g.Product_Attributes[l.settings:attribute:index]:value ) AND ( l.settings:option:id EQ l.settings:attribute:default_id ) ) OR
								  ( ( NOT ISNULL g.Product_Attributes[l.settings:attribute:index]:value ) AND ( g.Product_Attributes[l.settings:attribute:index]:value EQ l.settings:option:code ) )">
						<input type="radio" name="Product_Attributes[&mvt:attribute:index;]:value" value="&mvte:option:code;" checked />
					<mvt:else>
						<input type="radio" name="Product_Attributes[&mvt:attribute:index;]:value" value="&mvte:option:code;" />
					</mvt:if>
					<mvt:if expr="l.settings:option:image">
						<img src="&mvte:option:image;" alt="&mvte:option:prompt;" />
					<mvt:else>
						&mvte:option:prompt;
					</mvt:if>
					</div>
				</mvt:foreach>
			<mvt:elseif expr="( l.settings:attribute:type EQ 'select' ) OR ( l.settings:attribute:type EQ 'swatch-select' )">
				<select name="Product_Attributes[&mvt:attribute:index;]:value">
					<mvt:foreach iterator="option" array="attribute:options">
						<mvt:if expr="( ( ISNULL g.Product_Attributes[l.settings:attribute:index]:value ) AND ( l.settings:option:id EQ l.settings:attribute:default_id ) ) OR
									  ( ( NOT ISNULL g.Product_Attributes[l.settings:attribute:index]:value ) AND ( g.Product_Attributes[l.settings:attribute:index]:value EQ l.settings:option:code ) )">
							<option value="&mvte:option:code;" selected>&mvte:option:prompt;</option>
						<mvt:else>
							<option value="&mvte:option:code;">&mvte:option:prompt;</option>
						</mvt:if>
					</mvt:foreach>
				</select>
			<mvt:elseif expr="l.settings:attribute:type EQ 'checkbox'">
				<mvt:if expr="g.Product_Attributes[l.settings:attribute:index]:value">
					<input type="checkbox" name="Product_Attributes[&mvt:attribute:index;]:value" value="Yes" checked />
				<mvt:else>
					<input type="checkbox" name="Product_Attributes[&mvt:attribute:index;]:value" />
				</mvt:if>
				<mvt:if expr="l.settings:attribute:image">
					<img src="&mvte:attribute:image;" alt="&mvte:attribute:raw_prompt;" />
				<mvt:else>
					<mvt:if expr="l.settings:attribute:required">
						<span class="required">
					<mvt:else>
						<span>
					</mvt:if>
							&mvt:attribute:prompt;
						</span>
				</mvt:if>				
			</mvt:if>
		</td>
	</tr>
</mvt:foreach>

<mvt:if expr="l.settings:subscription:enabled AND l.settings:subscription:term_count">
	<tr>
		<td class="prompt">Subscribe:</td>
		<td class="field">
			<select name="Product_Subscription_Term_ID">
				<mvt:if expr="NOT l.settings:subscription:mandatory">
					<option value="0">No Subscription</option>
				</mvt:if>

				<mvt:foreach iterator="term" array="subscription:terms">
					<option value="&mvte:term:id;">&mvte:term:descrip;</option>
				</mvt:foreach>
			</select>
		</td>
	</tr>
</mvt:if>
</table>
<div class="clear"></div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Provision" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'r', l.provide_xml,	'Template',	l.template ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml,	'Notes',	l.notes ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.template, l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Description" PARAMETERS = "module var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pages" VALUE = "{ [ g.Module_Feature_TUI_DB ].Item_Load_PageList( l.item ) }">
	
	<MvFUNCTIONRETURN VALUE = "{ 'Exports Product Attributes template from pages: ' $ l.pages }">
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.output" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item_Runtime( l.item:id, l.pages ) }">
			<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
				<MvMEMBER NAME = "{ l.item:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
				<Page_Update code="{ l.page:code }">
					<Item code="{ l.item:code }">
						<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.templateversion:source ) }"></Template>
						<Notes>#Set_Current_Time#</Notes>
					</Item>
				</Page_Update>
			</MvIF>
		</MvFOREACH>
	</MvCAPTURE>
</MvFUNCTION>

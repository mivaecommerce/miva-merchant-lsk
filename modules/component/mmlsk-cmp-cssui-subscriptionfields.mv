<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CSSUI-CMP-CSUBF-
| Next Error Code: 18
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-cmp-cssui-subscriptionfields">
	<MvASSIGN NAME = "l.module:name"		VALUE = "CSSUI Subscription Fields">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0800">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.08">
	<MvASSIGN NAME = "l.module:features"	VALUE = "component, component_prov, skins, json">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tabs" VALUE = "{ 'GT_PAGE/' $ l.item $ ':Subscription Fields' }">

	<MvIF EXPR = "{ miva_array_elements( l.settings:imagetypes ) GT 0 }">
		<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ ',GT_PAGE/' $ l.item $ '_dimensions:Subscription Fields Image Dimensions' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.fields:mode"					VALUE = "{ trim( l.fields:mode ) }">
	<MvASSIGN NAME = "l.fields:b_width"					VALUE = "{ trim( l.fields:b_width ) }">
	<MvASSIGN NAME = "l.fields:b_height"				VALUE = "{ trim( l.fields:b_height ) }">
	<MvASSIGN NAME = "l.fields:display:shipping"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:display:shipping ) }">
	<MvASSIGN NAME = "l.fields:display:handling"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:display:handling ) }">
	<MvASSIGN NAME = "l.fields:display:salestax"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:display:salestax ) }">
	<MvASSIGN NAME = "l.fields:display:discounts"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:display:discounts ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.fields:b_width ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item $ '_dimensions', l.field_prefix $ 'b_width', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.fields:b_height ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item $ '_dimensions', l.field_prefix $ 'b_height', g.Validation_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ModeToSettings_Convert( l.fields:mode, l.mode_settings ) }">

	<MvIF EXPR = "{ l.mode_settings:mode EQ l.settings:mode }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.selectedfield_count"		VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( l.fields:fields_custom, l.settings:fields_custom ) }">
	<MvASSIGN NAME = "l.imagetype_count"			VALUE = "{ [ g.Module_Library_Utilities ].ImageTypeSelect_Selected( l.fields:imagetypes, l.settings:imagetypes ) }">

	<MvASSIGN NAME = "l.settings:constrain"			VALUE = "{ l.fields:constrain }">
	<MvASSIGN NAME = "l.settings:b_width"			VALUE = "{ l.fields:b_width }">
	<MvASSIGN NAME = "l.settings:b_height"			VALUE = "{ l.fields:b_height }">
	<MvASSIGN NAME = "l.settings:display:shipping"	VALUE = "{ l.fields:display:shipping }">
	<MvASSIGN NAME = "l.settings:display:handling"	VALUE = "{ l.fields:display:handling }">
	<MvASSIGN NAME = "l.settings:display:salestax"	VALUE = "{ l.fields:display:salestax }">
	<MvASSIGN NAME = "l.settings:display:discounts"	VALUE = "{ l.fields:display:discounts }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-CSUBF-00005', l.module:name $ ' \'' $ l.item $ '\' settings updated' ) }">

	<MvEVAL EXPR = "{ ModeToSettings_Convert( l.fields:mode, l.mode_settings ) }">

	<MvIF EXPR = "{ l.mode_settings:mode NE l.settings:mode }">
		<MvASSIGN NAME = "l.settings:mode"			VALUE = "{ l.mode_settings:mode }">

		<MvEVAL EXPR = "{ Generate_Code( l.settings, l.fields:template_code ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.fields:template_code, l.settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.imagetype_count"						VALUE = "{ [ g.Module_Library_DB ].ImageTypeList_Load_All( l.imagetypes ) }">

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields:template_code"				VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"			VALUE = "{ l.settings:template_filename }">

		<MvASSIGN NAME = "l.fields:display:shipping"			VALUE = "{ l.settings:display:shipping }">
		<MvASSIGN NAME = "l.fields:display:handling"			VALUE = "{ l.settings:display:handling }">
		<MvASSIGN NAME = "l.fields:display:salestax"			VALUE = "{ l.settings:display:salestax }">
		<MvASSIGN NAME = "l.fields:display:discounts"			VALUE = "{ l.settings:display:discounts }">
		<MvASSIGN NAME = "l.fields:imagetypes"					VALUE = "{ l.settings:imagetypes }">

		<MvIF EXPR = "{ ISNULL l.settings:constrain }">
			<MvASSIGN NAME = "l.fields:constrain"				VALUE = "B">
		<MvELSE>
			<MvASSIGN NAME = "l.fields:constrain"				VALUE = "{ l.settings:constrain }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.settings:b_width }">
			<MvASSIGN NAME = "l.fields:b_width"					VALUE = 75>
		<MvELSE>
			<MvASSIGN NAME = "l.fields:b_width"					VALUE = "{ l.settings:b_width }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.settings:b_height }">
			<MvASSIGN NAME = "l.fields:b_height"				VALUE = 75>
		<MvELSE>
			<MvASSIGN NAME = "l.fields:b_height"				VALUE = "{ l.settings:b_height }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].InitializeCustomFieldSelect( l.settings:fields_custom, l.fields:fields_custom ) }">

		<MvEVAL EXPR = "{ SettingsToMode_Convert( l.settings, l.fields:mode ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'mode,template_code,template_filename,imagetypes,fields_custom,display:shipping,display:handling,display:salestax,display:discounts' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">

		<MvIF EXPR = "{ l.fields:mode EQ 'tokens_only_nodisplay' }">
			<MvHIDE FIELDS = "{ l.field_prefix $ 'template_code' }">
		<MvELSE>
			<tr><td colspan="2" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 100, l.templateversion:templ_id ) }">
			</td></tr>

			<tr><td colspan="2">&nbsp;</td></tr>
		</MvIF>

		<tr><td align="left" valign="top" nowrap>
			<b>Subscription Charges/Discounts:</b>
		</td><td align="left" width="100%">
			<label><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.fields:display:shipping,	l.field_prefix $ 'display:shipping',	1, 'Display Estimated Shipping Charges' ) }"></label><br />
			<label><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.fields:display:handling,	l.field_prefix $ 'display:handling',	1, 'Display Estimated Handling Charge' ) }"></label><br />
			<label><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.fields:display:salestax,	l.field_prefix $ 'display:salestax',	1, 'Display Estimated Sales Tax' ) }"></label><br />
			<label><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.fields:display:discounts,	l.field_prefix $ 'display:discounts',	1, 'Display Other Subscription Level Discounts' ) }"></label>
		</td></tr>

		<MvASSIGN NAME = "l.customfield_count" VALUE = "{ [ g.Module_Library_Utilities ].ProductCustomFieldList_Load( l.customfields ) }">

		<MvIF EXPR = "{ l.customfield_count }">
			<tr><td align="left" valign="top" nowrap>
				<b>Custom Fields:</b>
			</td><td align="left" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCustomFieldSelect( l.field_prefix $ 'fields_custom', l.fields:fields_custom, l.customfields, l.customfield_count ) }">
			</td></tr>
		</MvIF>

		<MvIF EXPR = "{ l.imagetype_count EQ 0 }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'imagetypes' ) }">
		<MvELSE>
			<tr><td align="left" valign="top" nowrap>
				<b>Product Images:</b>
			</td><td align="left" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawImageTypeSelect( l.field_prefix $ 'imagetypes', l.fields:imagetypes, l.imagetypes, l.imagetype_count ) }">
			</td></tr>
		</MvIF>

		<tr><td>
			Mode:
		</td><td>
			<select name="{ encodeentities( l.field_prefix ) $ 'mode' }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'subscription_edit',		l.fields:mode, 'Subscription: Edit' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'tokens_only_nodisplay',	l.fields:mode, 'Tokens Only - No Display' ) }">
			</select>
		</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item $ '_dimensions' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'constrain,b_width,b_height' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item $ '_dimensions' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<tr>
				<td align="left" valign="top" nowrap><b>Product Image:</b></td>
				<td align="left" width="100%">
					<label><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.field_prefix $ 'constrain', 'N', l.fields:constrain, 'No constraints' ) }"></label><br />
					<label><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.field_prefix $ 'constrain', 'B', l.fields:constrain, 'Resize to fit within bounding box:' ) }"></label>
					<input type="text" name="{ encodeentities( l.field_prefix ) $ 'b_width' }" value="{ encodeentities( l.fields:b_width ) }" style="text-align:right;" size="5" /> x 
					<input type="text" name="{ encodeentities( l.field_prefix ) $ 'b_height' }" value="{ encodeentities( l.fields:b_height ) }" style="text-align:right;" size="5" /> pixels
				</td>
			</tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:mode"				VALUE = "subscription_edit">
	<MvASSIGN NAME = "l.settings:b_height"			VALUE = 75>
	<MvASSIGN NAME = "l.settings:b_width"			VALUE = 75>
	<MvASSIGN NAME = "l.settings:constrain"			VALUE = "B">
	<MvASSIGN NAME = "l.settings:fields_custom" 	VALUE = "">
	<MvASSIGN NAME = "l.settings:imagetypes"		VALUE = "">
	<MvASSIGN NAME = "l.settings:display:shipping"	VALUE = 1>
	<MvASSIGN NAME = "l.settings:display:handling"	VALUE = 1>
	<MvASSIGN NAME = "l.settings:display:salestax"	VALUE = 1>
	<MvASSIGN NAME = "l.settings:display:discounts"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ Generate_Code( l.settings, l.template_source ) }">

	<MvASSIGN NAME = "l.page:settings:paymentcards:mode"	VALUE = "tokens_only_nodisplay">
	<MvASSIGN NAME = "l.page:settings:customer:mode"		VALUE = "tokens_only_nodisplay">

	<MvASSIGN NAME = "l.settings:template_filename"			VALUE = "{ tolower( l.page:code ) $ '-' $ tolower( l.item ) $ '.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.template_source, l.settings, l.settings:template_filename ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'paymentcards' ) OR
					NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'datepicker' ) OR
					NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'customer' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.settings:template_filename ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Branch_Head( l.source_branch:id, l.source_settings:template_filename, l.source_templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Branch_Filename( l.dest_branch:id, l.dest_settings:template_filename, l.dest_managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.dest_settings"						VALUE = "{ l.source_settings }">
	<MvASSIGN NAME = "l.dest_settings:template_filename"	VALUE = "{ l.dest_managedtemplate:version:settings:template_filename }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.dest_managedtemplate, '', l.source_templateversion:source, l.dest_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.source_branch:id EQ l.dest_branch:id }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-CSUBF-00016', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' on branch \'' $ l.dest_branch:name $ '\'' ) }">
	<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CSSUI-CMP-CSUBF-00017', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' from branch \'' $ l.source_branch:name $ '\' to branch \'' $ l.dest_branch:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT g.Basket:cust_id OR NOT g.Customer_Session_Verified }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'customer_invalid_session' ) }">
	<MvELSEIF EXPR = "{ l.settings:mode NE 'subscription_edit' AND l.settings:mode NE 'tokens_only_nodisplay' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'customer' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'paymentcards' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( g.Subscription_ID, l.subscription )														OR
					NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionSettings_Load_ProductOrDefault( l.subscription:product_id, l.productsubscriptionsettings )	OR
					NOT [ g.Module_Library_DB ].Product_Load_ID( l.subscription:product_id, l.product )																OR
					l.subscription:cust_id NE g.Basket:cust_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'subscription_not_found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID( l.subscription:subterm_id, l.productsubscriptionterm ) }">
		<MvASSIGN NAME = "g.SubscriptionTerm_Invalid" VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( l.subscription:addr_id, l.address ) }">
		<MvASSIGN NAME = "g.SubscriptionAddress_Invalid" VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.subscription:custpc_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID_Cached( l.subscription:custpc_id, g.Basket:cust_id, l.paymentcard ) }">
			<MvASSIGN NAME = "g.SubscriptionPaymentCard_Invalid" VALUE = 1>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.settings:id"								VALUE = "{ l.subscription:id }">
	<MvASSIGN NAME = "l.settings:order_id"							VALUE = "{ l.subscription:order_id }">
	<MvASSIGN NAME = "l.settings:line_id"							VALUE = "{ l.subscription:line_id }">
	<MvASSIGN NAME = "l.settings:cust_id"							VALUE = "{ l.subscription:cust_id }">
	<MvASSIGN NAME = "l.settings:custpc_id"							VALUE = "{ l.subscription:custpc_id }">
	<MvASSIGN NAME = "l.settings:product_id"						VALUE = "{ l.subscription:product_id }">
	<MvASSIGN NAME = "l.settings:subterm_id"						VALUE = "{ l.subscription:subterm_id }">
	<MvASSIGN NAME = "l.settings:addr_id"							VALUE = "{ l.subscription:addr_id }">
	<MvASSIGN NAME = "l.settings:ship_id"							VALUE = "{ l.subscription:ship_id }">
	<MvASSIGN NAME = "l.settings:ship_data"							VALUE = "{ l.subscription:ship_data }">
	<MvASSIGN NAME = "l.settings:quantity"							VALUE = "{ l.subscription:quantity }">
	<MvASSIGN NAME = "l.settings:termrem"							VALUE = "{ l.subscription:termrem }">
	<MvASSIGN NAME = "l.settings:termproc"							VALUE = "{ l.subscription:termproc }">
	<MvASSIGN NAME = "l.settings:firstdate"							VALUE = "{ l.subscription:firstdate }">
	<MvASSIGN NAME = "l.settings:lastdate"							VALUE = "{ l.subscription:lastdate }">
	<MvASSIGN NAME = "l.settings:nextdate"							VALUE = "{ l.subscription:nextdate }">
	<MvASSIGN NAME = "l.settings:cncldate"							VALUE = "{ l.subscription:cncldate }">
	<MvASSIGN NAME = "l.settings:status"							VALUE = "{ l.subscription:status }">
	<MvASSIGN NAME = "l.settings:message"							VALUE = "{ l.subscription:message }">

	<MvASSIGN NAME = "l.settings:product"							VALUE = "{ l.product }">
	<MvASSIGN NAME = "l.settings:address"							VALUE = "{ l.address }">
	<MvASSIGN NAME = "l.settings:customer"							VALUE = "{ g.Customer }">
	<MvASSIGN NAME = "l.settings:paymentcard"						VALUE = "{ l.paymentcard }">
	<MvASSIGN NAME = "l.settings:productsubscriptionterm"			VALUE = "{ l.productsubscriptionterm }">
	<MvASSIGN NAME = "l.settings:productsubscriptionsettings"		VALUE = "{ l.productsubscriptionsettings }">
	<MvASSIGN NAME = "l.settings:productsubscriptionterm_count"		VALUE = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermList_Load_Product( l.subscription:product_id, l.settings:productsubscriptionterms ) }">

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_UT ].CommonComponentFields_Initialize_Subscription_Fields( l.all_settings, l.settings, l.settings, l.original_basket ) }">
		<MvASSIGN NAME = "l.settings:shippingmethod_count"			VALUE = "{ [ g.Module_Feature_SHP_UT ].ShippingMethodList_Load_Basket( l.settings:shippingmethods ) }">

		<MvFOREACH ITERATOR = "l.shippingmethod" ARRAY = "l.settings:shippingmethods" COUNT = "{ l.settings:shippingmethod_count }">
			<MvASSIGN NAME = "l.shippingmethod:formatted_price"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.shippingmethod:price ) }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_UT ].CommonComponentFields_Initialize_Subscription_CleanupTemporaryBasket( l.original_basket ) }">
	</MvIF>

	<MvIF EXPR = "{ ( g.UI_Exception NE 1 ) OR ( g.Session:cache:last_ui_exception NE 'invalid_subscription_edit' ) }">
		<MvASSIGN NAME = "g.ProductSubscriptionTerm_ID"				VALUE = "{ l.settings:subterm_id }">
		<MvASSIGN NAME = "g.PaymentCard_ID"							VALUE = "{ l.settings:custpc_id }">
		<MvASSIGN NAME = "g.Address_ID"								VALUE = "{ l.settings:addr_id }">
		<MvASSIGN NAME = "g.Quantity"								VALUE = "{ l.settings:quantity }">
		<MvASSIGN NAME = "g.NextOrderDate_Year"						VALUE = "{ time_t_year( l.settings:nextdate, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "g.NextOrderDate_Month"					VALUE = "{ time_t_month( l.settings:nextdate, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "g.NextOrderDate_Day"						VALUE = "{ time_t_dayofmonth( l.settings:nextdate, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "g.NextOrderDate"							VALUE = "{ l.settings:nextdate }"> <MvCOMMENT> Legacy variable </MvCOMMENT>

		<MvIF EXPR = "{ l.settings:ship_id GT 0 AND miva_array_search( l.settings:shippingmethods, 1, l.search_method, 'l.search_method:module:id EQ l.settings:ship_id AND l.search_method:code EQ l.settings:ship_data' ) }">
			<MvASSIGN NAME = "g.ShippingMethod"						VALUE = "{ l.search_method:module:code $ ':' $ l.search_method:code }">
		<MvELSE>
			<MvASSIGN NAME = "g.ShippingMethod"						VALUE = "">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "g.Formatted_NextOrderDate"					VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( g.NextOrderDate, s.miva_language ) }"> <MvCOMMENT> Legacy variable </MvCOMMENT>

	<MvIF EXPR = "{ g.SubscriptionPaymentCard_Invalid }">	<MvASSIGN NAME = "g.SubscriptionPaymentCard_Row"	VALUE = "form_row invalid">
	<MvELSE>												<MvASSIGN NAME = "g.SubscriptionPaymentCard_Row"	VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.SubscriptionAddress_Invalid }">		<MvASSIGN NAME = "g.SubscriptionAddress_Row"		VALUE = "form_row invalid">
	<MvELSE>												<MvASSIGN NAME = "g.SubscriptionAddress_Row"		VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.SubscriptionShipping_Invalid }">		<MvASSIGN NAME = "g.SubscriptionShipping_Row"		VALUE = "form_row invalid">
	<MvELSE>												<MvASSIGN NAME = "g.SubscriptionShipping_Row"		VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.SubscriptionTerm_Invalid }">			<MvASSIGN NAME = "g.SubscriptionTerm_Row"			VALUE = "form_row invalid">
	<MvELSE>												<MvASSIGN NAME = "g.SubscriptionTerm_Row"			VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.SubscriptionNextDate_Invalid }">		<MvASSIGN NAME = "g.SubscriptionNextDate_Row"		VALUE = "form_row invalid">
	<MvELSE>												<MvASSIGN NAME = "g.SubscriptionNextDate_Row"		VALUE = "form_row">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( l.settings:template_filename, l.all_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Provision" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.working_settings"	VALUE = "{ l.settings }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'O', l.provide_xml, 'DisplayShipping',	l.working_settings:display:shipping )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'O', l.provide_xml, 'DisplayHandling',	l.working_settings:display:handling )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'O', l.provide_xml, 'DisplaySalesTax',	l.working_settings:display:salestax )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'O', l.provide_xml, 'DisplayDiscounts',	l.working_settings:display:discounts )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'o', l.provide_xml,	'Template',			l.template )							OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml,	'Notes',			l.notes )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 		'O', l.provide_xml,	'Mode',				l.mode,
																			 'tokens_only_nodisplay, subscription_edit',
																			 'tokens_only_nodisplay, subscription_edit' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Fields' ) }">
		<MvIF EXPR = "{ NOT ComponentModule_Provision_Fields( l.module, l.provide_xml:tags:Fields[ 1 ], l.working_settings ) }">
			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'ImageTypes' ) }">
		<MvIF EXPR = "{ NOT ComponentModule_Provision_ImageTypes( l.module, l.provide_xml:tags:ImageTypes[ 1 ], l.working_settings ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to provision multiple image types' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'ImageDimensions' ) }">
		<MvASSIGN NAME = "l.dimensions" VALUE = "{ l.provide_xml:tags:ImageDimensions[ 1 ] }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Boolean( l.dimensions, 'constrain', l.constrain ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT l.constrain }">
			<MvASSIGN NAME = "l.working_settings:constrain" VALUE = "N">
		<MvELSE>
			<MvASSIGN NAME = "l.working_settings:constrain" VALUE = "B">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer( 'R', l.dimensions, 'Width',	l.working_settings:b_width ) OR
							NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer( 'R', l.dimensions, 'Height',	l.working_settings:b_height ) }">
				<MvFUNCTIONRETURN>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.mode }">
		<MvEVAL EXPR = "{ ModeToSettings_Convert( l.mode, l.working_settings ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
			<MvEVAL EXPR = "{ Generate_Code( l.working_settings, l.template ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
		<MvASSIGN NAME = "l.template" VALUE = "{ l.managedtemplate:version:source }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.template, l.working_settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings" VALUE = "{ l.working_settings }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Provision_ImageTypes" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:imagetypes" VALUE = "">

	<MvFOREACH ITERATOR = "l.child" ARRAY = "l.provide_xml:children" COUNT = "{ miva_array_elements( l.provide_xml:children ) }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].ImageType_Load_Code( l.child:value, l.imagetype ) }">
			<MvASSIGN NAME = "l.type_count" VALUE = "{ miva_array_insert( l.settings:imagetypes, l.imagetype:code, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Provision_Fields" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:fields_custom"				VALUE = "">
	<MvASSIGN NAME = "l.customfield_count"					VALUE = 0>

	<MvFOREACH ITERATOR = "l.child" ARRAY = "l.provide_xml:children" COUNT = "{ miva_array_elements( l.provide_xml:children ) }">
		<MvASSIGN NAME = "l.name"					VALUE = "{ tolower( l.child:name ) }">

		<MvIF EXPR = "{ l.name EQ 'custom' }">
			<MvASSIGN NAME = "l.customfield_count" 	VALUE = "{ l.customfield_count + 1 }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child, 'module',	l.settings:fields_custom[ l.customfield_count ]:module ) OR
							NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child, 'code',	l.settings:fields_custom[ l.customfield_count ]:code ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Description" PARAMETERS = "module var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pages" VALUE = "{ [ g.Module_Feature_TUI_DB ].Item_Load_PageList( l.item ) }">

	<MvFUNCTIONRETURN VALUE = "{ 'Exports Subscription View/Edit Content template from pages: ' $ l.pages }">
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.output" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item_Runtime( l.item:id, l.pages ) }">
			<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
				<MvMEMBER NAME = "{ l.item:code }">
			</MvREFERENCEARRAY>

			<MvEVAL EXPR = "{ SettingsToMode_Convert( l.settings, l.mode ) }">

			<Page_Update code="{ l.page:code }">
				<Item code="{ l.item:code }">
					<DisplayShipping><MvIF EXPR = "{ l.settings:display:shipping }">Yes<MvELSE>No</MvIF></DisplayShipping>
					<DisplayHandling><MvIF EXPR = "{ l.settings:display:handling }">Yes<MvELSE>No</MvIF></DisplayHandling>
					<DisplaySalesTax><MvIF EXPR = "{ l.settings:display:salestax }">Yes<MvELSE>No</MvIF></DisplaySalesTax>
					<DisplayDiscounts><MvIF EXPR = "{ l.settings:display:discounts }">Yes<MvELSE>No</MvIF></DisplayDiscounts>

					<Fields>
						<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.settings:fields_custom">
							<Custom module="{ l.customfield:module }" code="{ l.customfield:code }" />
						</MvFOREACH>
					</Fields>

					<ImageTypes>
						<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.settings:imagetypes">
							<ImageType><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].CDATA_Encode( l.imagetype ) }"></ImageType>
						</MvFOREACH>
					</ImageTypes>

					<MvIF EXPR = "{ l.settings:constrain NE 'B' }">
						<ImageDimensions constrain="No" />
					<MvELSE>
						<ImageDimensions constrain="Yes">
							<Width><MvEVAL EXPR = "{ int( l.settings:b_width ) }"></Width>
							<Height><MvEVAL EXPR = "{ int( l.settings:b_height ) }"></Height>
						</ImageDimensions>
					</MvIF>

					<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
						<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.templateversion:source ) }"></Template>
					</MvIF>

					<Mode><MvEVAL EXPR = "{ l.mode }"></Mode>
					<Notes>#Set_Current_Time#</Notes>
				</Item>
			</Page_Update>
		</MvFOREACH>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "SettingsToMode_Convert" PARAMETERS = "settings var, mode var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.settings:mode EQ 'subscription_edit' }">       		<MvASSIGN NAME = "l.mode" VALUE = "subscription_edit">
	<MvELSEIF EXPR = "{ l.settings:mode EQ 'tokens_only_nodisplay' }">		<MvASSIGN NAME = "l.mode" VALUE = "tokens_only_nodisplay">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ModeToSettings_Convert" PARAMETERS = "mode var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.mode EQ 'subscription_edit' }">				<MvASSIGN NAME = "l.settings:mode" VALUE = "subscription_edit">
	<MvELSEIF EXPR = "{ l.mode EQ 'tokens_only_nodisplay' }">		<MvASSIGN NAME = "l.settings:mode" VALUE = "tokens_only_nodisplay">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code" PARAMETERS = "settings var, code var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.settings:mode EQ 'tokens_only_nodisplay' }">
		<MvASSIGN NAME = "l.code" VALUE = "">

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvCAPTURE VARIABLE = "l.code">
<MIVA STANDARDOUTPUTLEVEL = "text, html"><div id="fields-key">
	<div><span class="required">Bold</span> = Required</div>
	<div><span class="italic">Italic</span> = Optional</div>
	<mvt:if expr="( g.UI_Exception EQ 1 ) AND ( g.Session:cache:last_ui_exception EQ 'invalid_subscription_edit' )">
		<div><span class="red">Red</span> = Invalid</div>
	</mvt:if>
</div>

<input type="hidden" name="Subscription_ID" value="&mvte:global:Subscription_ID;" />

<span class="subscription_entry_content_details">
	<span class="subscription_entry_content_details_block">
		<span class="subscription_entry_content_details_editablefields">
			<mvt:if expr="l.settings:subscriptionfields:status NE 'C'">
				<div class="&mvte:global:SubscriptionPaymentCard_Row;">
					<label class="required" for="PaymentCard_ID">Payment Method:</label>
					<select name="PaymentCard_ID">
						<mvt:if expr="l.settings:subscriptionfields:custpc_id EQ 0">
							<mvt:if expr="g.PaymentCard_ID EQ 0">
								<option value="0" selected>
							<mvt:else>
								<option value="0">
							</mvt:if>

								&lt;None&gt;
							</option>
						</mvt:if>

						<mvt:foreach iterator="paymentcard" array="paymentcards:paymentcards">
							<mvt:if expr="l.settings:paymentcard:id EQ g.PaymentCard_ID">
								<option value="&mvte:paymentcard:id;" selected>
							<mvt:else>
								<option value="&mvte:paymentcard:id;">
							</mvt:if>

								&mvte:paymentcard:type; ending in &mvte:paymentcard:lastfour;
							</option>
						</mvt:foreach>
					</select>
				</div>
				<div class="&mvte:global:SubscriptionShipping_Row;">
					<label class="required" for="ShippingMethod">Shipping Method:</label>
					<select name="ShippingMethod">
						<mvt:if expr="l.settings:subscriptionfields:ship_id EQ 0">
							<mvt:if expr="g.ShippingMethod EQ ''">
								<option value="" selected>
							<mvt:else>
								<option value="">
							</mvt:if>

								&lt;None&gt;
							</option>
						</mvt:if>

						<mvt:foreach iterator="shippingmethod" array="subscriptionfields:shippingmethods">
							<mvt:if expr="( l.settings:shippingmethod:module:code $ ':' $ l.settings:shippingmethod:code ) EQ g.ShippingMethod">
								<option value="&mvte:shippingmethod:module:code;:&mvte:shippingmethod:code;" selected>
							<mvt:else>
								<option value="&mvte:shippingmethod:module:code;:&mvte:shippingmethod:code;">
							</mvt:if>

								&mvte:shippingmethod:name; (&mvt:shippingmethod:formatted_price;)
							</option>
						</mvt:foreach>
					</select>
				</div>
				<div class="&mvte:global:SubscriptionAddress_Row;">
					<label class="required" for="Address_ID">Shipping Address:</label>
					<select name="Address_ID">
						<mvt:foreach iterator="address" array="customer:addresses">
							<mvt:if expr="l.settings:address:id EQ g.Address_ID">
								<option value="&mvte:address:id;" selected>
							<mvt:else>
								<option value="&mvte:address:id;">
							</mvt:if>

								&mvte:address:descrip;
							</option>
						</mvt:foreach>
					</select>
				</div>

				<mvt:if expr="l.settings:subscriptionfields:productsubscriptionsettings:enabled AND l.settings:subscriptionfields:productsubscriptionsettings:can_term AND ( ( l.settings:subscriptionfields:productsubscriptionsettings:term_min EQ 0 ) OR ( l.settings:subscriptionfields:termproc GE l.settings:subscriptionfields:productsubscriptionsettings:term_min ) )">
					<div class="&mvte:global:SubscriptionTerm_Row;">
						<label class="required" for="ProductSubscriptionTerm_ID">Subscription Term:</label>
						<select name="ProductSubscriptionTerm_ID">
							<mvt:foreach iterator="productsubscriptointerm" array="subscriptionfields:productsubscriptionterms">
								<mvt:if expr="l.settings:productsubscriptointerm:id EQ g.ProductSubscriptionTerm_ID">
									<option value="&mvte:productsubscriptointerm:id;" selected>
								<mvt:else>
									<option value="&mvte:productsubscriptointerm:id;">
								</mvt:if>

									&mvte:productsubscriptointerm:descrip;
								</option>
							</mvt:foreach>
						</select>
					</div>
				</mvt:if>

				<mvt:if expr="l.settings:subscriptionfields:productsubscriptionsettings:can_date AND ( ( l.settings:subscriptionfields:productsubscriptionsettings:date_min EQ 0 ) OR ( l.settings:subscriptionfields:termproc GE l.settings:subscriptionfields:productsubscriptionsettings:date_min ) )">
					<div class="&mvte:global:SubscriptionNextDate_Row;">
						<label class="required">Next Order Date:</label>
						<input type="hidden" name="NextOrderDate_Year" id="subscriptionfields_nextorderdate_year" value="&mvte:global:NextOrderDate_Year;" />
						<input type="hidden" name="NextOrderDate_Month" id="subscriptionfields_nextorderdate_month" value="&mvte:global:NextOrderDate_Month;" />
						<input type="hidden" name="NextOrderDate_Day" id="subscriptionfields_nextorderdate_day" value="&mvte:global:NextOrderDate_Day;" />
						<span id="subscriptionfields_nextorderdate_display"><mvt:eval expr="padl( g.NextOrderDate_Month, 2, '0' ) $ '/' $ padl( g.NextOrderDate_Day, 2, '0' ) $ '/' $ padl( g.NextOrderDate_Year, 2, '0' )" /></span>
						<mvt:item name="datepicker" />

						<script type="text/javascript">
							var element_subscriptionfields_nextorderdate_display;

							element_subscriptionfields_nextorderdate_display            = document.getElementById( 'subscriptionfields_nextorderdate_display' );
							element_subscriptionfields_nextorderdate_display.onclick    = function()
							{
								var nextdate, miva_datepicker, element_subscriptionfields_nextorderdate_day, element_subscriptionfields_nextorderdate_year, element_subscriptionfields_nextorderdate_month;

								element_subscriptionfields_nextorderdate_year   = document.getElementById( 'subscriptionfields_nextorderdate_year' );
								element_subscriptionfields_nextorderdate_month  = document.getElementById( 'subscriptionfields_nextorderdate_month' );
								element_subscriptionfields_nextorderdate_day    = document.getElementById( 'subscriptionfields_nextorderdate_day' );

								nextdate = new Date( element_subscriptionfields_nextorderdate_year.value, parseInt( element_subscriptionfields_nextorderdate_month.value ) - 1, element_subscriptionfields_nextorderdate_day.value, 0, 0, 0, 0 );
								miva_datepicker = new MivaDatePicker( nextdate.getTime() / 1000 );
								miva_datepicker.SetDateLimit_Past( new Date() );
								miva_datepicker.oncomplete = function( date )
								{
									var day, year, month;

									day     = date.getDate();
									month   = date.getMonth() + 1;
									year    = date.getFullYear();

									element_subscriptionfields_nextorderdate_year.value             = year;
									element_subscriptionfields_nextorderdate_month.value            = month;
									element_subscriptionfields_nextorderdate_day.value              = day;
									element_subscriptionfields_nextorderdate_display.textContent    = ( month < 10 ? '0' : '' ) + month + '/' + ( day < 10 ? '0' : '' ) + day + '/' + year;
								}

								miva_datepicker.Show();
							}
						</script>
					</div>
				</mvt:if>
			</mvt:if>
		</span>
	</span>

	<span class="subscription_entry_content_details_block" style="border-bottom: 1px solid #ccc;"></span>

	<span class="subscription_entry_content_section_left">
		<span class="subscription_entry_content_details_block">
			<span class="subscription_entry_content_details_line_title">Shipping Address</span>
			<span class="subscription_entry_content_details_line">&mvte:subscriptionfields:address:fname; &mvte:subscriptionfields:address:lname;</span>

			<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:addr1">
				<span class="subscription_entry_content_details_line">&mvte:subscriptionfields:address:addr1;</span>
			</mvt:if>

			<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:addr2">
				<span class="subscription_entry_content_details_line">&mvte:subscriptionfields:address:addr2;</span>
			</mvt:if>

			<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:city OR NOT ISNULL l.settings:subscriptionfields:address:state OR NOT ISNULL l.settings:subscriptionfields:address:zip">
				<span class="subscription_entry_content_details_line">
					<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:city">
						&mvte:subscriptionfields:address:city;<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:city AND NOT ISNULL l.settings:subscriptionfields:address:state">,</mvt:if>
					</mvt:if>

					<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:state">
						&mvte:subscriptionfields:address:state;
					</mvt:if>

					<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:zip">
						&mvte:subscriptionfields:address:zip;
					</mvt:if>
				</span>
			</mvt:if>

			<mvt:if expr="NOT ISNULL l.settings:subscriptionfields:address:cntry">
				<span class="subscription_entry_content_details_line">&mvte:subscriptionfields:address:cntry;</span>
			</mvt:if>
		</span>
	</span>

	<span class="subscription_entry_content_section_right">
		<span class="subscription_entry_content_details_line">
			<b>Payment Method:</b>

			<mvt:if expr="l.settings:subscriptionfields:paymentcard:id">
				&mvte:subscriptionfields:paymentcard:type; ending in &mvte:subscriptionfields:paymentcard:lastfour;
			<mvt:else>
				&lt;None&gt;
			</mvt:if>
		</span>
		<span class="subscription_entry_content_details_line">
			<b>First Order Date:</b>

			<mvt:if expr="l.settings:subscriptionfields:firstdate EQ 0">
				N/A
			<mvt:else>
				&mvt:subscriptionfields:formatted_firstdate_date;
			</mvt:if>
		</span>
		<span class="subscription_entry_content_details_line">
			<b>Last Order Date:</b>

			<mvt:if expr="l.settings:subscriptionfields:lastdate EQ 0">
				N/A
			<mvt:else>
				&mvt:subscriptionfields:formatted_lastdate_date;
			</mvt:if>
		</span>

		<mvt:if expr="l.settings:subscriptionfields:status NE 'C'">
			<span class="subscription_entry_content_details_line">
				<b>Next Order Date:</b>

				<mvt:if expr="l.settings:subscriptionfields:nextdate EQ 0">
					N/A
				<mvt:else>
					&mvt:subscriptionfields:formatted_nextdate_date;
				</mvt:if>
			</span>
		</mvt:if>

		<mvt:if expr="l.settings:subscriptionfields:status EQ 'C'">
			<span class="subscription_entry_content_details_line">
				<b>Cancellation Date:</b>

				<mvt:if expr="l.settings:subscriptionfields:cncldate EQ 0">
					N/A
				<mvt:else>
					&mvt:subscriptionfields:formatted_cncldate_date;
				</mvt:if>
			</span>
		</mvt:if>

		<mvt:if expr="l.settings:subscriptionfields:productsubscriptionterm:term GT 0">
			<span class="subscription_entry_content_details_line"><b>Remaining Orders:</b> &mvte:subscriptionfields:termrem;</span>
		</mvt:if>

		<span class="subscription_entry_content_details_line"><b>Processed Orders:</b> &mvte:subscriptionfields:termproc;</span>
	</span>

	<div class="clear"></div>
</span>

<span class="subscription_entry_content_items">
	<table>
		<tr class="heading">
			<td class="item-name">Item</td>
			<td class="item-quantity">Qty.</td>
			<td class="item-price">Item Price</td>
			<td class="item-total">Total Price</td>
		</tr>

		<mvt:foreach iterator="item" array="subscriptionfields:items">
			<mvt:if expr="l.settings:item:option_count">
				<mvt:assign name="l.settings:rowspan" value="l.settings:item:option_count + 1" />
			<mvt:else>
				<mvt:assign name="l.settings:rowspan" value="1" />
			</mvt:if>

			<tr class="row_start">
				<td class="item-name">
					&mvt:item:name; -
					<a href="&mvte:item:link;">&mvt:item:code;</a>
					<mvt:foreach iterator="discount" array="item:discounts">
						<mvt:if expr="l.settings:discount:display">
							<div class="item-discount">&mvt:discount:descrip;: &mvt:discount:formatted_discount;</div>
						</mvt:if>
					</mvt:foreach>
				</td>

				<mvt:if expr="g.SubscriptionQuantity_Invalid">
					<td class="item-quantity invalid" rowspan="&mvt:rowspan;">
				<mvt:else>
					<td class="item-quantity" rowspan="&mvt:rowspan;">
				</mvt:if>
					<mvt:if expr="l.settings:subscriptionfields:productsubscriptionsettings:enabled AND ( l.settings:subscriptionfields:status NE 'C' ) AND l.settings:subscriptionfields:productsubscriptionsettings:can_qty AND ( ( l.settings:subscriptionfields:productsubscriptionsettings:qty_min EQ 0 ) OR ( l.settings:subscriptionfields:termproc GE l.settings:subscriptionfields:productsubscriptionsettings:qty_min ) )">
						<input type="text" name="Quantity" class="textfield qty-input small" value="&mvte:global:Quantity;" />
					<mvt:else>
						&mvte:subscriptionfields:quantity;
					</mvt:if>
				</td>
				<td class="item-price">
					&mvt:item:formatted_base_price;
				</td>
				<td class="item-total">
					&mvt:item:formatted_subtotal_base_price;
				</td>
			</tr>

			<mvt:foreach iterator="option" array="item:options">
				<tr class="option_row">
					<td class="item-name">
						<div class="item-option">
							<mvt:if expr="l.settings:option:option_id">
								&mvt:option:attr_code;: &mvt:option:opt_code;
							<mvt:elseif expr="NOT ISNULL l.settings:option:data">
								&mvt:option:attr_code;: &mvt:option:data;
							<mvt:elseif expr="NOT ISNULL l.settings:option:data_long">
								&mvt:option:attr_code;: &mvt:option:data_long;
							<mvt:else>
								&mvt:option:attr_code;
							</mvt:if>
						</div>
						<mvt:foreach iterator="discount" array="option:discounts">
							<mvt:if expr="l.settings:discount:display">
								<div class="option-discount">&mvt:discount:descrip;: &mvt:discount:formatted_discount;</div>
							</mvt:if>
						</mvt:foreach>
					</td>
					<td class="item-price">
						<mvt:if expr="l.settings:option:base_price">
							&mvt:option:formatted_base_price;
						<mvt:else>
							&nbsp;
						</mvt:if>
					</td>
					<td class="item-total">
						<mvt:if expr="l.settings:option:subtotal_base_price">
							&mvt:option:formatted_subtotal_base_price;
						<mvt:else>
							&nbsp;
						</mvt:if>
					</td>
				</tr>
			</mvt:foreach>
		</mvt:foreach>

		<mvt:foreach iterator="charge" array="subscriptionfields:charges">
			<tr class="row_start">
				<td colspan="3" class="charge-description">&mvt:charge:descrip;:</td>
				<td class="formatted-charge">&mvt:charge:formatted_disp_amt;</td>
			</tr>
		</mvt:foreach>

		<tr class="row_start">
			<td colspan="3" class="total-prompt">Estimated Order Total:</td>
			<td class="formatted-total">&mvt:subscriptionfields:formatted_display_total;</td>
		</tr>
	</table>
</span><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'SubscriptionShippingMethodList_Load' }"> <MvFUNCTIONRETURN VALUE = "{ JSON_SubscriptionShippingMethodList_Load() }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionShippingMethodList_Load" PARAMETERS = "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT g.Customer_Session_Verified }">			<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.subscription_id"				VALUE = 0>
	<MvASSIGN NAME = "l.paymentcard_id"					VALUE = 0>
	<MvASSIGN NAME = "l.productsubscriptionterm_id"		VALUE = 0>
	<MvASSIGN NAME = "l.address_id"						VALUE = 0>
	<MvASSIGN NAME = "l.quantity"						VALUE = 0>

	<MvIF EXPR = "{	NOT [ g.Module_JSON ].JSON_Input_Integer(	'R', 'Subscription_ID',				l.subscription_id )				OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O', 'PaymentCard_ID',				l.paymentcard_id )				OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'R', 'ProductSubscriptionTerm_ID',	l.productsubscriptionterm_id )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'R', 'Address_ID',					l.address_id )					OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'R', 'Quantity',					l.quantity ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( l.subscription_id, l.subscription ) OR
					l.subscription:cust_id NE g.Basket:cust_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-CSUBF-00008', 'Unable to load subscription.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.subscription:product_id, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-CSUBF-00015', 'Unable to load subscription product.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID( l.productsubscriptionterm_id, l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-CSUBF-00009', 'Unable to load subscription term.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( l.address_id, l.address ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-CSUBF-00010', 'Unable to load subscription address.' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.address:cust_id NE g.Basket:cust_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-CSUBF-00014', 'Unable to verify customer address' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.paymentcard_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID_Cached( l.paymentcard_id, g.Basket:cust_id, l.paymentcard ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-CSUBF-00011', 'Unable to load subscription payment card.' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( g.Basket:cust_id, l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CSSUI-CMP-CSUBF-00012', 'Unable to load customer.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.option_count"					VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription:id, l.options ) }">
	<MvASSIGN NAME = "l.attribute_count"				VALUE = "{ [ g.Module_Feature_SUB_UT ].SubscriptionOptions_BuildAttributes( l.options, l.option_count, l.attributes ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.product, 0, l.attributes, l.attribute_count, l.basketoptions, l.basketoption_count, l.variant_id ) OR
					l.variant_id EQ -1 }">
		<MvASSIGN NAME = "l.variant_id"					VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:currncy_id, g.Store_Module_Currency )	OR
					NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:tax_id, g.Store_Module_Tax )			OR
					NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:ui_id, g.Store_Module_UI ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI:module }">

	<MvASSIGN NAME = "l.original_basket"				VALUE = "{ g.Basket }">
	<MvASSIGN NAME = "g.Basket"							VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].Subscription_CreateBasket_LowLevel( l.customer, l.address, l.paymentcard, l.product, l.basketoptions, l.basketoption_count, l.variant_id, l.attr_price_override, l.subscription:id, l.productsubscriptionterm:id, l.quantity, g.Basket ) }">
		<MvASSIGN NAME = "g.Basket"						VALUE = "{ l.original_basket }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Basket( g.Basket ) }">
		<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Module_Feature_SUB_UT ].Subscription_Basket_Reset( g.Basket ) }">
		<MvASSIGN NAME = "g.Basket"						VALUE = "{ l.original_basket }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.method_count"					VALUE = "{ [ g.Module_Feature_SHP_UT ].ShippingMethodList_Load_Basket( l.methods ) }">
	<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Module_Library_DB ].Basket_Reset( g.Basket ) }">
	<MvASSIGN NAME = "g.Basket"							VALUE = "{ l.original_basket }">

	<MvASSIGN NAME = "g.Store_Module_Currency"			VALUE = "{ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Store_Module_Tax"				VALUE = "{ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Store_Module_UI"				VALUE = "{ g.Store_Module_UI:module }">

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

	<MvASSIGN NAME = "l.output_count"					VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.method_count ) }">,
		"data":
		[
			<MvFOREACH ITERATOR = "l.method" ARRAY = "l.methods" COUNT = "{ l.method_count }">
				<MvASSIGN NAME = "l.method:formatted_price" VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.method:price ) }">

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
					"code":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:code ) }">",
					"formatted_price":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:formatted_price ) }">",
					"name":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:name ) }">",
					"price":				<MvEVAL EXPR = "{ l.method:price ROUND 2 }">,
					"mod_code":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:module:code ) }">"
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

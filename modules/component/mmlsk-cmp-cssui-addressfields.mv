<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CMP-ADDR-FLDS-
| Next Error Code: 8
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-cmp-cssui-addressfields">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Customer Address Fields">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0800">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.08">
	<MvASSIGN NAME = "l.module:features"	VALUE = "component, component_prov, not_fields, skins">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Customer Address Fields' }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.fields:mode"							VALUE = "{ trim( l.fields:mode ) }">
	<MvASSIGN NAME = "l.fields:prevent_template_auto_update"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:prevent_template_auto_update ) }">

	<MvEVAL EXPR = "{ ModeToSettings_Convert( l.fields:mode, l.mode_settings ) }">

	<MvIF EXPR = "{ l.mode_settings:mode EQ l.settings:mode }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ ModeToSettings_Convert( l.fields:mode, l.mode_settings ) }">

	<MvASSIGN NAME = "l.settings:prevent_template_auto_update" VALUE = "{ l.fields:prevent_template_auto_update }">

	<MvIF EXPR = "{ l.mode_settings:mode NE l.settings:mode }">
		<MvASSIGN NAME = "l.settings:mode" VALUE = "{ l.mode_settings:mode }">

		<MvEVAL EXPR = "{ Generate_Code( l.settings, l.fields:template_code ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.fields:template_code, l.settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields:template_code"					VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"				VALUE = "{ l.settings:template_filename }">
		<MvASSIGN NAME = "l.fields:prevent_template_auto_update"	VALUE = "{ l.settings:prevent_template_auto_update }">

		<MvEVAL EXPR = "{ SettingsToMode_Convert( l.settings, l.fields:mode ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">

		<MvIF EXPR = "{ l.fields:mode EQ 'tokens_only_nodisplay' }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_code' ) }">
		<MvELSE>
			<tr><td colspan="2" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 100, l.templateversion:templ_id ) }">
			</td></tr>

			<tr><td colspan="2">&nbsp;</td></tr>
		</MvIF>

		<tr><td>
			&nbsp;
		</td><td>
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:prevent_template_auto_update, l.field_prefix $ 'prevent_template_auto_update', 'Yes', 'Prevent Automatic Updates to This Template' ) }">
		</td></tr>

		<tr><td>
			Mode:
		</td><td>
			<select name="{ encodeentities( l.field_prefix ) $ 'mode' }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'customeraddress_add',		l.fields:mode, 'Customer Address: Add' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'customeraddress_edit',	l.fields:mode, 'Customer Address: Edit' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'tokens_only_nodisplay',	l.fields:mode, 'Tokens Only - No Display' ) }">
			</select>
		</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, '' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:mode" VALUE = "customeraddress_add">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ Generate_Code( l.settings, l.template_source ) }">

	<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-' $ tolower( l.item ) $ '.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.template_source, l.settings, l.settings:template_filename ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'states' ) OR
					NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'countries' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.settings:template_filename ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Branch_Head( l.source_branch:id, l.source_settings:template_filename, l.source_templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Branch_Filename( l.dest_branch:id, l.dest_settings:template_filename, l.dest_managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.dest_settings"						VALUE = "{ l.source_settings }">
	<MvASSIGN NAME = "l.dest_settings:template_filename"	VALUE = "{ l.dest_managedtemplate:version:settings:template_filename }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.dest_managedtemplate, '', l.source_templateversion:source, l.dest_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.source_branch:id EQ l.dest_branch:id }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-ADDR-FLDS-00006', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' on branch \'' $ l.dest_branch:name $ '\'' ) }">
	<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-ADDR-FLDS-00007', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' from branch \'' $ l.source_branch:name $ '\' to branch \'' $ l.dest_branch:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StandardFields_Load_Cached( l.std_fields ) }">
		<MvASSIGN NAME = "l.std_fields:primaddr"		VALUE = "shipping">
		<MvASSIGN NAME = "l.std_fields:shipping"		VALUE = "D">
		<MvASSIGN NAME = "l.std_fields:billing"			VALUE = "O">
	</MvIF>

	<MvASSIGN NAME = "l.settings:validated_addresses"	VALUE = "">

	<MvIF EXPR = "{ g.UI_Exception AND ( ( g.Session:cache:last_ui_exception EQ 'customeraddress_validate_addinfo' ) OR ( g.Session:cache:last_ui_exception EQ 'customeraddress_validate_editinfo' ) ) }">
		<MvFOREACH ITERATOR = "l.validated_address" 	ARRAY = "g.Validated_Addresses">
			<MvASSIGN NAME = "l.address"				VALUE = "{ l.validated_address }">
			<MvASSIGN NAME = "l.address:validated"		VALUE = 1>

			<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_insert( l.settings:validated_addresses, l.address, -1 ) }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.search"						VALUE = "">
		<MvASSIGN NAME = "l.search_count"				VALUE = 0>

		<MvIF EXPR = "{ l.std_fields:mode_comp NE 'H' }">	<MvASSIGN NAME = "l.search_count" VALUE = "{ miva_array_insert( l.search, '( strcasecmp( l.search_address:comp,		g.Address_Company )		EQ 0 )', -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.std_fields:mode_addr NE 'H' }">	<MvASSIGN NAME = "l.search_count" VALUE = "{ miva_array_insert( l.search, '( strcasecmp( l.search_address:addr1,	g.Address_Address1 )	EQ 0 )', -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.std_fields:mode_addr2 NE 'H' }">	<MvASSIGN NAME = "l.search_count" VALUE = "{ miva_array_insert( l.search, '( strcasecmp( l.search_address:addr2,	g.Address_Address2 )	EQ 0 )', -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.std_fields:mode_city NE 'H' }">	<MvASSIGN NAME = "l.search_count" VALUE = "{ miva_array_insert( l.search, '( strcasecmp( l.search_address:city,		g.Address_City )		EQ 0 )', -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.std_fields:mode_state NE 'H' }">	<MvASSIGN NAME = "l.search_count" VALUE = "{ miva_array_insert( l.search, '( strcasecmp( l.search_address:state,	g.Address_State )		EQ 0 )', -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.std_fields:mode_zip NE 'H' }">	<MvASSIGN NAME = "l.search_count" VALUE = "{ miva_array_insert( l.search, '( strcasecmp( l.search_address:zip,		g.Address_Zip )			EQ 0 )', -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.std_fields:mode_cntry NE 'H' }">	<MvASSIGN NAME = "l.search_count" VALUE = "{ miva_array_insert( l.search, '( strcasecmp( l.search_address:country,	g.Address_Country )		EQ 0 )', -1 ) }"> </MvIF>

		<MvIF EXPR = "{ NOT miva_array_search( l.settings:validated_addresses, 1, l.search_address, miva_joinstring( l.search, ' AND ', 'trim' ) ) }">
			<MvASSIGN NAME = "l.address:validated"		VALUE = 0>
			<MvASSIGN NAME = "l.address:addr1"			VALUE = "{ g.Address_Address1 }">
			<MvASSIGN NAME = "l.address:addr2"			VALUE = "{ g.Address_Address2 }">
			<MvASSIGN NAME = "l.address:city"			VALUE = "{ g.Address_City }">
			<MvASSIGN NAME = "l.address:state"			VALUE = "{ g.Address_State }">
			<MvASSIGN NAME = "l.address:zip"			VALUE = "{ g.Address_Zip }">
			<MvASSIGN NAME = "l.address:country"		VALUE = "{ g.Address_Country }">
			<MvASSIGN NAME = "l.address:comp"			VALUE = "{ g.Address_Company }">
			<MvASSIGN NAME = "l.address:resdntl"		VALUE = "{ g.Address_Residential }">

			<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_insert( l.settings:validated_addresses, l.address, 1 ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.settings:mode EQ 'customeraddress_edit' OR l.settings:mode EQ 'tokens_only_nodisplay' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( g.Address_ID, l.customeraddress ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'customer_invalid_address' ) }">
		<MvELSEIF EXPR = "{ ( ( l.settings:mode EQ 'tokens_only_nodisplay' ) AND ( ( l.customeraddress:cust_id NE g.Basket:cust_id ) OR ( NOT g.Customer_Session_Verified ) ) ) OR
							( ( l.settings:mode EQ 'customeraddress_edit' ) AND ( ( l.customeraddress:cust_id NE g.Basket:cust_id ) OR ( NOT g.Customer_Session_Verified ) ) ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'customer_invalid_address' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.settings:id"				VALUE = "{ l.customeraddress:id }">
		<MvASSIGN NAME = "l.settings:descrip"			VALUE = "{ l.customeraddress:descrip }">
		<MvASSIGN NAME = "l.settings:cust_id"			VALUE = "{ l.customeraddress:cust_id }">
		<MvASSIGN NAME = "l.settings:fname"				VALUE = "{ l.customeraddress:fname }">
		<MvASSIGN NAME = "l.settings:lname"				VALUE = "{ l.customeraddress:lname }">
		<MvASSIGN NAME = "l.settings:email"				VALUE = "{ l.customeraddress:email }">
		<MvASSIGN NAME = "l.settings:comp"				VALUE = "{ l.customeraddress:comp }">
		<MvASSIGN NAME = "l.settings:phone"				VALUE = "{ l.customeraddress:phone }">
		<MvASSIGN NAME = "l.settings:fax"				VALUE = "{ l.customeraddress:fax }">
		<MvASSIGN NAME = "l.settings:addr"				VALUE = "{ l.customeraddress:addr }">
		<MvASSIGN NAME = "l.settings:addr1"				VALUE = "{ l.customeraddress:addr1 }">
		<MvASSIGN NAME = "l.settings:addr2"				VALUE = "{ l.customeraddress:addr2 }">
		<MvASSIGN NAME = "l.settings:city"				VALUE = "{ l.customeraddress:city }">
		<MvASSIGN NAME = "l.settings:state"				VALUE = "{ l.customeraddress:state }">
		<MvASSIGN NAME = "l.settings:zip"				VALUE = "{ l.customeraddress:zip }">
		<MvASSIGN NAME = "l.settings:cntry"				VALUE = "{ l.customeraddress:cntry }">
		<MvASSIGN NAME = "l.settings:resdntl"			VALUE = "{ l.customeraddress:resdntl }">
	<MvELSE>
		<MvASSIGN NAME = "l.settings:id"				VALUE = 0>
		<MvASSIGN NAME = "l.settings:descrip"			VALUE = "">
		<MvASSIGN NAME = "l.settings:cust_id"			VALUE = "{ g.Customer:id }">
		<MvASSIGN NAME = "l.settings:resdntl" 			VALUE = "{ l.std_fields:ship_res EQ 'R' }">
		<MvASSIGN NAME = "l.settings:fname"				VALUE = "">
		<MvASSIGN NAME = "l.settings:lname"				VALUE = "">
		<MvASSIGN NAME = "l.settings:email"				VALUE = "">
		<MvASSIGN NAME = "l.settings:comp"				VALUE = "">
		<MvASSIGN NAME = "l.settings:phone"				VALUE = "">
		<MvASSIGN NAME = "l.settings:fax"				VALUE = "">
		<MvASSIGN NAME = "l.settings:addr"				VALUE = "">
		<MvASSIGN NAME = "l.settings:addr1"				VALUE = "">
		<MvASSIGN NAME = "l.settings:addr2"				VALUE = "">
		<MvASSIGN NAME = "l.settings:city"				VALUE = "">
		<MvASSIGN NAME = "l.settings:state"				VALUE = "">
		<MvASSIGN NAME = "l.settings:zip"				VALUE = "">
		<MvASSIGN NAME = "l.settings:cntry"				VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.settings:primaddr" 				VALUE = "{ l.std_fields:primaddr }">

	<MvIF EXPR = "{ l.settings:mode EQ 'tokens_only_nodisplay' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ( NOT g.Error_Message_Count ) AND ( g.Basket:cust_id EQ l.settings:cust_id ) AND g.Customer_Session_Verified }">
		<MvASSIGN NAME = "g.Address_ID"					VALUE = "{ l.settings:id }">
		<MvASSIGN NAME = "g.Address_Description"		VALUE = "{ l.settings:descrip }">
		<MvASSIGN NAME = "g.Address_FirstName"			VALUE = "{ l.settings:fname }">
		<MvASSIGN NAME = "g.Address_LastName"			VALUE = "{ l.settings:lname }">
		<MvASSIGN NAME = "g.Address_Email"				VALUE = "{ l.settings:email }">
		<MvASSIGN NAME = "g.Address_Company"			VALUE = "{ l.settings:comp }">
		<MvASSIGN NAME = "g.Address_Phone"				VALUE = "{ l.settings:phone }">
		<MvASSIGN NAME = "g.Address_Fax"				VALUE = "{ l.settings:fax }">
		<MvASSIGN NAME = "g.Address_Address"			VALUE = "{ l.settings:addr }">
		<MvASSIGN NAME = "g.Address_Address1"			VALUE = "{ l.settings:addr1 }">
		<MvASSIGN NAME = "g.Address_Address2"			VALUE = "{ l.settings:addr2 }">
		<MvASSIGN NAME = "g.Address_City"				VALUE = "{ l.settings:city }">
		<MvASSIGN NAME = "g.Address_State"				VALUE = "{ l.settings:state }">
		<MvASSIGN NAME = "g.Address_Zip"				VALUE = "{ l.settings:zip }">
		<MvASSIGN NAME = "g.Address_Country"			VALUE = "{ l.settings:cntry }">
		<MvASSIGN NAME = "g.Address_Residential"		VALUE = "{ l.settings:resdntl }">
		<MvASSIGN NAME = "g.Address_Default_Shipping"	VALUE = "{ g.Customer:ship_id EQ l.customeraddress:id }">
		<MvASSIGN NAME = "g.Address_Default_Billing"	VALUE = "{ g.Customer:bill_id EQ l.customeraddress:id }">
	<MvELSEIF EXPR = "{ NOT g.Error_Message_Count }">
		<MvIF EXPR = "{ ISNULL g.Address_Country }">
			<MvASSIGN NAME = "g.Address_Country"		VALUE = "{ g.Store:country }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT g.Error_Message_Count AND NOT g.Basket:cust_id }">
		<MvASSIGN NAME = "g.Address_Residential"		VALUE = "{ l.std_fields:ship_res EQ 'R' }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Address_State }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].State_Load_Code( g.Address_State, l.state ) }">
			<MvASSIGN NAME = "g.Address_StateSelect"	VALUE = "{ l.state:code }">
			<MvASSIGN NAME = "g.Address_State"			VALUE = "">
		<MvELSE>
			<MvASSIGN NAME = "g.Address_StateSelect"	VALUE = "">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "g.State_Count" 					VALUE = "{ [ g.Module_Library_DB ].State_Count() }">

	<MvIF EXPR = "{ g.Address_Description_Invalid }">
		<MvASSIGN NAME = "g.Address_Description_Row" 	VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Description_Row" 	VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_FirstName_Invalid }">
		<MvASSIGN NAME = "g.Address_FirstName_Row" 		VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_FirstName_Row" 		VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_LastName_Invalid }">
		<MvASSIGN NAME = "g.Address_LastName_Row" 		VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_LastName_Row" 		VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Email_Invalid }">
		<MvASSIGN NAME = "g.Address_Email_Row" 			VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Email_Row" 			VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Phone_Invalid }">
		<MvASSIGN NAME = "g.Address_Phone_Row" 			VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Phone_Row" 			VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Fax_Invalid }">
		<MvASSIGN NAME = "g.Address_Fax_Row" 			VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Fax_Row" 			VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Company_Invalid }">
		<MvASSIGN NAME = "g.Address_Company_Row" 		VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Company_Row" 		VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Address1_Invalid }">
		<MvASSIGN NAME = "g.Address_Address1_Row" 		VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Address1_Row" 		VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Address2_Invalid }">
		<MvASSIGN NAME = "g.Address_Address2_Row" 		VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Address2_Row" 		VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_City_Invalid }">
		<MvASSIGN NAME = "g.Address_City_Row" 			VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_City_Row" 			VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_State_Invalid }">
		<MvASSIGN NAME = "g.Address_State_Row" 			VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_State_Row" 			VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Zip_Invalid }">
		<MvASSIGN NAME = "g.Address_Zip_Row" 			VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Zip_Row" 			VALUE = "form_row">
	</MvIF>

	<MvIF EXPR = "{ g.Address_Country_Invalid }">
		<MvASSIGN NAME = "g.Address_Country_Row" 		VALUE = "form_row invalid">
	<MvELSE>
		<MvASSIGN NAME = "g.Address_Country_Row" 		VALUE = "form_row">
	</MvIF>

	<MvASSIGN NAME = "g.Address_Residential_Row" 		VALUE = "form_row">
	<MvASSIGN NAME = "g.Address_Default_Shipping_Row" 	VALUE = "form_row">
	<MvASSIGN NAME = "g.Address_Default_Billing_Row" 	VALUE = "form_row">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside_Deferred( l.all_settings, 'runtime_ui.js' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( l.settings:template_filename, l.all_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Code" PARAMETERS = "settings var, code var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StandardFields_Load( l.fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCAPTURE VARIABLE = "l.code">
		<MvIF EXPR = "{ l.settings:mode EQ 'tokens_only_nodisplay' }">
			<MvCOMMENT> Empty Template </MvCOMMENT>
		<MvELSE>
<MIVA STANDARDOUTPUTLEVEL = "text, html"><div id="fields-key">
	<div><span class="required">Bold</span> = Required</div>
	<div><span class="italic">Italic</span> = Optional</div>
	<mvt:if expr="g.Error_Message_Count">
	<div><span class="red">Red</span> = Invalid</div>
	</mvt:if>
</div>
<MIVA STANDARDOUTPUTLEVEL = "">

		<MvIF EXPR = "{ l.settings:mode EQ 'customeraddress_edit' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
<input type="hidden" name="Address_ID" value="&mvte:global:Address_ID;" />
<MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

<MIVA STANDARDOUTPUTLEVEL = "text, html">
<div id="customer-fields" class="editable">
	<h2 class="fields-heading">Address</h2>
	<mvt:if expr="NOT ISNULL l.settings:addressfields:validated_addresses">
		<div>
			<div class="validated-address-container"><MIVA STANDARDOUTPUTLEVEL = "">
				<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">	<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_addr1="&mvte:global:Address_Address1;"',			-1 ) }"> </MvIF>
				<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">	<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_addr2="&mvte:global:Address_Address2;"',			-1 ) }"> </MvIF>
				<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">	<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_city="&mvte:global:Address_City;"',					-1 ) }"> </MvIF>
				<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">	<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_state="&mvte:global:Address_State;"',				-1 ) }">
																<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_stateselect="&mvte:global:Address_StateSelect;"',	-1 ) }"> </MvIF>
				<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">	<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_zip="&mvte:global:Address_Zip;"',					-1 ) }"> </MvIF>
				<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }">	<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_country="&mvte:global:Address_Country;"',			-1 ) }"> </MvIF>
				<MvIF EXPR = "{ l.fields:mode_res NE 'H' }">	<MvASSIGN NAME = "l.data_mm_address_attributes_count" VALUE = "{ miva_array_insert( l.data_mm_address_attributes, ' data-mm_address_resdntl="&mvte:global:Address_Residential;"',		-1 ) }"> </MvIF>

				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				<MvEVAL EXPR = "{ '<input type="radio" name="Validated_Address" class="validated-address-radio"' $ miva_joinstring( l.data_mm_address_attributes, '', '' ) $ ' data-mm_address_edit_new >' }">
				<span class="validated-address"><b>Re-Enter / Modify Address</b></span>
			</div>

			<mvt:foreach iterator="address" array="addressfields:validated_addresses">
				<div class="validated-address-container">
					<input type="radio" name="Validated_Address" class="validated-address-radio" data-mm_address_addr1="&mvte:address:addr1;"
														     data-mm_address_addr2="&mvte:address:addr2;"
														     data-mm_address_city="&mvte:address:city;"
														     data-mm_address_state="&mvte:address:state;"
														     data-mm_address_zip="&mvte:address:zip;"
														     data-mm_address_country="&mvte:address:country;"
														     data-mm_address_comp="&mvte:address:comp;"
														     data-mm_address_resdntl="&mvte:address:resdntl;" />
					<div class="validated-address">
						<mvt:if expr="l.settings:address:validated">
							<b>Validated Address</b><br />
						<mvt:else>
							<b>Use As Entered</b><br />
						</mvt:if>
						<mvt:if expr="NOT ISNULL l.settings:address:comp"><b>&mvte:address:comp;</b><br></mvt:if>
						<mvt:if expr="NOT ISNULL l.settings:address:addr1">&mvte:address:addr1;<br></mvt:if>
						<mvt:if expr="NOT ISNULL l.settings:address:addr2">&mvte:address:addr2;<br></mvt:if>
						<mvt:if expr="NOT ISNULL l.settings:address:city">&mvte:address:city;</mvt:if><mvt:if expr="( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:state ) OR ( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:zip )">, </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state">&mvte:address:state;</mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state AND NOT ISNULL l.settings:address:zip"> </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:zip">&mvte:address:zip;<br></mvt:if>
						<mvt:if expr="NOT ISNULL l.settings:address:country">&mvte:address:country;<br></mvt:if>
						<mvt:if expr="l.settings:address:resdntl">
							<br />
							Residential Address
						</mvt:if>
					</div>
				</div>
			</mvt:foreach>
		</div>
		<input type="hidden" name="Address_Validated" value="1" />

		<script type="text/javascript">
			function Validated_Address_Picker()
			{
				var self = this;
				var i, forms;

				forms = document.getElementsByTagName( 'form' );

				for ( i = 0; i < forms.length; i++ )
				{<MIVA STANDARDOUTPUTLEVEL = "">
				<MvIF EXPR = "{ l.settings:mode EQ 'customeraddress_add' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
					if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'ICSA' ) )
					{
						this.element_form = forms[ i ];
						break;
					}<MIVA STANDARDOUTPUTLEVEL = "">
				<MvELSE><MvCOMMENT>l.settings:mode EQ 'customeraddress_edit'</MvCOMMENT><MIVA STANDARDOUTPUTLEVEL = "text, html">
					if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'UCSA' ) )
					{
						this.element_form = forms[ i ];
						break;
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">
				}

				if ( !this.element_form ) return;
<MIVA STANDARDOUTPUTLEVEL = "">

			<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_addr1              = this.element_form.elements[ 'Address_Address1' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_addr2              = this.element_form.elements[ 'Address_Address2' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_city               = this.element_form.elements[ 'Address_City' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_state              = this.element_form.elements[ 'Address_State' ];
				this.element_stateselect        = this.element_form.elements[ 'Address_StateSelect' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_zip                = this.element_form.elements[ 'Address_Zip' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_country            = this.element_form.elements[ 'Address_Country' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:ship_res NE 'A' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_resdntl            = this.element_form.elements[ 'Address_Residential' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_comp               = this.element_form.elements[ 'Address_Company' ];<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">
				this.element_address_validated  = this.element_form.elements[ 'Address_Validated' ];
				this.element_validated_selector = this.element_form.elements[ 'Validated_Address' ];

				if ( this.element_validated_selector )
				{
					if ( this.element_validated_selector.length === 1 )
					{
						this.element_validated_selector[ 0 ].checked = true;
					}
					else if ( this.element_validated_selector.length > 1 )
					{
						this.element_validated_selector[ 1 ].checked = true;
						this.Disable_Address_Form_Fields( true );
					}
				}

				AddEvent( this.element_form, 'submit', function( event ) { self.Form_OnSubmit( event ? event : window.event ); } );

				for ( i = 0; i < self.element_validated_selector.length; i++ )
				{
					AddEvent( self.element_validated_selector[ i ], 'change', function( event )
					{
						this.hasAttribute( 'data-mm_address_edit_new' ) ? self.Disable_Address_Form_Fields( false ) : self.Disable_Address_Form_Fields( true );
					} );
				}
			};

			Validated_Address_Picker.prototype.Disable_Address_Form_Fields = function( disabled )
			{<MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( this.element_addr1 )        this.element_addr1.disabled        = disabled;<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( this.element_addr2 )        this.element_addr2.disabled        = disabled;<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( this.element_city )         this.element_city.disabled         = disabled;<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( this.element_state )        this.element_state.disabled        = disabled;
				if ( this.element_stateselect )  this.element_stateselect.disabled  = disabled;<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( this.element_zip )          this.element_zip.disabled          = disabled;<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( this.element_country )      this.element_country.disabled      = disabled;<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.fields:ship_res NE 'A' }">
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				if ( this.element_resdntl )      this.element_resdntl.disabled      = disabled;<MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">
			}

			Validated_Address_Picker.prototype.Form_OnSubmit = function( e )
			{
				var i, i_len, selected_radio, address_edit_new;

				for ( i = 0; i < this.element_validated_selector.length; i++ )
				{
					if ( this.element_validated_selector[ i ].checked )
					{
						selected_radio = this.element_validated_selector[ i ];
						break;
					}
				}

				if ( !selected_radio )
				{
					this.onError( 'Please select a validated address.' );
					return eventPreventDefault( e );
				}

				address_edit_new = selected_radio.hasAttribute( 'data-mm_address_edit_new' );

				if ( !address_edit_new )
				{<MIVA STANDARDOUTPUTLEVEL = "">
				<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
					<MIVA STANDARDOUTPUTLEVEL = "text, html">
					if ( this.element_addr1 )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_addr1' ) && typeof selected_radio.getAttribute( 'data-mm_address_addr1' ) === 'string' )
						{
							this.element_addr1.value = selected_radio.getAttribute( 'data-mm_address_addr1' );
						}
						else
						{
							this.element_addr1.value = '';
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>

				<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

					if ( this.element_addr2 )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_addr2' ) && typeof selected_radio.getAttribute( 'data-mm_address_addr2' ) === 'string' )
						{
							this.element_addr2.value = selected_radio.getAttribute( 'data-mm_address_addr2' );
						}
						else
						{
							this.element_addr2.value = '';
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>

				<MvIF EXPR = "{ l.fields:mode_city NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

					if ( this.element_city )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_city' ) && typeof selected_radio.getAttribute( 'data-mm_address_city' ) === 'string' )
						{
							this.element_city.value = selected_radio.getAttribute( 'data-mm_address_city' );
						}
						else
						{
							this.element_city.value = '';
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>

				<MvIF EXPR = "{ l.fields:mode_state NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

					if ( this.element_state || this.element_stateselect )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_state' ) && typeof selected_radio.getAttribute( 'data-mm_address_state' ) === 'string' )
						{
							if ( !this.element_stateselect )
							{
								this.element_state.value = selected_radio.getAttribute( 'data-mm_address_state' );
							}
							else if ( !( this.element_stateselect instanceof HTMLSelectElement ) )
							{
								if ( this.element_state )
								{
									this.element_state.value = '';
								}

								this.element_stateselect.value = selected_radio.getAttribute( 'data-mm_address_state' );
							}
							else
							{
								for ( i = 0, i_len = this.element_stateselect.options.length; i < i_len; i++ )
								{
									if ( this.element_stateselect.options[ i ].value == selected_radio.getAttribute( 'data-mm_address_state' ) )
									{
										if ( this.element_state )
										{
											this.element_state.value = '';
										}

										this.element_stateselect.selectedIndex = i;

										break;
									}
								}

								if ( i === i_len )
								{
									this.element_stateselect.selectedIndex = 0;

									if ( this.element_state )
									{
										this.element_state.value = selected_radio.getAttribute( 'data-mm_address_state' );
									}
								}
							}
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>

				<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

					if ( this.element_zip )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_zip' ) && typeof selected_radio.getAttribute( 'data-mm_address_zip' ) === 'string' )
						{
							this.element_zip.value = selected_radio.getAttribute( 'data-mm_address_zip' );
						}
						else
						{
							this.element_zip.value = '';
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>

				<MvIF EXPR = "{ l.fields:mode_cntry NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

					if ( this.element_country )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_country' ) && typeof selected_radio.getAttribute( 'data-mm_address_country' ) === 'string' )
						{
							this.element_country.value = selected_radio.getAttribute( 'data-mm_address_country' );
						}
						else
						{
							this.element_country.value = '';
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>

				<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

					if ( this.element_comp )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_comp' ) && typeof selected_radio.getAttribute( 'data-mm_address_comp' ) === 'string' )
						{
							this.element_comp.value = selected_radio.getAttribute( 'data-mm_address_comp' );
						}
						else
						{
							this.element_comp.value = '';
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>

				<MvIF EXPR = "{ l.fields:ship_res NE 'A' }"><MIVA STANDARDOUTPUTLEVEL = "text, html">

					if ( this.element_resdntl )
					{
						if ( selected_radio.hasAttribute( 'data-mm_address_resdntl' ) && typeof selected_radio.getAttribute( 'data-mm_address_resdntl' ) === 'string' )
						{
							this.element_resdntl.value = selected_radio.getAttribute( 'data-mm_address_resdntl' );
						}
						else
						{
							this.element_resdntl.value = '';
						}
					}<MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF><MIVA STANDARDOUTPUTLEVEL = "text, html">
				}
				else
				{
					this.element_address_validated.value = 0;
				}

				// disable "radio" element so it doesn't send in the form
				selected_radio.disabled = true;
				this.Disable_Address_Form_Fields( false );

				return true;
			};

			Validated_Address_Picker.prototype.onError = function( message )
			{
				alert( message );
			};

			(function( obj, eventType, fn )
			{
				if ( obj.addEventListener )
				{
					obj.addEventListener( eventType, fn, false );
				}
				else if ( obj.attachEvent )
				{
					obj.attachEvent( 'on' + eventType, fn );
				}
			})( window, 'load', function(){ window.validated_address_picker = new Validated_Address_Picker(); } );
		</script>
	</mvt:if>
	<div id="shipping_fields">
		<div class="&mvte:global:Address_Description_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Description', l.settings, 'Address Description:', 'R' ) }">
			<input type="text" name="Address_Description" id="Address_Description" value="&mvte:global:Address_Description;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.fields:mode_fname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_FirstName_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_FirstName', l.settings, 'First Name:', l.fields:mode_fname ) }">
			<input type="text" name="Address_FirstName" id="Address_FirstName" value="&mvte:global:Address_FirstName;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_lname NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_LastName_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_LastName', l.settings, 'Last Name:', l.fields:mode_lname ) }">
			<input type="text" name="Address_LastName" id="Address_LastName" value="&mvte:global:Address_LastName;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_email NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Email_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Email', l.settings, 'Email Address:', l.fields:mode_email ) }">
			<input type="text" name="Address_Email" id="Address_Email" value="&mvte:global:Address_Email;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_phone NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Phone_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Phone', l.settings, 'Phone Number:', l.fields:mode_phone ) }">
			<input type="text" name="Address_Phone" id="Address_Phone" value="&mvte:global:Address_Phone;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_fax NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Fax_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Fax', l.settings, 'Fax Number:', l.fields:mode_fax ) }">
			<input type="text" name="Address_Fax" id="Address_Fax" value="&mvte:global:Address_Fax;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_comp NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Company_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Company', l.settings, 'Company:', l.fields:mode_comp ) }">
			<input type="text" name="Address_Company" id="Address_Company" value="&mvte:global:Address_Company;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Address1_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Address1', l.settings, 'Address:', l.fields:mode_addr ) }">
			<input type="text" name="Address_Address1" id="Address_Address1" value="&mvte:global:Address_Address1;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_addr2 NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Address2_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Address2', l.settings, 'Address 2:', l.fields:mode_addr2 ) }">
			<input type="text" name="Address_Address2" id="Address_Address2" value="&mvte:global:Address_Address2;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_city NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_City_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_City', l.settings, 'City:', l.fields:mode_city ) }">
			<input type="text" name="Address_City" id="Address_City" value="&mvte:global:Address_City;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_state NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<mvt:if expr="g.Address_States_Empty">
			<div class="&mvte:global:Address_State_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'Address_State', l.settings, 'State/Province:', l.fields:mode_state ) }">
				<input type="text" name="Address_State" id="Address_State" value="&mvte:global:Address_State;" class="textfield" />
			</div>
		<mvt:else>
			<div class="&mvte:global:Address_State_Row;">
				<MvEVAL EXPR = "{ Generate_Prompt( 'Address_StateSelect', l.settings, 'State/Province:', l.fields:mode_state ) }">
				<mvt:item name="states" param="Address_StateSelect" />
			</div>

			<div class="&mvte:global:Address_State_Row;">
				<label class="italic" for="Address_State">Other State/Province:</label>
				<input type="text" name="Address_State" id="Address_State" value="&mvte:global:Address_State;" class="textfield">
			</div>
		</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_zip NE 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Zip_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Zip', l.settings, 'Zip/Postal Code:', l.fields:mode_zip ) }">
			<input type="text" name="Address_Zip" id="Address_Zip" value="&mvte:global:Address_Zip;" class="textfield" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:mode_cntry EQ 'H' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<input type="hidden" name="Address_Country" value="&mvte:global:Address_Country;" /><MIVA STANDARDOUTPUTLEVEL = "">
	<MvELSE>
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Country_Row;">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Country', l.settings, 'Country:', l.fields:mode_cntry ) }">
			<mvt:item name="countries" param="Address_Country" />
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MvIF EXPR = "{ l.fields:ship_res NE 'A' }">
		<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Residential_Row;">
			<MIVA STANDARDOUTPUTLEVEL = "">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Residential', l.settings, '', '' ) }">

			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<mvt:if expr="g.Address_Residential">
				<input type="checkbox" name="Address_Residential" id="Address_Residential" value="1" checked />
			<mvt:else>
				<input type="checkbox" name="Address_Residential" id="Address_Residential" value="1" />
			</mvt:if>

			<span class="italic">Address is a Residence</span>
		</div><MIVA STANDARDOUTPUTLEVEL = "">
	</MvIF>

	<MIVA STANDARDOUTPUTLEVEL = "text, html">
		<div class="&mvte:global:Address_Default_Shipping_Row;">
			<MIVA STANDARDOUTPUTLEVEL = "">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Default_Shipping', l.settings, '', '' ) }">

			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<mvt:if expr="g.Address_Default_Shipping">
				<input type="checkbox" name="Address_Default_Shipping" id="Address_Default_Shipping" value="1" checked />
			<mvt:else>
				<input type="checkbox" name="Address_Default_Shipping" id="Address_Default_Shipping" value="1" />
			</mvt:if>

			<span class="italic">Set as Default Shipping Address</span>
		</div>

		<div class="&mvte:global:Address_Default_Billing_Row;">
			<MIVA STANDARDOUTPUTLEVEL = "">
			<MvEVAL EXPR = "{ Generate_Prompt( 'Address_Default_Billing', l.settings, '', '' ) }">

			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<mvt:if expr="g.Address_Default_Billing">
				<input type="checkbox" name="Address_Default_Billing" id="Address_Default_Billing" value="1" checked />
			<mvt:else>
				<input type="checkbox" name="Address_Default_Billing" id="Address_Default_Billing" value="1" />
			</mvt:if>

			<span class="italic">Set as Default Billing Address</span>
		</div>
	</div>
</div><MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Provision" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' )	AND
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Mode' )		AND
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'PreventAutomaticTemplateUpdates' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Either Template, Mode, or PreventAutomaticTemplateUpdates must be specified' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'o', l.provide_xml,	'Template',							l.template )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml,	'Notes',							l.notes )									OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'PreventAutomaticTemplateUpdates',	l.settings:prevent_template_auto_update )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 		'O', l.provide_xml,	'Mode',								l.mode,
																																'tokens_only_nodisplay, customeraddress_add, customeraddress_edit',
																																'tokens_only_nodisplay, customeraddress_add, customeraddress_edit' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.mode }">
		<MvEVAL EXPR = "{ ModeToSettings_Convert( l.mode, l.settings ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
			<MvEVAL EXPR = "{ Generate_Code( l.settings, l.template ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unable to load template' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.template, l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Description" PARAMETERS = "module var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pages" VALUE = "{ [ g.Module_Feature_TUI_DB ].Item_Load_PageList( l.item ) }">

	<MvFUNCTIONRETURN VALUE = "{ 'Exports Customer Address View/Add/Edit Content template from pages: ' $ l.pages }">
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.output" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item_Runtime( l.item:id, l.pages ) }">
			<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
				<MvMEMBER NAME = "{ l.item:code }">
			</MvREFERENCEARRAY>

			<MvEVAL EXPR = "{ SettingsToMode_Convert( l.settings, l.mode ) }">

			<Page_Update code="{ l.page:code }">
				<Item code="{ l.item:code }">
					<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
						<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.templateversion:source ) }"></Template>
					</MvIF>

					<Mode><MvEVAL EXPR = "{ miva_cdata_encode( l.mode ) }"></Mode>
					<PreventAutomaticTemplateUpdates><MvIF EXPR = "{ l.settings:prevent_template_auto_update }">Yes<MvELSE>No</MvIF></PreventAutomaticTemplateUpdates>
					<Notes>#Set_Current_Time#</Notes>
				</Item>
			</Page_Update>
		</MvFOREACH>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_StandardFields" PARAMETERS = "module var, standardfields var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items" COUNT = "{ [ g.Module_Feature_TUI_DB ].ItemList_Load_Module( l.module:id, l.items ) }">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item( l.item:id, l.pages ) }">
			<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
				<MvMEMBER NAME = "{ l.item:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ l.settings:prevent_template_auto_update }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ Generate_Code( l.settings, l.template_code ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate,
																													  'Field Settings Update: ' $ [ g.Module_Library_Utilities ].Format_Date( s.dyn_time_t, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( s.dyn_time_t, s.miva_language ),
																													  l.template_code,
																													  l.settings ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "SettingsToMode_Convert" PARAMETERS = "settings var, mode var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.settings:mode EQ 'customeraddress_add' }">       		<MvASSIGN NAME = "l.mode" VALUE = "customeraddress_add">
	<MvELSEIF EXPR = "{ l.settings:mode EQ 'customeraddress_edit' }">      	<MvASSIGN NAME = "l.mode" VALUE = "customeraddress_edit">
	<MvELSEIF EXPR = "{ l.settings:mode EQ 'tokens_only_nodisplay' }">		<MvASSIGN NAME = "l.mode" VALUE = "tokens_only_nodisplay">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ModeToSettings_Convert" PARAMETERS = "mode var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.mode EQ 'customeraddress_add' }">				<MvASSIGN NAME = "l.settings:mode" VALUE = "customeraddress_add">
	<MvELSEIF EXPR = "{ l.mode EQ 'customeraddress_edit' }">		<MvASSIGN NAME = "l.settings:mode" VALUE = "customeraddress_edit">
	<MvELSEIF EXPR = "{ l.mode EQ 'tokens_only_nodisplay' }">		<MvASSIGN NAME = "l.settings:mode" VALUE = "tokens_only_nodisplay">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Prompt" PARAMETERS = "fieldname, settings var, prompt, mode" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
		<MvIF EXPR = "{ l.mode EQ 'R' }"> 	<MIVA STANDARDOUTPUTLEVEL = "text, html"><label class="required" for="{ l.fieldname }"><MIVA STANDARDOUTPUTLEVEL = "">
		<MvELSE> 							<MIVA STANDARDOUTPUTLEVEL = "text, html"><label class="italic" for="{ l.fieldname }"><MIVA STANDARDOUTPUTLEVEL = "">
		</MvIF>

		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ l.prompt }"></label><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.code }">
</MvFUNCTION>

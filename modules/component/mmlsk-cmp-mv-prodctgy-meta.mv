<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CMP-MTA-
| Next Error Code: 123   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-cmp-mv-prodctgy-meta">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Product/Category META-Tag Settings">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0800">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.08">
	<MvASSIGN NAME = "l.module:features"	VALUE = "component, data_store, vis_category, vis_product, fields_prod, vis_store, fields_cat, not_prod, not_cat, json, clientside, clientside_sri, provision_store, copy_prod, fields_page">
</MvFUNCTION>

<MvCOMMENT>
|
| Store-level Module Data Support Feature (data_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'METANames', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'METANames
						  (
							id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							name	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							prompt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							type	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| keywords
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.keywords:name"		VALUE = "keywords">
	<MvASSIGN NAME = "l.keywords:prompt"	VALUE = "Keywords">
	<MvASSIGN NAME = "l.keywords:type"		VALUE = "text">

	<MvIF EXPR = "{ NOT METAName_Insert( l.keywords ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| description
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.description:name"	VALUE = "description">
	<MvASSIGN NAME = "l.description:prompt"	VALUE = "Description">
	<MvASSIGN NAME = "l.description:type"	VALUE = "textarea">

	<MvIF EXPR = "{ NOT METAName_Insert( l.description ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'METANames_1 ON ' $ g.Store_Table_Prefix $ 'METANames
						  ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'METANames_2 ON ' $ g.Store_Table_Prefix $ 'METANames
						  ( name )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'METAProducts
						  (
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							name_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'METAProducts_1 ON ' $ g.Store_Table_Prefix $ 'METAProducts
						  ( product_id, name_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'METACategories
						  (
							cat_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							name_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'METACategories_1 ON ' $ g.Store_Table_Prefix $ 'METACategories
						  ( cat_id, name_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'METAGlobals
						  (
							name_id 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00072', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'METAGlobals_1 ON ' $ g.Store_Table_Prefix $ 'METAGlobals ( name_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00073', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'METAPages
						  (
							page_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							pagever_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							name_id 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00074', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'METAPages_1 ON ' $ g.Store_Table_Prefix $ 'METAPages ( page_id, pagever_id, name_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00075', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00076', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'METANames' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'METAProducts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'METACategories' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'METAGlobals' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'METAPages' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Edit Store Screen Feature (vis_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Store_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.meta" ARRAY = "g.Global_META" COUNT = "{ miva_array_collapse( g.Global_META ) }">
		<MvASSIGN NAME = "l.value" VALUE = "{ trim( l.meta:value ) }">

		<MvIF EXPR = "{ NOT ISNULL l.value }">
			<MvIF EXPR = "{ NOT METAValue_Set_Global( l.meta:name_id, l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00077', 'Created global assignment for META name \'' $ l.meta:name $ '\'' ) }">		
		<MvELSE>
			<MvIF EXPR = "{ NOT METAValue_Delete_Global_Name( l.meta:name_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00078', 'Deleted global assignment for META name \'' $ l.meta:name $ '\'' ) }">		
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "CMP-MV-META:META Tag Settings,GT_SEO/CMP-MV-GLOBALMETA:META Fields">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.Global_META"	VALUE = "">
		<MvASSIGN NAME = "l.null" 			VALUE = "{ METANameAndValueList_Load_Global_All( g.Global_META ) }">
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'CMP-MV-META' }">
		<MvEVAL EXPR = "{ Element_METAName_List_CSS( l.module ) }">

		<MvIF EXPR = "{ Element_META_JavaScript_Combined_Begin( l.module ) }">
			<MvEVAL EXPR = "{ Element_METAName_List_JavaScript( l.module ) }">
			<MvEVAL EXPR = "{ Element_META_JavaScript_Combined_End( l.module ) }">
		</MvIF>

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new METAName_List(); } );
		</script>

		<MvEVAL EXPR = "{ Element_METAName_List_HTML( l.module ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( l.tab, 'CMP-MV-GLOBALMETA' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_SEO', 'CMP-MV-GLOBALMETA' ) }">

		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<MvFOREACH ITERATOR = "l.meta" ARRAY = "g.Global_META" INDEX = "l.pos" COUNT = "{ miva_array_elements( g.Global_META ) }">
				<tr>
					<MvIF EXPR = "{ l.meta:type EQ 'textarea' }">	<td valign="top" nowrap><MvEVAL EXPR = "{ encodeentities( l.meta:prompt ) }">:</td>
					<MvELSE>										<td nowrap><MvEVAL EXPR = "{ encodeentities( l.meta:prompt ) }">:</td>
					</MvIF>
					
					<td width="100%" nowrap>
						<input type="hidden" name="{ 'Global_META[' $ l.pos $ ']:name_id' }"	value="{ encodeentities( l.meta:name_id ) }">
						<input type="hidden" name="{ 'Global_META[' $ l.pos $ ']:name' }" 		value="{ encodeentities( l.meta:name ) }">
						<input type="hidden" name="{ 'Global_META[' $ l.pos $ ']:prompt' }" 	value="{ encodeentities( l.meta:prompt ) }">
						<input type="hidden" name="{ 'Global_META[' $ l.pos $ ']:type' }" 		value="{ encodeentities( l.meta:type ) }">

						<MvIF EXPR = "{ l.meta:type EQ 'textarea' }">
							<textarea rows="10" cols="58" wrap="off" name="{ 'Global_META[' $ l.pos $ ']:value' }"><MvEVAL EXPR = "{ encodeentities( l.meta:value ) }"></textarea>
						<MvELSE>
							<input type="text" size="40" name="{ 'Global_META[' $ l.pos $ ']:value' }" value="{ encodeentities( l.meta:value ) }">
						</MvIF>
					</td>
				</tr>
			</MvFOREACH>
		</table>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvHIDE FIELDS = "g.Global_META">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Category Add/Edit Screen Feature (vis_category)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Category_Tabs" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "GT_SEO/CMP-MV-CATMETA:META Tag Settings">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Head" PARAMETERS = "module var, tab, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Content" PARAMETERS = "module var, tab, load_fields, category var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.Category_META"	VALUE = "">
		<MvASSIGN NAME = "l.null"			VALUE = "{ NOT METANameAndValueList_Load_Category_All( l.category:id, g.Category_META ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( l.tab, 'CMP-MV-CATMETA' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_SEO', 'CMP-MV-CATMETA' ) }">
		<table border=0 cellpadding=2 cellspacing = 0 width = "100%">
		<MvASSIGN NAME = "l.meta_pos"		VALUE = 1>
		<MvASSIGN NAME = "l.meta_count"		VALUE = "{ miva_array_elements( g.Category_META ) }">

		<MvWHILE EXPR = "{ l.meta_pos LE l.meta_count }">
			<tr>
			
			<MvIF EXPR = "{ g.Category_META[ l.meta_pos ]:type EQ 'textarea' }">
				<td nowrap valign="top">
					<MvEVAL EXPR = "{ encodeentities( g.Category_META[ l.meta_pos ]:prompt ) }">:
				</td>
			<MvELSE>
				<td nowrap>
					<MvEVAL EXPR = "{ encodeentities( g.Category_META[ l.meta_pos ]:prompt ) }">:
				</td>
			</MvIF>
			
			<td width="100%" nowrap>
				<input type="hidden" name="{ 'Category_META[' $ l.meta_pos $ ']:name_id' }" value="{ encodeentities( g.Category_META[ l.meta_pos ]:name_id ) }">
				<input type="hidden" name="{ 'Category_META[' $ l.meta_pos $ ']:name' }" 	value="{ encodeentities( g.Category_META[ l.meta_pos ]:name ) }">
				<input type="hidden" name="{ 'Category_META[' $ l.meta_pos $ ']:prompt' }" 	value="{ encodeentities( g.Category_META[ l.meta_pos ]:prompt ) }">
				<input type="hidden" name="{ 'Category_META[' $ l.meta_pos $ ']:type' }" 	value="{ encodeentities( g.Category_META[ l.meta_pos ]:type ) }">

				<MvIF EXPR = "{ g.Category_META[ l.meta_pos ]:type EQ 'textarea' }">	<textarea rows=10 cols=58 wrap="off" name="{ 'Category_META[' $ l.meta_pos $ ']:value' }"><MvEVAL EXPR = "{ encodeentities( g.Category_META[ l.meta_pos ]:value ) }"></textarea>
				<MvELSE>																<input type="text" size=40 name="{ 'Category_META[' $ l.meta_pos $ ']:value' }" value="{ encodeentities( g.Category_META[ l.meta_pos ]:value ) }">
				</MvIF>
			</td>
			</tr>

			<MvASSIGN NAME = "l.meta_pos"	VALUE = "{ l.meta_pos + 1 }">
		</MvWHILE>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvHIDE FIELDS = "g.Category_META">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Insert" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.meta_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.meta_count"		VALUE = "{ miva_array_elements( g.Category_META ) }">

	<MvWHILE EXPR = "{ l.meta_pos LE l.meta_count }">
		<MvASSIGN NAME = "l.value"		VALUE = "{ trim( g.Category_META[ l.meta_pos ]:value ) }">

		<MvIF EXPR = "{ len( l.value ) }">
			<MvIF EXPR = "{ NOT METAValue_Set_Category( l.category:id, g.Category_META[ l.meta_pos ]:name_id, l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00048', 'Created assignment for META name \'' $ g.Category_META[ l.meta_pos ]:name_id $ '\' for category \'' $ l.category:code $ '\'' ) }">		
		</MvIF>

		<MvASSIGN NAME = "l.meta_pos"	VALUE = "{ l.meta_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Update" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.meta_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.meta_count"		VALUE = "{ miva_array_elements( g.Category_META ) }">

	<MvWHILE EXPR = "{ l.meta_pos LE l.meta_count }">
		<MvASSIGN NAME = "l.value"		VALUE = "{ trim( g.Category_META[ l.meta_pos ]:value ) }">

		<MvIF EXPR = "{ len( l.value ) }">
			<MvIF EXPR = "{ NOT METAValue_Set_Category( l.category:id, g.Category_META[ l.meta_pos ]:name_id, l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00049', 'Created assignment for META name \'' $ g.Category_META[ l.meta_pos ]:name_id $ '\' for category \'' $ l.category:code $ '\'' ) }">		
		<MvELSE>
			<MvIF EXPR = "{ NOT METAValue_Delete_Category( l.category:id, g.Category_META[ l.meta_pos ]:name_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00050', 'Deleted assignment for META name \'' $ g.Category_META[ l.meta_pos ]:name_id $ '\' for category \'' $ l.category:code $ '\'' ) }">		
		</MvIF>

		<MvASSIGN NAME = "l.meta_pos"	VALUE = "{ l.meta_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Delete" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Category Configuration Change Notification Feature (not_cat)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Category_Insert" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Category_Update" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Category_Delete" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ METAValue_Delete_Category_All( l.category:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_CategoryXProduct_Insert" PARAMETERS = "module var, cat_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_CategoryXProduct_Delete" PARAMETERS = "module var, cat_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Add/Edit Screen Feature (vis_product)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Tabs" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "GT_SEO/CMP-MV-PRODMETA:META Tag Settings">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Head" PARAMETERS = "module var, tab, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Content" PARAMETERS = "module var, tab, load_fields, product var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.Product_META"	VALUE = "">
		<MvASSIGN NAME = "l.null"			VALUE = "{ NOT METANameAndValueList_Load_Product_All( l.product:id, g.Product_META ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( l.tab, 'CMP-MV-PRODMETA' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_SEO', 'CMP-MV-PRODMETA' ) }">
		<table border=0 cellpadding=2 cellspacing = 0 width = "100%">
		<MvASSIGN NAME = "l.meta_pos"		VALUE = 1>
		<MvASSIGN NAME = "l.meta_count"		VALUE = "{ miva_array_elements( g.Product_META ) }">

		<MvWHILE EXPR = "{ l.meta_pos LE l.meta_count }">
			<tr>
	
			<MvIF EXPR = "{ g.Product_META[ l.meta_pos ]:type EQ 'textarea' }">
				<td nowrap valign="top">
					<MvEVAL EXPR = "{ encodeentities( g.Product_META[ l.meta_pos ]:prompt ) }">:
				</td>
			<MvELSE>
				<td nowrap>
					<MvEVAL EXPR = "{ encodeentities( g.Product_META[ l.meta_pos ]:prompt ) }">:
				</td>
			</MvIF>
			
			<td width="100%" nowrap>
				<input type="hidden" name="{ 'Product_META[' $ l.meta_pos $ ']:name_id' }" 	value="{ encodeentities( g.Product_META[ l.meta_pos ]:name_id ) }">
				<input type="hidden" name="{ 'Product_META[' $ l.meta_pos $ ']:name' }" 	value="{ encodeentities( g.Product_META[ l.meta_pos ]:name ) }">
				<input type="hidden" name="{ 'Product_META[' $ l.meta_pos $ ']:prompt' }" 	value="{ encodeentities( g.Product_META[ l.meta_pos ]:prompt ) }">
				<input type="hidden" name="{ 'Product_META[' $ l.meta_pos $ ']:type' }" 	value="{ encodeentities( g.Product_META[ l.meta_pos ]:type ) }">

				<MvIF EXPR = "{ g.Product_META[ l.meta_pos ]:type EQ 'textarea' }">	<textarea rows=10 cols=58 wrap="off" name="{ 'Product_META[' $ l.meta_pos $ ']:value' }"><MvEVAL EXPR = "{ encodeentities( g.Product_META[ l.meta_pos ]:value ) }"></textarea>
				<MvELSE>															<input type="text" size=40 name="{ 'Product_META[' $ l.meta_pos $ ']:value' }" value="{ encodeentities( g.Product_META[ l.meta_pos ]:value ) }">
				</MvIF>
			</td>
			</tr>

			<MvASSIGN NAME = "l.meta_pos"	VALUE = "{ l.meta_pos + 1 }">
		</MvWHILE>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvHIDE FIELDS = "g.Product_META">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.meta_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.meta_count"		VALUE = "{ miva_array_elements( g.Product_META ) }">

	<MvWHILE EXPR = "{ l.meta_pos LE l.meta_count }">
		<MvASSIGN NAME = "l.value"		VALUE = "{ trim( g.Product_META[ l.meta_pos ]:value ) }">

		<MvIF EXPR = "{ len( l.value ) }">
			<MvIF EXPR = "{ NOT METAValue_Set_Product( l.product:id, g.Product_META[ l.meta_pos ]:name_id, l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00053', 'Created assignment for META name \'' $ g.Product_META[ l.meta_pos ]:name_id $ '\' for product \'' $ l.product:code $ '\'' ) }">		
		</MvIF>

		<MvASSIGN NAME = "l.meta_pos"	VALUE = "{ l.meta_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.meta_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.meta_count"		VALUE = "{ miva_array_elements( g.Product_META ) }">

	<MvWHILE EXPR = "{ l.meta_pos LE l.meta_count }">
		<MvASSIGN NAME = "l.value"		VALUE = "{ trim( g.Product_META[ l.meta_pos ]:value ) }">

		<MvIF EXPR = "{ len( l.value ) }">
			<MvIF EXPR = "{ NOT METAValue_Set_Product( l.product:id, g.Product_META[ l.meta_pos ]:name_id, l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00054', 'Created assignment for META name \'' $ g.Product_META[ l.meta_pos ]:name_id $ '\' for product \'' $ l.product:code $ '\'' ) }">		
		<MvELSE>
			<MvIF EXPR = "{ NOT METAValue_Delete_Product( l.product:id, g.Product_META[ l.meta_pos ]:name_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00055', 'Deleted assignment for META name \'' $ g.Product_META[ l.meta_pos ]:name_id $ '\' for product \'' $ l.product:code $ '\'' ) }">		
		</MvIF>

		<MvASSIGN NAME = "l.meta_pos"	VALUE = "{ l.meta_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Configuration Change Notification Feature (not_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ METAValue_Delete_Product_All( l.product:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Copy" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_LowStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_OutOfStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Component Feature (component)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "GT_SEO/CMP-MV-PAGEMETA:META Fields">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.fields:metafields" COUNT = "{ miva_array_collapse( l.fields:metafields ) }">
		<MvASSIGN NAME = "l.metafield:name_id"	VALUE = "{ int( l.metafield:name_id ) }">
		<MvASSIGN NAME = "l.metafield:value" 	VALUE = "{ trim( l.metafield:value ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.fields:metafields" COUNT = "{ miva_array_collapse( l.fields:metafields ) }">
		<MvASSIGN NAME = "l.existing_value" VALUE = "{ METAValue_Load_Page_Cached( l.page:id, l.page:version_id, l.metafield:name ) }">

		<MvIF EXPR = "{ strcmp( l.metafield:value, l.existing_value ) NE 0 }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.fields:metafields" COUNT = "{ miva_array_collapse( l.fields:metafields ) }">
		<MvIF EXPR = "{ NOT ISNULL l.metafield:value }">
			<MvIF EXPR = "{ NOT METAValue_Set_Page( l.page:id, l.page:version_id, l.metafield:name_id, l.metafield:value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00080', 'META name \'' $ l.metafield:name $ '\' updated for page \'' $ l.page:code $ '\'' ) }">		
		<MvELSE>
			<MvIF EXPR = "{ NOT METAValue_Delete_Page( l.page:id, l.page:version_id, l.metafield:name_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00081', 'META name \'' $ l.metafield:name $ '\' deleted from page \'' $ l.page:code $ '\'' ) }">	
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( g.Page_Code, l.page ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00082', 'Failed to load page code \'' $ g.Page_Code $ '\'' ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.meta_page" ARRAY = "l.meta_pages" INDEX = "l.pos" COUNT = "{ METANameAndValueList_Load_Page_All( l.page:id, l.page:version_id, l.meta_pages ) }">
			<MvREFERENCEARRAY NAME = "l.metafields" VARIABLE = "l.fields">
				<MvMEMBER NAME = "metafields">
				<MvDIMENSION INDEX = "{ l.pos }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.metafields" VALUE = "{ l.meta_page }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( l.tab, 'CMP-MV-PAGEMETA' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_SEO', 'CMP-MV-PAGEMETA' ) }">

		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<MvFOREACH ITERATOR = "l.meta" ARRAY = "l.fields:metafields" INDEX = "l.pos">
				<tr>
					<MvIF EXPR = "{ l.meta:type EQ 'textarea' }">	<td valign="top" nowrap><MvEVAL EXPR = "{ encodeentities( l.meta:prompt ) }">:</td>
					<MvELSE>										<td nowrap><MvEVAL EXPR = "{ encodeentities( l.meta:prompt ) }">:</td>
					</MvIF>

					<td width="100%" nowrap>
						<input type="hidden" name="{ encodeentities( l.field_prefix ) $ 'metafields[' $ l.pos $ ']:name_id' }"	value="{ encodeentities( l.meta:name_id ) }">
						<input type="hidden" name="{ encodeentities( l.field_prefix ) $ 'metafields[' $ l.pos $ ']:name' }" 	value="{ encodeentities( l.meta:name ) }">
						<input type="hidden" name="{ encodeentities( l.field_prefix ) $ 'metafields[' $ l.pos $ ']:prompt' }" 	value="{ encodeentities( l.meta:prompt ) }">
						<input type="hidden" name="{ encodeentities( l.field_prefix ) $ 'metafields[' $ l.pos $ ']:type' }" 	value="{ encodeentities( l.meta:type ) }">

						<MvIF EXPR = "{ l.meta:type EQ 'textarea' }">
							<textarea rows="10" cols="58" wrap="off" name="{ encodeentities( l.field_prefix ) $ 'metafields[' $ l.pos $ ']:value' }"><MvEVAL EXPR = "{ encodeentities( l.meta:value ) }"></textarea>
						<MvELSE>
							<input type="text" size="40" name="{ encodeentities( l.field_prefix ) $ 'metafields[' $ l.pos $ ']:value' }" value="{ encodeentities( l.meta:value ) }">
						</MvIF>
					</td>
				</tr>
			</MvFOREACH>
		</table>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, '' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ METAValue_Delete_Page_All( l.page:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAValue_Delete_Page_Version( l.dest_page:id, l.dest_page:version_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METAPages ( page_id, pagever_id, name_id, value, value_long )
						  SELECT
							?, ?, name_id, value, value_long
						  FROM ' $
							g.Store_Table_Prefix $ 'METAPages
						  WHERE
							page_id		= ? AND
							pagever_id	= ?' }"
			 FIELDS = "l.dest_page:id, l.dest_page:version_id,
					   l.source_page:id, l.source_page:version_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00112', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ l.source_branch:id EQ l.dest_branch:id }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00113', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' on branch \'' $ l.dest_branch:name $ '\'' ) }">
	<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00121', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' from branch \'' $ l.source_branch:name $ '\' to branch \'' $ l.dest_branch:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'category' ) AND l.all_settings:category:id }">
		<MvIF EXPR = "{ g.Store:ui_mod:code NE 'cssui' }">
			<MvASSIGN NAME = "l.categorylist_count" VALUE = "{ CategoryCascadeList_Load_Category( l.all_settings:category, l.category_list ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'category_tree' ) }">
			<MvASSIGN NAME = "l.categorylist_count" VALUE = "{ CategoryCascadeList_Load_Category( l.all_settings:category, l.category_list ) }">
		<MvELSE>
			<MvFOREACH ITERATOR = "l.category" ARRAY = "l.all_settings:cattree_categories">
				<MvIF EXPR = "{ NOT ISNULL l.category:cattree_parent_id }">
					<MvASSIGN NAME = "l.categorylist_count" VALUE = "{ miva_array_insert( l.category_list, l.category, -1 ) }">
				</MvIF>
			</MvFOREACH>
		</MvIF>

		<MvFOREACH ITERATOR = "l.category" ARRAY = "l.category_list" COUNT = "{ l.categorylist_count }">
			<MvASSIGN NAME = "l.category:metafield_count" VALUE = "{ METAValueList_Load_Category_Cached( l.category:id, l.category:metafields ) }">
			<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.category:metafields" COUNT = "{ l.category:metafield_count }">
				<MvASSIGN NAME = "l.all_settings:category:metafield" MEMBER = "{ glosub( l.metafield:name, '-', '_' ) }" VALUE = "{ l.metafield:value }">
			</MvFOREACH>
		</MvFOREACH>

		<MvFOREACH ITERATOR = "l.metafield_name" ARRAY = "l.metafields" COUNT = "{ miva_struct_members( l.all_settings:category:metafield, l.metafields ) }">
			<MvASSIGN NAME = "l.metafield" MEMBER = "name" 	VALUE = "{ l.metafield_name }">
			<MvASSIGN NAME = "l.metafield" MEMBER = "value" VALUE = "{ miva_variable_value( 'l.all_settings:category:metafield:' $ l.metafield_name ) }">

			<MvASSIGN NAME = "l.all_settings:category:metafield_count" VALUE = "{ miva_array_insert( l.all_settings:category:metafields, l.metafield, -1 ) }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'product' ) AND l.all_settings:product:id }">
		<MvASSIGN NAME = "l.all_settings:product:metafield_count" VALUE = "{ METAValueList_Load_Product_Cached( l.all_settings:product:id, l.all_settings:product:metafields ) }">
		<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.all_settings:product:metafields" COUNT = "{ l.all_settings:product:metafield_count }">
			<MvREFERENCE NAME = "l.all_settings:product:metafield" MEMBER = "{ glosub( l.metafield:name, '-', '_' ) }" VARIABLE = "l.metafield:value">
		</MvFOREACH>
	</MvIF>

	<MvASSIGN NAME = "l.all_settings:global_metafield_count" VALUE = "{ METAValueList_Load_Global_Cached( l.all_settings:global_metafields_array ) }">
	<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.all_settings:global_metafields_array" COUNT = "{ l.all_settings:global_metafield_count }">
		<MvREFERENCE NAME = "l.all_settings:global_metafields" MEMBER = "{ glosub( l.metafield:name, '-', '_' ) }" VARIABLE = "l.metafield:value">
	</MvFOREACH>

	<MvASSIGN NAME = "l.all_settings:page_metafield_count" VALUE = "{ METAValueList_Load_Page_Cached( l.all_settings:page:id, l.all_settings:page:version_id, l.all_settings:page_metafields_array ) }">
	<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.all_settings:page_metafields_array" COUNT = "{ l.all_settings:page_metafield_count }">
		<MvREFERENCE NAME = "l.all_settings:page_metafields" MEMBER = "{ glosub( l.metafield:name, '-', '_' ) }" VARIABLE = "l.metafield:value">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.param EQ 'prod' }">		<MvREFERENCE NAME = "l.item" VARIABLE = "l.all_settings:product">
	<MvELSEIF EXPR = "{ l.param EQ 'ctgy' }">	<MvREFERENCE NAME = "l.item" VARIABLE = "l.all_settings:category">
	<MvELSEIF EXPR = "{ l.param EQ 'global' }">	<MvREFERENCE NAME = "l.item" VARIABLE = "l.all_settings:global_metafields">
	<MvELSEIF EXPR = "{ l.param EQ 'page' }">	<MvREFERENCE NAME = "l.item" VARIABLE = "l.all_settings:page_metafields">
	<MvELSEIF EXPR = "{ l.param NE 'combined' }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ l.param NE 'combined' }">
		<MvIF EXPR = "{ l.param EQ 'prod' OR l.param EQ 'ctgy' }">
			<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.item:metafields" COUNT = "{ l.item:metafield_count }">
				<meta name="{ encodeentities( l.metafield:name ) }" content="{ encodeentities( l.metafield:value ) }" />
			</MvFOREACH>
		<MvELSEIF EXPR = "{ l.param EQ 'global' OR l.param EQ 'page' }">
			<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.item, l.members ) }">
				<meta name="{ encodeentities( l.member ) }" content="{ encodeentities( miva_variable_value( 'l.item:' $ l.member ) ) }" />
			</MvFOREACH>
		</MvIF>

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvCOMMENT>
	|
	| Cascading META tag rules are applied as follows:
	|
	| 1. Global META tags
	| 2. Page META tags				: Page overrides Global
	| 3. Category META tags			: Category overrides Page
	| 4. Product META tags			: Product overrides Category
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.cascaded" VALUE = "">

	<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.all_settings:global_metafields, l.members ) }">
		<MvASSIGN NAME = "l.cascaded" MEMBER = "{ l.member }" VALUE = "{ miva_variable_value( 'l.all_settings:global_metafields:' $ l.member ) }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.all_settings:page_metafields, l.members ) }">
		<MvASSIGN NAME = "l.cascaded" MEMBER = "{ l.member }" VALUE = "{ miva_variable_value( 'l.all_settings:page_metafields:' $ l.member ) }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.all_settings:category:metafields" COUNT = "{ l.all_settings:category:metafield_count }">
		<MvASSIGN NAME = "l.cascaded" MEMBER = "{ l.metafield:name }" VALUE = "{ l.metafield:value }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.metafield" ARRAY = "l.all_settings:product:metafields" COUNT = "{ l.all_settings:product:metafield_count }">
		<MvASSIGN NAME = "l.cascaded" MEMBER = "{ l.metafield:name }" VALUE = "{ l.metafield:value }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.cascaded, l.members ) }">
		<meta name="{ encodeentities( l.member ) }" content="{ encodeentities( miva_variable_value( 'l.cascaded:' $ l.member ) ) }" />
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryCascadeList_Load_Category" PARAMETERS = "category var, category_list var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.current_category" 	VALUE = "{ l.category }">
	<MvASSIGN NAME = "l.category_count" 	VALUE = "{ miva_array_insert( l.category_list, l.current_category, 1 ) }">

	<MvWHILE EXPR = "{ l.current_category:parent_id GT 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_Category_Load_ID_Cached( l.current_category:parent_id, l.current_category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( l.current_category:parent_id, l.current_category ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvWHILECONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.category_count" VALUE = "{ miva_array_insert( l.category_list, l.current_category, 1 ) }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = "{ l.category_count }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Custom Fields Feature (fields_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"			VALUE = "">
	<MvASSIGN NAME = "l.capabilities:query"		VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:search"	VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields"				VALUE = "">
	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvFOREACH ITERATOR = "l.meta" ARRAY = "l.metas" COUNT = "{ METANameList_Load( l.metas ) }">
		<MvASSIGN NAME = "l.field" 			VALUE = "">
		<MvASSIGN NAME = "l.field:code"		VALUE = "{ l.meta:name }">
		<MvASSIGN NAME = "l.field:name"		VALUE = "{ 'META ' $ l.meta:prompt }">
		<MvASSIGN NAME = "l.field:type"		VALUE = "{ l.meta:type }">
		<MvASSIGN NAME = "l.field:public"	VALUE = 1>

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ METAName_Load_Name( l.code, l.meta ) }">
		<MvFUNCTIONRETURN VALUE = "{ 'META ' $ l.meta:prompt }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value" PARAMETERS = "module var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ METAValue_Load_Product_Cached( l.product_id, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value_Array" PARAMETERS = "module var, product_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field" PARAMETERS = "module var, product_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name( l.code, l.name ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ len( l.value ) }">
		<MvIF EXPR = "{ NOT METAValue_Set_Product( l.product_id, l.name:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00058', 'Created assignment for META name \'' $ l.name:id $ '\' for product \'' $ l.product_id $ '\'' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT METAValue_Delete_Product( l.product_id, l.name:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00060', 'Deleted assignment for META name \'' $ l.name:id $ '\' for product \'' $ l.product_id $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field_Array" PARAMETERS = "module var, product_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00114', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Category Custom Fields Feature (fields_cat)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Category_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"			VALUE = "">
	<MvASSIGN NAME = "l.capabilities:query"		VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:search"	VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields"				VALUE = "">
	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvFOREACH ITERATOR = "l.meta" ARRAY = "l.metas" COUNT = "{ METANameList_Load( l.metas ) }">
		<MvASSIGN NAME = "l.field" 			VALUE = "">
		<MvASSIGN NAME = "l.field:code"		VALUE = "{ l.meta:name }">
		<MvASSIGN NAME = "l.field:name"		VALUE = "{ 'META ' $ l.meta:prompt }">
		<MvASSIGN NAME = "l.field:type"		VALUE = "{ l.meta:type }">
		<MvASSIGN NAME = "l.field:public"	VALUE = 1>

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ METAName_Load_Name( l.code, l.meta ) }">
		<MvFUNCTIONRETURN VALUE = "{ 'META ' $ l.meta:prompt }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Value" PARAMETERS = "module var, cat_id, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ METAValue_Load_Category_Cached( l.cat_id, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Value_Array" PARAMETERS = "module var, cat_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Set_Field" PARAMETERS = "module var, cat_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name( l.code, l.name ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ len( l.value ) }">
		<MvIF EXPR = "{ NOT METAValue_Set_Category( l.cat_id, l.name:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00059', 'Created assignment for META name \'' $ l.name:id $ '\' for category \'' $ l.cat_id $ '\'' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT METAValue_Delete_Category( l.cat_id, l.name:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00061', 'Deleted assignment for META name \'' $ l.name:id $ '\' for category \'' $ l.cat_id $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Set_Field_Array" PARAMETERS = "module var, cat_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00115', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Page Custom Fields Feature (fields_page)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Page_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields"			VALUE = "">
	<MvASSIGN NAME = "l.field_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.meta" ARRAY = "l.metas" COUNT = "{ METANameList_Load( l.metas ) }">
		<MvASSIGN NAME = "l.field" 			VALUE = "">
		<MvASSIGN NAME = "l.field:code"		VALUE = "{ l.meta:name }">
		<MvASSIGN NAME = "l.field:name"		VALUE = "{ 'META ' $ l.meta:prompt }">
		<MvASSIGN NAME = "l.field:type"		VALUE = "{ l.meta:type }">
		<MvASSIGN NAME = "l.field:public"	VALUE = 1>

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ METAName_Load_Name( l.code, l.meta ) }">
		<MvFUNCTIONRETURN VALUE = "{ 'META ' $ l.meta:prompt }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Value" PARAMETERS = "module var, page_id, pagever_id, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ METAValue_Load_Page_Cached( l.page_id, l.pagever_id, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Value_Array" PARAMETERS = "module var, page_id, pagever_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Set_Field" PARAMETERS = "module var, page_id, pagever_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name( l.code, l.name ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.value }">
		<MvIF EXPR = "{ NOT METAValue_Set_Page( l.page_id, l.pagever_id, l.name:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00116', 'META name \'' $ l.name:name $ '\' updated for page ' $ l.page_id ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT METAValue_Delete_Page( l.page_id, l.pagever_id, l.name:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00117', 'META name \'' $ l.name:name $ '\' deleted for page ' $ l.page_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Set_Field_Array" PARAMETERS = "module var, page_id, pagever_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00118', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"				VALUE = "">
	<MvASSIGN NAME = "l.capabilities:query"			VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:search"		VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:orderby"		VALUE = 0>

	<MvIF EXPR = "{ METAName_Load_Name_Cached( l.code, l.null ) }">
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 1>	
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name_Cached( l.code, l.metaname ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT Meta_Page_Query( l.query, l.metaname ) }">		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name_Cached( l.code, l.metaname ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT Meta_Page_Query( l.query, l.metaname ) }">		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.alias" VALUE = "{ Meta_Page_Query_Field_Alias( l.metaname ) }">

	<MvIF EXPR = "{ ( l.operator EQ 'NC' )		OR
					( l.operator EQ 'NE' )		OR
					( l.operator EQ 'NOT_IN' )	OR
					( l.operator EQ 'NOTLIKE' )	OR
					( l.operator EQ 'NULL' ) }">
		<MvASSIGN NAME = "l.inner_joining_clause" VALUE = "AND">
	<MvELSE>
		<MvASSIGN NAME = "l.inner_joining_clause" VALUE = "OR">
	</MvIF>

	<MvIF EXPR = "{ l.operator EQ 'TRUE' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.alias $ '.value <> \'0\' AND ' $ l.alias $ '.value_long IS NULL )', '' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.alias $ '.value IS NULL AND ' $ l.alias $ '.value_long <> \'0\' )' , '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
	<MvELSEIF EXPR = "{ l.operator EQ 'FALSE' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ' $ l.alias $ '.value = \'0\' OR ' $ l.alias $ '.value IS NULL ) AND ' $ l.alias $ '.value_long IS NULL )', '' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ' $ l.alias $ '.value_long = \'0\' OR ' $ l.alias $ '.value_long IS NULL ) AND ' $ l.alias $ '.value IS NULL )' , '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, 'CHAR', l.alias $ '.value,' $ l.alias $ '.value_long', l.operator, l.value, 'OR', l.inner_joining_clause ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name_Cached( l.code, l.metaname ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT Meta_Page_Query( l.query, l.metaname ) }">		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.alias" VALUE = "{ Meta_Page_Query_Field_Alias( l.metaname ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY_Flag_With_Alias_And_Member( l.query,
																				 			 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( l.alias $ '.value', l.alias $ '.value_long' ),
																							 l.alias $ '_value',
																			 				 l.alias $ ':value',
																			 				 l.direction,
																			 				 'null_char' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, page_id, pagever_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name_Cached( l.code, l.metaname ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.alias" VALUE = "{ Meta_Page_Query_Field_Alias( l.metaname ) }">

	<MvASSIGNARRAY NAME = "l.loaded_record" VALUE = "{ METAValue_Load_Page_Cached( l.page_id, l.pagever_id, l.code ) }">
		<MvMEMBER NAME = "{ l.alias }">
		<MvMEMBER NAME = "value">
	</MvASSIGNARRAY>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Load_Name_Cached( l.code, l.metaname ) }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.alias" VALUE = "{ Meta_Page_Query_Field_Alias( l.metaname ) }">

	<MvFUNCTIONRETURN VALUE = "{ miva_variable_value( l.view_name $ '.d.' $ l.alias $ '_value' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Fields_Propagate" PARAMETERS = "module var, page_id, oldpagever_id, newpagever_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METAPages
						  ( page_id, pagever_id, name_id, value, value_long )
						  SELECT
							page_id, ?, name_id, value, value_long
						  FROM
							' $ g.Store_Table_Prefix $ 'METAPages
						  WHERE
							page_id		= ? AND
							pagever_id	= ?' }"
			 FIELDS = "l.newpagever_id,
			 		   l.page_id, l.oldpagever_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00120', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Copy Product Feature (copy_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Copy_Product" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAValue_Delete_Product_All( l.dest_product:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METAProducts ( product_id, name_id, value, value_long )
						  SELECT
							?, name_id, value, value_long
						  FROM ' $
							g.Store_Table_Prefix $ 'METAProducts
						  WHERE
							product_id = ?' }"
			 FIELDS = "l.dest_product:id,
					   l.source_product:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00111', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper database functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "METAName_Read" PARAMETERS = "name var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.name:id"		VALUE = "{ METANames.d.id }">
	<MvASSIGN NAME = "l.name:name"		VALUE = "{ METANames.d.name }">
	<MvASSIGN NAME = "l.name:prompt"	VALUE = "{ METANames.d.prompt }">
	<MvASSIGN NAME = "l.name:type"		VALUE = "{ METANames.d.type }">
</MvFUNCTION>

<MvFUNCTION NAME = "METANameList_Load" PARAMETERS = "names var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METANames"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'METANames' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00018', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.name_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT METANames.d.EOF }">
		<MvASSIGN NAME = "l.name_count"	VALUE = "{ l.name_count + 1 }">
		<MvEVAL EXPR = "{ METAName_Read( l.names[ l.name_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METANames" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METANames">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00039', l.name_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAName_Load_Name_Cached" PARAMETERS = "name, metaname var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:metaname_load_name_cached">
		<MvMEMBER NAME = "{ l.name }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ METAName_Load_Name( l.name, l.cache:metaname ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ NOT l.cache:eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
	</MvIF>

	<MvASSIGN NAME = "l.metaname" VALUE = "{ l.cache:metaname }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAName_Load_Name" PARAMETERS = "name, metaname var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METANames"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'METANames WHERE name = ?' }"
				FIELDS	= "l.name">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00019', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ METANames.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "METANames">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-CMP-MTA-00040' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAName_Read( l.metaname ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METANames">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAName_Load_ID" PARAMETERS = "id, metaname var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METANames"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'METANames WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00062', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ METANames.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "METANames">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-CMP-MTA-00063' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAName_Read( l.metaname ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METANames">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAName_Insert" PARAMETERS = "name var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.name:id"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'METANames' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METANames ( id, name, prompt, type ) VALUES ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.name:id, l.name:name, l.name:prompt, l.name:type">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00020', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAName_Update" PARAMETERS = "name var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'METANames
						  SET
							name	= ?,
							prompt	= ?,
							type	= ?
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.name:name, l.name:prompt, l.name:type,
					   l.name:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00021', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAName_Delete" PARAMETERS = "name_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT METAName_Delete_LowLevel( l.name_id ) 		OR
					NOT METAValue_Delete_Product_Name( l.name_id ) 	OR
					NOT METAValue_Delete_Category_Name( l.name_id ) OR
					NOT METAValue_Delete_Global_Name( l.name_id )	OR
					NOT METAValue_Delete_Page_Name( l.name_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAName_Delete_LowLevel" PARAMETERS = "name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METANames WHERE id = ?' }"
			 FIELDS	= "l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00022', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METANameAndValue_Read" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.value:name_id"	VALUE = "{ METAValues.d.name_id }">
	<MvASSIGN NAME = "l.value:name"		VALUE = "{ METAValues.d.name }">
	<MvASSIGN NAME = "l.value:prompt"	VALUE = "{ METAValues.d.prompt }">
	<MvASSIGN NAME = "l.value:type"		VALUE = "{ METAValues.d.type }">
	<MvASSIGN NAME = "l.value:value"	VALUE = "{ METAValues.d.value $ METAValues.d.value_long }">
</MvFUNCTION>

<MvFUNCTION NAME = "METANameAndValueList_Load_Category_All" PARAMETERS = "cat_id, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.id AS name_id, name.name, name.prompt, name.type, cat.value, cat.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METANames name
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'METACategories cat ON cat.cat_id = ? AND cat.name_id = name.id
							  ORDER BY
								name.type, name.name' }"
				FIELDS	= "l.cat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00023', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvASSIGN NAME = "l.value_count"	VALUE = "{ l.value_count + 1 }">
		<MvEVAL EXPR = "{ METANameAndValue_Read( l.values[ l.value_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00041', l.value_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METANameAndValueList_Load_Product_All" PARAMETERS = "product_id, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.id AS name_id, name.name, name.prompt, name.type, prod.value, prod.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METANames name
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'METAProducts prod ON prod.product_id = ? AND prod.name_id = name.id
							  ORDER BY
								name.type, name.name' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00024', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvASSIGN NAME = "l.value_count"	VALUE = "{ l.value_count + 1 }">
		<MvEVAL EXPR = "{ METANameAndValue_Read( l.values[ l.value_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00042', l.value_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Read" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.value:name"		VALUE = "{ METAValues.d.name }">
	<MvASSIGN NAME = "l.value:value"	VALUE = "{ METAValues.d.value $ METAValues.d.value_long }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Category" PARAMETERS = "cat_id, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.name, cat.value, cat.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METACategories cat, ' $
								g.Store_Table_Prefix $ 'METANames name
							  WHERE
								cat.cat_id	= ? AND
								name.id		= cat.name_id' }"
				FIELDS	= "l.cat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00025', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvASSIGN NAME = "l.value_count"	VALUE = "{ l.value_count + 1 }">
		<MvEVAL EXPR = "{ METAValue_Read( l.values[ l.value_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00043', l.value_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Cache_Category" PARAMETERS = "cat_id" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:category">	<MvCOMMENT> This name used for compatibility with PR8 Update 5 </MvCOMMENT>
	<MvREFERENCE NAME = "g.METACategoryFieldCache"		VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:category">	<MvCOMMENT> For backwards compatibility with PR8 Update 4 and earlier </MvCOMMENT>

	<MvIF EXPR = "{ l.cache:cat_id NE l.cat_id }">
		<MvASSIGN NAME = "l.cache:cat_id"				VALUE = "{ l.cat_id }">
		<MvASSIGN NAME = "l.cache:fields"				VALUE = "">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ METAValueList_Load_Category( l.cat_id, l.cache:values ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"	    VALUE = "{ g.Error_DB_EOF }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.value" ARRAY = "l.cache:values" COUNT = "{ l.cache:result }">
			<MvREFERENCE NAME = "l.cache:fields" MEMBER = "{ l.value:name }" VARIABLE = "l.value:value">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Category_Cached" PARAMETERS = "cat_id, values var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ METAValueList_Cache_Category( l.cat_id ) }">

	<MvREFERENCE NAME = "l.cache"	VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:category">
	<MvASSIGN NAME = "l.values"		VALUE = "{ l.cache:values }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Load_Category_Cached" PARAMETERS = "cat_id, name" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ METAValueList_Cache_Category( l.cat_id ) }">

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:category:fields">
		<MvMEMBER NAME = "{ l.name }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Product" PARAMETERS = "product_id, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.name, prod.value, prod.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METAProducts prod, ' $
								g.Store_Table_Prefix $ 'METANames name
							  WHERE
								prod.product_id	= ? AND
								name.id			= prod.name_id' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00026', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvASSIGN NAME = "l.value_count"	VALUE = "{ l.value_count + 1 }">
		<MvEVAL EXPR = "{ METAValue_Read( l.values[ l.value_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00044', l.value_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Cache_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:product">	<MvCOMMENT> This name used for compatibility with PR8 Update 5 </MvCOMMENT>
	<MvREFERENCE NAME = "g.METAProductFieldCache"		VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:product">	<MvCOMMENT> For backwards compatibility with PR8 Update 4 and earlier </MvCOMMENT>

	<MvIF EXPR = "{ l.cache:product_id NE l.product_id }">
		<MvASSIGN NAME = "l.cache:product_id"			VALUE = "{ l.product_id }">
		<MvASSIGN NAME = "l.cache:fields"				VALUE = "">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ METAValueList_Load_Product( l.product_id, l.cache:values ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.value" ARRAY = "l.cache:values" COUNT = "{ l.cache:result }">
			<MvREFERENCE NAME = "l.cache:fields" MEMBER = "{ l.value:name }" VARIABLE = "l.value:value">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Product_Cached" PARAMETERS = "product_id, values var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ METAValueList_Cache_Product( l.product_id ) }">

	<MvREFERENCE NAME = "l.cache"	VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:product">
	<MvASSIGN NAME = "l.values"		VALUE = "{ l.cache:values }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Load_Product_Cached" PARAMETERS = "product_id, name" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ METAValueList_Cache_Product( l.product_id ) }">

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:product:fields">
		<MvMEMBER NAME = "{ l.name }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_InvalidateCache" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:cache:cmp_mv_prodctgy_meta:category"	VALUE = "">
	<MvASSIGN NAME = "g.METACategoryFieldCache"							VALUE = "">

	<MvASSIGN NAME = "g.Session:cache:cmp_mv_prodctgy_meta:product"		VALUE = "">
	<MvASSIGN NAME = "g.METAProductFieldCache"							VALUE = "">

	<MvASSIGN NAME = "g.Session:cache:cmp_mv_prodctgy_meta:page"		VALUE = "">
	<MvASSIGN NAME = "g.METAProductFieldCache"							VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_InvalidateCache_Category" PARAMETERS = "cat_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:cmp_mv_prodctgy_meta:category:cat_id EQ l.cat_id }">
		<MvASSIGN NAME = "g.Session:cache:cmp_mv_prodctgy_meta:category"	VALUE = "">
		<MvASSIGN NAME = "g.METACategoryFieldCache"							VALUE = "">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_InvalidateCache_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:cmp_mv_prodctgy_meta:product:product_id EQ l.product_id }">
		<MvASSIGN NAME = "g.Session:cache:cmp_mv_prodctgy_meta:product"		VALUE = "">
		<MvASSIGN NAME = "g.METAProductFieldCache"							VALUE = "">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_InvalidateCache_Page" PARAMETERS = "page_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:cmp_mv_prodctgy_meta:page:page_id EQ l.page_id }">
		<MvASSIGN NAME = "g.Session:cache:cmp_mv_prodctgy_meta:page"		VALUE = "">
		<MvASSIGN NAME = "g.METAProductFieldCache"							VALUE = "">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Name_All" PARAMETERS = "name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAProducts WHERE name_id = ?' }"
			 FIELDS	= "l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00027', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METACategories WHERE name_id = ?' }"
			 FIELDS	= "l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00028', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache() }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Product_All" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAProducts WHERE product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00029', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Product( l.product_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Product_Name" PARAMETERS = "name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAProducts WHERE name_id = ?' }"
			 FIELDS	= "l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00030', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache() }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Product" PARAMETERS = "product_id, name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAProducts WHERE product_id = ? AND name_id = ?' }"
			 FIELDS	= "l.product_id, l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00031', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Product( l.product_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Category_All" PARAMETERS = "cat_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METACategories WHERE cat_id = ?' }"
			 FIELDS	= "l.cat_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00032', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Category( l.cat_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Category_Name" PARAMETERS = "name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METACategories WHERE name_id = ?' }"
			 FIELDS	= "l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00033', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache() }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Category" PARAMETERS = "cat_id, name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METACategories WHERE cat_id = ? AND name_id = ?' }"
			 FIELDS	= "l.cat_id, l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00034', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Category( l.cat_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Set_Product" PARAMETERS = "product_id, name_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, NULL, ? )">
	<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METAProducts ( product_id, name_id, value, value_long ) VALUES ' $ l.values }"
			 FIELDS	= "l.product_id, l.name_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00035', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'METAProducts SET ' $ l.values $ ' WHERE product_id = ? AND name_id = ? AND ( ( value_long IS NULL ) OR ( value_long <> ? ) )' }"
				 FIELDS	= "l.value, l.product_id, l.name_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00036', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Product( l.product_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Set_Category" PARAMETERS = "cat_id, name_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, NULL, ? )">
	<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METACategories ( cat_id, name_id, value, value_long ) VALUES ' $ l.values }"
			 FIELDS	= "l.cat_id, l.name_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00037', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'METACategories SET ' $ l.values $ ' WHERE cat_id = ? AND name_id = ? AND ( ( value_long IS NULL ) OR ( value_long <> ? ) )' }"
				 FIELDS	= "l.value, l.cat_id, l.name_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00038', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Category( l.cat_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Valid_METAName_Type" PARAMETERS = "type" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.type NE 'text' AND
					l.type NE 'textarea' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper functions for table METAGlobal
|
</MvCOMMENT>

<MvFUNCTION NAME = "METAValue_Set_Global" PARAMETERS = "name_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len_var( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, NULL, ? )">
	<MvELSE>										<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METAGlobals
						 ( name_id, value, value_long )
						 VALUES ' $
						 l.values }"
			 FIELDS	= "l.name_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00083', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len_var( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>										<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $
								g.Store_Table_Prefix $ 'METAGlobals
							  SET ' $
								l.values $ '
							  WHERE
								name_id = ? AND
								( ( value_long IS NULL ) OR ( value_long <> ? ) )' }"
				 FIELDS	= "l.value, l.name_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00084', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Global_Name" PARAMETERS = "name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAGlobals WHERE name_id = ?' }"
			 FIELDS	= "l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00086', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METANameAndValueList_Load_Global_All" PARAMETERS = "values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.id AS name_id, name.name, name.prompt, name.type, mglobal.value, mglobal.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METANames name
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'METAGlobals mglobal ON mglobal.name_id = name.id
							  ORDER BY
								name.type, name.name' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00087', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvEVAL EXPR = "{ METANameAndValue_Read( l.values[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00088', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Global_Cached" PARAMETERS = "values var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:global">

	<MvIF EXPR = "{ ISNULL l.cache }">
		<MvASSIGN NAME = "l.cache:fields"				VALUE = "">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ METAValueList_Load_Global( l.cache:values ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.value" ARRAY = "l.cache:values" COUNT = "{ l.cache:result }">
			<MvREFERENCE NAME = "l.cache:fields" MEMBER = "{ l.value:name }" VARIABLE = "l.value:value">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.values"							VALUE = "{ l.cache:values }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Global" PARAMETERS = "values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.name, mglobal.value, mglobal.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METAGlobals mglobal, ' $
								g.Store_Table_Prefix $ 'METANames name
							  WHERE
								name.id	= mglobal.name_id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00089', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvEVAL EXPR = "{ METAValue_Read( l.values[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00090', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Helper functions for table METAPage
|
</MvCOMMENT>

<MvFUNCTION NAME = "METAValue_Set_Page" PARAMETERS = "page_id, pagever_id, name_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len_var( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, ?, NULL, ? )">
	<MvELSE>										<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'METAPages
						 ( page_id, pagever_id, name_id, value, value_long )
						 VALUES ' $
						 l.values }"
			 FIELDS	= "l.page_id, l.pagever_id, l.name_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00091', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len_var( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>										<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $
								g.Store_Table_Prefix $ 'METAPages
							  SET ' $
								l.values $ '
							  WHERE
								page_id		= ? AND
								pagever_id	= ? AND
								name_id		= ? AND
								( ( value_long IS NULL ) OR ( value_long <> ? ) )' }"
				 FIELDS	= "l.value, l.page_id, l.pagever_id, l.name_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00092', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Page( l.page_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Page" PARAMETERS = "page_id, pagever_id, name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAPages WHERE page_id = ? AND pagever_id = ? AND name_id = ?' }"
			 FIELDS	= "l.page_id, l.pagever_id, l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00093', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Page( l.page_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Page_Name" PARAMETERS = "name_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAPages WHERE name_id = ?' }"
			 FIELDS	= "l.name_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00094', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache() }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Page_All" PARAMETERS = "page_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAPages WHERE page_id = ?' }"
			 FIELDS	= "l.page_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00095', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Page( l.page_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Delete_Page_Version" PARAMETERS = "page_id, version_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'METAPages WHERE page_id = ? AND pagever_id = ?' }"
			 FIELDS	= "l.page_id, l.version_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00122', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ METAValueList_InvalidateCache_Page( l.page_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "METANameAndValueList_Load_Page_All" PARAMETERS = "page_id, pagever_id, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.id AS name_id, name.name, name.prompt, name.type, page.value, page.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METANames name
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'METAPages page ON page.page_id = ? AND page.pagever_id = ? AND page.name_id = name.id
							  ORDER BY name.type, name.name' }"
				FIELDS	= "l.page_id, l.pagever_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00096', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvEVAL EXPR = "{ METANameAndValue_Read( l.values[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00097', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Page_Cached" PARAMETERS = "page_id, pagever_id, values var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:page">

	<MvIF EXPR = "{ l.cache:page_id NE l.page_id OR l.cache:pagever_id NE l.pagever_id }">
		<MvASSIGN NAME = "l.cache:page_id" 				VALUE = "{ l.page_id }">
		<MvASSIGN NAME = "l.cache:pagever_id" 			VALUE = "{ l.pagever_id }">
		<MvASSIGN NAME = "l.cache:fields"				VALUE = "">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ METAValueList_Load_Page( l.page_id, l.pagever_id, l.cache:values ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.value" ARRAY = "l.cache:values" COUNT = "{ l.cache:result }">
			<MvREFERENCE NAME = "l.cache:fields" MEMBER = "{ l.value:name }" VARIABLE = "l.value:value">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.values"							VALUE = "{ l.cache:values }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Load_Page" PARAMETERS = "page_id, pagever_id, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "METAValues"
				QUERY	= "{ 'SELECT
								name.name, page.value, page.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'METAPages page, ' $
								g.Store_Table_Prefix $ 'METANames name
							  WHERE
								page.page_id	= ? AND
								page.pagever_id	= ? AND
								name.id			= page.name_id' }"
				FIELDS	= "l.page_id, l.pagever_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00098', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT METAValues.d.EOF }">
		<MvEVAL EXPR = "{ METAValue_Read( l.values[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "METAValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METAValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-CMP-MTA-00099', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "METAValueList_Cache_Page" PARAMETERS = "page_id, pagever_id" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:page">	<MvCOMMENT> This name used for compatibility with PR8 Update 5 </MvCOMMENT>
	<MvREFERENCE NAME = "g.METAPageFieldCache"			VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:page">	<MvCOMMENT> For backwards compatibility with PR8 Update 4 and earlier </MvCOMMENT>

	<MvIF EXPR = "{ l.cache:page_id NE l.page_id OR l.cache:pagever_id NE l.pagever_id }">
		<MvASSIGN NAME = "l.cache:page_id"				VALUE = "{ l.page_id }">
		<MvASSIGN NAME = "l.cache:pagever_id"			VALUE = "{ l.pagever_id }">
		<MvASSIGN NAME = "l.cache:fields"				VALUE = "">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ METAValueList_Load_Page( l.page_id, l.pagever_id, l.cache:values ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.value" ARRAY = "l.cache:values" COUNT = "{ l.cache:result }">
			<MvREFERENCE NAME = "l.cache:fields" MEMBER = "{ l.value:name }" VARIABLE = "l.value:value">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "METAValue_Load_Page_Cached" PARAMETERS = "page_id, pagever_id, name" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ METAValueList_Cache_Page( l.page_id, l.pagever_id ) }">

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:cmp_mv_prodctgy_meta:page:fields">
		<MvMEMBER NAME = "{ l.name }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_METANameList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Filter" 		VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'METANames', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter, 'name,prompt,type'  ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, g.Sort, 'name,prompt,type', 'name' ) }">
	
	<MvASSIGN NAME = "l.search_sql"		VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'METANames', l.search_sql, l.search_fields, g.Offset, g.Count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CMP-MTA-00064', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.metaname_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT METANames.d.EOF ) AND ( ( g.Count EQ 0 ) OR ( l.metaname_count LT g.Count ) ) }">
			<MvEVAL EXPR = "{ METAName_Read( l.metaname ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.metaname_count ) }">
				"id":		<MvEVAL EXPR = "{ l.metaname:id }">,
				"name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.metaname:name ) }">",
				"prompt":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.metaname:prompt ) }">",
				"type":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.metaname:type ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "METANames" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "METANames">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_METAName_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.METAName_Name" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.METAName_Name ) }">
	<MvASSIGN NAME = "g.METAName_Prompt"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.METAName_Prompt ) }">
	<MvASSIGN NAME = "g.METAName_Type" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.METAName_Type ) }">

	<MvIF EXPR = "{ ISNULL g.METAName_Name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Name', 'Please specify a name' ) }">
	<MvELSEIF EXPR = "{ METAName_Load_Name( g.METAName_Name, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Name', 'A META field with the name \'' $ g.METAName_Name $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.METAName_Prompt }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Prompt', 'Please specify a prompt' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Valid_METAName_Type( g.METAName_Type ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Type', 'Please specify a valid type' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.metaname:name" 		VALUE = "{ g.METAName_Name }">
	<MvASSIGN NAME = "l.metaname:prompt" 	VALUE = "{ g.METAName_Prompt }">
	<MvASSIGN NAME = "l.metaname:type" 		VALUE = "{ g.METAName_Type }">

	<MvIF EXPR = "{ NOT METAName_Insert( l.metaname ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00066', 'META Name \'' $ g.METAName_Name $ '\' created' ) }">		

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_METAName_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.METAName_ID" 		VALUE = "{ int( g.METAName_ID ) }">
	<MvASSIGN NAME = "g.METAName_Name" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.METAName_Name ) }">
	<MvASSIGN NAME = "g.METAName_Prompt" 	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.METAName_Prompt ) }">
	<MvASSIGN NAME = "g.METAName_Type" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.METAName_Type ) }">

	<MvIF EXPR = "{ NOT METAName_Load_ID( g.METAName_ID, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CMP-MTA-00067', 'Failed to load META Name' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.METAName_Name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Name', 'Please specify a name' ) }">
	<MvELSEIF EXPR = "{ toupper( l.metaname:name ) NE toupper( g.METAName_Name ) }">
		<MvIF EXPR = "{ METAName_Load_Name( g.METAName_Name, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Name', 'A META field with the name \'' $ g.METAName_Name $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.METAName_Prompt }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Prompt', 'Please specify a prompt' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Valid_METAName_Type( g.METAName_Type ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'METAName_Type', 'Please specify a valid type' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_name"		VALUE = "{ l.metaname:name }">

	<MvASSIGN NAME = "l.metaname:name" 		VALUE = "{ g.METAName_Name }">
	<MvASSIGN NAME = "l.metaname:prompt" 	VALUE = "{ g.METAName_Prompt }">
	<MvASSIGN NAME = "l.metaname:type" 		VALUE = "{ g.METAName_Type }">

	<MvIF EXPR = "{ NOT METAName_Update( l.metaname ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00069', 'META Name \'' $ l.original_name $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_METAName_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.METAName_ID" VALUE = "{ int( g.METAName_ID ) }">

	<MvIF EXPR = "{ NOT METAName_Load_ID( g.METAName_ID, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CMP-MTA-00070', 'Failed to load META Name' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Delete( g.METAName_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00071', 'META Name \'' $ l.metaname:name $ '\' deleted' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'METANameList_Load_Query' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_METANameList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'METAName_Insert' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_METAName_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'METAName_Update' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_METAName_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'METAName_Delete' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_METAName_Delete( l.module ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| Module Client Side Feature (clientside)
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/component/cmp-mv-prodctgy-meta/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_META_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/component/cmp-mv-prodctgy-meta/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/component/cmp-mv-prodctgy-meta/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/component/cmp-mv-prodctgy-meta/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Module Provisioning Feature (provision_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ModuleProvisionStore_METAField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.type" VALUE = "text">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Name', 	l.name ) 	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Prompt', l.prompt )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml, 'Type', 	l.type, 'textfield,textarea', 'text,textarea' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ METAName_Load_Name( l.name, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'META name \'' $ l.name $ '\' already exists' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.metaname:name" 		VALUE = "{ l.name }">
	<MvASSIGN NAME = "l.metaname:prompt" 	VALUE = "{ l.prompt }">
	<MvASSIGN NAME = "l.metaname:type" 		VALUE = "{ l.type }">

	<MvIF EXPR = "{ NOT METAName_Insert( l.metaname ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00100', 'Added META name \'' $ l.name $ '\'' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleProvisionStore_METAField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'name', l.name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Load_Name( l.name, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'META name \'' $ l.name $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Name', 	l.metaname:name ) 	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Prompt', l.metaname:prompt )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml, 'Type', 	l.metaname:type, 'textfield,textarea', 'text,textarea' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Update( l.metaname ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00101', 'Updated META name \'' $ l.name $ '\'' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleProvisionStore_METAField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'name', l.name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Load_Name( l.name, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'META name \'' $ l.name $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Delete( l.metaname:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00102', 'Deleted META name \'' $ l.name $ '\'' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleProvisionStore_METAFieldValue_Product" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product_code', l.product_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'name', l.name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product \'' $ l.product_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Load_Name( l.name, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'META name \'' $ l.name $ '\' does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ trim( l.provide_xml:value ) }">

	<MvIF EXPR = "{ NOT ISNULL l.value }">
		<MvIF EXPR = "{ NOT METAValue_Set_Product( l.product:id, l.metaname:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00103', 'Created product assignment for META name \'' $ l.name $ '\' on product \'' $ l.product_code $ '\'' ) }">		
	<MvELSE>
		<MvIF EXPR = "{ NOT METAValue_Delete_Product( l.product:id, l.metaname:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00104', 'Deleted product assignment for META name \'' $ l.name $ '\' on product \'' $ l.product_code $ '\'' ) }">		
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleProvisionStore_METAFieldValue_Category" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'category_code', l.category_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'name', l.name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.category_code, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category \'' $ l.category_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Load_Name( l.name, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'META name \'' $ l.name $ '\' does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ trim( l.provide_xml:value ) }">

	<MvIF EXPR = "{ NOT ISNULL l.value }">
		<MvIF EXPR = "{ NOT METAValue_Set_Category( l.category:id, l.metaname:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00105', 'Created category assignment for META name \'' $ l.name $ '\' on category \'' $ l.category_code $ '\'' ) }">		
	<MvELSE>
		<MvIF EXPR = "{ NOT METAValue_Delete_Category( l.category:id, l.metaname:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00106', 'Deleted category assignment for META name \'' $ l.name $ '\' on category \'' $ l.category_code $ '\'' ) }">		
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleProvisionStore_METAFieldValue_Global" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'name', l.name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Load_Name( l.name, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'META name \'' $ l.name $ '\' does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ trim( l.provide_xml:value ) }">

	<MvIF EXPR = "{ NOT ISNULL l.value }">
		<MvIF EXPR = "{ NOT METAValue_Set_Global( l.metaname:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00107', 'Created global assignment for META name \'' $ l.name $ '\'' ) }">		
	<MvELSE>
		<MvIF EXPR = "{ NOT METAValue_Delete_Global_Name( l.metaname:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00108', 'Deleted global assignment for META name \'' $ l.name $ '\'' ) }">		
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleProvisionStore_METAFieldValue_Page" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'page_code', l.page_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'name', l.name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.page_code, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Page \'' $ l.page_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT METAName_Load_Name( l.name, l.metaname ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'META name \'' $ l.name $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Fork_CustomFields( l.page ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ trim( l.provide_xml:value ) }">

	<MvIF EXPR = "{ NOT ISNULL l.value }">
		<MvIF EXPR = "{ NOT METAValue_Set_Page( l.page:id, l.page:version_id, l.metaname:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00109', 'Created page assignment for META name \'' $ l.name $ '\' on page \'' $ l.page_code $ '\'' ) }">		
	<MvELSE>
		<MvIF EXPR = "{ NOT METAValue_Delete_Page( l.page:id, l.page:version_id, l.metaname:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CMP-MTA-00110', 'Deleted page assignment for META name \'' $ l.name $ '\' on page \'' $ l.page_code $ '\'' ) }">		
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.tag" VALUE = "{ tolower( l.child:name ) }">

		<MvIF EXPR = "{ l.tag EQ 'metafield_add' }">				<MvEVAL EXPR = "{ ModuleProvisionStore_METAField_Add( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'metafield_update' }">			<MvEVAL EXPR = "{ ModuleProvisionStore_METAField_Update( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'metafield_delete' }">			<MvEVAL EXPR = "{ ModuleProvisionStore_METAField_Delete( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'metafieldvalue_product' }">	<MvEVAL EXPR = "{ ModuleProvisionStore_METAFieldValue_Product( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'metafieldvalue_category' }">	<MvEVAL EXPR = "{ ModuleProvisionStore_METAFieldValue_Category( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'metafieldvalue_global' }">	<MvEVAL EXPR = "{ ModuleProvisionStore_METAFieldValue_Global( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'metafieldvalue_page' }">		<MvEVAL EXPR = "{ ModuleProvisionStore_METAFieldValue_Page( l.module, l.child ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Meta_Page_Query" PARAMETERS = "query var, metaname var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.metaname:id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CMP-MTA-00119', 'Invalid META Field' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'productcategory_meta', l.ref ) }">

	<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried">
		<MvMEMBER NAME = "{ l.metaname:name }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.queried }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.queried"	VALUE = 1>
	<MvASSIGN NAME = "l.alias"		VALUE = "{ Meta_Page_Query_Field_Alias( l.metaname ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query, [ g.Module_Library_Native_DBAPI ].DB_IFNULL( l.alias $ '.value', l.alias $ '.value_long' ), l.alias $ '_value' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pv', g.Store_Table_Prefix $ 'METAPages', l.alias, l.alias $ '.page_id = pv.page_id AND ' $ l.alias $ '.pagever_id = pv.id AND ' $ l.alias $ '.name_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.metaname:id ) ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Meta_Page_Query_Field_Alias" PARAMETERS = "metaname var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'metap_' $ int( l.metaname:id ) }">
</MvFUNCTION>

<MvINCLUDE FILE = "modules/component/cmp-mv-prodctgy-meta/functions.mv">
<MvINCLUDE FILE = "modules/component/cmp-mv-prodctgy-meta/metanamelist.mv">

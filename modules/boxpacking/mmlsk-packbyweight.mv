<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-BPK-PBW-
| Next Error Code: 28   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-packbyweight">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Pack by Weight">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1300">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.07">
	<MvASSIGN NAME = "l.module:features"	VALUE = "boxpacking, data_store, vis_pkgrules, fields_box, provision_store">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: data_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes
						  (
							box_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							max_weight	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes_1 ON ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes ( box_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'PackByWeightSettings
						  (
							exboxltd	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() $ ',
							bwincluded	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00015', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings:exboxltd"		VALUE = 1>
	<MvASSIGN NAME = "l.settings:bwincluded"	VALUE = 1>

	<MvIF EXPR = "{ NOT PackByWeightSettings_Insert( l.settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00024', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes' }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'PackByWeightSettings' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: provision_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"		VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'settings' }">	
			<MvEVAL EXPR = "{ Module_Provision_Store_Settings( l.module, l.child_xml ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Unknown tag' ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Settings" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PackByWeightSettings_Load( l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'ExcludeBoxesByDimension', l.settings:exboxltd ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'BoxWeightIncluded', 		l.settings:bwincluded ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT PackByWeightSettings_Update( l.settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: boxpacking
|
</MvCOMMENT>

<MvFUNCTION NAME = "BoxPackingModule_Box_Fields" PARAMETERS = "module var, box var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.box:id }">								<MvASSIGN NAME = "g.PackbyWeight_MaxWeight" VALUE = "0.00">
	<MvELSEIF EXPR = "{ PackByWeightBox_Load( l.box:id, l.pbw ) }">	<MvASSIGN NAME = "g.PackByWeight_MaxWeight" VALUE = "{ l.pbw:max_weight ROUND 2 }">
	<MvELSE>														<MvASSIGN NAME = "g.PackByWeight_MaxWeight" VALUE = "0.00">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "max_weight">
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.invalid" VARIABLE = "g.PackByWeight_Invalid_Fields">
		<MvMEMBER NAME = "{ l.field_id }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.invalid NE 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'max_weight' }">	<MvFUNCTIONRETURN VALUE = "<b>Max. Weight:</b>">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'max_weight' }">
		<input type="text" size="5" name="PackByWeight_MaxWeight" value="{ encodeentities( g.PackByWeight_MaxWeight ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Validate" PARAMETERS = "module var, box var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.valid"										VALUE = 1>
	<MvASSIGN NAME = "g.PackByWeight_Invalid_Fields"				VALUE = "">

	<MvASSIGN NAME = "g.PackByWeight_MaxWeight"						VALUE = "{ trim( g.PackByWeight_MaxWeight ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Currency_NonNegative_Required( g.PackByWeight_MaxWeight ) }">
		<MvIF EXPR = "{ l.valid }">
			<MvASSIGN NAME = "l.valid"								VALUE = "{ [ g.Module_Admin ].FieldError( '', 'PackByWeight_MaxWeight', g.Validation_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.valid"									VALUE = 0>
		<MvASSIGN NAME = "g.PackByWeight_Invalid_Fields:max_weight"	VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.valid }">
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Insert" PARAMETERS = "module var, box var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.PackByWeight_MaxWeight EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.pbw:box_id"		VALUE = "{ l.box:id }">
	<MvASSIGN NAME = "l.pbw:max_weight"	VALUE = "{ g.PackbyWeight_MaxWeight }">

	<MvFUNCTIONRETURN VALUE = "{ PackByWeightBox_Insert( l.pbw ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Update" PARAMETERS = "module var, box var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.PackByWeight_MaxWeight EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ PackByWeightBox_Delete( l.box:id ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pbw:box_id"		VALUE = "{ l.box:id }">
	<MvASSIGN NAME = "l.pbw:max_weight"	VALUE = "{ g.PackbyWeight_MaxWeight }">

	<MvIF EXPR = "{ PackByWeightBox_Insert( l.pbw ) }">														<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">	<MvFUNCTIONRETURN VALUE = "{ PackByWeightBox_Update( l.pbw ) }">
	<MvELSE>																								<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Delete" PARAMETERS = "module var, box_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ PackByWeightBox_Delete( l.box_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Box_Provision" PARAMETERS = "module var, box var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PackByWeightBox_Load( l.box:id, l.pbw ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pbw:box_id"		VALUE = "{ l.box:id }">
		<MvASSIGN NAME = "l.pbw:max_weight"	VALUE = 0.00>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Number( 'O', l.provide_xml, 'MaxWeight', l.pbw:max_weight, 10, 2 ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT PackByWeightBox_Insert( l.pbw ) }">
		<MvIF EXPR = "{ [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
			<MvIF EXPR = "{ NOT PackByWeightBox_Update( l.pbw ) }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>
		<MvELSE>																							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeight_SetMaxDimensions" PARAMETERS = "items var, dimensions var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.dimensions:max_length"	VALUE = 0>
	<MvASSIGN NAME = "l.dimensions:max_width"	VALUE = 0>
	<MvASSIGN NAME = "l.dimensions:max_height"	VALUE = 0>
	
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items">
		<MvIF EXPR = "{ l.item:length GT l.dimensions:max_length }">
			<MvASSIGN NAME = "l.dimensions:max_length"	VALUE = "{ l.item:length }">
		</MvIF>
		
		<MvIF EXPR = "{ l.item:width GT l.dimensions:max_width }">
			<MvASSIGN NAME = "l.dimensions:max_width"	VALUE = "{ l.item:width }">
		</MvIF>
		
		<MvIF EXPR = "{ l.item:height GT l.dimensions:max_height }">
			<MvASSIGN NAME = "l.dimensions:max_height"	VALUE = "{ l.item:height }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "BoxPackingModule_Pack_Items" PARAMETERS = "module var, items var, item_count, packages var" STANDARDOUTPUTLEVEL = "">
    <MvIF EXPR = "{ NOT PackByWeightSettings_Load( l.settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.settings:exboxltd }">
		<MvASSIGN NAME = "l.box_count"	VALUE = "{ BoxList_Load_Enabled_WithWeightAndArea( l.boxes ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ PackByWeight_SetMaxDimensions( l.items, l.dimensions ) }">
		<MvASSIGN NAME = "l.box_count"	VALUE = "{ BoxList_Load_Enabled_WithWeightAndArea_DimensionRestricted( l.dimensions, l.boxes ) }">
	</MvIF>
	
	<MvIF EXPR = "{ l.box_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_sort( l.items, 'PackByWeight_ItemSort_Weight', l.null ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_sort( l.boxes, 'PackByWeight_BoxSort_Weight', l.null ) }">
	<MvASSIGN NAME = "l.package_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items" INDEX = "l.item_index" COUNT = "{ l.item_count }">
		<MvCOMMENT>
		|
		| Attempt to assign the item to an existing package using the current algorithm
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ PackByWeight_Pack_Item_FirstFit( l.packages, l.package_count, l.item ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvCOMMENT>
		|
		| See if we can make an existing box bigger to fit this new item
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.promotable" VALUE = "{ PackByWeight_Promote_Package_FirstFit( l.boxes, l.packages, l.package_count, l.item, l.promotable_box ) }">

		<MvIF EXPR = "{ l.promotable }">
			<MvEVAL EXPR = "{ PackByWeight_Promote_Package( l.packages[ l.promotable ], l.promotable_box ) }">
			<MvEVAL EXPR = "{ PackByWeight_Package_Item( l.packages[ l.promotable ], l.item ) }">
		<MvELSE>
			<MvCOMMENT>
			|
			| Add a new box for this item.  This loop selects the smallest box with the lowest area
			| that will fit the new item.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.new_box"			VALUE = "">

			<MvFOREACH ITERATOR = "l.box" ARRAY = "l.boxes">
				<MvIF EXPR = "{ l.box:max_weight GE l.item:weight }">
					<MvASSIGN NAME = "l.new_box"	VALUE = "{ l.box }">
					<MvFOREACHSTOP>
				</MvIF>
			</MvFOREACH>

			<MvCOMMENT>
			|
			| Fail if there are no boxes that will contain this item
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ ISNULL l.new_box }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ PackByWeight_Create_Package( l.new_box, l.packages, l.package_count, l.item ) }">
		</MvIF>

		<MvIF EXPR = "{ l.settings:exboxltd AND ( l.item_count - l.item_index GT 0 ) }">
			<MvASSIGN NAME = "l.remaining_items" 	VALUE = "">
			<MvASSIGN NAME = "l.remaining_count" 	VALUE = "{ miva_array_copy_ref( l.items, l.item_index + 1, l.item_count - l.item_index + 2, l.remaining_items, -1 ) }">	

			<MvASSIGN NAME = "l.dimensions"			VALUE = "">
			<MvEVAL EXPR = "{ PackByWeight_SetMaxDimensions( l.remaining_items, l.dimensions ) }">

			<MvASSIGN NAME = "l.boxes" 				VALUE = "">
			<MvASSIGN NAME = "l.box_count" 			VALUE = "{ BoxList_Load_Enabled_WithWeightAndArea_DimensionRestricted( l.dimensions, l.boxes ) }">

			<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_sort( l.boxes, 'PackByWeight_BoxSort_Weight', l.null ) }">
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Add the associated box weight to each package weight
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.package" ARRAY = "l.packages" COUNT = "{ l.package_count }">
		<MvASSIGN NAME = "l.package:weight" VALUE = "{ l.package:weight + l.package:box:weight }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.package_count }">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: vis_pkgrules
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_PackagingRules_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.PackByWeight_Settings:exboxltd"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.PackByWeight_Settings:exboxltd ) }">
	<MvASSIGN NAME = "g.PackByWeight_Settings:bwincluded"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.PackByWeight_Settings:bwincluded ) }">
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_PackagingRules_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ PackByWeightSettings_Update( g.PackByWeight_Settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_PackagingRules_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_PackagingRules_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.module:code $ ':' $ l.module:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_PackagingRules_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvIF EXPR = "{ NOT PackByWeightSettings_Load( g.PackByWeight_Settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ l.module:code }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
		<tr><td nowrap>
			<b>&nbsp;</b>
		</td><td width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( g.PackByWeight_Settings:exboxltd, 'PackByWeight_Settings:exboxltd', 1, 'Exclude Boxes Smaller than Product Dimensions' ) }">
		</td></tr>
		<tr><td nowrap>
			<b>&nbsp;</b>
		</td><td width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( g.PackByWeight_Settings:bwincluded, 'PackByWeight_Settings:bwincluded', 1, 'Include Box Weight in Maximum Weight Calculation' ) }">
		</td></tr>
		</table>
	<MvELSE>
		<MvHIDE FIELDS = "g.PackByWeight_Settings">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: fields_box
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Box_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields" INDEX = 1 MEMBER = "code"	VALUE = "max_weight">
	<MvASSIGN NAME = "l.fields" INDEX = 1 MEMBER = "name"	VALUE = "Max. Weight">
	<MvASSIGN NAME = "l.fields" INDEX = 1 MEMBER = "type"	VALUE = "numeric:2">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code EQ 'max_weight' }">
		<MvFUNCTIONRETURN VALUE = "Max. Weight">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Value" PARAMETERS = "module var, box_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code NE 'max_weight' }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ PackByWeightBox_Load( l.box_id, l.pbw ) }">
		<MvFUNCTIONRETURN VALUE = "{ l.pbw:max_weight }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0.00>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Set_Field" PARAMETERS = "module var, box_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code NE 'max_weight' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.pbw:box_id"		VALUE = "{ l.box_id }">
	<MvASSIGN NAME = "l.pbw:max_weight"	VALUE = "{ l.value ROUND 2 }">

	<MvIF EXPR = "{ PackByWeightBox_Insert( l.pbw ) }">														<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">	<MvFUNCTIONRETURN VALUE = "{ PackByWeightBox_Update( l.pbw ) }">
	<MvELSE>																								<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"				VALUE = "">

	<MvIF EXPR = "{ l.code EQ 'max_weight' }">
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code NE 'max_weight' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00025', 'Unsupported field code' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'packbyweight', l.ref ) }">

	<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried_codes">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.queried }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_NUMBER( l.query, 'pbw.max_weight', 'pbw_max_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'box', g.Store_Table_Prefix $ 'PackByWeightBoxes', 'pbw', 'pbw.box_id = box.id', '' ) }">

	<MvASSIGN NAME = "l.queried"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code EQ 'max_weight' }">	<MvASSIGN NAME = "l.column" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'pbw.max_weight', '0.00' ) }">
	<MvELSE>									<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00026', 'Unsupported field code' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Module_Box_Field_Query( l.module, l.query, l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.operator EQ 'IN' OR
					l.operator EQ 'NOT_IN' }">			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_CommaSeparatedList_With_Type( l.query, 'NUMBER', l.column, l.operator, l.value ) }">
	<MvELSE>
		<MvIF EXPR = "{ l.operator EQ 'EQ' }">			<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_EQ(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'GT' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_GT(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'GE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_GE(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'LT' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_LT(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'LE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_LE(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'CO' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_CO(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'NC' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_NC(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'LIKE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_LIKE(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'NOTLIKE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_NOTLIKE(	'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'NE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_NE(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'TRUE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_TRUE(		'NUMBER', l.column, l.value ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'FALSE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Filter_FALSE(	'NUMBER', l.column, l.value ) }">
		</MvIF>

		<MvIF EXPR = "{ l.operator EQ 'TRUE' OR l.operator EQ 'FALSE' }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.where_sql, '' ) }">
		<MvELSE>															<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.where_sql, [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.code NE 'max_weight' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00027', 'Unsupported field code' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Module_Box_Field_Query( l.module, l.query, l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY_Flag_With_Alias_And_Member( l.query, 'pbw.max_weight', 'pbw_max_weight', 'pbw:max_weight', l.direction, 'null_number' ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, box_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PackByWeightBox_Load( l.box_id, l.loaded_record:pbw ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Box_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_variable_value( l.view_name $ '.d.pbw_max_weight' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Database Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "PackByWeightBox_Read" PARAMETERS = "pbw var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pbw:box_id"		VALUE = "{ PackByWeightBoxes.d.box_id }">
	<MvASSIGN NAME = "l.pbw:max_weight"	VALUE = "{ PackByWeightBoxes.d.max_weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeightBox_Load" PARAMETERS = "box_id, pbw var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PackByWeightBoxes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes WHERE box_id = ?' }"
				FIELDS	= "l.box_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00008', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PackByWeightBoxes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PackByWeightBoxes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-BPK-PBW-00009' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PackByWeightBox_Read( l.pbw ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PackByWeightBoxes">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeightBox_Insert" PARAMETERS = "pbw var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes
						  ( box_id, max_weight )
						  VALUES
						  ( ?, ? )' }"
			 FIELDS	= "l.pbw:box_id, l.pbw:max_weight">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeightBox_Update" PARAMETERS = "pbw var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes
						  SET
							max_weight	= ?
						  WHERE
							box_id		= ?' }"
			 FIELDS	= "l.pbw:max_weight,
					   l.pbw:box_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeightBox_Delete" PARAMETERS = "box_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'PackByWeightBoxes WHERE box_id = ?' }"
			 FIELDS	= "l.box_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BoxList_Load_Enabled_WithWeightAndArea_DimensionRestricted" PARAMETERS = "dimensions var, boxes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Boxes"
				QUERY	= "{ 'SELECT
								b.*,
								pqb.max_weight,
								pbws.bwincluded
							  FROM
								' $ g.Store_Table_Prefix $ 'Boxes b,
								' $ g.Store_Table_Prefix $ 'PackByWeightBoxes pqb,
								' $ g.Store_Table_Prefix $ 'PackByWeightSettings pbws
							  WHERE
								b.length		>= ?	AND
								b.width			>= ?	AND
								b.height		>= ?	AND
								b.enabled		= 1		AND
								pqb.box_id		= b.id	AND
								pqb.max_weight	> 0' }"
				FIELDS = "l.dimensions:max_length, l.dimensions:max_width, l.dimensions:max_height">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00017', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.box_count"														VALUE = 0>
	<MvWHILE EXPR = "{ NOT Boxes.d.EOF }">
		<MvASSIGN NAME = "l.box_count"													VALUE = "{ l.box_count + 1 }">

		<MvEVAL EXPR = "{ [ g.Module_Feature_SHP_DB ].Box_Read( l.boxes[ l.box_count ] ) }">

		<MvASSIGN NAME = "l.boxes" 		INDEX = "{ l.box_count }" MEMBER = "area"		VALUE = "{ Boxes.d.width * Boxes.d.length * Boxes.d.height }">
		<MvASSIGN NAME = "l.boxes" 		INDEX = "{ l.box_count }" MEMBER = "max_weight"	VALUE = "{ Boxes.d.max_weight }">

		<MvIF EXPR = "{ Boxes.d.bwincluded }">
			<MvASSIGN NAME = "l.boxes" 	INDEX = "{ l.box_count }" MEMBER = "max_weight" VALUE = "{ l.boxes[ l.box_count ]:max_weight - Boxes.d.weight }">
		</MvIF>
		
		<MvSKIP NAME = "Merchant" VIEW = "Boxes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Boxes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-BPK-PBW-00018', l.box_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BoxList_Load_Enabled_WithWeightAndArea" PARAMETERS = "boxes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Boxes"
				QUERY	= "{ 'SELECT
								b.*,
								pqb.max_weight,
								pbws.bwincluded
							  FROM
								' $ g.Store_Table_Prefix $ 'Boxes b,
								' $ g.Store_Table_Prefix $ 'PackByWeightBoxes pqb,
								' $ g.Store_Table_Prefix $ 'PackByWeightSettings pbws
							  WHERE
								b.enabled		= 1		AND
								pqb.box_id		= b.id	AND
								pqb.max_weight	> 0' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.box_count"														VALUE = 0>
	<MvWHILE EXPR = "{ NOT Boxes.d.EOF }">
		<MvASSIGN NAME = "l.box_count"													VALUE = "{ l.box_count + 1 }">

		<MvEVAL EXPR = "{ [ g.Module_Feature_SHP_DB ].Box_Read( l.boxes[ l.box_count ] ) }">

		<MvASSIGN NAME = "l.boxes"		INDEX = "{ l.box_count }" MEMBER = "area"		VALUE = "{ Boxes.d.width * Boxes.d.length * Boxes.d.height }">
		<MvASSIGN NAME = "l.boxes"		INDEX = "{ l.box_count }" MEMBER = "max_weight"	VALUE = "{ Boxes.d.max_weight }">
		
		<MvIF EXPR = "{ Boxes.d.bwincluded }">
			<MvASSIGN NAME = "l.boxes"	INDEX = "{ l.box_count }" MEMBER = "max_weight" VALUE = "{ l.boxes[ l.box_count ]:max_weight - Boxes.d.weight }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Boxes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Boxes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-BPK-PBW-00014', l.box_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeightSettings_Insert" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'PackByWeightSettings
						  ( exboxltd, bwincluded )
						  VALUES
						  ( ?, ? )' }"
			 FIELDS	= "l.settings:exboxltd, l.settings:bwincluded">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00019', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeightSettings_Update" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PackByWeightSettings
						  SET
							exboxltd 	= ?,
							bwincluded	= ?' }"
			 FIELDS	= "l.settings:exboxltd, l.settings:bwincluded">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00020', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeightSettings_Load" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PackByWeightSettings"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PackByWeightSettings' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-BPK-PBW-00021', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PackByWeightSettings.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PackByWeightSettings">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-BPK-PBW-00022' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings:exboxltd"		VALUE = "{ PackByWeightSettings.d.exboxltd }">
	<MvASSIGN NAME = "l.settings:bwincluded"	VALUE = "{ PackByWeightSettings.d.bwincluded }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PackByWeightSettings">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Routines
|
</MvCOMMENT>

<MvFUNCTION NAME = "PackByWeight_ItemSort_Weight" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Sort by weight descending
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:weight GT l.right:weight }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:weight LT l.right:weight }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeight_BoxSort_Weight" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Sort by area ascending then weight ascending to avoid selecting an abnormally large box for light weight items
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:area LT l.right:area }">					<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:area GT l.right:area }">				<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:max_weight LT l.right:max_weight }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:max_weight GT l.right:max_weight }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "max" PARAMETERS = "a var, b var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.a GT l.b }">
		<MvFUNCTIONRETURN VALUE = "{ l.a }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.b }">
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeight_Pack_Item_FirstFit" PARAMETERS = "packages var, package_count, item var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.package" ARRAY = "l.packages" COUNT = "{ l.package_count }">
		<MvIF EXPR = "{ l.package:remaining GE l.item:weight }">
			<MvEVAL EXPR = "{ PackByWeight_Package_Item( l.package, l.item ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeight_Promote_Package_FirstFit" PARAMETERS = "boxes var, packages var, package_count, item var, promotable_box var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.index" ITERATOR = "l.package" ARRAY = "l.packages" COUNT = "{ l.package_count }">
		<MvFOREACH ITERATOR = "l.box" ARRAY = "l.boxes">
			<MvIF EXPR = "{ ( ( l.box:max_weight - l.package:box:max_weight ) + l.package:remaining ) GE l.item:weight }">
				<MvASSIGN NAME = "l.promotable_box"	VALUE = "{ l.box }">
				<MvFUNCTIONRETURN VALUE = "{ l.index }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeight_Create_Package" PARAMETERS = "box var, packages var, package_count var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.package_count"				VALUE = "{ l.package_count + 1 }">
	<MvREFERENCEARRAY NAME = "l.package" VARIABLE = "l.packages">
		<MvDIMENSION INDEX = "{ l.package_count }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.package:box"				VALUE = "{ l.box }">
	<MvASSIGN NAME = "l.package:width"				VALUE = "{ l.box:width }">
	<MvASSIGN NAME = "l.package:length"				VALUE = "{ l.box:length }">
	<MvASSIGN NAME = "l.package:height"				VALUE = "{ l.box:height }">
	<MvASSIGN NAME = "l.package:item_count"			VALUE = 1>
	<MvASSIGN NAME = "l.package:items" INDEX = 1	VALUE = "{ l.item }">
	<MvASSIGN NAME = "l.package:weight"				VALUE = "{ l.item:weight }">
	<MvASSIGN NAME = "l.package:remaining"			VALUE = "{ l.box:max_weight - l.item:weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeight_Promote_Package" PARAMETERS = "package var, box var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.package:remaining"			VALUE = "{ ( l.box:max_weight - l.package:box:max_weight ) + l.package:remaining }">
	<MvASSIGN NAME = "l.package:box"				VALUE = "{ l.box }">
	<MvASSIGN NAME = "l.package:width"				VALUE = "{ l.box:width }">
	<MvASSIGN NAME = "l.package:length"				VALUE = "{ l.box:length }">
	<MvASSIGN NAME = "l.package:height"				VALUE = "{ l.box:height }">
</MvFUNCTION>

<MvFUNCTION NAME = "PackByWeight_Package_Item" PARAMETERS = "package var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.package:item_count"														VALUE = "{ l.package:item_count + 1 }">
	<MvASSIGN NAME = "l.package:items" INDEX = "{ l.package:item_count }"						VALUE = "{ l.item }">
	<MvASSIGN NAME = "l.package:weight"															VALUE = "{ l.package:weight + l.item:weight }">
	<MvASSIGN NAME = "l.package:remaining"														VALUE = "{ l.package:remaining - l.item:weight }">
</MvFUNCTION>

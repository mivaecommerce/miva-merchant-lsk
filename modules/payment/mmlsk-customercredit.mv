<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2020 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-PAY-CCB-
| Next Error Code: 5    
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-customercredit">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Customer Credit">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0000">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.05">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Use this module to enable customers to make partial or full payments using their customer account credit balance.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "payment">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:split"		VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:balance"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_LeftNavigation" PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Methods" PARAMETERS = "module var, methods var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Basket:cust_id AND ( g.Customer:credit GT 0 ) }">
		<MvASSIGN NAME = "l.methods" INDEX = 1 MEMBER = "code"	VALUE = "credit">
		<MvASSIGN NAME = "l.methods" INDEX = 1 MEMBER = "name"	VALUE = "{ 'Apply Credit Balance (' $ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, g.Customer:credit ) $ ')' }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Enabled_Methods" PARAMETERS = "module var, methods var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.methods" INDEX = 1 MEMBER = "code"	VALUE = "credit">
	<MvASSIGN NAME = "l.methods" INDEX = 1 MEMBER = "name"	VALUE = "Apply Credit Balance">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_URL" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Description" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "Customer Credit">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Message" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Hide_Additional_Fields" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Fields" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Prompt" PARAMETERS = "module var, data, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Invalid" PARAMETERS = "module var, data, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Field" PARAMETERS = "module var, data, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Payment_Validate" PARAMETERS = "module var, pay_data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Report_Description" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "Customer Credit">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Report_Fields" PARAMETERS = "module var, data, secure_data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Report_Label" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Report_Value" PARAMETERS = "module var, field_id, data, secure_data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Manipulate_Shipping" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Authorize" PARAMETERS = "module var, module_data, total, data var, secure_data var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Runtime_Authorize" PARAMETERS = "module var, module_data, total" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( NOT g.Basket:cust_id ) OR ( g.Customer:credit LE 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error_PaymentMethod_Invalid() }">
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerCredit_Authorize( l.module, g.Basket:cust_id, g.Basket:order_id, l.total, l.orderpayment ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Message_Error( encodeentities( g.Error_Message ) ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Runtime_SplitPayment_Prepare" PARAMETERS = "module var, module_data, total, split_payment_data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( NOT g.Basket:cust_id ) OR ( g.Customer:credit LE 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error_PaymentMethod_Invalid() }">
	</MvIF>

	<MvIF EXPR = "{ l.total GT g.Customer:credit }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Message_Error( 'Insufficient account credit balance.' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Runtime_SplitPayment_Authorize" PARAMETERS = "module var, module_data, total, split_payment_data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerCredit_Authorize( l.module, g.Basket:cust_id, g.Basket:order_id, l.total, l.orderpayment ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Message_Error( encodeentities( g.Error_Message ) ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.split_payment_data:orderpayment_id"	VALUE = "{ l.orderpayment:id }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Runtime_SplitPayment_Rollback" PARAMETERS = "module var, module_data, total, split_payment_data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderPayment_Load_ID( l.split_payment_data:orderpayment_id, l.orderpayment ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.pay_data"	VALUE = "{ miva_array_deserialize( l.orderpayment:pay_data ) }">

	<MvCOMMENT>
	|
	| Delete the CustomerCreditHistory entry and update the customer credit balance
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerCreditHistory_Delete_ID( l.pay_data:history_id ) OR
					NOT [ g.Module_Feature_CUS_DB ].Customer_Adjust_Credit( l.pay_data:cust_id, l.total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Delete the OrderPayment
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].OrderPayment_Delete( l.orderpayment ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize_Methods" PARAMETERS = "module var, order var, methods var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.order:cust_id EQ 0 }">																<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.order:cust_id, l.customer ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ l.customer:credit LE 0 }">															<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.methods" INDEX = 1 MEMBER = "code"	VALUE = "credit">
	<MvASSIGN NAME = "l.methods" INDEX = 1 MEMBER = "name"	VALUE = "{ 'Apply Credit Balance (' $ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.customer:credit ) $ ')' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize_Hide_Additional_Fields" PARAMETERS = "module var, order var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize_Fields" PARAMETERS = "module var, order var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize_Prompt" PARAMETERS = "module var, order var, data, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize_Invalid" PARAMETERS = "module var, order var, data, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize_Field" PARAMETERS = "module var, order var, data, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize_Validate" PARAMETERS = "module var, order var, pay_data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Authorize" PARAMETERS = "module var, module_data, order var, amount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.order:cust_id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error_PaymentMethod_Invalid() }">
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerCredit_Authorize( l.module, l.order:cust_id, l.order:id, l.amount, l.orderpayment ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Process" PARAMETERS = "module var, data var, secure_data var, order var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_OrderPayment_Capture" PARAMETERS = "module var, order var, auth_payment var, auth_pay_data var, auth_secure_data var, amount" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_OrderPayment_Refund" PARAMETERS = "module var, order var, capture_payment var, capture_pay_data var, capture_secure_data var, amount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.capture_payment:type NE 2 ) AND ( l.capture_payment:type NE 4 ) AND ( l.capture_payment:type NE 5 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-CCB-00001', 'Invalid transaction type' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Reduce the available amount of the existing transaction
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.capture_payment:available"	VALUE = "{ l.capture_payment:available - l.amount }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderPayment_Update_Amounts( l.capture_payment ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Credit the customer and create a refund transaction
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.entry:user_id"				VALUE = "{ g.Session:user_id }">
	<MvASSIGN NAME = "l.entry:cust_id"				VALUE = "{ l.capture_pay_data:cust_id }">
	<MvASSIGN NAME = "l.entry:order_id"				VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "l.entry:txref"				VALUE = "{ l.capture_pay_data:history_id }">
	<MvASSIGN NAME = "l.entry:descrip"				VALUE = "{ 'Refund for order #' $ l.order:id }">
	<MvASSIGN NAME = "l.entry:amount"				VALUE = "{ l.amount }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerCreditHistory_Insert( l.entry ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.refund_pay_data:cust_id"	VALUE = "{ l.capture_pay_data:cust_id }">
	<MvASSIGN NAME = "l.refund_pay_data:history_id"	VALUE = "{ l.entry:id }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderPayment_Create( l.order:id,
																	 l.capture_payment:id,
																	 6, 
																	 l.entry:id,
																	 l.amount, l.amount,
																	 l.module:id,
																	 l.refund_pay_data,
																	 l.null ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_OrderPayment_VOID" PARAMETERS = "module var, order var, auth_payment var, auth_pay_data var, auth_secure_data var, amount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.auth_payment:type NE 1 ) AND ( l.auth_payment:type NE 2 ) AND ( l.auth_payment:type NE 3 ) AND ( l.auth_payment:type NE 4 ) AND ( l.auth_payment:type NE 5 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-CCB-00002', 'Invalid transaction type' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.amount NE l.auth_payment:available }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-CCB-00003', 'Voids must be for the entire transaction amount' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Delete the CustomerCreditHistory entry and update the customer credit balance
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerCreditHistory_Delete_ID( l.auth_pay_data:history_id ) OR
					NOT [ g.Module_Feature_CUS_DB ].Customer_Adjust_Credit( l.auth_pay_data:cust_id, l.amount ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Update the type of the existing transaction to be VOID
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.auth_payment:type"				VALUE = 7>
	<MvASSIGN NAME = "l.auth_payment:available"			VALUE = 0>
			
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderPayment_Update( l.auth_payment, l.auth_pay_data, l.auth_secure_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Update" PARAMETERS = "module var, data var, secure_data var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Delete" PARAMETERS = "module var, data, secure_data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Head" PARAMETERS = "module var, tab, order var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Order_Content" PARAMETERS = "module var, tab, load_fields, data, secure_data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentModule_Balance" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Basket:cust_id }">
		<MvFUNCTIONRETURN VALUE = "{ g.Customer:credit }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0.00>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerCredit_Authorize" PARAMETERS = "module var, cust_id, order_id, amount, orderpayment var" STANDARDOUTPUTLEVEL = "">
	<MvLOCKFILE FILE = "{ g.MerchantPath $ 'customercredit-' $ crypto_md5( l.cust_id $ ' credit authorization' ) }">
		<MvASSIGN NAME = "l.result"	VALUE = "{ CustomerCredit_Authorize_LowLevel( l.module, l.cust_id, l.order_id, l.amount, l.orderpayment ) }">
	</MvLOCKFILE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerCredit_Authorize_LowLevel" PARAMETERS = "module var, cust_id, order_id, amount, orderpayment var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.cust_id, l.customer ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.customer:credit LT l.amount }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-CCB-00004', 'Insufficient account credit balance.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Session:user_id }">
		<MvASSIGN NAME = "l.entry:user_id"		VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.entry:user_id"		VALUE = "{ g.Session:user_id }">
	</MvIF>

	<MvASSIGN NAME = "l.entry:cust_id"			VALUE = "{ l.customer:id }">
	<MvASSIGN NAME = "l.entry:order_id"			VALUE = "{ l.order_id }">
	<MvASSIGN NAME = "l.entry:descrip"			VALUE = "{ 'Payment for order #' $ l.order_id }">
	<MvASSIGN NAME = "l.entry:amount"			VALUE = "{ 0 - l.amount }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerCreditHistory_Insert( l.entry ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.data:cust_id"			VALUE = "{ l.cust_id }">
	<MvASSIGN NAME = "l.data:history_id"		VALUE = "{ l.entry:id }">

	<MvASSIGN NAME = "l.orderpayment"			VALUE = "">
	<MvASSIGN NAME = "l.orderpayment:order_id"	VALUE = "{ l.order_id }">
	<MvASSIGN NAME = "l.orderpayment:parent_id"	VALUE = 0>
	<MvASSIGN NAME = "l.orderpayment:type"		VALUE = 5>
	<MvASSIGN NAME = "l.orderpayment:refnum"	VALUE = "{ l.entry:id }">
	<MvASSIGN NAME = "l.orderpayment:amount"	VALUE = "{ l.amount }">
	<MvASSIGN NAME = "l.orderpayment:available"	VALUE = "{ l.amount }">
	<MvASSIGN NAME = "l.orderpayment:dtstamp"	VALUE = "{ s.time_t }">
	<MvASSIGN NAME = "l.orderpayment:expires"	VALUE = "">
	<MvASSIGN NAME = "l.orderpayment:pay_id"	VALUE = "{ l.module:id }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].v9_OrderPayment_Create( l.orderpayment, l.data, l.null ) }">
</MvFUNCTION>

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-UTL-CBF-
| Next Error Code: 147
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-combofacets">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Combination Facets">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1201">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.08">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Combination Facets (a combination of multiple facets) gives you the ability to create your own facet type.  For example: year, make and model.  Once a combination facet is selected, all product lists that use facets will automatically be filtered to only show products matching the selected facet.  This module also provides easy to customize menus, which update dynamically as customers choose facets that are linked together.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "util, vis_util, vis_store, vis_product, prod_facet, fields_prod, not_prod, data_store, component, provision_store, clientside, clientside_sri, json, copy_prod, rt_basketitem, vis_cust, vis_custbe, log, not_cust">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: data_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| sNN_CombinationFacets
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CombinationFacets
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							enabled		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							inclother	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							createfit	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							variantsrc	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacets_1 ON ' $ g.Store_Table_Prefix $ 'CombinationFacets ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacets_2 ON ' $ g.Store_Table_Prefix $ 'CombinationFacets ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacets_3 ON ' $ g.Store_Table_Prefix $ 'CombinationFacets ( disp_order )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00060', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CombinationFacets', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CombinationFacetDisplayOrder', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CombinationFacetFields
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetFields
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							facet_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							sort_desc	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetFields_1 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetFields_2 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetFields ( facet_id, code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetFields_3 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetFields ( facet_id, disp_order )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CombinationFacetFields', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CombinationFacetFieldDisplayOrder', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CombinationFacetProducts
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts
						  (
							facet_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00074', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts_1 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts ( facet_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00075', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts_2 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00076', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts_3 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts ( facet_id, product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00077', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CombinationFacetValues
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetValues
						  (
							record_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							facet_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 ) 	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetValues_1 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetValues ( record_id, field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetValues_2 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetValues ( product_id, field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetValues_3 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetValues ( field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetValues_4 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetValues ( facet_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CombinationFacetRecords', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CombinationFacetCustomerApplications
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							cust_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							facet_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							lastused	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00096', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications_1 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00097', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications_2 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications ( cust_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00098', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications_3 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications ( facet_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00099', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CombinationFacetCustomerApplications', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CombinationFacetCustomerApplicationFields
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields
						  (
							appl_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							facet_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 ) 	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00100', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields_1 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields ( appl_id, field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00101', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields_2 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields ( field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00102', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields_3 ON ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields ( facet_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00103', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| JS Resources
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ Generate_JavaScript_Code( l.js_template_code ) }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Register_Global_JavaScriptResource_LocalFile_WithContent( 'modules', 'runtime_combofacets.js', l.js_template_code, l.scriptresource ) }">

	<MvIF EXPR = "{ NOT miva_array_search( l.scriptresource:attributes, 1, l.attribute, 'l.attribute:name EQ \'async\' OR l.attribute:name EQ \'defer\'' ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.scriptresource:attributes, miva_array_deserialize( ':name=async' ), -1 ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.scriptresource:attributes, miva_array_deserialize( ':name=defer' ), -1 ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].JavaScriptResource_Update( l.scriptresource ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Items
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'combination_facets', l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'combination_facets', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| CSS Resources
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ Generate_CSS_Code( l.css_template_code ) }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Register_Global_CSSResource_LocalFile_WithContent( 'modules', 'combofacets.css', l.css_template_code, l.null ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00013', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CombinationFacets' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CombinationFacetDisplayOrder' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CombinationFacetFields' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CombinationFacetFieldDisplayOrder' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CombinationFacetRecords' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CombinationFacetCustomerApplications' ) }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacets' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetValues' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields' }">

	<MvASSIGN NAME = "l.store_folder"		VALUE = "{ padl( g.Store:id, 8, '0' ) }">
	<MvASSIGN NAME = "l.abs_file_path_js"	VALUE = "{ g.imageroot $ 'scripts/' $ l.store_folder $ '/runtime_combofacets.js' }">
	<MvASSIGN NAME = "l.rel_file_path_js"	VALUE = "{ 'scripts/' $ l.store_folder $ '/runtime_combofacets.js' }">
	<MvASSIGN NAME = "l.abs_file_path_css"	VALUE = "{ g.imageroot $ 'css/' $ l.store_folder $ '/combofacets.css' }">
	<MvASSIGN NAME = "l.rel_file_path_css"	VALUE = "{ 'css/' $ l.store_folder $ '/combofacets.css' }">

	<MvIF EXPR = "{ sexists( l.abs_file_path_js ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ sdelete( l.abs_file_path_js ) }">
	</MvIF>

	<MvIF EXPR = "{ sexists( l.abs_file_path_css ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ sdelete( l.abs_file_path_css ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_JavaScriptResource_File( l.rel_file_path_js ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_CSSResource_File( l.rel_file_path_css ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Edit Store Screen Feature (vis_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Store_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.tabs, 'GT_UISETTINGS/' $ l.module:code $ '-' $ l.facet:id $ ':Combination Facet (' $ glosub( l.facet:code, ',', '' ) $ ') Menu Layout', -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvASSIGN NAME = "l.field_prefix"		VALUE = "{ 'CombinationFacets:' $ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.facet:code ) $ ':' }">
		<MvREFERENCEARRAY NAME = "l.fields"		VARIABLE = "g.CombinationFacets">
			<MvMEMBER NAME = "{ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.facet:code ) }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.module:code $ '-' $ l.facet:code, l.field_prefix $ 'template_code', g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvASSIGN NAME = "l.field_prefix"		VALUE = "{ 'CombinationFacets:' $ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.facet:code ) $ ':' }">
		<MvREFERENCEARRAY NAME = "l.fields"		VARIABLE = "g.CombinationFacets">
			<MvMEMBER NAME = "{ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.facet:code ) }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.filename" VALUE = "{ CombinationFacet_Template_Filename( l.facet ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.filename, l.managedtemplate ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ Generate_Template_Code( l.template_source ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.template_source, l.null_settings, l.filename ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.filename, l.managedtemplate ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.fields:template_code, l.null_settings ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( l.module:code $ '-' $ l.facet:code, l.field_prefix $ 'template_code', g.Error_Message ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.CombinationFacets"	VALUE = "">
	</MvIF>

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvASSIGN NAME = "l.field_prefix"		VALUE = "{ 'CombinationFacets:' $ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.facet:code ) $ ':' }">
		<MvREFERENCEARRAY NAME = "l.fields"		VARIABLE = "g.CombinationFacets">
			<MvMEMBER NAME = "{ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.facet:code ) }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ l.load_fields }">
			<MvASSIGN NAME = "l.filename" VALUE = "{ CombinationFacet_Template_Filename( l.facet ) }">

			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.filename, l.managedtemplateversion ) }">
				<MvASSIGN NAME = "l.fields:template_code"		VALUE = "{ l.managedtemplateversion:source }">
				<MvASSIGN NAME = "l.fields:template_version"	VALUE = "{ l.managedtemplateversion:id }">
				<MvASSIGN NAME = "l.template_id"				VALUE = "{ l.managedtemplateversion:templ_id }">
			<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvASSIGN NAME = "l.fields:template_code"		VALUE = "">
				<MvASSIGN NAME = "l.fields:template_version"	VALUE = "">
				<MvASSIGN NAME = "l.template_id"				VALUE = 0>
			<MvELSE>
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.module:code $ '-' $ l.facet:id ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_code,template_version' ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_UISETTINGS', l.module:code $ '-' $ l.facet:id ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_version' ) }">
			<table border=0 cellpadding=2 cellspacing=0 width="100%">
				<tr><td colspan="2" width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 100, l.template_id ) }">
				</td></tr>
			</table>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: util
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation" PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: vis_util
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Utility_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.module:code $ ':' $ l.module:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab NE l.module:code }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].JavaScript_SetVariables( 'g', 'adminurl,sessionurl,clientside_url,AdminGraphics_Path,Store_Code' ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AJAX_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_UI_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Functions_JavaScript() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
	<MvEVAL EXPR = "{ Element_CombinationFacet_List_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_CombinationFacet_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacet_List_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacet_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script language="JavaScript">
		MMScreen_LoadFinished( function() { new CombinationFacetList(); } );
	</script>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.tab NE l.module:code }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
	<MvEVAL EXPR = "{ Element_CombinationFacet_List_HTML( l.module ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: vis_product
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Head" PARAMETERS = "module var, tab, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.product:id OR ( ( ( l.module:code $ '-' ) IN l.tab ) NE 1 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].JavaScript_SetVariables( 'g', 'adminurl,sessionurl,clientside_url,AdminGraphics_Path,Store_Code' ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AJAX_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_UI_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Functions_JavaScript() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
	<MvEVAL EXPR = "{ Element_CombinationFacetRecord_List_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_CombinationFacet_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacetRecord_List_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacet_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Tabs" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.product:id }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled( l.facets ) }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ miva_array_insert( l.tabs, l.module:code $ '-' $ l.facet:id $ ':' $ glosub( l.facet:name, ',', '' ), -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Content" PARAMETERS = "module var, tab, load_fields, product var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT l.product:id OR ( ( ( l.module:code $ '-' ) IN l.tab ) NE 1 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.facet_id"		VALUE = "{ substring_var( l.tab, len( l.module:code $ '-' ) + 1, len( l.tab ) - len( l.module:code $ '-' ) ) }">

	<MvIF EXPR = "{ NOT CombinationFacet_Load_ID( l.facet_id, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<script language="JavaScript">
		MMScreen_LoadFinished( function()
		{
			new CombinationFacetRecordList( MMScreenContext.product,
										    {
											   "id":		<MvEVAL EXPR = "{ int( l.facet:id ) }">,
											   "enabled":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.facet:enabled ) }">,
											   "inclother":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.facet:inclother ) }">,
											   "createfit":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.facet:createfit ) }">,
											   "code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:code ) }">",
											   "name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:name ) }">",
											   "fields":
											   [
													<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ CombinationFacetFieldList_Load_Facet( l.facet:id, l.fields ) }">
														<MvIF EXPR = "{ l.field_pos GT 1 }">
															,
														</MvIF>

														{
														   "id":		<MvEVAL EXPR = "{ int( l.field:id ) }">,
														   "code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:code ) }">",
														   "name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:name ) }">"
														}
													</MvFOREACH>
											   ]
										    } );
		} );
	</script>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
	<MvEVAL EXPR = "{ Element_CombinationFacetRecord_List_HTML( l.module ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: prod_facet
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Facets" PARAMETERS = "module var, facets var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvASSIGN NAME = "l.facets"								VALUE = 0>
	<MvASSIGN NAME = "l.facet_count"						VALUE = 0>
	<MvASSIGN NAME = "l.update_cookies"						VALUE = 0>

	<MvFOREACH ITERATOR = "l.combination_facet" ARRAY = "l.combination_facets" COUNT = "{ CombinationFacetList_Load_Enabled( l.combination_facets ) }">
		<MvASSIGN NAME = "l.cookie_name"					VALUE = "{ CombinationFacet_Cookie( l.combination_facet ) }">

		<MvREFERENCE NAME = "l.global_facet_value"			VARIABLE = "{ 'g.' $ l.combination_facet:code }">
		<MvREFERENCE NAME = "l.global_facet_value_reset"	VARIABLE = "{ 'g.' $ l.combination_facet:code $ '_reset' }">
		<MvREFERENCE NAME = "l.cookie_facet_value"			VARIABLE = "{ 'l.cookies:' $ l.cookie_name }">

		<MvIF EXPR = "{ NOT ISNULL l.cookie_facet_value AND ISNULL l.global_facet_value AND NOT l.global_facet_value_reset }">
			<MvASSIGN NAME = "l.global_facet_value_count"	VALUE = 0>

			<MvFOREACH ITERATOR = "l.facet_value_base64" ARRAY = "l.facet_values_base64" COUNT = "{ miva_splitstring( l.cookie_facet_value, '-', l.facet_values_base64, 'trim' ) }">
				<MvASSIGN NAME = "l.global_facet_value" INDEX = "{ ++l.global_facet_value_count }" VALUE = "{ crypto_base64_decode( Base64_Correct_Invalid_Padding( l.facet_value_base64 ) ) }">
			</MvFOREACH>
		<MvELSEIF EXPR = "{ NOT ISNULL l.global_facet_value }">
			<MvASSIGN NAME = "l.global_cookie_values"		VALUE = "">

			<MvFOREACH ITERATOR = "l.global_value" INDEX = "l.index" ARRAY = "l.global_facet_value">
				<MvASSIGN NAME = "l.global_cookie_values" INDEX = "{ l.index }" VALUE = "{ crypto_base64_encode( l.global_value ) }">
			</MvFOREACH>

			<MvASSIGN NAME = "l.global_cookie_value"		VALUE = "{ glosub( miva_joinstring( l.global_cookie_values, '-', 'noempty' ), '=', '' ) }">

			<MvIF EXPR = "{ strcmp( l.global_cookie_value, l.cookie_facet_value ) NE 0 }">
				<MvASSIGN NAME = "l.update_cookies"			VALUE = 1>
				
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie( g.Output_Cookies, l.cookie_name, l.global_cookie_value, g.cookiedomain, s.dyn_time_t + ( g.Domain:mmcexp * 60 ), g.cookiepath, 0, 'Lax' ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.facet:code"						VALUE = "{ l.combination_facet:code }">
		<MvASSIGN NAME = "l.facet:name"						VALUE = "{ l.combination_facet:name }">
		<MvASSIGN NAME = "l.facet:allowed_types"			VALUE = "nested">
		<MvASSIGN NAME = "l.facet:variant_source" 			VALUE = "{ l.combination_facet:variantsrc }">

		<MvASSIGN NAME = "l.facet_count"					VALUE = "{ miva_array_insert_var( l.facets, l.facet, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.update_cookies }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].OutputCookies( g.Output_Cookies ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.facet_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query_Merge" PARAMETERS = "module var, facet var, lvalues var, lvalue_count, rvalues var, rvalue_count, values var, value_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.values" 		VALUE = "{ l.lvalues }">
	<MvASSIGN NAME = "l.null" 			VALUE = "{ miva_array_merge( l.rvalues, 1, l.rvalue_count, l.values, -1 ) }">
	<MvASSIGN NAME = "l.null" 			VALUE = "{ miva_array_sort( l.values, 'Module_Product_Facet_Values_Query_Merge_Sort_Callback', l.null ) }">
	<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_array_combine( l.values, 'Module_Product_Facet_Values_Query_Merge_Compare_Callback', 'Module_Product_Facet_Values_Query_Merge_Combine_Callback', 'sorted', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query_Merge_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ strcasecmp( l.left:value, l.right:value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query_Merge_Compare_Callback" PARAMETERS = "elem1 var, elem2 var, data var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ strcasecmp( l.elem1:value, l.elem2:value ) EQ 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query_Merge_Combine_Callback" PARAMETERS = "elem1 var, elem2 var, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.combined_element" 		VALUE = "{ l.elem1 }">
	<MvASSIGN NAME = "l.combined_element:count" VALUE = "{ l.elem1:count + l.elem2:count }">

	<MvFUNCTIONRETURN VALUE = "{ l.combined_element }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query_PostProcess" PARAMETERS = "module var, query var, facet var, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.value_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Value_Prompt" PARAMETERS = "module var, facet var, value var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.value }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Value_Prompt_JavaScript" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Value_Selected" PARAMETERS = "module var, facet var, value var, input_values var, input_value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_search( l.input_values, 1, l.input_value, 'l.input_value EQ l.value' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query" PARAMETERS = "module var, query var, facet var, values var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.values"						VALUE = "">
	<MvASSIGN NAME = "l.value_count"				VALUE = 0>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code_Cached( l.facet:code, l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.combination_facet:id, l.fields ) }">

	<MvIF EXPR = "{ l.facet:input_value_count GE l.field_count }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.final_correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) }">
	<MvASSIGN NAME = "l.previous_correlation"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.final_correlation $ '.value AS value, COUNT( DISTINCT prod.id ) AS value_count' ) }">
	
	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.input_value" ARRAY = "l.facet:input_values" COUNT = "{ l.facet:input_value_count }">
		<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

		<MvIF EXPR = "{ ISNULL l.previous_correlation }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.product_id = prod.id', '' ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.input_value ) ) }">

		<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.final_correlation ) }">

	<MvIF EXPR = "{ ISNULL l.previous_correlation }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.product_id = prod.id', '' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.facet:input_value_count + 1 ]:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.query, l.final_correlation $ '.value' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'value', 'ASC' ) }">

	<MvASSIGN NAME = "l.facet_sql"		VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.facet_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Combination_Facets', l.facet_sql, l.facet_fields, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT Combination_Facets.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.values_by_value">
			<MvMEMBER NAME = "{ Combination_Facets.d.value }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.value:value }">
			<MvASSIGN NAME = "l.value:count"	VALUE = "{ l.value:count + Combination_Facets.d.value_count }">
		<MvELSE>
			<MvASSIGN NAME = "l.value:value"	VALUE = "{ Combination_Facets.d.value }">
			<MvASSIGN NAME = "l.value:count"	VALUE = "{ Combination_Facets.d.value_count }">

			<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_array_insert_ref( l.values, l.value, -1 ) }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Combination_Facets" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Combination_Facets">

	<MvFUNCTIONRETURN VALUE = "{ l.value_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query_Variants" PARAMETERS = "module var, query var, facet var, values var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.values"						VALUE = "">
	<MvASSIGN NAME = "l.value_count"				VALUE = 0>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code_Cached( l.facet:code, l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.combination_facet:id, l.fields ) }">

	<MvIF EXPR = "{ l.facet:input_value_count GE l.field_count }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.final_correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) }">
	<MvASSIGN NAME = "l.previous_correlation"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.final_correlation $ '.value AS value, COUNT( DISTINCT prod.id ) AS value_count' ) }">
	
	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.input_value" ARRAY = "l.facet:input_values" COUNT = "{ l.facet:input_value_count }">
		<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

		<MvIF EXPR = "{ ISNULL l.previous_correlation }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.product_id = pvp.part_id', '' ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.input_value ) ) }">

		<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.final_correlation ) }">

	<MvIF EXPR = "{ ISNULL l.previous_correlation }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.product_id = pvp.part_id', '' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.facet:input_value_count + 1 ]:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.query, l.final_correlation $ '.value' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'value', 'ASC' ) }">

	<MvASSIGN NAME = "l.facet_sql"		VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.facet_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Combination_Facets', l.facet_sql, l.facet_fields, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00086', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT Combination_Facets.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.values_by_value">
			<MvMEMBER NAME = "{ Combination_Facets.d.value }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.value:value }">
			<MvASSIGN NAME = "l.value:count"	VALUE = "{ l.value:count + Combination_Facets.d.value_count }">
		<MvELSE>
			<MvASSIGN NAME = "l.value:value"	VALUE = "{ Combination_Facets.d.value }">
			<MvASSIGN NAME = "l.value:count"	VALUE = "{ Combination_Facets.d.value_count }">

			<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_array_insert_ref( l.values, l.value, -1 ) }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Combination_Facets" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Combination_Facets">

	<MvFUNCTIONRETURN VALUE = "{ l.value_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Query_Search" PARAMETERS = "module var, query var, facet var, facet_values var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code_Cached( l.facet:code, l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.combination_facet:id, l.fields ) }">
	<MvASSIGN NAME = "l.previous_correlation"		VALUE = "">

	<MvIF EXPR = "{ miva_array_elements( l.facet_values ) GT l.field_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00078', 'Too many input values for combination facet \'' $ l.combination_facet:code $ '\'' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_DISTINCT( l.query ) }">

	<MvIF EXPR = "{ l.combination_facet:inclother OR l.combination_facet:variantsrc EQ 'parts' }">
		<MvASSIGN NAME = "l.cfp_correlation"			VALUE = "{ 'cfp_' $ int( l.combination_facet:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CombinationFacetProducts', l.cfp_correlation, l.cfp_correlation $ '.facet_id = ? AND ' $ l.cfp_correlation $ '.product_id = prod.id', [ g.Module_Library_DB ].SQL_Query_Field( l.combination_facet:id ) ) }">

		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.facet_values">
			<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

			<MvIF EXPR = "{ ISNULL l.previous_correlation }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation,
																					 l.correlation $ '.product_id = prod.id AND ' $ l.correlation $ '.field_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ),
																					 [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation,
																					 l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id AND ' $ l.correlation $ '.field_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ),
																					 [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">
			</MvIF>

			<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.cfp_correlation $ '.product_id IS NULL', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id IS NOT NULL', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
	<MvELSE>
		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.facet_values">
			<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

			<MvIF EXPR = "{ ISNULL l.previous_correlation }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.product_id = prod.id', '' ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">

			<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Query_Search_Variants" PARAMETERS = "module var, query var, facet var, facet_values var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code_Cached( l.facet:code, l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.combination_facet:id, l.fields ) }">
	<MvASSIGN NAME = "l.previous_correlation"		VALUE = "">

	<MvIF EXPR = "{ miva_array_elements( l.facet_values ) GT l.field_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00087', 'Too many input values for combination facet \'' $ l.combination_facet:code $ '\'' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_DISTINCT( l.query ) }">

	<MvIF EXPR = "{ l.combination_facet:inclother }">
		<MvASSIGN NAME = "l.cfp_correlation"			VALUE = "{ 'cfp_' $ int( l.combination_facet:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pvp', g.Store_Table_Prefix $ 'CombinationFacetProducts', l.cfp_correlation, l.cfp_correlation $ '.facet_id = ? AND ' $ l.cfp_correlation $ '.product_id = pvp.part_id', [ g.Module_Library_DB ].SQL_Query_Field( l.combination_facet:id ) ) }">

		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.facet_values">
			<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

			<MvIF EXPR = "{ ISNULL l.previous_correlation }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pvp', g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation,
																					 l.correlation $ '.product_id = pvp.part_id AND ' $ l.correlation $ '.field_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ),
																					 [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pvp', g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation,
																					 l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id AND ' $ l.correlation $ '.field_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ),
																					 [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">
			</MvIF>

			<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.cfp_correlation $ '.product_id IS NULL', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id IS NOT NULL', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
	<MvELSE>
		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.facet_values">
			<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.combination_facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

			<MvIF EXPR = "{ ISNULL l.previous_correlation }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.product_id = prod.id', '' ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">

			<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: fields_prod
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields"				VALUE = "">
	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvASSIGN NAME = "l.field"			VALUE = "">
		<MvASSIGN NAME = "l.field:code"		VALUE = "{ l.facet:code }">
		<MvASSIGN NAME = "l.field:name"		VALUE = "{ l.facet:name }">
		<MvASSIGN NAME = "l.field:type"		VALUE = "multitext">

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">

		<MvASSIGN NAME = "l.field"			VALUE = "">
		<MvASSIGN NAME = "l.field:code"		VALUE = "{ l.facet:code $ '_application' }">
		<MvASSIGN NAME = "l.field:name"		VALUE = "{ l.facet:name $ ' Application' }">
		<MvASSIGN NAME = "l.field:type"		VALUE = "multitext">
		<MvASSIGN NAME = "l.field:public"	VALUE = 1>
		<MvASSIGN NAME = "l.field:readonly"	VALUE = 1>

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">

		<MvASSIGN NAME = "l.field"			VALUE = "">
		<MvASSIGN NAME = "l.field:code"		VALUE = "{ l.facet:code $ '_fit' }">
		<MvASSIGN NAME = "l.field:name"		VALUE = "{ l.facet:name $ ' Fitment' }">
		<MvASSIGN NAME = "l.field:type"		VALUE = "text">
		<MvASSIGN NAME = "l.field:public"	VALUE = 1>
		<MvASSIGN NAME = "l.field:readonly"	VALUE = 1>

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacet_Load_CustomFieldCode_Cached( l.code, l.field_type, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ l.code }">
	</MvIF>

	<MvIF EXPR = "{ l.field_type EQ 'application' }">	<MvFUNCTIONRETURN VALUE = "{ l.facet:name $ ' Application' }">
	<MvELSEIF EXPR = "{ l.field_type EQ 'fitment' }">	<MvFUNCTIONRETURN VALUE = "{ l.facet:name $ ' Fitment' }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ l.facet:name }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value" PARAMETERS = "module var, product_id, code" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacet_Load_CustomFieldCode_Cached( l.code, l.field_type, l.facet ) }">	<MvFUNCTIONRETURN VALUE = "">
	<MvELSEIF EXPR = "{ l.field_type EQ 'application' }">													<MvFUNCTIONRETURN VALUE = "">
	<MvELSEIF EXPR = "{ l.field_type EQ 'fitment' }">														<MvFUNCTIONRETURN VALUE = "{ Module_Product_Field_Value_Fitment( l.module, l.product_id, l.code, l.facet ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">
	<MvIF EXPR = "{ l.field_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.load_query"					VALUE = "">
	<MvASSIGN NAME = "l.first_field_prefix"			VALUE = "">

	<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
		<MvASSIGN NAME = "l.field_prefix"			VALUE = "{ 'f' $ l.field:id }">
		
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.load_query, l.field_prefix $ '.value AS ' $ l.field_prefix $ '_value' ) }">

		<MvIF EXPR = "{ NOT ISNULL l.first_field_prefix }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.load_query, l.first_field_prefix, g.Store_Table_Prefix $ 'CombinationFacetValues', l.field_prefix, l.field_prefix $ '.record_id = ' $ l.first_field_prefix $ '.record_id AND ' $ l.field_prefix $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.load_query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.field_prefix ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.load_query, l.field_prefix $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.load_query, l.field_prefix $ '.record_id AS record_id' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.load_query, l.field_prefix $ '.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.product_id ) ) }">

			<MvASSIGN NAME = "l.first_field_prefix"	VALUE = "{ l.field_prefix }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.load_query, 'record_id', 'ASC' ) }">
	
	<MvASSIGN NAME = "l.load_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.load_query, l.load_fields ) }">

	<MvOPENVIEW NAME = "Merchant"
				VIEW	= "CombinationFacetRecords"
				QUERY	= "{ l.load_sql }"
				FIELDS	= "{ l.load_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvWHILE EXPR = "{ NOT CombinationFacetRecords.d.EOF }">
		<MvCAPTURE VARIABLE = "l.value">
			<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
				<MvASSIGN NAME = "l.value"	VALUE = "{ miva_variable_value( 'CombinationFacetRecords.d.f' $ l.field:id $ '_value' ) }">

				<MvIF EXPR = "{ ISNULL l.value }">
					<MvFOREACHSTOP>
				</MvIF>

				<MvIF EXPR = "{ l.field_pos GT 1 }">
					<MvEVAL EXPR = ">">
				</MvIF>

				<MvEVAL EXPR = "{ l.value }">
			</MvFOREACH>
		</MvCAPTURE>

		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.values, l.value, -1 ) }">
		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetRecords" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetRecords">
	<MvFUNCTIONRETURN VALUE = "{ miva_joinstring( l.values, '|', 'escape' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value_Fitment" PARAMETERS = "module var, product_id, code, facet var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:source NE 'runtime' }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.fitment" 		VALUE = "unknown">
	<MvASSIGN NAME = "l.values" 		VALUE = "">
	<MvASSIGN NAME = "l.value_count" 	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvREFERENCE NAME = "l.cookie_facet_value"	VARIABLE = "{ 'l.cookies:' $ CombinationFacet_Cookie( l.facet ) }">

	<MvIF EXPR = "{ ISNULL l.cookie_facet_value }">
		<MvFUNCTIONRETURN VALUE = "{ l.fitment }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.facet_value" ARRAY = "l.facet_values" COUNT = "{ miva_splitstring( l.cookie_facet_value, '-', l.facet_values, 'trim,noempty' ) }">
		<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_array_insert( l.values, crypto_base64_decode( Base64_Correct_Invalid_Padding( l.facet_value ) ), -1 ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.null" VALUE = "{ CombinationFacet_Product_Fitment_Value( l.facet, l.product_id, 0, l.values, l.value_count, l.fitment ) }">
	<MvFUNCTIONRETURN VALUE = "{ l.fitment }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value_Array" PARAMETERS = "module var, product_id, code, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.values"			VALUE = "">
	<MvASSIGN NAME = "l.value_count"	VALUE = 0>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_CustomFieldCode_Cached( l.code, l.field_type, l.facet ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ l.field_type EQ 'fitment' }">														<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ l.field_type EQ 'application' }">													<MvFUNCTIONRETURN VALUE = "{ Module_Product_Field_Value_Array_Application( l.module, l.product_id, l.code, l.values, l.facet ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">
	<MvIF EXPR = "{ l.field_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.load_query"					VALUE = "">
	<MvASSIGN NAME = "l.first_field_prefix"			VALUE = "">

	<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
		<MvASSIGN NAME = "l.field_prefix"			VALUE = "{ 'f' $ l.field:id }">
		
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.load_query, l.field_prefix $ '.value AS ' $ l.field_prefix $ '_value' ) }">

		<MvIF EXPR = "{ NOT ISNULL l.first_field_prefix }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.load_query, l.first_field_prefix, g.Store_Table_Prefix $ 'CombinationFacetValues', l.field_prefix, l.field_prefix $ '.record_id = ' $ l.first_field_prefix $ '.record_id AND ' $ l.field_prefix $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.load_query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.field_prefix ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.load_query, l.field_prefix $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.load_query, l.field_prefix $ '.record_id AS record_id' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.load_query, l.field_prefix $ '.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.product_id ) ) }">

			<MvASSIGN NAME = "l.first_field_prefix"	VALUE = "{ l.field_prefix }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.load_query, 'record_id', 'ASC' ) }">
	
	<MvASSIGN NAME = "l.load_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.load_query, l.load_fields ) }">

	<MvOPENVIEW NAME = "Merchant"
				VIEW	= "CombinationFacetRecords"
				QUERY	= "{ l.load_sql }"
				FIELDS	= "{ l.load_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00072', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT CombinationFacetRecords.d.EOF }">
		<MvCAPTURE VARIABLE = "l.value">
			<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
				<MvASSIGN NAME = "l.value"	VALUE = "{ miva_variable_value( 'CombinationFacetRecords.d.f' $ l.field:id $ '_value' ) }">

				<MvIF EXPR = "{ ISNULL l.value }">
					<MvFOREACHSTOP>
				</MvIF>

				<MvIF EXPR = "{ l.field_pos GT 1 }">
					<MvEVAL EXPR = ">">
				</MvIF>

				<MvEVAL EXPR = "{ l.value }">
			</MvFOREACH>
		</MvCAPTURE>

		<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_array_insert_var( l.values, l.value, -1 ) }">
		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetRecords" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetRecords">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00073', l.value_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value_Array_Application" PARAMETERS = "module var, product_id, code, values var, facet var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:source NE 'runtime' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.values" 		VALUE = "">
	<MvASSIGN NAME = "l.value_count" 	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvREFERENCE NAME = "l.facet_value"	VARIABLE = "{ 'l.cookies:' $ CombinationFacet_Cookie( l.facet ) }">

	<MvIF EXPR = "{ ISNULL l.facet_value }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null"			VALUE = "{ miva_splitstring( l.facet_value, '-', l.facet_values, 'trim' ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">
		<MvIF EXPR = "{ ISNULL l.facet_values[ l.pos ] }">	<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_array_insert( l.values, '', -1 ) }">
		<MvELSE>											<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_array_insert( l.values, crypto_base64_decode( Base64_Correct_Invalid_Padding( l.facet_values[ l.pos ] ) ), -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.value_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field" PARAMETERS = "module var, product_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code_Cached( l.code, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetValue_Delete_All_Product_Facet( l.product_id, l.facet:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.inserted_records"							VALUE = 0>
	<MvASSIGN NAME = "l.field_count"								VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">

	<MvFOREACH ITERATOR = "l.individual_value" ARRAY = "l.value" COUNT = "{ miva_splitstring( l.value, '|', l.value, 'trim,escaped' ) }">
		<MvASSIGN NAME = "l.combinationfacetvalues"					VALUE = "">
		<MvASSIGN NAME = "l.combinationfacetvalue_count"			VALUE = 0>

		<MvASSIGN NAME = "l.individual_value_count"					VALUE = "{ miva_splitstring( l.individual_value, '>', l.individual_values, 'trim' ) }">

		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ min( l.field_count, l.individual_value_count ) }">
			<MvASSIGN NAME = "l.combinationfacetvalue:facet_id"		VALUE = "{ l.facet:id }">
			<MvASSIGN NAME = "l.combinationfacetvalue:field_id"		VALUE = "{ l.field:id }">
			<MvASSIGN NAME = "l.combinationfacetvalue:product_id"	VALUE = "{ l.product_id }">
			<MvASSIGN NAME = "l.combinationfacetvalue:value"		VALUE = "{ l.individual_values[ l.pos ] }">

			<MvIF EXPR = "{ ISNULL l.combinationfacetvalue:value }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.combinationfacetvalue_count"		VALUE = "{ miva_array_insert_var( l.combinationfacetvalues, l.combinationfacetvalue, -1 ) }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.combinationfacetvalue_count }">
			<MvIF EXPR = "{ NOT CombinationFacetRecord_Insert( l.combinationfacetvalues, l.combinationfacetvalue_count ) }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.inserted_records"					VALUE = "{ l.inserted_records + 1 }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.inserted_records EQ 0 }">	<MvASSIGN NAME = "l.null" VALUE = "{ CombinationFacetProduct_Delete( l.facet:id, l.product_id ) }">
	<MvELSE>									<MvASSIGN NAME = "l.null" VALUE = "{ CombinationFacetProduct_Insert( l.facet:id, l.product_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field_Array" PARAMETERS = "module var, product_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code_Cached( l.code, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetValue_Delete_All_Product_Facet( l.product_id, l.facet:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.inserted_records"							VALUE = 0>
	<MvASSIGN NAME = "l.field_count"								VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">

	<MvFOREACH ITERATOR = "l.individual_value" ARRAY = "l.values" COUNT = "{ l.value_count }">
		<MvASSIGN NAME = "l.combinationfacetvalues"					VALUE = "">
		<MvASSIGN NAME = "l.combinationfacetvalue_count"			VALUE = 0>

		<MvASSIGN NAME = "l.individual_value_count"					VALUE = "{ miva_splitstring( l.individual_value, '>', l.individual_values, 'trim' ) }">

		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ min( l.field_count, l.individual_value_count ) }">
			<MvASSIGN NAME = "l.combinationfacetvalue:facet_id"		VALUE = "{ l.facet:id }">
			<MvASSIGN NAME = "l.combinationfacetvalue:field_id"		VALUE = "{ l.field:id }">
			<MvASSIGN NAME = "l.combinationfacetvalue:product_id"	VALUE = "{ l.product_id }">
			<MvASSIGN NAME = "l.combinationfacetvalue:value"		VALUE = "{ l.individual_values[ l.pos ] }">

			<MvIF EXPR = "{ ISNULL l.combinationfacetvalue:value }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.combinationfacetvalue_count"		VALUE = "{ miva_array_insert_var( l.combinationfacetvalues, l.combinationfacetvalue, -1 ) }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.combinationfacetvalue_count }">
			<MvIF EXPR = "{ NOT CombinationFacetRecord_Insert( l.combinationfacetvalues, l.combinationfacetvalue_count ) }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.inserted_records"					VALUE = "{ l.inserted_records + 1 }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.inserted_records EQ 0 }">	<MvASSIGN NAME = "l.null" VALUE = "{ CombinationFacetProduct_Delete( l.facet:id, l.product_id ) }">
	<MvELSE>									<MvASSIGN NAME = "l.null" VALUE = "{ CombinationFacetProduct_Insert( l.facet:id, l.product_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"			VALUE = "">
	<MvASSIGN NAME = "l.capabilities:query"		VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:search"	VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 0>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: not_prod
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CombinationFacetProduct_Delete_All_Product( l.product:id )	AND
								 CombinationFacetValue_Delete_All_Product( l.product:id ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: component
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvFOREACH ITERATOR = "l.combination_facet" ARRAY = "l.combination_facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.combination_facets ) }">
		<MvREFERENCE NAME = "l.cookie_facet_value"	VARIABLE = "{ 'l.cookies:' $ CombinationFacet_Cookie( l.combination_facet ) }">

		<MvIF EXPR = "{ NOT ISNULL l.cookie_facet_value }">
			<MvASSIGN NAME = "l.field_count" VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.combination_facet:id, l.fields ) }">

			<MvFOREACH INDEX = "l.pos" ITERATOR = "l.facet_value_base64" ARRAY = "l.facet_values_base64" COUNT = "{ miva_splitstring( l.cookie_facet_value, '-', l.facet_values_base64, 'trim' ) }">
				<MvIF EXPR = "{ l.pos GT l.field_count }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGNARRAY NAME = "l.settings" VALUE = "{ crypto_base64_decode( Base64_Correct_Invalid_Padding( l.facet_value_base64 ) ) }">
					<MvMEMBER NAME = "{ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.combination_facet:code ) }">
					<MvMEMBER NAME = "{ [ g.Module_Feature_TUI_AD ].TUI_Safe_Item_Code( l.fields[ l.pos ]:code ) }">
				</MvASSIGNARRAY>
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.store_folder"		VALUE = "{ padl( g.Store:id, 8, '0' ) }">
	<MvASSIGN NAME = "l.rel_file_path_js"	VALUE = "{ 'scripts/' $ l.store_folder $ '/runtime_combofacets.js' }">
	<MvASSIGN NAME = "l.rel_file_path_css"	VALUE = "{ 'css/' $ l.store_folder $ '/combofacets.css' }">

	<MvFOREACH ITERATOR = "l.scriptresource" ARRAY = "l.scriptresources" COUNT = "{ [ g.Module_Feature_TUI_DB ].JavaScriptResourceList_Load_File( l.rel_file_path_js, l.scriptresources ) }">
		<MvIF EXPR = "{ NOT l.scriptresource:is_global }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].JavaScriptResourceXPage_Load( l.scriptresource:id, l.page:id, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].JavaScriptResourceXPage_Insert( l.scriptresource:id, l.page:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00044', 'JavaScript Resource \'' $ l.scriptresource:code $ '\' assigned to page \'' $ l.page:code $ '\'' ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.cssresource" ARRAY = "l.cssresources" COUNT = "{ [ g.Module_Feature_TUI_DB ].CSSResourceList_Load_File( l.rel_file_path_css, l.cssresources ) }">
		<MvIF EXPR = "{ NOT l.cssresource:is_global }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Load( l.cssresource:id, l.page:id, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Insert( l.cssresource:id, l.page:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00048', 'CSS Resource \'' $ l.cssresource:code $ '\' assigned to page \'' $ l.page:code $ '\'' ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.store_folder"		VALUE = "{ padl( g.Store:id, 8, '0' ) }">
	<MvASSIGN NAME = "l.rel_file_path_js"	VALUE = "{ 'scripts/' $ l.store_folder $ '/runtime_combofacets.js' }">
	<MvASSIGN NAME = "l.rel_file_path_css"	VALUE = "{ 'css/' $ l.store_folder $ '/combofacets.css' }">

	<MvFOREACH ITERATOR = "l.scriptresource" ARRAY = "l.scriptresources" COUNT = "{ [ g.Module_Feature_TUI_DB ].JavaScriptResourceList_Load_File( l.rel_file_path_js, l.scriptresources ) }">
		<MvIF EXPR = "{ NOT l.scriptresource:is_global }">
			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].JavaScriptResourceXPage_Load( l.scriptresource:id, l.page:id, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].JavaScriptResourceXPage_Delete( l.scriptresource:id, l.page:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00045', 'JavaScript Resource \'' $ l.scriptresource:code $ '\' unassigned from page \'' $ l.page:code $ '\'' ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.cssresource" ARRAY = "l.cssresources" COUNT = "{ [ g.Module_Feature_TUI_DB ].CSSResourceList_Load_File( l.rel_file_path_css, l.cssresources ) }">
		<MvIF EXPR = "{ NOT l.cssresource:is_global }">
			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Load( l.cssresource:id, l.page:id, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Delete( l.cssresource:id, l.page:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00049', 'CSS Resource \'' $ l.cssresource:code $ '\' unassigned from page \'' $ l.page:code $ '\'' ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Delete any legacy templates
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.settings:template_id }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate( l.settings:template_id ) }">	
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_JSON_Variables( l.all_settings ) }">

	<MvASSIGN NAME = "l.defer"			VALUE = 0>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].JavaScriptResource_Load_Code( 'runtimecombofacets', l.scriptresource ) }">
		<MvIF EXPR = "{ miva_array_search( l.scriptresource:attributes, 1, l.attribute, 'l.attribute:name EQ \'async\' AND l.attribute:value NE \'false\'' ) AND
						miva_array_search( l.scriptresource:attributes, 1, l.attribute, 'l.attribute:name EQ \'defer\' AND l.attribute:value NE \'false\'' ) }">
			<MvASSIGN NAME = "l.defer"	VALUE = 1>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.defer }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside_Deferred( l.all_settings, 'ajax.js' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside_Deferred( l.all_settings, 'runtime_ui.js' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside( l.all_settings, 'ajax.js' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside( l.all_settings, 'runtime_ui.js' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'menu:' CIN l.param EQ 1 }">
		<MvASSIGN NAME = "l.facet_code" VALUE = "{ substring_var( l.param, len( 'menu:' ) + 1, len_var( l.param ) - len( 'menu:' ) ) }">

		<MvIF EXPR = "{ NOT CombinationFacet_Load_Code_Cached( l.facet_code, l.settings:facet ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvASSIGN NAME = "l.settings:field_count"	VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.settings:facet:id, l.settings:fields ) }">

		<MvASSIGN NAME = "l.filename"				VALUE = "{ CombinationFacet_Template_Filename( l.settings:facet ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Store_Template_Path $ l.filename ].Template_Render( l.null, l.all_settings ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_Template_Code" PARAMETERS = "code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code"><MIVA STANDARDOUTPUTLEVEL = "text, html"><form class="mm_combination_facet_container" aria-label="&mvte:combination_facets:facet:name;">
    <span class="mm_combination_facet_fields">
        <mvt:foreach iterator="field" array="combination_facets:fields">
            <select id="mm_combination_facet_&mvte:combination_facets:facet:id;_&mvte:field:id;" autocomplete="off" aria-label="&mvte:field:name;" aria-live="assertive" aria-atomic="true" disabled></select>
        </mvt:foreach>
    </span>
    <span class="mm_combination_facet_action_container">
        <button id="mm_combination_facet_button_clearcookie_&mvte:combination_facets:facet:id;" class="mm_combination_facet_action" aria-live="polite" aria-atomic="true">Reset</button>
        <button id="mm_combination_facet_button_setcookie_&mvte:combination_facets:facet:id;" class="mm_combination_facet_action" aria-live="assertive" aria-atomic="true">Apply</button>
     </span>
</form>

<script type="text/javascript">
    (function( obj, eventType, fn )
    {
        if ( obj.addEventListener )
        {
            obj.addEventListener( eventType, fn, false );
        }
        else if ( obj.attachEvent )
        {
            obj.attachEvent( 'on' + eventType, fn );
        }
    })( window, 'load', function()
    {
        var combination_facet, element_setcookie, element_clearcookie, combination_facet_field;

        element_setcookie   = document.getElementById( 'mm_combination_facet_button_setcookie_&mvtj:combination_facets:facet:id;' );
        element_clearcookie = document.getElementById( 'mm_combination_facet_button_clearcookie_&mvtj:combination_facets:facet:id;' );

        combination_facet   = new MMCombinationFacet( '&mvtj:combination_facets:facet:code;' );

        if ( element_setcookie )    combination_facet.SetButton_SetCookie( element_setcookie );
        if ( element_clearcookie )  combination_facet.SetButton_ClearCookie( element_clearcookie );

        <mvt:foreach iterator="field" array="combination_facets:fields">
            combination_facet_field = new MMCombinationFacet_Select( 'mm_combination_facet_&mvtj:combination_facets:facet:id;_&mvtj:field:id;' );
            combination_facet_field.SetSelectOne( '&mvtj:field:name;', '', true, true );

            combination_facet.FacetField_Append( combination_facet_field );
        </mvt:foreach>

        combination_facet.Load_Cookie();
    });
</script><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_JavaScript_Code" PARAMETERS = "code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE FILE = "modules/util/combofacets/runtime.js"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: provision_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.child_name"	VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.child_name EQ 'combinationfacet_add' }">							<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacet_Add( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacet_update' }">					<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacet_Update( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacet_delete' }">					<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacet_Delete( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacet_update_template' }">			<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacet_Update_Template( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacetfield_add' }">					<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacetField_Add( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacetfield_update' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacetField_Update( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacetfield_delete' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacetField_Delete( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacetrecord_add' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacetRecord_Add( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacetrecord_delete' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacetRecord_Delete( l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'combinationfacetcustomerapplication_add' }">	<MvEVAL EXPR = "{ Module_Provision_Store_CombinationFacetCustomerApplication_Add( l.child_xml ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacet_Add" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.facet:enabled"			VALUE = 1>
	<MvASSIGN NAME = "l.facet:inclother"		VALUE = 0>
	<MvASSIGN NAME = "l.facet:createfit"		VALUE = 0>
	<MvASSIGN NAME = "l.facet:variantsrc"		VALUE = "master">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 	 'R:50',	l.provide_xml, 'Code',						l.facet:code )										 OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'R:100',	l.provide_xml, 'Name',						l.facet:name )										 OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(	 'o',		l.provide_xml, 'VariantValueSource',		l.facet:variantsrc, 'master,parts',	'master,parts' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'o',		l.provide_xml, 'Enabled',					l.facet:enabled )									 OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'o',		l.provide_xml, 'IncludeOtherProducts',		l.facet:inclother )									 OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'o',		l.provide_xml, 'CreateFitmentIndicator',	l.facet:createfit ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CombinationFacet_Load_Code( l.facet:code, l.existing_facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A combination facet with the code \'' $ l.existing_facet:code $ '\' already exists' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Insert( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_CacheSetting_Insert( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00140', 'Combination Facet \'' $ l.facet:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacet_Update" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code', l.facet_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_facet" VALUE = "{ l.facet }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 	 'O:50',	l.provide_xml, 'Code',						l.facet:code )										 OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'O:100',	l.provide_xml, 'Name',						l.facet:name )										 OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(	 'o',		l.provide_xml, 'VariantValueSource',		l.facet:variantsrc, 'master,parts',	'master,parts' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'o',		l.provide_xml, 'Enabled',					l.facet:enabled )									 OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'o',		l.provide_xml, 'IncludeOtherProducts',		l.facet:inclother )									 OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'o',		l.provide_xml, 'CreateFitmentIndicator',	l.facet:createfit ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CombinationFacet_Load_Code( l.facet:code, l.existing_facet ) }">
		<MvIF EXPR = "{ l.existing_facet:id NE l.facet:id }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A combination facet with the code \'' $ l.existing_facet:code $ '\' already exists' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Update( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_CacheSetting_Update( l.original_facet, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00141', 'Combination Facet \'' $ l.facet:code $ '\' updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacet_Delete" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code', l.facet_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_CacheSetting_Delete( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Delete( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacet_Update_Template" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code', l.facet_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Template',	l.template ) OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Notes',		l.notes ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvASSIGN NAME = "l.filename" VALUE = "{ CombinationFacet_Template_Filename( l.facet ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.filename, l.managedtemplate ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvEVAL EXPR = "{ Generate_Template_Code( l.template_source ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.template_source, l.null, l.filename ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.filename, l.managedtemplate )  }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.template, l.null_settings ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacetField_Add" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code', l.facet_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field:facet_id"		VALUE = "{ l.facet:id }">
	<MvASSIGN NAME = "l.field:sort_desc"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'R',		l.provide_xml, 'Code',				l.field:code ) 	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R:100',	l.provide_xml, 'Name',				l.field:name )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml, 'SortDescending',	l.field:sort_desc ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetField_Load_Code( l.field:facet_id, l.field:code, l.existing_field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A field with the code \'' $ l.existing_field:code $ '\' already exists' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacetField_Update" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code',	l.facet_code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field_code',	l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Load_Code( l.facet:id, l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'O',		l.provide_xml, 'Code',				l.field:code ) 	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O:100',	l.provide_xml, 'Name',				l.field:name )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml, 'SortDescending',	l.field:sort_desc ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetField_Load_Code( l.facet:id, l.field:code, l.existing_field ) AND ( l.existing_field:id NE l.field:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A field with the code \'' $ l.existing_field:code $ '\' already exists' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacetField_Delete" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code',	l.facet_code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field_code',	l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Load_Code( l.facet:id, l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Delete( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacetRecord_Add" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product_code',	l.product_code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code',	l.facet_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.values"					VALUE = "">
	<MvASSIGN NAME = "l.value_count"			VALUE = 0>
	<MvASSIGN NAME = "l.field_count"			VALUE = "{ CombinationFacetFieldList_Load_Facet( l.facet:id, l.fields ) }">

	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvIF EXPR = "{ tolower( l.child_xml:name ) NE 'combinationfacetfield' }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Unknown tag' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child_xml, 'field_code', l.field_code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT miva_array_search( l.fields, 1, l.field, 'tolower( l.field:code ) EQ tolower( l.field_code )' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Field \'' $ l.field_code $ '\' not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ miva_array_search( l.values, 1, l.existing_value, 'l.existing_value:field_id EQ l.field:id' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'A value for field \'' $ l.field:code $ '\' has already been specified' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.value:facet_id"		VALUE = "{ l.facet:id }">
		<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ l.field:id }">
		<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ l.product:id }">
		<MvASSIGN NAME = "l.value:value"		VALUE = "{ trim( l.child_xml:value ) }">

		<MvIF EXPR = "{ ISNULL l.value:value }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'A non-empty value must be specified' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.value_count"		VALUE = "{ miva_array_insert_var( l.values, l.value, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.value_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'At least one CombinationFacetField must be specified' ) }">
	<MvELSEIF EXPR = "{ l.value_count LT l.field_count }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.value_count }">
			<MvIF EXPR = "{ NOT miva_array_search( l.values, 1, l.value, 'l.value:field_id EQ l.field:id' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A value for field \'' $ l.field:code $ '\' must be specified' ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetRecord_Insert( l.values, l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"					VALUE = "{ CombinationFacetProduct_Insert( l.facet:id, l.product:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacetRecord_Delete" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product_code',	l.product_code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code',	l.facet_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.values"					VALUE = "">
	<MvASSIGN NAME = "l.value_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvIF EXPR = "{ tolower( l.child_xml:name ) NE 'combinationfacetfield' }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Unknown tag' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child_xml, 'field_code', l.field_code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT CombinationFacetField_Load_Code( l.facet:id, l.field_code, l.field ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.child_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Field \'' $ l.field_code $ '\' not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ miva_array_search( l.values, 1, l.existing_value, 'l.existing_value:field_id EQ l.field:id' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'A value for field \'' $ l.field:code $ '\' has already been specified' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.value:facet_id"		VALUE = "{ l.facet:id }">
		<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ l.field:id }">
		<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ l.product:id }">
		<MvASSIGN NAME = "l.value:value"		VALUE = "{ trim( l.child_xml:value ) }">

		<MvIF EXPR = "{ ISNULL l.value:value }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'A non-empty value must be specified' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.value_count"		VALUE = "{ miva_array_insert_var( l.values, l.value, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.value_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'At least one CombinationFacetField must be specified' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.record_id" ARRAY = "l.record_ids" COUNT = "{ CombinationFacetRecordList_Load_Values( l.values, l.value_count, l.record_ids ) }">
		<MvIF EXPR = "{ NOT CombinationFacetValue_Delete_All_Record( l.record_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ CombinationFacetRecords_Present( l.facet:id, l.product:id, l.present ) AND ( NOT l.present ) }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ CombinationFacetProduct_Delete( l.facet:id, l.product:id ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CombinationFacetCustomerApplication_Add" PARAMETERS = "provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'customer_login',	l.customer_login )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'facet_code',		l.facet_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.customer"				VALUE = "">
	<MvASSIGN NAME = "l.facet"					VALUE = "">
	<MvASSIGN NAME = "l.values"					VALUE = "">
	<MvASSIGN NAME = "l.value_count"			VALUE = 0>
	<MvASSIGN NAME = "l.facet_fields"			VALUE = "">
	<MvASSIGN NAME = "l.facet_field_count"		VALUE = 0>

	<MvASSIGN NAME = "l.application"			VALUE = "">
	<MvASSIGN NAME = "l.application:name"		VALUE = "">
	<MvASSIGN NAME = "l.application:cust_id"	VALUE = 0>
	<MvASSIGN NAME = "l.application:facet_id"	VALUE = 0>
	<MvASSIGN NAME = "l.application:lastused"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o:100',	l.provide_xml, 'Name',		l.application:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Date(			l.provide_xml, 'LastUsed',	l.application:lastused ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_Login( l.customer_login, l.customer ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Customer \'' $ l.customer_login $ '\' not found' ) }">
	<MvELSEIF EXPR = "{ NOT CombinationFacet_Load_Code( l.facet_code, l.facet ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Combination Facet \'' $ l.facet_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.application:cust_id"	VALUE = "{ l.customer:id }">
	<MvASSIGN NAME = "l.application:facet_id"	VALUE = "{ l.facet:id }">
	
	<MvASSIGN NAME = "l.facet_field_count"		VALUE = "{ CombinationFacetFieldList_Load_Facet( l.facet:id, l.facet_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Values' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Values are required' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.value_child" ARRAY = "l.provide_xml:tags:Values[ 1 ]:children" COUNT = "{ miva_array_elements( l.provide_xml:tags:Values[ 1 ]:children ) }">
		<MvASSIGN NAME = "l.tag"	VALUE = "{ tolower( l.value_child:name ) }">
		<MvASSIGN NAME = "l.value"	VALUE = "{ trim( l.value_child:value ) }">

		<MvIF EXPR = "{ l.tag NE 'value' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.value_child, 'Unknown tag \'' $ l.tag $ '\'' ) }">
		<MvELSEIF EXPR = "{ ISNULL l.value  }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.value_child, 'Value is required' ) }">
		<MvELSEIF EXPR = "{ len_var( l.value ) GT 254 }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.value_child, 'Value cannot exceed 254 characers' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_array_insert_var( l.values, l.value, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.value_count EQ 0 }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'At least one value must be provided' ) }">
	<MvELSEIF EXPR = "{ l.value_count GT l.facet_field_count }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Values exceed the maximum number of fields' ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetCustomerApplication_Load_Existing( l.customer:id, l.facet, l.facet_fields, l.facet_field_count, l.values, l.value_count, l.set_field_count, l.null ) AND l.set_field_count EQ l.value_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'An application with the specified values already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Insert( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.pos" COUNT = "{ l.facet_field_count }">
		<MvIF EXPR = "{ ISNULL l.values[ l.pos ] }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvASSIGN NAME = "l.field"			VALUE = "">
		<MvASSIGN NAME = "l.field:appl_id"	VALUE = "{ l.application:id }">
		<MvASSIGN NAME = "l.field:field_id" VALUE = "{ l.facet_field:id }">
		<MvASSIGN NAME = "l.field:facet_id" VALUE = "{ l.facet:id }">
		<MvASSIGN NAME = "l.field:value"	VALUE = "{ l.values[ l.pos ] }">

		<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Insert( l.field ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00139', 'Combination Facet Customer Application created for facet \'' $ l.facet:code $ '\' and customer \'' $ l.customer:login $ '\'' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: clientside
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/util/combofacets/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_CombinationFacet_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/combofacets/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/combofacets/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/combofacets/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature: json
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'CombinationFacetAndFieldList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetAndFieldList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacet_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacet_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacet_Update' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacet_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacet_Update_Enabled' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacet_Update_Enabled( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacet_Update_IncludeOtherProducts' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacet_Update_IncludeOtherProducts( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacet_Update_CreateFitmentIndicator' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacet_Update_CreateFitmentIndicator( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacet_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacet_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetList_DisplayOrder_Update' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetList_DisplayOrder_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetField_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetField_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetField_Update' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetField_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetField_Update_SortDescending' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetField_Update_SortDescending( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetField_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetField_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetRecordList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetRecordList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetRecord_Insert' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetRecord_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetRecord_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetRecord_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetRecord_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetRecord_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetApplicationList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetApplicationList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetCustomerApplicationList_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_CombinationFacetCustomerApplicationList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'PageBuilder_CombinationFacetList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_CombinationFacetList_Load_Query( l.module ) }">

	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_Fitment_Load_Product_Variant' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_Fitment_Load_Product_Variant( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetCustomerApplicationList_Load' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetCustomerApplicationList_Load( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetCustomerApplication_Insert' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetCustomerApplication_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetCustomerApplication_Update' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetCustomerApplication_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetCustomerApplication_Delete' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetCustomerApplication_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetCustomerApplication_Set_Cookie' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetCustomerApplication_Set_Cookie( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetData_Load' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetData_Load( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetAndFieldList_Load_All' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAndFieldList_Load_All( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetValueList_Load_Field' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetValueList_Load_Field( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetAppliedValueList_Load_Cookie' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAppliedValueList_Load_Cookie( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetAppliedValueList_Set_Cookie' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAppliedValueList_Set_Cookie( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_CombinationFacetAppliedValueList_Clear_Cookie' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAppliedValueList_Clear_Cookie( l.module ) }">

	<MvCOMMENT>
	|
	| Aliases
	|
	</MvCOMMENT>

	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetAndFieldList_Load_All' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAndFieldList_Load_All( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetValueList_Load_Field' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetValueList_Load_Field( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetAppliedValueList_Load_Cookie' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAppliedValueList_Load_Cookie( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetAppliedValueList_Set_Cookie' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAppliedValueList_Set_Cookie( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CombinationFacetAppliedValueList_Clear_Cookie' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CombinationFacetAppliedValueList_Clear_Cookie( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		"id":			<MvEVAL EXPR = "{ int( l.facet:id ) }">,
		"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:code ) }">",
		"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:name ) }">",
		"enabled":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.facet:enabled ) }">,
		"inclother":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.facet:inclother ) }">,
		"fields":
		[
			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">
				<MvIF EXPR = "{ l.pos GT 1 }">
					,
				</MvIF>
				
				{
					"id":	<MvEVAL EXPR = "{ int( l.field:id ) }">,
					"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:code ) }">",
					"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:name ) }">"
				}
			</MvFOREACH>
		]
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetAndFieldList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'facet.code',			'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'facet.name',			'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'facet.variantsrc',	'variantsrc' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'facet.enabled',		'enabled' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'facet.inclother',		'inclother' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'facet.createfit',		'createfit' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'facet.disp_order',	'disp_order' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'field.code',			'field_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'field.name',			'field_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'field.disp_order',	'field_disp_order' ) }">

	<MvCOMMENT> MMBatchList always sends Offset and Count, but this function does not use them </MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'facet.id			AS facet_id,
																				 facet.disp_order	AS facet_disp_order,
																				 facet.enabled		AS facet_enabled,
																				 facet.inclother	AS facet_inclother,
																				 facet.createfit	AS facet_createfit,
																				 facet.code			AS facet_code,
																				 facet.name			AS facet_name,
																				 facet.variantsrc	AS variant_source,
																				 field.id			AS field_id,
																				 field.disp_order	AS field_disp_order,
																				 field.code			AS field_code,
																				 field.name			AS field_name,
																				 field.sort_desc	AS field_sort_desc' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CombinationFacets', 'facet' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'facet', g.Store_Table_Prefix $ 'CombinationFacetFields', 'field', 'field.facet_id = facet.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }"> 
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'code:facet.code;field.code,name:facet.name;field.name,variantsrc:facet.variantsrc,enabled:facet.enabled,inclother:facet.inclother,createfit:facet.createfit,disp_order:facet.disp_order;field.disp_order,field_code:facet.code;field.code,field_name:facet.name;field.name,field_disp_order:facet.disp_order;field.disp_order', 'facet.code;field.code' ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CombinationFacets"
				QUERY	= "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }"
				FIELDS	= "{ l.search_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00016', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total_count"		VALUE = 0>
	<MvASSIGN NAME = "l.facet_count"		VALUE = 0>
	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvASSIGN NAME = "l.last_facet_id"		VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
		<MvWHILE EXPR = "{ NOT CombinationFacets.d.EOF }">
			<MvIF EXPR = "{ l.last_facet_id NE CombinationFacets.d.facet_id }">
				<MvIF EXPR = "{ l.field_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					]
				</MvIF>

				<MvIF EXPR = "{ l.facet_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.facet_count ) }">
				"id":					<MvEVAL EXPR = "{ int( CombinationFacets.d.facet_id ) }">,
				"disp_order":			<MvEVAL EXPR = "{ int( CombinationFacets.d.facet_disp_order ) }">,
				"enabled":				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CombinationFacets.d.facet_enabled ) }">,
				"inclother":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CombinationFacets.d.facet_inclother ) }">,
				"createfit":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CombinationFacets.d.facet_createfit ) }">,
				"code":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.facet_code ) }">",
				"name":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.facet_name ) }">",
				"variantsrc":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.variant_source ) }">"

				<MvASSIGN NAME = "l.total_count"	VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_facet_id"	VALUE = "{ CombinationFacets.d.facet_id }">
				<MvASSIGN NAME = "l.field_count"	VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT ISNULL CombinationFacets.d.field_id }">
				<MvIF EXPR = "{ l.field_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				<MvELSE>
					, "fields":
					[
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.field_count ) }">
				"id":			<MvEVAL EXPR = "{ int( CombinationFacets.d.field_id ) }">,
				"disp_order":	<MvEVAL EXPR = "{ int( CombinationFacets.d.field_disp_order ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.field_code ) }">",
				"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.field_name ) }">",
				"sort_desc":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CombinationFacets.d.field_sort_desc ) }">

				<MvASSIGN NAME = "l.total_count"	VALUE = "{ l.total_count + 1 }">
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "CombinationFacets" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">

		<MvIF EXPR = "{ l.field_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			]
		</MvIF>

		<MvIF EXPR = "{ l.facet_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvIF>
		],
		"start_offset": 0,
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">
	}

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetAndFieldList_Load_All" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"code": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.combination_facet:code ) }">",
		"name": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.combination_facet:name ) }">",
		"fields":
		[
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ CombinationFacetFieldList_Load_Facet( l.combination_facet:id, l.fields ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count ) }">
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:code ) }">",
				"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:name ) }">",
				"sort_desc":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.field:sort_desc ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetValueList_Load_Field" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.field_value_count"			VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.CombinationFacetValues, l.field_values ) }">

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.combination_facet:id, l.fields ) }">

	<MvIF EXPR = "{ l.field_value_count GE l.field_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00050', 'Too many combination values' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.final_correlation"			VALUE = "{ 'v' $ ( l.field_value_count + 1 ) }">
	<MvASSIGN NAME = "l.previous_correlation"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.final_correlation $ '.value AS value, COUNT( * ) AS value_count' ) }">
	
	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.field_value" ARRAY = "l.field_values" COUNT = "{ l.field_value_count }">
		<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'v' $ l.pos }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

		<MvIF EXPR = "{ NOT ISNULL l.previous_correlation }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.field_value ) ) }">

		<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.final_correlation ) }">

	<MvIF EXPR = "{ NOT ISNULL l.previous_correlation }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.final_correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.field_value_count + 1 ]:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.query, l.final_correlation $ '.value' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'value', ternary( l.fields[ l.field_value_count + 1 ]:sort_desc, 'DESC', 'ASC' ) ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.sql_fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetValues"
				QUERY 	= "{ l.sql }"
				FIELDS	= "{ l.sql_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00046', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value_count" VALUE = 0>
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvWHILE EXPR = "{ NOT CombinationFacetValues.d.EOF }">
			<MvREFERENCEARRAY NAME = "l.have_value" VARIABLE = "l.values">
				<MvMEMBER NAME = "{ CombinationFacetValues.d.value }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT l.have_value }">
				<MvASSIGN NAME = "l.have_value"	VALUE = 1>

				<MvIF EXPR = "{ ++l.value_count GT 1 }">, </MvIF>
				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacetValues.d.value ) }">"
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetValues" ROWS = 1>
		</MvWHILE>
	]

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetAppliedValueList_Load_Cookie" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvREFERENCE NAME = "l.cookie_facet_value" VARIABLE = "{ 'l.cookies:' $ CombinationFacet_Cookie( l.combination_facet ) }">

	<MvASSIGN NAME = "l.value_count" VALUE = 0>
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvIF EXPR = "{ NOT ISNULL l.cookie_facet_value }">
			<MvFOREACH INDEX = "l.pos" ITERATOR = "l.facet_value_base64" ARRAY = "l.facet_values_base64" COUNT = "{ miva_splitstring( l.cookie_facet_value, '-', l.facet_values_base64, 'trim' ) }">
				<MvIF EXPR = "{ l.pos GT 1 }">, </MvIF>

				<MvASSIGN NAME = "l.facet_value_base64" VALUE = "{ Base64_Correct_Invalid_Padding( l.facet_value_base64 ) }">
				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( crypto_base64_decode( l.facet_value_base64 ) ) }">"
			</MvFOREACH>
		</MvIF>
	]

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetAppliedValueList_Set_Cookie" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.field_value_count" VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.CombinationFacetValues, l.field_values ) }">

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.cookie_value"			VALUE = "">

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.field_value" ARRAY = "l.field_values" COUNT = "{ l.field_value_count }">
		<MvIF EXPR = "{ l.pos GT 1 }">
			<MvASSIGN NAME = "l.cookie_value"	VALUE = "{ l.cookie_value $ '-' }">
		</MvIF>

		<MvASSIGN NAME = "l.cookie_value"		VALUE = "{ l.cookie_value $ crypto_base64_encode( l.field_value ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.cookie_name"			VALUE = "{ CombinationFacet_Cookie( l.facet ) }">
	<MvASSIGN NAME = "l.cookie_value"			VALUE = "{ glosub( l.cookie_value, '=', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie( g.Output_Cookies, l.cookie_name, l.cookie_value, g.cookiedomain, s.dyn_time_t + ( g.Domain:mmcexp * 60 ), g.cookiepath, 0, 'Lax' ) }">
	<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Library_Utilities ].OutputCookies( g.Output_Cookies ) }">

	<MvIF EXPR = "{ NOT g.Basket:cust_id OR NOT g.Customer_Session_Verified }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_field_count" VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.facet_fields ) }">

	<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Load_Existing( g.Customer:id, l.facet, l.facet_fields, l.facet_field_count, l.field_values, l.field_value_count, l.set_field_count, l.application ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.application AND l.set_field_count EQ l.field_value_count }">
		<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Update_LastUsed( l.application ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.application"			VALUE = "">
		<MvASSIGN NAME = "l.application:name"		VALUE = "">
		<MvASSIGN NAME = "l.application:cust_id"	VALUE = "{ g.Customer:id }">
		<MvASSIGN NAME = "l.application:facet_id"	VALUE = "{ l.facet:id }">
		<MvASSIGN NAME = "l.application:lastused"	VALUE = "{ s.dyn_time_t }">

		<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Insert( l.application ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.facet_field_pos" COUNT = "{ l.facet_field_count }">
			<MvIF EXPR = "{ ISNULL l.field_values[ l.facet_field_pos ] }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.field"			VALUE = "">
			<MvASSIGN NAME = "l.field:appl_id"	VALUE = "{ l.application:id }">
			<MvASSIGN NAME = "l.field:field_id" VALUE = "{ l.facet_field:id }">
			<MvASSIGN NAME = "l.field:facet_id" VALUE = "{ l.facet:id }">
			<MvASSIGN NAME = "l.field:value"	VALUE = "{ l.field_values[ l.facet_field_pos ] }">

			<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Insert( l.field ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetAppliedValueList_Clear_Cookie" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.combination_facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.cookie_name" VALUE = "{ CombinationFacet_Cookie( l.combination_facet ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ClearCookie( g.Output_Cookies, l.cookie_name, g.cookiedomain, g.cookiepath, 0 ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].OutputCookies( g.Output_Cookies ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet_Load" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.CombinationFacet_ID"	VALUE = "{ int( g.CombinationFacet_ID ) }">
	<MvASSIGN NAME = "g.CombinationFacet_Code"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.CombinationFacet_Code ) }">

	<MvIF EXPR = "{ NOT CombinationFacet_Load_ID( g.CombinationFacet_ID, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( g.CombinationFacet_Code, l.facet ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00017', 'Unable to load combination facet' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.facet"				VALUE = "">
	<MvASSIGN NAME = "l.facet:variantsrc"	VALUE = "master">
	<MvASSIGN NAME = "l.facet:enabled"		VALUE = 1>
	<MvASSIGN NAME = "l.facet:inclother"	VALUE = 0>
	<MvASSIGN NAME = "l.facet:createfit"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R:50',		'Code',						l.facet:code )											OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R:100',	'Name',						l.facet:name )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O',		'VariantSource',			l.facet:variantsrc, 'master,parts', 'master,parts' )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Enabled',					l.facet:enabled )										OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'IncludeOtherProducts',		l.facet:inclother )										OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'CreateFitmentIndicator',	l.facet:createfit ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacet_Load_Code( l.facet:code, l.existing_facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A combination facet with the code \'' $ l.existing_facet:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Insert( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_CacheSetting_Insert( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00142', 'Combination Facet \'' $ l.facet:code $ '\' created' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_facet" VALUE = "{ l.facet }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O:50',		'Code',						l.facet:code )											OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O:100',	'Name',						l.facet:name )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O',		'VariantSource',			l.facet:variantsrc, 'master,parts', 'master,parts' )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Enabled',					l.facet:enabled )										OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'IncludeOtherProducts',		l.facet:inclother )										OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'CreateFitmentIndicator',	l.facet:createfit ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacet_Load_Code( l.facet:code, l.existing_facet ) AND l.facet:id NE l.existing_facet:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A combination facet with the code \'' $ l.existing_facet:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Update( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_CacheSetting_Update( l.original_facet, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00143', 'Combination Facet \'' $ l.facet:code $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet_Update_Enabled" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet:enabled"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Enabled ) }">

	<MvIF EXPR = "{ NOT CombinationFacet_Update( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet_Update_IncludeOtherProducts" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet:inclother"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.IncludeOtherProducts ) }">

	<MvIF EXPR = "{ NOT CombinationFacet_Update( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet_Update_CreateFitmentIndicator" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'o', 'CreateFitmentIndicator', l.facet:createfit ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Update( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CBF-00144', 'Combination Facet \'' $ l.facet:code $ '\' create fitment indicator updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacet_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_CacheSetting_Delete( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Delete( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetList_DisplayOrder_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvFOREACH ITERATOR = "l.facet_order" ARRAY = "g.CombinationFacet_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.facet_order:id"					VALUE = "{ int( l.facet_order:id ) }">
		<MvASSIGN NAME = "l.facet_order:offset"				VALUE = "{ int( l.facet_order:offset ) }">
		<MvASSIGN NAME = "l.facet_order:original_offset"	VALUE = "{ int( l.facet_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.facet_order:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'CombinationFacet_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.facet_order" ARRAY = "g.CombinationFacetField_Order" INDEX = "l.facet_pos">
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.facet_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_order:id"				VALUE = "{ int( l.option_order:id ) }">
			<MvASSIGN NAME = "l.option_order:offset"			VALUE = "{ int( l.option_order:offset ) }">
			<MvASSIGN NAME = "l.option_order:original_offset"	VALUE = "{ int( l.option_order:original_offset ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.option_order:offset ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'CombinationFacetField_Order[' $ l.facet_pos $ '][ ' $ l.option_pos $ ' ]', g.Validation_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.facet_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.facet_order" ARRAY = "g.CombinationFacet_Order">
		<MvASSIGN NAME = "l.facet_changes" INDEX = "{ ++l.facet_count }" VALUE = "{ l.facet_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.facet_count }">
		<MvIF EXPR = "{ NOT CombinationFacetList_Update_Offsets( l.facet_changes ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.facet_order" ARRAY = "g.CombinationFacetField_Order" INDEX = "l.facet_id">
		<MvASSIGN NAME = "l.option_count" VALUE = 0>
		
		<MvFOREACH ITERATOR = "l.field_order" ARRAY = "l.facet_order" INDEX = "l.field_pos">
			<MvASSIGN NAME = "l.field_changes" INDEX = "{ ++l.field_count }" VALUE = "{ l.field_order }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.field_count }">
			<MvIF EXPR = "{ NOT CombinationFacetFieldList_Update_Offsets( l.facet_id, l.field_changes ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetField_Load" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.CombinationFacetField_ID"	VALUE = "{ int( g.CombinationFacetField_ID ) }">

	<MvIF EXPR = "{ NOT CombinationFacetField_Load_ID( g.CombinationFacetField_ID, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00018', 'Unable to load field' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetField_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field:facet_id"		VALUE = "{ l.facet:id }">
	<MvASSIGN NAME = "l.field:sort_desc"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R',		'Code',				l.field:code )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R:100',	'Name',				l.field:name )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'SortDescending',	l.field:sort_desc ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetField_Load_Code( l.facet:id, l.field:code, l.existing_field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A field with the code \'' $ l.existing_field:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">	
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetField_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetField_Load( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT CombinationFacet_Load_ID( l.field:facet_id, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field:facet_id"	VALUE = "{ l.facet:id }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O',		'Code',				l.field:code )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O:100',	'Name',				l.field:name )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'SortDescending',	l.field:sort_desc ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetField_Load_Code( l.facet:id, l.field:code, l.existing_field ) AND ( l.field:id NE l.existing_field:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A field with the code \'' $ l.existing_field:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">	
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetField_Update_SortDescending" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetField_Load( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'SortDescending', l.field:sort_desc ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetField_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetField_Load( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetField_Delete( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">	
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetRecordList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Product_ID"					VALUE = "{ int( g.Product_ID ) }">
	<MvASSIGN NAME = "g.CombinationFacet_ID"		VALUE = "{ int( g.CombinationFacet_ID ) }">

	<MvASSIGN NAME = "g.Filter"						VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"						VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"						VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"						VALUE = "{ int( g.Count ) }">

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet( g.CombinationFacet_ID, l.fields ) }">
	<MvIF EXPR = "{ l.field_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"				VALUE = "">
	<MvASSIGN NAME = "l.first_field_prefix"			VALUE = "">
	<MvASSIGN NAME = "l.filter"						VALUE = "">
	<MvASSIGN NAME = "l.order_by"					VALUE = "">

	<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
		<MvASSIGN NAME = "l.field_prefix"			VALUE = "{ 'f' $ l.field:id }">
		
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, l.field_prefix $ '.value AS ' $ l.field_prefix $ '_value' ) }">

		<MvIF EXPR = "{ NOT ISNULL l.first_field_prefix }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, l.first_field_prefix, g.Store_Table_Prefix $ 'CombinationFacetValues', l.field_prefix, l.field_prefix $ '.record_id = ' $ l.first_field_prefix $ '.record_id AND ' $ l.field_prefix $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.field_prefix ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, l.field_prefix $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, l.field_prefix $ '.record_id AS record_id' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, l.field_prefix $ '.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( g.Product_ID ) ) }">

			<MvASSIGN NAME = "l.first_field_prefix"	VALUE = "{ l.field_prefix }">
		</MvIF>

		<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_insert( l.filter, l.field_prefix $ '_value:' $ l.field_prefix $ '.value', -1 ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_insert( l.order_by, l.field_prefix $ '_value:' $ l.field_prefix $ '.value', -1 ) }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter, l.filter ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, g.Sort, l.order_by, 'record_id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CombinationFacetValues', l.search_sql, l.search_fields, g.Offset, g.Count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00047', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( g.Count EQ 0 ) OR ( l.value_count LT g.Count ) ) AND ( NOT CombinationFacetValues.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.value_count ) }">
			"record_id":	<MvEVAL EXPR = "{ int( CombinationFacetValues.d.record_id ) }">,

			<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
				<MvIF EXPR = "{ l.field_pos GT 1 }">
					,
				</MvIF>

				"<MvEVAL EXPR = "{ 'f' $ l.field:id $ '_value' }">": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( miva_variable_value( 'CombinationFacetValues.d.f' $ l.field:id $ '_value' ) ) }">"
			</MvFOREACH>

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			
			<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetValues" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetRecord_Validate" PARAMETERS = "product var, facet var, values var, value_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.values"						VALUE = "">
	<MvASSIGN NAME = "l.value_count"				VALUE = 0>

	<MvCOMMENT>
	|
	| Empty trailing values are permitted, but the record must meet the following criteria:
	|
	|	1. The first field must be present
	|	2. There must be no values after the first empty value
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field_count"				VALUE = "{ CombinationFacetFieldList_Load_Facet( l.facet:id, l.fields ) }">
	<MvASSIGN NAME = "l.have_empty_field"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
		<MvASSIGN NAME = "l.field_value"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( miva_variable_value( 'g.f' $ l.field:id $ '_value' ) ) }">
		<MvIF EXPR = "{ ISNULL l.field_value }">
			<MvASSIGN NAME = "l.have_empty_field"	VALUE = 1>
			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ l.have_empty_field }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'f' $ l.field:id $ '_value', l.field:name $ ' may only be specified when all preceeding fields are also provided' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.value:field_id"			VALUE = "{ l.field:id }">
		<MvASSIGN NAME = "l.value:facet_id"			VALUE = "{ l.facet:id }">
		<MvASSIGN NAME = "l.value:product_id"		VALUE = "{ l.product:id }">
		<MvASSIGN NAME = "l.value:value"			VALUE = "{ l.field_value }">

		<MvASSIGN NAME = "l.value_count"			VALUE = "{ miva_array_insert_var( l.values, l.value, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.value_count EQ 0 }">
		<MvIF EXPR = "{ l.field_count LT 1 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00061', 'The combination facet has no configured fields' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'f' $ l.fields[ 1 ]:id $ '_value', l.fields[ 1 ]:name $ ' must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetRecord_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Product_ID"					VALUE = "{ int( g.Product_ID ) }">
	<MvASSIGN NAME = "g.CombinationFacet_ID"		VALUE = "{ int( g.CombinationFacet_ID ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( g.Product_ID, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00051', 'Unable to load product' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_ID( g.CombinationFacet_ID, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00052', 'Unable to load combination facet' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetRecord_Validate( l.product, l.facet, l.values, l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetRecord_Insert( l.values, l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"						VALUE = "{ CombinationFacetProduct_Insert( l.facet:id, l.product:id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetRecord_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.CombinationFacetRecord_ID"	VALUE = "{ int( g.CombinationFacetRecord_ID ) }">

	<MvASSIGN NAME = "l.existing_value_count"		VALUE = "{ CombinationFacetValueList_Load_Record( g.CombinationFacetRecord_ID, l.existing_values ) }">
	<MvIF EXPR = "{ l.existing_value_count EQ 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00053', 'Unable to load record' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.existing_values[ 1 ]:product_id, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00054', 'Unable to load product' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_ID( l.existing_values[ 1 ]:facet_id, l.facet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00055', 'Unable to load combination facet' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetRecord_Validate( l.product, l.facet, l.values, l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetValue_Delete_All_Record( g.CombinationFacetRecord_ID ) OR
					NOT CombinationFacetRecord_Insert_LowLevel( g.CombinationFacetRecord_ID, l.values, l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetRecord_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.CombinationFacetRecord_ID"	VALUE = "{ int( g.CombinationFacetRecord_ID ) }">

	<MvASSIGN NAME = "l.existing_value_count"		VALUE = "{ CombinationFacetValueList_Load_Record( g.CombinationFacetRecord_ID, l.existing_values ) }">
	<MvIF EXPR = "{ l.existing_value_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetValue_Delete_All_Record( g.CombinationFacetRecord_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetRecords_Present( l.existing_values[ 1 ]:facet_id, l.existing_values[ 1 ]:product_id, l.present ) AND ( NOT l.present ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ CombinationFacetProduct_Delete( l.existing_values[ 1 ]:facet_id, l.existing_values[ 1 ]:product_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_CombinationFacetList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'disp_order',	'disp_order') }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'inclother',	'inclother') }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'createfit',	'createfit') }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'code',		'code') }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'name',		'name') }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CombinationFacets', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'enabled = 1', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'disp_order,inclother,createfit,code,name', 'id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CombinationFacets', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00088', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_count"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT CombinationFacets.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.facet_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.facet_count ) }">
				"id":			<MvEVAL EXPR = "{ int( CombinationFacets.d.id ) }">,
				"disp_order":	<MvEVAL EXPR = "{ int( CombinationFacets.d.disp_order ) }">,
				"enabled":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CombinationFacets.d.enabled ) }">,
				"inclother":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CombinationFacets.d.inclother ) }">,
				"createfit":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CombinationFacets.d.createfit ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.code ) }">",
				"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.name ) }">",
				"variantsrc":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacets.d.variantsrc ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "CombinationFacets" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_Fitment_Load_Product_Variant" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN>	</MvIF>
	
	<MvASSIGN NAME = "l.combinationfacet_code"	VALUE = "">
	<MvASSIGN NAME = "l.product_code"			VALUE = "">
	<MvASSIGN NAME = "l.variant_id"				VALUE = 0>
	<MvASSIGN NAME = "l.values" 				VALUE = "">
	<MvASSIGN NAME = "l.value_count" 			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code( 		'R', 'CombinationFacet_Code',	l.combinationfacet_code )	OR
					NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 'Product_Code',			l.product_code )			OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O', 'Variant_ID',				l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_Code( l.combinationfacet_code, l.combinationfacet ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00094', 'Combination Facet not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00095', 'Product not found' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvREFERENCE NAME = "l.cookie_facet_value"	VARIABLE = "{ 'l.cookies:' $ CombinationFacet_Cookie( l.combinationfacet ) }">

	<MvFOREACH ITERATOR = "l.facet_value" ARRAY = "l.facet_values" COUNT = "{ miva_splitstring( l.cookie_facet_value, '-', l.facet_values, 'trim,noempty' ) }">
		<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_array_insert( l.values, crypto_base64_decode( Base64_Correct_Invalid_Padding( l.facet_value ) ), -1 ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.fitment" VALUE = "unknown">

	<MvIF EXPR = "{ l.value_count GT 0 }">
		<MvIF EXPR = "{ NOT CombinationFacet_Product_Fitment_Value( l.combinationfacet, l.product:id, l.variant_id, l.values, l.value_count, l.fitment ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"fit": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.fitment ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetCustomerApplication_Load" PARAMETERS = "application var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Application_ID', l.application_id ) }">
		<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Load_ID( l.application_id, l.application ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00104', 'Application not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00105', 'Unable to load application: Application_ID must be specified' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.application:cust_id NE g.Basket:cust_id OR NOT g.Customer_Session_Verified }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00108', 'Application not found' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetCustomerApplication" PARAMETERS = "application var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":		<MvEVAL EXPR = "{ int( l.application:id ) }">,
	"name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.application:name ) }">",
	"lastused":	<MvEVAL EXPR = "{ int( l.application:lastused ) }">,
	"fields":
	[
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ CombinationFacetCustomerApplicationFieldList_Load_All( l.application:id, l.fields ) }">
			<MvIF EXPR = "{ l.pos GT 1 }">
				,
			</MvIF>

			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:value ) }">"
		</MvFOREACH>
	]
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetCustomerApplicationList_Load" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">									<MvFUNCTIONRETURN> </MvIF>	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT JSON_Runtime_CombinationFacet_Customer_Session_Exists() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'cust_id = ?', 'g.Basket:cust_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'lastused', 'DESC' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.sql_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CombinationFacetCustomerApplications', l.sql, l.sql_fields, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00106', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvASSIGN NAME = "l.output_count" VALUE = 0>
		<MvWHILE EXPR = "{ NOT CombinationFacetCustomerApplications.d.EOF }">
			<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Read( l.application ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				<MvEVAL EXPR = "{ JSON_CombinationFacetCustomerApplication( l.application ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetCustomerApplication_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">									<MvFUNCTIONRETURN> </MvIF>	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT JSON_Runtime_CombinationFacet_Customer_Session_Exists() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.application"			VALUE = "">
	<MvASSIGN NAME = "l.application:cust_id"	VALUE = "{ g.Basket:cust_id }">
	<MvASSIGN NAME = "l.application:facet_id"	VALUE = "{ l.facet:id }">
	<MvASSIGN NAME = "l.application:lastused"	VALUE = 0>
	<MvASSIGN NAME = "l.values"					VALUE = "">
	<MvASSIGN NAME = "l.value_count"			VALUE = 0>
	<MvASSIGN NAME = "l.fields"					VALUE = "">
	<MvASSIGN NAME = "l.field_count"			VALUE = 0>
	<MvASSIGN NAME = "l.facet_fields"			VALUE = "">
	<MvASSIGN NAME = "l.facet_field_count"		VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.facet_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		 'o:100',	'Application_Name',			l.application:name ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text_Array( 'R:254',	'CombinationFacetValues',	l.values, l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.value_count EQ 0 }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00134', 'At least one value must be provided' ) }">
	<MvELSEIF EXPR = "{ l.value_count GT l.facet_field_count }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00107', 'Value count exceeds the number of defined facet fields' ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetCustomerApplication_Load_Existing( g.Basket:cust_id, l.facet, l.facet_fields, l.facet_field_count, l.values, l.value_count, l.set_field_count, l.null ) AND l.set_field_count EQ l.value_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00145', 'An application with the specified values already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Insert( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.pos" COUNT = "{ l.facet_field_count }">
		<MvIF EXPR = "{ ISNULL l.values[ l.pos ] }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvASSIGN NAME = "l.field"			VALUE = "">
		<MvASSIGN NAME = "l.field:appl_id"	VALUE = "{ l.application:id }">
		<MvASSIGN NAME = "l.field:field_id" VALUE = "{ l.facet_field:id }">
		<MvASSIGN NAME = "l.field:facet_id" VALUE = "{ l.facet:id }">
		<MvASSIGN NAME = "l.field:value"	VALUE = "{ l.values[ l.pos ] }">

		<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Insert( l.field ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.field_count"	VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"id":		<MvEVAL EXPR = "{ int( l.application:id ) }">,
		"name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.application:name ) }">",
		"lastused":	<MvEVAL EXPR = "{ int( l.application:lastused ) }">,
		"fields":
		[
			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ l.field_count }">
				<MvIF EXPR = "{ l.pos GT 1 }">
					,
				</MvIF>

				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:value ) }">"
			</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetCustomerApplication_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">									<MvFUNCTIONRETURN> </MvIF>	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT JSON_Runtime_CombinationFacet_Customer_Session_Exists() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetCustomerApplication_Load( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_ID( l.application:facet_id, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_field_count" VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.application:facet_id, l.facet_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		 'o:100',	'Application_Name',			l.application:name ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text_Array( 'O:254',	'CombinationFacetValues',	l.values, l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.value_count GT l.facet_field_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00109', 'Value count exceeds the number of defined facet fields' ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetCustomerApplication_Load_Existing( g.Basket:cust_id, l.facet, l.facet_fields, l.facet_field_count, l.values, l.value_count, l.set_field_count, l.existing_application ) AND ( l.application:id NE l.existing_application:id ) AND ( l.set_field_count EQ l.value_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00146', 'An application with the specified values already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Update( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.value_count GT 0 }">
		<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Delete_All_Application( l.application:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.pos" COUNT = "{ l.facet_field_count }">
			<MvIF EXPR = "{ ISNULL l.values[ l.pos ] }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvASSIGN NAME = "l.field"			VALUE = "">
			<MvASSIGN NAME = "l.field:appl_id"	VALUE = "{ l.application:id }">
			<MvASSIGN NAME = "l.field:field_id" VALUE = "{ l.facet_field:id }">
			<MvASSIGN NAME = "l.field:facet_id" VALUE = "{ l.application:facet_id }">
			<MvASSIGN NAME = "l.field:value"	VALUE = "{ l.values[ l.pos ] }">

			<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Insert( l.field ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>		
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetCustomerApplication_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">									<MvFUNCTIONRETURN> </MvIF>	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT JSON_Runtime_CombinationFacet_Customer_Session_Exists() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetCustomerApplication_Load( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Delete( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetCustomerApplication_Set_Cookie" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">									<MvFUNCTIONRETURN> </MvIF>	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT JSON_Runtime_CombinationFacet_Customer_Session_Exists() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacetCustomerApplication_Load( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacet_Load_ID( l.application:facet_id, l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.cookie_values"	VALUE = "">
	<MvASSIGN NAME = "l.cookie_name"	VALUE = "{ CombinationFacet_Cookie( l.facet ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ CombinationFacetCustomerApplicationFieldList_Load_All( l.application:id, l.fields ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.cookie_values, crypto_base64_encode( l.field:value ), -1 ) }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie( g.Output_Cookies, l.cookie_name, glosub( miva_joinstring( l.cookie_values, '-', '' ), '=', '' ), g.cookiedomain, s.dyn_time_t + ( g.Domain:mmcexp * 60 ), g.cookiepath, 0, 'Lax' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].OutputCookies( g.Output_Cookies ) }">

	<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Update_LastUsed( l.application ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacetData_Load" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"facet":
		{
			"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:code ) }">",
			"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:name ) }">",
			"fields":
			[
				<MvASSIGN NAME = "l.field_output_count" VALUE = 0>
				<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" COUNT = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.facet_fields ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.field_output_count ) }">
						"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet_field:code ) }">",
						"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet_field:name ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvFOREACH>
			]
		},
		"applied_values":
		[
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

			<MvREFERENCE NAME = "l.cookie_facet_value"	VARIABLE = "{ 'l.cookies:' $ CombinationFacet_Cookie( l.facet ) }">

			<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" INDEX = "l.value_pos" COUNT = "{ CombinationFacet_ReadCookieValues( l.facet, l.cookie_facet_value, l.values ) }">
				<MvIF EXPR = "{ l.value_pos GT 1 }">
					,
				</MvIF>

				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.value ) }">"
			</MvFOREACH>
		]

		<MvIF EXPR = "{ g.Basket:cust_id AND g.Customer_Session_Verified }">
			, "customer_applications":
			[
				<MvASSIGN NAME = "l.application_output_count" VALUE = 0>
				<MvFOREACH ITERATOR = "l.application" ARRAY = "l.applications" COUNT = "{ CombinationFacetCustomerApplicationList_Load_All_Customer_And_Facet( g.Basket:cust_id, l.facet:id, l.applications ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.application_output_count ) }">
						<MvEVAL EXPR = "{ JSON_CombinationFacetCustomerApplication( l.application ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvFOREACH>
			]
		</MvIF>
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetApplicationList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_fields"		VALUE = "">
	<MvASSIGN NAME = "l.facet_field_count"	VALUE = "{ CombinationFacetFieldList_Load_Facet( l.facet:id, l.facet_fields ) }">

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.query"				VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cfca.id',			'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cfca.name',		'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cfca.lastused',	'lastused' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.id',			'cust_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.login',		'cust_login' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.pw_email',	'cust_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'cust.ship_res',	'cust_ship_res' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_fname',	'cust_ship_fname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_lname',	'cust_ship_lname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_email',	'cust_ship_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_comp',	'cust_ship_comp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_phone',	'cust_ship_phone' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_fax',	'cust_ship_fax' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_addr',	'cust_ship_addr1' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_addr2',	'cust_ship_addr2' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_city',	'cust_ship_city' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_state',	'cust_ship_state' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_zip',	'cust_ship_zip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.ship_cntry',	'cust_ship_cntry' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_fname',	'cust_bill_fname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_lname',	'cust_bill_lname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_email',	'cust_bill_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_comp',	'cust_bill_comp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_phone',	'cust_bill_phone' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_fax',	'cust_bill_fax' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_addr',	'cust_bill_addr1' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_addr2',	'cust_bill_addr2' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_city',	'cust_bill_city' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_state',	'cust_bill_state' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_zip',	'cust_bill_zip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.bill_cntry',	'cust_bill_cntry' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'cust.credit',		'cust_credit' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.note_count',	'cust_note_count' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.dt_created',	'cust_dt_created' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.dt_updated',	'cust_dt_updated' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.dt_login',	'cust_dt_login' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.dt_pwchg',	'cust_dt_pwchg' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'cust.tax_exempt',	'cust_tax_exempt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.order_cnt',	'cust_order_cnt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'cust.order_avg',	'cust_order_avg' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'cust.order_tot',	'cust_order_tot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'ba.title',		'cust_business_title' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cfca.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cust.id			AS cust_id,
																		  cust.login		AS cust_login,
																		  cust.pw_email		AS cust_pw_email,
																		  cust.ship_id		AS cust_ship_id,
																		  cust.ship_res		AS cust_ship_res,
																		  cust.ship_fname	AS cust_ship_fname,
																		  cust.ship_lname	AS cust_ship_lname,
																		  cust.ship_email	AS cust_ship_email,
																		  cust.ship_comp	AS cust_ship_comp,
																		  cust.ship_phone	AS cust_ship_phone,
																		  cust.ship_fax		AS cust_ship_fax,
																		  cust.ship_addr	AS cust_ship_addr,
																		  cust.ship_addr2	AS cust_ship_addr2,
																		  cust.ship_city	AS cust_ship_city,
																		  cust.ship_state	AS cust_ship_state,
																		  cust.ship_zip		AS cust_ship_zip,
																		  cust.ship_cntry	AS cust_ship_cntry,
																		  cust.bill_id		AS cust_bill_id,
																		  cust.bill_fname	AS cust_bill_fname,
																		  cust.bill_lname	AS cust_bill_lname,
																		  cust.bill_email	AS cust_bill_email,
																		  cust.bill_comp	AS cust_bill_comp,
																		  cust.bill_phone	AS cust_bill_phone,
																		  cust.bill_fax		AS cust_bill_fax,
																		  cust.bill_addr	AS cust_bill_addr,
																		  cust.bill_addr2	AS cust_bill_addr2,
																		  cust.bill_city	AS cust_bill_city,
																		  cust.bill_state	AS cust_bill_state,
																		  cust.bill_zip		AS cust_bill_zip,
																		  cust.bill_cntry	AS cust_bill_cntry,
																		  cust.credit		AS cust_credit,
																		  cust.note_count	AS cust_note_count,
																		  cust.dt_created	AS cust_dt_created,
																		  cust.dt_updated	AS cust_dt_updated,
																		  cust.dt_login		AS cust_dt_login,
																		  cust.dt_pwchg		AS cust_dt_pwchg,
																		  cust.tax_exempt	AS cust_tax_exempt,
																		  cust.order_cnt	AS cust_order_cnt,
																		  cust.order_avg	AS cust_order_avg,
																		  cust.order_tot	AS cust_order_tot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR(	l.query, 'ba.title', 'cust_business_title' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'Customers',	'cust' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications',	'cfca' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cust', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'cust.id = cfca.cust_id AND cfca.facet_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.facet:id ) ) }">

	<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" COUNT = "{ l.facet_field_count }">
		<MvASSIGN NAME = "l.correlation" VALUE = "{ 'cfcaf_' $ int( l.facet_field:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.correlation $ '.value AS field_' $ int( l.facet_field:id ) $ '_value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cfca', g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields', l.correlation, l.correlation $ '.appl_id = cfca.id AND ' $ l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.facet_field:id ) ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.orderby_columns" VALUE = "id:cfca.id,name:cfca.name,lastused:cfca.lastused;cfca.id,cust_id:cust.id,cust_login:cust.login,cust_pw_email:cust.pw_email,
												  cust_ship_name:cust.ship_fname;cust.ship_lname,cust_ship_fname:cust.ship_fname,cust_ship_lname:cust.ship_lname,
												  cust_ship_email:cust.ship_email,cust_ship_comp:cust.ship_comp,cust_ship_phone:cust.ship_phone,cust_ship_fax:cust.ship_fax,
												  cust_ship_addr1:cust.ship_addr,cust_ship_addr2:cust.ship_addr2,cust_ship_city:cust.ship_city,cust_ship_state:cust.ship_state,
												  cust_ship_zip:cust.ship_zip,cust_ship_cntry:cust.ship_cntry,cust_ship_res:cust.ship_res,cust_bill_name:cust.bill_fname;cust.bill_lname,
												  cust_bill_fname:cust.bill_fname,cust_bill_lname:cust.bill_lname,cust_bill_email:cust.bill_email,cust_bill_comp:cust.bill_comp,
												  cust_bill_phone:cust.bill_phone,cust_bill_fax:cust.bill_fax,cust_bill_addr1:cust.bill_addr,cust_bill_addr2:cust.bill_addr2,
												  cust_bill_city:cust.bill_city,cust_bill_state:cust.bill_state,cust_bill_zip:cust.bill_zip,cust_bill_cntry:cust.bill_cntry,
												  cust_business_title:ba.title:null_char,cust_note_count:cust.note_count,cust_dt_created:cust.dt_created,cust_dt_updated:cust.dt_updated,
												  cust_dt_login:cust.dt_login,cust_dt_pwchg:cust.dt_pwchg,cust_credit:cust.credit,cust_tax_exempt:cust.tax_exempt,cust_order_cnt:cust.order_cnt,
												  cust_order_avg:cust.order_avg,cust_order_tot:cust.order_tot">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, l.orderby_columns, 'cust.login' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CombinationFacetCustomerApplications', l.sql, l.fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00112', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT CombinationFacetCustomerApplications.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.output_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Read( l.application ) }">
			<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Customer_Read( l.customer ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				"id":		<MvEVAL EXPR = "{ int( l.application:id ) }">,
				"name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.application:name ) }">",
				"cust_id":	<MvEVAL EXPR = "{ int( l.application:cust_id ) }">,
				"facet_id":	<MvEVAL EXPR = "{ int( l.application:facet_id ) }">,
				"lastused":	<MvEVAL EXPR = "{ int( l.application:lastused ) }">,
				"customer":
				{
					<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer( l.customer ) }">,

					"business_title":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacetCustomerApplications.d.cust_business_title ) }">"
				}
				
				<MvIF EXPR = "{ l.facet_field_count GT 0 }">
					,
					<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.fields_pos" COUNT = "{ l.facet_field_count }">
						<MvIF EXPR = "{ l.fields_pos GT 1 }">
							,
						</MvIF>

						"<MvEVAL EXPR = "{  [ g.Module_JSON ].JSON_Encode( 'field_' $ l.facet_field:id $ '_value' ) }">": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( miva_variable_value( 'CombinationFacetCustomerApplications.d.field_' $ l.facet_field:id $ '_value' ) ) }">"
					</MvFOREACH>
				</MvIF>
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CombinationFacetCustomerApplicationList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT JSON_CombinationFacet_Load( l.facet ) }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_fields"		VALUE = "">
	<MvASSIGN NAME = "l.facet_field_count"	VALUE = "{ CombinationFacetFieldList_Load_Facet( l.facet:id, l.facet_fields ) }">

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.query"				VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cfca.id',			'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cfca.name',		'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cfca.lastused',	'lastused' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cfca.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications',	'cfca' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'cfca.cust_id = ? AND cfca.facet_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.customer:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.facet:id ) ) }">

	<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" COUNT = "{ l.facet_field_count }">
		<MvASSIGN NAME = "l.correlation" VALUE = "{ 'cfcaf_' $ int( l.facet_field:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.correlation $ '.value AS field_' $ int( l.facet_field:id ) $ '_value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cfca', g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields', l.correlation, l.correlation $ '.appl_id = cfca.id AND ' $ l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.facet_field:id ) ) }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, 'id:cfca.id,name:cfca.name;cfca.id,lastused:cfca.lastused;cfca.id', 'cfca.lastused;cfca.id' ) }">

	<MvASSIGN NAME = "l.sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CombinationFacetCustomerApplications', l.sql, l.fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CBF-00113', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT CombinationFacetCustomerApplications.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.output_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				"id":			<MvEVAL EXPR = "{ int( CombinationFacetCustomerApplications.d.id ) }">,
				"cust_id":		<MvEVAL EXPR = "{ int( CombinationFacetCustomerApplications.d.cust_id ) }">,
				"facet_id":		<MvEVAL EXPR = "{ int( CombinationFacetCustomerApplications.d.facet_id ) }">,
				"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CombinationFacetCustomerApplications.d.name ) }">",
				"lastused":		<MvEVAL EXPR = "{ int( CombinationFacetCustomerApplications.d.lastused ) }">

				<MvIF EXPR = "{ l.facet_field_count GT 0 }">
					,
					<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.fields_pos" COUNT = "{ l.facet_field_count }">
						<MvIF EXPR = "{ l.fields_pos GT 1 }">
							,
						</MvIF>

						"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( 'field_' $ l.facet_field:id $ '_value' ) }">": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( miva_variable_value( 'CombinationFacetCustomerApplications.d.field_' $ l.facet_field:id $ '_value' ) ) }">"
					</MvFOREACH>
				</MvIF>
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CombinationFacet_Customer_Session_Exists" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT g.Basket:cust_id OR NOT g.Customer_Session_Verified }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'invalid_session', 'Customer not logged in' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Copy Product Feature (copy_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Copy_Product" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacetProduct_Delete_All_Product( l.dest_product:id ) OR
					NOT CombinationFacetValue_Delete_All_Product( l.dest_product:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts ( facet_id, product_id )
						  SELECT
							facet_id, ?
						  FROM ' $
							g.Store_Table_Prefix $ 'CombinationFacetProducts
						  WHERE
							product_id = ?' }"
			 FIELDS = "l.dest_product:id,
					   l.source_product:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00084', g.MvQUERY_Error ) }">
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetValues"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues WHERE product_id = ? ORDER BY record_id' }"
				FIELDS	= "l.source_product:id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00085', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.last_record_id"	VALUE = 0>
	<MvASSIGN NAME = "l.values"			VALUE = "">
	<MvASSIGN NAME = "l.value_count"	VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT CombinationFacetValues.d.EOF }">
		<MvEVAL EXPR = "{ CombinationFacetValue_Read( l.value ) }">
		<MvASSIGN NAME = "l.value:product_id" VALUE = "{ l.dest_product:id }">
	
		<MvIF EXPR = "{ l.last_record_id GT 0 AND l.last_record_id NE l.value:record_id }">
			<MvIF EXPR = "{ NOT CombinationFacetRecord_Insert( l.values, l.value_count ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetValues">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.values"			VALUE = "">
			<MvASSIGN NAME = "l.value_count"	VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_array_insert_var( l.values, l.value, -1 ) }">
		<MvASSIGN NAME = "l.last_record_id"	VALUE = "{ l.value:record_id }">

		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetValues">

	<MvIF EXPR = "{ l.value_count GT 0 }">
		<MvIF EXPR = "{ NOT CombinationFacetRecord_Insert( l.values, l.value_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Runtime Basket Item (rt_basketitem)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Insert_Validate" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Insert" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Determine which combination facets have a persistent fitment cookie
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvASSIGN NAME = "l.persistent_facet_count"						VALUE = 0>
	<MvASSIGN NAME = "l.persistent_facets"							VALUE = "">

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvIF EXPR = "{ NOT l.facet:createfit }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvREFERENCE NAME = "l.cookie_facet_value"					VARIABLE = "{ 'l.cookies:' $ CombinationFacet_Cookie( l.facet ) }">

		<MvIF EXPR = "{ NOT ISNULL l.cookie_facet_value }">
			<MvASSIGN NAME = "l.persistent_facet"					VALUE = "">
			<MvASSIGN NAME = "l.persistent_facet:facet"				VALUE = "{ l.facet }">
			<MvASSIGN NAME = "l.persistent_facet:value_count"		VALUE = 0>
			<MvASSIGN NAME = "l.persistent_facet:values"			VALUE = "">

			<MvFOREACH ITERATOR = "l.facet_value_base64" ARRAY = "l.facet_values_base64" COUNT = "{ miva_splitstring( l.cookie_facet_value, '-', l.facet_values_base64, 'trim' ) }">
				<MvASSIGN NAME = "l.persistent_facet:value_count"	VALUE = "{ miva_array_insert( l.persistent_facet:values, crypto_base64_decode( Base64_Correct_Invalid_Padding( l.facet_value_base64 ) ), -1 ) }">
			</MvFOREACH>

			<MvASSIGN NAME = "l.persistent_facet_count"				VALUE = "{ miva_array_insert_var( l.persistent_facets, l.persistent_facet, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| For each facet with a fitment cookie, if there is a positive fitment, add an option
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.persistent_facet" ARRAY = "l.persistent_facets" COUNT = "{ l.persistent_facet_count }">
		<MvASSIGN NAME = "l.fitment" VALUE = "unknown">

		<MvIF EXPR = "{ NOT CombinationFacet_Product_Fitment_Value( l.persistent_facet:facet, l.basketitem:product_id, l.basketitem:variant_id, l.persistent_facet:values, l.persistent_facet:value_count, l.fitment ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.fitment EQ 'exact' }">
			<MvASSIGN NAME = "l.option"						VALUE = "">
			<MvASSIGN NAME = "l.option:basket_id"			VALUE = "{ l.basketitem:basket_id }">
			<MvASSIGN NAME = "l.option:attr_id"				VALUE = 0>
			<MvASSIGN NAME = "l.option:attr_code"			VALUE = "fit">
			<MvASSIGN NAME = "l.option:attmpat_id"			VALUE = 0>
			<MvASSIGN NAME = "l.option:option_id"			VALUE = 0>
			<MvASSIGN NAME = "l.option:opt_code"			VALUE = "{ l.persistent_facet:facet:code }">
			<MvASSIGN NAME = "l.option:retail"				VALUE = 0.00>
			<MvASSIGN NAME = "l.option:base_price"			VALUE = 0.00>
			<MvASSIGN NAME = "l.option:price"				VALUE = 0.00>
			<MvASSIGN NAME = "l.option:weight"				VALUE = 0.00>
			<MvASSIGN NAME = "l.option:data"				VALUE = "{ miva_joinstring( l.persistent_facet:values, ' ', '' ) }">

			<MvASSIGN NAME = "l.basketitem:option_count"	VALUE = "{ miva_array_insert_var( l.basketitem:options, l.option, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Update_Validate" PARAMETERS = "module var, original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Update" PARAMETERS = "module var, original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Delete_Validate" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Delete" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Add/Edit Screen Feature (vis_cust)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Customer_Tabs" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.tabs, 'CFCA' $ l.facet:id $ ':' $ glosub( l.facet:name, ',', '' ) $ ' Applications', -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ miva_joinstring( l.tabs, ',', '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Head" PARAMETERS = "module var, tab, customer var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.facet_count" VALUE = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">

	<MvIF EXPR = "{ NOT miva_array_search( l.facets, 1, l.facet, 'l.tab EQ \'CFCA\' $ l.facet:id' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_CombinationFacet_CustomerApplicationList_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_CombinationFacet_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacet_CustomerApplicationList_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacet_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script type="text/javascript">
		MMScreen_LoadFinished( function() { new CombinationFacet_CustomerApplicationList( <MvEVAL EXPR = "{ int( l.customer:id ) }">,
		{
			<MvEVAL EXPR = "{ JSON_CombinationFacet( l.facet ) }">
		} ); } );
	</script>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Content" PARAMETERS = "module var, tab, load_fields, customer var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'CFCA' IN l.tab NE 1 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_CombinationFacet_CustomerApplicationList_HTML( l.module ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Insert" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Delete" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Update" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Batch Edit Screen Feature (vis_custbe)
|
</MvCOMMENT>
 
<MvFUNCTION NAME = "Module_Customer_BatchEdit_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.tabs, 'CFCA' $ l.facet:id $ ':' $ glosub( l.facet:name, ',', '' ) $ ' Applications', -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ miva_joinstring( l.tabs, ',', '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_BatchEdit_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.facet_count" VALUE = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">

	<MvIF EXPR = "{ NOT miva_array_search( l.facets, 1, l.facet, 'l.tab EQ \'CFCA\' $ l.facet:id' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
 
	<MvEVAL EXPR = "{ Element_CombinationFacet_ApplicationList_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_CombinationFacet_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacet_ApplicationList_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_CombinationFacet_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script type="text/javascript">
		MMScreen_LoadFinished( function() { new CombinationFacet_ApplicationList(
		{
			<MvEVAL EXPR = "{ JSON_CombinationFacet( l.facet ) }">
		} ); } );
	</script>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_BatchEdit_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'CFCA' IN l.tab NE 1 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_CombinationFacet_ApplicationList_HTML( l.module ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_BatchEdit_Delete" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_BatchEdit_Update" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_BatchEdit_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Configuration Change Notification Feature (not_cust)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Customer_Insert" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Customer_Update" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Customer_Delete" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CombinationFacetCustomerApplication_Delete_All_Customer( l.customer:id ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module Shopping Interface Activity Logging Feature (log)
|
</MvCOMMENT>

<MvFUNCTION NAME = "LogModule_Action" PARAMETERS = "module var, action" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.action EQ 'LOGN' }">								<MvFUNCTIONRETURN VALUE = "{ LogModule_Action_Login( l.module ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'ICST' OR l.action EQ 'ICSQ' }">	<MvFUNCTIONRETURN VALUE = "{ LogModule_Action_AccountCreation( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_Action_Login" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvASSIGN NAME = "l.facet_count" VALUE = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">

	<MvEVAL EXPR = "{ CombinationFacet_ReadAllCookieValues( l.facets, l.facet_count ) }">

	<MvCOMMENT>
	|
	| For each active facet:
	| 	If there is a persistent cookie present, ensure that a CombinationFacetCustomerApplication record exists that is an exact match (same number of fields, same values). 
	|	If one exists, update lastused. If one does not exist, create it. If there is not a persistent cookie present, load the most recent CombinationFacetCustomerApplication 
	|	record and set the cookie. Ensure that the cookie value will be applied for other operations performed in the same request.
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ l.facet_count }">
		<MvASSIGN NAME = "l.application"			VALUE = "">
		<MvASSIGN NAME = "l.facet:field_count"		VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.facet:fields ) }">

		<MvIF EXPR = "{ l.facet:cookie_value_count EQ 0 }">
			<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Load_LastUsed( g.Customer:id, l.facet:id, l.application ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ NOT ISNULL l.application }">
				<MvASSIGN NAME = "l.cookie_values"		VALUE = "">
				<MvASSIGN NAME = "l.cookie_value_count" VALUE = 0>

				<MvFOREACH ITERATOR = "l.field_value" ARRAY = "l.field_values" COUNT = "{ CombinationFacetCustomerApplicationFieldList_Load_All( l.application:id, l.field_values ) }">
					<MvASSIGN NAME = "l.cookie_value_count" VALUE = "{ miva_array_insert( l.cookie_values, crypto_base64_encode( l.field_value:value ), -1 ) }">					
				</MvFOREACH>

				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie( g.Output_Cookies, l.facet:cookie_name, glosub( miva_joinstring( l.cookie_values, '-', 'noempty' ), '=', '' ), g.cookiedomain, s.dyn_time_t + ( g.Domain:mmcexp * 60 ), g.cookiepath, 0, 'Lax' ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].OutputCookies( g.Output_Cookies ) }">

				<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Update_LastUsed( l.application ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Load_Existing( g.Customer:id, l.facet, l.facet:fields, l.facet:field_count, l.facet:cookie_values, l.facet:cookie_value_count, l.set_field_count, l.application ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ ISNULL l.application OR l.set_field_count NE l.facet:cookie_value_count }">
				<MvASSIGN NAME = "l.application"			VALUE = "">
				<MvASSIGN NAME = "l.application:name"		VALUE = "">
				<MvASSIGN NAME = "l.application:cust_id"	VALUE = "{ g.Customer:id }">
				<MvASSIGN NAME = "l.application:facet_id"	VALUE = "{ l.facet:id }">
				<MvASSIGN NAME = "l.application:lastused"	VALUE = "{ s.dyn_time_t }">

				<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Insert( l.application ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet:fields" INDEX = "l.facet_field_pos" COUNT = "{ l.facet:field_count }">
					<MvIF EXPR = "{ ISNULL l.facet:cookie_values[ l.facet_field_pos ] }">
						<MvFOREACHSTOP>
					</MvIF>

					<MvASSIGN NAME = "l.field"			VALUE = "">
					<MvASSIGN NAME = "l.field:appl_id"	VALUE = "{ l.application:id }">
					<MvASSIGN NAME = "l.field:field_id" VALUE = "{ l.facet_field:id }">
					<MvASSIGN NAME = "l.field:facet_id" VALUE = "{ l.facet:id }">
					<MvASSIGN NAME = "l.field:value"	VALUE = "{ l.facet:cookie_values[ l.facet_field_pos ] }">

					<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Insert( l.field ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvFOREACH>
			<MvELSEIF EXPR = "{ NOT ISNULL l.application }">
				<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Update_LastUsed( l.application ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_Action_AccountCreation" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.facet_count" VALUE = "{ CombinationFacetList_Load_Enabled_Cached( l.facets ) }">

	<MvEVAL EXPR = "{ CombinationFacet_ReadAllCookieValues( l.facets, l.facet_count ) }">

	<MvCOMMENT>
	|
	| For each active facet, if there is a persistent cookie present, create a CombinationFacetCustomerApplication record
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ l.facet_count }">
		<MvIF EXPR = "{ l.facet:cookie_value_count EQ 0 }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.application"			VALUE = "">
		<MvASSIGN NAME = "l.application:name"		VALUE = "">
		<MvASSIGN NAME = "l.application:cust_id"	VALUE = "{ g.Basket:cust_id }">
		<MvASSIGN NAME = "l.application:facet_id"	VALUE = "{ l.facet:id }">
		<MvASSIGN NAME = "l.application:lastused"	VALUE = 0>

		<MvIF EXPR = "{ NOT CombinationFacetCustomerApplication_Insert( l.application ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.facet_field_pos" COUNT = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.facet_fields ) }">
			<MvIF EXPR = "{ ISNULL l.facet:cookie_values[ l.facet_field_pos ] }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.field"			VALUE = "">
			<MvASSIGN NAME = "l.field:appl_id"	VALUE = "{ l.application:id }">
			<MvASSIGN NAME = "l.field:field_id" VALUE = "{ l.facet_field:id }">
			<MvASSIGN NAME = "l.field:facet_id" VALUE = "{ l.facet:id }">
			<MvASSIGN NAME = "l.field:value"	VALUE = "{ l.facet:cookie_values[ l.facet_field_pos ] }">

			<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Insert( l.field ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_Screen" PARAMETERS = "module var, screen" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_UIException" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Generate_CSS_Code" PARAMETERS = "code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code" STANDARDOUTPUTLEVEL = "text, html">.mm_combination_facet_container {
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	padding: 1em;
	border: 1px solid #ddd;
	box-sizing: border-box;
}

.mm_combination_facet_container *,
.mm_combination_facet_container *::before,
.mm_combination_facet_container *::after {
	box-sizing: inherit;
}

.mm_combination_facet_fields {
	margin-right: auto;
}

.mm_combination_facet_fields select {
	font-family: inherit;
	font-size: 100%;
	line-height: normal;
}

.mm_combination_facet_action_container {
	padding-left: 1em;
}

.mm_combination_facet_action {
	display: inline-block;
	padding: 0.25em 0.5em;
	color: inherit;
	font: inherit;
	line-height: normal;
	text-align: center;
	border: 1px solid #ddd;
	background-color: #fff;
	cursor: pointer;
	overflow: visible;
	user-select: none;
}

.mm_combination_facet_action:active {
	box-shadow: 0 0 1px 1px currentColor;
}

.mm_combination_facet_action.disabled {
	cursor: auto;
	border-color: rgba(118, 118, 118, 0.3);
	opacity: 0.7;
}

.mm_combination_facet_action:not(.disabled):hover {
	background-color: #f7f7f7;
	outline: 0 none;
}

.mm_combination_facet_action:not(.disabled):focus {
	box-shadow: 0 0 2px 1px currentColor;
	outline: 0 none;
}</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "Base64_Correct_Invalid_Padding" PARAMETERS = "base64" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( len_var( l.base64 ) MOD 4 ) EQ 1 }">			<MvFUNCTIONRETURN VALUE = "{ l.base64 $ '===' }">
	<MvELSEIF EXPR = "{ ( len_var( l.base64 ) MOD 4 ) EQ 2 }">		<MvFUNCTIONRETURN VALUE = "{ l.base64 $ '==' }">
	<MvELSEIF EXPR = "{ ( len_var( l.base64 ) MOD 4 ) EQ 3 }">		<MvFUNCTIONRETURN VALUE = "{ l.base64 $ '=' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.base64 }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Cookie" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'mm5-' $ [ g.Module_Library_Utilities ].AlphaNumericOnly( g.Store:code ) $ '-facet-' $ [ g.Module_Library_Utilities ].AlphaNumericOnly( l.facet:code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CacheSetting_Insert" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvLOCKFILE FILE = "{ [ g.Module_Feature_CHE_UT ].Store_CacheSettings_LockFile( g.Store ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ CombinationFacet_CacheSetting_Insert_LowLevel( l.facet ) }">
	</MvLOCKFILE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CacheSetting_Insert_LowLevel" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Store_Load_ID( g.Store:id, l.store ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.cookie_name" VALUE = "{ CombinationFacet_Cookie( l.facet ) }">

	<MvIF EXPR = "{ miva_member_exists( l.store:cacheset:cookie, l.cookie_name ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGNARRAY NAME = "l.store:cacheset:cookie" VALUE = "key">
		<MvMEMBER NAME = "{ l.cookie_name }">
		<MvMEMBER NAME = "mode">
	</MvASSIGNARRAY>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Store_Update_CacheSettings( l.store ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CacheSetting_Update" PARAMETERS = "original_facet var, facet var" STANDARDOUTPUTLEVEL = "">
	<MvLOCKFILE FILE = "{ [ g.Module_Feature_CHE_UT ].Store_CacheSettings_LockFile( g.Store ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ CombinationFacet_CacheSetting_Update_LowLevel( l.original_facet, l.facet ) }">
	</MvLOCKFILE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CacheSetting_Update_LowLevel" PARAMETERS = "original_facet var, facet var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Store_Load_ID( g.Store:id, l.store ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.original_cookie_name"	VALUE = "{ CombinationFacet_Cookie( l.original_facet ) }">
	<MvASSIGN NAME = "l.cookie_name"			VALUE = "{ CombinationFacet_Cookie( l.facet ) }">

	<MvIF EXPR = "{ strcasecmp( l.original_cookie_name, l.cookie_name ) EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT miva_member_exists( l.store:cacheset:cookie, l.original_cookie_name ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Transfer the settings from the old cookie name to the new cookie name, then clear the old cookie name
	|
	</MvCOMMENT>

	<MvREFERENCEARRAY NAME = "l.original_settings" VARIABLE = "l.store:cacheset:cookie">
		<MvMEMBER NAME = "{ l.original_cookie_name }">
	</MvREFERENCEARRAY>

	<MvASSIGNARRAY NAME = "l.store:cacheset:cookie" VALUE = "{ l.original_settings }">
		<MvMEMBER NAME = "{ l.cookie_name }">
	</MvASSIGNARRAY>

	<MvASSIGNARRAY NAME = "l.store:cacheset:cookie" VALUE = "">
		<MvMEMBER NAME = "{ l.original_cookie_name }">
	</MvASSIGNARRAY>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Store_Update_CacheSettings( l.store ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CacheSetting_Delete" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvLOCKFILE FILE = "{ [ g.Module_Feature_CHE_UT ].Store_CacheSettings_LockFile( g.Store ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ CombinationFacet_CacheSetting_Delete_LowLevel( l.facet ) }">
	</MvLOCKFILE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CacheSetting_Delete_LowLevel" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Store_Load_ID( g.Store:id, l.store ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.cookie_name" VALUE = "{ CombinationFacet_Cookie( l.facet ) }">

	<MvIF EXPR = "{ NOT miva_member_exists( l.store:cacheset:cookie, l.cookie_name ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGNARRAY NAME = "l.store:cacheset:cookie" VALUE = "">
		<MvMEMBER NAME = "{ l.cookie_name }">
	</MvASSIGNARRAY>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Store_Update_CacheSettings( l.store ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Template_Filename" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'combinationfacet_' $ l.facet:id $ '.mvc' }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Load_CustomFieldCode_Cached" PARAMETERS = "customfield_code, field_type var, facet var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.resolved_code"	VALUE = "">
	<MvASSIGN NAME = "l.field_type"		VALUE = "value">

	<MvIF EXPR = "{ CombinationFacet_Load_Code_Cached( l.customfield_code, l.facet ) }">							<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ CombinationFacet_CustomFieldCode_IsFitment( l.customfield_code, l.resolved_code ) }">		<MvASSIGN NAME = "l.field_type"	VALUE = "fitment">
	<MvELSEIF EXPR = "{ CombinationFacet_CustomFieldCode_IsApplication( l.customfield_code, l.resolved_code ) }">	<MvASSIGN NAME = "l.field_type"	VALUE = "application">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.resolved_code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00089' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CombinationFacet_Load_Code_Cached( l.resolved_code, l.facet ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CustomFieldCode_IsFitment" PARAMETERS = "code, resolved_code var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.suffix_pos" VALUE = "{ indexofli( '_fit', l.code, len_var( l.code ) ) }">

	<MvIF EXPR = "{ l.suffix_pos EQ len_var( l.code ) - 3 }">
		<MvASSIGN NAME = "l.resolved_code" VALUE = "{ substring_var( l.code, 1, l.suffix_pos - 1 ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_CustomFieldCode_IsApplication" PARAMETERS = "code, resolved_code var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.suffix_pos" VALUE = "{ indexofli( '_application', l.code, len_var( l.code ) ) }">

	<MvIF EXPR = "{ l.suffix_pos EQ len_var( l.code ) - 11 }">
		<MvASSIGN NAME = "l.resolved_code" VALUE = "{ substring_var( l.code, 1, l.suffix_pos - 1 ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_ReadAllCookieValues" PARAMETERS = "facets var, facet_count" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ParseCookies( l.cookies ) }">

	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ l.facet_count }">
		<MvASSIGN NAME = "l.facet:cookie_name"				VALUE = "{ CombinationFacet_Cookie( l.facet ) }">
		<MvASSIGN NAME = "l.facet:cookie_value" 			VALUE = "{ miva_variable_value( 'l.cookies:' $ l.facet:cookie_name ) }">
		<MvASSIGN NAME = "l.facet:cookie_value_count" 		VALUE = 0>

		<MvIF EXPR = "{ NOT ISNULL l.facet:cookie_value }">
			<MvASSIGN NAME = "l.facet:cookie_value_count"	VALUE = "{ CombinationFacet_ReadCookieValues( l.facet, l.facet:cookie_value, l.facet:cookie_values ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_ReadCookieValues" PARAMETERS = "facet var, facet_cookie_value, values var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.values"			VALUE = "">
	<MvASSIGN NAME = "l.value_count"	VALUE = 0>

	<MvIF EXPR = "{ ISNULL l.facet_cookie_value }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.cookie_value" ARRAY = "l.cookie_values" COUNT = "{ miva_splitstring( l.facet_cookie_value, '-', l.cookie_values, 'trim' ) }">
		<MvASSIGN NAME = "l.decoded_value"	VALUE = "{ crypto_base64_decode( Base64_Correct_Invalid_Padding( l.cookie_value ) ) }">
		<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_array_insert( l.values, substring_var( l.decoded_value, 1, 254 ), -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.value_count }">
</MvFUNCTION>

<MvCOMMENT>
|
| Fitment Determination Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacet_Product_Fitment_Value" PARAMETERS = "facet var, product_id, variant_id, values var, value_count, fitment var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fitment" VALUE = "unknown">

	<MvIF EXPR = "{ l.facet:variantsrc EQ 'master' }">		<MvFUNCTIONRETURN VALUE = "{ CombinationFacet_Product_Fitment_Value_Master( l.facet, l.product_id, l.values, l.value_count, l.fitment ) }">
	<MvELSEIF EXPR = "{ l.facet:variantsrc EQ 'parts' }">	<MvFUNCTIONRETURN VALUE = "{ CombinationFacet_Product_Fitment_Value_Parts( l.facet, l.product_id, l.variant_id, l.values, l.value_count, l.fitment ) }">
	<MvELSE>												<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Product_Fitment_Value_Master" PARAMETERS = "facet var, product_id, values var, value_count, fitment var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fitment"						VALUE = "unknown">
	<MvASSIGN NAME = "l.previous_correlation"			VALUE = "">

	<MvIF EXPR = "{ l.value_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.field_count"					VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">

	<MvIF EXPR = "{ l.value_count LE l.field_count }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cfv_' $ int( l.facet:id ) $ '_' $ int( l.fields[ 1 ]:id ) $ '.record_id' ) }">

		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
			<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

			<MvIF EXPR = "{ NOT ISNULL l.previous_correlation }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
			<MvELSE>												<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.product_id ) ) }">				
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">

			<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.facet_sql"					VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.facet_fields ) }">

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "Fitment"
					QUERY	= "{ 'SELECT
									record_id,
									COUNT( * ) AS dimensions
								  FROM
									' $ g.Store_Table_Prefix $ 'CombinationFacetValues
								  WHERE
									record_id IN ( ' $ l.facet_sql $ ' )
								  GROUP BY
									record_id' }"
					FIELDS	= "{ l.facet_fields }">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00090', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT Fitment.d.EOF }">
			<MvASSIGN NAME = "l.fitment"				VALUE = "partial">

			<MvWHILE EXPR = "{ NOT Fitment.d.EOF }">
				<MvIF EXPR = "{ Fitment.d.dimensions EQ l.value_count }">
					<MvASSIGN NAME = "l.fitment"		VALUE = "exact">
					<MvWHILESTOP>
				</MvIF>

				<MvSKIP NAME = "Merchant" VIEW = "Fitment" ROWS = 1>
			</MvWHILE>
		</MvIF>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Fitment">

		<MvIF EXPR = "{ l.fitment NE 'unknown' }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| If we reach this point, either the persistent cookie has more values than the facet has fields, or there was no direct or partial
	| match with the cookie value.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT l.facet:inclother }">
		<MvASSIGN NAME = "l.fitment" VALUE = "none">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CombinationFacetProducts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts WHERE facet_id = ? AND product_id = ?' }"
				FIELDS	= "l.facet:id, l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00091', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CombinationFacetProducts.d.EOF }">	<MvASSIGN NAME = "l.fitment" VALUE = "none">
	<MvELSE>												<MvASSIGN NAME = "l.fitment" VALUE = "universal">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetProducts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Product_Fitment_Value_Parts" PARAMETERS = "facet var, product_id, variant_id, values var, value_count, fitment var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.facet_query"					VALUE = "">
	<MvASSIGN NAME = "l.query"							VALUE = "">
	<MvASSIGN NAME = "l.fitment"						VALUE = "unknown">
	<MvASSIGN NAME = "l.field_count"					VALUE = "{ CombinationFacetFieldList_Load_Facet_Cached( l.facet:id, l.fields ) }">
	<MvASSIGN NAME = "l.previous_correlation"			VALUE = "">

	<MvIF EXPR = "{ l.value_count LE l.field_count }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.facet_query, 'cfv_' $ int( l.facet:id ) $ '_' $ int( l.fields[ 1 ]:id ) $ '.record_id' ) }">

		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
			<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'cfv_' $ int( l.facet:id ) $ '_' $ int( l.fields[ l.pos ]:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.facet_query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

			<MvIF EXPR = "{ NOT ISNULL l.previous_correlation }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
			<MvELSE>												<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query, l.correlation $ '.product_id = pvp.part_id', '' ) }">				
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.fields[ l.pos ]:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.value ) ) }">

			<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.facet_sql"					VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.facet_query, l.facet_fields ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'pvp.part_id,
																			  cfv.record_id,
																			  COUNT( cfv.record_id ) AS dimensions' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductVariantParts', 'pvp' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pvp', g.Store_Table_Prefix $ 'CombinationFacetValues', 'cfv', 'cfv.record_id IN ( ' $ l.facet_sql $ ' )', l.facet_fields ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pvp.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.product_id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pvp.variant_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.variant_id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.query, 'pvp.part_id, cfv.record_id' ) }">

		<MvASSIGN NAME = "l.query_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.query_fields ) }">

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "Fitment"
					QUERY	= "{ l.query_sql }"
					FIELDS	= "{ l.query_fields }">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00092', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT Fitment.d.EOF }">
			<MvASSIGN NAME = "l.fitment"				VALUE = "exact">

			<MvWHILE EXPR = "{ NOT Fitment.d.EOF }">
				<MvIF EXPR = "{ Fitment.d.dimensions NE l.value_count }">
					<MvASSIGN NAME = "l.fitment"		VALUE = "{ ternary( Fitment.d.dimensions EQ 0, 'unknown', 'partial' ) }">

					<MvWHILESTOP>
				</MvIF>

				<MvSKIP NAME = "Merchant" VIEW = "Fitment" ROWS = 1>
			</MvWHILE>
		</MvIF>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Fitment">

		<MvIF EXPR = "{ l.fitment NE 'unknown' }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| If we reach this point, either the persistent cookie has more values than the facet has fields, or there was no direct or partial
	| match with the cookie value.
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CombinationFacetProducts"
				QUERY	= "{ 'SELECT
								COUNT( pvp.part_id )	AS part_count,
								COUNT( cfp.product_id ) AS product_count
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts cfp ON cfp.facet_id = ? AND cfp.product_id = pvp.part_id
							  WHERE
								pvp.product_id = ? AND
								pvp.variant_id = ?' }"
				FIELDS	= "l.facet:id, l.product_id, l.variant_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00093', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetProducts.d.part_count EQ 0 }">			<MvASSIGN NAME = "l.fitment" VALUE = "unknown">
	<MvELSEIF EXPR = "{ NOT l.facet:inclother }">							<MvASSIGN NAME = "l.fitment" VALUE = "none">
	<MvELSEIF EXPR = "{ CombinationFacetProducts.d.product_count GT 0 }">	<MvASSIGN NAME = "l.fitment" VALUE = "none">
	<MvELSE>																<MvASSIGN NAME = "l.fitment" VALUE = "universal">
	</MvIF>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetProducts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Database Functions: sNN_CombinationFacets
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacet_Read" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.facet:id"			VALUE = "{ CombinationFacets.d.id }">
	<MvASSIGN NAME = "l.facet:disp_order"	VALUE = "{ CombinationFacets.d.disp_order }">
	<MvASSIGN NAME = "l.facet:enabled"		VALUE = "{ CombinationFacets.d.enabled }">
	<MvASSIGN NAME = "l.facet:inclother"	VALUE = "{ CombinationFacets.d.inclother }">
	<MvASSIGN NAME = "l.facet:createfit"	VALUE = "{ CombinationFacets.d.createfit }">
	<MvASSIGN NAME = "l.facet:code"			VALUE = "{ CombinationFacets.d.code }">
	<MvASSIGN NAME = "l.facet:name"			VALUE = "{ CombinationFacets.d.name }">
	<MvASSIGN NAME = "l.facet:variantsrc"	VALUE = "{ CombinationFacets.d.variantsrc }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Insert" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ Generate_Template_Code( l.template_source ) }">

	<MvASSIGN NAME = "l.facet:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacets' ) }">
	<MvASSIGN NAME = "l.facet:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetDisplayOrder' ) }">
	<MvASSIGN NAME = "l.filename"			VALUE = "{ CombinationFacet_Template_Filename( l.facet ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.template_source, l.null, l.filename ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ CombinationFacet_Insert_LowLevel( l.facet ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Insert_LowLevel" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CombinationFacets
						  ( id, disp_order, enabled, inclother, createfit, code, name, variantsrc )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.facet:id, l.facet:disp_order, l.facet:enabled, l.facet:inclother, l.facet:createfit, l.facet:code, l.facet:name, l.facet:variantsrc">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00019', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Update" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CombinationFacets
						  SET
							enabled		= ?,
							inclother	= ?,
							createfit	= ?,
							code		= ?,
							name		= ?,
							variantsrc	= ?
						  WHERE
							id			= ?' }"
			 FIELDS = "l.facet:enabled, l.facet:inclother, l.facet:createfit, l.facet:code, l.facet:name, l.facet:variantsrc,
					   l.facet:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00020', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Delete" PARAMETERS = "facet var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.filename" VALUE = "{ CombinationFacet_Template_Filename( l.facet ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Purge_ManagedTemplate_Filename( l.filename )	OR
					NOT CombinationFacetValue_Delete_All_Facet( l.facet:id )										OR
					NOT CombinationFacetProduct_Delete_All_Facet( l.facet:id )										OR
					NOT CombinationFacetField_Delete_All_Facet( l.facet:id )										OR
					NOT CombinationFacetCustomerApplication_Delete_All_Facet( l.facet:id )							OR
					NOT CombinationFacetCustomerApplicationField_Delete_All_Facet( l.facet:id )						OR
					NOT CombinationFacet_Delete_ID( l.facet:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Delete_ID" PARAMETERS = "facet_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacets
						  WHERE
							id		= ?' }"
			 FIELDS = "l.facet_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00021', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Load_ID" PARAMETERS = "id, facet var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacets"
				QUERY 	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'CombinationFacets
							  WHERE
								id	= ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00022', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacets.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00023' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CombinationFacet_Read( l.facet ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Load_Code_Cached" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:combofacets:combinationfacets">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ CombinationFacet_Load_Code( l.code, l.cache:field ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field"							VALUE = "{ l.cache:field }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacet_Load_Code" PARAMETERS = "code, facet var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacets"
				QUERY 	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'CombinationFacets
							  WHERE
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00024', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacets.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00025' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CombinationFacet_Read( l.facet ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetList_Load_Enabled_Cached" PARAMETERS = "facets var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:combofacets:combinationfacetlist_load_enabled">

	<MvIF EXPR = "{ ISNULL l.cache:count }">
		<MvASSIGN NAME = "l.cache:count"				VALUE = "{ CombinationFacetList_Load_Enabled( l.cache:facets ) }">

		<MvIF EXPR = "{ NOT l.cache:count }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.cache:count EQ 0 }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facets"							VALUE = "{ l.cache:facets }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:count }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetList_Load_Enabled" PARAMETERS = "facets var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacets"
				QUERY 	= "{ 'SELECT
								DISTINCT cf.*
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CombinationFacets cf
							  	LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CombinationFacetFields cff ON cff.facet_id = cf.id
							  WHERE
							  	cf.enabled = 1 AND
							  	cff.facet_id IS NOT NULL
							  ORDER BY
							  	cf.disp_order' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00026', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT CombinationFacets.d.EOF }">
		<MvEVAL EXPR = "{ CombinationFacet_Read( l.facets[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacets" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00027', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Database Functions: sNN_CombinationFacetFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetField_Read" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ CombinationFacetFields.d.id }">
	<MvASSIGN NAME = "l.field:facet_id"		VALUE = "{ CombinationFacetFields.d.facet_id }">
	<MvASSIGN NAME = "l.field:disp_order"	VALUE = "{ CombinationFacetFields.d.disp_order }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ CombinationFacetFields.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ CombinationFacetFields.d.name }">
	<MvASSIGN NAME = "l.field:sort_desc"	VALUE = "{ CombinationFacetFields.d.sort_desc }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetField_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetFields' ) }">
	<MvASSIGN NAME = "l.field:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetFieldDisplayOrder' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CombinationFacetFields
						  ( id, facet_id, disp_order, code, name, sort_desc )
						  VALUES
						  ( ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.field:id, l.field:facet_id, l.field:disp_order, l.field:code, l.field:name, l.field:sort_desc">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00028', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetField_Update" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CombinationFacetFields
						  SET
							disp_order	= ?,
							code		= ?,
							name		= ?,
							sort_desc	= ?
						  WHERE
							id			= ?' }"
			 FIELDS = "l.field:disp_order, l.field:code, l.field:name, l.field:sort_desc,
					   l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00029', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetField_Delete" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacetValue_Delete_All_Field( l.field:id )					OR
					NOT CombinationFacetCustomerApplicationField_Delete_All_Field( l.field:id )	OR
					NOT CombinationFacetField_Delete_ID( l.field:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetField_Delete_ID" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetFields
						  WHERE
							id	= ?' }"
			 FIELDS = "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00030', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetField_Delete_All_Facet" PARAMETERS = "facet_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetFields
						  WHERE
							facet_id	= ?' }"
			 FIELDS = "l.facet_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00031', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetField_Load_ID" PARAMETERS = "id, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetFields"
				QUERY 	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'CombinationFacetFields
							  WHERE
								id	= ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00032', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00033' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CombinationFacetField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetField_Load_Code" PARAMETERS = "facet_id, code, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetFields"
				QUERY 	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'CombinationFacetFields
							  WHERE
								facet_id	= ?	AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.facet_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00034', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00035' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CombinationFacetField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetFieldList_Load_Facet_Cached" PARAMETERS = "facet_id, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.facet_id LE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:combofacets:combinationfacetfields">
		<MvMEMBER NAME = "{ l.facet_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:count }">
		<MvASSIGN NAME = "l.cache:count"				VALUE = "{ CombinationFacetFieldList_Load_Facet( l.facet_id, l.cache:fields ) }">

		<MvIF EXPR = "{ NOT l.cache:count }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.cache:count EQ 0 }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.fields"							VALUE = "{ l.cache:fields }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:count }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetFieldList_Load_Facet" PARAMETERS = "facet_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetFields WHERE facet_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.facet_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00036', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT CombinationFacetFields.d.EOF }">
		<MvEVAL EXPR = "{ CombinationFacetField_Read( l.fields[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00037', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Database Functions: sNN_CombinationFacetProducts
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetProduct_Insert" PARAMETERS = "facet_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts
						  ( facet_id, product_id )
						  VALUES
						  ( ?, ? )' }"
			 FIELDS	= "l.facet_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00079', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetProduct_Delete" PARAMETERS = "facet_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts
						  WHERE
							facet_id	= ?	AND
							product_id	= ?' }"
			 FIELDS = "l.facet_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00080', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetProduct_Delete_All_Facet" PARAMETERS = "facet_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts
						  WHERE
							facet_id	= ?' }"
			 FIELDS = "l.facet_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00081', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetProduct_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetProducts
						  WHERE
							product_id	= ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00082', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Database Functions: sNN_CombinationFacetValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetValue_Read" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.value:record_id"	VALUE = "{ CombinationFacetValues.d.record_id }">
	<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ CombinationFacetValues.d.field_id }">
	<MvASSIGN NAME = "l.value:facet_id"		VALUE = "{ CombinationFacetValues.d.facet_id }">
	<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ CombinationFacetValues.d.product_id }">
	<MvASSIGN NAME = "l.value:value"		VALUE = "{ CombinationFacetValues.d.value }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetValue_Insert" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CombinationFacetValues
						  ( record_id, field_id, facet_id, product_id, value )
						  VALUES
						  ( ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.value:record_id, l.value:field_id, l.value:facet_id,
					   l.value:product_id, l.value:value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00038', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetValue_Delete_All_Facet" PARAMETERS = "facet_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues
						  WHERE
							facet_id	= ?' }"
			 FIELDS = "l.facet_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00039', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetValue_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues
						  WHERE
							field_id	= ?' }"
			 FIELDS = "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00040', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetValue_Delete_All_Record" PARAMETERS = "record_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues
						  WHERE
							record_id	= ?' }"
			 FIELDS = "l.record_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00056', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetValue_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues
						  WHERE
							product_id	= ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00062', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetValue_Delete_All_Product_Facet" PARAMETERS = "product_id, facet_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues
						  WHERE
							product_id	= ?	AND
							facet_id	= ?' }"
			 FIELDS = "l.product_id, l.facet_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00057', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetValueList_Load_Record" PARAMETERS = "record_id, values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetValues"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues WHERE record_id = ?' }"
				FIELDS	= "l.record_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00058', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT CombinationFacetValues.d.EOF }">
		<MvEVAL EXPR = "{ CombinationFacetValue_Read( l.values[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00059', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Database Functions: CombinationFacetRecord
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetRecords_Present" PARAMETERS = "facet_id, product_id, present var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:cache:combinationfacetrecords_present:facet_id"		VALUE = "{ l.facet_id }">
	<MvASSIGN NAME = "g.Session:cache:combinationfacetrecords_present:product_id"	VALUE = "{ l.product_id }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																			 'CombinationFacetValues',
																			 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetValues WHERE facet_id = ? AND product_id = ?',
																			 'g.Session:cache:combinationfacetrecords_present:facet_id, g.Session:cache:combinationfacetrecords_present:product_id',
																			 0, 1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00083', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.present"	VALUE = "{ NOT CombinationFacetValues.d.EOF }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetRecord_Insert" PARAMETERS = "values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.record_id"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetRecords' ) }">
	<MvFUNCTIONRETURN VALUE = "{ CombinationFacetRecord_Insert_LowLevel( l.record_id, l.values, l.value_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetRecord_Insert_LowLevel" PARAMETERS = "record_id, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
		<MvASSIGN NAME = "l.value:record_id"	VALUE = "{ l.record_id }">

		<MvIF EXPR = "{ NOT CombinationFacetValue_Insert( l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetRecordList_Load_Values" PARAMETERS = "values var, value_count, record_ids var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.record_query, 'v1.record_id' ) }">

	<MvFOREACH INDEX = "l.value_pos" ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
		<MvASSIGN NAME = "l.previous_correlation"	VALUE = "{ l.correlation }">
		<MvASSIGN NAME = "l.correlation"			VALUE = "{ 'v' $ l.value_pos }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.record_query, g.Store_Table_Prefix $ 'CombinationFacetValues', l.correlation ) }">

		<MvIF EXPR = "{ ISNULL l.previous_correlation }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.record_query, l.correlation $ '.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.value:product_id ) ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.record_query, l.correlation $ '.record_id = ' $ l.previous_correlation $ '.record_id', '' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.record_query, l.correlation $ '.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.value:field_id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.record_query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.value:value ) ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.record_sql"					VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.record_query, l.record_fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CombinationFacetRecords"
				QUERY	= "{ l.record_sql }"
				FIELDS	= "{ l.record_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00041', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count"						VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT CombinationFacetRecords.d.EOF }">
		<MvASSIGN NAME = "l.record_ids" INDEX = "{ ++l.count }" VALUE = "{ CombinationFacetRecords.d.record_id }">
		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetRecords" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetRecords">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00063', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Sorting:  Items to be sorted are processed in three groups.  The input array to the sort function just contains the
|		    items to be sorted, their desired offsets, and their current offsets.  We initially sort this data into
|			two groups: items moving up and items moving down.  During processing, items moving down are segregated
|			into two groups: items moving past the highest current offset, and items moving within the current
|			data set.
|
|			Ties are broken using the items original offset.
|
|			The end result is that we process items in the following order:
|
|				+-----------------------+  offset  original_offset
|				|                       |    |            ^
|				|    Items moving up    |    |            |
|				|                       |    v            |
|				+-----------------------+
|				+-----------------------+
|				|                       |    |            |
|				| Items moving past end |    |            |
|				|                       |    v            v
|				+-----------------------+
|				+-----------------------+
|				|                       |    ^            |
|				|   Items moving down   |    |            |
|				|                       |    |            v
|				+-----------------------+
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetList_Update_Offsets_PastEnd" PARAMETERS = "pastend var, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.CombinationFacets_Order_FacetID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"							VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetDisplayOrder' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'CombinationFacets
												SET 
													disp_order = ? 
												WHERE 
													id = ?' }" 
												FIELDS = "l.disp_order, g.CombinationFacets_Order_FacetID">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00064', g.MvQUERY_Error ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetList_Update_Offsets" PARAMETERS = "facets var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"				VALUE = 0>

	<MvASSIGN NAME = "l.facet_pos"					VALUE = 1>
	<MvASSIGN NAME = "l.facet_count"				VALUE = "{ miva_array_elements( l.facets ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.facets, l.facet_count ) }">

	<MvWHILE EXPR = "{ l.facet_pos LE l.facet_count }">
		<MvASSIGN NAME = "g.CombinationFacets_Order_FacetID" 	VALUE = "{ l.facets[ l.facet_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current facet at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				 'CombinationFacets',
																				 'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'CombinationFacets WHERE id <> ? ORDER BY disp_order',
																				 'g.CombinationFacets_Order_FacetID',
																				 l.facets[ l.facet_pos ]:offset - 1,
																				 1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00065', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ CombinationFacets.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.facets[ l.facet_pos ] }">

			<MvASSIGN NAME = "l.facet_pos"	VALUE = "{ l.facet_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">

			<MvIF EXPR = "{ NOT CombinationFacetList_Update_Offsets_PastEnd( l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ CombinationFacets.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacets">

			<MvCOMMENT>
			|
			| Make a hole by shifting facets after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'CombinationFacets 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order >= ?' }" 
													FIELDS = "l.disp_order">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00066', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetDisplayOrder' ) }">

			<MvCOMMENT>
			|
			| Put the facet in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'CombinationFacets 
													SET 
														disp_order = ? 
													WHERE 
														id = ?' }" 
													FIELDS = "l.disp_order, g.CombinationFacets_Order_FacetID">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00067', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.facet_pos"	VALUE = "{ l.facet_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT CombinationFacetList_Update_Offsets_PastEnd( l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Sorting:  Items to be sorted are processed in three groups.  The input array to the sort function just contains the
|		    items to be sorted, their desired offsets, and their current offsets.  We initially sort this data into
|			two groups: items moving up and items moving down.  During processing, items moving down are segregated
|			into two groups: items moving past the highest current offset, and items moving within the current
|			data set.
|
|			Ties are broken using the items original offset.
|
|			The end result is that we process items in the following order:
|
|				+-----------------------+  offset  original_offset
|				|                       |    |            ^
|				|    Items moving up    |    |            |
|				|                       |    v            |
|				+-----------------------+
|				+-----------------------+
|				|                       |    |            |
|				| Items moving past end |    |            |
|				|                       |    v            v
|				+-----------------------+
|				+-----------------------+
|				|                       |    ^            |
|				|   Items moving down   |    |            |
|				|                       |    |            v
|				+-----------------------+
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetFieldList_Update_Offsets_PastEnd" PARAMETERS = "facet_id, pastend var, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.CombinationFacetFields_Order_FieldID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"								VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetFieldDisplayOrder' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'CombinationFacetFields 
												SET 
													disp_order = ? 
												WHERE 
													id			= ? AND 
													facet_id	= ?' }" 
												FIELDS = "l.disp_order, g.CombinationFacetFields_Order_FieldID, l.facet_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00068', g.MvQUERY_Error ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetFieldList_Update_Offsets" PARAMETERS = "facet_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"								VALUE = 0>

	<MvASSIGN NAME = "l.option_pos"									VALUE = 1>
	<MvASSIGN NAME = "l.option_count"								VALUE = "{ miva_array_elements( l.fields ) }">
	<MvASSIGN NAME = "g.CombinationFacetFields_Order_FacetID"	 	VALUE = "{ l.facet_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.fields, l.option_count ) }">

	<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
		<MvASSIGN NAME = "g.CombinationFacetFields_Order_FieldID" 	VALUE = "{ l.fields[ l.option_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current option at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				 'CombinationFacetFields',
																				 'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetFields WHERE id <> ? AND facet_id = ? ORDER BY disp_order',
																				 'g.CombinationFacetFields_Order_FieldID, g.CombinationFacetFields_Order_FacetID',
																				 l.fields[ l.option_pos ]:offset - 1,
																				 1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00069', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ CombinationFacetFields.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.fields[ l.option_pos ] }">

			<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">

			<MvIF EXPR = "{ NOT CombinationFacetFieldList_Update_Offsets_PastEnd( l.facet_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ CombinationFacetFields.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetFields">

			<MvCOMMENT>
			|
			| Make a hole by shifting fields after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'CombinationFacetFields 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order	>= ? AND 
														facet_id	= ?' }" 
													FIELDS = "l.disp_order, g.CombinationFacetFields_Order_FacetID">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00070', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetFieldDisplayOrder' ) }">

			<MvCOMMENT>
			|
			| Put the option in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'CombinationFacetFields 
													SET 
														disp_order = ? 
													WHERE 
														id			= ? AND 
														facet_id	= ?' }" 
													FIELDS = "l.disp_order, g.CombinationFacetFields_Order_FieldID, g.CombinationFacetFields_Order_FacetID">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00071', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT CombinationFacetFieldList_Update_Offsets_PastEnd( l.facet_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Database functions: CombinationFacetCustomerApplications
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Read" PARAMETERS = "combinationfacetcustomerapplication var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication"			VALUE = "">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication:id"			VALUE = "{ CombinationFacetCustomerApplications.d.id }">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication:cust_id"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_id }">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication:facet_id"	VALUE = "{ CombinationFacetCustomerApplications.d.facet_id }">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication:name"		VALUE = "{ CombinationFacetCustomerApplications.d.name }">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication:lastused"	VALUE = "{ CombinationFacetCustomerApplications.d.lastused }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Customer_Read" PARAMETERS = "customer var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.customer"				VALUE = "">
	<MvASSIGN NAME = "l.customer:id"			VALUE = "{ CombinationFacetCustomerApplications.d.cust_id }">
	<MvASSIGN NAME = "l.customer:login"			VALUE = "{ CombinationFacetCustomerApplications.d.cust_login }">
	<MvASSIGN NAME = "l.customer:pw_email"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_pw_email }">
	<MvASSIGN NAME = "l.customer:ship_id"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_id }">
	<MvASSIGN NAME = "l.customer:ship_res"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_res }">
	<MvASSIGN NAME = "l.customer:ship_fname"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_fname }">
	<MvASSIGN NAME = "l.customer:ship_lname"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_lname }">
	<MvASSIGN NAME = "l.customer:ship_email"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_email }">
	<MvASSIGN NAME = "l.customer:ship_comp"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_comp }">
	<MvASSIGN NAME = "l.customer:ship_phone"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_phone }">
	<MvASSIGN NAME = "l.customer:ship_fax"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_fax }">
	<MvASSIGN NAME = "l.customer:ship_addr1"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_addr }">
	<MvASSIGN NAME = "l.customer:ship_addr2"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_addr2 }">
	<MvASSIGN NAME = "l.customer:ship_city"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_city }">
	<MvASSIGN NAME = "l.customer:ship_state"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_state }">
	<MvASSIGN NAME = "l.customer:ship_zip"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_zip }">
	<MvASSIGN NAME = "l.customer:ship_cntry"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_ship_cntry }">
	<MvASSIGN NAME = "l.customer:bill_id"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_id }">
	<MvASSIGN NAME = "l.customer:bill_fname"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_fname }">
	<MvASSIGN NAME = "l.customer:bill_lname"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_lname }">
	<MvASSIGN NAME = "l.customer:bill_email"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_email }">
	<MvASSIGN NAME = "l.customer:bill_comp"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_comp }">
	<MvASSIGN NAME = "l.customer:bill_phone"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_phone }">
	<MvASSIGN NAME = "l.customer:bill_fax"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_fax }">
	<MvASSIGN NAME = "l.customer:bill_addr1"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_addr }">
	<MvASSIGN NAME = "l.customer:bill_addr2"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_addr2 }">
	<MvASSIGN NAME = "l.customer:bill_city"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_city }">
	<MvASSIGN NAME = "l.customer:bill_state"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_state }">
	<MvASSIGN NAME = "l.customer:bill_zip"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_zip }">
	<MvASSIGN NAME = "l.customer:bill_cntry"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_bill_cntry }">
	<MvASSIGN NAME = "l.customer:credit"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_credit }">
	<MvASSIGN NAME = "l.customer:note_count"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_note_count }">
	<MvASSIGN NAME = "l.customer:dt_created"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_dt_created }">
	<MvASSIGN NAME = "l.customer:dt_updated"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_dt_updated }">
	<MvASSIGN NAME = "l.customer:dt_login"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_dt_login }">
	<MvASSIGN NAME = "l.customer:dt_pwchg"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_dt_pwchg }">
	<MvASSIGN NAME = "l.customer:tax_exempt"	VALUE = "{ CombinationFacetCustomerApplications.d.cust_tax_exempt }">
	<MvASSIGN NAME = "l.customer:order_cnt"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_order_cnt }">
	<MvASSIGN NAME = "l.customer:order_avg"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_order_avg }">
	<MvASSIGN NAME = "l.customer:order_tot"		VALUE = "{ CombinationFacetCustomerApplications.d.cust_order_tot }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Insert" PARAMETERS = "combinationfacetcustomerapplication var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CombinationFacetCustomerApplications' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications
						  ( id, cust_id, facet_id, name, lastused )
						  VALUES
						  ( ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.combinationfacetcustomerapplication:id, l.combinationfacetcustomerapplication:cust_id, l.combinationfacetcustomerapplication:facet_id, l.combinationfacetcustomerapplication:name, l.combinationfacetcustomerapplication:lastused">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00114', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Update" PARAMETERS = "combinationfacetcustomerapplication var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE 
			 				' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications 
			 			  SET
			 			  	name = ?
			 			  WHERE
			 			  	id = ?' }"
			 FIELDS = "l.combinationfacetcustomerapplication:name,
			 		   l.combinationfacetcustomerapplication:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00135', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Load_ID" PARAMETERS = "id, combinationfacetcustomerapplication var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetCustomerApplications"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications WHERE id	= ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00115', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetCustomerApplications.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00116' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Read( l.combinationfacetcustomerapplication ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Delete" PARAMETERS = "application var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CombinationFacetCustomerApplicationField_Delete_All_Application( l.application:id )	OR
					NOT CombinationFacetCustomerApplication_Delete_LowLevel( l.application:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Delete_All_Customer" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME 	= "Merchant"
				 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields af
				 			  USING	' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications a
				 			  WHERE
				 			  	af.appl_id	= a.id AND
				 			  	a.cust_id	= ?' }"
				 FIELDS = "l.cust_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00137', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME 	= "Merchant"
				 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications WHERE cust_id = ?' }"
				 FIELDS = "l.cust_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00138', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSE>
		<MvQUERY NAME 	= "Merchant"
				 QUERY 	= "{ 'DELETE
				 				a, af
				 			  FROM
				 			  	' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications a,
				 			  	' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields af
				 			  WHERE
				 			  	a.cust_id	= ? AND
				 			  	af.appl_id	= a.id' }"
				 FIELDS = "l.cust_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00136', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00117', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Delete_All_Facet" PARAMETERS = "facet_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications WHERE facet_id = ?' }"
			 FIELDS = "l.facet_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00118', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Update_LastUsed" PARAMETERS = "application var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.application:lastused" VALUE = "{ s.dyn_time_t }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications SET lastused = ? WHERE id = ?' }"
			 FIELDS = "l.application:lastused,
			 		   l.application:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00119', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationList_Load_All_Customer" PARAMETERS = "cust_id, combinationfacetapplications var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetCustomerApplications"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications WHERE cust_id = ?' }"
				FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00120', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.combinationfacetapplications"			VALUE = "">
	<MvASSIGN NAME = "l.combinationfacetapplication_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT CombinationFacetCustomerApplications.d.EOF }">
		<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Read( l.combinationfacetapplications[ ++l.combinationfacetapplication_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00121', l.combinationfacetapplication_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationList_Load_All_Customer_And_Facet" PARAMETERS = "cust_id, facet_id, combinationfacetcustomerapplications var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetCustomerApplications"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications WHERE cust_id = ? AND facet_id = ?' }"
				FIELDS	= "l.cust_id, l.facet_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00122', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.combinationfacetcustomerapplications"			VALUE = "">
	<MvASSIGN NAME = "l.combinationfacetcustomerapplication_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT CombinationFacetCustomerApplications.d.EOF }">
		<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Read( l.combinationfacetcustomerapplications[ ++l.combinationfacetcustomerapplication_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00123', l.combinationfacetcustomerapplication_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Load_LastUsed" PARAMETERS = "cust_id, facet_id, combinationfacetcustomerapplication var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CombinationFacetCustomerApplications',
																			 'SELECT
																				*
																			  FROM
																				' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications
																			  WHERE
																				cust_id		= ? AND
																				facet_id	= ?	AND
																				lastused	> 0
																			  ORDER BY
																			  	lastused DESC,
																			  	id ASC',
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.cust_id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.facet_id ),
																			 0, 1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00124', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetCustomerApplications.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00125' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Read( l.combinationfacetcustomerapplication ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplication_Load_Existing" PARAMETERS = "cust_id, facet var, facet_fields var, facet_field_count, values var, value_count, set_field_count var, combinationfacetcustomerapplication var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.set_field_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cfca.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'COUNT( cfcaf.field_id ) AS field_count' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetCustomerApplications', 'cfca' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cfca', g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields', 'cfcaf', 'cfcaf.appl_id = cfca.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'cfca.cust_id = ? AND cfca.facet_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.cust_id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.facet:id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.query, 'cfca.id, cfca.cust_id, cfca.facet_id, cfca.name, cfca.lastused' ) }">

	<MvFOREACH ITERATOR = "l.facet_field" ARRAY = "l.facet_fields" INDEX = "l.facet_field_pos" COUNT = "{ l.facet_field_count }">
		<MvIF EXPR = "{ ISNULL l.values[ l.facet_field_pos ] }">
			<MvFOREACHSTOP>
		</MvIF>

		<MvASSIGN NAME = "l.correlation" VALUE = "{ 'cfcaf_' $ int( l.facet_field_pos ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields', l.correlation ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.correlation $ '.appl_id = cfca.id AND ' $ l.correlation $ '.field_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.correlation $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.facet_field:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.values[ l.facet_field_pos ] ) ) }">
	</MvFOREACH>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetCustomerApplications"
				QUERY 	= "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00126', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CombinationFacetCustomerApplications.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CBF-00127' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CombinationFacetCustomerApplication_Read( l.combinationfacetcustomerapplication ) }">

	<MvASSIGN NAME = "l.set_field_count" VALUE = "{ CombinationFacetCustomerApplications.d.field_count }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplications">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Database functions: CombinationFacetCustomerApplicationFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationField_Read" PARAMETERS = "combinationfacetapplicationfield var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield"			VALUE = "">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield:appl_id"	VALUE = "{ CombinationFacetCustomerApplicationFields.d.appl_id }">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield:field_id"	VALUE = "{ CombinationFacetCustomerApplicationFields.d.field_id }">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield:facet_id"	VALUE = "{ CombinationFacetCustomerApplicationFields.d.facet_id }">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield:value"		VALUE = "{ CombinationFacetCustomerApplicationFields.d.value }">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield:code"		VALUE = "{ CombinationFacetCustomerApplicationFields.d.code }">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield:name"		VALUE = "{ CombinationFacetCustomerApplicationFields.d.name }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationField_Insert" PARAMETERS = "combinationfacetcustomerapplicationfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields
						  ( appl_id, field_id, facet_id, value )
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS = "l.combinationfacetcustomerapplicationfield:appl_id, l.combinationfacetcustomerapplicationfield:field_id, l.combinationfacetcustomerapplicationfield:facet_id, l.combinationfacetcustomerapplicationfield:value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00128', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationFieldList_Load_All" PARAMETERS = "appl_id, combinationfacetapplicationfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CombinationFacetCustomerApplicationFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields WHERE appl_id = ?' }"
				FIELDS	= "l.appl_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00129', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.combinationfacetapplicationfields"			VALUE = "">
	<MvASSIGN NAME = "l.combinationfacetapplicationfield_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT CombinationFacetCustomerApplicationFields.d.EOF }">
		<MvEVAL EXPR = "{ CombinationFacetCustomerApplicationField_Read( l.combinationfacetapplicationfields[ ++l.combinationfacetapplicationfield_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "CombinationFacetCustomerApplicationFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CombinationFacetCustomerApplicationFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CBF-00130', l.combinationfacetapplicationfield_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationField_Delete_All_Facet" PARAMETERS = "facet_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields WHERE facet_id = ?' }"
			 FIELDS = "l.facet_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00131', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationField_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields WHERE field_id = ?' }"
			 FIELDS = "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00132', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CombinationFacetCustomerApplicationField_Delete_All_Application" PARAMETERS = "appl_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CombinationFacetCustomerApplicationFields
						  WHERE
							appl_id = ?' }"
			 FIELDS = "l.appl_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CBF-00133', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvINCLUDE FILE = "modules/util/combofacets/functions.mv">
<MvINCLUDE FILE = "modules/util/combofacets/combinationfacetlist.mv">
<MvINCLUDE FILE = "modules/util/combofacets/combinationfacetrecordlist.mv">
<MvINCLUDE FILE = "modules/util/combofacets/applicationlist.mv">
<MvINCLUDE FILE = "modules/util/combofacets/customerapplicationlist.mv">

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-UTIL-PRCG-
| Next Error Code: 120   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-productcharges">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Product Charges and Fees">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1100">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.11">
	<MvASSIGN NAME = "l.module:description"	VALUE = "The Product Charges and Fees module offers powerful options to attach additional fees and charges to specific products, or groups of products. Perfect for anything from simple additional Environmental Fees, to complex Automotive Core Charges. Additional Charges and Fees are represented by a unique type of inactive product, allowing tight control over how these extras interact with sales tax, discount, and shipping calculations.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "util, data_store, provision_store, not_prod, not_basketitem, not_quoteitem, not_orderitem, rt_basketitem, colprod, vis_productbe, vis_product, component, component_frag, clientside, json">
</MvFUNCTION>

<MvCOMMENT>
|
| Store-level Module Data Support Feature (data_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| sNN_ProductChargeTypes
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypes
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							type		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypes_1 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypes ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypes_2 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypes ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'ProductChargeTypes', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_ProductChargeTypeXCollection
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection
						  (
							pct_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							col_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							ovr_price	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							price		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection_1 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection ( pct_id, col_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_ProductChargeTypeXProduct
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct
						  (
							pct_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							ovr_price	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							price		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 )	$ ',
							automatic	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							colcount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct_1 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct ( pct_id, product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct_2 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct_3 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct ( pct_id, automatic, colcount )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct_4 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct ( product_id, automatic, colcount )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_ProductChargeTypeXProductCollectionExclusions
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions
						  (
							pct_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
							colcount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions_1 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions ( pct_id, product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions_2 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions ( product_id, pct_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions_3 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions ( pct_id, colcount )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00014', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions_4 ON ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions ( product_id, colcount )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00015', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Create item
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item_Module( 'productcharges', l.module ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'ProductChargeTypes' ) }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypes' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00016', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Component Feature (component)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Component Fragment Feature (component_frag)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Initialize_Fragment" PARAMETERS = "module var, item, page_all_settings var, page_item_settings var, fragment_all_settings var, fragment_item_settings var, merged_all_settings var, merged_item_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.merged_all_settings:product:id }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.merged_item_settings:chargetypes"		VALUE = "">
	<MvASSIGN NAME = "l.merged_item_settings:chargetype_count"	VALUE = "{ Runtime_ProductChargeTypeList_Load_Product( l.merged_all_settings:product:id, l.merged_item_settings:chargetypes ) }">

	<MvFOREACH ITERATOR = "l.productchargetype" ARRAY = "l.merged_item_settings:chargetypes" COUNT = "{ l.merged_item_settings:chargetype_count }">
		<MvASSIGN NAME = "l.productchargetype:formatted_price"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.productchargetype:price ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module Provisioning Feature (provision_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.child_name" VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.child_name EQ 'productchargetype_add' }">						<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeType_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetype_update' }">				<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeType_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetype_delete' }">				<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeType_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetypecollection_assign' }">	<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeTypeCollection_Assign( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetypecollection_unassign' }">	<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeTypeCollection_Unassign( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetypecollection_update' }">	<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeTypeCollection_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetypeproduct_assign' }">		<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeTypeProduct_Assign( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetypeproduct_unassign' }">		<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeTypeProduct_Unassign( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productchargetypeproduct_update' }">		<MvEVAL EXPR = "{ Module_Provision_Store_ProductChargeTypeProduct_Update( l.module, l.child_xml ) }">
		<MvELSE>																		<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unknown tag \'' $ l.child_xml:name $ '\'' ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeType_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product"			VALUE = "">
	<MvASSIGN NAME = "l.product:price"		VALUE = 0.00>
	<MvASSIGN NAME = "l.product:cost"		VALUE = 0.00>
	<MvASSIGN NAME = "l.product:weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.product:taxable"	VALUE = 1>
	<MvASSIGN NAME = "l.product:active"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R',		l.provide_xml,	'Type',				l.product:type,
																									'Core,Fee,Other',
																									'core,fee,other' )								OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'R',		l.provide_xml,	'Code',				l.product:code )			OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R:100',	l.provide_xml,	'Name',				l.product:name )			OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Price(		'O',		l.provide_xml,	'Price',			l.product:price )			OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',		l.provide_xml,	'Description',		l.product:descrip )			OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml,	'Taxable',			l.product:taxable ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.product:code, l.existing_product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product with code \'' $ l.existing_product:code $ '\' already exists' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Begin() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Product \'' $ l.product:code $ '\' created' ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Insert( l.product ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetype"				VALUE = "">
	<MvASSIGN NAME = "l.productchargetype:type"			VALUE = "{ l.product:type }">
	<MvASSIGN NAME = "l.productchargetype:product_id"	VALUE = "{ l.product:id }">

	<MvIF EXPR = "{ NOT ProductChargeType_Insert( l.productchargetype ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Delete( l.product ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Commit() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00017', 'Product Charge Type \'' $ l.product:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeType_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.productchargetype:product_id, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'o',		l.provide_xml,	'Type',				l.productchargetype:type,
																									'Core,Fee,Other',
																									'core,fee,other' )						OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'O',		l.provide_xml,	'Code',				l.product:code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o:100',	l.provide_xml,	'Name',				l.product:name )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Price(		'O',		l.provide_xml,	'Price',			l.product:price )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',		l.provide_xml,	'Description',		l.product:descrip )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml,	'Taxable',			l.product:taxable ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.product:code, l.existing_product ) AND l.existing_product:id NE l.product:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type \'' $ l.existing_product:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Update( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00018', 'Product Charge Type \'' $ l.product:code $ '\' updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeType_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type with code \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Delete( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00019', 'Product Charge Type \'' $ l.charge_code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeTypeCollection_Assign" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'collection_code', l.collection_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type with code \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_DB ].Collection_Load_Code( l.collection_code, l.collection ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Collection with the code \'' $ l.collection_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductChargeTypeXCollection_Load( l.productchargetype:id, l.collection:id, l.productchargetypexcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Collection \'' $ l.collection:code $ '\' is already assigned to Product Charge Type \'' $ l.charge_code $ '\'' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetypexcollection:ovr_price"	VALUE = 0>
	<MvASSIGN NAME = "l.productchargetypexcollection:price"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'OverridePrice',	l.productchargetypexcollection:ovr_price ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Price(		'O', l.provide_xml,	'Price',			l.productchargetypexcollection:price ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.productchargetypexcollection:pct_id"	VALUE = "{ l.productchargetype:id }">
	<MvASSIGN NAME = "l.productchargetypexcollection:col_id"	VALUE = "{ l.collection:id }">

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Insert( l.productchargetypexcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Add_Collection_Products( l.productchargetypexcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00020', 'Collection \'' $ l.collection_code $ '\' assigned to Product Charge Type \'' $ l.charge_code $ '\'' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeTypeCollection_Unassign" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'collection_code', l.collection_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type with code \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_DB ].Collection_Load_Code( l.collection_code, l.collection ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Collection with the code \'' $ l.collection_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Load( l.productchargetype:id, l.collection:id, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type \'' $ l.charge_code $ '\' not found for collection with the code \'' $ l.collection:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Delete( l.productchargetype:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Remove_Collection_Products( l.productchargetype, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00021', 'Collection \'' $ l.collection:code $ '\' unassigned from Product Charge Type \'' $ l.charge_code $ '\'' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeTypeCollection_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'collection_code', l.collection_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type with code \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_DB ].Collection_Load_Code( l.collection_code, l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Collection with the code \'' $ l.collection_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Load( l.productchargetype:id, l.collection:id, l.productchargetypexcollection ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type \'' $ l.charge_code $ '\' not found for collection with the code \'' $ l.collection:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'OverridePrice',	l.productchargetypexcollection:ovr_price ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Price(		'O', l.provide_xml,	'Price',			l.productchargetypexcollection:price ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Update( l.productchargetypexcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00022', 'Product Charge Type \'' $ l.charge_code $ '\' for collection with code \'' $ l.collection:code $ '\' updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeTypeProduct_Assign" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product_code', l.product_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type with code \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product with the code \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ l.productchargetype:id }">
	<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"	VALUE = 0>
	<MvASSIGN NAME = "l.productchargetypexproduct:price"		VALUE = 0>
	<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = 0>
	<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'OverridePrice',	l.productchargetypexproduct:ovr_price ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Price(		'O', l.provide_xml,	'Price',			l.productchargetypexproduct:price ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Insert( l.productchargetypexproduct ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00023', 'Product \'' $ l.product_code $ '\' assigned to Product Charge Type \'' $ l.charge_code $ '\'' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeTypeProduct_Unassign" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product_code', l.product_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type with code \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product with the code \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Load( l.productchargetype:id, l.product:id, l.productchargetypexproduct ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type \'' $ l.charge_code $ '\' not found for product with the code \'' $ l.product:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Delete( l.productchargetypexproduct ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00024', 'Product \'' $ l.product:code $ '\' unassigned from Product Charge Type \'' $ l.charge_code $ '\'' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductChargeTypeProduct_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'charge_code', l.charge_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product_code', l.product_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.charge_code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type with code \'' $ l.charge_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product with the code \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Load( l.productchargetype:id, l.product:id, l.productchargetypexproduct ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product charge type \'' $ l.charge_code $ '\' not found for product with the code \'' $ l.product:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'OverridePrice',	l.productchargetypexproduct:ovr_price ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Price(		'O', l.provide_xml,	'Price',			l.productchargetypexproduct:price ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Update( l.productchargetypexproduct ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00025', 'Product Charge Type \'' $ l.charge_code $ '\' for product with code \'' $ l.product:code $ '\' updated' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Batch Edit Screen Feature (vis_productbe)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "PCHG:Charges & Fees">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab EQ 'PCHG' }">
		<MvEVAL EXPR = "{ Element_ProductChargeTypeList_CSS( l.module ) }">

		<MvIF EXPR = "{ Element_ProductCharges_JavaScript_Combined_Begin( l.module ) }">
			<MvEVAL EXPR = "{ Element_ProductChargeTypeList_JavaScript( l.module ) }">
			<MvEVAL EXPR = "{ Element_ProductCharges_JavaScript_Combined_End( l.module ) }">
		</MvIF>

		<script type="text/javascript">
			MMScreen_LoadFinished( () => { new ProductChargeTypeList(); } );
		</script>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.tab NE 'PCHG' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_ProductChargeTypeList_HTML( l.module ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Add/Edit Screen Feature (vis_product)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Tabs" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.product:id }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "PCHG:Charges & Fees">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Head" PARAMETERS = "module var, tab, product var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab NE 'PCHG' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_Product_ProductChargeTypeList_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_ProductCharges_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_Product_ProductChargeTypeList_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_ProductCharges_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script type="text/javascript">
		MMScreen_LoadFinished( () => { new Product_ProductChargeTypeList( MMScreenContext.product ); } );
	</script>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Content" PARAMETERS = "module var, tab, load_fields, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.tab NE 'PCHG' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_Product_ProductChargeTypeList_HTML( l.module ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Store Utilities Feature (util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.ProductChargeType_Action EQ 'PCHU' }">
		<MvFUNCTIONRETURN VALUE = "{ StoreUtilityModule_Validate_ProductChargeType_Update( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Validate_ProductChargeType_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Product_Code"			VALUE = "{ trim( g.Product_Code ) }">
	<MvASSIGN NAME = "g.Product_Name"			VALUE = "{ trim( g.Product_Name ) }">
	<MvASSIGN NAME = "g.Product_Type"			VALUE = "{ trim( g.Product_Type ) }">
	<MvASSIGN NAME = "g.Product_Price"			VALUE = "{ trim( g.Product_Price ) }">
	<MvASSIGN NAME = "g.Product_Taxable"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Product_Taxable ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( g.Product_Code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'PCHG', 'Product_Code', g.Validation_Message ) }">
	<MvELSE>
		<MvIF EXPR = "{ strcasecmp( g.Edit_Product, g.Product_Code ) NE 0 }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( g.Product_Code, l.existing_product ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'PCHG', 'Product_Code', 'A product with the code \'' $ l.existing_product:code $ '\' already exists' ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Product_Name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'PCHG', 'Product_Name', 'Please specify a charge name' ) }">
	</MvIF>

	<MvIF EXPR = "{ len_var( g.Product_Name ) GT 100 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'PCHG', 'Product_Name', 'Name must be 100 characters or less' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_NonNegative_Required( g.Product_Price ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'PCHG', 'Product_Price', g.Validation_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.product_tax_module" ARRAY = "l.product_tax_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_product,tax', l.product_tax_modules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.product_tax_module:module ].Module_Product_Validate( l.product_tax_module ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_AD ].ProductPaymentRules_Validate() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_AD ].ProductShippingRules_Validate() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.ProductChargeType_Action EQ 'PCHU' AND NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ g.ProductChargeType_Action EQ 'PCHD' AND NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.ProductChargeType_Action EQ 'PCHU' }">		<MvFUNCTIONRETURN VALUE = "{ StoreUtilityModule_Action_ProductChargeType_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.ProductChargeType_Action EQ 'PCHD' }">	<MvFUNCTIONRETURN VALUE = "{ StoreUtilityModule_Action_ProductChargeType_Delete( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_ProductChargeType_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( g.Edit_Product, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00084', 'Product charge type not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.productchargetype:product_id, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00085', 'Product charge type not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetype:type" VALUE = "{ g.Product_Type }">

	<MvASSIGN NAME = "l.product:code"			VALUE = "{ g.Product_Code }">
	<MvASSIGN NAME = "l.product:name"			VALUE = "{ g.Product_Name }">
	<MvASSIGN NAME = "l.product:price"			VALUE = "{ g.Product_Price }">
	<MvASSIGN NAME = "l.product:taxable"		VALUE = "{ g.Product_Taxable }">
	<MvASSIGN NAME = "l.product:descrip"		VALUE = "{ g.Product_Description }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Begin() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Product \'' $ g.Edit_Product $ '\' updated' ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Update( l.productchargetype )							OR
					NOT [ g.Module_Library_DB ].Product_Update( l.product )						OR
					NOT [ g.Module_Feature_PAY_AD ].ProductPaymentRules_Update( l.product )		OR
					NOT [ g.Module_Feature_SHP_AD ].ProductShippingRules_Update( l.product ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00086', 'Product \'' $ g.Edit_Product $ '\' updated' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Message( 'Product \'' $ l.original_name $ '\' updated' ) }">

	<MvASSIGN NAME = "g.Original_Edit_Product"	VALUE = "{ g.Edit_Product }">
	<MvASSIGN NAME = "g.Edit_Product"			VALUE = "{ g.Product_Code }">

	<MvFOREACH ITERATOR = "l.product_tax_module" ARRAY = "l.product_tax_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_product,tax', l.product_tax_modules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.product_tax_module:module ].Module_Product_Update( l.product_tax_module, l.product ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Commit() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_ProductChargeType_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( g.Edit_Product, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Delete( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00087', 'Product charge type \'' $ g.Edit_Product $ '\' deleted' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Message( 'Charge deleted' ) }">

	<MvASSIGN NAME = "g.Edit_Product"	VALUE = "">
	<MvASSIGN NAME = "g.Screen"			VALUE = "CTLG">
	<MvASSIGN NAME = "g.Tab"			VALUE = "PCHG">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation" PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvCOMMENT>
	|
	| This function utilizes functionality from Screen_Products. As such, we use naming from there
	| which would otherwise be different (such as GT_PROD instead of GT_PCHG, and Edit_Product instead
	| of Edit_ProductChargeType). Changing this will break functionality within the vis_product modules.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "g.Edit_Product"				VALUE = "{ trim( g.Edit_Product ) }">

	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( g.Edit_Product, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].Screen_NotFound( 'MER-UTIL-PRCG-00088', 'Product charge type not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.productchargetype:product_id, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].Screen_NotFound( 'MER-UTIL-PRCG-00089', 'Product charge type not found' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].SetTabDisplayOrderUniqueIdentifier( 'PRODUCTCHARGES' ) }">

	<MvIF EXPR = "{ g.Load_Fields }">
		<MvASSIGN NAME = "g.Product_Code"			VALUE = "{ l.product:code }">
		<MvASSIGN NAME = "g.Product_Name"			VALUE = "{ l.product:name }">
		<MvASSIGN NAME = "g.Product_Type"			VALUE = "{ l.productchargetype:type }">
		<MvASSIGN NAME = "g.Product_Price"			VALUE = "{ [ g.Module_Library_Utilities ].Price_Pad( l.product:price ) }">
		<MvASSIGN NAME = "g.Product_Description" 	VALUE = "{ l.product:descrip }">
		<MvASSIGN NAME = "g.Product_Taxable" 		VALUE = "{ l.product:taxable }">
	</MvIF>

	<MvASSIGN NAME = "g.ProductChargeType_Action"	VALUE = "PCHU">
	<MvASSIGN NAME = "l.title"						VALUE = "{ 'Edit Charge: ' $ l.product:name }">
	<MvASSIGN NAME = "l.buttons"					VALUE = "SUTL:[UPDATE],SUTL:[DELETE];DeleteProductChargeType( this )">
	<MvASSIGN NAME = "l.default"					VALUE = "GT_PROD">
	<MvASSIGN NAME = "l.tabs"						VALUE = "GT_PROD:Charge Settings,GT_PROD/PCHG:Charge Settings,PRDS:Products,COLS:Collections">

	<MvASSIGN NAME = "l.moretabs" 					VALUE = "{ [ g.Module_Feature_PAY_AD ].ProductPaymentRules_Tabs() }">
	<MvIF EXPR = "{ NOT ISNULL l.moretabs }">
		<MvASSIGN NAME = "l.tabs" 					VALUE = "{ l.tabs $ ',' $ l.moretabs }">
	</MvIF>

	<MvASSIGN NAME = "l.moretabs" 					VALUE = "{ [ g.Module_Feature_SHP_AD ].ProductShippingRules_Tabs() }">
	<MvIF EXPR = "{ NOT ISNULL l.moretabs }">
		<MvASSIGN NAME = "l.tabs" 					VALUE = "{ l.tabs $ ',' $ l.moretabs }">
	</MvIF>

	<MvASSIGN NAME = "l.product_tax_module_count"	VALUE = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_product,tax', l.product_tax_modules ) }">

	<MvFOREACH ITERATOR = "l.product_tax_module" ARRAY = "l.product_tax_modules" COUNT = "{ l.product_tax_module_count }">
		<MvASSIGN NAME = "l.moretabs"				VALUE = "{ [ g.Module_Root $ l.product_tax_module:module ].Module_Product_Tabs( l.product_tax_module, l.product ) }">
		<MvIF EXPR = "{ NOT ISNULL l.moretabs }">
			<MvASSIGN NAME = "l.tabs" 				VALUE = "{ l.tabs $ ',' $ l.moretabs }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].TabIsValid( g.Tab, l.tabs ) }">
		<MvASSIGN NAME = "g.Tab"					VALUE = "{ [ g.Module_Admin ].DetermineDefaultTab( l.tabs ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( l.title, '', '' ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AJAX_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_UI_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Functions_JavaScript() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

	<MvIF EXPR = "{ g.Tab EQ 'GT_PROD' }">
		<script type="text/javascript">
			function DeleteProductChargeType( button )
			{
				dialog 				= new ActionDialog();
				dialog.onESC		= function( e ) { button_cancel.SimulateClick(); };
				dialog.onEnter		= function( e ) { button_discard.SimulateClick(); };

				button_cancel		= dialog.Button_Add_Right_Secondary(		'Cancel',	'',	null );
				button_discard		= dialog.Button_Add_Right_Negative_Primary(	'Delete',	'', () =>
				{
					DisableButtons( button );

					document.forms[ Screen ].elements[ 'Action' ].value						= 'SUTL';
					document.forms[ Screen ].elements[ 'ProductChargeType_Action' ].value	= 'PCHD';

					if ( document.forms[ Screen ].v56_submit )	document.forms[ Screen ].v56_submit();
					else										document.forms[ Screen ].submit();
				} );

				dialog.SetTitle( 'Delete Charge?' );
				dialog.SetMessage( 'You are about to delete this product charge. This process may take some time if there are a large number of products linked to this charge.\n\nContinue?' );

				dialog.Show();
			}

			var ProductChargeTypeDashboard = class
			{
				#button_taxability_taxable;
				#button_taxability_nontaxable;

				constructor()
				{
					this.#button_taxability_taxable				= document.getElementById( 'productchargetype_chargesettings_item_taxability_taxable' );
					this.#button_taxability_nontaxable			= document.getElementById( 'productchargetype_chargesettings_item_taxability_nontaxable' );
					this.#button_taxability_taxable.onclick		= ( e ) => { this.#setTaxability( true ); };
					this.#button_taxability_nontaxable.onclick	= ( e ) => { this.#setTaxability( false ); };

					this.#setTaxability( <MvEVAL EXPR = "{ encodejavascriptboolean( g.Product_Taxable ) }"> );
				}

				#setTaxability( taxable )
				{
					document.forms[ Screen ].elements[ 'Product_Taxable' ].value = taxable ? 'Yes' : '';

					this.#button_taxability_taxable.button().RemoveClassName( 'selected' );
					this.#button_taxability_nontaxable.button().RemoveClassName( 'selected' );

					if ( taxable )	this.#button_taxability_taxable.button().AddClassName( 'selected' );
					else			this.#button_taxability_nontaxable.button().AddClassName( 'selected' );
				}
			}

			MMScreen_LoadFinished( () => { new ProductChargeTypeDashboard(); } );
		</script>
	</MvIF>

	<MvIF EXPR = "{ g.Tab EQ 'PRDS' }">
		<MvEVAL EXPR = "{ Element_ProductChargeType_ProductList_CSS( l.module ) }">

		<MvIF EXPR = "{ Element_ProductCharges_JavaScript_Combined_Begin( l.module ) }">
			<MvEVAL EXPR = "{ Element_ProductChargeType_ProductList_JavaScript( l.module ) }">
			<MvEVAL EXPR = "{ Element_ProductCharges_JavaScript_Combined_End( l.module ) }">
		</MvIF>

		<script language="JavaScript">
			MMScreen_LoadFinished( () => { new ProductChargeType_ProductList( MMScreenContext.productchargetype ); } );
		</script>
	</MvIF>

	<MvIF EXPR = "{ g.Tab EQ 'COLS' }">
		<MvEVAL EXPR = "{ Element_ProductChargeType_CollectionList_CSS( l.module ) }">

		<MvIF EXPR = "{ Element_ProductCharges_JavaScript_Combined_Begin( l.module ) }">
			<MvEVAL EXPR = "{ Element_ProductChargeType_CollectionList_JavaScript( l.module ) }">
			<MvEVAL EXPR = "{ Element_ProductCharges_JavaScript_Combined_End( l.module ) }">
		</MvIF>

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new ProductChargeType_CollectionList( MMScreenContext.productchargetype ); } );
		</script>
	</MvIF>

	<MvFOREACH ITERATOR = "l.product_tax_module" ARRAY = "l.product_tax_modules" COUNT = "{ l.product_tax_module_count }">
		<MvIF EXPR = "{ l.product_tax_module:api_ver GE 5.70 }">
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.product_tax_module:module ].Module_Product_Head( l.product_tax_module, g.Tab, l.product ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<style type="text/css">
		.productchargetype_chargesettings_content
		{
			position: relative;
			display: block;
		}

		.productchargetype_chargesettings_group
		{
			position: relative;
			display: flex;
			align-items: center;
		}

		.productchargetype_chargesettings_group.half
		{
			width: 50%;
		}

		.productchargetype_chargesettings_group + .productchargetype_chargesettings_group
		{
			margin-top: 20px;
		}

		.productchargetype_chargesettings_item
		{
			position: relative;
			display: inline-block;
			width: 0;
			flex-grow: 1;
		}

		.productchargetype_chargesettings_item + .productchargetype_chargesettings_item
		{
			margin-left: 20px;
		}

		.productchargetype_chargesettings_item.flex_half
		{
			flex-basis: 50%;
			flex-shrink: 0;
			flex-grow: 0;
		}

		.productchargetype_chargesettings_item.flex_noshrink
		{
			width: auto;
			flex-grow: 0;
			flex-shrink: 0;
		}

		.productchargetype_chargesettings_item_prompt
		{
			position: relative;
			display: block;
			margin-bottom: 9px;
			color: #494a53;
			font-size: 13px;
			font-weight: 700;
		}

		.productchargetype_chargesettings_item_content
		{
			position: relative;
			display: block;
		}

		.productchargetype_chargesettings_item_taxability
		{
			position: relative;
			display: flex;
			align-items: center;
		}

		.productchargetype_chargesettings_item_taxability_item_button
		{
			position: relative;
			display: flex;
			padding: 0 16px;
			height: 40px;
			align-items: center;
			justify-content: center;
			line-height: 1;
			background-color: #fff;
			border: 1px solid #e0e1e4;
			cursor: pointer;
			outline: none;
			box-sizing: border-box;
			user-select: none;
		}

		.productchargetype_chargesettings_item_taxability_item + .productchargetype_chargesettings_item_taxability_item .productchargetype_chargesettings_item_taxability_item_button
		{
			margin-left: -1px;
		}

		.productchargetype_chargesettings_item_taxability_item:first-child .productchargetype_chargesettings_item_taxability_item_button
		{
			border-radius: 4px 0 0 4px;
		}

		.productchargetype_chargesettings_item_taxability_item:last-child .productchargetype_chargesettings_item_taxability_item_button
		{
			border-radius: 0 4px 4px 0;
		}

		.productchargetype_chargesettings_item_taxability_item_button.active,
		.productchargetype_chargesettings_item_taxability_item_button:hover,
		.productchargetype_chargesettings_item_taxability_item_button.selected
		{
			border-color: #539cff;
			z-index: 1;
		}

		.productchargetype_chargesettings_item_taxability_item_button .mm9_button_text
		{
			position: relative;
			display: block;
			font-size: 14px;
			color: #6a6e79;
		}

		.productchargetype_chargesettings_item_taxability_item_button.active .mm9_button_text,
		.productchargetype_chargesettings_item_taxability_item_button:hover .mm9_button_text,
		.productchargetype_chargesettings_item_taxability_item_button.selected .mm9_button_text
		{
			color: #2f75ff;
		}

		.productchargetype_chargesettings_timestamps
		{
			position: relative;
			display: grid;
			margin-top: 30px;
			grid-template-columns: auto 1fr;
			grid-column-gap: 32px;
			grid-row-gap: 7px;
			color: #6a6e79;
			font-size: 12px;
			line-height: 18px;
		}

		.productchargetype_chargesettings_timestamps_prompt
		{
			grid-column: 1 / 2;
		}

		.productchargetype_chargesettings_timestamps_content
		{
			grid-column: 2 / 3;
		}
	</style>

	<MvASSIGN NAME = "l.context:productchargetype"					VALUE = "{ l.productchargetype }">
	<MvASSIGN NAME = "l.context:productchargetype:code"				VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.context:productchargetype:name"				VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.context:productchargetype:price"			VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.context:productchargetype:formatted_price"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.product:price ) }">
	<MvASSIGN NAME = "l.context:productchargetype:descrip"			VALUE = "{ l.product:descrip }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Context_SetNavigationGroup( l.context, 'catalog' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Context( l.context ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( l.title, '', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginContent() }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawTabs( l.default, l.tabs ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( g.Tab, 'PCHG' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PROD', 'PCHG' ) }">
			<span class="productchargetype_chargesettings_content">
				<span class="productchargetype_chargesettings_group">
					<mm-input type="text" title="Name" name="Product_Name" value="{ encodeentities( g.Product_Name ) }" class="productchargetype_chargesettings_item flex_half" input-class="mm_input_common whole_width" required></mm-input>
					<mm-input type="text" title="Code" name="Product_Code" value="{ encodeentities( g.Product_Code ) }" class="productchargetype_chargesettings_item" input-class="mm_input_common whole_width" required></mm-input>
					<mm-select type="text" title="Type" name="Product_Type" class="productchargetype_chargesettings_item" select-class="mm_select_common whole_width" required>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'core',	g.Product_Type, 'Core' ) }">
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'fee',		g.Product_Type, 'Fee' ) }">
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'other',	g.Product_Type, 'Other' ) }">
					</mm-select>
				</span>
				<span class="productchargetype_chargesettings_group half">
					<mm-input type="text" title="Price" Name="Product_Price" value="{ encodeentities( g.Product_Price ) }" class="productchargetype_chargesettings_item" input-class="mm_input_common whole_width" required></mm-input>
					<span class="productchargetype_chargesettings_item flex_noshrink">
						<span class="productchargetype_chargesettings_item_prompt">Taxability</span>
						<span class="productchargetype_chargesettings_item_content">
							<input type="hidden" name="Product_Taxable" value="{ [ g.Module_Admin ].Trim_Boolean( g.Product_Taxable ) }">
							<span class="productchargetype_chargesettings_item_taxability">
								<mm-button id="productchargetype_chargesettings_item_taxability_taxable" text="Taxable" class="productchargetype_chargesettings_item_taxability_item" button-class="productchargetype_chargesettings_item_taxability_item_button"></mm-button>
								<mm-button id="productchargetype_chargesettings_item_taxability_nontaxable" text="Non-Taxable" class="productchargetype_chargesettings_item_taxability_item" button-class="productchargetype_chargesettings_item_taxability_item_button"></mm-button>
							</span>
						</span>
					</span>
				</span>
				<span class="productchargetype_chargesettings_group">
					<span class="productchargetype_chargesettings_item">
						<span class="productchargetype_chargesettings_item_prompt">Charge Description</span>
						<span class="productchargetype_chargesettings_item_content">
							<MvIF EXPR = "{ [ g.Module_Library_DB ].MMTextEditor_Enabled( g.Store:id, g.Screen, g.Tab, 'Product_Description' ) }">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawMMTextEditor( 'Product_Description', g.Product_Description, 20, 58, 1, 0 ) }">
							<MvELSE>
								<MvASSIGN NAME = "l.parent_id" VALUE = "{ MakeSessionID() }">

								<MvIF EXPR = "{ NOT g.User:wwdescrip }">	<MvASSIGN NAME = "l.wrap" VALUE = "off">
								<MvELSE>									<MvASSIGN NAME = "l.wrap" VALUE = "soft">
								</MvIF>

								<table cellspacing="0" cellpadding="0" border="0"><tr>
									<td valign="top"><textarea name="Product_Description" class="mm_template_textarea" rows="10" cols="58" wrap="{ l.wrap }"><MIVA STANDARDOUTPUTLEVEL = "text, html"><MvEVAL EXPR = "{ encodeentities( g.Product_Description ) }"><MIVA STANDARDOUTPUTLEVEL = "text, html, compresswhitespace"></textarea></td>

									<td valign="top" align="right" style="width: 45px;">
										<span id="{ l.parent_id }" class="mm_template_textarea_button_container"></span>

										<script type="text/javascript">
											(function()
											{
												var editor, parent_id;

												parent_id				= '<MvEVAL EXPR = "{ encodejavascriptstring( l.parent_id ) }">';
												editor					= new MMTemplateTextArea( parent_id, 'Product_Description' );
												editor.onSetModified	= function() { SetItemModified( '<MvEVAL EXPR = "{ encodejavascriptstring( l.product:code ) }">' ); };

												editor.SetModified_Enable();
											})();
										</script>
									</td>
								</tr></table>

								<br />

								<MvIF EXPR = "{ NOT g.User:wwdescrip }">	<input type="checkbox" onclick="TextArea_WordWrap_Toggle( 'Product_Description' );" />
								<MvELSE>									<input type="checkbox" onclick="TextArea_WordWrap_Toggle( 'Product_Description' );" checked />
								</MvIF>

								Wrap Text
							</MvIF>
						</span>
					</span>
				</span>
				<span class="productchargetype_chargesettings_timestamps">
					<span class="productchargetype_chargesettings_timestamps_prompt">Created:</span>
					<span class="productchargetype_chargesettings_timestamps_content"><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].FormatDateTime_ClientLocale( l.product:dt_created, 'N/A' ) }"></span>
					<span class="productchargetype_chargesettings_timestamps_prompt">Last Updated:</span>
					<span class="productchargetype_chargesettings_timestamps_content"><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].FormatDateTime_ClientLocale( l.product:dt_updated, 'N/A' ) }"></span>
				</span>
			</span>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvELSE>
		<MvHIDE FIELDS = "g.Product_Name, g.Product_Code, g.Product_Type, g.Product_Price, g.Product_Taxable, g.Product_Description">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_PAY_AD ].ProductPaymentRules_Content( l.product ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SHP_AD ].ProductShippingRules_Content( l.product ) }">

	<MvIF EXPR = "{ g.Tab EQ 'PRDS' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
		<MvEVAL EXPR = "{ Element_ProductChargeType_ProductList_HTML( l.module ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Tab EQ 'COLS' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
		<MvEVAL EXPR = "{ Element_ProductChargeType_CollectionList_HTML( l.module ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.product_tax_module" ARRAY = "l.product_tax_modules" COUNT = "{ l.product_tax_module_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.product_tax_module:module ].Module_Product_Content( l.product_tax_module, g.Tab, g.Load_Fields, l.product ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvHIDE FIELDS = "g.Module_Code, g.ProductChargeType_Action, g.Edit_Product">

	<MvIF EXPR = "{ NOT ISNULL g.Original_Edit_Product }">
		<input type="hidden" name="Original_Edit_Product" value="{ encodeentities( g.Original_Edit_Product ) }" disabled>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons( l.buttons ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Configuration Change Notification Feature (not_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductChargeType_Delete_All_Product( l.product ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Copy" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_LowStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_OutOfStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Basket Item Notification Feature (not_basketitem)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_BasketItem_Insert" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.basketitem:parent_id NE 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypeXProductAndProduct"
				QUERY 	= "{ 'SELECT
								pctxp.ovr_price	AS pctxp_ovr_price,
								pctxp.price		AS pctxp_price,
								pct.type		AS pct_type,
								pct.product_id	AS pct_product_id,
								p.code			AS product_code,
								p.name			AS product_name,
								p.sku			AS product_sku,
								p.price			AS product_price,
								p.weight		AS product_weight,
								p.taxable		AS product_taxable,
								bi.product_id	AS bi_product_id,
								bi.type			AS bi_type
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Products p ON p.id = pct.product_id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'BasketItems bi ON bi.basket_id = ? AND bi.parent_id = ? AND bi.product_id = pct.product_id AND bi.type = pct.type
							  WHERE
								pctxp.product_id	= ?				AND
								pct.id				= pctxp.pct_id	AND
								bi.line_id			IS NULL' }"
				FIELDS	= "l.basketitem:basket_id, l.basketitem:line_id, l.basketitem:product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00026', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductChargeTypeXProductAndProduct.d.EOF }">
		<MvASSIGN NAME = "l.child_basketitem"				VALUE = "">
		<MvASSIGN NAME = "l.child_basketitem:basket_id"		VALUE = "{ l.basketitem:basket_id }">
		<MvASSIGN NAME = "l.child_basketitem:parent_id"		VALUE = "{ l.basketitem:line_id }">
		<MvASSIGN NAME = "l.child_basketitem:product_id"	VALUE = "{ ProductChargeTypeXProductAndProduct.d.pct_product_id }">
		<MvASSIGN NAME = "l.child_basketitem:code"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_code }">
		<MvASSIGN NAME = "l.child_basketitem:name"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_name }">
		<MvASSIGN NAME = "l.child_basketitem:sku"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_sku }">
		<MvASSIGN NAME = "l.child_basketitem:type"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.pct_type }">
		<MvASSIGN NAME = "l.child_basketitem:weight"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_weight }">
		<MvASSIGN NAME = "l.child_basketitem:taxable"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_taxable }">
		<MvASSIGN NAME = "l.child_basketitem:upsold"		VALUE = 0>
		<MvASSIGN NAME = "l.child_basketitem:quantity"		VALUE = "{ l.basketitem:quantity }">

		<MvIF EXPR = "{ ProductChargeTypeXProductAndProduct.d.pctxp_ovr_price }">	<MvASSIGN NAME = "l.child_basketitem:price" VALUE = "{ ProductChargeTypeXProductAndProduct.d.pctxp_price }">
		<MvELSE>																	<MvASSIGN NAME = "l.child_basketitem:price" VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_price }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItem_Insert( l.child_basketitem ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_BasketItem_Update" PARAMETERS = "module var, original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_BasketItem_Delete" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Quote Item Notification Feature (not_quoteitem)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_QuoteItem_Insert" PARAMETERS = "module var, quoteitem var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.quoteitem:parent_id NE 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code( 'quote', l.quote_module ) }">					<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT l.quote_module:active }">															<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Load( l.quote_module:id, 'util', l.null ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypeXProductAndProduct"
				QUERY 	= "{ 'SELECT
								pctxp.ovr_price	AS pctxp_ovr_price,
								pctxp.price		AS pctxp_price,
								pct.type		AS pct_type,
								pct.product_id	AS pct_product_id,
								p.code			AS product_code,
								p.name			AS product_name,
								p.sku			AS product_sku,
								p.price			AS product_price,
								p.weight		AS product_weight,
								p.taxable		AS product_taxable,
								qi.product_id	AS qi_product_id,
								qi.type			AS qi_type
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Products p ON p.id = pct.product_id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'QuoteItems qi ON qi.quote_id = ? AND qi.parent_id = ? AND qi.product_id = pct.product_id AND qi.type = pct.type
							  WHERE
								pctxp.product_id	= ?				AND
								pct.id				= pctxp.pct_id	AND
								qi.line_id			IS NULL' }"
				FIELDS	= "l.quoteitem:quote_id, l.quoteitem:line_id, l.quoteitem:product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00027', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductChargeTypeXProductAndProduct.d.EOF }">
		<MvASSIGN NAME = "l.child_quoteitem"				VALUE = "">
		<MvASSIGN NAME = "l.child_quoteitem:quote_id"		VALUE = "{ l.quoteitem:quote_id }">
		<MvASSIGN NAME = "l.child_quoteitem:parent_id"		VALUE = "{ l.quoteitem:line_id }">
		<MvASSIGN NAME = "l.child_quoteitem:product_id"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.pct_product_id }">
		<MvASSIGN NAME = "l.child_quoteitem:code"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_code }">
		<MvASSIGN NAME = "l.child_quoteitem:name"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_name }">
		<MvASSIGN NAME = "l.child_quoteitem:sku"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_sku }">
		<MvASSIGN NAME = "l.child_quoteitem:type"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.pct_type }">
		<MvASSIGN NAME = "l.child_quoteitem:weight"			VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_weight }">
		<MvASSIGN NAME = "l.child_quoteitem:taxable"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_taxable }">
		<MvASSIGN NAME = "l.child_quoteitem:upsold"			VALUE = 0>
		<MvASSIGN NAME = "l.child_quoteitem:quantity"		VALUE = "{ l.quoteitem:quantity }">

		<MvIF EXPR = "{ ProductChargeTypeXProductAndProduct.d.pctxp_ovr_price }">	<MvASSIGN NAME = "l.child_quoteitem:price" VALUE = "{ ProductChargeTypeXProductAndProduct.d.pctxp_price }">
		<MvELSE>																	<MvASSIGN NAME = "l.child_quoteitem:price" VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_price }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.quote_module:module ].QuoteItem_Insert( l.child_quoteitem ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_QuoteItem_Update" PARAMETERS = "module var, original_quoteitem var, quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_QuoteItem_Delete" PARAMETERS = "module var, quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Order Item Notification Feature (not_orderitem)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_OrderItem_Insert" PARAMETERS = "module var, orderitem var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.orderitem:parent_id NE 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypeXProductAndProduct"
				QUERY 	= "{ 'SELECT
								pctxp.ovr_price	AS pctxp_ovr_price,
								pctxp.price		AS pctxp_price,
								pct.type		AS pct_type,
								pct.product_id	AS pct_product_id,
								p.code			AS product_code,
								p.name			AS product_name,
								p.sku			AS product_sku,
								p.price			AS product_price,
								p.weight		AS product_weight,
								p.taxable		AS product_taxable,
								oi.product_id	AS oi_product_id,
								oi.type			AS oi_type
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Products p ON p.id = pct.product_id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'OrderItems oi ON oi.order_id = ? AND oi.parent_id = ? AND oi.product_id = pct.product_id AND oi.type = pct.type
							  WHERE
								pctxp.product_id	= ?				AND
								pct.id				= pctxp.pct_id	AND
								oi.line_id			IS NULL' }"
				FIELDS	= "l.orderitem:order_id, l.orderitem:line_id, l.orderitem:product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00028', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductChargeTypeXProductAndProduct.d.EOF }">
		<MvASSIGN NAME = "l.child_orderitem"			VALUE = "">
		<MvASSIGN NAME = "l.child_orderitem:order_id"	VALUE = "{ l.orderitem:order_id }">
		<MvASSIGN NAME = "l.child_orderitem:parent_id"	VALUE = "{ l.orderitem:line_id }">
		<MvASSIGN NAME = "l.child_orderitem:status"		VALUE = "{ l.orderitem:status }">
		<MvASSIGN NAME = "l.child_orderitem:subscrp_id"	VALUE = "{ l.orderitem:subscrp_id }">
		<MvASSIGN NAME = "l.child_orderitem:subterm_id"	VALUE = "{ l.orderitem:subterm_id }">
		<MvASSIGN NAME = "l.child_orderitem:shpmnt_id"	VALUE = "{ l.orderitem:shpmnt_id }">
		<MvASSIGN NAME = "l.child_orderitem:rma_id"		VALUE = "{ l.orderitem:rma_id }">
		<MvASSIGN NAME = "l.child_orderitem:product_id"	VALUE = "{ ProductChargeTypeXProductAndProduct.d.pct_product_id }">
		<MvASSIGN NAME = "l.child_orderitem:code"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_code }">
		<MvASSIGN NAME = "l.child_orderitem:name"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_name }">
		<MvASSIGN NAME = "l.child_orderitem:sku"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_sku }">
		<MvASSIGN NAME = "l.child_orderitem:type"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.pct_type }">
		<MvASSIGN NAME = "l.child_orderitem:weight"		VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_weight }">
		<MvASSIGN NAME = "l.child_orderitem:taxable"	VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_taxable }">
		<MvASSIGN NAME = "l.child_orderitem:upsold"		VALUE = 0>
		<MvASSIGN NAME = "l.child_orderitem:quantity"	VALUE = "{ l.orderitem:quantity }">

		<MvIF EXPR = "{ ProductChargeTypeXProductAndProduct.d.pctxp_ovr_price }">	<MvASSIGN NAME = "l.child_orderitem:price" VALUE = "{ ProductChargeTypeXProductAndProduct.d.pctxp_price }">
		<MvELSE>																	<MvASSIGN NAME = "l.child_orderitem:price" VALUE = "{ ProductChargeTypeXProductAndProduct.d.product_price }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Insert( l.child_orderitem ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductAndProduct">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_OrderItem_Update" PARAMETERS = "module var, original_orderitem var, orderitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_OrderItem_Delete" PARAMETERS = "module var, orderitem_count, original_orderitems var, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_OrderItem_StatusChange" PARAMETERS = "module var, orderitem_count, original_orderitems var, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Runtime Basket Item (rt_basketitem)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Insert_Validate" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Insert" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.basketitem:parent_id }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.child_basketitem" ARRAY = "l.child_basketitems" COUNT = "{ [ g.Module_Library_DB ].BasketItemList_Load_Parent( l.basketitem:basket_id, l.basketitem:parent_id, l.child_basketitems ) }">
		<MvIF EXPR = "{ l.child_basketitem:product_id EQ l.basketitem:product_id AND strcasecmp( l.child_basketitem:type, l.basketitem:type ) EQ 0 }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOption_Delete_All_Line( l.child_basketitem:line_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFOREACH ITERATOR = "l.basketitem_option" ARRAY = "l.basketitem:options" COUNT = "{ l.basketitem:option_count }">
				<MvASSIGN NAME = "l.basketitem_option:basket_id"	VALUE = "{ l.child_basketitem:basket_id }">
				<MvASSIGN NAME = "l.basketitem_option:line_id"		VALUE = "{ l.child_basketitem:line_id }">

				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].v10_BasketOption_Insert( l.child_basketitem, l.basketitem_option ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvFOREACH>

			<MvASSIGN NAME = "l.child_basketitem:code"			VALUE = "{ l.basketitem:code }">
			<MvASSIGN NAME = "l.child_basketitem:name"			VALUE = "{ l.basketitem:name }">
			<MvASSIGN NAME = "l.child_basketitem:sku"			VALUE = "{ l.basketitem:sku }">
			<MvASSIGN NAME = "l.child_basketitem:base_price"	VALUE = "{ l.basketitem:base_price }">
			<MvASSIGN NAME = "l.child_basketitem:price"			VALUE = "{ l.basketitem:price }">
			<MvASSIGN NAME = "l.child_basketitem:weight"		VALUE = "{ l.basketitem:weight }">
			<MvASSIGN NAME = "l.child_basketitem:taxable"		VALUE = "{ l.basketitem:taxable }">
			<MvASSIGN NAME = "l.child_basketitem:quantity"		VALUE = "{ l.basketitem:quantity }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItem_Update( l.child_basketitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvCOMMENT>
			|
			| In this case, the basketitem passed to Module_Runtime_BasketItem_Insert already has a basketitem record so we return -1 to stop processing and let the core handle updates.
			|
			</MvCOMMENT>

			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Update_Validate" PARAMETERS = "module var, original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Update" PARAMETERS = "module var, original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Delete_Validate" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Delete" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Collections Feature (colprod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Collection_Rebuild_Add_Products" PARAMETERS = "module var, col_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CollectionProductCharges_Rebuild_Add_Products( l.col_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Collection_Rebuild_Remove_Products" PARAMETERS = "module var, col_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CollectionProductCharges_Rebuild_Remove_Products( l.col_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Collection_Rebuild_Remove_Unreferenced_Products" PARAMETERS = "module var, col_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CollectionProductCharges_Rebuild_Remove_Unused_Products( l.col_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Collection_Product_Add" PARAMETERS = "module var, col_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CollectionProductCharges_Add_Product( l.col_id, l.product_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Collection_Product_Remove" PARAMETERS = "module var, col_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CollectionProductCharges_Remove_Product( l.col_id, l.product_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Collection_Product_Remove_Unreferenced" PARAMETERS = "module var, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductCharges_Remove_Unused_Collection_Product( l.product_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Collection_Product_Remove_All" PARAMETERS = "module var, col_id" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.productchargetype" ARRAY = "l.productchargetypes" COUNT = "{ ProductChargeTypeList_Load_All( l.productchargetypes ) }">
		<MvIF EXPR = "{ NOT ProductChargeType_Remove_Collection_Products( l.productchargetype, l.col_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ ProductChargeTypeXCollection_Delete_All_Collection( l.col_id ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module Client Side Feature (clientside)
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/util/productcharges/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_ProductCharges_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/productcharges/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/productcharges/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/productcharges/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'ProductChargeTypeList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeTypeList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeType_Insert' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeType_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeType_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeType_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeType_ProductIndex_Load_ID' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeType_ProductIndex_Load_ID( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeType_ProductList_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeType_ProductList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Product_ProductChargeTypeList_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Product_ProductChargeTypeList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeTypeProductList_Add' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeTypeProductList_Add( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeTypeProductList_Remove' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeTypeProductList_Remove( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeTypeProduct_Update' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeTypeProduct_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeType_CollectionIndex_Load_ID' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeType_CollectionIndex_Load_ID( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeType_CollectionList_Load_Query' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeType_CollectionList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeTypeCollection_Add' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeTypeCollection_Add( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeTypeCollection_Remove' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeTypeCollection_Remove( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductChargeTypeCollection_Update' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ProductChargeTypeCollection_Update( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_OnDemandColumns" PARAMETERS = "productchargetype var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.formatted_price" VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.productchargetype:price ) }">

	"id":				<MvEVAL EXPR = "{ int( l.productchargetype:id ) }">,
	"product_id":		<MvEVAL EXPR = "{ int( l.productchargetype:product_id ) }">,
	"code":				"<MvEVAL EXPR = "{ encodejavascriptstring( l.productchargetype:code ) }">",
	"name":				"<MvEVAL EXPR = "{ encodejavascriptstring( l.productchargetype:name ) }">",
	"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.productchargetype:price ) }">,
	"formatted_price":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.formatted_price ) }">",
	"type":				"<MvEVAL EXPR = "{ encodejavascriptstring( l.productchargetype:type ) }">"

	<MvIF EXPR = "{ l.ondemandcolumns:descrip }">
		, "descrip":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.productchargetype:descrip ) }">"
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_Read" PARAMETERS = "productchargetype var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ ProductChargeType_Read( l.productchargetype ) }">

	<MvASSIGN NAME = "l.productchargetype:code"			VALUE = "{ ProductChargeTypes.d.code }">
	<MvASSIGN NAME = "l.productchargetype:name"			VALUE = "{ ProductChargeTypes.d.name }">
	<MvASSIGN NAME = "l.productchargetype:price"		VALUE = "{ ProductChargeTypes.d.price }">

	<MvIF EXPR = "{ l.ondemandcolumns:descrip }">
		<MvASSIGN NAME = "l.productchargetype:descrip"	VALUE = "{ ProductChargeTypes.d.descrip }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_Load" PARAMETERS = "productchargetype var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'ProductChargeType_ID', l.productchargetype_id ) }">
		<MvIF EXPR = "{ NOT ProductChargeType_Load_ID( l.productchargetype_id, l.productchargetype ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00090', 'Product charge type not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_ProductChargeType', l.productchargetype_code ) }">
		<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.productchargetype_code, l.productchargetype ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00091', 'Product charge type not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'ProductChargeType_Code', l.productchargetype_code ) }">
		<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.productchargetype_code, l.productchargetype ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00092', 'Product charge type not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00093', 'Unable to load product charge type: One of ProductChargeType_ID, Edit_ProductChargeType, or ProductChargeType_Code must be specified' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.productchargetype:product_id, l.productchargetype:product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00094', 'Product charge type not found' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.query"				VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pct.id',		'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'p.code',		'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'p.name',		'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'p.price',		'price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pct.type',	'type' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'pct.*,
																		  p.code	AS code,
																		  p.name	AS name,
																		  p.price	AS price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductChargeTypes',	'pct' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Products',			'p' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'p.id = pct.product_id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.query, l.filter, l.available_filters, g.Module_Root $ l.module:module, 'JSON_ProductChargeTypeList_Load_Query_Filter', '', l.data ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, 'p.code,p.name,p.price,pct.type', 'pct.id' ) }">

	<MvIF EXPR = "{ l.data:ondemandcolumns:descrip }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'p.descrip	AS descrip' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'ProductChargeTypes', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PRCG-00095', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetype_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT ProductChargeTypes.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.productchargetype_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_ProductChargeType_Read( l.productchargetype, l.data:ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productchargetype_count ) }">
				<MvEVAL EXPR = "{ JSON_ProductChargeType_OnDemandColumns( l.productchargetype, l.data:ondemandcolumns ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypes" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeList_Load_Query_Filter" PARAMETERS = "query var, field_count var, filter_name, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'ondemandcolumns' }">
		<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter_value">
			<MvIF EXPR = "{ ISNULL l.column_code }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.data:ondemandcolumns" MEMBER = "{ l.column_code }" VALUE = 1>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.product"						VALUE = "">
	<MvASSIGN NAME = "l.product:price"					VALUE = 0.00>
	<MvASSIGN NAME = "l.product:cost"					VALUE = 0.00>
	<MvASSIGN NAME = "l.product:weight"					VALUE = 0.00>
	<MvASSIGN NAME = "l.product:taxable"				VALUE = 1>
	<MvASSIGN NAME = "l.product:active"					VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_List(		'R',		'Type',			l.type, 'Core,Fee,Other', 'core,fee,other' )	OR
					NOT [ g.Module_JSON ].JSON_Input_Code(		'R',		'Code',			l.product:code )								OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R:100',	'Name',			l.product:name )								OR
					NOT [ g.Module_JSON ].JSON_Input_Price(		'O',		'Price',		l.product:price )								OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',		'Description',	l.product:descrip )								OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'Taxable',		l.product:taxable ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.product:code, l.existing_product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PRCG-00096', 'Product with code \'' $ l.existing_product:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Begin() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Product \'' $ l.product:code $ '\' created' ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Insert( l.product ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetype"				VALUE = "">
	<MvASSIGN NAME = "l.productchargetype:type"			VALUE = "{ l.type }">
	<MvASSIGN NAME = "l.productchargetype:product_id"	VALUE = "{ l.product:id }">

	<MvIF EXPR = "{ NOT ProductChargeType_Insert( l.productchargetype ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Delete( l.product ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Commit() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00097', 'Product charge type \'' $ l.product:code $ '\' created' ) }">

	<MvCOMMENT>
	|
	| Additional fields added for JSON output
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.productchargetype:code"			VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.productchargetype:name"			VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.productchargetype:price"		VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.productchargetype:descrip"		VALUE = "{ l.product:descrip }">

	<MvASSIGN NAME = "l.ondemandcolumns"				VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns:descrip"		VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_ProductChargeType_OnDemandColumns( l.productchargetype, l.ondemandcolumns ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Delete( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00098', 'Product charge type \'' $ l.productchargetype:product:code $ '\' deleted' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_ProductIndex_Load_ID" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"				VALUE = "">
	<MvASSIGN NAME = "l.record"				VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.available_filters"	VALUE = "{ [ g.Module_JSON ].JSON_BaseProductList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_JSON ].JSON_BaseProductList_OrderBy() $ ',ovr_price:pctxp.ovr_price,custom_price:pctxp.price' }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pctxp.ovr_price',	'ovr_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pctxp.price',		'custom_price' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_BaseProductIndex_Load_ID_LowLevel( l.filter, l.sort, l.available_filters, l.orderby_columns, 'prod.disp_order', g.Module_JSON, 'JSON_ProductList_Load_Query_Filter', 'JSON_ProductList_Load_Query_Search_Filter', 'JSON_Product_CustomFields_Query_Filter', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ ProductChargeTypeXProduct_Load( l.productchargetype:id, l.record:prod:id, l.record:pctxp ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductChargeTypeXProduct', 'pctxp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pctxp.pct_id = ? AND prod.id = pctxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.productchargetype:id ) ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index": <MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_ProductList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.count_query"		VALUE = "">
	<MvASSIGN NAME = "l.available_filters"	VALUE = "{ [ g.Module_JSON ].JSON_BaseProductList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_JSON ].JSON_BaseProductList_OrderBy() $ ',ovr_price:pctxp.ovr_price,custom_price:pctxp.price' }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pctxp.ovr_price',	'ovr_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pctxp.price',		'custom_price' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_LowLevel( l.filter, l.sort, l.available_filters, l.orderby_columns, 'prod.disp_order', g.Module_JSON, 'JSON_ProductList_Load_Query_Filter', 'JSON_ProductList_Load_Query_Search_Filter', 'JSON_Product_CustomFields_Query_Filter', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pctxp.ovr_price	AS productchargetypexproduct_ovr_price,
																				 pctxp.price		AS productchargetypexproduct_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'ProductChargeTypeXProduct', 'pctxp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pctxp.pct_id = ? AND prod.id = pctxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.productchargetype:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'ProductChargeTypeXProduct', 'pctxp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'pctxp.pct_id = ? AND prod.id = pctxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.productchargetype:id ) ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PRCG-00099', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvASSIGN NAME = "l.formatted_custom_price" VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, Products.d.productchargetypexproduct_price ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.product_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">

				, "ovr_price":				<MvEVAL EXPR = "{ encodejavascriptboolean( Products.d.productchargetypexproduct_ovr_price ) }">,
				"custom_price": 			<MvEVAL EXPR = "{ encodejavascriptnumber( Products.d.productchargetypexproduct_price ) }">,
				"formatted_custom_price":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.formatted_custom_price ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_ProductChargeTypeList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.query"				VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pct.id',			'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pct.type',		'type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'p.code',			'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'p.name',			'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'p.price',			'price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pctxp.price',		'custom_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pctxp.ovr_price',	'ovr_price' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'pct.*,
																		  p.code			AS code,
																		  p.name			AS name,
																		  p.price			AS price,
																		  pctxp.ovr_price	AS productchargetypexproduct_ovr_price,
																		  pctxp.price		AS productchargetypexproduct_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductChargeTypeXProduct',	'pctxp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductChargeTypes',			'pct' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Products',					'p' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pctxp.product_id	= ?				AND
																		 pct.id				= pctxp.pct_id	AND
																		 p.id				= pct.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.query, l.filter, l.available_filters, g.Module_Root $ l.module:module, 'JSON_ProductChargeTypeList_Load_Query_Filter', '', l.data ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, 'p.code,p.name,pct.type,p.price,custom_price:pctxp.price,ovr_price:pctxp.ovr_price', 'pct.id' ) }">

	<MvIF EXPR = "{ l.data:ondemandcolumns:descrip }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'p.descrip	AS descrip' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'ProductChargeTypes', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PRCG-00100', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetype_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT ProductChargeTypes.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.productchargetype_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_ProductChargeType_Read( l.productchargetype, l.data:ondemandcolumns ) }">

			<MvASSIGN NAME = "l.formatted_custom_price" VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, ProductChargeTypes.d.productchargetypexproduct_price ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productchargetype_count ) }">
				<MvEVAL EXPR = "{ JSON_ProductChargeType_OnDemandColumns( l.productchargetype, l.data:ondemandcolumns ) }">

				, "ovr_price":				<MvEVAL EXPR = "{ encodejavascriptboolean( ProductChargeTypes.d.productchargetypexproduct_ovr_price ) }">,
				"custom_price": 			<MvEVAL EXPR = "{ encodejavascriptnumber( ProductChargeTypes.d.productchargetypexproduct_price ) }">,
				"formatted_custom_price":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.formatted_custom_price ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypes" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeProductList_Add" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{  NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'Product_IDs', l.product_ids, l.product_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Exists( 'Price' ) }">
		<MvASSIGN NAME = "l.ovr_price"	VALUE = 0>
		<MvASSIGN NAME = "l.price"		VALUE = 0.00>
	<MvELSE>
		<MvASSIGN NAME = "l.ovr_price"	VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Price(	'O', 'Price', l.price ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.product_id" ARRAY = "l.product_ids" COUNT = "{ l.product_id_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ ProductChargeTypeXProduct_Load( l.productchargetype:id, l.product:id, l.productchargetypexproduct ) }">
				<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"		VALUE = "{ l.ovr_price }">
				<MvASSIGN NAME = "l.productchargetypexproduct:price"			VALUE = "{ l.price }">

				<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Update( l.productchargetypexproduct ) }">
					<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.product_id, g.Error_Code, g.Error_Message, l.errors ) }">
				<MvELSE>
					<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00101', 'Product \'' $ l.product:code $ '\' linked to product charge type \'' $ l.productchargetype:product:code $ '\' updated with custom price' ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.productchargetypexproduct"					VALUE = "">
				<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"			VALUE = "{ l.productchargetype:id }">
				<MvASSIGN NAME = "l.productchargetypexproduct:product_id"		VALUE = "{ l.product:id }">
				<MvASSIGN NAME = "l.productchargetypexproduct:automatic"		VALUE = 0>
				<MvASSIGN NAME = "l.productchargetypexproduct:colcount"			VALUE = 0>
				<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"		VALUE = "{ l.ovr_price }">
				<MvASSIGN NAME = "l.productchargetypexproduct:price"			VALUE = "{ l.price }">

				<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Insert( l.productchargetypexproduct ) }">
					<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.product_id, g.Error_Code, g.Error_Message, l.errors ) }">
				<MvELSE>
					<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00102', 'Product \'' $ l.product:code $ '\' assigned to product charge type \'' $ l.productchargetype:product:code $ '\'' ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeProductList_Remove" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvIF EXPR = "{  NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'Product_IDs', l.product_ids, l.product_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.product_id" ARRAY = "l.product_ids" COUNT = "{ l.product_id_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Load( l.productchargetype:id, l.product:id, l.productchargetypexproduct ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>
			<MvELSE>
				<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Delete( l.productchargetypexproduct ) }">
					<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.product_id, g.Error_Code, g.Error_Message, l.errors ) }">
				<MvELSE>
					<MvEVAL EXPR = "{ [ g.Module_Admin].Admin_Log_Action( 'MER-UTIL-PRCG-00103', 'Product \'' $ l.product:code $ '\' unassigned from product charge type \'' $ l.productchargetype:product:code $ '\'' ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeProduct_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Load( l.productchargetype:id, l.product:id, l.productchargetypexproduct ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PRCG-00104', 'Product charge type \'' $ l.productchargetype:product:code $ '\' linked to product \'' $ l.product:code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'Override_Price',	l.productchargetypexproduct:ovr_price ) OR
					NOT [ g.Module_JSON ].JSON_Input_Price(		'O', 'Price',			l.productchargetypexproduct:price ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Update( l.productchargetypexproduct ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00105', 'Product charge type \'' $ l.productchargetype:product:code $ '\' linked to product \'' $ l.product:code $ '\' updated' ) }">

	<MvCOMMENT>
	|
	| Additional fields added for JSON output
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.productchargetype:code"			VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.productchargetype:name"			VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.productchargetype:price"		VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.formatted_custom_price"			VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.productchargetypexproduct:price ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_ProductChargeType_OnDemandColumns( l.productchargetype, l.null ) }">

		, "ovr_price":				<MvEVAL EXPR = "{ encodejavascriptboolean( l.productchargetypexproduct:ovr_price ) }">,
		"custom_price": 			<MvEVAL EXPR = "{ encodejavascriptnumber( l.productchargetypexproduct:price ) }">,
		"formatted_custom_price":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.formatted_custom_price ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_CollectionIndex_Load_ID" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"				VALUE = "">
	<MvASSIGN NAME = "l.record"				VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.available_filters"	VALUE = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_OrderBy() $ ',ovr_price:pctxc.ovr_price,custom_price:pctxc.price' }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pctxc.ovr_price',	'ovr_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pctxc.price',		'custom_price' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionIndex_Load_ID_LowLevel( l.filter, l.sort, l.available_filters, l.orderby_columns, 'col.id', g.Module_Feature_COL_JSON, 'JSON_CollectionList_Load_Query_Filter', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ ProductChargeTypeXCollection_Load( l.productchargetype:id, l.record:col:id, l.record:pctxc ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductChargeTypeXCollection', 'pctxc' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pctxc.pct_id = ? AND col.id = pctxc.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.productchargetype:id ) ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index": <MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeType_CollectionList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.available_filters"	VALUE = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_OrderBy() $ ',ovr_price:pctxc.ovr_price,custom_price:pctxc.price' }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pctxc.ovr_price',	'ovr_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pctxc.price',		'custom_price' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Load_Query_LowLevel( l.filter, l.sort, l.available_filters, l.orderby_columns, 'col.id', g.Module_Feature_COL_JSON, 'JSON_CollectionList_Load_Query_Filter', l.search_query, l.data ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pctxc.ovr_price	AS productchargetypexcollection_ovr_price,
																				 pctxc.price		AS productchargetypexcollection_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'ProductChargeTypeXCollection', 'pctxc' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pctxc.pct_id = ? AND col.id = pctxc.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.productchargetype:id ) ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Collections', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PRCG-00106', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.collection_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Collections.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.collection_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Collection_Read( l.collection, l.data:ondemandcolumns ) }">

			<MvASSIGN NAME = "l.formatted_custom_price" VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, Collections.d.productchargetypexcollection_price ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.collection_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_Collection_OnDemandColumns( l.collection, l.data:ondemandcolumns ) }">

				, "ovr_price":				<MvEVAL EXPR = "{ encodejavascriptboolean( Collections.d.productchargetypexcollection_ovr_price ) }">,
				"custom_price": 			<MvEVAL EXPR = "{ encodejavascriptnumber( Collections.d.productchargetypexcollection_price ) }">,
				"formatted_custom_price":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.formatted_custom_price ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Collections" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeCollection_Add" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Exists( 'Price' ) }">
		<MvASSIGN NAME = "l.ovr_price"	VALUE = 0>
		<MvASSIGN NAME = "l.price"		VALUE = 0.00>
	<MvELSE>
		<MvASSIGN NAME = "l.ovr_price"	VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Price(	'O', 'Price', l.price ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ProductChargeTypeXCollection_Load( l.productchargetype:id, l.collection:id, l.productchargetypexcollection ) }">
		<MvASSIGN NAME = "l.productchargetypexcollection:ovr_price"		VALUE = "{ l.ovr_price }">
		<MvASSIGN NAME = "l.productchargetypexcollection:price"			VALUE = "{ l.price }">

		<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Update( l.productchargetypexcollection ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00107', 'Collection \'' $ l.collection:code $ '\' linked to product charge type \'' $ l.productchargetype:product:code $ '\' updated with custom price' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.productchargetypexcollection"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexcollection:pct_id"		VALUE = "{ l.productchargetype:id }">
		<MvASSIGN NAME = "l.productchargetypexcollection:col_id"		VALUE = "{ l.collection:id }">
		<MvASSIGN NAME = "l.productchargetypexcollection:ovr_price"		VALUE = "{ l.ovr_price }">
		<MvASSIGN NAME = "l.productchargetypexcollection:price"			VALUE = "{ l.price }">

		<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Insert( l.productchargetypexcollection ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00108', 'Collection \'' $ l.collection:code $ '\' assigned to product charge type \'' $ l.productchargetype:product:code $ '\'' ) }">

		<MvIF EXPR = "{ NOT ProductChargeType_Add_Collection_Products( l.productchargetypexcollection ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeCollection_Remove" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Load( l.productchargetype:id, l.collection:id, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Delete( l.productchargetype:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeType_Remove_Collection_Products( l.productchargetype, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin].Admin_Log_Action( 'MER-UTIL-PRCG-00109', 'Collection \'' $ l.collection:code $ '\' unassigned from product charge type \'' $ l.productchargetype:product:code $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductChargeTypeCollection_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductChargeType_Load( l.productchargetype ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Load( l.productchargetype:id, l.collection:id, l.productchargetypexcollection ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PRCG-00110', 'Product charge type \'' $ l.productchargetype:product:code $ '\' linked to collection \'' $ l.collection:code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'Override_Price',	l.productchargetypexcollection:ovr_price ) OR
					NOT [ g.Module_JSON ].JSON_Input_Price(		'O', 'Price',			l.productchargetypexcollection:price ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Update( l.productchargetypexcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PRCG-00111', 'Product charge type \'' $ l.productchargetype:product:code $ '\' linked to collection \'' $ l.collection:code $ '\' updated' ) }">

	<MvCOMMENT>
	|
	| Additional fields added for JSON output
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.productchargetype:code"			VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.productchargetype:name"			VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.productchargetype:price"		VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.formatted_custom_price"			VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.productchargetypexcollection:price ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_ProductChargeType_OnDemandColumns( l.productchargetype, l.null ) }">

		, "ovr_price":				<MvEVAL EXPR = "{ encodejavascriptboolean( l.productchargetypexcollection:ovr_price ) }">,
		"custom_price": 			<MvEVAL EXPR = "{ encodejavascriptnumber( l.productchargetypexcollection:price ) }">,
		"formatted_custom_price":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.formatted_custom_price ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductChargeTypes
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductChargeType_Read" PARAMETERS = "productchargetype var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productchargetype:id"			VALUE = "{ ProductChargeTypes.d.id }">
	<MvASSIGN NAME = "l.productchargetype:product_id"	VALUE = "{ ProductChargeTypes.d.product_id }">
	<MvASSIGN NAME = "l.productchargetype:type"			VALUE = "{ ProductChargeTypes.d.type }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Insert" PARAMETERS = "productchargetype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productchargetype:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'ProductChargeTypes' ) }">

	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductChargeTypes
						( id, product_id, type )
						VALUES
						( ?, ?, ? )' }"
			FIELDS = "l.productchargetype:id, l.productchargetype:product_id, l.productchargetype:type">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00030', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Update" PARAMETERS = "productchargetype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'UPDATE
							' $ g.Store_Table_Prefix $ 'ProductChargeTypes
			 			  SET
			 				type	= ?
						  WHERE
							id		= ?' }"
			FIELDS = "l.productchargetype:type,
					  l.productchargetype:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00031', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Delete" PARAMETERS = "productchargetype var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_ID( l.productchargetype:product_id, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Delete( l.product ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ProductChargeType_Delete_LowLevel( l.productchargetype:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Delete_LowLevel" PARAMETERS = "pct_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypes WHERE id = ?' }"
			 FIELDS = "l.pct_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00032', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Delete_Product_ID" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypes WHERE product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00033', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Load_ID" PARAMETERS = "id, productchargetype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypes"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypes WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00034', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductChargeTypes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PRCG-00035' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductChargeType_Read( l.productchargetype ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Load_Code" PARAMETERS = "code, productchargetype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypes"
				QUERY 	= "{ 'SELECT
								pct.*
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct,
								' $ g.Store_Table_Prefix $ 'Products p
							  WHERE
								pct.product_id = p.id AND
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'p.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00036', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductChargeTypes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PRCG-00037' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductChargeType_Read( l.productchargetype ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeList_Load_All" PARAMETERS = "productchargetypes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypes"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypes ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00112', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetype_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT ProductChargeTypes.d.EOF }">
		<MvEVAL EXPR = "{ ProductChargeType_Read( l.productchargetypes[ ++l.productchargetype_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTIL-PRCG-00113', l.productchargetype_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_ProductChargeTypeList_Load_Product" PARAMETERS = "product_id, productchargetypes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypes"
				QUERY 	= "{ 'SELECT
								pct.*,
								pctxp.ovr_price	AS pctxp_ovr_price,
								pctxp.price		AS pctxp_price,
								p.code			AS product_code,
								p.name			AS product_name,
								p.descrip		AS product_descrip,
								p.price			AS product_price,
								p.taxable		AS product_taxable
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct,
								' $ g.Store_Table_Prefix $ 'Products p
							  WHERE
								pctxp.product_id	= ?				AND
								pct.id				= pctxp.pct_id	AND
								p.id				= pct.product_id' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00118', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productchargetype_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT ProductChargeTypes.d.EOF }">
		<MvEVAL EXPR = "{ ProductChargeType_Read( l.productchargetypes[ ++l.productchargetype_count ] ) }">

		<MvASSIGN NAME = "l.productchargetypes" INDEX = "{ l.productchargetype_count }" MEMBER = "code"		VALUE = "{ ProductChargeTypes.d.product_code }">
		<MvASSIGN NAME = "l.productchargetypes" INDEX = "{ l.productchargetype_count }" MEMBER = "name"		VALUE = "{ ProductChargeTypes.d.product_name }">
		<MvASSIGN NAME = "l.productchargetypes" INDEX = "{ l.productchargetype_count }" MEMBER = "descrip"	VALUE = "{ ProductChargeTypes.d.product_descrip }">
		<MvASSIGN NAME = "l.productchargetypes" INDEX = "{ l.productchargetype_count }" MEMBER = "taxable"	VALUE = "{ ProductChargeTypes.d.product_taxable }">

		<MvIF EXPR = "{ ProductChargeTypes.d.pctxp_ovr_price }">	<MvASSIGN NAME = "l.productchargetypes" INDEX = "{ l.productchargetype_count }" MEMBER = "price" VALUE = "{ ProductChargeTypes.d.pctxp_price }">
		<MvELSE>													<MvASSIGN NAME = "l.productchargetypes" INDEX = "{ l.productchargetype_count }" MEMBER = "price" VALUE = "{ ProductChargeTypes.d.product_price }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTIL-PRCG-00119', l.productchargetype_count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductChargeTypeXCollection
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductChargeTypeXCollection_Read" PARAMETERS = "productchargetypexcollection var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productchargetypexcollection:pct_id"	VALUE = "{ ProductChargeTypeXCollection.d.pct_id }">
	<MvASSIGN NAME = "l.productchargetypexcollection:col_id"	VALUE = "{ ProductChargeTypeXCollection.d.col_id }">
	<MvASSIGN NAME = "l.productchargetypexcollection:ovr_price"	VALUE = "{ ProductChargeTypeXCollection.d.ovr_price }">
	<MvASSIGN NAME = "l.productchargetypexcollection:price"		VALUE = "{ ProductChargeTypeXCollection.d.price }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXCollection_Insert" PARAMETERS = "productchargetypexcollection var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection
						( pct_id, col_id, ovr_price, price )
						VALUES
						( ?, ?, ?, ? )' }"
			FIELDS = "l.productchargetypexcollection:pct_id, l.productchargetypexcollection:col_id, l.productchargetypexcollection:ovr_price, l.productchargetypexcollection:price">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00038', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXCollection_Update" PARAMETERS = "productchargetypexcollection var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'UPDATE
							' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection
			 			  SET
			 				ovr_price	= ?,
			 				price		= ?
						  WHERE
							pct_id		= ? AND
							col_id		= ?' }"
			FIELDS = "l.productchargetypexcollection:ovr_price, l.productchargetypexcollection:price,
					  l.productchargetypexcollection:pct_id, l.productchargetypexcollection:col_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00039', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXCollection_Delete" PARAMETERS = "pct_id, col_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection WHERE pct_id = ? AND col_id = ?' }"
			FIELDS = "l.pct_id, l.col_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00040', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXCollection_Delete_All_ProductChargeType" PARAMETERS = "pct_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection WHERE pct_id = ?' }"
			 FIELDS	= "l.pct_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00041', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXCollection_Delete_All_Collection" PARAMETERS = "col_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection WHERE col_id = ?' }"
			 FIELDS	= "l.col_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00114', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXCollection_Load" PARAMETERS = "pct_id, col_id, productchargetypexcollection var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypeXCollection"
				QUERY 	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection
							  WHERE
								pct_id	= ? AND
								col_id	= ?' }"
				FIELDS	= "l.pct_id, l.col_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00042', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductChargeTypeXCollection.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXCollection">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PRCG-00043' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductChargeTypeXCollection_Read( l.productchargetypexcollection ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXCollection">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductChargeTypeXProduct
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Read" PARAMETERS = "productchargetypexproduct var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ ProductChargeTypeXProduct.d.pct_id }">
	<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ ProductChargeTypeXProduct.d.product_id }">
	<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"	VALUE = "{ ProductChargeTypeXProduct.d.ovr_price }">
	<MvASSIGN NAME = "l.productchargetypexproduct:price"		VALUE = "{ ProductChargeTypeXProduct.d.price }">
	<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = "{ ProductChargeTypeXProduct.d.automatic }">
	<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = "{ ProductChargeTypeXProduct.d.colcount }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Insert" PARAMETERS = "productchargetypexproduct var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct
						( pct_id, product_id, ovr_price, price, automatic, colcount )
						VALUES
						( ?, ?, ?, ?, ?, ? )' }"
			FIELDS = "l.productchargetypexproduct:pct_id, l.productchargetypexproduct:product_id, l.productchargetypexproduct:ovr_price, l.productchargetypexproduct:price, l.productchargetypexproduct:automatic, l.productchargetypexproduct:colcount">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00044', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Update" PARAMETERS = "productchargetypexproduct var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'UPDATE
							' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct
			 			  SET
			 				ovr_price	= ?,
			 				price		= ?
						  WHERE
							pct_id		= ? AND
							product_id	= ?' }"
			FIELDS = "l.productchargetypexproduct:ovr_price, l.productchargetypexproduct:price,
					  l.productchargetypexproduct:pct_id, l.productchargetypexproduct:product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00045', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Delete" PARAMETERS = "productchargetypexproduct var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Delete_LowLevel( l.productchargetypexproduct:pct_id, l.productchargetypexproduct:product_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.productchargetypexproduct:colcount GT 0 }">
		<MvASSIGN NAME = "l.productchargetypexproductcollectionexclusion"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexproductcollectionexclusion:pct_id"		VALUE = "{ l.productchargetypexproduct:pct_id }">
		<MvASSIGN NAME = "l.productchargetypexproductcollectionexclusion:product_id"	VALUE = "{ l.productchargetypexproduct:product_id }">
		<MvASSIGN NAME = "l.productchargetypexproductcollectionexclusion:colcount"		VALUE = "{ l.productchargetypexproduct:colcount }">

		<MvIF EXPR = "{ NOT ProductChargeTypeXProductCollectionExclusion_Insert( l.productchargetypexproductcollectionexclusion ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Delete_LowLevel" PARAMETERS = "pct_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct WHERE pct_id = ? AND product_id = ?' }"
			FIELDS = "l.pct_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00046', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Delete_All_ProductChargeType" PARAMETERS = "pct_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct WHERE pct_id = ?' }"
			 FIELDS	= "l.pct_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00047', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct WHERE product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00115', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProduct_Load" PARAMETERS = "pct_id, product_id, productchargetypexproduct var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypeXProduct"
				QUERY 	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct
							  WHERE
								pct_id		= ? AND
								product_id	= ?' }"
				FIELDS	= "l.pct_id, l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00048', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductChargeTypeXProduct.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProduct">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PRCG-00049' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductChargeTypeXProduct_Read( l.productchargetypexproduct ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProduct">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductChargeTypeXProductCollectionExclusions
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductChargeTypeXProductCollectionExclusion_Read" PARAMETERS = "productchargetypexproductcollectionexclusion var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productchargetypexproductcollectionexclusion:pct_id"		VALUE = "{ ProductChargeTypeXProductCollectionExclusions.d.pct_id }">
	<MvASSIGN NAME = "l.productchargetypexproductcollectionexclusion:product_id"	VALUE = "{ ProductChargeTypeXProductCollectionExclusions.d.product_id }">
	<MvASSIGN NAME = "l.productchargetypexproductcollectionexclusion:colcount"		VALUE = "{ ProductChargeTypeXProductCollectionExclusions.d.colcount }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProductCollectionExclusion_Insert" PARAMETERS = "productchargetypexproductcollectionexclusion var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">

	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions
						( pct_id, product_id, colcount )
						VALUES
						( ?, ?, ? )' }"
			FIELDS = "l.productchargetypexproductcollectionexclusion:pct_id, l.productchargetypexproductcollectionexclusion:product_id, l.productchargetypexproductcollectionexclusion:colcount">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00050', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProductCollectionExclusion_Delete" PARAMETERS = "pct_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions WHERE pct_id = ? AND product_id = ?' }"
			FIELDS = "l.pct_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00051', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProductCollectionExclusion_Delete_All_ProductChargeType" PARAMETERS = "pct_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions WHERE pct_id = ?' }"
			 FIELDS	= "l.pct_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00116', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProductCollectionExclusion_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions WHERE product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00117', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeTypeXProductCollectionExclusion_Load" PARAMETERS = "pct_id, product_id, productchargetypexproductcollectionexclusion var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductChargeTypeXProductCollectionExclusions"
				QUERY 	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions
							  WHERE
								pct_id		= ? AND
								product_id	= ?' }"
				FIELDS	= "l.pct_id, l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00052', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductChargeTypeXProductCollectionExclusions.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductCollectionExclusions">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PRCG-00053' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductChargeTypeXProductCollectionExclusion_Read( l.productchargetypexproductcollectionexclusion ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeXProductCollectionExclusions">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Charge Type Collection Assign/Unassign Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductChargeType_Add_Collection_Products" PARAMETERS = "productchargetypexcollection var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Increment col_count on existing sNN_ProductChargeTypeXProduct records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
								INNER JOIN ' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp ON clxp.col_id = ? AND clxp.product_id = pctxp.product_id AND clxp.type <> \'X\'
							  SET
								pctxp.colcount	= pctxp.colcount + 1
							  WHERE
								pctxp.pct_id	= ?' }"
				 FIELDS	= "l.productchargetypexcollection:col_id, l.productchargetypexcollection:pct_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00054', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct AS pctxp
							  SET
								colcount		= pctxp.colcount + 1
							  FROM
								' $ g.Store_Table_Prefix $ 'CollectionXProduct AS clxp
							  WHERE
								clxp.col_id		= ?					AND
								clxp.type		<> \'X\'			AND
								clxp.product_id	= pctxp.product_id	AND
								pctxp.pct_id	= ?' }"
				 FIELDS	= "l.productchargetypexcollection:col_id, l.productchargetypexcollection:pct_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00055', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Increment col_count on existing sNN_ProductChargeTypeXProductCollectionExclusions records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions pctxpce
								INNER JOIN ' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp ON clxp.col_id = ? AND clxp.product_id = pctxpce.product_id AND clxp.type <> \'X\'
							  SET
								pctxpce.colcount	= pctxpce.colcount + 1
							  WHERE
								pctxpce.pct_id		= ?' }"
				 FIELDS	= "l.productchargetypexcollection:col_id, l.productchargetypexcollection:pct_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00056', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions AS pctxpce
							  SET
								colcount		= pctxpce.colcount + 1
							  FROM
								' $ g.Store_Table_Prefix $ 'CollectionXProduct AS clxp
							  WHERE
								clxp.col_id		= ?						AND
								clxp.type		<> \'X\'				AND
								clxp.product_id = pctxpce.product_id	AND
								pctxpce.pct_id	= ?' }"
				 FIELDS	= "l.productchargetypexcollection:col_id, l.productchargetypexcollection:pct_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00057', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| New records to be inserted in sNN_ProductChargeTypeXProduct
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Products"
				QUERY	= "{ 'SELECT
								p.*
							  FROM
								' $ g.Store_Table_Prefix $ 'Products p,
								' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp ON pctxp.pct_id = ? AND pctxp.product_id = clxp.product_id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions pctxpce ON pctxpce.product_id = clxp.product_id AND pctxpce.pct_id = ?
							  WHERE
								clxp.col_id			= ?					AND
								clxp.type			<> \'X\'			AND
							  	p.id				= clxp.product_id	AND
								pctxp.product_id	IS NULL				AND
								pctxpce.product_id	IS NULL' }"
				FIELDS	= "l.productchargetypexcollection:pct_id, l.productchargetypexcollection:pct_id, l.productchargetypexcollection:col_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00058', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT Products.d.EOF }">
		<MvASSIGN NAME = "l.product" VALUE = "">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Product_Read( l.product ) }">

		<MvASSIGN NAME = "l.productchargetypexproduct"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ l.productchargetypexcollection:pct_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ l.product:id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"	VALUE = "{ l.productchargetypexcollection:ovr_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:price"		VALUE = "{ l.productchargetypexcollection:price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = 1>
		<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = 1>

		<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Insert( l.productchargetypexproduct ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductChargeType_Remove_Collection_Products" PARAMETERS = "productchargetype var, col_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Decrement col_count on sNN_ProductChargeTypeXProduct records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
								INNER JOIN ' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp ON clxp.col_id = ? AND clxp.product_id = pctxp.product_id AND clxp.type <> \'X\'
							  SET
								pctxp.colcount	= pctxp.colcount - 1
							  WHERE
								pctxp.pct_id	= ?' }"
				 FIELDS	= "l.col_id, l.productchargetype:id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00059', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct AS pctxp
							  SET
								colcount		= pctxp.colcount - 1
							  FROM
								' $ g.Store_Table_Prefix $ 'CollectionXProduct AS clxp
							  WHERE
								clxp.col_id		= ?					AND
								clxp.type		<> \'X\'			AND
								clxp.product_id	= pctxp.product_id	AND
								pctxp.pct_id	= ?' }"
				 FIELDS	= "l.col_id, l.productchargetype:id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00060', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Decrement col_count on existing sNN_ProductChargeTypeXProductCollectionExclusions records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions pctxpce
								INNER JOIN ' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp ON clxp.col_id = ? AND clxp.product_id = pctxpce.product_id AND clxp.type <> \'X\'
							  SET
								pctxpce.colcount	= pctxpce.colcount - 1
							  WHERE
								pctxpce.pct_id		= ?' }"
				 FIELDS	= "l.col_id, l.productchargetype:id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00061', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions AS pctxpce
							  SET
								colcount		= pctxpce.colcount - 1
							  FROM
								' $ g.Store_Table_Prefix $ 'CollectionXProduct AS clxp
							  WHERE
								clxp.col_id		= ?						AND
								clxp.type		<> \'X\'				AND
								clxp.product_id	= pctxpce.product_id	AND
								pctxpce.pct_id	= ?' }"
				 FIELDS	= "l.col_id, l.productchargetype:id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00062', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Delete records in sNN_ProductChargeTypeXProductCollectionExclusions where assignments have reached a colcount of 0
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions WHERE pct_id = ? AND colcount = 0' }"
			 FIELDS	= "l.productchargetype:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00063', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Remove automatic sNN_ProductChargeTypeXProduct assignments that have reached a colcount of 0
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Products"
				QUERY	= "{ 'SELECT
								p.*,
								mdxp.automatic	AS automatic,
								mdxp.colcount	AS colcount
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct mdxp,
								' $ g.Store_Table_Prefix $ 'Products p
							  WHERE
								mdxp.pct_id		= ? AND
								mdxp.automatic	= 1 AND
								mdxp.colcount	= 0 AND
								p.id			= mdxp.product_id' }"
				FIELDS	= "l.productchargetype:id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00064', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT Products.d.EOF }">
		<MvASSIGN NAME = "l.product" VALUE = "">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Product_Read( l.product ) }">

		<MvASSIGN NAME = "l.productchargetypexproduct"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ l.productchargetype:id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ Products.d.id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = "{ Products.d.automatic }">
		<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = "{ Products.d.colcount }">

		<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Delete( l.productchargetypexproduct ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CollectionProductCharges_Add_Product" PARAMETERS = "col_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Increment colcount on existing sNN_ProductChargeTypeXProduct records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
								INNER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl ON pctxcl.col_id = ? AND pctxcl.pct_id = pctxp.pct_id
							  SET
								pctxp.colcount		= pctxp.colcount + 1
							  WHERE
								pctxp.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00065', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct AS pctxp
							  SET
								colcount			= pctxp.colcount + 1
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection AS pctxcl
							  WHERE
								pctxcl.col_id		= ?				AND
								pctxcl.pct_id		= pctxp.pct_id	AND
								pctxp.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00066', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Increment colcount on existing sNN_ProductChargeTypeXProductCollectionExclusions records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions pctxpce
								INNER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl ON pctxcl.col_id = ? AND pctxcl.pct_id = pctxpce.pct_id
							  SET
								pctxpce.colcount	= pctxpce.colcount + 1
							  WHERE
								pctxpce.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00067', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions AS pctxpce
							  SET
								colcount				= pctxpce.colcount + 1
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection AS pctxcl
							  WHERE
								pctxcl.col_id			= ?					AND
								pctxcl.pct_id			= pctxpce.pct_id	AND
								pctxpce.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00068', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| New records to be inserted in sNN_ProductChargeTypeXProduct
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductChargeType"
				QUERY	= "{ 'SELECT
								pct.*,
								pctxcl.ovr_price	AS productchargetypexcollection_ovr_price,
								pctxcl.price		AS productchargetypexcollection_price
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp ON pctxp.pct_id = pctxcl.pct_id AND pctxp.product_id = ?
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions pctxpce ON pctxpce.pct_id = pctxcl.pct_id AND pctxpce.product_id = ?
							  WHERE
								pctxcl.col_id	= ?				AND
								pct.id			= pctxcl.pct_id	AND
								pctxp.product_id IS NULL		AND
								pctxpce.product_id IS NULL' }"
				FIELDS	= "l.product_id, l.product_id, l.col_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00069', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductChargeType.d.EOF }">
		<MvASSIGN NAME = "l.productchargetypexproduct"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ ProductChargeType.d.id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ l.product_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"	VALUE = "{ ProductChargeType.d.productchargetypexcollection_ovr_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:price"		VALUE = "{ ProductChargeType.d.productchargetypexcollection_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = 1>
		<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = 1>

		<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Insert( l.productchargetypexproduct ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeType">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeType" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeType">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CollectionProductCharges_Remove_Product" PARAMETERS = "col_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Decrement colcount on sNN_ProductChargeTypeXProduct records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
								INNER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl ON pctxcl.col_id = ? AND pctxcl.pct_id = pctxp.pct_id
							  SET
								pctxp.colcount		= pctxp.colcount - 1
							  WHERE
								pctxp.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00070', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct AS pctxp
							  SET
								colcount			= pctxp.colcount - 1
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection AS pctxcl
							  WHERE
								pctxcl.col_id		= ?				AND
								pctxcl.pct_id		= pctxp.pct_id	AND
								pctxp.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00071', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Decrement colcount on sNN_ProductChargeTypeXProductCollectionExclusions records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions pctxpce
								INNER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl ON pctxcl.col_id = ? AND pctxcl.pct_id = pctxpce.pct_id
							  SET
								pctxpce.colcount	= pctxpce.colcount - 1
							  WHERE
								pctxpce.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00072', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions AS pctxpce
							  SET
								colcount			= pctxpce.colcount - 1
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection AS pctxcl
							  WHERE
								pctxcl.col_id		= ?					AND
								pctxcl.pct_id		= pctxpce.pct_id	AND
								pctxpce.product_id	= ?' }"
				 FIELDS	= "l.col_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00073', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductCharges_Remove_Unused_Collection_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Discard sNN_ProductChargeTypeXProductCollectionExclusions records that have reached colcount of 0
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProductCollectionExclusions WHERE product_id = ? AND colcount = 0' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00074', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Remove automatic sNN_ProductChargeTypeXProduct assignments that have reached a colcount of 0
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductChargeType"
				QUERY	= "{ 'SELECT
								pct.id				AS pct_id,
								pctxp.pct_id		AS pctxp_pct_id,
								pctxp.product_id	AS pctxp_product_id,
								pctxp.ovr_price		AS pctxp_ovr_price,
								pctxp.price			AS pctxp_price,
								pctxp.automatic		AS pctxp_automatic,
								pctxp.colcount		AS pctxp_colcount
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct
							  WHERE
								pctxp.product_id	= ? AND
								pctxp.automatic		= 1 AND
								pctxp.colcount		= 0 AND
								pct.id				= pctxp.pct_id' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00075', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductChargeType.d.EOF }">
		<MvASSIGN NAME = "l.productchargetypexproduct"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ ProductChargeType.d.pct_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ ProductChargeType.d.pctxp_product_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"	VALUE = "{ ProductChargeType.d.pctxp_ovr_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:price"		VALUE = "{ ProductChargeType.d.pctxp_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = "{ ProductChargeType.d.pctxp_automatic }">
		<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = "{ ProductChargeType.d.pctxp_colcount }">

		<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Delete( l.productchargetypexproduct ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeType">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeType" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeType">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CollectionProductCharges_Rebuild_Add_Products" PARAMETERS = "col_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Increment colcount on existing sNN_ProductChargeTypeXProduct records
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
								INNER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl ON pctxcl.col_id = ? AND pctxcl.pct_id = pctxp.pct_id
								INNER JOIN ' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp ON clxp.col_id = pctxcl.col_id AND clxp.product_id = pctxp.product_id AND clxp.status = \'I\'
							  SET
								pctxp.colcount = pctxp.colcount + 1' }"
				 FIELDS	= "l.col_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00076', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
							  SET
								colcount		= pctxp.colcount + 1
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl,
								' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp
							  WHERE
							  	pctxcl.col_id	= ?					AND
							  	pctxcl.pct_id	= pctxp.pct_id		AND
							  	clxp.col_id		= pctxcl.col_id		AND
							  	clxp.product_id	= pctxp.product_id	AND
							  	clxp.status		= \'I\'' }"
				 FIELDS	= "l.col_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00077', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| New records to be inserted into sNN_ProductChargeTypeXProduct
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductChargeTypeAndProduct"
				QUERY	= "{ 'SELECT
								pctxcl.ovr_price	AS productchargetypexcollection_ovr_price,
								pctxcl.price		AS productchargetypexcollection_price,
								pct.id				AS productchargetype_id,
								pct.type			AS productchargetype_type,
								p.id				AS product_id,
								p.code				AS product_code
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp ON clxp.col_id = pctxcl.col_id AND clxp.status = \'I\'
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp ON pctxp.pct_id = pctxcl.pct_id AND pctxp.product_id = clxp.product_id,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypes pct
								' $ g.Store_Table_Prefix $ 'Products p
							  WHERE
								pctxcl.col_id		= ?		AND
								clxp.product_id	IS NOT NULL	AND
								pctxp.product_id	IS NULL	AND
								p.id				= clxp.product_id' }"
				FIELDS	= "l.col_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00078', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductChargeTypeAndProduct.d.EOF }">
		<MvASSIGN NAME = "l.productchargetypexproduct"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ ProductChargeTypeAndProduct.d.productchargetype_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ ProductChargeTypeAndProduct.d.product_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"	VALUE = "{ ProductChargeTypeAndProduct.d.productchargetypexcollection_ovr_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:price"		VALUE = "{ ProductChargeTypeAndProduct.d.productchargetypexcollection_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = 1>
		<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = 1>

		<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Insert( l.productchargetypexproduct ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeAndProduct">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypeAndProduct" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeAndProduct">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CollectionProductCharges_Rebuild_Remove_Products" PARAMETERS = "col_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
								INNER JOIN ' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl ON pctxcl.col_id = ? AND pctxcl.pct_id = pctxp.pct_id
								INNER JOIN ' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp ON clxp.col_id = pctxcl.col_id AND clxp.product_id = pctxp.product_id AND clxp.status = \'D\'
							  SET
								pctxp.colcount = pctxp.colcount - 1' }"
				 FIELDS	= "l.col_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00079', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp
							  SET
								colcount		= pctxp.colcount - 1
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl,
								' $ g.Store_Table_Prefix $ 'CollectionXProduct clxp
							  WHERE
							  	pctxcl.col_id	= ?					AND
							  	pctxcl.pct_id	= pctxp.pct_id		AND
							  	clxp.col_id		= pctxcl.col_id		AND
							  	clxp.product_id	= pctxp.product_id	AND
							  	clxp.status		= \'D\'' }"
				 FIELDS	= "l.col_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00080', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CollectionProductCharges_Rebuild_Remove_Unused_Products" PARAMETERS = "col_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "ProductChargeTypeAndProduct"
				QUERY	= "{ 'SELECT
								pct.id			AS pct_id,
								p.id			AS product_id,
								pctxp.ovr_price	AS pctxp_ovr_price,
								pctxp.price		AS pctxp_price,
								pctxp.automatic	AS pctxp_automatic,
								pctxp.colcount	AS pctxp_colcount
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXCollection pctxcl,
								' $ g.Store_Table_Prefix $ 'ProductChargeTypeXProduct pctxp,
								' $ g.Store_Table_Prefix $ 'Products p,
								ProductChargeTypes pct
							  WHERE
								pctxcl.col_id	= ?					AND
								pctxp.pct_id	= pctxcl.pct_id		AND
								pctxp.automatic	= 1					AND
								pctxp.colcount	= 0					AND
								p.id			= pctxp.product_id	AND
								pct.id			= pctxp.pct_id' }"
				FIELDS	= "l.col_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PRCG-00081', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductChargeTypeAndProduct.d.EOF }">
		<MvASSIGN NAME = "l.productchargetypexproduct"				VALUE = "">
		<MvASSIGN NAME = "l.productchargetypexproduct:pct_id"		VALUE = "{ ProductChargeTypeAndProduct.d.pct_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:product_id"	VALUE = "{ ProductChargeTypeAndProduct.d.product_id }">
		<MvASSIGN NAME = "l.productchargetypexproduct:ovr_price"	VALUE = "{ ProductChargeTypeAndProduct.d.pctxp_ovr_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:price"		VALUE = "{ ProductChargeTypeAndProduct.d.pctxp_price }">
		<MvASSIGN NAME = "l.productchargetypexproduct:automatic"	VALUE = "{ ProductChargeTypeAndProduct.d.pctxp_automatic }">
		<MvASSIGN NAME = "l.productchargetypexproduct:colcount"		VALUE = "{ ProductChargeTypeAndProduct.d.pctxp_colcount }">

		<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Delete( l.productchargetypexproduct ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeAndProduct">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductChargeTypeAndProduct" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductChargeTypeAndProduct">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductChargeType_Delete_All_Product" PARAMETERS = "product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductChargeType_Load_Code( l.product:code, l.productchargetype ) }">
		<MvIF EXPR = "{ NOT ProductChargeTypeXProduct_Delete_All_Product( l.product:id ) OR
						NOT ProductChargeTypeXProductCollectionExclusion_Delete_All_Product( l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT ProductChargeTypeXCollection_Delete_All_ProductChargeType( l.productchargetype:id )	OR
						NOT ProductChargeTypeXProduct_Delete_All_ProductChargeType( l.productchargetype:id )	OR
						NOT ProductChargeTypeXProductCollectionExclusion_Delete_All_ProductChargeType( l.productchargetype:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT ProductChargeType_Delete_LowLevel( l.productchargetype:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvINCLUDE FILE = "modules/util/productcharges/functions.mv">
<MvINCLUDE FILE = "modules/util/productcharges/basechargetypelist.mv">
<MvINCLUDE FILE = "modules/util/productcharges/chargetypeadddialog.mv">
<MvINCLUDE FILE = "modules/util/productcharges/chargetypelist.mv">
<MvINCLUDE FILE = "modules/util/productcharges/productassigndialog.mv">
<MvINCLUDE FILE = "modules/util/productcharges/productlist.mv">
<MvINCLUDE FILE = "modules/util/productcharges/collectionassigndialog.mv">
<MvINCLUDE FILE = "modules/util/productcharges/collectionlist.mv">
<MvINCLUDE FILE = "modules/util/productcharges/product/chargetypeassigndialog.mv">
<MvINCLUDE FILE = "modules/util/productcharges/product/chargetypelist.mv">

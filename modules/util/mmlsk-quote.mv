<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-UTL-QUOTES-
| Next Error Code: 428
|
</MvCOMMENT>

<MvCOMMENT>
|
| status values:
|	0 = new
|	1 = sent
|	2 = modified (sent but items added or deleted)
|	3 = accepted (turned back into a basket)
|	4 = viewed (quote viewed in email client)
|	5 = purchased (quote has passed through the AUTH action)
|	6 = expired (quote has reached the expiry date)
|	7 = response needed (customer has added a note in runtime)
|	8 = converted to order (admin converted quote to order)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-quote">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Manage Quotes">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Use this module to enable price quotes on products within your store.  If a product has a fixed initial price that fluctuates based on order details (for example, swimming pools), this module can be used to allow your customers to get a more detailed price quote before purchasing a product.">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1102">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.10">
	<MvASSIGN NAME = "l.module:features"	VALUE = "util, clientside, component, data_store, json, json_api, log, system, vis_util, scheduledtask, vis_cust, not_cust, provision_store, shipping, discount, rt_basketitem, cleanup_store, vis_email">
</MvFUNCTION>

<MvCOMMENT>
|
| Store-level Module Data Support Feature (data_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| sNN_Quotes
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'Quotes
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							basket_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							cust_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							order_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 40 ) 		$ ',
							status		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							email		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1000 ) 		$ ',
							fname		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							lname		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							phone		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							zip			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							country		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							comment		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO() 			$ ',
							created		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							terms		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ ',
							expires		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							ship_mod	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							ship_meth	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 		$ ',
							ship_desc	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 		$ ',
							ship_amt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 ) 	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'Quotes_1 ON ' $ g.Store_Table_Prefix $ 'Quotes ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteItems
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'QuoteItems
						  (
							quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							line_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							parent_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 		$ ',
							sku			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							type		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							base_price	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 ) 	$ ',
							price		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 ) 	$ ',
							total		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 ) 	$ ',
							weight		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 ) 	$ ',
							taxable		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() 			$ ',
							upsold		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() 			$ ',
							quantity	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteItems_1 ON ' $ g.Store_Table_Prefix $ 'QuoteItems ( quote_id, line_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteItems_2 ON ' $ g.Store_Table_Prefix $ 'QuoteItems ( line_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteItems_3 ON ' $ g.Store_Table_Prefix $ 'QuoteItems ( quote_id, parent_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00425', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteItemDiscounts
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'QuoteItemDiscounts
						  (
							quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							line_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							pgrp_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							priority	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							display		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							descrip		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
							discount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00383', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts_1 ON ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts ( quote_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00384', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts_2 ON ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts ( line_id, pgrp_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00385', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteOptions
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'QuoteOptions
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							line_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							attr_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							attr_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							attmpat_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							option_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 		$ ',
							opt_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 		$ ',
							base_price	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 ) 	$ ',
							price		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 ) 	$ ',
							weight		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 ) 	$ ',
							data		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 ) 		$ ',
							data_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO() 			$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteOptions_1 ON ' $ g.Store_Table_Prefix $ 'QuoteOptions ( line_id, attr_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteOptions_2 ON ' $ g.Store_Table_Prefix $ 'QuoteOptions ( quote_id, attr_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteOptions_3 ON ' $ g.Store_Table_Prefix $ 'QuoteOptions ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00412', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteOptionDiscounts
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'QuoteOptionDiscounts
						  (
							quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							line_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							lineopt_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							attr_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							attmpat_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							pgrp_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							priority	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							display		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							descrip		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
							discount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 16, 8 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00386', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts_1 ON ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts ( quote_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00387', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts_2 ON ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts ( line_id, attr_id, attmpat_id, pgrp_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00388', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts_3 ON ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts ( line_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00413', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts_4 ON ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts ( lineopt_id, pgrp_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00416', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteXBasket
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'QuoteXBasket
						  (
							quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
							basket_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00114', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME  = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteXBasket_1 ON ' $ g.Store_Table_Prefix $ 'QuoteXBasket ( quote_id, basket_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00115', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteStandardFields
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteStandardFields
						  (
							terms 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO() 	$ ',
							fname 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 )	$ ',
							lname	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 ) $ ',
							phone 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 ) $ ',
							zip		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 ) $ ',
							country	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 ) $ ',
							email 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 ) $ ',
							comment ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 ) $ ',
							basket	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 ) $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00151', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteCustomFields
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteCustomFields
						  (
							id 			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 	$ ',
							default_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 	$ ',
							disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 	$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							type		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )	$ ',
							prompt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ ',
							required	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00152', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME  = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteCustomFields_1 ON ' $ g.Store_Table_Prefix $ 'QuoteCustomFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00153', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteCustomFieldOptions
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							prompt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00154', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME  = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions_1 ON ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00155', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME  = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions_2 ON ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions ( field_id, code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00156', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME  = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions_3 ON ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions ( disp_order )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00157', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteCustomFieldValues
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldValues
						  (
							quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							field_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							option_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							opt_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							data		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							data_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00172', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteConfiguration
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteConfiguration
						  (
							mod_qnty 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() 		$ ',
							on_remove	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 ) 	$ ',
							remindint	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00206', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteXExpiredEmail
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteXExpiredEmail
			 			  (
			 			  	quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
			 			  	email_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
			 			  	sentdate	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
			 			  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00257', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteXExpiredEmail_1 ON ' $ g.Store_Table_Prefix $ 'QuoteXExpiredEmail ( quote_id, email_code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00258', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteXReminderEmail
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteXReminderEmail
		 				  (
		 				  	quote_id 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
			 			  	email_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
		 				  	sentdate	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
		 				  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00259', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteXReminderEmail_1 ON ' $ g.Store_Table_Prefix $ 'QuoteXReminderEmail ( quote_id, email_code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00260', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_QuoteNotes
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'QuoteNotes
			 			  (
			 			  	id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()	$ ',
			 			  	quote_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()	$ ',
			 			  	notetext	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()	$ ',
			 			  	pub			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()	$ ',
			 			  	source		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 )	$ ',
			 			  	source_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()	$ ',
			 			  	dtstamp		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()	$ '
			 			  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00261', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'QuoteNotes_1 ON ' $ g.Store_Table_Prefix $ 'QuoteNotes ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00262', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'QuoteNotes_2 ON ' $ g.Store_Table_Prefix $ 'QuoteNotes ( quote_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00263', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'Quotes', 1000 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'QuoteOptions', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'QuoteItems', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'QuoteCustomFields', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'QuoteCustomFieldOptions', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'QuoteCustomFieldsDisplayOrder', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'QuoteCustomFieldOptionsDisplayOrder', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'QuoteNotes', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Scheduled Tasks
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Send Expired Quote Emails">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "send_expiry_email">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Send Quote Reminder Emails">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 0>
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "send_quote_reminder_emails">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Price Groups
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.group"							VALUE = "">
	<MvASSIGN NAME = "l.group:name"						VALUE = "Quote Exclusion Price Group">
	<MvASSIGN NAME = "l.group:custscope"				VALUE = "C">
	<MvASSIGN NAME = "l.group:discount"					VALUE = 0>
	<MvASSIGN NAME = "l.group:markup"					VALUE = 0>
	<MvASSIGN NAME = "l.group:module_id"				VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.group:display"					VALUE = 0>
	<MvASSIGN NAME = "l.group:priority"					VALUE = 99999>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( l.group:name, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Insert( l.group ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| CSS
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ Generate_CSS_CSSUI( l.css_code ) }">

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Register_Global_CSSResource_LocalFile_WithContent( 'modules', 'quote.css', l.css_code, l.cssresource ) }">
		<MvASSIGN NAME = "l.cssresource:is_global" VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].CSSResource_Update( l.cssresource ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Items
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'request_quote', l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'request_quote', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'quote_info', l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'quote_info', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'quote_content', l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'quote_content', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'quote_notes', l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'quote_notes', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'quotehistory_list', l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'quotehistory_list', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Emails
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.null" VALUE = "{ QuoteEmail_Create_CustomerQuoteTemplate( l.module ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ QuoteEmail_Create_CustomerNotificationTemplate( l.module ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ QuoteEmail_Create_AdminNotificationTemplate( l.module ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ QuoteEmail_Create_ExpiryNotificationTemplate( l.module ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ QuoteEmail_Create_ReminderEmailTemplate( l.module ) }">

	<MvCOMMENT>
	|
	| Configuration / Fields Defaults
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.quote_configuration:mod_qnty" 	VALUE = 0>
	<MvASSIGN NAME = "l.quote_configuration:on_remove" 	VALUE = "normal">
	<MvASSIGN NAME = "l.quote_configuration:remindint" 	VALUE = 10>

	<MvIF EXPR = "{ NOT QuoteConfiguration_Insert( l.quote_configuration ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.standard_fields:terms"			VALUE = "">
	<MvASSIGN NAME = "l.standard_fields:fname" 			VALUE = "R">
	<MvASSIGN NAME = "l.standard_fields:lname" 			VALUE = "R">
	<MvASSIGN NAME = "l.standard_fields:phone" 			VALUE = "R">
	<MvASSIGN NAME = "l.standard_fields:zip" 			VALUE = "O">
	<MvASSIGN NAME = "l.standard_fields:country"		VALUE = "O">
	<MvASSIGN NAME = "l.standard_fields:email" 			VALUE = "R">
	<MvASSIGN NAME = "l.standard_fields:comment"		VALUE = "O">
	<MvASSIGN NAME = "l.standard_fields:basket" 		VALUE = "O">

	<MvIF EXPR = "{ NOT QuoteStandardFields_Insert( l.standard_fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Pages
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.null" VALUE = "{ Create_Page_QUOH( l.module ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ Create_Page_QUOT( l.module ) }">

	<MvCOMMENT>
	|
	| Add a link to the QUOH screen to the account_navigation navigation set
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.null" VALUE = "{ Quote_Append_NavigationItem() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.email"	ARRAY = "l.emails" COUNT = "{ QuoteEmailList_Load( l.emails ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( l.email:tfn_from ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( l.email:tfn_to ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( l.email:tfn_cc ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( l.email:tfn_subj ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedTemplate_Filename( l.email:tfn_mime ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_Page_Code_Admin_UI( l.email:page_code, l.module:id ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_ManagedProperty_Code( 'quote_email', l.email:code ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_Page_Code( 'QUOT' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_Page_Code( 'QUOH' ) }">

	<MvASSIGN NAME = "l.store_folder"		VALUE = "{ padl( g.Store:id, 8, '0' ) }">
	<MvASSIGN NAME = "l.abs_file_path_css"	VALUE = "{ g.imageroot $ 'css/' $ l.store_folder $ '/quote.css' }">
	<MvASSIGN NAME = "l.rel_file_path_css"	VALUE = "{ 'css/' $ l.store_folder $ '/quote.css' }">

	<MvIF EXPR = "{ sexists( l.abs_file_path_css ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ sdelete( l.abs_file_path_css ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_CSSResource_File( l.rel_file_path_css ) }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'Quotes' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteItems' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteOptions' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteXBasket' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteStandardFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteCustomFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldValues' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteConfiguration' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteXExpiredEmail' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteXReminderEmail' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'QuoteNotes' }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'Quotes' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'QuoteItems' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'QuoteOptions' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'QuoteCustomFields' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'QuoteCustomFieldOptions' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'QuoteCustomFieldsDisplayOrder' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'QuoteCustomFieldOptionsDisplayOrder' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'QuoteNotes' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00341', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Store Utilities Feature (util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">							<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">							<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation" PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].LeftNavigation_Dot( l.indent - 1, 'Screen=SUTL&Store_Code=' $ encodeattribute( g.Store:code ) $ '&Module_Code=' $ encodeattribute( l.module:code ), 'Main', 'Manage Quotes' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">							<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Quote_ID" VALUE = "{ int( g.Quote_ID ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Manage Quotes', '', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
	<MvEVAL EXPR = "{ Element_QuoteList_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_Quote_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_QuoteList_JavaScript( l.module ) }">

		<MvEVAL EXPR = "{ Element_Quote_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script language="JavaScript">
		MMScreen_LoadFinished( function()
		{
			var list = new QuoteList();

			<MvIF EXPR = "{ g.Quote_ID }">
				list.Open_Quote( <MvEVAL EXPR = "{ int( g.Quote_ID ) }"> );
			</MvIF>
		} );
	</script>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Manage Quotes', '', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginContent() }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawTabs( 'MNGQ', 'MNGQ:Manage Quotes' ) }">

	<MvEVAL EXPR = "{ Element_QuoteList_HTML( l.module ) }">
	<MvHIDE FIELDS = "g.Module_Code">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons( '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Utility Screen Feature (vis_util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Utility_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "QUOTE_CONFIGURATION:Quote Configuration,QUOTE_CUSTOM_FIELDS:Quote Custom Fields">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Quote_Configuration:mod_qnty" 	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Quote_Configuration:mod_qnty ) }">
	<MvASSIGN NAME = "g.Quote_Configuration:on_remove" 	VALUE = "{ trim( g.Quote_Configuration:on_remove ) }">
	<MvASSIGN NAME = "g.Quote_Configuration:remindint"	VALUE = "{ trim( g.Quote_Configuration:remindint ) }">

	<MvASSIGN NAME = "g.Quote_StandardFields:fname" 	VALUE = "{ trim( g.Quote_StandardFields:fname ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:lname" 	VALUE = "{ trim( g.Quote_StandardFields:lname ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:phone" 	VALUE = "{ trim( g.Quote_StandardFields:phone ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:zip" 		VALUE = "{ trim( g.Quote_StandardFields:zip ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:country"	VALUE = "{ trim( g.Quote_StandardFields:country ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:email" 	VALUE = "{ trim( g.Quote_StandardFields:email ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:comment"	VALUE = "{ trim( g.Quote_StandardFields:comment ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:basket" 	VALUE = "{ trim( g.Quote_StandardFields:basket ) }">
	<MvASSIGN NAME = "g.Quote_StandardFields:terms" 	VALUE = "{ trim( g.Quote_StandardFields:terms ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( g.Quote_Configuration:remindint ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'QUOTE_CONFIGURATION', 'Quote_Configuration:remindint', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Value_In_List( g.Quote_Configuration:on_remove, 'normal,disallow,remove_all' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'QUOTE_CONFIGURATION', '', 'Please select an Item Removal Action' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( g.Quote_StandardFields, l.members ) }">
		<MvIF EXPR = "{ tolower( l.member ) EQ 'terms' }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Value_In_List( miva_variable_value( 'g.Quote_StandardFields:' $ l.member ), 'H,R,O' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'QUOTE_CONFIGURATION', '', 'All standard fields must either be hidden, required, or optional.' ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteStandardFields_Update( g.Quote_StandardFields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteConfiguration_Update( g.Quote_Configuration ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab EQ 'QUOTE_CONFIGURATION' }">
		<style type="text/css">
			.quote_standard_fields_table_container
			{
				width: 475px;
			}

			.quote_standard_fields_label
			{
				position: relative;
				display: block;
			}
		</style>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'QUOTE_CUSTOM_FIELDS' }">
		<MvEVAL EXPR = "{ Element_Quote_CustomFieldList_CSS( l.module ) }">

		<MvIF EXPR = "{ Element_Quote_JavaScript_Combined_Begin( l.module ) }">
			<MvEVAL EXPR = "{ Element_Quote_CustomFieldList_JavaScript( l.module ) }">

			<MvEVAL EXPR = "{ Element_Quote_JavaScript_Combined_End( l.module ) }">
		</MvIF>

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Quote_CustomFieldList(); } );
		</script>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvIF EXPR = "{ NOT QuoteConfiguration_Load( g.Quote_Configuration ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteStandardFields_Load( g.Quote_StandardFields ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'QUOTE_CUSTOM_FIELDS' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
		<MvEVAL EXPR = "{ Element_Quote_CustomFieldList_HTML( l.module ) }">
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'QUOTE_CONFIGURATION' }">
		<MvASSIGN NAME = "l.fields" MEMBER = "name" 		INDEX = "1" VALUE = "Quote_StandardFields:fname">
		<MvASSIGN NAME = "l.fields" MEMBER = "description" 	INDEX = "1" VALUE = "First Name">
		<MvASSIGN NAME = "l.fields" MEMBER = "name"			INDEX = "2" VALUE = "Quote_StandardFields:lname">
		<MvASSIGN NAME = "l.fields" MEMBER = "description"	INDEX = "2" VALUE = "Last Name">
		<MvASSIGN NAME = "l.fields" MEMBER = "name"			INDEX = "3" VALUE = "Quote_StandardFields:email">
		<MvASSIGN NAME = "l.fields" MEMBER = "description"	INDEX = "3" VALUE = "Email Address">
		<MvASSIGN NAME = "l.fields" MEMBER = "name"			INDEX = "4" VALUE = "Quote_StandardFields:phone">
		<MvASSIGN NAME = "l.fields" MEMBER = "description"	INDEX = "4" VALUE = "Phone Number">
		<MvASSIGN NAME = "l.fields" MEMBER = "name"			INDEX = "5" VALUE = "Quote_StandardFields:zip">
		<MvASSIGN NAME = "l.fields" MEMBER = "description"	INDEX = "5" VALUE = "Zip/Postal Code">
		<MvASSIGN NAME = "l.fields" MEMBER = "name"			INDEX = "6" VALUE = "Quote_StandardFields:country">
		<MvASSIGN NAME = "l.fields" MEMBER = "description"	INDEX = "6" VALUE = "Country">
		<MvASSIGN NAME = "l.fields" MEMBER = "name"			INDEX = "7" VALUE = "Quote_StandardFields:comment">
		<MvASSIGN NAME = "l.fields" MEMBER = "description"	INDEX = "7" VALUE = "Comment">
		<MvASSIGN NAME = "l.fields" MEMBER = "name"			INDEX = "8" VALUE = "Quote_StandardFields:basket">
		<MvASSIGN NAME = "l.fields" MEMBER = "description"	INDEX = "8" VALUE = "Basket Contents">

		<table width="100%">
			<tr>
				<td valign="top" nowrap><b>Send Quote Reminder</b></td>
				<td width="100%">Every <input type="text" name="Quote_Configuration:remindint" size="5" value="{ encodeentities( g.Quote_Configuration:remindint ) }"> day(s) until quote expires</td>
			</tr>
			<tr>
				<td valign="top" nowrap><b>Accepted Quote Basket Items:</b></td>
				<td width="100%">
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Quote_Configuration:mod_qnty', 1, 				g.Quote_Configuration:mod_qnty, 	'Allow customers to update quantity' ) }"><br />
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Quote_Configuration:mod_qnty', 0, 				g.Quote_Configuration:mod_qnty,		'Do not allow customers to update quantity' ) }"><br /><br />
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Quote_Configuration:on_remove', 'normal', 		g.Quote_Configuration:on_remove,	'Allow customers to remove quote items' ) }"><br />
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Quote_Configuration:on_remove', 'disallow', 	g.Quote_Configuration:on_remove,	'Do not allow customers to remove quote items' ) }"><br />
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Quote_Configuration:on_remove', 'remove_all', 	g.Quote_Configuration:on_remove,	'Remove all quote items when a customer removes any item' ) }">
				</td>
			</tr>
			<tr>
				<td valign="top" nowrap><b>Standard Fields:</b></td>
				<td width="100%">
					<div class="mm9_table_container quote_standard_fields_table_container">
						<table class="mm9_table" width="100%">
							<thead>
								<tr>
									<td align="left" valign="middle" width="100%">Field</td>
									<td align="center" valign="middle" nowrap>Hidden</td>
									<td align="center" valign="middle" nowrap>Required</td>
									<td align="center" valign="middle" nowrap>Optional</td>
								</tr>
							</thead>
							<tbody>
								<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields">
									<MvASSIGN NAME = "l.value" VALUE = "{ miva_variable_value( 'g.' $ l.field:name ) }">

									<tr>
										<td align="left" valign="middle" class="{ l.class }" width="100%">
											<MvEVAL EXPR = "{ encodeentities( l.field:description ) }">
										</td>
										<td align="center" valign="middle" nowrap>
											<label class="quote_standard_fields_label">
												<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.field:name, 'H', l.value, '' ) }">
											</label>
										</td>
										<td align="center" valign="middle" nowrap>
											<label class="quote_standard_fields_label">
												<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.field:name, 'R', l.value, '' ) }">
											</label>
										</td>
										<td align="center" valign="middle" nowrap>
											<label class="quote_standard_fields_label">
												<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.field:name, 'O', l.value, '' ) }">
											</label>
										</td>
									</tr>
								</MvFOREACH>
							</tbody>
						</table>
					</div>
				</td>
			</tr>
			<tr>
				<td valign="top" nowrap><b>Default Quote Terms:</b></td>
				<td width="100%"><MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea( 'Quote_StandardFields:terms', g.Quote_StandardFields:terms, 20, 58 ) }"></td>
			</tr>
		</table>
	<MvELSE>
		<MvHIDE FIELDS = "g.Quote_StandardFields, g.Quote_Configuration">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Email Feature (vis_email)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Email_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "QUOTE_EMAIL:Quote Emails">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Email_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'QUOTE_EMAIL' }">
		<MvEVAL EXPR = "{ Element_Quote_EmailList_CSS( l.module ) }">

		<MvIF EXPR = "{ Element_Quote_JavaScript_Combined_Begin( l.module ) }">
			<MvEVAL EXPR = "{ Element_Quote_EmailList_JavaScript( l.module ) }">

			<MvEVAL EXPR = "{ Element_Quote_JavaScript_Combined_End( l.module ) }">
		</MvIF>

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Quote_EmailList(); } );
		</script>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Email_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ 'QUOTE_EMAIL' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
		<MvEVAL EXPR = "{ Element_Quote_EmailList_HTML( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Email_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Email_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module Shopping Interface Activity Logging Feature (log)
|
</MvCOMMENT>

<MvFUNCTION NAME = "LogModule_Action" PARAMETERS = "module var, action" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.action EQ 'AUTH' }">
		<MvFOREACH ITERATOR = "l.quote" ARRAY = "l.quotes" COUNT = "{ QuoteList_Load_Basket( g.Basket:basket_id, l.quotes ) }">
			<MvASSIGN NAME = "l.quote:status" 	VALUE = 5>
			<MvASSIGN NAME = "l.quote:order_id" VALUE = "{ g.Basket:order_id }">

			<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ NOT QuoteXBasket_Delete_Basket( g.Basket:basket_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_Screen" PARAMETERS = "module var, screen" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LogModule_UIException" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Component Feature (component)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:advanced"				VALUE = 0>
	<MvASSIGN NAME = "l.settings:fields_custom"			VALUE = 1>
	<MvASSIGN NAME = "l.settings:fields_custom_order"	VALUE = 1>
	<MvASSIGN NAME = "l.settings:imagetypes"			VALUE = 1>
	<MvASSIGN NAME = "l.settings:b_height"				VALUE = 75>
	<MvASSIGN NAME = "l.settings:b_width"				VALUE = 75>
	<MvASSIGN NAME = "l.settings:constrain"				VALUE = "B">
	<MvASSIGN NAME = "l.settings:quote_id"				VALUE = 1>
	<MvASSIGN NAME = "l.settings:order_id"				VALUE = 1>
	<MvASSIGN NAME = "l.settings:code"					VALUE = 1>
	<MvASSIGN NAME = "l.settings:status"				VALUE = 1>
	<MvASSIGN NAME = "l.settings:created"				VALUE = 1>
	<MvASSIGN NAME = "l.settings:expires"				VALUE = 1>
	<MvASSIGN NAME = "l.settings:paginate"				VALUE = 1>
	<MvASSIGN NAME = "l.settings:per_page"				VALUE = 10>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.store_folder"		VALUE = "{ padl( g.Store:id, 8, '0' ) }">
	<MvASSIGN NAME = "l.rel_file_path_css"	VALUE = "{ 'css/' $ l.store_folder $ '/quote.css' }">

	<MvFOREACH ITERATOR = "l.cssresource" ARRAY = "l.cssresources" COUNT = "{ [ g.Module_Feature_TUI_DB ].CSSResourceList_Load_File( l.rel_file_path_css, l.cssresources ) }">
		<MvIF EXPR = "{ NOT l.cssresource:is_global }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Load( l.cssresource:id, l.page:id, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Insert( l.cssresource:id, l.page:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00273', 'CSS Resource \'' $ l.cssresource:code $ '\' assigned to page \'' $ l.page:code $ '\'' ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.item EQ 'request_quote' }">
		<MvIF EXPR = "{ g.Store:ui_mod:code EQ 'cssui' AND
						g.Store:framework EQ 'shadows' }">
			<MvCAPTURE VARIABLE = "l.request_quote" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/shadows-request-quote.mvt"></MvCAPTURE>
		<MvELSE>
			<MvCAPTURE VARIABLE = "l.request_quote" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/cssui-request-quote.mvt"></MvCAPTURE>
		</MvIF>

		<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-miva-request-quote.mvc' }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.request_quote, l.settings, l.settings:template_filename ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'countries' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.item EQ 'quote_info' }">
		<MvIF EXPR = "{ g.Store:ui_mod:code EQ 'cssui' AND
						g.Store:framework EQ 'shadows' }">
			<MvCAPTURE VARIABLE = "l.quote_info" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/shadows-quote-info.mvt"></MvCAPTURE>
		<MvELSE>
			<MvEVAL EXPR = "{ QuoteInfo_ComponentModule_Generate_Code( l.settings, l.quote_info ) }">
		</MvIF>

		<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-miva-quote-info.mvc' }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.quote_info, l.settings, l.settings:template_filename ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.item EQ 'quote_content' }">
		<MvIF EXPR = "{ g.Store:ui_mod:code EQ 'cssui' AND
						g.Store:framework EQ 'shadows' }">
			<MvASSIGN NAME = "l.settings:advanced"		VALUE = 1>

			<MvASSIGNARRAY NAME = "l.settings"			VALUE = "Main">
				<MvMEMBER NAME = "imagetypes">
				<MvDIMENSION INDEX = 1>
			</MvASSIGNARRAY>

			<MvCAPTURE VARIABLE = "l.quote_content" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/shadows-quote-content.mvt"></MvCAPTURE>
		<MvELSE>
			<MvEVAL EXPR = "{ QuoteContent_ComponentModule_Generate_Code( l.settings, l.quote_content ) }">
		</MvIF>

		<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-miva-quote-content.mvc' }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.quote_content, l.settings, l.settings:template_filename ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.item EQ 'quote_notes' }">
		<MvIF EXPR = "{ g.Store:ui_mod:code EQ 'cssui' AND
						g.Store:framework EQ 'shadows' }">
			<MvCAPTURE VARIABLE = "l.quote_notes" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/shadows-quote-notes.mvt"></MvCAPTURE>
		<MvELSE>
			<MvEVAL EXPR = "{ QuoteNotes_ComponentModule_Generate_Code( l.settings, l.quote_notes ) }">
		</MvIF>

		<MvASSIGN NAME = "l.settings:template_filename" VALUE = "{ tolower( l.page:code ) $ '-miva-quote-notes.mvc' }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.quote_notes, l.settings, l.settings:template_filename ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.item EQ 'quotehistory_list' }">
		<MvIF EXPR = "{ g.Store:ui_mod:code EQ 'cssui' AND
						g.Store:framework EQ 'shadows' }">
			<MvASSIGN NAME = "l.settings:advanced"		VALUE = 1>

			<MvCAPTURE VARIABLE = "l.quote_history" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/shadows-quote-history-list.mvt"></MvCAPTURE>
		<MvELSE>
			<MvEVAL EXPR = "{ QuoteHistory_ComponentModule_Generate_Code( l.settings, l.quote_history ) }">
		</MvIF>

		<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-miva-quote-history.mvc' }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.quote_history, l.settings, l.settings:template_filename ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.store_folder"		VALUE = "{ padl( g.Store:id, 8, '0' ) }">
	<MvASSIGN NAME = "l.rel_file_path_css"	VALUE = "{ 'css/' $ l.store_folder $ '/quote.css' }">

	<MvFOREACH ITERATOR = "l.cssresource" ARRAY = "l.cssresources" COUNT = "{ [ g.Module_Feature_TUI_DB ].CSSResourceList_Load_File( l.rel_file_path_css, l.cssresources ) }">
		<MvIF EXPR = "{ NOT l.cssresource:is_global }">
			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Load( l.cssresource:id, l.page:id, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].CSSResourceXPage_Delete( l.cssresource:id, l.page:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00274', 'CSS Resource \'' $ l.cssresource:code $ '\' unassigned from page \'' $ l.page:code $ '\'' ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.item EQ 'request_quote'	OR
					l.item EQ 'quote_info'		OR
					l.item EQ 'quote_content'	OR
					l.item EQ 'quote_notes'		OR
					l.item EQ 'quotehistory_list' }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.settings:template_filename ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Branch_Head( l.source_branch:id, l.source_settings:template_filename, l.source_templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Branch_Filename( l.dest_branch:id, l.dest_settings:template_filename, l.dest_managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.dest_settings"						VALUE = "{ l.source_settings }">
	<MvASSIGN NAME = "l.dest_settings:template_filename"	VALUE = "{ l.dest_managedtemplate:version:settings:template_filename }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.dest_managedtemplate, '', l.source_templateversion:source, l.dest_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.source_branch:id EQ l.dest_branch:id }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00406', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' on branch \'' $ l.dest_branch:name $ '\'' ) }">
	<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00419', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' from branch \'' $ l.source_branch:name $ '\' to branch \'' $ l.dest_branch:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Basket:cust_id EQ 0 }">
		<MvASSIGN NAME = "l.settings:active_quote" VALUE = 0>
	<MvELSE>
		<MvOPENVIEW NAME	= "Merchant"
					VIEW 	= "Quotes"
					QUERY 	= "{ 'SELECT COUNT( * ) AS quote_count FROM ' $ g.Store_Table_Prefix $ 'Quotes WHERE cust_id = ? AND status <> 5 AND status <> 6' }"
					FIELDS	= "g.Basket:cust_id">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00295', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.settings:active_quote" VALUE = "{ Quotes.d.quote_count GT 0 }">

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	</MvIF>

	<MvIF EXPR = "{ l.item EQ 'basket' }">					<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Initialize_Basket( l.module, l.item, l.all_settings, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quotehistory_list' }">	<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Initialize_QuoteHistory( l.module, l.item, l.all_settings, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_info' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Initialize_QuoteInfo( l.module, l.item, l.all_settings, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_content' }">		<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Initialize_QuoteContent( l.module, l.item, l.all_settings, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_notes' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Initialize_QuoteNotes( l.module, l.item, l.all_settings, l.settings ) }">
	<MvELSE>												<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Initialize_Default( l.module, l.item, l.all_settings, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize_Basket" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( g.Basket:basket_id, l.module:id, 'quote_items', l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.settings:items">
		<MvIF EXPR = "{ miva_array_search( l.basketinfo:info:items, 1, l.quoteitem, 'l.quoteitem:line_id EQ l.item:line_id' ) }">
			<MvASSIGN NAME = "l.item:quote_id"	VALUE = "{ l.quoteitem:quote_id }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.settings:groups">
		<MvIF EXPR = "{ miva_array_search( l.basketinfo:info:items, 1, l.quoteitem, 'l.quoteitem:line_id EQ l.group:line_id' ) }">
			<MvASSIGN NAME = "l.group:quote_id"	VALUE = "{ l.quoteitem:quote_id }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize_QuoteHistory" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.SortBy"						VALUE = "{ trim( g.SortBy ) }">
	<MvASSIGN NAME = "g.Offset"						VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.NextOffset"					VALUE = "{ int( g.NextOffset ) }">
	<MvASSIGN NAME = "g.PrevOffset"					VALUE = "{ int( g.PrevOffset ) }">
	<MvASSIGN NAME = "g.QuoteStatus_PageNumber"		VALUE = "{ int( g.QuoteStatus_PageNumber ) }">

	<MvIF EXPR = "{ NOT g.Basket:cust_id OR NOT g.Customer_Session_Verified }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'quote_invalid_session' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.settings:per_page NE 0 }">
		<MvIF EXPR = "{ g.QuoteStatus_PageNumber NE ( g.NextOffset / l.settings:per_page ) }">
			<MvASSIGN NAME = "g.Offset" 			VALUE = "{ ( g.QuoteStatus_PageNumber * l.settings:per_page ) - l.settings:per_page }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.total_quotes"				VALUE = "{ Quote_Count_Customer( g.Basket:cust_id ) }">
	<MvASSIGN NAME = "l.quote_count"				VALUE = "{ QuoteList_Load_Customer_Offset( g.Basket:cust_id, g.SortBy, g.Offset, l.settings:per_page, g.NextOffset, l.all_settings:quotes ) }">

	<MvASSIGN NAME = "l.all_settings:quotes_found"	VALUE = "{ l.total_quotes NE 0 }">

	<MvIF EXPR = "{ l.settings:per_page NE 0 }">
		<MvASSIGN NAME = "l.all_settings:quote_info:max_pages" VALUE = "{ ceil( l.total_orders / l.settings:per_page ) }">

		<MvIF EXPR = "{ g.NextOffset GT 0 }">	<MvASSIGN NAME = "g.QuoteStatus_PageNumber" VALUE = "{ g.NextOffset / l.settings:per_page }">
		<MvELSE>								<MvASSIGN NAME = "g.QuoteStatus_PageNumber" VALUE = "{ l.all_settings:quote_info:max_pages }">
		</MvIF>

		<MvASSIGN NAME = "g.PrevOffset"				VALUE = "{ g.Offset - l.settings:per_page }">

		<MvIF EXPR = "{ g.PrevOffset LT 0 }">
			<MvASSIGN NAME = "g.PrevOffset" 		VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.quote" ARRAY = "l.all_settings:quotes" COUNT = "{ l.quote_count }">
		<MvIF EXPR = "{ NOT CommonComponentFields_Initialize_Quote( l.quote ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize_QuoteInfo" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.QuoteCode" 								VALUE = "{ trim( g.QuoteCode ) }">

	<MvIF EXPR = "{ NOT Quote_Load_Code( g.QuoteCode, l.quote ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'quote_invalid_quote' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings:quote:is_expired"				VALUE = "{ s.dyn_time_t GT l.quote:expires AND l.quote:expires }">

	<MvIF EXPR = "{ l.quote:cust_id }">
		<MvIF EXPR = "{ NOT g.Basket:cust_id OR NOT g.Customer_Session_Verified }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'quote_invalid_session' ) }">
		<MvELSEIF EXPR = "{ g.Basket:cust_id NE l.quote:cust_id }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'quote_invalid_customer' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.quote_customfield_count"				VALUE = 0>

	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.settings:info_fields_custom">
		<MvASSIGN NAME = "l.null" VALUE = "{ QuoteCustomFieldValue_Load_Quote_And_Field( l.quote:id, l.customfield:code, l.settings:quote:custom_fields[ ++l.quote_customfield_count ] ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.settings:quote:id"						VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.settings:quote:code"					VALUE = "{ l.quote:code }">
	<MvASSIGN NAME = "l.settings:quote:created"					VALUE = "{ l.quote:created }">
	<MvASSIGN NAME = "l.settings:quote:formatted_created"		VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( l.quote:created, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( l.quote:created, s.miva_language ) }">
	<MvASSIGN NAME = "l.settings:quote:expires"					VALUE = "{ l.quote:expires }">

	<MvIF EXPR = "{ l.quote:expires LE 0 }">
		<MvASSIGN NAME = "l.settings:quote:formatted_expires"	VALUE = "No expiry">
	<MvELSEIF EXPR = "{ l.settings:quote:expires LT s.dyn_time_t }">
		<MvASSIGN NAME = "l.settings:quote:formatted_expires"	VALUE = "{ 'Expired as of ' $ [ g.Module_Library_Utilities ].Format_Date( l.quote:expires, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( l.quote:expires, s.miva_language ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.settings:quote:formatted_expires"	VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( l.quote:expires, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( l.quote:expires, s.miva_language ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings:quote:email"					VALUE = "{ l.quote:email }">
	<MvASSIGN NAME = "l.settings:quote:fname"					VALUE = "{ l.quote:fname }">
	<MvASSIGN NAME = "l.settings:quote:lname"					VALUE = "{ l.quote:lname }">
	<MvASSIGN NAME = "l.settings:quote:phone"					VALUE = "{ l.quote:phone }">
	<MvASSIGN NAME = "l.settings:quote:zip"						VALUE = "{ l.quote:zip }">
	<MvASSIGN NAME = "l.settings:quote:country"					VALUE = "{ l.quote:country }">
	<MvASSIGN NAME = "l.settings:quote:comment"					VALUE = "{ l.quote:comment }">
	<MvASSIGN NAME = "l.settings:quote:ship_mod"				VALUE = "{ l.quote:ship_mod }">
	<MvASSIGN NAME = "l.settings:quote:ship_meth"				VALUE = "{ l.quote:ship_meth }">
	<MvASSIGN NAME = "l.settings:quote:ship_amt"				VALUE = "{ l.quote:ship_amt }">
	<MvASSIGN NAME = "l.settings:quote:formatted_ship_amt"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quote:ship_amt ) }">

	<MvIF EXPR = "{ NOT ISNULL l.quote:ship_desc }">
		<MvASSIGN NAME = "l.settings:quote:ship_desc"			VALUE = "{ l.quote:ship_desc }">
	<MvELSE>
		<MvASSIGN NAME = "l.settings:quote:ship_desc"			VALUE = "{ Quote_ShippingModule_Description( l.quote ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize_QuoteContent" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'quote_info' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.null"									VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'product' ) }">
	<MvREFERENCE NAME = "l.quote_items"							VARIABLE = "l.settings:quote_items">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_UT ].CommonComponentFields_Initialize_Product_CustomField_Lookup( l.all_settings, l.settings:fields_custom ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.settings:total" 						VALUE = "{ l.all_settings:quote_info:quote:ship_amt }">
	<MvASSIGN NAME = "l.settings:rowspan"						VALUE = 1>

	<MvFOREACH ITERATOR = "l.quote_item" ARRAY = "l.quote_items" COUNT = "{ QuoteItemList_Load_Quote( l.all_settings:quote_info:quote:id, l.quote_items ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_UT ].CommonComponentFields_Initialize_Product_CustomFields( l.quote_item:product_id, l.quote_item, l.all_settings, l.settings:fields_custom ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" 								VALUE = "{ [ g.Module_Feature_TUI_UT ].CommonComponentFields_Initialize_Product_ImageTypes( l.quote_item:product_id, 0, l.quote_item, l.all_settings, l.settings:imagetypes, l.settings:constrain, l.settings:b_width, l.settings:b_height ) }">

		<MvIF EXPR = "{ NOT QuoteComponentInitialize_QuoteItem( l.quote_item ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.quote_option" ARRAY = "l.quote_item:options" COUNT = "{ l.quote_item:option_count }">
			<MvASSIGN NAME = "l.settings:rowspan"				VALUE = "{ l.settings:rowspan + 1 }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.settings:total"						VALUE = "{ l.settings:total + l.quote_item:total }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.settings:formatted_total"				VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.settings:total ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize_QuoteNotes" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item( l.all_settings, 'quote_info' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.note" ARRAY = "l.settings:quote_notes" COUNT = "{ QuoteNoteList_Load_Quote_Public( l.all_settings:quote_info:quote:id, l.settings:quote_notes ) }">
		<MvASSIGN NAME = "l.note:formatted_dtstamp"		VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( l.note:dtstamp, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( l.note:dtstamp, s.miva_language ) }">

		<MvIF EXPR = "{ l.note:source EQ 'C' }">
			<MvASSIGN NAME = "l.note:formatted_source"	VALUE = "Customer">
		<MvELSEIF EXPR = "{ l.note:source EQ 'A' }">
			<MvASSIGN NAME = "l.note:formatted_source"	VALUE = "Administrator">
		<MvELSE>
			<MvASSIGN NAME = "l.note:formatted_source"	VALUE = "{ l.note:source }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize_Default" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.settings:standard_fields" 	VARIABLE = "l.standard_fields">
	<MvREFERENCE NAME = "l.settings:custom_fields"		VARIABLE = "l.custom_fields">

	<MvIF EXPR = "{ NOT QuoteStandardFields_Load( l.standard_fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT g.Error_Message_Count }">
		<MvIF EXPR = "{ ISNULL g.RequestQuote_Country }">
			<MvASSIGN NAME = "g.RequestQuote_Country" VALUE = "{ g.Store:country }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.field_pos" 		VALUE = 1>
	<MvASSIGN NAME = "l.field_count" 	VALUE = "{ QuoteCustomFieldList_Load( l.loaded_fields ) }">

	<MvIF EXPR = "{ NOT l.field_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvWHILE EXPR = "{ l.field_pos LE l.field_count }">
		<MvASSIGN NAME = "l.options" 														VALUE = "">
		<MvASSIGN NAME = "l.option_count" 													VALUE = "{ QuoteCustomFieldOptionList_Load_Field( l.loaded_fields[ l.field_pos ]:id, l.options ) }">
		<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.field_pos }" 						VALUE = "{ l.loaded_fields[ l.field_pos ] }">
		<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.field_pos }" MEMBER = "options" 	VALUE = "{ l.options }">
		<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.field_pos }" MEMBER = "index" 		VALUE = "{ l.field_pos }">

		<MvIF EXPR = "{ NOT ISNULL g.RequestQuote_CustomFields[ l.field_pos ]:value }">
			<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.field_pos }" MEMBER = "value" 	VALUE = "{ g.RequestQuote_CustomFields[ l.field_pos ]:value }">
		</MvIF>

		<MvASSIGN NAME = "l.field_pos" VALUE = "{ l.field_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item NE 'request_quote'	AND
					l.item NE 'quote_info'		AND
					l.item NE 'quote_content'	AND
					l.item NE 'quote_notes'		AND
					l.item NE 'quotehistory_list' }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( l.settings:template_filename, l.all_settings ) }">

	<MvIF EXPR = "{ l.item EQ 'quote_info' }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quote_viewed_runtime', 1 ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'request_quote' }">			<MvFUNCTIONRETURN VALUE = "{ l.item $ ':Request Quote' }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_info' }">			<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Quote Information' }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_notes' }">			<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Quote Notes' }">
	<MvELSEIF EXPR = "{ l.item EQ 'quotehistory_list' }">	<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Quote History List' }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_content' }">
		<MvASSIGN NAME = "l.tabs"		VALUE = "{ 'GT_PAGE/' $ l.item $ ':Quote Content' }">

		<MvIF EXPR = "{ miva_array_elements( l.settings:imagetypes ) GT 0 }">
			<MvASSIGN NAME = "l.tabs"	VALUE = "{ l.tabs $ ',GT_PAGE/' $ l.item $ '_dimensions:Quote Content Image Dimensions' }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'request_quote' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Validate_QuoteRequest( l.module, l.item, l.field_prefix, l.fields ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_info' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Validate_QuoteInfo( l.module, l.item, l.field_prefix, l.fields ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_content' }">		<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Validate_QuoteContent( l.module, l.item, l.field_prefix, l.fields ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_notes' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Validate_QuoteNotes( l.module, l.item, l.field_prefix, l.fields ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quotehistory_list' }">	<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Validate_QuoteHistory( l.module, l.item, l.field_prefix, l.fields ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate_QuoteRequest" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate_QuoteInfo" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate_QuoteContent" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.fields:constrain"		VALUE = "{ trim( l.fields:constrain ) }">
	<MvASSIGN NAME = "l.fields:b_width"			VALUE = "{ trim( l.fields:b_width ) }">
	<MvASSIGN NAME = "l.fields:b_height"		VALUE = "{ trim( l.fields:b_height ) }">
	<MvASSIGN NAME = "l.fields:advanced"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:advanced ) }">

	<MvIF EXPR = "{ l.fields:advanced }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.fields:imagetypes">
			<MvASSIGN NAME = "l.imagetype"		VALUE = "{ trim( l.imagetype ) }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Value_In_List( l.fields:constrain, 'N,B' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item $ '_dimensions', l.field_prefix $ 'constrain', 'Please select a constrain type: ' $ l.fields:constrain ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.fields:b_width ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item $ '_dimensions', l.field_prefix $ 'b_width', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.fields:b_height ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item $ '_dimensions', l.field_prefix $ 'b_height', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate_QuoteNotes" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate_QuoteHistory" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.fields:advanced"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:advanced ) }">
	<MvASSIGN NAME = "l.fields:quote_id"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:quote_id ) }">
	<MvASSIGN NAME = "l.fields:order_id"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:order_id ) }">
	<MvASSIGN NAME = "l.fields:code"	 	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:code ) }">
	<MvASSIGN NAME = "l.fields:status"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:status ) }">
	<MvASSIGN NAME = "l.fields:created"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:created ) }">
	<MvASSIGN NAME = "l.fields:expires"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:expires ) }">
	<MvASSIGN NAME = "l.fields:paginate"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:paginate ) }">
	<MvASSIGN NAME = "l.fields:per_page"	VALUE = "{ trim( l.fields:per_page ) }">

	<MvIF EXPR = "{ l.fields:paginate }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.fields:per_page ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'per_page', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item NE 'request_quote'	AND
					l.item NE 'quote_info'		AND
					l.item NE 'quote_content'	AND
					l.item NE 'quote_notes'		AND
					l.item NE 'quotehistory_list' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.settings:advanced" VALUE = "{ l.fields:advanced }">

	<MvIF EXPR = "{ l.item EQ 'quote_content' }">
		<MvIF EXPR = "{ NOT ComponentModule_Update_QuoteContent( l.module, l.item, l.field_prefix, l.fields, l.settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.item EQ 'quote_info' }">
		<MvIF EXPR = "{ NOT ComponentModule_Update_QuoteInfo( l.module, l.item, l.field_prefix, l.fields, l.settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.item EQ 'quotehistory_list' }">
		<MvIF EXPR = "{ NOT ComponentModule_Update_QuoteHistory( l.module, l.item, l.field_prefix, l.fields, l.settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.fields:template_code, l.settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_QuoteContent" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.selectedfield_count"			VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( l.fields:fields_custom, l.settings:fields_custom ) }">
	<MvASSIGN NAME = "l.selectedinfo_field_count"		VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( l.fields:info_fields_custom, l.settings:info_fields_custom ) }">

	<MvASSIGN NAME = "l.settings:constrain"				VALUE = "{ l.fields:constrain }">
	<MvASSIGN NAME = "l.settings:b_width"				VALUE = "{ l.fields:b_width }">
	<MvASSIGN NAME = "l.settings:b_height"				VALUE = "{ l.fields:b_height }">

	<MvIF EXPR = "{ l.fields:advanced }">
		<MvASSIGN NAME = "l.imagetype_count"			VALUE = "{ [ g.Module_Library_Utilities ].ImageTypeSelect_Selected( l.fields:imagetypes, l.settings:imagetypes ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.settings:imagetypes"		VALUE = "">
		<MvIF EXPR = "{ NOT ISNULL l.fields:image }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].ImageType_Load_Code( l.fields:image, l.imagetype ) }">
				<MvASSIGNARRAY NAME = "l.settings"		VALUE = "{ l.imagetype:code }">
					<MvMEMBER NAME = "imagetypes">
					<MvDIMENSION INDEX = 1>
				</MvASSIGNARRAY>
			</MvIF>
		</MvIF>

		<MvEVAL EXPR = "{ QuoteContent_ComponentModule_Generate_Code( l.settings, l.fields:template_code ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_QuoteInfo" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.selectedfield_count"		VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( l.fields:fields_custom, l.settings:fields_custom ) }">
	<MvASSIGN NAME = "l.selectedinfo_field_count"	VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( l.fields:info_fields_custom, l.settings:info_fields_custom ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_QuoteHistory" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.fields:paginate }">
		<MvASSIGN NAME = "l.settings:per_page"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.settings:per_page"	VALUE = "{ l.fields:per_page }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.fields:advanced }">
		<MvASSIGN NAME = "l.settings:quote_id"	VALUE = "{ l.fields:quote_id }">
		<MvASSIGN NAME = "l.settings:order_id"	VALUE = "{ l.fields:order_id }">
		<MvASSIGN NAME = "l.settings:code"	 	VALUE = "{ l.fields:code }">
		<MvASSIGN NAME = "l.settings:status"	VALUE = "{ l.fields:status }">
		<MvASSIGN NAME = "l.settings:created"	VALUE = "{ l.fields:created }">
		<MvASSIGN NAME = "l.settings:expires"	VALUE = "{ l.fields:expires }">
		<MvASSIGN NAME = "l.settings:paginate"	VALUE = "{ l.fields:paginate }">

		<MvEVAL EXPR = "{ QuoteHistory_ComponentModule_Generate_Code( l.settings, l.fields:template_code ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'quote_content' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Content_QuoteContent( l.module, l.item, l.tab, l.load_fields, l.field_prefix, l.fields, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_info' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Content_QuoteInfo( l.module, l.item, l.tab, l.load_fields, l.field_prefix, l.fields, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quote_notes' }">			<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Content_QuoteNotes( l.module, l.item, l.tab, l.load_fields, l.field_prefix, l.fields, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'quotehistory_list' }">	<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Content_QuoteHistory( l.module, l.item, l.tab, l.load_fields, l.field_prefix, l.fields, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'request_quote' }">		<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Content_QuoteRequest( l.module, l.item, l.tab, l.load_fields, l.field_prefix, l.fields, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content_QuoteContent" PARAMETERS = "module var, item var, tab var, load_fields var, field_prefix var, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields"								VALUE = "{ l.settings }">
		<MvASSIGN NAME = "l.fields:template_code"				VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"			VALUE = "{ l.settings:template_filename }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].InitializeCustomFieldSelect( l.settings:fields_custom, l.fields:fields_custom ) }">

		<MvASSIGN NAME = "l.fields:imagetypes"					VALUE = "{ l.settings:imagetypes }">
		<MvASSIGN NAME = "l.fields:image"						VALUE = "{ l.settings:imagetypes[ 1 ] }">

		<MvIF EXPR = "{ ISNULL l.settings:constrain }">
			<MvASSIGN NAME = "l.fields:constrain"				VALUE = "B">
		<MvELSE>
			<MvASSIGN NAME = "l.fields:constrain"				VALUE = "{ l.settings:constrain }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.settings:b_width }">
			<MvASSIGN NAME = "l.fields:b_width"					VALUE = 75>
		<MvELSE>
			<MvASSIGN NAME = "l.fields:b_width"					VALUE = "{ l.settings:b_width }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.settings:b_height }">
			<MvASSIGN NAME = "l.fields:b_height"				VALUE = 75>
		<MvELSE>
			<MvASSIGN NAME = "l.fields:b_height"				VALUE = "{ l.settings:b_height }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'fields_custom,image,imagetypes,template_code,template_filename,advanced' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<MvASSIGN NAME = "l.customfield_count"				VALUE = "{ [ g.Module_Library_Utilities ].ProductCustomFieldList_Load( l.customfields ) }">
			<MvASSIGN NAME = "l.imagetype_count"				VALUE = "{ [ g.Module_Library_DB ].ImageTypeList_Load_All( l.imagetypes ) }">

			<MvIF EXPR = "{ NOT l.fields:advanced }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_code' ) }">
			<MvELSE>
				<tr>
					<td valign="top" width="13%"><b>Template:</b></td>
					<td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 58, l.templateversion:templ_id ) }">
					</td>
				</tr>
			</MvIF>

			<MvIF EXPR = "{ l.customfield_count }">
				<tr><td align="left" valign="top" nowrap>
					<b>Custom Fields:</b>
				</td><td align="left" width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCustomFieldSelect( encodeentities( l.field_prefix ) $ 'fields_custom', l.fields:fields_custom, l.customfields, l.customfield_count ) }">
				</td></tr>
			</MvIF>

			<MvIF EXPR = "{ l.imagetype_count EQ 0 }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'image,imagetypes' ) }">
			<MvELSE>
				<MvIF EXPR = "{ l.fields:advanced }">
					<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'image' ) }">

					<tr><td align="left" valign="top" nowrap>
						<b>Product Images:</b>
					</td><td align="left" width="100%">
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawImageTypeSelect( encodeentities( l.field_prefix ) $ 'imagetypes', l.fields:imagetypes, l.imagetypes, l.imagetype_count ) }">
					</td></tr>
				<MvELSE>
					<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'imagetypes' ) }">

					<tr><td align="left" valign="top" nowrap>
						<b>Image:</b>
					</td><td align="left" width="100%">
						<select name="{ encodeentities( l.field_prefix ) $ 'image' }">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( '', l.fields:image, 'None' ) }">

							<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.imagetypes" COUNT = "{ l.imagetype_count }">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( l.imagetype:code, l.fields:image, encodeentities( l.imagetype:descrip ) ) }">
							</MvFOREACH>
						</select>
					</td></tr>
				</MvIF>
			</MvIF>

			<tr><td>
				&nbsp;
			</td><td width="100%">
				<input type="hidden" name="{ encodeentities( l.field_prefix ) $ 'advanced' }" value="{ encodeentities( l.fields:advanced ) }">
				<MvIF EXPR = "{ l.fields:advanced }">
					<a href="#" onclick="{ 'Toggle( \'' $ [ g.Module_Admin ].JavaScriptEncode( l.field_prefix ) $ 'advanced' $ '\', 0 ); return false;' }">Point + Click Mode</a>
				<MvELSE>
					<a href="#" onclick="{ 'Toggle( \'' $ [ g.Module_Admin ].JavaScriptEncode( l.field_prefix ) $ 'advanced' $ '\', 1 ); return false;' }">Advanced Mode</a>
				</MvIF>
			</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item $ '_dimensions' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'constrain,b_width,b_height' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item $ '_dimensions' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<tr>
				<td align="left" valign="top" nowrap><b>Product Image:</b></td>
				<td align="left" width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio_With_Label( l.field_prefix $ 'constrain', 'N', l.fields:constrain, 'No constraints' ) }"><br />
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio_With_Label( l.field_prefix $ 'constrain', 'B', l.fields:constrain, 'Resize to fit within bounding box:' ) }">
					<input type="text" name="{ encodeentities( l.field_prefix ) $ 'b_width' }" value="{ encodeentities( l.fields:b_width ) }" style="text-align:right;" size="5" /> x 
					<input type="text" name="{ encodeentities( l.field_prefix ) $ 'b_height' }" value="{ encodeentities( l.fields:b_height ) }" style="text-align:right;" size="5" /> pixels
				</td>
			</tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content_QuoteInfo" PARAMETERS = "module var, item var, tab var, load_fields var, field_prefix var, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields"								VALUE = "{ l.settings }">
		<MvASSIGN NAME = "l.fields:template_code"				VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"			VALUE = "{ l.settings:template_filename }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].InitializeCustomFieldSelect( l.settings:info_fields_custom, l.fields:info_fields_custom ) }">

		<MvASSIGN NAME = "l.fields:imagetypes"					VALUE = "{ l.settings:imagetypes }">
		<MvASSIGN NAME = "l.fields:image"						VALUE = "{ l.settings:imagetypes[ 1 ] }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'info_fields_custom,template_code,template_filename' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<tr>
				<td valign="top" width="13%"><b>Template:</b></td>
				<td>
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 58, l.templateversion:templ_id ) }">
				</td>
			</tr>

			<MvASSIGN NAME = "l.customfield_count"				VALUE = "{ QuoteCustomFieldList_Load( l.customfields ) }">

			<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields">
				<MvASSIGN NAME = "l.customfield:module:code"	VALUE = "quote">
				<MvASSIGN NAME = "l.customfield:name"			VALUE = "{ l.customfield:code }">
			</MvFOREACH>

			<MvIF EXPR = "{ l.customfield_count }">
				<tr><td align="left" valign="top" nowrap>
					<b>Custom Fields:</b>
				</td><td align="left" width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCustomFieldSelect( encodeentities( l.field_prefix ) $ 'info_fields_custom', l.fields:info_fields_custom, l.customfields, l.customfield_count ) }">
				</td></tr>
			</MvIF>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content_QuoteNotes" PARAMETERS = "module var, item var, tab var, load_fields var, field_prefix var, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields"						VALUE = "{ l.settings }">
		<MvASSIGN NAME = "l.fields:template_code"		VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"	VALUE = "{ l.settings:template_filename }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_code,template_filename' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<tr>
				<td valign="top" width="13%"><b>Template:</b></td>
				<td>
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 58, l.templateversion:templ_id ) }">
				</td>
			</tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content_QuoteHistory" PARAMETERS = "module var, item var, tab var, load_fields var, field_prefix var, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields"						VALUE = "{ l.settings }">
		<MvASSIGN NAME = "l.fields:template_code"		VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"	VALUE = "{ l.settings:template_filename }">

		<MvASSIGN NAME = "l.fields:quote_id"			VALUE = "{ l.settings:quote_id }">
		<MvASSIGN NAME = "l.fields:order_id"			VALUE = "{ l.settings:order_id }">
		<MvASSIGN NAME = "l.fields:code"				VALUE = "{ l.settings:code }">
		<MvASSIGN NAME = "l.fields:status"				VALUE = "{ l.settings:status }">
		<MvASSIGN NAME = "l.fields:created"				VALUE = "{ l.settings:created }">
		<MvASSIGN NAME = "l.fields:expires"				VALUE = "{ l.settings:expires }">

		<MvIF EXPR = "{ l.settings:per_page EQ 0 }">
			<MvASSIGN NAME = "l.fields:paginate"		VALUE = 0>
			<MvASSIGN NAME = "l.fields:per_page"		VALUE = 10>
		<MvELSE>
			<MvASSIGN NAME = "l.fields:paginate"		VALUE = 1>
			<MvASSIGN NAME = "l.fields:per_page"		VALUE = "{ l.settings:per_page }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'quote_id,order_id,code,status,created,expires,paginate,per_page,template_code,template_filename,advanced' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<MvIF EXPR = "{ NOT l.fields:advanced }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_code' ) }">

				<tr><td align="left" valign="top" nowrap>
					<b>Quote Fields:</b>
				</td><td align="left">
					<table border="0" cellpadding="0" cellspacing="0">
					<tr><td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckBox( l.fields:quote_id, encodeentities( l.field_prefix ) $ 'quote_id', 1, 'Quote ID' ) }">
					</td><td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckBox( l.fields:order_id, encodeentities( l.field_prefix ) $ 'order_id', 1, 'Order ID' ) }">
					</td></tr>

					<tr><td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckBox( l.fields:code, encodeentities( l.field_prefix ) $ 'code', 1, 'Quote Code' ) }">
					</td><td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckBox( l.fields:status, encodeentities( l.field_prefix ) $ 'status', 1, 'Quote Status' ) }">
					</td></tr>

					<tr><td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckBox( l.fields:created, encodeentities( l.field_prefix ) $ 'created', 1, 'Creation Date' ) }">
					</td><td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckBox( l.fields:expires, encodeentities( l.field_prefix ) $ 'expires', 1, 'Expiry Date' ) }">
					</td></tr>
					</table>
				</td></tr>
			<MvELSE>
				<tr>
					<td valign="top" width="13%"><b>Template:</b></td>
					<td>
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 58, l.templateversion:templ_id ) }">
					</td>

					<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'quote_id, order_id, code, status, created, expires' ) }">
				</tr>
			</MvIF>

			<tr><td colspan="2">&nbsp;</td></tr>

			<tr><td align="left" nowrap valign="top">
				<b>Pagination:</b>
			</td><td align="left" nowrap>
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.field_prefix $ 'paginate', 0, l.fields:paginate, 'Do not paginate orders' ) }"><br>
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.field_prefix $ 'paginate', 1, l.fields:paginate, 'Display' ) }"> <input type="text" name="{ encodeentities( l.field_prefix ) $ 'per_page' }" value="{ encodeentities( l.fields:per_page ) }" size="5"> orders per page
			</td></tr>

			<tr><td colspan="2">&nbsp;</td></tr>

			<tr><td>
				&nbsp;
			</td><td width="100%">
				<input type="hidden" name="{ encodeentities( l.field_prefix ) $ 'advanced' }" value="{ encodeentities( l.fields:advanced ) }">
				<MvIF EXPR = "{ l.fields:advanced }">
					<a href="#" onclick="{ 'Toggle( \'' $ [ g.Module_Admin ].JavaScriptEncode( l.field_prefix ) $ 'advanced' $ '\', 0 ); return false;' }">Point + Click Mode</a>
				<MvELSE>
					<a href="#" onclick="{ 'Toggle( \'' $ [ g.Module_Admin ].JavaScriptEncode( l.field_prefix ) $ 'advanced' $ '\', 1 ); return false;' }">Advanced Mode</a>
				</MvIF>
			</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content_QuoteRequest" PARAMETERS = "module var, item var, tab var, load_fields var, field_prefix var, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields"						VALUE = "{ l.settings }">
		<MvASSIGN NAME = "l.fields:template_code"		VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"	VALUE = "{ l.settings:template_filename }">
	</MvIF>

	<MvIF EXPR = "{ l.tab EQ l.item }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">
		<table border="0" cellpadding="2" cellspacing="0" width="100%">
			<tr>
				<td valign="top" nowrap><b>Template:</b></td>
				<td width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 58, l.templateversion:templ_id ) }">
				</td>
			</tr>
		</table>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, '' ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Add/Edit Screen Feature (vis_cust)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Customer_Tabs" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Head" PARAMETERS = "module var, tab, customer var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Tab EQ 'DASH' }">
		<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">
			<MvEVAL EXPR = "{ Element_Quote_CustomerDashboard_CSS( l.module ) }">

			<MvIF EXPR = "{ Element_Quote_JavaScript_Combined_Begin( l.module ) }">
				<MvEVAL EXPR = "{ Element_Quote_CustomerDashboard_JavaScript( l.module ) }">
				<MvEVAL EXPR = "{ Element_Quote_JavaScript_Combined_End( l.module ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Content" PARAMETERS = "module var, tab, load_fields, customer var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Tab EQ 'DASH' }">
		<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">
			<MvEVAL EXPR = "{ Element_Quote_CustomerDashboard_HTML( l.module ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Insert" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Delete" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Update" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Configuration Change Notification Feature (not_cust)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Customer_Insert" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Customer_Update" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Customer_Delete" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'Quotes SET cust_id = 0 WHERE cust_id = ?' }"
			 FIELDS = "l.customer:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00330', g.MvQUERY_Error ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| System Extensions Feature (system)
|
</MvCOMMENT>

<MvFUNCTION NAME = "SystemModuleAction_RequestQuote" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteStandardFields_Load( l.standard_fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.valid"					VALUE = 1>
	<MvASSIGN NAME = "g.RequestQuote_FirstName"	VALUE = "{ trim( g.RequestQuote_FirstName ) }">
	<MvASSIGN NAME = "g.RequestQuote_LastName" 	VALUE = "{ trim( g.RequestQuote_LastName ) }">
	<MvASSIGN NAME = "g.RequestQuote_Phone" 	VALUE = "{ trim( g.RequestQuote_Phone ) }">
	<MvASSIGN NAME = "g.RequestQuote_Zip" 		VALUE = "{ trim( g.RequestQuote_Zip ) }">
	<MvASSIGN NAME = "g.RequestQuote_Country"	VALUE = "{ trim( g.RequestQuote_Country ) }">
	<MvASSIGN NAME = "g.RequestQuote_Email" 	VALUE = "{ trim( g.RequestQuote_Email ) }">
	<MvASSIGN NAME = "g.RequestQuote_Comment"	VALUE = "{ trim( g.RequestQuote_Comment ) }">
	<MvASSIGN NAME = "g.RequestQuote_Include" 	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.RequestQuote_Include ) }">
	<MvASSIGN NAME = "l.custom_fields_count" 	VALUE = "{ miva_array_collapse( g.RequestQuote_CustomFields ) }">

	<MvIF EXPR = "{ NOT Quote_Validate_CustomFields( g.RequestQuote_CustomFields, l.custom_fields_count, l.validated_fields, l.validated_fields_count ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( l.standard_fields:fname EQ 'R' ) AND
					( ISNULL g.RequestQuote_FirstName ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( l.standard_fields:lname EQ 'R' ) AND
					( ISNULL g.RequestQuote_LastName ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( ( l.standard_fields:phone EQ 'R' ) OR ( NOT ISNULL g.RequestQuote_Phone ) ) AND
					( NOT [ g.Module_Library_Utilities ].Phone_Validate( g.RequestQuote_Phone, g.Store:country ) ) }">
		<MvASSIGN NAME = "l.valid" 	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( ( l.standard_fields:zip EQ 'R' ) OR ( NOT ISNULL g.RequestQuote_Zip ) ) AND
					( NOT [ g.Module_Library_Utilities ].Zip_Validate( g.RequestQuote_Zip, g.RequestQuote_Country ) ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( l.standard_fields:country NE 'H' ) AND ( NOT ISNULL g.RequestQuote_Country ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreCountry_Load_Alpha( g.RequestQuote_Country, l.null ) }">
			<MvASSIGN NAME = "l.valid"	VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ ( l.standard_fields:country EQ 'R' ) AND ( ISNULL g.RequestQuote_Country ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( ( l.standard_fields:email EQ 'R' ) OR ( NOT ISNULL g.RequestQuote_Email ) ) AND
					( NOT [ g.Module_Library_Utilities ].Email_Validate( g.RequestQuote_Email ) ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( l.standard_fields:comment EQ 'R' ) AND
					( ISNULL g.RequestQuote_Comment ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( ( l.standard_fields:basket EQ 'R' ) ) AND
					( NOT [ g.Module_Library_DB ].BasketItemList_Load_Basket( g.Basket:basket_id, l.items ) ) }">
		<MvASSIGN NAME = "l.valid"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.valid }">
		<MvASSIGN NAME = "l.null" 	VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'One or more fields were invalid. Fields in bold are required.' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.standard_fields:fname NE 'H' }">		<MvASSIGN NAME = "l.quote:fname"	VALUE = "{ g.RequestQuote_FirstName }">	</MvIF>
	<MvIF EXPR = "{ l.standard_fields:lname NE 'H' }">		<MvASSIGN NAME = "l.quote:lname" 	VALUE = "{ g.RequestQuote_LastName }">	</MvIF>
	<MvIF EXPR = "{ l.standard_fields:phone NE 'H' }">		<MvASSIGN NAME = "l.quote:phone" 	VALUE = "{ g.RequestQuote_Phone }">		</MvIF>
	<MvIF EXPR = "{ l.standard_fields:zip NE 'H' }">		<MvASSIGN NAME = "l.quote:zip" 		VALUE = "{ g.RequestQuote_Zip }">		</MvIF>
	<MvIF EXPR = "{ l.standard_fields:email NE 'H' }">		<MvASSIGN NAME = "l.quote:email" 	VALUE = "{ g.RequestQuote_Email }">		</MvIF>
	<MvIF EXPR = "{ l.standard_fields:comment NE 'H' }">	<MvASSIGN NAME = "l.quote:comment" 	VALUE = "{ g.RequestQuote_Comment }">	</MvIF>
	<MvIF EXPR = "{ l.standard_fields:include NE 'H' }">	<MvASSIGN NAME = "l.quote:include" 	VALUE = "{ g.RequestQuote_Include }">	</MvIF>

	<MvIF EXPR = "{ l.standard_fields:country NE 'H' }"> 	<MvASSIGN NAME = "l.quote:country"	VALUE = "{ g.RequestQuote_Country }">
	<MvELSE>												<MvASSIGN NAME = "l.quote:country"	VALUE = "{ g.Store:country }">
	</MvIF>

	<MvASSIGN NAME = "l.quote:basket_id"	VALUE = "{ g.Basket:basket_id }">
	<MvASSIGN NAME = "l.quote:cust_id"		VALUE = "{ g.Basket:cust_id }">
	<MvASSIGN NAME = "l.quote:terms" 		VALUE = "{ l.standard_fields:terms }">

	<MvIF EXPR = "{ NOT Quote_Create( l.module, l.quote, l.validated_fields, l.validated_fields_count ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'Your quote could not be sent, please try again later.' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Information( 'Thank you. Your quote request has been submitted.' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quote_requested_runtime', 1 ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SystemModuleAction_LoadQuote" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.QuoteCode" VALUE = "{ trim( g.QuoteCode ) }">

	<MvIF EXPR = "{ NOT Quote_Load_Code( g.QuoteCode, l.quote ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'Quote does not exist' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.quote:cust_id AND g.Basket:cust_id NE l.quote:cust_id }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'This quote was created for a different customer.' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ( l.quote:status EQ 5 ) OR ( l.quote:order_id GT 0 ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'This quote has already been purchased.' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ( l.quote:expires NE 0 ) AND ( l.quote:expires LT s.dyn_time_t ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'This quote has expired.' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT Basket_Copy_Quote( l.module, l.quote ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'Failed to copy the quote to the basket.' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.quote:status" VALUE = 3>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'Unable to update quote.' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quote_applied_to_basket', 1 ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SystemModule_Action" PARAMETERS = "module var, action" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.action EQ 'MIVA_LOAD_QUOTE' }">					<MvFUNCTIONRETURN VALUE = "{ SystemModuleAction_LoadQuote( l.module ) }">
	<MvELSEIF EXPR = "{ l.action EQ 'MIVA_REQUEST_QUOTE' }">			<MvFUNCTIONRETURN VALUE = "{ SystemModuleAction_RequestQuote( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SystemModule_Screen" PARAMETERS = "module var, screen" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SystemModule_UIException" PARAMETERS = "module var, exception" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.exception EQ 'quote_invalid_quote' }">
		<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'Quote not found.' ) }">

		<MvIF EXPR = "{ g.Basket:cust_id }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Page_Cache( 'QUOH' ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Page_Cache( 'LOGN' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.exception EQ 'quote_invalid_session' }">
		<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'You must be logged in to view this page' ) }">
		<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Page_Cache( 'LOGN' ) }">

		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.exception EQ 'quote_invalid_customer' }">
		<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Library_Utilities ].Message_Error( 'This quote is intended for a different customer' ) }">
		<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Page_Cache( 'LOGN' ) }">

		<MvFUNCTIONRETURN VALUE = -1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Runtime Basket Item (rt_basketitem)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Insert_Validate" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Insert" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Update_Validate" PARAMETERS = "module var, original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.original_basketitem:quantity EQ l.basketitem:quantity }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteConfiguration_Load_Cached( l.quote_config ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.quote_config:mod_qnty }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( l.basketitem:basket_id, l.module:id, 'quote_items', l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT BasketInfo_Load_Line_Or_Group( l.basketitem:line_id, l.basketitem:group_id, l.basketinfo, l.loaded_item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00369', 'You cannot update quantity for items that were included in a quote.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Update" PARAMETERS = "module var, original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Delete_Validate" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteConfiguration_Load_Cached( l.quote_config ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.quote_config:on_remove NE 'disallow' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( l.basketitem:basket_id, l.module:id, 'quote_items', l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT BasketInfo_Load_Line_Or_Group( l.basketitem:line_id, l.basketitem:group_id, l.basketinfo, l.loaded_item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00370', 'You cannot remove items that were included in a quote.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Runtime_BasketItem_Delete" PARAMETERS = "module var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteConfiguration_Load_Cached( l.quote_config ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.quote_config:on_remove NE 'normal' AND l.quote_config:on_remove NE 'remove_all' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( l.basketitem:basket_id, l.module:id, 'quote_items', l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT BasketInfo_Load_Line_Or_Group( l.basketitem:line_id, l.basketitem:group_id, l.basketinfo, l.loaded_item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.quote_config:on_remove EQ 'normal' }">
		<MvIF EXPR = "{ NOT Runtime_BasketItem_Delete_Line_Or_Group( l.basketitem:basket_id, l.basketitem:line_id, l.basketitem:group_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT BasketInfo_Remove_Line( l.basketitem:line_id, l.basketinfo ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.quote_config:on_remove EQ 'remove_all' }">
		<MvIF EXPR = "{ NOT Runtime_BasketItem_Delete_All_Quote( l.basketitem:basket_id, l.loaded_item:quote_id, l.basketinfo ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT BasketInfo_Remove_Quote( l.loaded_item:quote_id, l.basketinfo ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Update( l.basketinfo ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvCOMMENT>
|
| Shipping Calculation Feature (shipping)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ShippingModule_Description" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "Quoted Shipping">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Order_Head" PARAMETERS = "module var, tab, order var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Order_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Order_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Order_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Order_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Order_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Report_Fields" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "method">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Report_Label" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'method' }">
		<MvFUNCTIONRETURN VALUE = "Shipping Method:">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Report_Value" PARAMETERS = "module var, field_id, data" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'method' }">
		<MvFUNCTIONRETURN VALUE = "Quoted Shipping">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Enabled_Methods" PARAMETERS = "module var, methods var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.methods"		VALUE = "">
	<MvASSIGN NAME = "l.method"			VALUE = "">
	<MvASSIGN NAME = "l.method:code"	VALUE = "quote">
	<MvASSIGN NAME = "l.method:name"	VALUE = "Quoted Shipping">

	<MvFUNCTIONRETURN VALUE = "{ miva_array_insert_var( l.methods, l.method, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Shipping_Methods" PARAMETERS = "module var, methods var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.package_count"	VALUE = "{ [ g.Module_Feature_SHP_UT ].Pack_Basket( g.Basket:basket_id, l.packages ) }">
	<MvFUNCTIONRETURN VALUE = "{ ShippingModule_Basket_Methods( l.module, l.packages, l.package_count, l.methods ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Basket_Methods" PARAMETERS = "module var, packages var, package_count, methods var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.methods"			VALUE = "">
	<MvASSIGN NAME = "l.method_count"		VALUE = 0>

	<MvIF EXPR = "{ Basket_ValidForQuotedShipping( l.module, g.Basket:basket_id, l.quote ) AND
					l.quote:ship_mod EQ 'quote' AND l.quote:ship_meth EQ 'quote' }">
		<MvASSIGN NAME = "l.method"			VALUE = "">
		<MvASSIGN NAME = "l.method:code"	VALUE = "quote">
		<MvASSIGN NAME = "l.method:price"	VALUE = "{ l.quote:ship_amt }">

		<MvIF EXPR = "{ NOT ISNULL l.quote:ship_desc }">	<MvASSIGN NAME = "l.method:name" VALUE = "{ l.quote:ship_desc }">
		<MvELSE>											<MvASSIGN NAME = "l.method:name" VALUE = "Quoted Shipping">
		</MvIF>

		<MvASSIGN NAME = "l.method_count"	VALUE = "{ miva_array_insert_var( l.methods, l.method, -1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.method_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ShippingModule_Calculate_Basket" PARAMETERS = "module var, data" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Basket_ValidForQuotedShipping( l.module, g.Basket:basket_id, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error_ShippingMethod_Invalid() }">
	</MvIF>

	<MvIF EXPR = "{ l.quote:ship_mod NE 'quote' OR l.quote:ship_meth NE 'quote' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error_ShippingMethod_Invalid() }">
	</MvIF>

	<MvASSIGN NAME = "l.basketcharge"				VALUE = "">
	<MvASSIGN NAME = "l.basketcharge:basket_id" 	VALUE = "{ g.Basket:basket_id }">
	<MvASSIGN NAME = "l.basketcharge:module_id" 	VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.basketcharge:type" 			VALUE = "SHIPPING">
	<MvASSIGN NAME = "l.basketcharge:amount" 		VALUE = "{ l.quote:ship_amt ROUND 2 }">
	<MvASSIGN NAME = "l.basketcharge:disp_amt" 		VALUE = "{ l.quote:ship_amt ROUND 2 }">
	<MvASSIGN NAME = "l.basketcharge:tax_exempt" 	VALUE = 0>
	<MvASSIGN NAME = "l.basketcharge:tax"		 	VALUE = 0.00>

	<MvIF EXPR = "{ NOT ISNULL l.quote:ship_desc }">	<MvASSIGN NAME = "l.basketcharge:descrip" VALUE = "{ 'Shipping: ' $ l.quote:ship_desc }">
	<MvELSE>											<MvASSIGN NAME = "l.basketcharge:descrip" VALUE = "Shipping: Quoted Shipping">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Insert( l.basketcharge ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Discounting Subsystem Feature (discount)
|
</MvCOMMENT>

<MvFUNCTION NAME = "DiscountModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:items"					VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:eligibility"			VALUE = "module">
	<MvASSIGN NAME = "l.capabilities:basket"				VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:shipping"				VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:tax"					VALUE = 0>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Fields" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Validate" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Update" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Item_Eligible" PARAMETERS = "module var, pricegroup var, discount_state var, item var, eligible var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.eligible" VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_BasketOrOrderInfo_Load( l.discount_state, l.module:id, 'quote_items', l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT BasketInfo_Load_Line_Or_Group( l.item:line_id, l.item:group_id, l.basketinfo, l.loaded_item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.eligible" VALUE = "{ l.loaded_item:discounted }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Discount_Items" PARAMETERS = "module var, pricegroup var, discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items" COUNT = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Eligible_Items( l.discount_state, l.items ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Add_Item_Discount( l.discount_state, l.item, 0 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Discount_ShippingMethodList" PARAMETERS = "module var, pricegroup var, discount_state var, methods var, method_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Basket_ValidForQuotedShipping( l.module, g.Basket:basket_id, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.found_pos" VALUE = "{ miva_array_search( l.methods, 1, l.method, 'l.method:module:code EQ l.quote:ship_mod AND l.method:code EQ l.quote:ship_meth' ) }">

	<MvIF EXPR = "{ l.found_pos }">
		<MvASSIGN NAME = "l.method:price"	VALUE = "{ l.quote:ship_amt ROUND 2 }">

		<MvIF EXPR = "{ NOT ISNULL l.quote:ship_desc }">
			<MvASSIGN NAME = "l.method:name" VALUE = "{ l.quote:ship_desc }">
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_delete( l.methods, l.found_pos, 1 ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_ref( l.methods, l.method, 1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Discount_Shipping" PARAMETERS = "module var, pricegroup var, discount_state var, shipping_module var, shipping_method_code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Basket_ValidForQuotedShipping( l.module, g.Basket:basket_id, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.quote:ship_mod EQ 'quote' AND l.quote:ship_meth EQ 'quote' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.shipping_module:code NE l.quote:ship_mod	OR
					l.shipping_method_code NE l.quote:ship_meth }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.quote:ship_desc }">
		<MvASSIGN NAME = "l.descrip"			VALUE = "{ l.quote:ship_desc }">
	<MvELSE>
		<MvASSIGN NAME = "l.descrip"			VALUE = "{ [ g.Module_Root $ l.shipping_module:module ].ShippingModule_Description( l.shipping_module, l.shipping_method_code ) }">
	</MvIF>

	<MvASSIGN NAME = "l.charge"					VALUE = "">
	<MvASSIGN NAME = "l.charge:module_id"		VALUE = "{ l.shipping_module:id }">
	<MvASSIGN NAME = "l.charge:type"			VALUE = "SHIPPING">
	<MvASSIGN NAME = "l.charge:descrip"			VALUE = "{ 'Shipping: ' $ l.descrip }">
	<MvASSIGN NAME = "l.charge:amount"			VALUE = "{ l.quote:ship_amt ROUND 2 }">
	<MvASSIGN NAME = "l.charge:disp_amt"		VALUE = "{ l.quote:ship_amt ROUND 2 }">
	<MvASSIGN NAME = "l.charge:tax_exempt"		VALUE = 0>
	<MvASSIGN NAME = "l.charge:tax"				VALUE = 0.00>

	<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Delete_Charge_All_Type( l.discount_state, 'SHIPPING' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Merge_Charge( l.discount_state, l.charge ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_Provision_Settings" PARAMETERS = "module var, pricegroup var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_PriceGroup_Copy" PARAMETERS = "module var, source_pricegroup var, dest_pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountModule_PriceGroup_Delete" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Cleanup Store Feature (cleanup_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Cleanup_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Cleanup_Baskets" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME 	= "Merchant"
				 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteXBasket qxb1
				 			  USING ' $ g.Store_Table_Prefix $ 'QuoteXBasket qxb2
				 			  	LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Baskets b ON b.basket_id = qxb2.basket_id
				 			  WHERE
				 			  	qxb1.basket_id = qxb2.basket_id AND
				 			  	b.basket_id IS NULL' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00407', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSE>
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE
								qxb
							  FROM
								' $ g.Store_Table_Prefix $ 'QuoteXBasket qxb
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Baskets b ON b.basket_id = qxb.basket_id
							  WHERE
								b.basket_id IS NULL' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00408', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module Client Side Feature (clientside)
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/util/quote/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_Quote_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/quote/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/quote/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/quote/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'Quote_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Load_ID( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteIndex_Load_ID' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteIndex_Load_ID( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Create_Empty' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Create_Empty( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Copy' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Copy( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Update_Requester_Information' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Requester_Information( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Update_Customer_ID' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Customer_ID( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Update_Expiry' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Expiry( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Update_Shipping' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Shipping( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Remove_Shipping' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Remove_Shipping( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ShippingMethodList_Load_Quote' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ShippingMethodList_Load_Quote( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_RecalculateDiscounts' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_RecalculateDiscounts( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Send' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Send( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Convert' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Convert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Viewed' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Viewed( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Quote_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteItemList_Load' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItemList_Load( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteItemList_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItemList_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteItem_Add' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItem_Add( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteItem_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItem_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomFieldAndValueList_Load_Quote' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldAndValueList_Load_Quote( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomFieldValues_Update_Quote' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldValues_Update_Quote( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteNoteList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNoteList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteNote_Insert' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNote_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteNote_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNote_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteNoteList_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNoteList_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteNote_Update_Public' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNote_Update_Public( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Runtime_QuoteNote_Insert' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_QuoteNote_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomFieldList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomField_Insert' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomField_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomField_Update' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomField_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomField_Delete' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomField_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomField_DisplayOrder_Update' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomField_DisplayOrder_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomFieldOption_Insert' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldOption_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomFieldOption_Update' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldOption_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomFieldOption_Delete' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldOption_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteCustomFieldOption_Set_Default' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldOption_Set_Default( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteEmailList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteEmailList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteEmail_Update_Enabled' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteEmail_Update_Enabled( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'QuoteEmail_Update' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteEmail_Update( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON API Feature (json_api)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON_API" PARAMETERS = "module var, function" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.function EQ 'Quote_Load_ID' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Load_ID( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteIndex_Load_ID' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteIndex_Load_ID( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Create_Empty' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Create_Empty( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Copy' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Copy( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Update_Requester_Information' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Requester_Information( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Update_Customer_ID' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Customer_ID( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Update_Expiry' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Expiry( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Update_Shipping' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Update_Shipping( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Remove_Shipping' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Remove_Shipping( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'ShippingMethodList_Load_Quote' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ShippingMethodList_Load_Quote( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_RecalculateDiscounts' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_RecalculateDiscounts( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Send' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Send( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Convert' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Convert( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Quote_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteItemList_Load' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItemList_Load( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteItemList_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItemList_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteItem_Add' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItem_Add( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteItem_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteItem_Update( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteCustomFieldAndValueList_Load_Quote' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldAndValueList_Load_Quote( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteCustomFieldValues_Update_Quote' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteCustomFieldValues_Update_Quote( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteNoteList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNoteList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteNote_Insert' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNote_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteNote_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNote_Update( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteNoteList_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNoteList_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'QuoteNote_Update_Public' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_QuoteNote_Update_Public( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00342', 'Invalid function' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Quote_OnDemandColumns( l.quote, l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_OnDemandColumns" PARAMETERS = "quote var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.module_ship_desc"	VALUE = "{ Quote_ShippingModule_Description( l.quote ) }">
	<MvASSIGN NAME = "l.formatted_total"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quote:total ) }">
	<MvASSIGN NAME = "l.formatted_ship_amt"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quote:ship_amt ) }">

	"id":					<MvEVAL EXPR = "{ int( l.quote:id ) }">,
	"cust_id":				<MvEVAL EXPR = "{ int( l.quote:cust_id ) }">,
	"order_id":				<MvEVAL EXPR = "{ int( l.quote:order_id ) }">,
	"code":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:code ) }">",
	"email":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:email ) }">",
	"fname":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:fname ) }">",
	"lname":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:lname ) }">",
	"phone":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:phone ) }">",
	"zip":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:zip ) }">",
	"country":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:country ) }">",
	"comment":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:comment ) }">",
	"status":				<MvEVAL EXPR = "{ int( l.quote:status ) }">,
	"created":				<MvEVAL EXPR = "{ int( l.quote:created ) }">,
	"total":				<MvEVAL EXPR = "{ l.quote:total ROUND 2 }">,
	"formatted_total":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_total ) }">",
	"terms":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:terms ) }">",
	"expires":				<MvEVAL EXPR = "{ int( l.quote:expires ) }">,
	"ship_mod":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:ship_mod ) }">",
	"ship_meth":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:ship_meth ) }">",
	"ship_desc":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quote:ship_desc ) }">",
	"module_ship_desc":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.module_ship_desc ) }">",
	"ship_amt":				<MvEVAL EXPR = "{ l.quote:ship_amt ROUND 2 }">,
	"formatted_ship_amt":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_ship_amt ) }">"

	<MvIF EXPR = "{ ( l.ondemandcolumns:customer OR l.ondemandcolumns:businessaccount ) AND l.quote:cust_id }">
		<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].CustomerAndBusinessAccount_Load_CustomerID( l.quote:cust_id, l.customer, l.businessaccount ) }">
			<MvIF EXPR = "{ l.ondemandcolumns:customer }">
				, "customer":
				{
					<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer( l.customer ) }">
				}
			</MvIF>

			<MvIF EXPR = "{ l.ondemandcolumns:businessaccount }">
				, "businessaccount":
				{
					<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_BusinessAccount( l.businessaccount ) }">
				}
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:items }">
		<MvASSIGN NAME = "l.item_count" VALUE = 0>

		, "items":
		[
			<MvFOREACH ITERATOR = "l.quoteitem" ARRAY = "l.quoteitems" COUNT = "{ QuoteItemList_Load_Quote( l.quote:id, l.quoteitems ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.item_count ) }">
					<MvEVAL EXPR = "{ JSON_QuoteItem_OnDemandColumns( l.quoteitem, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:notes }">
		<MvASSIGN NAME = "l.note_count" VALUE = 0>

		, "notes":
		[
			<MvFOREACH ITERATOR = "l.note" ARRAY = "l.notes" COUNT = "{ QuoteNoteList_Load_Quote( l.quote:id, l.notes ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.note_count ) }">
					<MvEVAL EXPR = "{ JSON_QuoteNote( l.note ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:customfields }">
		, "customfields":
		[
			<MvASSIGN NAME = "l.field_count"			VALUE = 0>

			<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" INDEX = "l.pos" COUNT = "{ QuoteCustomFieldList_Load( l.customfields ) }">
				<MvASSIGN NAME = "l.customfieldvalue"	VALUE = "">
				<MvASSIGN NAME = "l.null"				VALUE = "{ QuoteCustomFieldValue_Load_Quote_And_Field( l.quote:id, l.customfield:code, l.customfieldvalue ) }">

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.field_count ) }">
					<MvEVAL EXPR = "{ JSON_QuoteCustomFieldAndValue( l.customfield, l.customfieldvalue ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Load" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Quote_ID', l.quote_id ) }">
		<MvIF EXPR = "{ NOT Quote_Load_ID( l.quote_id, l.quote ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00343', 'Quote not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_Quote', l.quote_code ) }">
		<MvIF EXPR = "{ NOT Quote_Load_Code( l.quote_code, l.quote ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00344', 'Quote not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Quote_Code', l.quote_code ) }">
		<MvIF EXPR = "{ NOT Quote_Load_Code( l.quote_code, l.quote ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00345', 'Quote not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00346', 'Unable to load quote: One of Quote_ID, Edit_Quote, or Quote_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Load_ID" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote:total"				VALUE = "{ Quote_Total( l.quote ) }">
	<MvASSIGN NAME = "l.ondemandcolumns"			VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns:discounts"	VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Quote_OnDemandColumns( l.quote, l.ondemandcolumns ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteList_Filters" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.available_filters" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'q.id',		'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'q.cust_id',	'cust_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'q.order_id',	'order_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.code',		'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.email',		'email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.fname',		'fname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.lname',		'lname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.phone',		'phone' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.zip',		'zip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.country',	'country' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'q.expires',	'expires' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'q.status',	'status' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.comment',	'comment' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'q.created',	'created' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'q.terms',		'terms' ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.available_filters }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteList_OrderBy" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "q.id,q.cust_id,q.order_id,q.code,q.email,q.fname,q.lname,q.phone,q.zip,q.country,q.expires,q.status,q.comment,q.created,q.terms">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.query"				VALUE = "">

	<MvASSIGN NAME = "l.filter_columns"		VALUE = "{ JSON_QuoteList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ JSON_QuoteList_OrderBy() }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Quotes', 'q' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.query, l.filter, l.filter_columns, g.Module_Root $ l.module:module, 'JSON_QuoteList_Load_Query_Filter', 'JSON_QuoteList_Load_Query_Advanced_Filter', l.ondemandcolumns ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, l.orderby_columns, 'q.id' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00218', g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Quotes', l.sql, l.fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00057', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
			<MvWHILE EXPR = "{ ( NOT Quotes.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.output_count LT l.count ) ) }">
				<MvEVAL EXPR = "{ Quote_Read( l.quote ) }">

				<MvASSIGN NAME = "l.quote:total" VALUE = "{ Quote_Total( l.quote ) }">

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
					<MvEVAL EXPR = "{ JSON_Quote_OnDemandColumns( l.quote, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

				<MvSKIP NAME = "Merchant" VIEW = "Quotes" ROWS = 1>
			</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteIndex_Load_ID" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.query"				VALUE = "">
	<MvASSIGN NAME = "l.record"				VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">

	<MvASSIGN NAME = "l.filter_columns"		VALUE = "{ JSON_QuoteList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ JSON_QuoteList_OrderBy() }">

	<MvREFERENCE NAME = "l.quote"			VARIABLE = "l.record:q">

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Quotes', 'q' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.query, l.filter, l.filter_columns, g.Module_Root $ l.module:module, 'JSON_QuoteList_Load_Query_Filter', 'JSON_QuoteList_Load_Query_Advanced_Filter', l.ondemandcolumns ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, l.orderby_columns, 'q.id' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index": <MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteList_Load_Query_Filter" PARAMETERS = "query var, field_count var, filter_name, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'ondemandcolumns' }">
		<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter_value">
			<MvIF EXPR = "{ ISNULL l.column_code }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.data" MEMBER = "{ l.column_code }" VALUE = 1>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteList_Load_Query_Advanced_Filter" PARAMETERS = "query var, field_count, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'product_code' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'q.id = ( SELECT MAX( item.quote_id ) FROM ' $ g.Store_Table_Prefix $ 'QuoteItems item WHERE item.quote_id = q.id AND item.code = ? )', [ g.Module_Library_DB ].SQL_Query_Field( l.filter_value ) ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Create_Empty" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT QuoteStandardFields_Load( l.standardfields ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote"				VALUE = "">
	<MvASSIGN NAME = "l.quote:fname" 		VALUE = "">
	<MvASSIGN NAME = "l.quote:lname" 		VALUE = "">
	<MvASSIGN NAME = "l.quote:phone" 		VALUE = "">
	<MvASSIGN NAME = "l.quote:email"		VALUE = "">
	<MvASSIGN NAME = "l.quote:zip" 			VALUE = "">
	<MvASSIGN NAME = "l.quote:country"		VALUE = "">
	<MvASSIGN NAME = "l.quote:comment" 		VALUE = "">
	<MvASSIGN NAME = "l.quote:status" 		VALUE = 0>
	<MvASSIGN NAME = "l.quote:order_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.quote:basket_id"	VALUE = 0>
	<MvASSIGN NAME = "l.quote:cust_id"		VALUE = 0>
	<MvASSIGN NAME = "l.quote:terms" 		VALUE = "{ l.standardfields:terms }">
	<MvASSIGN NAME = "l.quote:expires"		VALUE = 0>

	<MvIF EXPR = "{ NOT Quote_Insert( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00221', 'Created Quote #' $ l.quote:id ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Quote( l.quote ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Copy" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.original_quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote"				VALUE = "{ l.original_quote }">
	<MvASSIGN NAME = "l.quote:status" 		VALUE = 0>
	<MvASSIGN NAME = "l.quote:order_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.quote:basket_id"	VALUE = 0>

	<MvIF EXPR = "{ NOT Quote_Insert( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.original_quoteitem" ARRAY = "l.original_quoteitems" COUNT = "{ QuoteItemList_Load_Quote( l.original_quote:id, l.original_quoteitems ) }">
		<MvIF EXPR = "{ l.original_quoteitem:parent_id }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT Quote_Copy_QuoteItem( l.quote, l.original_quoteitem, 0, l.quoteitem ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.original_child_quoteitem" ARRAY = "l.original_quoteitem:children" COUNT = "{ l.original_quoteitem:child_count }">
			<MvIF EXPR = "{ NOT Quote_Copy_QuoteItem( l.quote, l.original_child_quoteitem, l.quoteitem:line_id, l.child_quoteitem ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT Discount_Quote( l.module, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.custom_field_count" VALUE = "{ QuoteCustomFieldValueList_Load_Quote( l.original_quote:id, l.custom_fields ) }">

	<MvIF EXPR = "{ NOT l.custom_field_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.custom_field" ARRAY = "l.custom_fields" INDEX = "l.pos" COUNT = "{ l.custom_field_count }">
		<MvASSIGN NAME = "l.custom_field:quote_id" VALUE = "{ l.quote:id }">

		<MvIF EXPR = "{ NOT QuoteCustomFieldValue_Insert( l.custom_field ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.quotenote:quote_id"		VALUE = "{ l.original_quote:id }">
	<MvASSIGN NAME = "l.quotenote:notetext"		VALUE = "{ 'Quote Copied to Quote #' $ l.quote:id }">
	<MvASSIGN NAME = "l.quotenote:dtstamp"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.quotenote:pub"			VALUE = 0>
	<MvASSIGN NAME = "l.quotenote:source"		VALUE = "A">
	<MvASSIGN NAME = "l.quotenote:source_id"	VALUE = "{ g.User:id }">

	<MvIF EXPR = "{ NOT QuoteNote_Insert( l.quotenote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quotenote:quote_id"		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.quotenote:notetext"		VALUE = "{ 'Copied from Quote #' $ l.original_quote:id }">
	<MvASSIGN NAME = "l.quotenote:dtstamp"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.quotenote:pub"			VALUE = 0>
	<MvASSIGN NAME = "l.quotenote:source"		VALUE = "A">
	<MvASSIGN NAME = "l.quotenote:source_id"	VALUE = "{ g.User:id }">

	<MvIF EXPR = "{ NOT QuoteNote_Insert( l.quotenote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00251', 'Copied Quote #' $ l.original_quote:id $ ' to new Quote #' $ l.quote:id ) }">

	<MvASSIGN NAME = "l.quote:total"			VALUE = "{ Quote_Total( l.quote ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Quote( l.quote ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Update_Requester_Information" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.quote:cust_id" VALUE = "{ l.customer:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_FirstName',	l.quote:fname )		OR
	 				NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_LastName',	l.quote:lname )		OR
	 				NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_Phone',		l.quote:phone )		OR
	 				NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_Zip',		l.quote:zip )		OR
	 				NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_Country',	l.quote:country )	OR
	 				NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_Email',		l.quote:email )		OR
	 				NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_Comment',	l.quote:comment )	OR
	 				NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Requester_Terms',		l.quote:terms ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00252', 'Updated requester info for Quote #' $ l.quote:id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Update_Customer_ID" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_quote" VALUE = "{ l.quote }">

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Customer_ID' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer( 'R', 'Customer_ID', l.customer_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.customer_id }">
			<MvASSIGN NAME = "l.customer:id" VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.customer_id, l.customer ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Customer_ID', 'Customer not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.quote:cust_id" VALUE = "{ l.customer:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.original_quote:cust_id NE l.quote:cust_id }">
		<MvIF EXPR = "{ l.quote:cust_id EQ 0 }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00329', 'Removed assigned customer from Quote #' $ l.quote:id ) }">
		<MvELSE>									<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00279', 'Assigned customer ' $ l.customer:login $ ' to Quote #' $ l.quote:id ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Update_Expiry" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
		
	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer( 'R', 'Quote_Expires', l.quote:expires ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.quote:status EQ 6 AND l.quote:expires GT s.dyn_time_t }">
		<MvASSIGN NAME = "l.quote:status" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00282', 'Created new expiry date for Quote #' $ l.quote:id ) }">

	<MvIF EXPR = "{ l.quote:expires GT s.dyn_time_t }">
		<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( 'EXPIRED', l.email ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteXExpiredEmail_Delete( l.quote:id, l.email:code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00321', 'Deleted QuoteXExpiredEmail entry with email code \'' $ l.email:code $ '\' and Quote #' $ l.quote:id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Update_Shipping" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'R',		'Shipping_Module',		l.shipping_module ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R',		'Shipping_Method',		l.quote:ship_meth ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'r:100',	'Shipping_Description',	l.quote:ship_desc ) OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'R', 		'Shipping_Amount',		l.quote:ship_amt ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code_Cached( l.shipping_module, l.ship_module ) }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error_ShippingMethod_Invalid() }">
	<MvELSEIF EXPR = "{ NOT l.ship_module:active }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error_ShippingMethod_Invalid() }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Load_Cached( l.ship_module:id, 'shipping', l.null ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error_ShippingMethod_Invalid() }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Features_Cached( l.ship_module ) }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error_ShippingMethod_Invalid() }">
	<MvELSEIF EXPR = "{ NOT l.ship_module:feature_hash:shipping }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error_ShippingMethod_Invalid() }">
	</MvIF>

	<MvASSIGN NAME = "l.quote:ship_mod" VALUE = "{ l.ship_module:code }">

	<MvIF EXPR = "{ l.quote:ship_mod EQ 'quote' AND l.quote:ship_meth NE 'quote' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Shipping_Method', 'Please select a valid method' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.ship_module:api_ver LT 5.61 }">	<MvASSIGN NAME = "l.module_method_count" VALUE = "{ [ g.Module_Root $ l.ship_module:module ].ShippingModule_Shipping_Methods( l.ship_module, l.module_methods ) }">
	<MvELSE>											<MvASSIGN NAME = "l.module_method_count" VALUE = "{ [ g.Module_Root $ l.ship_module:module ].ShippingModule_Enabled_Methods( l.ship_module, l.module_methods ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT miva_array_search( l.module_methods, 1, l.module_method, 'l.module_method:code EQ l.quote:ship_meth' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Shipping_Method', 'Please select a valid method' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00372', 'Updated shipping for Quote #' $ l.quote:id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Remove_Shipping" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote:ship_mod"		VALUE = "">
	<MvASSIGN NAME = "l.quote:ship_meth"	VALUE = "">
	<MvASSIGN NAME = "l.quote:ship_desc"	VALUE = "">
	<MvASSIGN NAME = "l.quote:ship_amt"		VALUE = 0.00>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00373', 'Removed shipping for Quote #' $ l.quote:id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ShippingMethodList_Load_Quote" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Set legacy runtime variables for modules that may not have transitioned to using g.Store:xxx_mod
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:currncy_id, g.Store_Module_Currency ) OR
					NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:tax_id, g.Store_Module_Tax ) OR
					NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:ui_id, g.Store_Module_UI ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI:module }">

	<MvCOMMENT>
	|
	| Load shipping methods
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.result"							VALUE = "{ JSON_ShippingMethodList_Load_Quote_LowLevel( l.module, l.quote, l.methods, l.method_count ) }">

	<MvCOMMENT>
	|
	| Clear legacy runtime variables
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "g.Store_Module_Currency"			VALUE = "{ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Store_Module_Tax"				VALUE = "{ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Store_Module_UI"				VALUE = "{ g.Store_Module_UI:module }">

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

	<MvCOMMENT>
	|
	| Output results
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.method" ARRAY = "l.methods" COUNT = "{ l.method_count }">
			<MvASSIGN NAME = "l.formatted_price" VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.method:price ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				"module":
				{
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.method:module ) }">
				},
				"method_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:code ) }">",
				"method_name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:name ) }">",
				"price":			<MvEVAL EXPR = "{ l.method:price ROUND 2 }">,
				"formatted_price":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_price ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ShippingMethodList_Load_Quote_LowLevel" PARAMETERS = "module var, quote var, methods var, method_count var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Quote_DummyBasket_Create( l.module, l.quote, g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.method_count"	VALUE = "{ [ g.Module_Feature_SHP_UT ].ShippingMethodList_Load_Basket_Undiscounted( l.methods ) }">
	<MvASSIGN NAME = "l.result"			VALUE = "{ [ g.Module_Feature_PGR_UT ].Discount_ShippingMethodList( g.Basket, l.methods, l.method_count ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ Quote_DummyBasket_Cleanup() }">

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_RecalculateDiscounts" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ ( l.quote:status EQ 5 ) OR ( l.quote:order_id GT 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00389', 'This quote has already been purchased, you can no longer modify items.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Discount_Quote( l.module, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00390', 'Discounts recalculated for Quote #' $ l.quote:id ) }">

	<MvASSIGN NAME = "l.quote:total"		VALUE = "{ Quote_Total( l.quote ) }">
	<MvASSIGN NAME = "l.formatted_total"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quote:total ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.quote:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_total ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Send" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Email_Validate( l.quote:email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00127', 'Invalid recipient email address.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( 'CUSTOMER', l.email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00128', 'Cannot find quote email with code of \'' $ l.type $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.email:enabled }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00129', 'The email template used to send this email has been disabled. Please re-enable to send quotes.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.itemcount" VALUE = "{ QuoteItemList_Load_Quote( l.quote:id, l.quote:items ) }">

	<MvIF EXPR = "{ NOT l.itemcount }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00143', 'You cannot send a quote that has no items attached.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteComponentInitialize_QuoteItems( l.quote:items, l.itemcount ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Domain:base_surl }">	<MvASSIGN NAME = "g.basehref"	VALUE = "{ g.Domain:base_surl }">
	<MvELSE>											<MvASSIGN NAME = "g.basehref"	VALUE = "{ g.Domain:base_url }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_SendEmail( l.module, 'CUSTOMER', l.email, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quoteemail_sent_customer', 1 ) }">

	<MvIF EXPR = "{ ( l.quote:status EQ 0 ) OR
					( l.quote:status EQ 2 ) OR
					( l.quote:status EQ 4 ) }">
		<MvASSIGN NAME = "l.quote:status" VALUE = 1>

		<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.quotenote:quote_id"		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.quotenote:notetext"		VALUE = "Quote Sent to Customer">
	<MvASSIGN NAME = "l.quotenote:dtstamp"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.quotenote:pub"			VALUE = 0>
	<MvASSIGN NAME = "l.quotenote:source"		VALUE = "A">
	<MvASSIGN NAME = "l.quotenote:source_id"	VALUE = "{ g.User:id }">

	<MvIF EXPR = "{ NOT QuoteNote_Insert( l.quotenote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00250', 'Sent Quote #' $ l.quote:id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Convert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'o', 'Customer_Copy', l.customer_copy ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.order"				VALUE = "">
	<MvASSIGN NAME = "l.order:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'Orders' ) }">
	<MvASSIGN NAME = "l.order:orderdate"	VALUE = "{ s.time_t }">

	<MvASSIGN NAME = "l.order:batch_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:status"		VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:stk_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:cust_id"		VALUE = "{ l.quote:cust_id }">
	<MvASSIGN NAME = "l.order:ship_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:total"		VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_auth"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_capt"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_rfnd"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:net_capt"		VALUE = 0.00>
	<MvASSIGN NAME = "l.order:pend_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:bord_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:note_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:source"		VALUE = "quote">
	<MvASSIGN NAME = "l.order:source_id"	VALUE = "{ l.quote:id }">

	<MvASSIGN NAME = "l.order:ship_fname"	VALUE = "{ l.quote:fname }">
	<MvASSIGN NAME = "l.order:ship_lname"	VALUE = "{ l.quote:lname }">
	<MvASSIGN NAME = "l.order:ship_email"	VALUE = "{ l.quote:email }">
	<MvASSIGN NAME = "l.order:ship_comp"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_phone"	VALUE = "{ l.quote:phone }">
	<MvASSIGN NAME = "l.order:ship_fax"		VALUE = "">
	<MvASSIGN NAME = "l.order:ship_addr1"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_addr2"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_city"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_state"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_zip"		VALUE = "{ l.quote:zip }">
	<MvASSIGN NAME = "l.order:ship_cntry"	VALUE = "{ l.quote:country }">

	<MvASSIGN NAME = "l.order:bill_fname"	VALUE = "{ l.quote:fname }">
	<MvASSIGN NAME = "l.order:bill_lname"	VALUE = "{ l.quote:lname }">
	<MvASSIGN NAME = "l.order:bill_email"	VALUE = "{ l.quote:email }">
	<MvASSIGN NAME = "l.order:bill_comp"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_phone"	VALUE = "{ l.quote:phone }">
	<MvASSIGN NAME = "l.order:bill_fax"		VALUE = "">
	<MvASSIGN NAME = "l.order:bill_addr1"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_addr2"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_city"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_state"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_zip"		VALUE = "{ l.quote:zip }">
	<MvASSIGN NAME = "l.order:bill_cntry"	VALUE = "{ l.quote:country }">

	<MvASSIGN NAME = "l.order:ship_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:ship_data"	VALUE = "">

	<MvIF EXPR = "{ NOT ISNULL l.quote:ship_mod AND
					NOT ISNULL l.quote:ship_meth }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_Code_Cached( l.quote:ship_mod, l.ship_module ) AND
						l.ship_module:active }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_Features_Cached( l.ship_module ) AND
							l.ship_module:feature_hash:shipping }">
				<MvASSIGN NAME = "l.order:ship_id"		VALUE = "{ l.ship_module:id }">
				<MvASSIGN NAME = "l.order:ship_data"	VALUE = "{ l.quote:ship_meth }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.customer_copy AND [ g.Module_Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.order:cust_id"		VALUE = "{ l.customer:id }">

		<MvASSIGN NAME = "l.order:ship_fname"	VALUE = "{ l.customer:ship_fname }">
		<MvASSIGN NAME = "l.order:ship_lname"	VALUE = "{ l.customer:ship_lname }">
		<MvASSIGN NAME = "l.order:ship_email"	VALUE = "{ l.customer:ship_email }">
		<MvASSIGN NAME = "l.order:ship_comp"	VALUE = "{ l.customer:ship_comp }">
		<MvASSIGN NAME = "l.order:ship_phone"	VALUE = "{ l.customer:ship_phone }">
		<MvASSIGN NAME = "l.order:ship_fax"		VALUE = "{ l.customer:ship_fax }">
		<MvASSIGN NAME = "l.order:ship_addr1"	VALUE = "{ l.customer:ship_addr1 }">
		<MvASSIGN NAME = "l.order:ship_addr2"	VALUE = "{ l.customer:ship_addr2 }">
		<MvASSIGN NAME = "l.order:ship_city"	VALUE = "{ l.customer:ship_city }">
		<MvASSIGN NAME = "l.order:ship_state"	VALUE = "{ l.customer:ship_state }">
		<MvASSIGN NAME = "l.order:ship_zip"		VALUE = "{ l.customer:ship_zip }">
		<MvASSIGN NAME = "l.order:ship_cntry"	VALUE = "{ l.customer:ship_cntry }">

		<MvASSIGN NAME = "l.order:bill_fname"	VALUE = "{ l.customer:bill_fname }">
		<MvASSIGN NAME = "l.order:bill_lname"	VALUE = "{ l.customer:bill_lname }">
		<MvASSIGN NAME = "l.order:bill_email"	VALUE = "{ l.customer:bill_email }">
		<MvASSIGN NAME = "l.order:bill_comp"	VALUE = "{ l.customer:bill_comp }">
		<MvASSIGN NAME = "l.order:bill_phone"	VALUE = "{ l.customer:bill_phone }">
		<MvASSIGN NAME = "l.order:bill_fax"		VALUE = "{ l.customer:bill_fax }">
		<MvASSIGN NAME = "l.order:bill_addr1"	VALUE = "{ l.customer:bill_addr1 }">
		<MvASSIGN NAME = "l.order:bill_addr2"	VALUE = "{ l.customer:bill_addr2 }">
		<MvASSIGN NAME = "l.order:bill_city"	VALUE = "{ l.customer:bill_city }">
		<MvASSIGN NAME = "l.order:bill_state"	VALUE = "{ l.customer:bill_state }">
		<MvASSIGN NAME = "l.order:bill_zip"		VALUE = "{ l.customer:bill_zip }">
		<MvASSIGN NAME = "l.order:bill_cntry"	VALUE = "{ l.customer:bill_cntry }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Insert( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Orders() }">

	<MvIF EXPR = "{ NOT JSON_Quote_Convert_LowLevel( l.module, l.quote, l.order ) }">
		<MvFOREACH ITERATOR = "l.vis_module" ARRAY = "l.vis_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_order', l.vis_modules ) }">
			<MvIF EXPR = "{ l.vis_module:api_ver GE 5.51 }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.vis_module:module ].Module_Order_Delete_Order( l.vis_module, l.order ) }">
			<MvELSEIF EXPR = "{ l.vis_module:api_ver GE 5.02 }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.vis_module:module ].Module_Order_Delete( l.vis_module ) }">
			</MvIF>
		</MvFOREACH>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].v56_Order_Delete( l.order ) }">

		<MvCOMMENT>
		|
		| Error output in JSON format is handled by the lowlevel function
		|
		</MvCOMMENT>

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.quotenote:quote_id"		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.quotenote:notetext"		VALUE = "{ 'Quote Converted to Order #' $ l.order:id }">
	<MvASSIGN NAME = "l.quotenote:dtstamp"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.quotenote:pub"			VALUE = 0>
	<MvASSIGN NAME = "l.quotenote:source"		VALUE = "A">
	<MvASSIGN NAME = "l.quotenote:source_id"	VALUE = "{ g.User:id }">

	<MvIF EXPR = "{ NOT QuoteNote_Insert( l.quotenote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"order_id": <MvEVAL EXPR = "{ int( l.order:id ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Convert_LowLevel" PARAMETERS = "module var, quote var, order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.orderinfo"						VALUE = "">
	<MvASSIGN NAME = "l.orderinfo:order_id"				VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "l.orderinfo:module_id"			VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.orderinfo:type"					VALUE = "quote_items">
	<MvASSIGN NAME = "l.orderinfo:info"					VALUE = "">

	<MvASSIGN NAME = "l.discount_pricegroup_id_lookup"	VALUE = "">
	<MvASSIGN NAME = "l.discount_pricegroup_ids"		VALUE = "">
	<MvASSIGN NAME = "l.discount_pricegroup_id_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.quoteitem"	ARRAY = "l.quoteitems" COUNT = "{ QuoteItemList_Load_Quote( l.quote:id, l.quoteitems ) }">
		<MvIF EXPR = "{ l.quoteitem:parent_id }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT Quote_Convert_QuoteItem( l.quote, l.order, l.orderinfo, l.quoteitem, 0, l.discount_pricegroup_id_lookup, l.discount_pricegroup_ids, l.discount_pricegroup_id_count, l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.child_quoteitem" ARRAY = "l.quoteitem:children" COUNT = "{ l.quoteitem:child_count }">
			<MvIF EXPR = "{ NOT Quote_Convert_QuoteItem( l.quote, l.order, l.orderinfo, l.child_quoteitem, l.orderitem:line_id, l.discount_pricegroup_id_lookup, l.discount_pricegroup_ids, l.discount_pricegroup_id_count, l.child_orderitem ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Insert OrderInfo
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderInfo_Insert( l.orderinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderInfo_Update( l.orderinfo ) }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Copy Discounts
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Load_Name( 'Quote Exclusion Price Group', l.pricegroup ) }">
		<MvASSIGN NAME = "l.orderdiscounttotal:order_id"	VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:pgrp_id"		VALUE = "{ l.pricegroup:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:coupon_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderdiscounttotal:name"		VALUE = "{ l.pricegroup:name }">
		<MvASSIGN NAME = "l.orderdiscounttotal:priority"	VALUE = "{ l.pricegroup:priority }">
		<MvASSIGN NAME = "l.orderdiscounttotal:descrip"		VALUE = "{ l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.orderdiscounttotal:total"		VALUE = 0.00>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].OrderDiscountTotal_Insert( l.orderdiscounttotal ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.discount_pricegroup_id" ARRAY = "l.discount_pricegroup_ids" COUNT = "{ l.discount_pricegroup_id_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Load_ID( l.discount_pricegroup_id, l.pricegroup ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.orderdiscounttotal:order_id"	VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:pgrp_id"		VALUE = "{ l.pricegroup:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:coupon_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderdiscounttotal:name"		VALUE = "{ l.pricegroup:name }">
		<MvASSIGN NAME = "l.orderdiscounttotal:priority"	VALUE = "{ l.pricegroup:priority }">
		<MvASSIGN NAME = "l.orderdiscounttotal:descrip"		VALUE = "{ l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.orderdiscounttotal:total"		VALUE = 0.00>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].OrderDiscountTotal_Insert( l.orderdiscounttotal ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Discount Order (Calculates Tax/Shipping & Updates Order Total)
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Order( l.order, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Process gift certificates and digital downloads
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_GFT_UT ].GiftCertificateSales_Process_Order( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_DDL_UT ].DigitalDownload_Process_Order( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Update_Status( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Perform final module notifications
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( g.Store:currncy_id, g.Store_Module_Currency )	OR
					NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( g.Store:tax_id, g.Store_Module_Tax )				OR
					NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( g.Store:ui_id, g.Store_Module_UI ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI:module }">

	<MvFOREACH ITERATOR = "l.fulfillment_module" ARRAY = "l.fulfillment_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Feature( 'fulfill', l.fulfillment_modules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.fulfillment_module:module ].FulfillmentModule_ProcessOrder( l.fulfillment_module, l.order ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "g.Store_Module_Currency"			VALUE = "{ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Store_Module_Tax"				VALUE = "{ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Store_Module_UI"				VALUE = "{ g.Store_Module_UI:module }">

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

	<MvCOMMENT>
	|
	| Update quote status
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.quote:order_id"	VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "l.quote:status" 	VALUE = 8>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00335', 'Order #' $ l.order:id $ 'created from Quote #' $ l.quote:id ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Viewed" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This function should only ever display a 1x1 pixel, do not make a security preamble
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Store_Open() }">
		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Text( 'R', 'QuoteCode', l.code ) }">
			<MvIF EXPR = "{ Quote_Load_Code( l.code, l.quote ) }">
				<MvIF EXPR = "{ l.quote:status EQ 1 }">
					<MvASSIGN NAME = "l.quote:status"	VALUE = 4>
					<MvASSIGN NAME = "l.null" 			VALUE = "{ Quote_Update( l.quote ) }">
				</MvIF>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.image"	VALUE = "{ gdImageCreate( 1, 1 ) }">
	<MvASSIGN NAME = "l.null" 	VALUE = "{ miva_output_header( 'Content-Type', 'image/gif' ) }">
	<MvASSIGN NAME = "l.null" 	VALUE = "{ gdImageGifOutput( l.image ) }">
	<MvASSIGN NAME = "l.null" 	VALUE = "{ gdImageDestroy( l.image ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Quote_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ JSON_Quote_Load( l.quote ) }">
		<MvIF EXPR = "{ NOT Quote_Delete( l.quote ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00220', 'Deleted Quote #' $ l.quote:id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteItem_OnDemandColumns" PARAMETERS = "quoteitem var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"quote_id":			<MvEVAL EXPR = "{ int( l.quoteitem:quote_id ) }">,
	"line_id":			<MvEVAL EXPR = "{ int( l.quoteitem:line_id ) }">,
	"parent_id":		<MvEVAL EXPR = "{ int( l.quoteitem:parent_id ) }">,
	"product_id":		<MvEVAL EXPR = "{ int( l.quoteitem:product_id ) }">,
	"code":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quoteitem:code ) }">",
	"name":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quoteitem:name ) }">",
	"sku":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quoteitem:sku ) }">",
	"type":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.quoteitem:type ) }">",
	"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.quoteitem:price ) }">,
	"base_price":		<MvEVAL EXPR = "{ encodejavascriptnumber( l.quoteitem:base_price ) }">,
	"total":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.quoteitem:total ) }">,
	"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.quoteitem:weight ) }">,
	"formatted_weight":	"<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Format_Weight( l.quoteitem:weight ) }">",
	"taxable":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.quoteitem:taxable ) }">,
	"upsold":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.quoteitem:upsold ) }">,
	"quantity":			<MvEVAL EXPR = "{ int( l.quoteitem:quantity ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:discounts }">
		<MvASSIGN NAME = "l.discount_pos"	VALUE = 0>

		, "discounts":
		[
			<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.discounts" COUNT = "{ QuoteItemDiscountList_Load_Line( l.quoteitem:line_id, l.discounts ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.discount_pos ) }">
					"quote_id":		<MvEVAL EXPR = "{ int( l.discount:quote_id ) }">,
					"line_id":		<MvEVAL EXPR = "{ int( l.discount:line_id ) }">,
					"pgrp_id":		<MvEVAL EXPR = "{ int( l.discount:pgrp_id ) }">,
					"display":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.discount:display ) }">,
					"descrip":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.discount:descrip ) }">",
					"discount":		<MvEVAL EXPR = "{ encodejavascriptnumber( l.discount:discount ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvASSIGN NAME = "l.option_pos"			VALUE = 0>
	<MvASSIGN NAME = "l.option_subtotal"	VALUE = 0.00>
	<MvASSIGN NAME = "l.option_count"		VALUE = "{ QuoteOptionList_Load_Line( l.quoteitem:line_id, l.options ) }">

	<MvIF EXPR = "{ l.option_count }">
		, "options":
		[
			<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ l.option_count }">
				<MvASSIGN NAME = "l.option_subtotal"	VALUE = "{ l.option_subtotal + l.option:price }">

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.option_pos ) }">
					"id":				<MvEVAL EXPR = "{ int( l.option:id ) }">,
					"quote_id":			<MvEVAL EXPR = "{ int( l.option:quote_id ) }">,
					"line_id":			<MvEVAL EXPR = "{ int( l.option:line_id ) }">,
					"attr_id":			<MvEVAL EXPR = "{ int( l.option:attr_id ) }">,
					"attr_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:attr_code ) }">",
					"attmpat_id":		<MvEVAL EXPR = "{ int( l.option:attmpat_id ) }">,
					"option_id":		<MvEVAL EXPR = "{ int( l.option:option_id ) }">,
					"opt_code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:opt_code ) }">",
					"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:price ) }">,
					"base_price":		<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:base_price ) }">,
					"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:weight ) }">,
					"formatted_weight":	"<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Format_Weight( l.option:weight ) }">",
					"data":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:data ) }">",
					"data_long":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:data_long ) }">",
					"attr_prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:attr_prompt ) }">",
					"opt_prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:opt_prompt ) }">",
					
					<MvCOMMENT>
					|
					| Compatibility fields from versions less than 10.00.00
					|
					</MvCOMMENT>

					"attribute":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:attr_code ) }">",

					<MvIF EXPR = "{ l.option:option_id }">
						"value":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:opt_code ) }">"
					<MvELSEIF EXPR = "{ NOT ISNULL l.option:data }">
						"value":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:data ) }">"
					<MvELSEIF EXPR = "{ NOT ISNULL l.option:data_long }">
						"value":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:data_long ) }">"
					<MvELSE>
						"value":	""
					</MvIF>

					<MvIF EXPR = "{ l.ondemandcolumns:discounts }">
						<MvASSIGN NAME = "l.discount_pos" VALUE = 0>

						, "discounts":
						[
							<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.discounts" COUNT = "{ QuoteOptionDiscountList_Load_LineOption_ID( l.option:id, l.discounts ) }">
								<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.discount_pos ) }">
									"quote_id":		<MvEVAL EXPR = "{ int( l.discount:quote_id ) }">,
									"line_id":		<MvEVAL EXPR = "{ int( l.discount:line_id ) }">,
									"lineopt_id":	<MvEVAL EXPR = "{ int( l.discount:lineopt_id ) }">,
									"attr_id":		<MvEVAL EXPR = "{ int( l.discount:attr_id ) }">,
									"attmpat_id":	<MvEVAL EXPR = "{ int( l.discount:attmpat_id ) }">,
									"pgrp_id":		<MvEVAL EXPR = "{ int( l.discount:pgrp_id ) }">,
									"display":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.discount:display ) }">,
									"descrip":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.discount:descrip ) }">",
									"discount":		<MvEVAL EXPR = "{ encodejavascriptnumber( l.discount:discount ) }">
								<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
							</MvFOREACH>
						]
					</MvIF>
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:parts }">
		<MvIF EXPR = "{ [ g.Module_Library_Utilities ].OrderItem_DetermineVariant_WithOptions( l.quoteitem,
																							   l.options, l.option_count,
																							   l.quoteitem:product, l.quoteitem:variant_id ) AND l.quoteitem:product:id }">
			<MvASSIGN NAME = "l.part_pos"				VALUE = 0>
			<MvASSIGN NAME = "l.quoteitem:part_count"	VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.quoteitem:product:id, l.quoteitem:variant_id, l.quoteitem:parts ) }">

			<MvIF EXPR = "{ l.quoteitem:part_count }">
				, "parts":
				[
					<MvFOREACH ITERATOR = "l.part" ARRAY = "l.quoteitem:parts" COUNT = "{ l.quoteitem:part_count }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.part_pos ) }">
							"code":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.part:code ) }">",
							"sku":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.part:sku ) }">",
							"name":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.part:name ) }">",
							"quantity":			<MvEVAL EXPR = "{ int( l.part:quantity ) }">,
							"total_quantity":	<MvEVAL EXPR = "{ int( l.quoteitem:quantity * l.part:quantity ) }">,
							"price":			<MvEVAL EXPR = "{ l.part:price ROUND 2 }">,
							"cost":				<MvEVAL EXPR = "{ l.part:cost ROUND 2 }">,
							"weight":			<MvEVAL EXPR = "{ l.part:weight ROUND 2 }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					</MvFOREACH>
				]
			</MvIF>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteItemList_Load" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.query" VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'QuoteItems', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'quote_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.quote:id ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'line_id', 'ASC' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'QuoteItems', l.sql, l.fields, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00347', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output_count"				VALUE = 0>
	<MvASSIGN NAME = "l.ondemandcolumns"			VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns:discounts"	VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
	<MvWHILE EXPR = "{ NOT QuoteItems.d.EOF }">
		<MvEVAL EXPR = "{ QuoteItem_Read( l.quoteitem ) }">

		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
			<MvEVAL EXPR = "{ JSON_QuoteItem_OnDemandColumns( l.quoteitem, l.ondemandcolumns ) }">
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

		<MvSKIP NAME = "Merchant" VIEW = "QuoteItems" ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteItems">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteItem_Add" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ ( l.quote:status EQ 5 ) OR ( l.quote:order_id GT 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00149', 'This quote has already been purchased, you cannot add any more items.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quoteitem"					VALUE = "">
	<MvASSIGN NAME = "l.quoteitem:quote_id"			VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.quoteitem:status"			VALUE = 0>
	<MvASSIGN NAME = "l.quoteitem:product_id"		VALUE = 0>
	<MvASSIGN NAME = "l.quoteitem:sku"				VALUE = "">
	<MvASSIGN NAME = "l.quoteitem:type"				VALUE = "">
	<MvASSIGN NAME = "l.quoteitem:price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.quoteitem:total"			VALUE = 0.00>
	<MvASSIGN NAME = "l.quoteitem:weight"			VALUE = 0.00>
	<MvASSIGN NAME = "l.quoteitem:taxable"			VALUE = 0>
	<MvASSIGN NAME = "l.quoteitem:upsold"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R',	'Code',		l.quoteitem:code )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R',	'Name',		l.quoteitem:name )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',	'SKU',		l.quoteitem:sku )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:20', 'Type',		l.quoteitem:type )			OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'R',	'Quantity',	l.quoteitem:quantity )		OR
					NOT [ g.Module_JSON ].JSON_Input_Price(		'o',	'Price',	l.quoteitem:price )			OR
					NOT [ g.Module_JSON ].JSON_Input_Weight(	'o',	'Weight',	l.quoteitem:weight )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',	'Taxable',	l.quoteitem:taxable ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.quoteitem:quantity LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Quantity', 'Quantity must be 1 or higher' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.quoteitem:code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product:id" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_OrderItem_ParseAttributes( l.product, l.quoteoptions, l.quoteoption_count, l.attribute_total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.quoteitem:product_id"	VALUE = "{ l.product:id }">

	<MvIF EXPR = "{ l.quoteitem:product_id AND ISNULL l.quoteitem:type }">
		<MvASSIGN NAME = "l.quoteitem:type"		VALUE = "product">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteItemAndOptions_Insert( l.quoteitem, l.quoteoptions, l.quoteoption_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Discount_Quote( l.module, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.quote:status EQ 1 OR l.quote:status EQ 4 }">
		<MvASSIGN NAME = "l.quote:status" VALUE = 2>

		<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00248', 'Added item \'' $ l.quoteitem:code $ '\' on Quote #' $ l.quote:id ) }">

	<MvASSIGN NAME = "l.quote:total" VALUE = "{ Quote_Total( l.quote ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.quote:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( [ g.Module_Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.quote:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteItem_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ ( l.quote:status EQ 5 ) OR ( l.quote:order_id GT 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00150', 'This quote has already been purchased, you can no longer modify items.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer( 'R', 'Line_ID', l.line_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteItem_Load_Line( l.quote:id, l.line_id, l.quoteitem ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00195', 'Quote item line id \'' $ l.line_id $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_quoteitem" VALUE = "{ l.quoteitem }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O',	'Code',		l.quoteitem:code )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O',	'Name',		l.quoteitem:name )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',	'SKU',		l.quoteitem:sku )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:20',	'Type',		l.quoteitem:type )			OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o',	'Quantity',	l.quoteitem:quantity )		OR
					NOT [ g.Module_JSON ].JSON_Input_Price(		'o',	'Price',	l.quoteitem:price )			OR
					NOT [ g.Module_JSON ].JSON_Input_Weight(	'o',	'Weight',	l.quoteitem:weight )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',	'Taxable',	l.quoteitem:taxable ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.update_price"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Price' ) }">
	<MvASSIGN NAME = "l.update_attributes"	VALUE = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Attributes' )	OR 
													   [ g.Module_JSON ].JSON_Input_Exists( 'Options' ) 	OR 
													   [ g.Module_JSON ].JSON_Input_Exists( 'Attribute_Codes' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.quoteitem:code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product:id" VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.quoteitem:product_id" VALUE = "{ l.product:id }">

	<MvIF EXPR = "{ NOT l.update_attributes }">
		<MvASSIGN NAME = "l.quoteoption_count" VALUE = "{ QuoteOptionList_Load_Line( l.quoteitem:line_id, l.quoteoptions ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_OrderItem_ParseAttributes( l.product, l.quoteoptions, l.quoteoption_count, l.attribute_total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.update_price }">
		<MvASSIGN NAME = "l.quoteitem:base_price" VALUE = "{ l.quoteitem:price }">
	</MvIF>

	<MvIF EXPR = "{ l.original_quoteitem:quantity NE l.quoteitem:quantity }">
		<MvIF EXPR = "{ NOT QuoteItem_Update_Child_Quantity( l.quoteitem, l.original_quoteitem:quantity, l.quoteitem:quantity ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteItemAndOptions_Update( l.original_quoteitem, l.quoteitem, l.quoteoptions, l.quoteoption_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Discount_Quote( l.module, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ ( l.quote:status EQ 1 ) OR ( l.quote:status EQ 4 ) }">
		<MvASSIGN NAME = "l.quote:status" VALUE = 2>

		<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00249', 'Updated item \'' $ l.quoteitem:code $ '\' on Quote #' $ l.quote:id ) }">

	<MvASSIGN NAME = "l.quote:total" VALUE = "{ Quote_Total( l.quote ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.quote:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( [ g.Module_Store_Module_Currency ].CurrencyModule_AddFormatting( g.Module_Store_Module_Currency, l.quote:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteItemList_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ ( l.quote:status EQ 5 ) OR ( l.quote:order_id GT 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00148', 'This quote has already been purchased, you cannot add any more items.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.line_ids"					VALUE = "">
	<MvASSIGN NAME = "l.line_count"					VALUE = 0>
	<MvASSIGN NAME = "l.quoteitems"					VALUE = "">
	<MvASSIGN NAME = "l.quoteitem_count"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'Line_IDs', l.line_ids, l.line_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.line_id" ARRAY = "l.line_ids" COUNT = "{ l.line_count }">
		<MvASSIGN NAME = "l.quoteitem"				VALUE = "">

		<MvIF EXPR = "{ QuoteItem_Load_Line( l.quote:id, l.line_id, l.quoteitem ) }">
			<MvASSIGN NAME = "l.quoteitem_count"	VALUE = "{ miva_array_insert_var( l.quoteitems, l.quoteitem, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.quoteitem_count }">
		<MvFOREACH ITERATOR = "l.quoteitem" ARRAY = "l.quoteitems" COUNT = "{ l.quoteitem_count }">
			<MvIF EXPR = "{ NOT QuoteItem_Delete( l.quoteitem ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00247', 'Deleted ' $ l.quoteitem_count $ ' item(s) from Quote #' $ l.quote:id ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Discount_Quote( l.module, l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.quote:status EQ 1 OR l.quote:status EQ 4 }">
		<MvASSIGN NAME = "l.quote:status"			VALUE = 2>

		<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.quote:total"				VALUE = "{ Quote_Total( l.quote ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.quote:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( [ g.Module_Store_Module_Currency ].CurrencyModule_AddFormatting( g.Module_Store_Module_Currency, l.quote:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldAndValue" PARAMETERS = "customfield var, customfieldvalue var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id": 			<MvEVAL EXPR = "{ int( l.customfield:id ) }">,
	"default_id": 	<MvEVAL EXPR = "{ int( l.customfield:default_id ) }">,
	"disp_order":	<MvEVAL EXPR = "{ int( l.customfield:disp_order ) }">,
	"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfield:code ) }">",
	"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfield:type ) }">",
	"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfield:prompt ) }">",
	"required":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.customfield:required ) }">,
	"options":
	[
		<MvASSIGN NAME = "l.option_count" VALUE = 0>

		<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ QuoteCustomFieldOptionList_Load_Field( l.customfield:id, l.options ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.option_count ) }">
				"id":			<MvEVAL EXPR = "{ int( l.option:id ) }">,
				"field_id":		<MvEVAL EXPR = "{ int( l.option:field_id ) }">,
				"disp_order":	<MvEVAL EXPR = "{ int( l.option:disp_order ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:code ) }">",
				"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:prompt ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	],

	<MvIF EXPR = "{ NOT l.customfieldvalue:option_id }">
		"data":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfieldvalue:data $ l.customfieldvalue:data_long ) }">"
	<MvELSE>
		"data":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfieldvalue:opt_code ) }">"
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldAndValueList_Load_Quote" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvASSIGN NAME = "l.field_count"			VALUE = 0>

		<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ QuoteCustomFieldList_Load( l.customfields ) }">
			<MvASSIGN NAME = "l.customfieldvalue"	VALUE = "">
			<MvASSIGN NAME = "l.null"				VALUE = "{ QuoteCustomFieldValue_Load_Quote_And_Field( l.quote:id, l.customfield:code, l.customfieldvalue ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.field_count ) }">
				<MvEVAL EXPR = "{ JSON_QuoteCustomFieldAndValue( l.customfield, l.customfieldvalue ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldValues_Update_Quote" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomFieldValue_Delete_All_Quote( l.quote:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Quote_CustomFields', l.fields ) }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields">
			<MvASSIGN NAME = "l.field:code"							VALUE = "{ [ g.Module_JSON ].JSON_Decode( l.field:code ) }">

			<MvIF EXPR = "{ NOT QuoteCustomField_Load_Code( l.field:code, l.customfield ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ l.customfield:type EQ 'checkbox' }">	<MvASSIGN NAME = "l.field:value" VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.field:value ) }">
			<MvELSE>												<MvASSIGN NAME = "l.field:value" VALUE = "{ [ g.Module_JSON ].JSON_Decode( l.field:value ) }">
			</MvIF>

			<MvASSIGN NAME = "l.quotecustomfield"					VALUE = "">
			<MvASSIGN NAME = "l.quotecustomfield:quote_id"			VALUE = "{ l.quote:id }">
			<MvASSIGN NAME = "l.quotecustomfield:field_id"			VALUE = "{ l.customfield:id }">
			<MvASSIGN NAME = "l.quotecustomfield:field_code"		VALUE = "{ l.customfield:code }">
			<MvASSIGN NAME = "l.quotecustomfield:option_id"			VALUE = 0>
			<MvASSIGN NAME = "l.quotecustomfield:opt_code"			VALUE = "">
			<MvASSIGN NAME = "l.quotecustomfield:data"				VALUE = "">
			<MvASSIGN NAME = "l.quotecustomfield:data_long"			VALUE = "">

			<MvIF EXPR = "{ l.customfield:type EQ 'select' OR l.customfield:type EQ 'radio' }">
				<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Load_Code( l.customfield:id, l.field:value, l.option ) }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.quotecustomfield:option_id"		VALUE = "{ l.option:id }">
				<MvASSIGN NAME = "l.quotecustomfield:opt_code"		VALUE = "{ l.option:code }">
			<MvELSE>
				<MvIF EXPR = "{ NOT l.field:value }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvIF EXPR = "{ len_var( l.field:value ) LE 254 }">
					<MvASSIGN NAME = "l.quotecustomfield:data"		VALUE = "{ l.field:value }">
					<MvASSIGN NAME = "l.quotecustomfield:data_long"	VALUE = "">
				<MvELSE>
					<MvASSIGN NAME = "l.quotecustomfield:data"		VALUE = "">
					<MvASSIGN NAME = "l.quotecustomfield:data_long"	VALUE = "{ l.field:value }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ NOT QuoteCustomFieldValue_Insert( l.quotecustomfield ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00253', 'Updated custom field values for Quote #' $ l.quote:id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNote" PARAMETERS = "note var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":		<MvEVAL EXPR = "{ int( l.note:id ) }">,
	"quote_id":	<MvEVAL EXPR = "{ int( l.note:quote_id ) }">,
	"notetext":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.note:notetext ) }">",
	"pub":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.note:pub ) }">,
	"source":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.note:source ) }">",
	"dtstamp":	<MvEVAL EXPR = "{ int( l.note:dtstamp ) }">,
	"user":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.note:user ) }">"
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNote_Load" PARAMETERS = "note var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Note_ID', l.note_id ) }">
		<MvIF EXPR = "{ NOT QuoteNote_Load_ID( l.note_id, l.note ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00348', 'Note not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00349', 'Unable to load note: Note_ID must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNoteList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.query"				VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'qn.id',				'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'qn.notetext',			'notetext' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'qn.pub',				'pub' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'qn.source',			'source' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'qn.dtstamp',			'dtstamp' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'qn.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query, 'cust.login',	'cust_login' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query, 'usr.name',		'user_login' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'QuoteNotes', 'qn' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'qn', g.Store_Table_Prefix $ 'Customers',	'cust',	'cust.id = qn.source_id AND qn.source = \'C\'', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'qn', 'Users', 							'usr',	'usr.id = qn.source_id AND qn.source = \'A\'', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'qn.quote_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.quote:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.query, l.filter, l.available_filters, g.Module_Root $ l.module:module, '', 'JSON_QuoteNoteList_Load_Query_Advanced_Filter', l.null ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, 'qn.id,notetext,pub,source,user:cust_login;user_login:null_char,dtstamp', 'qn.id' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'QuoteNotes', l.sql, l.fields, l.offset, l.count ) }">
        <MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT QuoteNotes.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.output_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ QuoteNote_Read( l.note ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				<MvEVAL EXPR = "{ JSON_QuoteNote( l.note ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "QuoteNotes" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME= "Merchant" VIEW = "QuoteNotes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNoteList_Load_Query_Advanced_Filter" PARAMETERS = "query var, field_count var, search_field, search_operator, search_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.search_field EQ 'user' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'qn.source = \'C\'', '' ) }">
 			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion( l.query, 'cust.login', l.search_operator, l.search_value, 'AND', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END_Clause( l.query, 'OR', 'AND' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'qn.source = \'A\'', '' ) }">
 			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion( l.query, 'usr.name', l.search_operator, l.search_value, 'AND', '' ) }"> 
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END_Clause( l.query, 'OR', 'AND' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNote_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.note"				VALUE = "">
	<MvASSIGN NAME = "l.note:quote_id"		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.note:dtstamp"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.note:pub"			VALUE = 0>
	<MvASSIGN NAME = "l.note:source"		VALUE = "A">
	<MvASSIGN NAME = "l.note:source_id"		VALUE = "{ g.User:id }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'R', 'Content', l.note:notetext ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>
 
	<MvIF EXPR = "{ NOT QuoteNote_Insert( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00285', 'Inserted note \'' $ l.note:id $ '\' for Quote #' $ l.note:quote_id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNote_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteNote_Load( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'R', 'Content', l.note:notetext ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteNote_Update( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00287', 'Quote note \'' $ l.note:id $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNoteList_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">
	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'Note_IDs', l.note_ids, l.note_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.note_id" ARRAY = "l.note_ids" COUNT = "{ l.note_id_count }">
		<MvASSIGN NAME = "l.processed"	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT QuoteNote_Load_ID( l.note_id, l.note ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT QuoteNote_Delete( l.note:id ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.note:id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00325', 'Quote Note \'' $ l.note:id $ '\' deleted from Quote #' $ l.note:quote_id ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteNote_Update_Public" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'admin' ) AND
					( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteNote_Load( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_note" VALUE = "{ l.note }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'o', 'Public', l.note:pub ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteNote_Update( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.original_note:pub NE l.note:pub }">
		<MvIF EXPR = "{ l.note:pub }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00333', 'Quote Note \'' $ l.note:id $ '\' marked as public' ) }">
		<MvELSE>						<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00334', 'Quote Note \'' $ l.note:id $ '\' marked as private' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_QuoteNote_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'runtime' }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">	<MvFUNCTIONRETURN> 	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Quote_Load( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.quote:cust_id }">
		<MvIF EXPR = "{ NOT g.Customer_Session_Verified OR l.quote:cust_id NE g.Basket:cust_id }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00290', 'This quote is intended for a different customer' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.note"				VALUE = "">
	<MvASSIGN NAME = "l.note:quote_id"		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.note:dtstamp"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.note:pub"			VALUE = 1>
	<MvASSIGN NAME = "l.note:source"		VALUE = "C">
	<MvASSIGN NAME = "l.note:source_id"		VALUE = "{ g.Basket:cust_id }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'R', 'Content', l.note:notetext ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteNote_Insert( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote:status"		VALUE = 7>

	<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00292', 'Inserted note \'' $ l.note:id $ '\' for Quote #' $ l.note:quote_id ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomField_Load" PARAMETERS = "customfield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Quote_CustomField_ID', l.id ) }">
		<MvIF EXPR = "{ NOT QuoteCustomField_Load_ID( l.id, l.customfield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00350', 'Quote custom field not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_Quote_CustomField', l.code ) }">
		<MvIF EXPR = "{ NOT QuoteCustomField_Load_Code( l.code, l.customfield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00351', 'Quote custom field not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Quote_CustomField_Code', l.code ) }">
		<MvIF EXPR = "{ NOT QuoteCustomField_Load_Code( l.code, l.customfield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00352', 'Quote custom field not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00353', 'Unable to load quote custom field: One of Quote_CustomField_ID, Edit_Quote_CustomField, or Quote_CustomField_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.query"				VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'qcf.code;qcfo.code',		'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'qcf.prompt;qcfo.prompt',	'prompt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'qcf.code',					'cf_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'qcf.prompt',				'cf_prompt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'qcfo.code',				'cf_opt_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'qcfo.prompt',				'cf_opt_prompt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'qcf.type',					'type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL( l.available_filters, 'qcf.required',				'required' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'qcf.*,
																		  qcfo.id			AS option_id,
																		  qcfo.field_id		AS option_field_id,
																		  qcfo.disp_order	AS option_disp_order,
																		  qcfo.code			AS option_code,
																		  qcfo.prompt		AS option_prompt' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'QuoteCustomFields', 'qcf' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'qcf', g.Store_Table_Prefix $ 'QuoteCustomFieldOptions', 'qcfo', 'qcfo.field_id = qcf.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, 'code:qcf.code;qcfo.code,prompt:qcf.prompt;qcfo.prompt,qcf.type,qcf.required', 'qcf.disp_order;qcfo.disp_order' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteCustomFields"
				QUERY	= "{ l.sql }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00227', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total_count"				VALUE = 0>
	<MvASSIGN NAME = "l.customfield_count"			VALUE = 0>
	<MvASSIGN NAME = "l.customfieldoption_count"	VALUE = 0>
	<MvASSIGN NAME = "l.last_customfield_id"		VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
			<MvWHILE EXPR = "{ NOT QuoteCustomFields.d.EOF }">
				<MvEVAL EXPR = "{ QuoteCustomField_Read( l.customfield ) }">

				<MvIF EXPR = "{ l.customfield:id NE l.last_customfield_id }">
					<MvIF EXPR = "{ l.customfieldoption_count }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
						]
					</MvIF>

					<MvIF EXPR = "{ l.customfield_count }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.customfield_count ) }">
					"id":			<MvEVAL EXPR = "{ int( l.customfield:id ) }">,
					"default_id":	<MvEVAL EXPR = "{ int( l.customfield:default_id ) }">,
					"disp_order":	<MvEVAL EXPR = "{ int( l.customfield:disp_order ) }">,
					"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfield:code ) }">",
					"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfield:type ) }">",
					"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.customfield:prompt ) }">",
					"required":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.customfield:required ) }">

					<MvASSIGN NAME = "l.total_count"				VALUE = "{ l.total_count + 1 }">
					<MvASSIGN NAME = "l.last_customfield_id"		VALUE = "{ l.customfield:id }">
					<MvASSIGN NAME = "l.customfieldoption_count"	VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT ISNULL QuoteCustomFields.d.option_id }">
					<MvIF EXPR = "{ l.customfieldoption_count }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvELSE>
						, "options":
						[
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.customfieldoption_count ) }">
						"id":			<MvEVAL EXPR = "{ int( QuoteCustomFields.d.option_id ) }">,
						"field_id":		<MvEVAL EXPR = "{ int( QuoteCustomFields.d.option_field_id ) }">,
						"disp_order":	<MvEVAL EXPR = "{ int( QuoteCustomFields.d.option_disp_order ) }">,
						"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( QuoteCustomFields.d.option_code ) }">",
						"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( QuoteCustomFields.d.option_prompt ) }">",
						"default_opt":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.customfield:default_id EQ QuoteCustomFields.d.option_id ) }">

					<MvASSIGN NAME = "l.total_count"				VALUE = "{ l.total_count + 1 }">
				</MvIF>

				<MvSKIP NAME = "Merchant" VIEW = "QuoteCustomFields" ROWS = 1>
			</MvWHILE>

			<MvIF EXPR = "{ l.customfieldoption_count }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				]
			</MvIF>

			<MvIF EXPR = "{ l.customfield_count }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvIF>
		],
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": 0
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomField_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.customfield"			VALUE = "">
	<MvASSIGN NAME = "l.customfield:required"	VALUE = 0>
	<MvASSIGN NAME = "l.customfield:default_id"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 'Code',		l.customfield:code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Prompt',		l.customfield:prompt )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Required',	l.customfield:required )	OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'R', 'Type',		l.customfield:type, 'radio,select,checkbox,text,memo',
																										'radio,select,checkbox,text,memo' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomField_Load_Code( l.customfield:code, l.existing_customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'Custom field \'' $ l.customfield:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomField_Insert( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00228', 'Custom field \'' $ l.customfield:code $ '\' inserted' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomField_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteCustomField_Load( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_customfield" VALUE = "{ l.customfield }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O', 'Code',		l.customfield:code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O', 'Prompt',		l.customfield:prompt )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Required',	l.customfield:required )	OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'Type',		l.customfield:type, 'radio,select,checkbox,text,memo',
																										'radio,select,checkbox,text,memo' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Code' ) }">
		<MvIF EXPR = "{ QuoteCustomField_Load_Code( l.customfield:code, l.existing_customfield ) AND
						( l.customfield:id NE l.existing_customfield:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'Custom field \'' $ l.customfield:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomField_Update( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00229', 'Custom field \'' $ l.customfield:code $ '\' updated' ) }">

	<MvIF EXPR = "{ [ g.Module_Library_Utilities ].Value_In_List( l.original_customfield:type, 'radio,select' ) AND NOT [ g.Module_Library_Utilities ].Value_In_List( l.customfield:type, 'radio,select' ) }">
		<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Delete_All_FieldID( l.customfield:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00230', 'Removed all custom field options for custom field \'' $ l.customfield:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomField_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ JSON_QuoteCustomField_Load( l.customfield ) }">
		<MvIF EXPR = "{ NOT QuoteCustomField_Delete( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00254', 'Custom field \'' $ l.customfield:code $ '\' deleted' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomField_DisplayOrder_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvFOREACH ITERATOR = "l.customfield_order" ARRAY = "g.CustomField_Order" INDEX = "l.customfield_pos">
		<MvASSIGN NAME = "l.customfield_order:id"				VALUE = "{ int( l.customfield_order:id ) }">
		<MvASSIGN NAME = "l.customfield_order:offset"			VALUE = "{ int( l.customfield_order:offset ) }">
		<MvASSIGN NAME = "l.customfield_order:original_offset"	VALUE = "{ int( l.customfield_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.customfield_order:offset ) }">
			<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'CustomField_Order[' $ l.customfield_pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.customfield_order" ARRAY = "g.CustomFieldOption_Order" INDEX = "l.customfield_pos">
		<MvFOREACH ITERATOR = "l.customfieldoption_order" ARRAY = "l.customfield_order" INDEX = "l.customfieldoption_pos">
			<MvASSIGN NAME = "l.customfieldoption_order:id"					VALUE = "{ int( l.customfieldoption_order:id ) }">
			<MvASSIGN NAME = "l.customfieldoption_order:offset"				VALUE = "{ int( l.customfieldoption_order:offset ) }">
			<MvASSIGN NAME = "l.customfieldoption_order:original_offset"	VALUE = "{ int( l.customfieldoption_order:original_offset ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.customfieldoption_order:offset ) }">
				<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'CustomFieldOption_Order[' $ l.customfield_pos $ '][ ' $ l.customfieldoption_pos $ ' ]', g.Validation_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.customfield_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.customfield_order" ARRAY = "g.CustomField_Order">
		<MvASSIGN NAME = "l.customfield_count" VALUE = "{ miva_array_insert_var( l.customfield_changes, l.customfield_order, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.customfield_count }">
		<MvIF EXPR = "{ NOT QuoteCustomFieldList_Update_Offsets( l.customfield_changes, l.customfield_count ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.customfield_order" ARRAY = "g.CustomFieldOption_Order" INDEX = "l.customfield_id">
		<MvASSIGN NAME = "l.customfieldoption_count"		VALUE = 0>
		<MvASSIGN NAME = "l.customfieldoption_changes"		VALUE = "">

		<MvFOREACH ITERATOR = "l.customfieldoption_order" ARRAY = "l.customfield_order">
			<MvASSIGN NAME = "l.customfieldoption_count"	VALUE = "{ miva_array_insert_var( l.customfieldoption_changes, l.customfieldoption_order, -1 ) }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.customfieldoption_count }">
			<MvIF EXPR = "{ NOT QuoteCustomFieldOptionList_Update_Offsets( l.customfield_id, l.customfieldoption_changes, l.customfieldoption_count ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00255', 'Updated the display order of custom fields' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldAndOption_Load" PARAMETERS = "customfield var, customfieldoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Quote_CustomFieldOption_ID', l.id ) }">
		<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Load_ID( l.id, l.customfieldoption ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00231', 'Quote custom field option not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteCustomField_Load_ID( l.customfieldoption:field_id, l.customfield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00360', 'Quote custom field not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_Quote_CustomFieldOption', l.code ) }">
		<MvIF EXPR = "{ NOT JSON_QuoteCustomField_Load( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Load_Code( l.customfield:id, l.code, l.customfieldoption ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00356', 'Quote custom field option not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Quote_CustomFieldOption_Code', l.code ) }">
		<MvIF EXPR = "{ NOT JSON_QuoteCustomField_Load( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Load_Code( l.customfield:id, l.code, l.customfieldoption ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00357', 'Quote custom field option not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00358', 'Unable to load quote custom field option: One of Quote_CustomFieldOption_ID, Edit_Quote_CustomFieldOption, or Quote_CustomFieldOption_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldOption_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteCustomField_Load( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.default"					VALUE = 0>
	<MvASSIGN NAME = "l.customfieldoption"			VALUE = "">
	<MvASSIGN NAME = "l.customfieldoption:field_id"	VALUE = "{ l.customfield:id }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 'Option_Code',		l.customfieldoption:code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Option_Prompt',	l.customfieldoption:prompt )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Option_Default',	l.default ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomFieldOption_Load_Code( l.customfield:id, l.customfieldoption:code, l.existing_customfieldoption ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Option_Code', 'Custom field option \'' $ l.customfieldoption:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Insert( l.customfieldoption ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00233', 'Added custom field option \'' $ l.customfieldoption:code $ '\' to custom field \'' $ l.customfield:code $ '\'' ) }">

	<MvIF EXPR = "{ l.default }">
		<MvASSIGN NAME = "l.customfield:default_id" VALUE = "{ l.customfieldoption:id }">

		<MvIF EXPR = "{ NOT QuoteCustomField_Update_Default( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00234', 'Set the default custom field option for \'' $ l.customfield:code $ '\' to \'' $ l.customfieldoption:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldOption_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteCustomFieldAndOption_Load( l.customfield, l.customfieldoption ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.default" VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O', 'Option_Code',		l.customfieldoption:code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O', 'Option_Prompt',	l.customfieldoption:prompt )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Option_Default',	l.default ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Option_Code' ) }">
		<MvIF EXPR = "{ QuoteCustomFieldOption_Load_Code( l.customfield:id, l.customfieldoption:code, l.existing_customfieldoption ) AND
						( l.customfieldoption:id NE l.existing_customfieldoption:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Option_Code', 'Custom field option \'' $ l.customfieldoption:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Update( l.customfieldoption ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00236', 'Updated custom field option \'' $ l.customfieldoption:code $ '\' for custom field \'' $ l.customfield:code $ '\'' ) }">

	<MvIF EXPR = "{ l.default }">
		<MvASSIGN NAME = "l.customfield:default_id" VALUE = "{ l.customfieldoption:id }">

		<MvIF EXPR = "{ NOT QuoteCustomField_Update_Default( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00235', 'Set the default custom field option for \'' $ l.customfield:code $ '\' to \'' $ l.customfieldoption:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldOption_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ JSON_QuoteCustomFieldAndOption_Load( l.customfield, l.customfieldoption ) }">
		<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Delete_ID( l.customfieldoption:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00237', 'Deleted custom field option \'' $ l.customfieldoption:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteCustomFieldOption_Set_Default" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteCustomFieldAndOption_Load( l.customfield, l.customfieldoption ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Is_Default', l.is_default ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.customfield:default_id" VALUE = "{ ternary( l.is_default, l.customfieldoption:id, 0 ) }">

	<MvIF EXPR = "{ NOT QuoteCustomField_Update_Default( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.is_default }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00417', 'Set the default custom field option for \'' $ l.customfield:code $ '\' to \'' $ l.customfieldoption:code $ '\'' ) }">
	<MvELSE>							<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00418', 'Removed the default custom field option for \'' $ l.customfield:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteEmail_Load" PARAMETERS = "email var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_Email', l.email_code ) }">
		<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( l.email_code, l.email ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00420', 'Quote email not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Email_Code', l.email_code ) }">
		<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( l.email_code, l.email ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00421', 'Quote email not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00359', 'Unable to load quote email: One of Edit_Email or Email_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ QuoteEmail_Load_TemplateSource( l.email ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteEmailList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'code', 'l.email:code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'name', 'l.email:name' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o',		'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',		'Sort',		l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o:nonneg', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o',		'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.email_count"	VALUE = "{ QuoteEmailList_Load( l.emails ) }">

	<MvIF EXPR = "{ l.email_count EQ 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.search_expression"		VALUE = "1 EQ 1">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">

	<MvASSIGN NAME = "l.total_count"			VALUE = "{ miva_array_filter_ref( l.emails, 1, l.email, l.search_expression, l.filtered_emails ) }">
	<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_sort( l.filtered_emails, 'QuoteEmailList_Sort_Callback', l.sort ) }">

	<MvASSIGN NAME = "l.output_count"			VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
			<MvFOREACH ITERATOR = "l.email" ARRAY = "l.filtered_emails" FIRST = "{ l.offset + 1 }" LAST = "{ l.total_count }">
				<MvIF EXPR = "{ ( l.output_count LT l.count ) OR ( l.count EQ 0 ) }">
					<MvASSIGN NAME = "l.null" VALUE = "{ QuoteEmail_Load_TemplateSource( l.email ) }">

					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
						"enabled":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.email:enabled ) }">,
						"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:code ) }">",
						"page_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:page_code ) }">",
						"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:name ) }">",
						"email_from":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:email_from ) }">",
						"email_to":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:email_to ) }">",
						"email_cc":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:email_cc ) }">",
						"email_subj":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:email_subj ) }">",
						"mime_type":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.email:mime_type ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>
			</MvFOREACH>
		],
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">
	}

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteEmail_Update_Enabled" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteEmail_Load( l.email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_email" VALUE = "{ l.email }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'o', 'Enabled', l.email:enabled ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Quote Email \'' $ l.email:code $ '\' ' $ ternary( l.email:enabled, 'Enabled', 'Disabled' ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_Update( l.email, l.original_email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00217', 'Quote email \'' $ l.email:code $ '\' ' $ ternary( l.email:enabled, 'enabled', 'disabled' ) ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_QuoteEmail_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_QuoteEmail_Load( l.email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_email" VALUE = "{ l.email }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'O', 'Email_From',		l.email:email_from )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text( 'O', 'Email_To',			l.email:email_to )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Email_CC',			l.email:email_cc )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text( 'O', 'Email_Subject',	l.email:email_subj )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text( 'O', 'Email_Mime',		l.email:mime_type ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Quote Email \'' $ l.email:code $ '\' Updated' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_Update( l.email, l.original_email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00246', 'Quote email \'' $ l.email:code $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Scheduled Task Feature (scheduledtask)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ScheduledTaskModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:provision_settings" VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Operations" PARAMETERS = "module var, operations var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "code" 		VALUE = "send_expiry_email">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "descrip"	VALUE = "Send Quote Expiry Email">
	<MvASSIGN NAME = "l.operations" INDEX = 2 MEMBER = "code"		VALUE = "send_quote_reminder_emails">
	<MvASSIGN NAME = "l.operations" INDEX = 2 MEMBER = "descrip"	VALUE = "Send Quote Reminder Emails">

	<MvFUNCTIONRETURN VALUE = 2>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Fields" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Validate" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Update" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Delete" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation EQ 'send_expiry_email' }">
		<MvFUNCTIONRETURN VALUE = "{ ScheduledTaskModule_Execute_QuoteExpiry( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'send_quote_reminder_emails' }">
		<MvFUNCTIONRETURN VALUE = "{ ScheduledTaskModule_Execute_QuoteReminder( l.task ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Provision_Settings" PARAMETERS = "module var, task var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute_QuoteExpiry" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( 'EXPIRED', l.email ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Quotes"
				QUERY 	= "{ 'SELECT 
								* 
							  FROM ' 
							  	$ g.Store_Table_Prefix $ 'Quotes
							  WHERE
							  	expires		< ?		AND
							  	expires		<> 0	AND
							  	status		<> 5	AND
							  	order_id	= 0		AND
							  	email IS NOT NULL' }"
				FIELDS	= "s.dyn_time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00297', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT Quotes.d.EOF }">
		<MvASSIGN NAME = "l.quote"			VALUE = "">
		
		<MvEVAL EXPR = "{ Quote_Read( l.quote ) }">

		<MvASSIGN NAME = "l.quote:status"	VALUE = 6>

		<MvIF EXPR = "{ NOT Quote_Update( l.quote ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT l.email:enabled }">
			<MvSKIP NAME = "Merchant" VIEW = "Quotes" ROWS = 1>
			<MvWHILECONTINUE>
		</MvIF>
		
		<MvASSIGN NAME = "l.expired_quote:quote_id"		VALUE = "{ l.quote:id }">
		<MvASSIGN NAME = "l.expired_quote:email_code"	VALUE = "{ l.email:code }">
		<MvASSIGN NAME = "l.expired_quote:sentdate"		VALUE = "{ s.dyn_time_t }">

		<MvIF EXPR = "{ NOT QuoteXExpiredEmail_Insert( l.expired_quote ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "Quotes" ROWS = 1>
			<MvWHILECONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.itemcount" VALUE = "{ QuoteItemList_Load_Quote( l.quote:id, l.quote:items ) }">

		<MvIF EXPR = "{ NOT QuoteComponentInitialize_QuoteItems( l.quote:items, l.itemcount ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteEmail_SendEmail( l.module, 'EXPIRED', l.email, l.quote ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quoteemail_sent_expired', 1 ) }">

		<MvSKIP NAME = "Merchant" VIEW = "Quotes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute_QuoteReminder" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( 'REMINDER', l.email ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvIF EXPR = "{ NOT QuoteConfiguration_Load( l.configuration ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.remindint_seconds"	VALUE = "{ l.configuration:remindint * 60 * 60 * 24 }">
	<MvASSIGN NAME = "l.current_time"		VALUE = "{ s.dyn_time_t }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Quotes"
				QUERY 	= "{ 'SELECT 
								* 
							  FROM ' 
							  	$ g.Store_Table_Prefix $ 'Quotes
							  WHERE
							  	( 
							  		expires > ? OR 
							  		expires = 0 
							  	) AND
							  	( 
							  		status = 1	OR 
							  		status = 2	OR 
							  		status = 4 
							  	) AND
							  	(
							  		email IS NOT NULL
							  	)' }"
				FIELDS	= "s.dyn_time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00299', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT Quotes.d.EOF }">
		<MvASSIGN NAME = "l.quote"		VALUE = "">

		<MvEVAL EXPR = "{ Quote_Read( l.quote ) }">

		<MvASSIGN NAME = "l.send_email"	VALUE = 0>
		
		<MvIF EXPR = "{ NOT QuoteXReminderEmail_Load( l.quote:id, l.email:code, l.quotexreminderemail ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.created_time_gap"	VALUE = "{ s.dyn_time_t - l.quote:created }">

			<MvIF EXPR = "{ l.created_time_gap GE l.remindint_seconds }">
				<MvASSIGN NAME = "l.quote_reminder:quote_id"	VALUE = "{ l.quote:id }">
				<MvASSIGN NAME = "l.quote_reminder:email_code"	VALUE = "{ l.email:code }">
				<MvASSIGN NAME = "l.quote_reminder:sentdate"	VALUE = "{ l.current_time }">

				<MvIF EXPR = "{ NOT QuoteXReminderEmail_Insert( l.quote_reminder ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.send_email"		VALUE = 1>
			</MvIF>
		<MvELSE>
			<MvASSIGN NAME = "l.sent_time_gap"		VALUE = "{ s.dyn_time_t - l.quotexreminderemail:sentdate }">

			<MvIF EXPR = "{ l.sent_time_gap GE l.remindint_seconds }">
				<MvIF EXPR = "{ NOT QuoteXReminderEmail_Update( l.quote:id, l.email:code, l.current_time ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.send_email"		VALUE = 1>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.send_email }">
			<MvASSIGN NAME = "l.itemcount" VALUE = "{ QuoteItemList_Load_Quote( l.quote:id, l.quote:items ) }">

			<MvIF EXPR = "{ NOT QuoteComponentInitialize_QuoteItems( l.quote:items, l.itemcount ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT QuoteEmail_SendEmail( l.module, 'REMINDER', l.email, l.quote ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quoteemail_sent_reminder', 1 ) }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Quotes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module Provisioning Feature (provision_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.tag" VALUE = "{ tolower( l.child:name ) }">

		<MvIF EXPR = "{ l.tag EQ 'settings' }">						<MvEVAL EXPR = "{ Module_Provision_Store_Settings( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'quotecustomfield_add' }">		<MvEVAL EXPR = "{ Module_Provision_QuoteCustomField_Add( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'quotecustomfield_update' }">	<MvEVAL EXPR = "{ Module_Provision_QuoteCustomField_Update( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'quotecustomfield_delete' }">	<MvEVAL EXPR = "{ Module_Provision_QuoteCustomField_Delete( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'quoteemail_update' }">		<MvEVAL EXPR = "{ Module_Provision_QuoteEmail_Update( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'quotenote_add' }">			<MvEVAL EXPR = "{ Module_Provision_QuoteNote_Add( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'quotenote_update' }">			<MvEVAL EXPR = "{ Module_Provision_QuoteNote_Update( l.module, l.child ) }">
		<MvELSEIF EXPR = "{ l.tag EQ 'quotenote_delete' }">			<MvEVAL EXPR = "{ Module_Provision_QuoteNote_Delete( l.module, l.child ) }">
		<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child, 'Unknown tag \'' $ l.child:name $ '\'' ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Settings" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteConfiguration_Load( l.quote_configuration ) OR
					NOT QuoteStandardFields_Load( l.quote_standardfields ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Configuration' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml:tags:Configuration[ 1 ], 'CustomerModifyQuantity',	l.quote_configuration:mod_qnty )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O', l.provide_xml:tags:Configuration[ 1 ], 'QuoteRemindFrequency',		l.quote_configuration:remindint )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O', l.provide_xml:tags:Configuration[ 1 ], 'CustomerItemRemove',		l.quote_configuration:on_remove, 'Allow,Disallow,RemoveAll', 'allow,disallow,remove_all' ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteConfiguration_Update( l.quote_configuration ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'StandardFields' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'FirstName',	l.quote_standardfields:fname,	'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'LastName',	l.quote_standardfields:lname,	'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'Phone',		l.quote_standardfields:phone,	'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'Zip',		l.quote_standardfields:zip,		'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'Country',	l.quote_standardfields:country, 'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'Email',		l.quote_standardfields:email,	'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'Comment',	l.quote_standardfields:comment, 'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'Basket',	l.quote_standardfields:basket,	'Hidden,Required,Optional', 'H,R,O' )	OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml:tags:StandardFields[ 1 ], 'Terms',		l.quote_standardfields:text ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT QuoteStandardFields_Update( l.quote_standardfields ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_QuoteCustomField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.customfield"			VALUE = "">
	<MvASSIGN NAME = "l.customfield:required"	VALUE = 0>
	<MvASSIGN NAME = "l.customfield:default_id"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R', l.provide_xml, 'Code',		l.customfield:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R', l.provide_xml, 'Prompt',	l.customfield:prompt )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'o', l.provide_xml, 'Required',	l.customfield:required )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R', l.provide_xml, 'Type',		l.customfield:type, 'Radio,Select,Checkbox,Text,Memo',
																															'radio,select,checkbox,text,memo' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomField_Load_Code( l.customfield:code, l.existing_customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote custom field \'' $ l.customfield:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomField_Insert( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00361', 'Custom field \'' $ l.customfield:code $ '\' inserted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_QuoteCustomField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomField_Load_Code( l.code, l.customfield ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote custom field \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_customfield" VALUE = "{ l.customfield }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Code',		l.customfield:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Prompt',	l.customfield:prompt )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'o', l.provide_xml, 'Required',	l.customfield:required )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O', l.provide_xml, 'Type',		l.customfield:type, 'Radio,Select,Checkbox,Text,Memo',
																															'radio,select,checkbox,text,memo' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Code' ) }">
		<MvIF EXPR = "{ QuoteCustomField_Load_Code( l.customfield:code, l.existing_customfield ) AND
						( l.customfield:id NE l.existing_customfield:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote custom field \'' $ l.customfield:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomField_Update( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00362', 'Custom field \'' $ l.code $ '\' updated' ) }">

	<MvIF EXPR = "{ [ g.Module_Library_Utilities ].Value_In_List( l.original_customfield:type, 'radio,select' ) AND NOT [ g.Module_Library_Utilities ].Value_In_List( l.customfield:type, 'radio,select' ) }">
		<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Delete_All_FieldID( l.customfield:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00363', 'Removed all custom field options for custom field \'' $ l.customfield:code $ '\'' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_QuoteCustomField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomField_Load_Code( l.code, l.customfield ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote custom field \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteCustomField_Delete( l.customfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00364', 'Custom field \'' $ l.customfield:code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_QuoteEmail_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( l.code, l.email ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote email \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_Load_TemplateSource( l.email ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">		
	</MvIF>

	<MvASSIGN NAME = "l.original_email" VALUE = "{ l.email }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Email_From',		l.email:email_from )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Email_To',			l.email:email_to )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o', l.provide_xml, 'Email_CC',			l.email:email_cc )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Email_Subject',	l.email:email_subj )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Mime_Type',		l.email:mime_type )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Enabled',			l.email:enabled ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Active() }">
		<MvASSIGN NAME = "l.end_changeset"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.end_changeset"	VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Quote Email \'' $ l.email:code $ '\' Updated' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.result" VALUE = "{ QuoteEmail_Update( l.email, l.original_email ) }">

	<MvIF EXPR = "{ l.end_changeset }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00368', 'Quote email \'' $ l.email:code $ '\' updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_QuoteNote_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Integer( l.provide_xml, 'quote_id', l.quote_id ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT Quote_Load_ID( l.quote_id, l.quote ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote #' $ l.quote_id $ ' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.note"				VALUE = "">
	<MvASSIGN NAME = "l.note:quote_id"		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.note:dtstamp"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.note:pub"			VALUE = 0>
	<MvASSIGN NAME = "l.note:source"		VALUE = "A">
	<MvASSIGN NAME = "l.note:source_id"		VALUE = "{ int( g.User:id ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R', l.provide_xml, 'Text',		l.note:notetext ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Public',	l.note:pub ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
 
	<MvIF EXPR = "{ NOT QuoteNote_Insert( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00365', 'Inserted note \'' $ l.note:id $ '\' for Quote #' $ l.note:quote_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_QuoteNote_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Integer( l.provide_xml, 'note_id', l.id )  }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteNote_Load_ID( l.id, l.note ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote note \'' $ l.id $ '\' does not exist' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Text',		l.note:notetext ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Public',	l.note:pub ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteNote_Update( l.note ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00366', 'Updated note \'' $ l.note:id $ '\' for Quote #' $ l.note:quote_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_QuoteNote_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Integer( l.provide_xml, 'note_id', l.id ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteNote_Load_ID( l.id, l.note ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Quote note \'' $ l.id $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteNote_Delete( l.note:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-QUOTES-00367', 'Quote note \'' $ l.note:id $ '\' for Quote #' $ l.note:quote_id $ ' deleted' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteConfiguration
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteConfiguration_Read" PARAMETERS = "configuration var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.configuration:mod_qnty"		VALUE = "{ QuoteConfiguration.d.mod_qnty }">
	<MvASSIGN NAME = "l.configuration:on_remove"	VALUE = "{ QuoteConfiguration.d.on_remove }">
	<MvASSIGN NAME = "l.configuration:remindint"	VALUE = "{ QuoteConfiguration.d.remindint }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteConfiguration_Load_Cached" PARAMETERS = "configuration var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:quote:configuration">

	<MvIF EXPR = "{ ISNULL l.cache }">
		<MvASSIGN NAME = "l.cache:result"			VALUE = "{ QuoteConfiguration_Load( l.cache:configuration ) }">
		<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
		<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.configuration"				VALUE = "{ l.cache:configuration }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteConfiguration_Load" PARAMETERS = "configuration var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteConfiguration"
				QUERY 	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'QuoteConfiguration' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00207', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteConfiguration.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteConfiguration">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00208' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteConfiguration_Read( l.configuration ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteConfiguration">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteConfiguration_Insert" PARAMETERS = "configuration var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteConfiguration
						  ( mod_qnty, on_remove, remindint )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS = "l.configuration:mod_qnty, l.configuration:on_remove, l.configuration:remindint">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00209', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteConfiguration_Update" PARAMETERS = "configuration var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'QuoteConfiguration
						  SET
							mod_qnty 	= ?,
							on_remove	= ?,
							remindint	= ?' }"
			 FIELDS = "l.configuration:mod_qnty, l.configuration:on_remove, l.configuration:remindint">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00210', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteCustomFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteCustomField_Read" PARAMETERS = "customfield var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.customfield:id"			VALUE = "{ QuoteCustomFields.d.id }">
	<MvASSIGN NAME = "l.customfield:default_id" VALUE = "{ QuoteCustomFields.d.default_id }">
	<MvASSIGN NAME = "l.customfield:disp_order" VALUE = "{ QuoteCustomFields.d.disp_order }">
	<MvASSIGN NAME = "l.customfield:code" 		VALUE = "{ QuoteCustomFields.d.code }">
	<MvASSIGN NAME = "l.customfield:type" 		VALUE = "{ QuoteCustomFields.d.type }">
	<MvASSIGN NAME = "l.customfield:prompt" 	VALUE = "{ QuoteCustomFields.d.prompt }">
	<MvASSIGN NAME = "l.customfield:required" 	VALUE = "{ QuoteCustomFields.d.required }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldList_Load" PARAMETERS = "customfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFields ORDER BY disp_order' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00165', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT QuoteCustomFields.d.EOF }">
		<MvEVAL EXPR = "{ QuoteCustomField_Read( l.customfield[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "QuoteCustomFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00166', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomField_Insert" PARAMETERS = "customfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.customfield:id" 		VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFields' ) }">
	<MvASSIGN NAME = "l.customfield:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFieldsDisplayOrder' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteCustomFields
						 ( id, default_id, disp_order, code, type, prompt, required )
						 VALUES
						 ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.customfield:id, l.customfield:default_id, l.customfield:disp_order, l.customfield:code, l.customfield:type, l.customfield:prompt, l.customfield:required">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00159', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomField_Update" PARAMETERS = "customfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'QuoteCustomFields
						 SET
							code		= ?,
							prompt		= ?,
							type		= ?,
							required	= ?
						 WHERE
							id			= ?' }"
			 FIELDS = "l.customfield:code, l.customfield:prompt, l.customfield:type, l.customfield:required,
			 		   l.customfield:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00171', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomField_Update_Default" PARAMETERS = "customfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'QuoteCustomFields
			 			  SET
			 			  	default_id	= ?
			 			  WHERE
			 			  	id			= ?' }"
			 FIELDS = "l.customfield:default_id,
			 		   l.customfield:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00238', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomField_Delete" PARAMETERS = "customfield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Delete_All_FieldID( l.customfield:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ QuoteCustomField_Delete_ID( l.customfield:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomField_Delete_ID" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFields WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00158', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomField_Load_ID" PARAMETERS = "id, customfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFields WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00239', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00240' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteCustomField_Read( l.customfield ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomField_Load_Code" PARAMETERS = "code, customfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFields"
				QUERY 	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'QuoteCustomFields
							  WHERE ' $
								[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00161', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00162' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteCustomField_Read( l.customfield ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldList_Update_Offsets" PARAMETERS = "fields var, field_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.field_pos" 		VALUE = 1>
	<MvASSIGN NAME = "l.null" 			VALUE = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.fields, l.field_count ) }">

	<MvWHILE EXPR = "{ l.field_pos LE l.field_count }">
		<MvASSIGN NAME = "l.field" VALUE = "{ l.fields[ l.field_pos ] }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				 'QuoteCustomFields',
																				 'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFields WHERE id <> ? ORDER BY disp_order',
																				 [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ),
																				  l.field:offset - 1,
																				  1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00177', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ QuoteCustomFields.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">

			<MvASSIGN NAME = "l.pastend_count" 							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }" 	VALUE = "{ l.field }">
			<MvASSIGN NAME = "l.field_pos" 								VALUE = "{ l.field_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">

			<MvIF EXPR = "{ NOT QuoteCustomFieldList_Update_Offsets_Pastend( l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ QuoteCustomFields.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFields">

			<MvQUERY NAME 	= "Merchant"
					 QUERY 	= "{ 'UPDATE ' $
									g.Store_Table_Prefix $ 'QuoteCustomFields
								 SET
									disp_order = disp_order + 1
								 WHERE
									disp_order >= ?' }"
					 FIELDS = "l.disp_order">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00178', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFieldsDisplayOrder' ) }">

			<MvQUERY NAME 	= "Merchant"
					 QUERY 	= "{ 'UPDATE ' $
									g.Store_Table_Prefix $ 'QuoteCustomFields
								 SET
									disp_order 	= ?
								 WHERE
									id 			= ?' }"
					 FIELDS = "l.disp_order, l.field:id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00179', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.field_pos" VALUE = "{ l.field_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT QuoteCustomFieldList_Update_Offsets_Pastend( l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldList_Update_Offsets_Pastend" PARAMETERS = "pastend, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" 			VALUE = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">
	<MvASSIGN NAME = "l.pastend_pos" 	VALUE = 1>

	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "l.field_order_id" VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"		VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFieldsDisplayOrder' ) }">

		<MvQUERY NAME	= "Merchant"
				 QUERY 	= "{ 'UPDATE ' $
								g.Store_Table_Prefix $ 'QuoteCustomFields
							 SET
								disp_order 	= ?
							 WHERE
								id 			= ?' }"
				 FIELDS = "l.disp_order, l.field_order_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00180', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pastend_pos" VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteCustomFieldOptions
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteCustomFieldOption_Read" PARAMETERS = "customfieldoption var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.customfieldoption:id"			VALUE = "{ QuoteCustomFieldOptions.d.id }">
	<MvASSIGN NAME = "l.customfieldoption:field_id" 	VALUE = "{ QuoteCustomFieldOptions.d.field_id }">
	<MvASSIGN NAME = "l.customfieldoption:disp_order" 	VALUE = "{ QuoteCustomFieldOptions.d.disp_order }">
	<MvASSIGN NAME = "l.customfieldoption:code" 		VALUE = "{ QuoteCustomFieldOptions.d.code }">
	<MvASSIGN NAME = "l.customfieldoption:prompt" 		VALUE = "{ QuoteCustomFieldOptions.d.prompt }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOptionList_Load_Field" PARAMETERS = "field_id, customfieldoptions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFieldOptions"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions WHERE field_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00182', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT QuoteCustomFieldOptions.d.EOF }">
		<MvEVAL EXPR = "{ QuoteCustomFieldOption_Read( l.customfieldoptions[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "QuoteCustomFieldOptions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00183', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOption_Delete_ID" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00241', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOption_Insert" PARAMETERS = "customfieldoption var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.customfieldoption:id" 			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFieldOptions' ) }">
	<MvASSIGN NAME = "l.customfieldoption:disp_order" 	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFieldOptionsDisplayOrder' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions
						  ( id, field_id, disp_order, code, prompt )
						  VALUES
						  ( ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.customfieldoption:id, l.customfieldoption:field_id, l.customfieldoption:disp_order, l.customfieldoption:code, l.customfieldoption:prompt">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00160', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOption_Update" PARAMETERS = "customfieldoption var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE '$
							g.Store_Table_Prefix $ 'QuoteCustomFieldOptions
						  SET
							disp_order 	= ?,
							code		= ?,
							prompt		= ?
						  WHERE
							id 			= ?' }"
			 FIELDS = "l.customfieldoption:disp_order, l.customfieldoption:code, l.customfieldoption:prompt,
					   l.customfieldoption:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00187', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOption_Load_ID" PARAMETERS = "id, customfieldoption var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFieldOptions"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00242', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomFieldOptions.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00243' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteCustomFieldOption_Read( l.customfieldoption ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOption_Load_Code" PARAMETERS = "field_id, code, customfieldoption var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFieldOptions"
				QUERY 	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'QuoteCustomFieldOptions
							  WHERE
								field_id = ? AND ' $
								[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.field_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00163', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomFieldOptions.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00164' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteCustomFieldOption_Read( l.customfieldoption ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOption_Delete_All_FieldID" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions WHERE field_id = ?' }"
			 FIELDS = "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00184', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOptionList_Update_Offsets" PARAMETERS = "field_id, options var, option_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count" 						VALUE = 0>
	<MvASSIGN NAME = "l.option_pos" 						VALUE = 1>
	<MvASSIGN NAME = "l.null"								VALUE = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.options, l.option_count ) }">

	<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
		<MvASSIGN NAME = "l.option" VALUE = "{ l.options[ l.option_pos ] }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				 'QuoteCustomFieldOptions',
																				 'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldOptions WHERE id <> ? AND field_id = ? ORDER BY disp_order',
																				 [ g.Module_Library_DB ].SQL_Query_Field( l.option:id ) $ ',' $
																				 [ g.Module_Library_DB ].SQL_Query_Field( l.field_id ),
																				 l.option:offset - 1,
																				 1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00173', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ QuoteCustomFieldOptions.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">

			<MvASSIGN NAME = "l.pastend_count" 							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }" 	VALUE = "{ l.option }">
			<MvASSIGN NAME = "l.option_pos"								VALUE = "{ l.option_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">

			<MvIF EXPR = "{ NOT QuoteCustomFieldOptionList_Update_Offsets_Pastend( l.field_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ QuoteCustomFieldOptions.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldOptions">

			<MvQUERY NAME 	= "Merchant"
					 QUERY 	= "{ 'UPDATE ' $
									g.Store_Table_Prefix $ 'QuoteCustomFieldOptions
								 SET
									disp_order = disp_order + 1
								 WHERE
									disp_order >= ? AND
									field_id	= ?' }"
					 FIELDS = "l.disp_order, l.field_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00174', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFieldOptionsDisplayOrder' ) }">

			<MvQUERY NAME 	= "Merchant"
					 QUERY 	= "{ 'UPDATE ' $
									g.Store_Table_Prefix $ 'QuoteCustomFieldOptions
								 SET
									disp_order 	= ?
								 WHERE
									id 			= ? AND
									field_id	= ?' }"
					 FIELDS = "l.disp_order, l.option:id, l.field_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00175', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT QuoteCustomFieldOptionList_Update_Offsets_Pastend( l.field_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldOptionList_Update_Offsets_Pastend" PARAMETERS = "field_id, pastend, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" 					VALUE = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">
	<MvASSIGN NAME = "l.pastend_pos" 			VALUE = 1>

	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "l.option_order_id"	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteCustomFieldOptionsDisplayOrder' ) }">

		<MvQUERY NAME 	= "Merchant"
				 QUERY 	= "{ 'UPDATE ' $
								g.Store_Table_Prefix $ 'QuoteCustomFieldOptions
							 SET
								disp_order 	= ?
							 WHERE
								id 			= ? AND
								field_id	= ?' }"
				 FIELDS = "l.disp_order, l.option_order_id, l.field_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00176', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pastend_pos" 	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteCustomFieldValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteCustomFieldValue_Read" PARAMETERS = "customfieldvalue var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.customfieldvalue:quote_id" 		VALUE = "{ QuoteCustomFieldValues.d.quote_id }">
	<MvASSIGN NAME = "l.customfieldvalue:field_id" 		VALUE = "{ QuoteCustomFieldValues.d.field_id }">
	<MvASSIGN NAME = "l.customfieldvalue:field_code" 	VALUE = "{ QuoteCustomFieldValues.d.field_code }">
	<MvASSIGN NAME = "l.customfieldvalue:option_id" 	VALUE = "{ QuoteCustomFieldValues.d.option_id }">
	<MvASSIGN NAME = "l.customfieldvalue:opt_code" 		VALUE = "{ QuoteCustomFieldValues.d.opt_code }">
	<MvASSIGN NAME = "l.customfieldvalue:data" 			VALUE = "{ QuoteCustomFieldValues.d.data }">
	<MvASSIGN NAME = "l.customfieldvalue:data_long" 	VALUE = "{ QuoteCustomFieldValues.d.data_long }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldValue_Insert" PARAMETERS = "customfieldvalue var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldValues
						  ( quote_id, field_id, field_code, option_id, opt_code, data, data_long )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.customfieldvalue:quote_id, l.customfieldvalue:field_id, l.customfieldvalue:field_code, l.customfieldvalue:option_id, l.customfieldvalue:opt_code, l.customfieldvalue:data, l.customfieldvalue:data_long">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00181', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldValue_Load_Quote_And_Field" PARAMETERS = "quote_id, field_code, customfieldvalue var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFieldValues"
				QUERY 	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'QuoteCustomFieldValues
							  WHERE
								quote_id 	= ? AND
								field_code 	= ?' }"
				FIELDS	= "l.quote_id, l.field_code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00188', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteCustomFieldValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00203' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteCustomFieldValue_Read( l.customfieldvalue ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldValueList_Load_Quote" PARAMETERS = "quote_id, customfieldvalues var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteCustomFieldValues"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteCustomFieldValues WHERE quote_id = ?' }"
				FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00204', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT QuoteCustomFieldValues.d.EOF }">
		<MvEVAL EXPR = "{ QuoteCustomFieldValue_Read( l.customfieldvalues[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "QuoteCustomFieldValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteCustomFieldValues">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00205', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteCustomFieldValue_Delete_All_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $
							g.Store_Table_Prefix $ 'QuoteCustomFieldValues
						  WHERE
							quote_id = ?' }"
			 FIELDS = "l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00197', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteStandardFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteStandardFields_Read" PARAMETERS = "standardfields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.standardfields:terms" 	VALUE = "{ QuoteStandardFields.d.terms }">
	<MvASSIGN NAME = "l.standardfields:fname"	VALUE = "{ QuoteStandardFields.d.fname }">
	<MvASSIGN NAME = "l.standardfields:lname"	VALUE = "{ QuoteStandardFields.d.lname }">
	<MvASSIGN NAME = "l.standardfields:phone"	VALUE = "{ QuoteStandardFields.d.phone }">
	<MvASSIGN NAME = "l.standardfields:zip"		VALUE = "{ QuoteStandardFields.d.zip }">
	<MvASSIGN NAME = "l.standardfields:country"	VALUE = "{ QuoteStandardFields.d.country }">
	<MvASSIGN NAME = "l.standardfields:email" 	VALUE = "{ QuoteStandardFields.d.email }">
	<MvASSIGN NAME = "l.standardfields:comment"	VALUE = "{ QuoteStandardFields.d.comment }">
	<MvASSIGN NAME = "l.standardfields:basket" 	VALUE = "{ QuoteStandardFields.d.basket }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteStandardFields_Insert" PARAMETERS = "standardfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteStandardFields
						  ( terms, fname, lname, phone, zip, country, email, comment, basket )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.standardfields:terms, l.standardfields:fname, l.standardfields:lname, l.standardfields:phone,
			 		   l.standardfields:zip, l.standardfields:country, l.standardfields:email, l.standardfields:comment,
			 		   l.standardfields:basket">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00168', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteStandardFields_Update" PARAMETERS = "standardfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'QuoteStandardFields
						  SET
							terms 	= ?,
							fname 	= ?,
							lname 	= ?,
							phone 	= ?,
							zip		= ?,
							country	= ?,
							email	= ?,
							comment = ?,
							basket	= ?' }"
			 FIELDS = "l.standardfields:terms, l.standardfields:fname, l.standardfields:lname, l.standardfields:phone, l.standardfields:zip, l.standardfields:country, l.standardfields:email, l.standardfields:comment, l.standardfields:basket">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00167', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteStandardFields_Load" PARAMETERS = "standardfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteStandardFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteStandardFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00169', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteStandardFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteStandardFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00170' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteStandardFields_Read( l.standardfields ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteStandardFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteXBasket
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteXBasket_Insert" PARAMETERS = "basket_id, quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteXBasket
						  ( quote_id, basket_id )
						  VALUES
						  ( ?, ? )' }"
			 FIELDS	= "l.quote_id, l.basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00120', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXBasket_Delete" PARAMETERS = "basket_id, quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteXBasket 
			 			  WHERE 
			 			  	basket_id 	= ? AND 
			 			  	quote_id 	= ?' }"
			 FIELDS	= "l.basket_id, l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00409', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXBasket_Delete_Basket" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteXBasket WHERE basket_id = ?' }"
			 FIELDS = "l.basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00118', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXBasket_Delete_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteXBasket WHERE quote_id = ?' }"
			 FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00142', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Quote Emails
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteEmail_Copy" PARAMETERS = "source var, dest var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.dest:enabled" 	VALUE = "{ l.source:enabled }">
	<MvASSIGN NAME = "l.dest:code" 		VALUE = "{ l.source:code }">
	<MvASSIGN NAME = "l.dest:page_code" VALUE = "{ l.source:page_code }">
	<MvASSIGN NAME = "l.dest:name" 		VALUE = "{ l.source:name }">
	<MvASSIGN NAME = "l.dest:tfn_from" 	VALUE = "{ l.source:tfn_from }">
	<MvASSIGN NAME = "l.dest:tfn_to" 	VALUE = "{ l.source:tfn_to }">
	<MvASSIGN NAME = "l.dest:tfn_cc" 	VALUE = "{ l.source:tfn_cc }">
	<MvASSIGN NAME = "l.dest:tfn_subj" 	VALUE = "{ l.source:tfn_subj }">
	<MvASSIGN NAME = "l.dest:tfn_mime" 	VALUE = "{ l.source:tfn_mime }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Load_Code" PARAMETERS = "code, email var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersion_Load_Code_Current( 'quote_email', l.code, l.managedproperty ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ QuoteEmail_Copy( l.managedproperty:version:settings, l.email ) }">

	<MvASSIGN NAME = "l.email:code" VALUE = "{ l.managedproperty:code }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Load_TemplateSource" PARAMETERS = "email var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.email:email_from"		VALUE = "">
	<MvASSIGN NAME = "l.email:email_to"			VALUE = "">
	<MvASSIGN NAME = "l.email:email_cc"			VALUE = "">
	<MvASSIGN NAME = "l.email:email_subj"		VALUE = "">
	<MvASSIGN NAME = "l.email:mime_type"		VALUE = "">

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.email:tfn_from, l.from_template ) }">
		<MvASSIGN NAME = "l.email:email_from"	VALUE = "{ l.from_template:version:source }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.email:tfn_to, l.to_template ) }">
		<MvASSIGN NAME = "l.email:email_to"		VALUE = "{ l.to_template:version:source }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.email:tfn_cc, l.cc_template ) }">
		<MvASSIGN NAME = "l.email:email_cc"		VALUE = "{ l.cc_template:version:source }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.email:tfn_subj, l.subj_template ) }">
		<MvASSIGN NAME = "l.email:email_subj"	VALUE = "{ l.subj_template:version:source }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.email:tfn_mime, l.mime_template ) }">
		<MvASSIGN NAME = "l.email:mime_type"	VALUE = "{ l.mime_template:version:source }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Update_Template" PARAMETERS = "filename, source var, template var, previous_template var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.filename, l.template ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00424', 'Template not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.previous_template" VALUE = "{ l.template }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplateVersion( l.template, '', l.source, l.null, l.compile_error ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Update" PARAMETERS = "email var, original_email var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersion_Load_Code_Current( 'quote_email', l.email:code, l.managedproperty ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00422', 'Quote email not found' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update linked templates if modified
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.result"	VALUE = 1>

	<MvIF EXPR = "{ l.result AND ( strcmp( l.email:email_from, l.original_email:email_from ) NE 0 ) }">	<MvASSIGN NAME = "l.result" VALUE = "{ QuoteEmail_Update_Template( l.email:tfn_from, l.email:email_from, l.email_from_managedtemplate, l.previous_email_from ) }">	</MvIF>
	<MvIF EXPR = "{ l.result AND ( strcmp( l.email:email_to, l.original_email:email_to ) NE 0 ) }">		<MvASSIGN NAME = "l.result" VALUE = "{ QuoteEmail_Update_Template( l.email:tfn_to, l.email:email_to, l.email_to_managedtemplate, l.previous_email_to ) }">			</MvIF>
	<MvIF EXPR = "{ l.result AND ( strcmp( l.email:email_cc, l.original_email:email_cc ) NE 0 ) }">		<MvASSIGN NAME = "l.result" VALUE = "{ QuoteEmail_Update_Template( l.email:tfn_cc, l.email:email_cc, l.email_cc_managedtemplate, l.previous_email_cc ) }">			</MvIF>
	<MvIF EXPR = "{ l.result AND ( strcmp( l.email:email_subj, l.original_email:email_subj ) NE 0 ) }">	<MvASSIGN NAME = "l.result" VALUE = "{ QuoteEmail_Update_Template( l.email:tfn_subj, l.email:email_subj, l.email_subj_managedtemplate, l.previous_email_subj ) }">	</MvIF>
	<MvIF EXPR = "{ l.result AND ( strcmp( l.email:mime_type, l.original_email:mime_type ) NE 0 ) }">	<MvASSIGN NAME = "l.result" VALUE = "{ QuoteEmail_Update_Template( l.email:tfn_mime, l.email:mime_type, l.mime_type_managedtemplate, l.previous_mime_type ) }">		</MvIF>

	<MvIF EXPR = "{ NOT l.result }">
		<MvIF EXPR = "{ NOT ISNULL l.previous_email_from }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Revert_ManagedTemplateVersion( l.email_from_managedtemplate, l.previous_email_from:version, l.null ) }">	</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.previous_email_to }">		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Revert_ManagedTemplateVersion( l.email_to_managedtemplate, l.previous_email_to:version, l.null ) }">		</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.previous_email_cc }">		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Revert_ManagedTemplateVersion( l.email_cc_managedtemplate, l.previous_email_cc:version, l.null ) }">		</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.previous_email_subj }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Revert_ManagedTemplateVersion( l.email_subj_managedtemplate, l.previous_email_subj:version, l.null ) }">	</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.previous_mime_type }">		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Revert_ManagedTemplateVersion( l.mime_type_managedtemplate, l.previous_mime_type:version,	l.null ) }">	</MvIF>

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Do not create a new version if none of the settings have changed
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ QuoteEmail_Copy( l.email, l.settings ) }">

	<MvIF EXPR = "{ strcmp( miva_array_serialize( l.managedproperty:version:settings ), miva_array_serialize( l.settings ) ) EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedPropertyVersion( l.managedproperty, l.settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmailList_Load" PARAMETERS = "emails var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.emails"				VALUE = "">
	<MvASSIGN NAME = "l.email_count"		VALUE = 0>

	<MvFOREACH ITERATOR = "l.managedproperty" ARRAY = "l.managedproperties" COUNT = "{ [ g.Module_Feature_TUI_DB ].ManagedPropertyAndVersionList_Load_Type_Current( 'quote_email', l.managedproperties ) }">
		<MvASSIGN NAME = "l.email"			VALUE = "">

		<MvEVAL EXPR = "{ QuoteEmail_Copy( l.managedproperty:version:settings, l.email ) }">

		<MvASSIGN NAME = "l.email:code"		VALUE = "{ l.managedproperty:code }">
		<MvASSIGN NAME = "l.email_count"	VALUE = "{ miva_array_insert_var( l.emails, l.email, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00423', l.email_count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteItems
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteItem_Read" PARAMETERS = "quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitem:quote_id"		VALUE = "{ QuoteItems.d.quote_id }">
	<MvASSIGN NAME = "l.quoteitem:line_id"		VALUE = "{ QuoteItems.d.line_id }">
	<MvASSIGN NAME = "l.quoteitem:parent_id"	VALUE = "{ QuoteItems.d.parent_id }">
	<MvASSIGN NAME = "l.quoteitem:product_id"	VALUE = "{ QuoteItems.d.product_id }">
	<MvASSIGN NAME = "l.quoteitem:code"			VALUE = "{ QuoteItems.d.code }">
	<MvASSIGN NAME = "l.quoteitem:name"			VALUE = "{ QuoteItems.d.name }">
	<MvASSIGN NAME = "l.quoteitem:sku"			VALUE = "{ QuoteItems.d.sku }">
	<MvASSIGN NAME = "l.quoteitem:type"			VALUE = "{ QuoteItems.d.type }">
	<MvASSIGN NAME = "l.quoteitem:base_price"	VALUE = "{ QuoteItems.d.base_price }">
	<MvASSIGN NAME = "l.quoteitem:price"		VALUE = "{ QuoteItems.d.price }">
	<MvASSIGN NAME = "l.quoteitem:total"		VALUE = "{ QuoteItems.d.total }">
	<MvASSIGN NAME = "l.quoteitem:weight"		VALUE = "{ QuoteItems.d.weight }">
	<MvASSIGN NAME = "l.quoteitem:taxable"		VALUE = "{ QuoteItems.d.taxable }">
	<MvASSIGN NAME = "l.quoteitem:upsold"		VALUE = "{ QuoteItems.d.upsold }">
	<MvASSIGN NAME = "l.quoteitem:quantity"		VALUE = "{ QuoteItems.d.quantity }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Total_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME    = "Merchant"
				VIEW    = "QuoteItems"
				QUERY   = "{ 'SELECT
								SUM( total ) AS total
							  FROM ' $
								g.Store_Table_Prefix $ 'QuoteItems
							  WHERE
								quote_id = ?' }"
				FIELDS  = "l.quote_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00140', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total" VALUE = 0>

	<MvIF EXPR = "{ NOT QuoteItems.d.EOF }">
		<MvASSIGN NAME = "l.total"  VALUE = "{ QuoteItems.d.total }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteItems">
	<MvFUNCTIONRETURN VALUE = "{ l.total }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Insert" PARAMETERS = "quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.quoteitem:total }">
		<MvASSIGN NAME = "l.quoteitem:total" VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.quoteitem:price * l.quoteitem:quantity ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ QuoteItem_Insert_LowLevel( l.quoteitem ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Insert_LowLevel" PARAMETERS = "quoteitem var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitem:line_id" 			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteItems' ) }">

	<MvIF EXPR = "{ ISNULL l.quoteitem:parent_id }">	<MvASSIGN NAME = "l.quoteitem:parent_id"	VALUE = 0>							</MvIF>
	<MvIF EXPR = "{ ISNULL l.quoteitem:base_price }">	<MvASSIGN NAME = "l.quoteitem:base_price"	VALUE = "{ l.quoteitem:price }">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.quoteitem:total }">		<MvASSIGN NAME = "l.quoteitem:total"		VALUE = 0.00>						</MvIF>

	<MvQUERY NAME   = "Merchant"
			 QUERY  = "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteItems
						  ( quote_id, line_id, parent_id, product_id, code, name, sku, type, base_price, price, total, weight, taxable, upsold, quantity )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.quoteitem:quote_id, l.quoteitem:line_id, l.quoteitem:parent_id, l.quoteitem:product_id, l.quoteitem:code, l.quoteitem:name, l.quoteitem:sku,
			 		   l.quoteitem:type, l.quoteitem:base_price, l.quoteitem:price, l.quoteitem:total, l.quoteitem:weight, l.quoteitem:taxable, l.quoteitem:upsold, l.quoteitem:quantity">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00038', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemAndOptions_Insert" PARAMETERS = "quoteitem var, quoteoptions var, quoteoption_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteItem_Calculate_Total( l.quoteitem, l.quoteoptions, l.quoteoption_count ) }">		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT QuoteItem_Insert( l.quoteitem ) }">													<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT QuoteItem_InsertAttributes( l.quoteitem, l.quoteoptions, l.quoteoption_count ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_quoteitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_QuoteItem_Insert( l.module, l.quoteitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemAndOptions_Update" PARAMETERS = "original_quoteitem var, quoteitem var, quoteoptions var, quoteoption_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteItem_Calculate_Total( l.quoteitem, l.quoteoptions, l.quoteoption_count ) }">		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT QuoteItem_Update_LowLevel( l.quoteitem ) }">										<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT QuoteOption_Delete_All_Line( l.quoteitem:line_id ) }">								<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT QuoteItem_InsertAttributes( l.quoteitem, l.quoteoptions, l.quoteoption_count ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_quoteitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_QuoteItem_Update( l.module, l.original_quoteitem, l.quoteitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Update" PARAMETERS = "original_quoteitem var, quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteItem_Update_LowLevel( l.quoteitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_quoteitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_QuoteItem_Update( l.module, l.original_quoteitem, l.quoteitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Update_LowLevel" PARAMETERS = "quoteitem var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME   = "Merchant"
			 QUERY  = "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'QuoteItems
						  SET
							product_id 	= ?,
							code 		= ?,
							name 		= ?,
							sku 		= ?,
							type 		= ?,
							base_price	= ?,
							price		= ?,
							total		= ?,
							weight 		= ?,
							taxable 	= ?,
							upsold 		= ?,
							quantity 	= ?
						  WHERE
							quote_id 	= ? AND
							line_id 	= ?' }"
			 FIELDS = "l.quoteitem:product_id, l.quoteitem:code, l.quoteitem:name, l.quoteitem:sku, l.quoteitem:type, l.quoteitem:base_price,
					   l.quoteitem:price, l.quoteitem:total, l.quoteitem:weight, l.quoteitem:taxable, l.quoteitem:upsold, l.quoteitem:quantity,
					   l.quoteitem:quote_id, l.quoteitem:line_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00099', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Update_Child_Quantity" PARAMETERS = "parent_quoteitem var, original_quantity, quantity" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.quantity EQ l.original_quantity }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.quoteitem" ARRAY = "l.quoteitems" COUNT = "{ QuoteItemList_Load_Parent( l.parent_quoteitem:quote_id, l.parent_quoteitem:line_id, l.quoteitems ) }">
		<MvIF EXPR = "{ ( l.quoteitem:quantity LT l.original_quantity ) OR ( fmod( l.quoteitem:quantity, l.original_quantity ) NE 0 ) }">
			<MvCOMMENT>
			|
			| Skip processing. Child-parent quantity ratio is less than 1:1, or the ratio is not a whole number.
			|
			</MvCOMMENT>

			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.original_quoteitem" VALUE = "{ l.quoteitem }">
		<MvASSIGN NAME = "l.quoteitem:quantity" VALUE = "{ l.quantity * ( l.quoteitem:quantity / l.original_quantity ) }">

		<MvIF EXPR = "{ l.quoteitem:quantity GT 0 }">
			<MvIF EXPR = "{ NOT QuoteItem_Update( l.original_quoteitem, l.quoteitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT QuoteItem_Delete( l.quoteitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Load_Line" PARAMETERS = "quote_id, line_id, quoteitem var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteItems"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'QuoteItems
							  WHERE
								quote_id 	= ? AND
								line_id		= ?' }"
				FIELDS	= "l.quote_id, l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-QUOTES-00072', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteItems.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteItems">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00147' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ QuoteItem_Read( l.quoteitem ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteItems">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_InsertAttributes" PARAMETERS = "quoteitem var, quoteoptions var, quoteoption_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteoption_pos" VALUE = 1>

	<MvWHILE EXPR = "{ l.quoteoption_pos LE l.quoteoption_count }">
		<MvASSIGN NAME = "l.quoteoptions" INDEX = "{ l.quoteoption_pos }" MEMBER = "quote_id"	VALUE = "{ l.quoteitem:quote_id }">
		<MvASSIGN NAME = "l.quoteoptions" INDEX = "{ l.quoteoption_pos }" MEMBER = "line_id"	VALUE = "{ l.quoteitem:line_id }">

		<MvIF EXPR = "{ NOT QuoteOption_Insert( l.quoteoptions[ l.quoteoption_pos ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.quoteoption_pos" VALUE = "{ l.quoteoption_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Delete" PARAMETERS = "quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_quoteitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_QuoteItem_Delete( l.module, l.quoteitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ QuoteOptionDiscount_Delete_All_Line( l.quoteitem:line_id )	AND
								 QuoteOption_Delete_All_Line( l.quoteitem:line_id )			AND
								 QuoteItemDiscount_Delete_All_Line( l.quoteitem:line_id )	AND
								 QuoteItem_Delete_Line( l.quoteitem:line_id )				AND
								 QuoteItem_Delete_Children( l.quoteitem ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Delete_Children" PARAMETERS = "quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_quoteitem" ARRAY = "l.child_quoteitems" COUNT = "{ QuoteItemList_Load_Parent( l.quoteitem:quote_id, l.quoteitem:line_id, l.child_quoteitems ) }">
		<MvIF EXPR = "{ NOT QuoteItem_Delete( l.child_quoteitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Delete_Line" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $
							g.Store_Table_Prefix $ 'QuoteItems
						  WHERE
							line_id = ?' }"
			 FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00082', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Delete_All_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $
							g.Store_Table_Prefix $ 'QuoteItems
						  WHERE
							quote_id = ?' }"
			 FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00139', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemList_Load_Quote" PARAMETERS = "quote_id, quoteitems var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteItems"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteItems WHERE quote_id = ? ORDER BY parent_id, line_id' }"
				FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00074', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quoteitem_count"	VALUE = 0>
	<MvASSIGN NAME = "l.parent_indexes"		VALUE = "">

	<MvCOMMENT>
	|
	| Process top-level QuoteItems
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ NOT QuoteItems.d.EOF }">
		<MvIF EXPR = "{ QuoteItems.d.parent_id }">
			<MvWHILESTOP>
		</MvIF>

		<MvEVAL EXPR = "{ QuoteItem_Read( l.quoteitems[ ++l.quoteitem_count ] ) }">

		<MvASSIGN NAME = "l.parent_indexes" INDEX = "{ l.quoteitems[ l.quoteitem_count ]:line_id }" VALUE = "{ l.quoteitem_count }">

		<MvSKIP NAME = "Merchant" VIEW = "QuoteItems" ROWS = 1>
	</MvWHILE>

	<MvCOMMENT>
	|
	| Process children, end result is that the child ends up in both:
	|
	|	parent:children[]
	|	quoteitems[ following parent ]
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.last_parent_id"							VALUE = 0>
	<MvASSIGN NAME = "l.last_parent_index_correction"			VALUE = 0>
	<MvASSIGN NAME = "l.parent_index_correction"				VALUE = 0>

	<MvWHILE EXPR = "{ NOT QuoteItems.d.EOF }">
		<MvIF EXPR = "{ QuoteItems.d.parent_id NE l.last_parent_id }">
			<MvASSIGN NAME = "l.last_parent_index_correction"   VALUE = "{ l.last_parent_index_correction + l.parent_index_correction }">
			<MvASSIGN NAME = "l.last_parent_id"                 VALUE = "{ QuoteItems.d.parent_id }">
			<MvASSIGN NAME = "l.parent_index_correction"		VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT miva_element_exists( l.parent_indexes, QuoteItems.d.parent_id ) }">
			<MvEVAL EXPR = "{ QuoteItem_Read( l.quoteitems[ ++l.quoteitem_count ] ) }">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.parent_quoteitem" VARIABLE = "l.quoteitems">
				<MvDIMENSION INDEX = "{ l.parent_indexes[ QuoteItems.d.parent_id ] + l.last_parent_index_correction }">
			</MvREFERENCEARRAY>
	
			<MvEVAL EXPR = "{ QuoteItem_Read( l.parent_quoteitem:children[ ++l.parent_quoteitem:child_count ] ) }">

			<MvASSIGN NAME = "l.quoteitem_count"				VALUE = "{ miva_array_insert_ref( l.quoteitems, l.parent_quoteitem:children[ l.parent_quoteitem:child_count ], l.parent_indexes[ QuoteItems.d.parent_id ] + l.last_parent_index_correction + l.parent_index_correction + 1 ) }">
			<MvASSIGN NAME = "l.parent_index_correction"		VALUE = "{ l.parent_index_correction + 1 }">
		</MvIF> 

		<MvSKIP NAME = "Merchant" VIEW = "QuoteItems" ROWS = 1>
	 </MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteItems">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00135', l.quoteitem_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemList_Load_Parent" PARAMETERS = "quote_id, parent_id, quoteitemlist var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteItems"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteItems WHERE quote_id = ? AND parent_id = ? ORDER BY line_id' }"
				FIELDS	= "l.quote_id, l.parent_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00426', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT QuoteItems.d.EOF }">
		<MvEVAL EXPR = "{ QuoteItem_Read( l.quoteitemlist[ ++l.count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "QuoteItems" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteItems">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00427', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteOptions
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteOption_Read" PARAMETERS = "quoteoption var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteoption:id"					VALUE = "{ QuoteOptions.d.id }">
	<MvASSIGN NAME = "l.quoteoption:quote_id"			VALUE = "{ QuoteOptions.d.quote_id }">
	<MvASSIGN NAME = "l.quoteoption:line_id"			VALUE = "{ QuoteOptions.d.line_id }">
	<MvASSIGN NAME = "l.quoteoption:attr_id"			VALUE = "{ QuoteOptions.d.attr_id }">
	<MvASSIGN NAME = "l.quoteoption:attr_code"			VALUE = "{ QuoteOptions.d.attr_code }">
	<MvASSIGN NAME = "l.quoteoption:attmpat_id"			VALUE = "{ QuoteOptions.d.attmpat_id }">
	<MvASSIGN NAME = "l.quoteoption:option_id"			VALUE = "{ QuoteOptions.d.option_id }">
	<MvASSIGN NAME = "l.quoteoption:opt_code"			VALUE = "{ QuoteOptions.d.opt_code }">
	<MvASSIGN NAME = "l.quoteoption:base_price"			VALUE = "{ QuoteOptions.d.base_price }">
	<MvASSIGN NAME = "l.quoteoption:price"				VALUE = "{ QuoteOptions.d.price }">
	<MvASSIGN NAME = "l.quoteoption:weight"				VALUE = "{ QuoteOptions.d.weight }">
	<MvASSIGN NAME = "l.quoteoption:data"				VALUE = "{ QuoteOptions.d.data }">
	<MvASSIGN NAME = "l.quoteoption:data_long"			VALUE = "{ QuoteOptions.d.data_long }">

	<MvIF EXPR = "{ QuoteOptions.d.attmpat_id }">
		<MvASSIGN NAME = "l.quoteoption:attr_prompt"	VALUE = "{ QuoteOptions.d.attmpat_prompt }">
		<MvASSIGN NAME = "l.quoteoption:opt_prompt"		VALUE = "{ QuoteOptions.d.attmpopt_prompt }">
	<MvELSE>
		<MvASSIGN NAME = "l.quoteoption:attr_prompt"	VALUE = "{ QuoteOptions.d.attr_prompt }">
		<MvASSIGN NAME = "l.quoteoption:opt_prompt"		VALUE = "{ QuoteOptions.d.opt_prompt }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOption_Insert" PARAMETERS = "quoteoption var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteoption:id" 			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteOptions' ) }">

	<MvIF EXPR = "{ ISNULL l.quoteoption:base_price }">
		<MvASSIGN NAME = "l.quoteoption:base_price"	VALUE = "{ l.quoteoption:price }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteOptions
						  ( id, quote_id, line_id, attr_id, attr_code, attmpat_id, option_id, opt_code, base_price, price, weight, data, data_long )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.quoteoption:id, l.quoteoption:quote_id, l.quoteoption:line_id, l.quoteoption:attr_id, l.quoteoption:attr_code, l.quoteoption:attmpat_id,
					   l.quoteoption:option_id, l.quoteoption:opt_code, l.quoteoption:base_price, l.quoteoption:price, l.quoteoption:weight, l.quoteoption:data,
					   l.quoteoption:data_long">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00092', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOptionList_Load_Line" PARAMETERS = "line_id, quoteoptions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteOptions"
				QUERY	= "{ 'SELECT
								qo.*,
								ats.prompt	AS attr_prompt,
								ata.prompt	AS attmpat_prompt,
								opt.prompt	AS opt_prompt,
								ato.prompt	AS attmpopt_prompt,
								' $ [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ats.disp_order',	'0' ) $ ' AS ats_disp_order,
								' $ [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ata.disporder',	'0' ) $ ' AS ata_disp_order,
								' $ [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'opt.disp_order',	'0' ) $ ' AS opt_disp_order,
								' $ [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ato.disporder',	'0' ) $ ' AS ato_disp_order
							  FROM ' $
								g.Store_Table_Prefix $ 'QuoteOptions qo
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Attributes ats ON ats.id = qo.attr_id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'AttributeTemplateAttrs ata ON ata.id = qo.attmpat_id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Options opt ON opt.id = qo.option_id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'AttributeTemplateOptions ato ON ato.id = qo.option_id
							  WHERE
								qo.line_id = ?
							  ORDER BY
								ats_disp_order, ata_disp_order, qo.attr_code, opt_disp_order, ato_disp_order, qo.opt_code, qo.id' }"
				FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00080', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quoteoption_count"	VALUE = 0>

	<MvWHILE EXPR = "{ NOT QuoteOptions.d.EOF }">
		<MvASSIGN NAME = "l.quoteoption_count" VALUE = "{ l.quoteoption_count + 1 }">

		<MvEVAL EXPR = "{ QuoteOption_Read( l.quoteoptions[ l.quoteoption_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "QuoteOptions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteOptions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00081', l.quoteoption_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOption_Delete_All_Line" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME   = "Merchant"
			 QUERY  = "{ 'DELETE FROM ' $
							g.Store_Table_Prefix $ 'QuoteOptions
						  WHERE
							line_id = ?' }"
			 FIELDS = "l.line_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00083', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOption_Delete_All_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $
							g.Store_Table_Prefix $ 'QuoteOptions
						  WHERE
							quote_id = ?' }"
			 FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00138', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteItemDiscounts
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteItemDiscount_Read" PARAMETERS = "quoteitemdiscount var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitemdiscount:quote_id"	VALUE = "{ QuoteItemDiscounts.d.quote_id }">
	<MvASSIGN NAME = "l.quoteitemdiscount:line_id"	VALUE = "{ QuoteItemDiscounts.d.line_id }">
	<MvASSIGN NAME = "l.quoteitemdiscount:pgrp_id"	VALUE = "{ QuoteItemDiscounts.d.pgrp_id }">
	<MvASSIGN NAME = "l.quoteitemdiscount:priority"	VALUE = "{ QuoteItemDiscounts.d.priority }">
	<MvASSIGN NAME = "l.quoteitemdiscount:display"	VALUE = "{ QuoteItemDiscounts.d.display }">
	<MvASSIGN NAME = "l.quoteitemdiscount:descrip"	VALUE = "{ QuoteItemDiscounts.d.descrip }">
	<MvASSIGN NAME = "l.quoteitemdiscount:discount"	VALUE = "{ QuoteItemDiscounts.d.discount }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemDiscount_Insert" PARAMETERS = "quoteitemdiscount var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts
					      ( quote_id, line_id, pgrp_id, priority, display, descrip, discount )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.quoteitemdiscount:quote_id, l.quoteitemdiscount:line_id, l.quoteitemdiscount:pgrp_id,
					   l.quoteitemdiscount:priority, l.quoteitemdiscount:display, l.quoteitemdiscount:descrip,
					   l.quoteitemdiscount:discount">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00391', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemDiscountList_Load_Line" PARAMETERS = "line_id, quoteitemdiscounts var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteItemDiscounts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts WHERE line_id = ? ORDER BY priority DESC, pgrp_id ASC' }"
				FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00392', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quoteitemdiscount_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT QuoteItemDiscounts.d.EOF }">
		<MvEVAL EXPR = "{ QuoteItemDiscount_Read( l.quoteitemdiscounts[ ++l.quoteitemdiscount_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "QuoteItemDiscounts" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteItemDiscounts">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00393', l.quoteitemdiscount_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemDiscount_Delete_All_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts WHERE quote_id = ?' }"
			 FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00394', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItemDiscount_Delete_All_Line" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteItemDiscounts WHERE line_id = ?' }"
			 FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00395', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteOptionDiscounts
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteOptionDiscount_Read" PARAMETERS = "quoteoptiondiscount var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteoptiondiscount:quote_id"		VALUE = "{ QuoteOptionDiscounts.d.quote_id }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:line_id"		VALUE = "{ QuoteOptionDiscounts.d.line_id }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:lineopt_id"		VALUE = "{ QuoteOptionDiscounts.d.lineopt_id }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:attr_id"		VALUE = "{ QuoteOptionDiscounts.d.attr_id }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:attmpat_id"		VALUE = "{ QuoteOptionDiscounts.d.attmpat_id }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:pgrp_id"		VALUE = "{ QuoteOptionDiscounts.d.pgrp_id }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:priority"		VALUE = "{ QuoteOptionDiscounts.d.priority }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:display"		VALUE = "{ QuoteOptionDiscounts.d.display }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:descrip"		VALUE = "{ QuoteOptionDiscounts.d.descrip }">
	<MvASSIGN NAME = "l.quoteoptiondiscount:discount"		VALUE = "{ QuoteOptionDiscounts.d.discount }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOptionDiscount_Insert" PARAMETERS = "quoteoptiondiscount var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts
					      ( quote_id, line_id, lineopt_id, attr_id, attmpat_id, pgrp_id, priority, display, descrip, discount )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.quoteoptiondiscount:quote_id, l.quoteoptiondiscount:line_id, l.quoteoptiondiscount:lineopt_id,
			 		   l.quoteoptiondiscount:attr_id, l.quoteoptiondiscount:attmpat_id, l.quoteoptiondiscount:pgrp_id,
			 		   l.quoteoptiondiscount:priority, l.quoteoptiondiscount:display, l.quoteoptiondiscount:descrip,
			 		   l.quoteoptiondiscount:discount">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00396', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOptionDiscountList_Load_Option" PARAMETERS = "line_id, attr_id, attmpat_id, quoteoptiondiscounts var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteOptionDiscounts"
				QUERY	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts
							  WHERE
								line_id		= ?		AND
								attr_id		= ?		AND
								attmpat_id	= ?
							  ORDER BY
								priority DESC, pgrp_id ASC' }"
				FIELDS	= "l.line_id, l.attr_id, l.attmpat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00397', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quoteoptiondiscount_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT QuoteOptionDiscounts.d.EOF }">
		<MvEVAL EXPR = "{ QuoteOptionDiscount_Read( l.quoteoptiondiscounts[ ++l.quoteoptiondiscount_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "QuoteOptionDiscounts" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteOptionDiscounts">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00398', l.quoteoptiondiscount_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOptionDiscountList_Load_LineOption_ID" PARAMETERS = "lineopt_id, quoteoptiondiscounts var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "QuoteOptionDiscounts"
				QUERY	= "{ 'SELECT
								*
							  FROM
								' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts
							  WHERE
								lineopt_id = ?
							  ORDER BY
								priority DESC, pgrp_id ASC' }"
				FIELDS	= "l.lineopt_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00414', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quoteoptiondiscount_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT QuoteOptionDiscounts.d.EOF }">
		<MvEVAL EXPR = "{ QuoteOptionDiscount_Read( l.quoteoptiondiscounts[ ++l.quoteoptiondiscount_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "QuoteOptionDiscounts" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteOptionDiscounts">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00415', l.quoteoptiondiscount_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOptionDiscount_Delete_All_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts WHERE quote_id = ?' }"
			 FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00399', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteOptionDiscount_Delete_All_Line" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteOptionDiscounts WHERE line_id = ?' }"
			 FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00400', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_Quotes
|
</MvCOMMENT>

<MvFUNCTION NAME = "Quote_Read" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quote:id"			VALUE = "{ Quotes.d.id }">
	<MvASSIGN NAME = "l.quote:basket_id"	VALUE = "{ Quotes.d.basket_id }">
	<MvASSIGN NAME = "l.quote:cust_id"		VALUE = "{ Quotes.d.cust_id }">
	<MvASSIGN NAME = "l.quote:order_id" 	VALUE = "{ Quotes.d.order_id }">
	<MvASSIGN NAME = "l.quote:code"			VALUE = "{ Quotes.d.code }">
	<MvASSIGN NAME = "l.quote:status"		VALUE = "{ Quotes.d.status }">
	<MvASSIGN NAME = "l.quote:email"		VALUE = "{ Quotes.d.email }">
	<MvASSIGN NAME = "l.quote:fname"		VALUE = "{ Quotes.d.fname }">
	<MvASSIGN NAME = "l.quote:lname"		VALUE = "{ Quotes.d.lname }">
	<MvASSIGN NAME = "l.quote:phone"		VALUE = "{ Quotes.d.phone }">
	<MvASSIGN NAME = "l.quote:zip"			VALUE = "{ Quotes.d.zip }">
	<MvASSIGN NAME = "l.quote:country"		VALUE = "{ Quotes.d.country }">
	<MvASSIGN NAME = "l.quote:comment"		VALUE = "{ Quotes.d.comment }">
	<MvASSIGN NAME = "l.quote:created"		VALUE = "{ Quotes.d.created }">
	<MvASSIGN NAME = "l.quote:terms" 		VALUE = "{ Quotes.d.terms }">
	<MvASSIGN NAME = "l.quote:expires" 		VALUE = "{ Quotes.d.expires }">
	<MvASSIGN NAME = "l.quote:ship_mod"		VALUE = "{ Quotes.d.ship_mod }">
	<MvASSIGN NAME = "l.quote:ship_meth"	VALUE = "{ Quotes.d.ship_meth }">
	<MvASSIGN NAME = "l.quote:ship_desc"	VALUE = "{ Quotes.d.ship_desc }">
	<MvASSIGN NAME = "l.quote:ship_amt"		VALUE = "{ Quotes.d.ship_amt }">
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_CreateCode" PARAMETERS = "sequential" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.characters" 	VALUE = "0123456789ABCDEFGHJKLMNPQRSTUVWX">

	<MvFOR INDEX = "l.pos" COUNT = "{ 16 }">
		<MvASSIGN NAME = "l.bitshift" 	VALUE = "{ ( l.pos - 1 ) * 2 }">
		<MvASSIGN NAME = "l.bitmask" 	VALUE = "{ 3 BITSL l.bitshift }">
		<MvASSIGN NAME = "l.code" 		VALUE = "{ l.code $ substring_var( l.characters, ( ( ( asciivalue( crypto_rand_bytes( 1 ) ) BITAND 28 ) BITOR ( ( l.sequential BITAND l.bitmask ) BITSR l.bitshift ) ) + 1 ), 1 ) }">
	</MvFOR>

	<MvFUNCTIONRETURN VALUE = "{ substring( l.code, 1, 4 ) $ '-' $ substring( l.code, 5, 4 ) $ '-' $ substring( l.code, 9, 4 ) $ '-' $ substring( l.code, 13, 4 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Copy_Basket" PARAMETERS = "quote" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ [ g.Module_Library_DB ].BasketItemList_Load_Basket( g.Basket:basket_id, l.basketitems ) }">
		<MvIF EXPR = "{ l.basketitem:parent_id }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT Quote_Copy_BasketItem( l.quote, l.basketitem, 0, l.quoteitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.child_basketitem" ARRAY = "l.basketitem:children" COUNT = "{ l.basketitem:child_count }">
			<MvIF EXPR = "{ NOT Quote_Copy_BasketItem( l.quote, l.child_basketitem, l.quoteitem:line_id, l.child_quoteitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Copy_BasketItem" PARAMETERS = "quote var, basketitem var, parent_id, quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitem" 					VALUE = "{ l.basketitem }">
	<MvASSIGN NAME = "l.quoteitem:quote_id" 		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.quoteitem:parent_id" 		VALUE = "{ l.parent_id }">

	<MvIF EXPR = "{ NOT QuoteItem_Insert( l.quoteitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketoptions" COUNT = "{ [ g.Module_Library_DB ].BasketOptionList_Load_Line( l.basketitem:line_id, l.basketoptions ) }">
		<MvASSIGN NAME = "l.quoteoption"			VALUE = "{ l.basketoption }">
		<MvASSIGN NAME = "l.quoteoption:line_id"	VALUE = "{ l.quoteitem:line_id }">
		<MvASSIGN NAME = "l.quoteoption:quote_id" 	VALUE = "{ l.quote:id }">

		<MvIF EXPR = "{ NOT QuoteOption_Insert( l.quoteoption ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteList_Load_Basket" PARAMETERS = "basket_id, quotes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Quotes"
				QUERY 	= "{ 'SELECT
								q.*
							  FROM ' $
								g.Store_Table_Prefix $ 'Quotes q, ' $
								g.Store_Table_Prefix $ 'QuoteXBasket qb
							  WHERE
								qb.basket_id = ? AND
								q.id		 = qb.quote_id' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00410', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT Quotes.d.EOF }">
		<MvEVAL EXPR = "{ Quote_Read( l.quotes[ ++l.quote_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "Quotes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00411', l.quote_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Create" PARAMETERS = "module var, quote var, custom_fields var, custom_fields_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quote:status"	VALUE = 0>
	<MvASSIGN NAME = "l.quote:order_id" VALUE = 0>

	<MvIF EXPR = "{ NOT Quote_Insert( l.quote ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.quote:include }">
		<MvIF EXPR = "{ NOT Quote_Copy_Basket( l.quote ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.new_field" ARRAY = "l.custom_fields" COUNT = "{ l.custom_fields_count }">
		<MvASSIGN NAME = "l.new_field:quote_id" VALUE = "{ l.quote:id }">

		<MvIF EXPR = "{ NOT QuoteCustomFieldValue_Insert( l.new_field ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( 'ADMIN', l.email ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.itemcount" VALUE = "{ QuoteItemList_Load_Quote( l.quote:id, l.quote:items ) }">

	<MvIF EXPR = "{ NOT QuoteComponentInitialize_QuoteItems( l.quote:items, l.itemcount ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.email:enabled }">
		<MvIF EXPR = "{ NOT QuoteEmail_SendEmail( l.module, 'ADMIN', l.email, l.quote ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quoteemail_sent_admin', 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_Load_Code( 'REQUEST_CUSTOMER', l.email ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.email:enabled AND [ g.Module_Library_Utilities ].Email_Validate( l.quote:email ) }">
		<MvIF EXPR = "{ NOT QuoteEmail_SendEmail( l.module, 'REQUEST_CUSTOMER', l.email, l.quote ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'quoteemail_sent_request_customer', 1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Update" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME   = "Merchant"
			 QUERY  = "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'Quotes
						  SET
							code 		= ?,
							basket_id 	= ?,
							cust_id		= ?,
							order_id 	= ?,
							status 		= ?,
							email 		= ?,
							fname 		= ?,
							lname		= ?,
							phone 		= ?,
							zip 		= ?,
							country		= ?,
							comment 	= ?,
							created 	= ?,
							terms		= ?,
							expires 	= ?,
							ship_mod 	= ?,
							ship_meth 	= ?,
							ship_desc 	= ?,
							ship_amt 	= ?
						  WHERE
							id 			= ?' }"
			 FIELDS = "l.quote:code, l.quote:basket_id, l.quote:cust_id, l.quote:order_id, l.quote:status, l.quote:email, l.quote:fname,
					   l.quote:lname, l.quote:phone, l.quote:zip, l.quote:country, l.quote:comment, l.quote:created, l.quote:terms,
					   l.quote:expires, l.quote:ship_mod, l.quote:ship_meth, l.quote:ship_desc, l.quote:ship_amt,
					   l.quote:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00034', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Insert" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quote:id" 			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'Quotes' ) }">
	<MvASSIGN NAME = "l.quote:code"			VALUE = "{ Quote_CreateCode( l.quote:id ) }">
	<MvASSIGN NAME = "l.quote:created"		VALUE = "{ s.dyn_time_t }">

	<MvIF EXPR = "{ ISNULL l.quote:expires }">
		<MvASSIGN NAME = "l.quote:expires"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.quote:ship_amt }">
		<MvASSIGN NAME = "l.quote:ship_amt"	VALUE = 0.00>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'Quotes
						  ( id, basket_id, cust_id, order_id, code, status, email, fname, lname, phone, zip, country, comment, created, terms, expires, ship_mod, ship_meth, ship_desc, ship_amt )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.quote:id, l.quote:basket_id, l.quote:cust_id, l.quote:order_id, l.quote:code, l.quote:status, l.quote:email, l.quote:fname,
			 		   l.quote:lname, l.quote:phone, l.quote:zip, l.quote:country, l.quote:comment, l.quote:created, l.quote:terms, l.quote:expires,
			 		   l.quote:ship_mod, l.quote:ship_meth, l.quote:ship_desc, l.quote:ship_amt">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00035', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Delete" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteOptionDiscount_Delete_All_Quote( l.quote:id )		OR
					NOT QuoteOption_Delete_All_Quote( l.quote:id )				OR
					NOT QuoteItemDiscount_Delete_All_Quote( l.quote:id )		OR
					NOT QuoteItem_Delete_All_Quote( l.quote:id )				OR
					NOT QuoteXBasket_Delete_Quote( l.quote:id )					OR
					NOT QuoteCustomFieldValue_Delete_All_Quote( l.quote:id )	OR
					NOT Quote_Delete_ID( l.quote:id )							OR
					NOT QuoteNote_Delete_All_Quote( l.quote:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Delete_ID" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $
							g.Store_Table_Prefix $ 'Quotes
						  WHERE
							id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00088', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Total" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ QuoteItem_Total_Quote( l.quote:id ) + l.quote:ship_amt }">
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Load_Code" PARAMETERS = "code, quote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Quotes"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'Quotes
							  WHERE ' $
								[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00032', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ Quotes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00033' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Quote_Read( l.quote ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Load_ID" PARAMETERS = "id, quote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Quotes"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'Quotes
							  WHERE
								id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00058', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ Quotes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00059' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Quote_Read( l.quote ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteComponentInitialize_QuoteItems" PARAMETERS = "quoteitems var, quoteitem_count" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.quoteitem" ARRAY = "l.quoteitems" COUNT = "{ l.quoteitem_count }">
		<MvIF EXPR = "{ NOT QuoteComponentInitialize_QuoteItem( l.quoteitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteComponentInitialize_QuoteItem" PARAMETERS = "quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitem:subtotal"						VALUE = "{ l.quoteitem:price * l.quoteitem:quantity }">
	<MvASSIGN NAME = "l.quoteitem:formatted_price"				VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quoteitem:price ) }">
	<MvASSIGN NAME = "l.quoteitem:formatted_total"				VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quoteitem:total ) }">
	<MvASSIGN NAME = "l.quoteitem:formatted_subtotal"			VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quoteitem:subtotal ) }">
	<MvASSIGN NAME = "l.quoteitem:formatted_weight"				VALUE = "{ [ g.Module_Library_Utilities ].Format_Weight( l.quoteitem:weight ) }">
	<MvASSIGN NAME = "l.quoteitem:option_count"					VALUE = "{ QuoteOptionList_Load_Line( l.quoteitem:line_id, l.quoteitem:options ) }">

	<MvFOREACH ITERATOR = "l.quoteoption" ARRAY = "l.quoteitem:options" COUNT = "{ l.quoteitem:option_count }">
		<MvIF EXPR = "{ len( l.quoteoption:data ) }">
			<MvASSIGN NAME = "l.quoteoption:data"				VALUE = "{ encodeentities( l.quoteoption:data ) }">
			<MvASSIGN NAME = "l.quoteoption:data"				VALUE = "{ glosub( l.quoteoption:data, asciichar( 10 ), '<br>' ) }">
		<MvELSEIF EXPR = "{ len( l.quoteoption:data_long ) }">
			<MvASSIGN NAME = "l.quoteoption:data_long"			VALUE = "{ encodeentities( l.quoteoption:data_long ) }">
			<MvASSIGN NAME = "l.quoteoption:data_long"			VALUE = "{ glosub( l.quoteoption:data_long, asciichar( 10 ), '<br>' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.quoteoption:subtotal"				VALUE = "{ l.quoteoption:price * l.quoteitem:quantity }">
		<MvASSIGN NAME = "l.quoteoption:formatted_price"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quoteoption:price ) }">
		<MvASSIGN NAME = "l.quoteoption:formatted_subtotal"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.quoteoption:subtotal ) }">
		<MvASSIGN NAME = "l.quoteoption:formatted_weight"		VALUE = "{ [ g.Module_Library_Utilities ].Format_Weight( l.quoteoption:weight ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteComponentInitialize_CustomFields" PARAMETERS = "quote_id, custom_fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.custom_fields" VALUE = "">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ QuoteCustomFieldValueList_Load_Quote( l.quote_id, l.fields ) }">
		<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.pos }" 		VALUE = "{ l.field }">

		<MvIF EXPR = "{ len( l.field:data ) }">
			<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.pos }" MEMBER = "data"		VALUE = "{ encodeentities( l.field:data ) }">
			<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.pos }" MEMBER = "data"		VALUE = "{ glosub( l.field:data, asciichar( 10 ), '<br>' ) }">
		<MvELSEIF EXPR = "{ len( l.field:data_long ) }">
			<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.pos }" MEMBER = "data_long"	VALUE = "{ encodeentities( l.field:data_long ) }">
			<MvASSIGN NAME = "l.custom_fields" INDEX = "{ l.pos }" MEMBER = "data_long"	VALUE = "{ glosub( l.field:data_long, asciichar( 10 ), '<br>' ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Count_Customer" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Quotes"
				QUERY	= "{ 'SELECT COUNT( * ) AS quote_count FROM ' $ g.Store_Table_Prefix $ 'Quotes WHERE cust_id = ?' }"
				FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00301', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ Quotes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00302' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote_count" VALUE = "{ Quotes.d.quote_count }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00303', l.quote_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteList_Load_Customer_Offset" PARAMETERS = "cust_id, sort_by, offset, max, nextoffset var, quotes var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.QuoteList_Load_Customer_Offset_Cust_ID"	VALUE = "{ l.cust_id }">
	<MvASSIGN NAME = "l.sort" 									VALUE = "id ASC">

	<MvIF EXPR = "{ l.sort_by EQ 'QuoIDAsc' }">			<MvASSIGN NAME = "l.sort" VALUE = "id ASC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoOrIDAsc' }">	<MvASSIGN NAME = "l.sort" VALUE = "order_id ASC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoDtAsc' }">		<MvASSIGN NAME = "l.sort" VALUE = "created ASC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoExAsc' }">		<MvASSIGN NAME = "l.sort" VALUE = "expires ASC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoStAsc' }">		<MvASSIGN NAME = "l.sort" VALUE = "status ASC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoIDDesc' }">	<MvASSIGN NAME = "l.sort" VALUE = "id DESC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoOrIDDesc' }">	<MvASSIGN NAME = "l.sort" VALUE = "order_id DESC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoDtDesc' }">	<MvASSIGN NAME = "l.sort" VALUE = "created DESC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoExDesc' }">	<MvASSIGN NAME = "l.sort" VALUE = "expires DESC">
	<MvELSEIF EXPR = "{ l.sort_by EQ 'QuoStDesc' }">	<MvASSIGN NAME = "l.sort" VALUE = "status DESC">
	</MvIF>
	
	<MvIF EXPR = "{ l.max EQ 0 }">	<MvASSIGN NAME = "l.limit" VALUE = 0>
	<MvELSE>						<MvASSIGN NAME = "l.limit" VALUE = "{ l.max + 1 }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Quotes',
																			 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'Quotes WHERE cust_id = ? ORDER BY ' $ l.sort,
																			 'g.QuoteList_Load_Customer_Offset_Cust_ID',
																			 l.offset, l.limit ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00304', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote_count" VALUE = 0>

	<MvWHILE EXPR = "{ ( NOT Quotes.d.EOF ) AND ( ( l.max EQ 0 ) OR ( l.quote_count LT l.max ) ) }">
		<MvEVAL EXPR = "{ Quote_Read( l.quotes[ ++l.quote_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "Quotes" ROWS = 1>
	</MvWHILE>

	<MvIF EXPR = "{ Quotes.d.EOF }">	<MvASSIGN NAME = "l.nextoffset"	VALUE = 0>
	<MvELSE>							<MvASSIGN NAME = "l.nextoffset"	VALUE = "{ l.offset + l.quote_count }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Quotes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00305', l.quote_count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteXExpiredEmail
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteXExpiredEmail_Read" PARAMETERS = "quotexexpiredemail var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quotexexpiredemail:quote_id"	VALUE = "{ QuoteXExpiredEmail.d.quote_id }">
	<MvASSIGN NAME = "l.quotexexpiredemail:email_code"	VALUE = "{ QuoteXExpiredEmail.d.email_code }">
	<MvASSIGN NAME = "l.quotexexpiredemail:sentdate"	VALUE = "{ QuoteXExpiredEmail.d.sentdate }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXExpiredEmail_Insert" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteXExpiredEmail 
			 			  ( quote_id, email_code, sentdate )
			 			  VALUES
			 			  ( ?, ?, ? )' }"
			 FIELDS = "l.quote:quote_id, l.quote:email_code, l.quote:sentdate">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00306', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXExpiredEmail_Delete" PARAMETERS = "quote_id, email_code" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' 
			 				$ g.Store_Table_Prefix $ 'QuoteXExpiredEmail 
			 			  WHERE 
			 			  	quote_id	= ? AND 
			 			  	email_code	= ?' }"
			 FIELDS = "l.quote_id, l.email_code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00307', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteXReminderEmail
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteXReminderEmail_Read" PARAMETERS = "quotexreminderemail var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quotexreminderemail:quote_id"	VALUE = "{ QuoteXReminderEmail.d.quote_id }">
	<MvASSIGN NAME = "l.quotexreminderemail:email_code"	VALUE = "{ QuoteXReminderEmail.d.email_code }">
	<MvASSIGN NAME = "l.quotexreminderemail:sentdate"	VALUE = "{ QuoteXReminderEmail.d.sentdate }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXReminderEmail_Load" PARAMETERS = "quote_id, email_code, quotexreminderemail var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteXReminderEmail"
				QUERY 	= "{ 'SELECT 
			 					* 
			 				  FROM 
			 				  	' $ g.Store_Table_Prefix $ 'QuoteXReminderEmail
			 				  WHERE 
			 				  	quote_id	= ? AND 
			 				  	email_code	= ?' }"
				FIELDS	= "l.quote_id, l.email_code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00308', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ QuoteXReminderEmail.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteXReminderEmail">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00309' ) }">
	</MvIF>
	
	<MvEVAL EXPR = "{ QuoteXReminderEmail_Read( l.quotexreminderemail ) }">
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteXReminderEmail">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXReminderEmail_Insert" PARAMETERS = "quotexreminderemail var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteXReminderEmail
			 			  ( quote_id, email_code, sentdate )
			 			  VALUES
			 			  ( ?, ?, ? )' }"
			 FIELDS = "l.quotexreminderemail:quote_id, l.quotexreminderemail:email_code, l.quotexreminderemail:sentdate">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00310', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteXReminderEmail_Update" PARAMETERS = "quote_id, email_code, sentdate" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'QuoteXReminderEmail
			 			  SET
			 			  	sentdate	= ?
			 			  WHERE
			 			  	quote_id	= ? AND
			 			  	email_code	= ?' }"
			 FIELDS = "l.sentdate, l.quote_id, l.email_code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00311', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_QuoteNotes
|
</MvCOMMENT>

<MvFUNCTION NAME = "QuoteNote_Read" PARAMETERS = "quotenote var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quotenote:id"			VALUE = "{ QuoteNotes.d.id }">
	<MvASSIGN NAME = "l.quotenote:quote_id"		VALUE = "{ QuoteNotes.d.quote_id }">
	<MvASSIGN NAME = "l.quotenote:notetext"		VALUE = "{ QuoteNotes.d.notetext }">
	<MvASSIGN NAME = "l.quotenote:pub"			VALUE = "{ QuoteNotes.d.pub }">
	<MvASSIGN NAME = "l.quotenote:source"		VALUE = "{ QuoteNotes.d.source }">
	<MvASSIGN NAME = "l.quotenote:source_id"	VALUE = "{ QuoteNotes.d.source_id }">
	<MvASSIGN NAME = "l.quotenote:dtstamp"		VALUE = "{ QuoteNotes.d.dtstamp }">

	<MvIF EXPR = "{ l.quotenote:source EQ 'A' }">										
		<MvIF EXPR = "{ NOT ISNULL QuoteNotes.d.user_login }">	<MvASSIGN NAME = "l.quotenote:user" VALUE = "{ QuoteNotes.d.user_login }"> 
		<MvELSE>												<MvASSIGN NAME = "l.quotenote:user" VALUE = "<Deleted>">
		</MvIF>
	<MvELSEIF EXPR = "{ l.quotenote:source EQ 'C' }">
		<MvIF EXPR = "{ NOT ISNULL QuoteNotes.d.cust_login }">	<MvASSIGN NAME = "l.quotenote:user" VALUE = "{ QuoteNotes.d.cust_login }">
		<MvELSEIF EXPR = "{ l.quotenote:source_id }">			<MvASSIGN NAME = "l.quotenote:user" VALUE = "<Deleted>">
		<MvELSE>												<MvASSIGN NAME = "l.quotenote:user" VALUE = "<No Customer Account>">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.quotenote:user" VALUE = "<Unknown Source>">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNote_Load_ID" PARAMETERS = "id, quotenote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteNotes"
				QUERY 	= "{ 'SELECT
								qn.*,
								cust.login	AS cust_login,
								usr.name	AS user_login
							  FROM '
							  	$ g.Store_Table_Prefix $ 'QuoteNotes qn
							  	LEFT OUTER JOIN Users usr ON usr.id = qn.source_id AND qn.source = \'A\'
							  	LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Customers cust ON cust.id = qn.source_id AND qn.source = \'C\'
							  WHERE
							  	qn.id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00312', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvIF EXPR = "{ QuoteNotes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteNotes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00313' ) }">
	</MvIF>
	
	<MvEVAL EXPR = "{ QuoteNote_Read( l.quotenote ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteNotes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNoteList_Load_Quote" PARAMETERS = "quote_id, quotenotes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteNotes"
				QUERY 	= "{ 'SELECT
								qn.*,
								cust.login	AS cust_login,
								usr.name	AS user_login
							  FROM
							  	' $ g.Store_Table_Prefix $ 'QuoteNotes qn
							  	LEFT OUTER JOIN Users usr ON usr.id = qn.source_id AND qn.source = \'A\'
							  	LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Customers cust ON cust.id = qn.source_id AND qn.source = \'C\'
							  WHERE
							  	qn.quote_id = ?
							  ORDER BY 
							  	qn.dtstamp DESC, id DESC' }"
				FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00354', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT QuoteNotes.d.EOF }">
		<MvEVAL EXPR = "{ QuoteNote_Read( l.quotenotes[ ++l.count ] ) }">
	
		<MvSKIP NAME = "Merchant" VIEW = "QuoteNotes" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteNotes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00355', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNoteList_Load_Quote_Public" PARAMETERS = "quote_id, quotenotes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "QuoteNotes"
				QUERY 	= "{ 'SELECT
								qn.*,
								cust.login	AS cust_login,
								usr.name	AS user_login
							  FROM
							  	' $ g.Store_Table_Prefix $ 'QuoteNotes qn
							  	LEFT OUTER JOIN Users usr ON usr.id = qn.source_id AND qn.source = \'A\'
							  	LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Customers cust ON cust.id = qn.source_id AND qn.source = \'C\'
							  WHERE
							  	qn.quote_id	= ? AND
							  	qn.pub		= 1
							  ORDER BY 
							  	qn.dtstamp DESC, id DESC' }"
				FIELDS	= "l.quote_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00314', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT QuoteNotes.d.EOF }">
		<MvEVAL EXPR = "{ QuoteNote_Read( l.quotenotes[ ++l.count ] ) }">
	
		<MvSKIP NAME = "Merchant" VIEW = "QuoteNotes" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "QuoteNotes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-QUOTES-00315', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNote_Insert" PARAMETERS = "quotenote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quotenote:id"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'QuoteNotes' ) }">

	<MvIF EXPR = "{ ISNULL l.quotenote:source_id }">
		<MvASSIGN NAME = "l.quotenote:source_id"	VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'QuoteNotes
			 			  ( id, quote_id, notetext, pub, source, source_id, dtstamp )
			 			  VALUES
			 			  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.quotenote:id, l.quotenote:quote_id, l.quotenote:notetext, l.quotenote:pub, l.quotenote:source, l.quotenote:source_id, l.quotenote:dtstamp">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00316', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNote_Update" PARAMETERS = "quotenote var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'QuoteNotes
			 			  SET
			 				notetext	= ?,
			 				pub			= ?,
			 				source		= ?,
			 				source_id	= ?,
			 				dtstamp		= ?
			 			  WHERE
			 				id			= ?' }"
			 FIELDS = "l.quotenote:notetext, l.quotenote:pub, l.quotenote:source, l.quotenote:source_id, l.quotenote:dtstamp,
			 		   l.quotenote:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00317', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNote_Delete" PARAMETERS = "note_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteNotes WHERE id = ?' }"
			 FIELDS = "l.note_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00326', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNote_Delete_All_Quote" PARAMETERS = "quote_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'QuoteNotes WHERE quote_id = ?' }"
			 FIELDS = "l.quote_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00323', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Quote_Copy_QuoteItem" PARAMETERS = "quote var, original_quoteitem var, parent_id, quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitem"					VALUE = "{ l.original_quoteitem }">
	<MvASSIGN NAME = "l.quoteitem:quote_id"			VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.quoteitem:parent_id"		VALUE = "{ l.parent_id }">

	<MvIF EXPR = "{ NOT QuoteItem_Insert( l.quoteitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.quoteoption" ARRAY = "l.quoteoptions" COUNT = "{ QuoteOptionList_Load_Line( l.original_quoteitem:line_id, l.quoteoptions ) }">
		<MvASSIGN NAME = "l.quoteoption:quote_id"	VALUE = "{ l.quote:id }">
		<MvASSIGN NAME = "l.quoteoption:line_id"	VALUE = "{ l.quoteitem:line_id }">

		<MvIF EXPR = "{ NOT QuoteOption_Insert( l.quoteoption ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Convert_QuoteItem" PARAMETERS = "quote var, order var, orderinfo var, quoteitem var, parent_id, discount_pricegroup_id_lookup var, discount_pricegroup_ids var, discount_pricegroup_id_count var, orderitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteoption_count" 			VALUE = "{ QuoteOptionList_Load_Line( l.quoteitem:line_id, l.quoteoptions ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant_WithOptions( l.quoteitem, l.quoteoptions, l.quoteoption_count, l.product, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.orderitem"					VALUE = "">
	<MvASSIGN NAME = "l.orderitem:order_id"			VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "l.orderitem:line_id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'BasketItems' ) }">
	<MvASSIGN NAME = "l.orderitem:parent_id"		VALUE = "{ l.parent_id }">
	<MvASSIGN NAME = "l.orderitem:product_id"		VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.orderitem:code"				VALUE = "{ l.quoteitem:code }">
	<MvASSIGN NAME = "l.orderitem:name"				VALUE = "{ l.quoteitem:name }">
	<MvASSIGN NAME = "l.orderitem:sku"				VALUE = "{ l.quoteitem:sku }">
	<MvASSIGN NAME = "l.orderitem:type"				VALUE = "{ l.quoteitem:type }">
	<MvASSIGN NAME = "l.orderitem:base_price"		VALUE = "{ l.quoteitem:base_price }">
	<MvASSIGN NAME = "l.orderitem:price"			VALUE = "{ l.quoteitem:base_price }">
	<MvASSIGN NAME = "l.orderitem:weight"			VALUE = "{ l.quoteitem:weight }">
	<MvASSIGN NAME = "l.orderitem:taxable"			VALUE = "{ l.quoteitem:taxable }">
	<MvASSIGN NAME = "l.orderitem:upsold"			VALUE = "{ l.quoteitem:upsold }">
	<MvASSIGN NAME = "l.orderitem:quantity"			VALUE = "{ l.quoteitem:quantity }">
	<MvASSIGN NAME = "l.orderitem:status"			VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:shpmnt_id" 		VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:rma_id"			VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:group_id"			VALUE = ""> <MvCOMMENT> Set group_id to a blank value so the converted line items will not be grouped together (Bugzilla Bug #29864) </MvCOMMENT>
	<MvASSIGN NAME = "l.orderitem:status"			VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:total"			VALUE = "{ l.quoteitem:total }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Insert_LowLevel( l.orderitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Products( l.orderitem:quantity ) }">

	<MvIF EXPR = "{ l.product:id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.variant_id, 0 - l.orderitem:quantity ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.product:id, l.product:name, l.orderitem:quantity ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.quoteoption" ARRAY = "l.quoteoptions" COUNT = "{ l.quoteoption_count }">
		<MvASSIGN NAME = "l.orderoption"			VALUE = "">
		<MvASSIGN NAME = "l.orderoption:order_id"	VALUE = "{ l.orderitem:order_id }">
		<MvASSIGN NAME = "l.orderoption:line_id"	VALUE = "{ l.orderitem:line_id }">
		<MvASSIGN NAME = "l.orderoption:attr_id" 	VALUE = "{ l.quoteoption:attr_id }">
		<MvASSIGN NAME = "l.orderoption:attr_code" 	VALUE = "{ l.quoteoption:attr_code }">
		<MvASSIGN NAME = "l.orderoption:attmpat_id" VALUE = "{ l.quoteoption:attmpat_id }">
		<MvASSIGN NAME = "l.orderoption:option_id" 	VALUE = "{ l.quoteoption:option_id }">
		<MvASSIGN NAME = "l.orderoption:opt_code" 	VALUE = "{ l.quoteoption:opt_code }">
		<MvASSIGN NAME = "l.orderoption:base_price" VALUE = "{ l.quoteoption:base_price }">
		<MvASSIGN NAME = "l.orderoption:price" 		VALUE = "{ l.quoteoption:base_price }">
		<MvASSIGN NAME = "l.orderoption:weight" 	VALUE = "{ l.quoteoption:weight }">
		<MvASSIGN NAME = "l.orderoption:data" 		VALUE = "{ l.quoteoption:data }">
		<MvASSIGN NAME = "l.orderoption:data_long" 	VALUE = "{ l.quoteoption:data_long }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOption_Insert( l.orderoption ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.quoteoptiondiscount" ARRAY = "l.quoteoptiondiscounts" COUNT = "{ QuoteOptionDiscountList_Load_LineOption_ID( l.quoteoption:id, l.quoteoptiondiscounts ) }">
			<MvREFERENCEARRAY NAME = "l.pricegroup_exists" VARIABLE = "l.discount_pricegroup_id_lookup">
				<MvDIMENSION INDEX = "{ l.quoteoptiondiscount:pgrp_id }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT l.pricegroup_exists }">
				<MvASSIGN NAME = "l.pricegroup_exists"				VALUE = 1>
				<MvASSIGN NAME = "l.discount_pricegroup_id_count"	VALUE = "{ miva_array_insert_var( l.discount_pricegroup_ids, l.quoteoptiondiscount:pgrp_id, -1 ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.orderoption"				VALUE = "">
	<MvASSIGN NAME = "l.orderoption:order_id"		VALUE = "{ l.orderitem:order_id }">
	<MvASSIGN NAME = "l.orderoption:line_id"		VALUE = "{ l.orderitem:line_id }">
	<MvASSIGN NAME = "l.orderoption:attr_id"		VALUE = 0>
	<MvASSIGN NAME = "l.orderoption:attr_code"		VALUE = "Part of Quote">
	<MvASSIGN NAME = "l.orderoption:attmpat_id"		VALUE = 0>
	<MvASSIGN NAME = "l.orderoption:option_id" 		VALUE = 0>
	<MvASSIGN NAME = "l.orderoption:opt_code"		VALUE = "">
	<MvASSIGN NAME = "l.orderoption:price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.orderoption:weight"			VALUE = 0.00>
	<MvASSIGN NAME = "l.orderoption:data"			VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.orderoption:data_long"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOption_Insert( l.orderoption ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.quoteitemdiscount" ARRAY = "l.quoteitemdiscounts" COUNT = "{ QuoteItemDiscountList_Load_Line( l.quoteitem:line_id, l.quoteitemdiscounts ) }">
		<MvREFERENCEARRAY NAME = "l.pricegroup_exists" VARIABLE = "l.discount_pricegroup_id_lookup">
			<MvDIMENSION INDEX = "{ l.quoteitemdiscount:pgrp_id }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT l.pricegroup_exists }">
			<MvASSIGN NAME = "l.pricegroup_exists"					VALUE = 1>
			<MvASSIGN NAME = "l.discount_pricegroup_id_count"		VALUE = "{ miva_array_insert_var( l.discount_pricegroup_ids, l.quoteitemdiscount:pgrp_id, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT l.orderitem:product_id }">	<MvASSIGN NAME = "l.discounted" VALUE = 0>
	<MvELSE>										<MvASSIGN NAME = "l.discounted" VALUE = "{ l.orderitem:price NE [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.product:price, l.product:cost ) }">
	</MvIF>

	<MvEVAL EXPR = "{ BasketInfo_Add( l.orderitem:line_id, l.quote:id, l.discounted, l.orderinfo ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Validate_CustomFields" PARAMETERS = "custom_fields var, custom_fields_count, validated_fields var, validated_fields_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pos" 			VALUE = 1>
	<MvASSIGN NAME = "l.null" 			VALUE = "{ [ g.Module_Library_Utilities ].Build_Attribute_Hash( l.custom_fields, l.custom_fields_count, l.fields_hash ) }">
	<MvASSIGN NAME = "l.field_count" 	VALUE = "{ QuoteCustomFieldList_Load( l.fields ) }">

	<MvIF EXPR = "{ NOT l.field_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvWHILE EXPR = "{ l.pos LE l.field_count }">
		<MvREFERENCEARRAY NAME = "l.quote_field" VARIABLE = "l.fields">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ( l.quote_field:type EQ 'radio' ) OR
						( l.quote_field:type EQ 'select' ) }">
			<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.fields_hash">
				<MvMEMBER NAME = "non_template">
				<MvMEMBER NAME = "{ l.quote_field:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ ISNULL l.value }">
				<MvIF EXPR = "{ l.quote_field:required }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSE>
				<MvIF EXPR = "{ NOT QuoteCustomFieldOption_Load_Code( l.fields[ l.pos ]:id, l.value, l.option )  }">
					<MvIF EXPR = "{ l.quote_field:required }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvASSIGN NAME = "l.validated_fields_count" VALUE = "{ l.validated_fields_count + 1 }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "field_id" 	VALUE = "{ l.quote_field:id }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "field_code" 	VALUE = "{ l.quote_field:code }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "option_id" 	VALUE = "{ l.option:id }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "opt_code" 	VALUE = "{ l.option:code }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "data" 		VALUE = "{ l.value }">
			</MvIF>
		<MvELSEIF EXPR = "{ ( l.quote_field:type EQ 'text' ) OR
							( l.quote_field:type EQ 'memo' ) OR
							( l.quote_field:type EQ 'checkbox' ) }">
			<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.fields_hash">
				<MvMEMBER NAME = "non_template">
				<MvMEMBER NAME = "{ l.quote_field:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ ISNULL l.value }">
				<MvIF EXPR = "{ l.quote_field:required }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSE>
				<MvASSIGN NAME = "l.validated_fields_count" 														VALUE = "{ l.validated_fields_count + 1 }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "field_id" 	VALUE = "{ l.quote_field:id }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "field_code" 	VALUE = "{ l.quote_field:code }">
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "option_id" 	VALUE = 0>
				<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "opt_code" 	VALUE = "">

				<MvIF EXPR = "{ l.quote_field:type EQ 'checkbox' }">
					<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "data"	VALUE = 1>
				<MvELSE>
					<MvIF EXPR = "{ len( l.value ) GT 254 }">
						<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "data"		VALUE = "">
						<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "data_long"	VALUE = "{ l.value }">
					<MvELSE>
						<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "data"		VALUE = "{ l.value }">
						<MvASSIGN NAME = "l.validated_fields" INDEX = "{ l.validated_fields_count }" MEMBER = "data_long"	VALUE = "">
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.pos" VALUE = "{ l.pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_BasketItem_Delete_All_Quote" PARAMETERS = "basket_id, quote_id, basketinfo var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.basketinfo:info:items">
		<MvIF EXPR = "{ l.quote_id EQ l.item:quote_id }">
			<MvIF EXPR = "{ NOT Runtime_BasketItem_Delete_Line_Or_Group( l.basket_id, l.item:line_id, l.item:line_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_BasketItem_Delete_Line_Or_Group" PARAMETERS = "basket_id, line_id, group_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Library_DB ].BasketItem_Load_Line( l.basket_id, l.line_id, l.basketitem ) }">	<MvASSIGN NAME = "l.basketitem_count" VALUE = "{ miva_array_insert_ref( l.basketitems, l.basketitem, -1 ) }">
	<MvELSE>																									<MvASSIGN NAME = "l.basketitem_count" VALUE = "{ [ g.Module_Library_DB ].BasketItemList_Load_Basket_Group( l.basket_id, l.group_id, l.basketitems )  }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.basketitem_count }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Dirty( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ l.basketitem_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_Product_Load_BasketItem( l.basketitem, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.product"	VALUE = "">
			<MvASSIGN NAME = "l.product:id"	VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_BasketItem_Delete( l.product, l.basketitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Copy_Quote" PARAMETERS = "module var, quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Load_Session( g.Session_ID, l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( g.Basket:basket_id, l.module:id, 'quote_items', l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.basketinfo:basket_id"	VALUE = "{ g.Basket:basket_id }">
		<MvASSIGN NAME = "l.basketinfo:module_id"	VALUE = "{ l.module:id }">
		<MvASSIGN NAME = "l.basketinfo:type"		VALUE = "quote_items">
		<MvASSIGN NAME = "l.basketinfo:clronmod"	VALUE = 0>
		<MvASSIGN NAME = "l.basketinfo:orderinfo"	VALUE = 1>
		<MvASSIGN NAME = "l.basketinfo:info"		VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Insert( l.basketinfo ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteXBasket_Delete( l.basket:basket_id, l.quote:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvLOCKFILE FILE = "{ g.MerchantPath $ g.Basket:session_id }">
		<MvASSIGN NAME = "l.result" VALUE = "{ Basket_Copy_Quote_LowLevel( l.module, l.quote:id, l.basket:basket_id, l.basketinfo ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteXBasket_Insert( l.basket:basket_id, l.quote:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_PGR_UT ].Basket_Assign_Persistent_PriceGroup( l.basket:basket_id, 'Quote Exclusion Price Group' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_RT ].Runtime_Discount_Basket( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Copy_Quote_LowLevel" PARAMETERS = "module var, quote_id, basket_id, basketinfo var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Runtime_BasketItem_Delete_All_Quote( l.basket_id, l.quote_id, l.basketinfo ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT BasketInfo_Remove_Quote( l.quote_id, l.basketinfo ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.items"		VALUE = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.quoteitem" ARRAY = "l.quoteitems" COUNT = "{ QuoteItemList_Load_Quote( l.quote_id, l.quoteitems ) }">
		<MvIF EXPR = "{ l.quoteitem:parent_id }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT Basket_Copy_QuoteItem( l.quoteitem, l.quote_id, l.basket_id, l.product, l.basketitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.child_items"		VALUE = "">
		<MvASSIGN NAME = "l.child_item_count"	VALUE = 0>

		<MvFOREACH ITERATOR = "l.child_quoteitem" ARRAY = "l.quoteitem:children" COUNT = "{ l.quoteitem:child_count }">
			<MvIF EXPR = "{ NOT Basket_Copy_QuoteItem( l.child_quoteitem, l.quote_id, l.basket_id, l.child_product, l.child_basketitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.child_item_count" VALUE = "{ [ g.Module_Library_DB ].Runtime_BasketItemList_Process_AppendItem_Insert( l.child_product, l.child_basketitem, l.child_items ) }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.item_count" VALUE = "{ [ g.Module_Library_DB ].Runtime_BasketItemList_Process_AppendItem_Insert_WithChildren( l.product, l.basketitem, l.child_items, l.child_item_count, l.items ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Runtime_BasketItemList_Process( l.items, l.item_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items" COUNT = "{ l.item_count }">
		<MvIF EXPR = "{ NOT l.item:basketitem:product_id }">
			<MvASSIGN NAME = "l.discounted" VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.item:product, l.item:basketitem:variant_id, l.null ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.discounted" VALUE = "{ l.item:basketitem:price NE [ g.Module_Library_Utilities ].Adjusted_Price( l.item:product, l.item:product:price, l.item:product:cost ) }">
		</MvIF>

		<MvEVAL EXPR = "{ BasketInfo_Add( l.item:basketitem:line_id, l.quote_id, l.discounted, l.basketinfo ) }">

		<MvFOREACH ITERATOR = "l.child_item" ARRAY = "l.item:child_items" COUNT = "{ l.item:child_item_count }">
			<MvIF EXPR = "{ NOT l.child_item:basketitem:product_id }">
				<MvASSIGN NAME = "l.discounted" VALUE = 0>
			<MvELSE>
				<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.child_item:product, l.child_item:basketitem:variant_id, l.null ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.discounted" VALUE = "{ l.child_item:basketitem:price NE [ g.Module_Library_Utilities ].Adjusted_Price( l.child_item:product, l.child_item:product:price, l.child_item:product:cost ) }">
			</MvIF>

			<MvEVAL EXPR = "{ BasketInfo_Add( l.child_item:basketitem:line_id, l.quote_id, l.discounted, l.basketinfo ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Update( l.basketinfo ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Copy_QuoteItem" PARAMETERS = "quoteitem var, quote_id, basket_id, product var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basketitem" 						VALUE = "{ l.quoteitem }">
	<MvASSIGN NAME = "l.basketitem:basket_id"				VALUE = "{ l.basket_id }">
	<MvASSIGN NAME = "l.basketitem:price"					VALUE = "{ l.quoteitem:base_price }">
	<MvASSIGN NAME = "l.quoteoption_count" 					VALUE = "{ QuoteOptionList_Load_Line( l.quoteitem:line_id, l.quoteoptions ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant_WithOptions( l.quoteitem, l.quoteoptions, l.quoteoption_count, l.product, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.basketitem:product_id" 				VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.basketitem:variant_id"				VALUE = "{ l.variant_id }">

	<MvFOREACH ITERATOR = "l.quoteoption" ARRAY = "l.quoteoptions" COUNT = "{ l.quoteoption_count }">
		<MvASSIGN NAME = "l.basketoption" 					VALUE = "{ l.quoteoption }">
		<MvASSIGN NAME = "l.basketoption:basket_id"			VALUE = "{ l.basket_id }">
		<MvASSIGN NAME = "l.basketoption:price"				VALUE = "{ l.quoteoption:base_price }">
		<MvASSIGN NAME = "l.basketitem:option_count"		VALUE = "{ miva_array_insert_var( l.basketitem:options, l.basketoption, -1 ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.basketoption"						VALUE = "">
	<MvASSIGN NAME = "l.basketoption:basket_id" 			VALUE = "{ l.basket_id }">
	<MvASSIGN NAME = "l.basketoption:attr_id"				VALUE = 0>
	<MvASSIGN NAME = "l.basketoption:attr_code"				VALUE = "Part of Quote">
	<MvASSIGN NAME = "l.basketoption:attmpat_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basketoption:option_id" 			VALUE = 0>
	<MvASSIGN NAME = "l.basketoption:opt_code"				VALUE = "">
	<MvASSIGN NAME = "l.basketoption:price"					VALUE = 0.00>
	<MvASSIGN NAME = "l.basketoption:weight"				VALUE = 0.00>
	<MvASSIGN NAME = "l.basketoption:data"					VALUE = "{ l.quote_id }">
	<MvASSIGN NAME = "l.basketoption:data_long"				VALUE = "">
	<MvASSIGN NAME = "l.basketitem:option_count"			VALUE = "{ miva_array_insert_var( l.basketitem:options, l.basketoption, -1 ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketInfo_Load_Line_Or_Group" PARAMETERS = "line_id, group_id, basketinfo var, output var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.basketinfo:info:items">
		<MvIF EXPR = "{ ( l.item:line_id EQ l.line_id ) OR ( l.item:line_id EQ l.group_id ) }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.item }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-QUOTES-00211' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketInfo_Add" PARAMETERS = "line_id, quote_id, discounted, basketinfo var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item"				VALUE = "">
	<MvASSIGN NAME = "l.item:line_id"		VALUE = "{ l.line_id }">
	<MvASSIGN NAME = "l.item:quote_id"		VALUE = "{ l.quote_id }">
	<MvASSIGN NAME = "l.item:discounted"	VALUE = "{ l.discounted }">

	<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_var( l.basketinfo:info:items, l.item, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketInfo_Remove_Line" PARAMETERS = "line_id var, basketinfo var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.item" ARRAY = "l.basketinfo:info:items">
		<MvIF EXPR = "{ l.item:line_id EQ l.line_id }">
			<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_delete( l.basketinfo:info:items, l.pos, 1 ) }">
			<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketInfo_Remove_Quote" PARAMETERS = "quote_id var, basketinfo var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.items" VALUE = "">

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.basketinfo:info:items">
		<MvIF EXPR = "{ l.item:quote_id NE l.quote_id }">
			<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.items, l.item, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.basketinfo:info:items" VALUE = "{ l.items }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_ValidForQuotedShipping" PARAMETERS = "module var, basket_id, quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( l.basket_id, l.module:id, 'quote_items', l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00374', 'Basket info not found' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Dummy baskets should be ignored
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.basketinfo:info:disable_quoted_shipping }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00375', 'Dummy basket detected' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Simple comparison checks before more expensive ones
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.basketinfo_item_count"	VALUE = "{ miva_array_elements( l.basketinfo:info:items ) }">

	<MvIF EXPR = "{ l.basketinfo_item_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00376', 'Basket does not contain quote items' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quote_id" VALUE = "{ l.basketinfo:info:items[ 1 ]:quote_id }">

	<MvIF EXPR = "{ miva_array_search( l.basketinfo:info:items, 2, l.search_item, 'l.quote_id NE l.search_item:quote_id' ) NE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00377', 'Multiple quotes assigned to basket' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Quote_Load_ID( l.quote_id, l.quote ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00378', 'Quote not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.quote:ship_mod OR ISNULL l.quote:ship_meth }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00382', 'Quoted shipping not specified' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Explode quote/basket items, then compare to make sure basket and quote items
	| match. The explode is done to counteract any applied discounts we may have on
	| these items.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.exploded_quoteitems"				VALUE = "">
	<MvASSIGN NAME = "l.exploded_quoteitem_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.quoteitem" ARRAY = "l.quoteitems" COUNT = "{ QuoteItemList_Load_Quote( l.quote:id, l.quoteitems ) }">
		<MvASSIGN NAME = "l.quoteitem:option_count"			VALUE = "{ QuoteOptionList_Load_Line( l.quoteitem:line_id, l.quoteitem:options ) }">

		<MvFOR COUNT = "{ l.quoteitem:quantity }">
			<MvASSIGN NAME = "l.exploded_item"				VALUE = "{ l.quoteitem }">
			<MvASSIGN NAME = "l.exploded_item:quantity"		VALUE = 1>

			<MvASSIGN NAME = "l.exploded_quoteitem_count"	VALUE = "{ miva_array_insert_var( l.exploded_quoteitems, l.exploded_item, -1 ) }">
		</MvFOR>
	</MvFOREACH>

	<MvASSIGN NAME = "l.exploded_basketitems"				VALUE = "">
	<MvASSIGN NAME = "l.exploded_basketitem_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ [ g.Module_Library_DB ].BasketItemList_Load_Basket( l.basket_id, l.basketitems ) }">
		<MvASSIGN NAME = "l.basketitem:option_count"		VALUE = "{ [ g.Module_Library_DB ].BasketOptionList_Load_Line( l.basketitem:line_id, l.basketitem:options ) }">

		<MvFOR COUNT = "{ l.basketitem:quantity }">
			<MvASSIGN NAME = "l.exploded_item"				VALUE = "{ l.basketitem }">
			<MvASSIGN NAME = "l.exploded_item:quantity"		VALUE = 1>

			<MvASSIGN NAME = "l.exploded_basketitem_count"	VALUE = "{ miva_array_insert_var( l.exploded_basketitems, l.exploded_item, -1 ) }">
		</MvFOR>
	</MvFOREACH>

	<MvIF EXPR = "{ l.exploded_basketitem_count GT l.exploded_quoteitem_count }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00379', 'Basket contains non-quote items' ) }">
	<MvELSEIF EXPR = "{ l.exploded_basketitem_count LT l.exploded_quoteitem_count }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00380', 'Basket does not contain all quoted items' ) }">
	</MvIF>

	<MvWHILE EXPR = "{ l.exploded_quoteitem_count }">
		<MvASSIGN NAME = "l.item_match_found"				VALUE = 0>
		<MvASSIGN NAME = "l.exploded_quoteitem_count"		VALUE = "{ miva_array_pop_ref( l.exploded_quoteitems, l.exploded_quoteitem ) }">

		<MvFOREACH INDEX = "l.exploded_basketitem_pos" ITERATOR = "l.exploded_basketitem" ARRAY = "l.exploded_basketitems" COUNT = "{ l.exploded_basketitem_count }">
			<MvIF EXPR = "{ l.exploded_basketitem:code NE l.exploded_quoteitem:code OR
							l.exploded_basketitem:option_count NE ( l.exploded_quoteitem:option_count + 1 ) }"> <MvCOMMENT> "Part of Quote" attribute is added to basketitem as an option </MvCOMMENT>
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.item_options_match"			VALUE = 1>

			<MvFOREACH ITERATOR = "l.exploded_quoteoption" ARRAY = "l.exploded_quoteitem:options" COUNT = "{ l.exploded_quoteitem:option_count }">
				<MvIF EXPR = "{ NOT miva_array_search( l.exploded_basketitem:options, 1, l.exploded_basketoption, '( l.exploded_basketoption:attr_id	EQ l.exploded_quoteoption:attr_id )		AND
																												   ( l.exploded_basketoption:attmpat_id	EQ l.exploded_quoteoption:attmpat_id )	AND
																												   ( l.exploded_basketoption:option_id	EQ l.exploded_quoteoption:option_id )	AND
																												   ( l.exploded_basketoption:data		EQ l.exploded_quoteoption:data )		AND
																												   ( l.exploded_basketoption:data_long	EQ l.exploded_quoteoption:data_long )' ) }">
					<MvASSIGN NAME = "l.item_options_match"	VALUE = 0>
					<MvFOREACHSTOP>
				</MvIF>
			</MvFOREACH>

			<MvCOMMENT>
			|
			| Ensure "Part of Quote" item is attached to basketitem
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT miva_array_search( l.exploded_basketitem:options, 1, l.exploded_basketoption, '( l.exploded_basketoption:attr_id	EQ 0 )					AND
																											   ( l.exploded_basketoption:attmpat_id	EQ 0 )					AND
																											   ( l.exploded_basketoption:option_id	EQ 0 )					AND
																											   ( l.exploded_basketoption:attr_code	EQ \'Part of Quote\' )	AND
																											   ( l.exploded_basketoption:data		EQ l.quote:id )' ) }">
				<MvASSIGN NAME = "l.item_options_match"	VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT l.item_options_match }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.item_match_found"			VALUE = 1>
			<MvASSIGN NAME = "l.exploded_basketitem_count"	VALUE = "{ miva_array_delete( l.exploded_basketitems, l.exploded_basketitem_pos, 1 ) }">

			<MvFOREACHSTOP>
		</MvFOREACH>

		<MvIF EXPR = "{ NOT l.item_match_found }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00381', 'Quote item not found in basket' ) }">
		</MvIF>
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_DummyBasket_Create" PARAMETERS = "module var, quote var, basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:quote:dummybasket:basket:quote_id EQ l.quote:id }">
		<MvASSIGN NAME = "l.basket" VALUE = "{ g.Session:quote:dummybasket:basket }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT ISNULL g.Session:quote:dummybasket }">
		<MvIF EXPR = "{ NOT Quote_DummyBasket_Cleanup() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Create a dummy basket record with the information from the quote
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.basket"						VALUE = "">
	<MvASSIGN NAME = "l.basket:cust_id"				VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_proc"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:ship_id"				VALUE = 0>
	<MvASSIGN NAME = "l.basket:ship_data"			VALUE = "">
	<MvASSIGN NAME = "l.basket:session_id"			VALUE = "{ MakeSessionID() }">
	<MvASSIGN NAME = "l.basket:lastupdate"			VALUE = "{ s.time_t }">

	<MvASSIGN NAME = "l.basket:ship_fname"			VALUE = "{ l.quote:fname }">
	<MvASSIGN NAME = "l.basket:ship_lname"			VALUE = "{ l.quote:lname }">
	<MvASSIGN NAME = "l.basket:ship_email"			VALUE = "{ l.quote:email }">
	<MvASSIGN NAME = "l.basket:ship_comp"			VALUE = "">
	<MvASSIGN NAME = "l.basket:ship_phone"			VALUE = "{ l.quote:phone }">
	<MvASSIGN NAME = "l.basket:ship_fax"			VALUE = "">
	<MvASSIGN NAME = "l.basket:ship_addr1"			VALUE = "">
	<MvASSIGN NAME = "l.basket:ship_addr2"			VALUE = "">
	<MvASSIGN NAME = "l.basket:ship_city"			VALUE = "">
	<MvASSIGN NAME = "l.basket:ship_state"			VALUE = "">
	<MvASSIGN NAME = "l.basket:ship_zip"			VALUE = "{ l.quote:zip }">
	<MvASSIGN NAME = "l.basket:ship_cntry"			VALUE = "{ l.quote:country }">
	<MvASSIGN NAME = "l.basket:ship_res"			VALUE = 1>

	<MvASSIGN NAME = "l.basket:bill_fname"			VALUE = "{ l.quote:fname }">
	<MvASSIGN NAME = "l.basket:bill_lname"			VALUE = "{ l.quote:lname }">
	<MvASSIGN NAME = "l.basket:bill_email"			VALUE = "{ l.quote:email }">
	<MvASSIGN NAME = "l.basket:bill_comp"			VALUE = "">
	<MvASSIGN NAME = "l.basket:bill_phone"			VALUE = "{ l.quote:phone }">
	<MvASSIGN NAME = "l.basket:bill_fax"			VALUE = "">
	<MvASSIGN NAME = "l.basket:bill_addr1"			VALUE = "">
	<MvASSIGN NAME = "l.basket:bill_addr2"			VALUE = "">
	<MvASSIGN NAME = "l.basket:bill_city"			VALUE = "">
	<MvASSIGN NAME = "l.basket:bill_state"			VALUE = "">
	<MvASSIGN NAME = "l.basket:bill_zip"			VALUE = "{ l.quote:zip }">
	<MvASSIGN NAME = "l.basket:bill_cntry"			VALUE = "{ l.quote:country }">
	<MvASSIGN NAME = "l.basket:tax_exempt"  		VALUE = 0>

	<MvIF EXPR = "{ l.quote:cust_id }">
		<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.quote:cust_id, l.customer ) }">
			<MvASSIGN NAME = "l.basket:cust_id"		VALUE = "{ l.customer:id }">

			<MvASSIGN NAME = "l.basket:ship_fname"	VALUE = "{ l.customer:ship_fname }">
			<MvASSIGN NAME = "l.basket:ship_lname"	VALUE = "{ l.customer:ship_lname }">
			<MvASSIGN NAME = "l.basket:ship_email"	VALUE = "{ l.customer:ship_email }">
			<MvASSIGN NAME = "l.basket:ship_comp"	VALUE = "{ l.customer:ship_comp }">
			<MvASSIGN NAME = "l.basket:ship_phone"	VALUE = "{ l.customer:ship_phone }">
			<MvASSIGN NAME = "l.basket:ship_fax"	VALUE = "{ l.customer:ship_fax }">
			<MvASSIGN NAME = "l.basket:ship_addr1"	VALUE = "{ l.customer:ship_addr1 }">
			<MvASSIGN NAME = "l.basket:ship_addr2"	VALUE = "{ l.customer:ship_addr2 }">
			<MvASSIGN NAME = "l.basket:ship_city"	VALUE = "{ l.customer:ship_city }">
			<MvASSIGN NAME = "l.basket:ship_state"	VALUE = "{ l.customer:ship_state }">
			<MvASSIGN NAME = "l.basket:ship_zip"	VALUE = "{ l.customer:ship_zip }">
			<MvASSIGN NAME = "l.basket:ship_cntry"	VALUE = "{ l.customer:ship_cntry }">
			<MvASSIGN NAME = "l.basket:ship_res"	VALUE = "{ l.customer:ship_res }">

			<MvASSIGN NAME = "l.basket:bill_fname"	VALUE = "{ l.customer:bill_fname }">
			<MvASSIGN NAME = "l.basket:bill_lname"	VALUE = "{ l.customer:bill_lname }">
			<MvASSIGN NAME = "l.basket:bill_email"	VALUE = "{ l.customer:bill_email }">
			<MvASSIGN NAME = "l.basket:bill_comp"	VALUE = "{ l.customer:bill_comp }">
			<MvASSIGN NAME = "l.basket:bill_phone"	VALUE = "{ l.customer:bill_phone }">
			<MvASSIGN NAME = "l.basket:bill_fax"	VALUE = "{ l.customer:bill_fax }">
			<MvASSIGN NAME = "l.basket:bill_addr1"	VALUE = "{ l.customer:bill_addr1 }">
			<MvASSIGN NAME = "l.basket:bill_addr2"	VALUE = "{ l.customer:bill_addr2 }">
			<MvASSIGN NAME = "l.basket:bill_city"	VALUE = "{ l.customer:bill_city }">
			<MvASSIGN NAME = "l.basket:bill_state"	VALUE = "{ l.customer:bill_state }">
			<MvASSIGN NAME = "l.basket:bill_zip"	VALUE = "{ l.customer:bill_zip }">
			<MvASSIGN NAME = "l.basket:bill_cntry"	VALUE = "{ l.customer:bill_cntry }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_UT ].TaxExempt_Load_Customer_ID( l.customer:id, l.basket:tax_exempt ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Insert( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteXBasket_Insert( l.basket:basket_id, l.quote:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.basketinfo"									VALUE = "">
	<MvASSIGN NAME = "l.basketinfo:basket_id"						VALUE = "{ l.basket:basket_id }">
	<MvASSIGN NAME = "l.basketinfo:module_id"						VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.basketinfo:type"							VALUE = "quote_items">
	<MvASSIGN NAME = "l.basketinfo:clronmod"						VALUE = 0>
	<MvASSIGN NAME = "l.basketinfo:info"							VALUE = "">
	<MvASSIGN NAME = "l.basketinfo:info:disable_quoted_shipping"	VALUE = 1>

	<MvFOREACH ITERATOR = "l.quoteitem" ARRAY = "l.quoteitems" COUNT = "{ QuoteItemList_Load_Quote( l.quote:id, l.quoteitems ) }">
		<MvIF EXPR = "{ l.quoteitem:parent_id }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT Quote_DummyBasket_CopyQuoteItem( l.quote, l.basket, l.basketinfo, l.quoteitem, 0, l.basketitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.child_quoteitem" ARRAY = "l.quoteitem:children" COUNT = "{ l.quoteitem:child_count }">
			<MvIF EXPR = "{ NOT Quote_DummyBasket_CopyQuoteItem( l.quote, l.basket, l.basketinfo, l.child_quoteitem, l.basketitem:line_id, l.child_basketitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Insert( l.basketinfo ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_PGR_UT ].Basket_Assign_Persistent_PriceGroup( l.basket:basket_id, 'Quote Exclusion Price Group' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Basket( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "g.Session:quote:dummybasket:basket" VALUE = "{ l.basket }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_DummyBasket_CopyQuoteItem" PARAMETERS = "quote var, basket var, basketinfo var, quoteitem var, parent_id, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basketitem" 				VALUE = "{ l.quoteitem }">
	<MvASSIGN NAME = "l.basketitem:basket_id"		VALUE = "{ l.basket:basket_id }">
	<MvASSIGN NAME = "l.basketitem:parent_id"		VALUE = "{ l.parent_id }">
	<MvASSIGN NAME = "l.basketitem:price"			VALUE = "{ l.quoteitem:base_price }">
	<MvASSIGN NAME = "l.quoteoption_count" 			VALUE = "{ QuoteOptionList_Load_Line( l.quoteitem:line_id, l.quoteoptions ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant_WithOptions( l.quoteitem, l.quoteoptions, l.quoteoption_count, l.product, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.basketitem:product_id" 		VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.basketitem:variant_id"		VALUE = "{ l.variant_id }">
	<MvASSIGN NAME = "l.basketitem:line_id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'BasketItems' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItem_Insert_LowLevel( l.basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.quoteoption" ARRAY = "l.quoteoptions" COUNT = "{ l.quoteoption_count }">
		<MvASSIGN NAME = "l.basketoption" 			VALUE = "{ l.quoteoption }">
		<MvASSIGN NAME = "l.basketoption:line_id" 	VALUE = "{ l.basketitem:line_id }">
		<MvASSIGN NAME = "l.basketoption:basket_id" VALUE = "{ l.basket:basket_id }">
		<MvASSIGN NAME = "l.basketoption:price"		VALUE = "{ l.quoteoption:base_price }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOption_Insert( l.basketoption ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.basketoption"				VALUE = "">
	<MvASSIGN NAME = "l.basketoption:basket_id" 	VALUE = "{ l.basket:basket_id }">
	<MvASSIGN NAME = "l.basketoption:line_id"		VALUE = "{ l.basketitem:line_id }">
	<MvASSIGN NAME = "l.basketoption:attr_id"		VALUE = 0>
	<MvASSIGN NAME = "l.basketoption:attr_code"		VALUE = "Part of Quote">
	<MvASSIGN NAME = "l.basketoption:attmpat_id"	VALUE = 0>
	<MvASSIGN NAME = "l.basketoption:option_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.basketoption:opt_code"		VALUE = "">
	<MvASSIGN NAME = "l.basketoption:price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.basketoption:weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.basketoption:data"			VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.basketoption:data_long"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOption_Insert( l.basketoption ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.basketitem:product_id }">	<MvASSIGN NAME = "l.discounted" VALUE = 0>
	<MvELSE>										<MvASSIGN NAME = "l.discounted" VALUE = "{ l.basketitem:price NE [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.product:price, l.product:cost ) }">
	</MvIF>

	<MvEVAL EXPR = "{ BasketInfo_Add( l.basketitem:line_id, l.quote:id, l.discounted, l.basketinfo ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_DummyBasket_Cleanup" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:quote:dummybasket }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteXBasket_Delete_Basket( g.Session:quote:dummybasket:basket:basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Reset( g.Session:quote:dummybasket:basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "g.Session:quote:dummybasket"	VALUE = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Quote" PARAMETERS = "module var, quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Quote_DummyBasket_Create( l.module, l.quote, l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.result"	VALUE = "{ Discount_Quote_LowLevel( l.basket, l.quote ) }">
	<MvASSIGN NAME = "l.null"	VALUE = "{ Quote_DummyBasket_Cleanup() }">

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Quote_LowLevel" PARAMETERS = "basket var, quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteOptionDiscount_Delete_All_Quote( l.quote:id )	OR
					NOT QuoteOption_Delete_All_Quote( l.quote:id )			OR
					NOT QuoteItemDiscount_Delete_All_Quote( l.quote:id )	OR
					NOT QuoteItem_Delete_All_Quote( l.quote:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ [ g.Module_Library_DB ].BasketItemList_Load_Basket( l.basket:basket_id, l.basketitems ) }">
		<MvIF EXPR = "{ l.basketitem:parent_id }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT Discount_Quote_CopyBasketItem( l.quote, l.basketitem, 0, l.quoteitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.child_basketitem" ARRAY = "l.basketitem:children" COUNT = "{ l.basketitem:child_count }">
			<MvIF EXPR = "{ NOT Discount_Quote_CopyBasketItem( l.quote, l.child_basketitem, l.quoteitem:line_id, l.child_quoteitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Quote_CopyBasketItem" PARAMETERS = "quote var, basketitem var, parent_id, quoteitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitem" 					VALUE = "{ l.basketitem }">
	<MvASSIGN NAME = "l.quoteitem:quote_id" 		VALUE = "{ l.quote:id }">
	<MvASSIGN NAME = "l.quoteitem:parent_id" 		VALUE = "{ l.parent_id }">

	<MvIF EXPR = "{ NOT QuoteItem_Insert( l.quoteitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketitem_discount" ARRAY = "l.basketitem_discounts" COUNT = "{ [ g.Module_Library_DB ].BasketItemDiscountList_Load_Line( l.basketitem:line_id, l.basketitem_discounts ) }">
		<MvASSIGN NAME = "l.discount"				VALUE = "{ l.basketitem_discount }">
		<MvASSIGN NAME = "l.discount:quote_id"		VALUE = "{ l.quoteitem:quote_id }">
		<MvASSIGN NAME = "l.discount:line_id"		VALUE = "{ l.quoteitem:line_id }">

		<MvIF EXPR = "{ NOT QuoteItemDiscount_Insert( l.discount ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketoptions" COUNT = "{ [ g.Module_Library_DB ].BasketOptionList_Load_Line( l.basketitem:line_id, l.basketoptions ) }">
		<MvIF EXPR = "{ ( l.basketoption:attr_id	EQ 0 )					AND
						( l.basketoption:attmpat_id	EQ 0 )					AND
						( l.basketoption:option_id	EQ 0 )					AND
						( l.basketoption:attr_code	EQ 'Part of Quote' )	AND
						( l.basketoption:data		EQ l.quote:id ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.quoteoption"			VALUE = "{ l.basketoption }">
		<MvASSIGN NAME = "l.quoteoption:quote_id" 	VALUE = "{ l.quoteitem:quote_id }">
		<MvASSIGN NAME = "l.quoteoption:line_id"	VALUE = "{ l.quoteitem:line_id }">

		<MvIF EXPR = "{ NOT QuoteOption_Insert( l.quoteoption ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.basketoption_discount" ARRAY = "l.basketoption_discounts" COUNT = "{ [ g.Module_Library_DB ].BasketOptionDiscountList_Load_LineOption_ID( l.basketoption:id, l.basketoption_discounts ) }">
			<MvASSIGN NAME = "l.discount"				VALUE = "{ l.basketoption_discount }">
			<MvASSIGN NAME = "l.discount:quote_id"		VALUE = "{ l.quoteoption:quote_id }">
			<MvASSIGN NAME = "l.discount:line_id"		VALUE = "{ l.quoteoption:line_id }">
			<MvASSIGN NAME = "l.discount:lineopt_id"	VALUE = "{ l.quoteoption:id }">

			<MvIF EXPR = "{ NOT QuoteOptionDiscount_Insert( l.discount ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_ShippingModule_Description" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ISNULL l.quote:ship_mod }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.quote:ship_mod, l.ship_module )	AND
						l.ship_module:feature_hash:shipping																AND
						l.ship_module:active }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.ship_module:module ].ShippingModule_Description( l.ship_module, l.quote:ship_meth ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmailList_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data EQ 'name' }">		<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:name, l.right:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-name' }">	<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:name, l.left:name ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result NE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ l.result }">
	</MvIF>

	<MvCOMMENT>
	|
	| Break ties using code
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ substring_var( l.data, 1, 1 ) EQ '-' }">	<MvFUNCTIONRETURN VALUE = "{ strcasecmp( l.right:code, l.left:code ) }">
	<MvELSE>													<MvFUNCTIONRETURN VALUE = "{ strcasecmp( l.left:code, l.right:code ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Create_CustomerQuoteTemplate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.email:code"			VALUE = "CUSTOMER">
	<MvASSIGN NAME = "l.email:name"			VALUE = "Send Quote: Customer">
	<MvASSIGN NAME = "l.email:email_from"	VALUE = "&mvt:store:email;">
	<MvASSIGN NAME = "l.email:email_to"		VALUE = "&mvt:quote:email;">
	<MvASSIGN NAME = "l.email:email_subj"	VALUE = "Your &mvt:store:name; Quote">
	<MvASSIGN NAME = "l.email:mime_type"	VALUE = "{ QuoteEmail_Default_MimeType() }">

	<MvCAPTURE VARIABLE = "l.contents">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE FILE = "modules/util/quote/email_quote_customer.mvt"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT QuoteEmail_Create_Email_FromVariable( l.module, l.email, l.contents ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Create_AdminNotificationTemplate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.email:code"				VALUE = "ADMIN">
	<MvASSIGN NAME = "l.email:name"				VALUE = "Quote Requested: Merchant">
	<MvASSIGN NAME = "l.email:email_from"		VALUE = "&mvt:store:email;">
	<MvASSIGN NAME = "l.email:email_to"			VALUE = "&mvt:store:email;">
	<MvASSIGN NAME = "l.email:email_subj"		VALUE = "Online Quote Placed with Miva Merchant">
	<MvASSIGN NAME = "l.email:mime_type"		VALUE = "{ QuoteEmail_Default_MimeType() }">

	<MvCAPTURE VARIABLE = "l.contents">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE FILE = "modules/util/quote/email_quote_admin.mvt"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT QuoteEmail_Create_Email_FromVariable( l.module, l.email, l.contents ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Create_CustomerNotificationTemplate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.email:code"				VALUE = "REQUEST_CUSTOMER">
	<MvASSIGN NAME = "l.email:name"				VALUE = "Quote Requested: Customer">
	<MvASSIGN NAME = "l.email:email_from"		VALUE = "&mvt:store:email;">
	<MvASSIGN NAME = "l.email:email_to"			VALUE = "&mvt:quote:email;">
	<MvASSIGN NAME = "l.email:email_subj"		VALUE = "Thank You For Your Quote Request">
	<MvASSIGN NAME = "l.email:mime_type"		VALUE = "{ QuoteEmail_Default_MimeType() }">

	<MvCAPTURE VARIABLE = "l.contents">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE FILE = "modules/util/quote/email_quote_request_customer.mvt"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT QuoteEmail_Create_Email_FromVariable( l.module, l.email, l.contents ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Create_ExpiryNotificationTemplate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.email:code"				VALUE = "EXPIRED">
	<MvASSIGN NAME = "l.email:name"				VALUE = "Quote Expired: Customer">
	<MvASSIGN NAME = "l.email:email_from"		VALUE = "&mvt:store:email;">
	<MvASSIGN NAME = "l.email:email_to"			VALUE = "&mvt:quote:email;">
	<MvASSIGN NAME = "l.email:email_subj"		VALUE = "Your &mvt:store:name; quote has expired">
	<MvASSIGN NAME = "l.email:mime_type"		VALUE = "{ QuoteEmail_Default_MimeType() }">

	<MvCAPTURE VARIABLE = "l.contents">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE FILE = "modules/util/quote/email_quote_expired_customer.mvt"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT QuoteEmail_Create_Email_FromVariable( l.module, l.email, l.contents ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Create_ReminderEmailTemplate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.email:code" 			VALUE = "REMINDER">
	<MvASSIGN NAME = "l.email:name"				VALUE = "Quote Reminder: Customer">
	<MvASSIGN NAME = "l.email:email_from"		VALUE = "&mvt:store:email;">
	<MvASSIGN NAME = "l.email:email_to"			VALUE = "&mvt:quote:email;">
	<MvASSIGN NAME = "l.email:email_subj"		VALUE = "Reminder: Your &mvt:store:name; quote">
	<MvASSIGN NAME = "l.email:mime_type"		VALUE = "{ QuoteEmail_Default_MimeType() }">
	<MvASSIGN NAME = "l.email:enabled" 			VALUE = 0>

	<MvCAPTURE VARIABLE = "l.contents">
		<MIVA STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE FILE = "modules/util/quote/email_quote_reminder.mvt"><MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT QuoteEmail_Create_Email_FromVariable( l.module, l.email, l.contents ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Create_Email_FromVariable" PARAMETERS = "module var, email var, template_data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT QuoteEmail_Create_Email_LowLevel( l.module, l.email, l.template_data ) }">
		<MvASSIGN NAME = "l.error_code"		VALUE = "{ g.Error_Code }">
		<MvASSIGN NAME = "l.error_message"	VALUE = "{ g.Error_Message }">

		<MvIF EXPR = "{ NOT ISNULL l.email:tfn_from }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.email:tfn_from ) }">	</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.email:tfn_to }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.email:tfn_to ) }">		</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.email:tfn_cc }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.email:tfn_cc ) }">		</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.email:tfn_subj }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.email:tfn_subj ) }">	</MvIF>
		<MvIF EXPR = "{ NOT ISNULL l.email:tfn_mime }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.email:tfn_mime ) }">	</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.error_code, l.error_message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Create_Email_LowLevel" PARAMETERS = "module var, email var, template_data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings"			VALUE = "">
	<MvASSIGN NAME = "l.page_code" 			VALUE = "{ 'QUOTEEMAIL_' $ l.email:code }">

	<MvASSIGN NAME = "l.page:admin"			VALUE = 1>
	<MvASSIGN NAME = "l.page:code"			VALUE = "{ l.page_code }">
	<MvASSIGN NAME = "l.page:name"			VALUE = "{ l.email:name }">
	<MvASSIGN NAME = "l.page:ui_id"			VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.page:settings"		VALUE = "">

	<MvASSIGN NAME = "l.email:tfn_from"		VALUE = "">
	<MvASSIGN NAME = "l.email:tfn_to"		VALUE = "">
	<MvASSIGN NAME = "l.email:tfn_cc"		VALUE = "">
	<MvASSIGN NAME = "l.email:tfn_subj"		VALUE = "">
	<MvASSIGN NAME = "l.email:tfn_mime"		VALUE = "">

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.page:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00119', 'Page \'' $ l.page:code $ '\' already exists.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.email:email_from ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.email:email_to ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.email:email_cc ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.email:email_subj ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.email:mime_type ) }">	<MvFUNCTIONRETURN VALUE = 0> </MvIF>

	<MvASSIGN NAME = "l.email:page_code"	VALUE = "{ l.page_code }">
	<MvASSIGN NAME = "l.email:enabled" 		VALUE = 1>

	<MvCOMMENT>
	|
	| From Template
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.email_tfn_from"		VALUE = "{ 'quote-email-' $ l.email:code $ '-from.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.email:email_from, l.settings, l.email_tfn_from ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.email:tfn_from"		VALUE = "{ l.email_tfn_from }">

	<MvCOMMENT>
	|
	| To Template
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.email_tfn_to"		VALUE = "{ 'quote-email-' $ l.email:code $ '-to.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.email:email_to, l.settings, l.email_tfn_to ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.email:tfn_to"		VALUE = "{ l.email_tfn_to }">

	<MvCOMMENT>
	|
	| CC Template
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.email_tfn_cc"		VALUE = "{ 'quote-email-' $ l.email:code $ '-cc.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.email:email_cc, l.settings, l.email_tfn_cc ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.email:tfn_cc"		VALUE = "{ l.email_tfn_cc }">

	<MvCOMMENT>
	|
	| Subject Template
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.email_tfn_subj"		VALUE = "{ 'quote-email-' $ l.email:code $ '-subj.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.email:email_subj, l.settings, l.email_tfn_subj ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.email:tfn_subj"		VALUE = "{ l.email_tfn_subj }">

	<MvCOMMENT>
	|
	| Mime Type Template
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.email_tfn_mime"		VALUE = "{ 'quote-email-' $ l.email:code $ '-mime.mvc' }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate( l.email:mime_type, l.settings, l.email_tfn_mime ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.email:tfn_mime"		VALUE = "{ l.email_tfn_mime }">

	<MvCOMMENT>
	|
	| Create Page
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Page_LowLevel( l.page, l.template_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'store' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Update_Global_Settings( l.page, 'Quote email \'' $ l.email:code $ '\' item assignment' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteEmail_Insert_LowLevel( l.email ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Insert_LowLevel" PARAMETERS = "email var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ QuoteEmail_Copy( l.email, l.settings ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedProperty( 'quote_email', l.email:code, 'notemplate', l.null, l.settings, l.managedproperty ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_SendEmail" PARAMETERS = "module var, type, email var, quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.email:page_code, l.page ) OR ( NOT l.page:admin ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-QUOTES-00027', 'Unknown page \'' $ l.email:page_code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT QuoteComponentInitialize_CustomFields( l.quote:id, l.custom_fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Domain:mm_surl }">
		<MvASSIGN NAME = "l.tracking_json" 							VALUE = "{ glosub( g.Domain:mm_surl, 'merchant.mvc', 'json.mvc' ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.tracking_json" 							VALUE = "{ glosub( g.Domain:mm_url, 'merchant.mvc', 'json.mvc' ) }">
	</MvIF>

	<MvREFERENCE NAME = "l.page:settings:quote"						VARIABLE = "l.quote">
	<MvREFERENCE NAME = "l.page:settings:quote:custom_fields"		VARIABLE = "l.custom_fields">

	<MvASSIGN NAME = "l.page:settings:quote:comment" 				VALUE = "{ encodeentities( l.quote:comment ) }">
	<MvASSIGN NAME = "l.page:settings:quote:comment" 				VALUE = "{ glosub( l.page:settings:quote:comment, asciichar( 10 ), '<br>' ) }">
	<MvASSIGN NAME = "l.page:settings:quote:total" 					VALUE = "{ Quote_Total( l.quote ) }">
	<MvASSIGN NAME = "l.page:settings:quote:formatted_total"		VALUE = "{ [ g.Module_Store_Module_Currency ].CurrencyModule_AddFormatting( g.Module_Store_Module_Currency, l.page:settings:quote:total ) }">
	<MvASSIGN NAME = "l.page:settings:quote:formatted_date" 		VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( l.quote:created, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( l.quote:created, s.miva_language ) }">
	<MvASSIGN NAME = "l.page:settings:quote:tracker_url" 			VALUE = "{ l.tracking_json $ 'Store_Code=' $ encodeattribute( g.Store:code ) $ '&Function=Module&Module_Code=' $ encodeattribute( l.module:code ) $ '&Module_Function=Quote_Viewed&QuoteCode=' $ encodeattribute( l.quote:code ) }">
	<MvASSIGN NAME = "l.page:settings:quote:formatted_ship_amt"		VALUE = "{ [ g.Module_Store_Module_Currency ].CurrencyModule_AddFormatting( g.Module_Store_Module_Currency, l.page:settings:quote:ship_amt ) }">

	<MvIF EXPR = "{ ISNULL l.page:settings:quote:ship_desc }">
		<MvASSIGN NAME = "l.page:settings:quote:ship_desc"			VALUE = "{ Quote_ShippingModule_Description( l.page:settings:quote ) }">
	</MvIF>

	<MvASSIGN NAME = "l.flags"										VALUE = "">
	<MvASSIGN NAME = "l.flags:force_secure"							VALUE = 1>
	<MvASSIGN NAME = "l.flags:nosession"							VALUE = 1>
	<MvASSIGN NAME = "l.flags:sep" 									VALUE = 1>

	<MvCOMMENT>
	|
	| :quote_url is used for the new email templates
	| :basket_url is used for the old email templates and backwards compatibility
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.page:settings:quote:quote_url"				VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Page_Code_URL( 'QUOT', l.flags ) $ 'QuoteCode=' $ encodeattribute( l.quote:code ) }">
	<MvASSIGN NAME = "l.page:settings:quote:basket_url"				VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Page_Code_URL( 'BASK', l.flags ) $ 'Action=MIVA_LOAD_QUOTE&QuoteCode=' $ encodeattribute( l.quote:code ) }">

	<MvIF EXPR = "{ l.quote:expires EQ 0 }">
		<MvASSIGN NAME = "l.page:settings:quote:formatted_expiry"	VALUE = "{ 'Never' }">
	<MvELSE>
		<MvASSIGN NAME = "l.page:settings:quote:formatted_expiry"	VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( l.quote:expires, s.miva_language ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time( l.quote:expires, s.miva_language ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| We must explicitly set these module variables as we cannot be
	| guaranteed that we are running in a context that does so for us
	| (runtime, json)
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "g.Original_Store_Module_Currency"				VALUE = "{ g.Store_Module_Currency }">
	<MvASSIGN NAME = "g.Original_Store_Module_Tax"					VALUE = "{ g.Store_Module_Tax }">
	<MvASSIGN NAME = "g.Original_Store_Module_UI"					VALUE = "{ g.Store_Module_UI }">

	<MvASSIGN NAME = "g.Store_Module_Currency"						VALUE = "{ g.Store:currncy_mod }">
	<MvASSIGN NAME = "g.Store_Module_Tax"							VALUE = "{ g.Store:tax_mod }">
	<MvASSIGN NAME = "g.Store_Module_UI"							VALUE = "{ g.Store:ui_mod }">

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 				VALUE = "{ g.Module_Root $ g.Store:currncy_mod:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 					VALUE = "{ g.Module_Root $ g.Store:tax_mod:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"						VALUE = "{ g.Module_Root $ g.Store:ui_mod:module }">

	<MvCOMMENT>
	|
	| Render the page and capture the output
	|
	</MvCOMMENT>

	<MvCAPTURE VARIABLE = "l.message">
		<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Page_LowLevel( l.page:code, l.page ) }">
	</MvCAPTURE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ISNULL l.message }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Render the from, to, cc, subject, and mime type templates and capture their output.  This needs to be done after
	| the call to TemplateManager_Render_Page_LowLevel above so that all items are properly initialized.
	|
	</MvCOMMENT>

	<MvCAPTURE VARIABLE = "l.to">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Store_Template_Path $ l.email:tfn_to ].Template_Render( l.page, l.page:settings ) }">
	</MvCAPTURE>

	<MvCAPTURE VARIABLE = "l.from">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Store_Template_Path $ l.email:tfn_from ].Template_Render( l.page, l.page:settings ) }">
	</MvCAPTURE>

	<MvCAPTURE VARIABLE = "l.cc">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Store_Template_Path $ l.email:tfn_cc ].Template_Render( l.page, l.page:settings ) }">
	</MvCAPTURE>

	<MvCAPTURE VARIABLE = "l.subject">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Store_Template_Path $ l.email:tfn_subj ].Template_Render( l.page, l.page:settings ) }">
	</MvCAPTURE>

	<MvCAPTURE VARIABLE = "l.mime_type">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Store_Template_Path $ l.email:tfn_mime ].Template_Render( l.page, l.page:settings ) }">
	</MvCAPTURE>

	<MvCOMMENT>
	|
	| Restore the original g.Store_Module_xxx variables
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "g.Store_Module_Currency"	VALUE = "{ g.Original_Store_Module_Currency }">
	<MvASSIGN NAME = "g.Store_Module_Tax"		VALUE = "{ g.Original_Store_Module_Tax }">
	<MvASSIGN NAME = "g.Store_Module_UI"		VALUE = "{ g.Original_Store_Module_UI }">

	<MvCOMMENT>
	|
	| Send the email
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.subject"				VALUE = "{ trim( l.subject ) }">
	<MvASSIGN NAME = "l.mime_type"				VALUE = "{ trim( l.mime_type ) }">
	<MvASSIGN NAME = "l.base64_message"			VALUE = "{ crypto_base64_encode( l.message ) }">
	<MvASSIGN NAME = "l.base64_message_len"		VALUE = "{ len_var( l.base64_message ) }">
	<MvASSIGN NAME = "l.eol"					VALUE = "{ asciichar( 10 ) $ asciichar( 13 ) }">

	<MvCAPTURE VARIABLE = "l.mime_headers">
		<MvEVAL EXPR = "{ 'Mime-Version: 1.0' $ l.eol }">
		<MvEVAL EXPR = "{ 'Content-Type: ' $ l.mime_type $ l.eol }">
		<MvEVAL EXPR = "Content-Transfer-Encoding: base64">
	</MvCAPTURE>

	<MvCAPTURE VARIABLE = "l.mime_body">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Chunk_Split_Output( l.base64_message, l.base64_message_len, 72, l.eol ) }">
	</MvCAPTURE>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].SendEmail( l.to, l.from, l.cc, l.subject, l.mime_headers, l.mime_body ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteEmail_Default_MimeType" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Store:charset }">
		<MvFUNCTIONRETURN VALUE = "text/html">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "text/html; charset=&mvt:store:charset;">
</MvFUNCTION>

<MvFUNCTION NAME = "Create_Page_QUOT" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.page"			VALUE = "">
	<MvASSIGN NAME = "l.page:admin"		VALUE = 0>
	<MvASSIGN NAME = "l.page:secure"	VALUE = 1>
	<MvASSIGN NAME = "l.page:code"		VALUE = "QUOT">
	<MvASSIGN NAME = "l.page:name"		VALUE = "Quote Information">
	<MvASSIGN NAME = "l.page:ui_id"		VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.page:settings"	VALUE = "">

	<MvIF EXPR = "{ g.Store:ui_mod:code EQ 'cssui' AND
					g.Store:framework EQ 'shadows' }">	<MvCAPTURE VARIABLE = "l.data" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/shadows-quot.mvt"></MvCAPTURE>
	<MvELSE>											<MvCAPTURE VARIABLE = "l.data" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/cssui-quot.mvt"></MvCAPTURE>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item_Module( 'quoteinformation_page', l.module ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Page_LowLevel( l.page, l.data ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_URI_UT ].URI_Generate_Page_New( l.page ) }">						<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'quote_info' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'quote_content' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'quote_notes' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'customerlink' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'affiliatelink' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'cssui_links' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'buttons' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'messages' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'searchfield' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'urls' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'breadcrumbs' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'global_minibasket' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'hdft' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'head' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'html_profile' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'navbar' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'prodctgy_meta' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'readytheme' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'store' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'tokenlist' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Create_Page_QUOH" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.page"			VALUE = "">
	<MvASSIGN NAME = "l.page:admin"		VALUE = 0>
	<MvASSIGN NAME = "l.page:secure"	VALUE = 1>
	<MvASSIGN NAME = "l.page:code"		VALUE = "QUOH">
	<MvASSIGN NAME = "l.page:name"		VALUE = "Quote History List">
	<MvASSIGN NAME = "l.page:ui_id"		VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.page:settings"	VALUE = "">

	<MvIF EXPR = "{ g.Store:ui_mod:code EQ 'cssui' AND
					g.Store:framework EQ 'shadows' }">	<MvCAPTURE VARIABLE = "l.data" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/shadows-quoh.mvt"></MvCAPTURE>
	<MvELSE>											<MvCAPTURE VARIABLE = "l.data" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/quote/cssui-quoh.mvt"></MvCAPTURE>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item_Module( 'quotehistory_list', l.module ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Page_LowLevel( l.page, l.data ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_URI_UT ].URI_Generate_Page_New( l.page ) }">						<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'quotehistory_list' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'customerlink' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'affiliatelink' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'cssui_links' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'buttons' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'messages' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'searchfield' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'urls' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'breadcrumbs' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'global_minibasket' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'hdft' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'head' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'html_profile' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'navbar' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'prodctgy_meta' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'readytheme' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'store' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'tokenlist' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteInfo_ComponentModule_Generate_Code" PARAMETERS = "settings var, code var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.settings:groups }">	<MvASSIGN NAME = "l.array"	VALUE = "order:groups">
	<MvELSE>								<MvASSIGN NAME = "l.array"	VALUE = "order:items">
	</MvIF>

	<MvCAPTURE VARIABLE = "l.code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	<div>
		<div id="requester-fields">
			<div id="bill-to">
				<h2 class="fields-heading">Requester</h2>
				<div id="bill-to-fields">
					<div class="form_row">
						<label>First Name:</label>
						<div>&mvte:quote_info:quote:fname;</div>
					</div>
				
					<div class="form_row">
						<label>Last Name:</label>
						<div>&mvte:quote_info:quote:lname;</div>
					</div>

					<div class="form_row">
						<label>Email Address:</label>
						<div>&mvte:quote_info:quote:email;</div>
					</div>

					<div class="form_row">
						<label>Phone Number:</label>
						<div>&mvte:quote_info:quote:phone;</div>
					</div>

					<div class="form_row">
						<label>Zip/Postal Code:</label>
						<div>&mvte:quote_info:quote:zip;</div>
					</div>

					<div class="form_row">
						<label>Country:</label>
						<div>&mvte:quote_info:quote:country;</div>
					</div>

					<div class="form_row">
						<label>Comment:</label>
						<div>&mvte:quote_info:quote:comment;</div>
					</div>
				</div>
			</div>

			<div class="bill-to">
				<h2 class="fields-heading">Additional Information</h2>

				<mvt:foreach iterator="custom_field" array="quote_info:quote:custom_fields">
					<table>
						<tr>
							<th>&mvt:custom_field:field_code;:</th>
							<mvt:if expr="l.settings:custom_field:option_id">
								<td>&mvt:custom_field:opt_code;</td>
							<mvt:elseif expr="NOT ISNULL l.settings:custom_field:data">
								<td>&mvt:custom_field:data;</td>
							<mvt:elseif expr="NOT ISNULL l.settings:custom_field:data_long">
								<td>&mvt:custom_field:data_long;</td>
							<mvt:else>
								<td>&nbsp;</td>
							</mvt:if>
						</tr>
					</table>
				</mvt:foreach>
			</div>
		</div>
		
		<mvt:if expr="NOT ISNULL l.settings:quote:terms">
			<p>&mvt:quote:terms;</p>
		</mvt:if>
	</div>
	<MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteContent_ComponentModule_Generate_Code" PARAMETERS = "settings var, code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	<table style="width: 100%">
		<tr class="quote-heading"><MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ NOT ISNULL l.settings:imagetypes[ 1 ] }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td class="item-image">&nbsp;</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td class="item-name">Code</td>
			<td class="item-name">Product</td>
			<td class="item-quantity">Qty.</td>
			<td class="item-price">Price</td>
			<td class="item-price">Total</td>
		</tr>

		<mvt:foreach iterator="quote_item" array="quote_content:quote_items">
			<tr>
				<MIVA STANDARDOUTPUTLEVEL = "">
				<MvIF EXPR = "{ NOT ISNULL l.settings:imagetypes[ 1 ] }">
					<MIVA STANDARDOUTPUTLEVEL = "text, html">
				<td class="item-image" rowspan="&mvte:quote_content:rowspan"><MIVA STANDARDOUTPUTLEVEL = "">
					<MvASSIGN NAME = "l.imagetype"	VALUE = "{ [ g.Module_Feature_TUI_UT ].StripSpecialCharacters_TemplateCode( l.settings:imagetypes[ 1 ] ) }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
					<mvt:if expr="{ 'ISNULL l.settings:quote_item:imagetypes:' $ l.imagetype }">
						&nbsp;
					<mvt:else>
						<div class="item-image"><img src="{ '&mvte:quote_item:imagetypes:' $ l.imagetype $ ';' }" alt="&mvte:quote_item:name;" /></div>
					</mvt:if>
				</td><MIVA STANDARDOUTPUTLEVEL = "">
				</MvIF>
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				<td>&mvt:quote_item:code;</td>
				<td>&mvt:quote_item:name;<br />
				<MIVA STANDARDOUTPUTLEVEL = "">
				<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.settings:fields_custom">
					<MvASSIGN NAME = "l.safe_module_code"	VALUE = "{ [ g.Module_Feature_TUI_UT ].StripSpecialCharacters_TemplateCode( l.customfield:module ) }">
					<MvASSIGN NAME = "l.safe_field_code"	VALUE = "{ [ g.Module_Feature_TUI_UT ].StripSpecialCharacters_TemplateCode( l.customfield:code ) }"><MIVA STANDARDOUTPUTLEVEL = "text, html">
					<mvt:if expr="{ 'NOT ISNULL l.settings:quote_item:customfield_values:' $ l.safe_module_code $ ':' $ l.safe_field_code }">
						<div class="custom-field" id="{ l.safe_module_code $ '-' $ l.safe_field_code }">&mvte:customfield_names:<MvEVAL EXPR = "{ l.safe_module_code }">:<MvEVAL EXPR = "{ l.safe_field_code }">;: &mvt:quote_item:customfield_values:<MvEVAL EXPR = "{ l.safe_module_code }">:<MvEVAL EXPR = "{ l.safe_field_code }">;</div>
					</mvt:if><MIVA STANDARDOUTPUTLEVEL = "">
				</MvFOREACH>
				<MIVA STANDARDOUTPUTLEVEL = "text, html">
				</td>
				<td>&mvte:quote_item:quantity;</td>
				<td>&mvt:quote_item:formatted_price;</td>
				<td>&mvt:quote_item:formatted_total</td>
			</tr>

			<mvt:foreach iterator="quote_option" array="quote_item:options">
				<tr>
					<td colspan="1" style="background: #ffffff">&nbsp;</td>
					<mvt:if expr="l.settings:quote_option:option_id">
						<td style="background: #ffffff">&mvt:quote_option:attr_code;: &mvt:quote_option:opt_code;</td>
					<mvt:elseif expr="NOT ISNULL l.settings:quote_option:data">
						<td style="background: #ffffff">&mvt:quote_option:attr_code;: &mvt:quote_option:data;</td>
					<mvt:elseif expr="NOT ISNULL l.settings:quote_option:data_long">
						<td style="background: #ffffff">&mvt:quote_option:attr_code;: &mvt:quote_option:data_long;</td>
					<mvt:else>
						<td style="background: #ffffff">&mvt:quote_option:attr_code;</td>
					</mvt:if>
					<td style="background: #ffffff">&mvte:quote_option:quantity;</td>
					<td style="background: #ffffff">&mvt:quote_option:formatted_price;</td>
					<td style="background: #ffffff" />
				</tr>
			</mvt:foreach>
		</mvt:foreach>

		<tr class="basket-charges"><MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ NOT ISNULL l.settings:imagetypes[ 1 ] }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td colspan="4">&nbsp;</td><MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSE>
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td colspan="3">&nbsp;</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td class="charge-description">Shipping: &mvt:quote_info:quote:ship_desc;:</td>
			<td class="formatted-charge">&mvt:quote_info:quote:formatted_ship_amt;</td>
		</tr>

		<tr id="basket-totals">
			<MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ NOT ISNULL l.settings:imagetypes[ 1 ] }">
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td colspan="4">&nbsp;</td><MIVA STANDARDOUTPUTLEVEL = "">
			<MvELSE>
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td colspan="3">&nbsp;</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>
			<MIVA STANDARDOUTPUTLEVEL = "text, html">
			<td class="total-prompt">Total:</td>
			<td class="formatted-total">&mvt:quote_content:formatted_total;</td>
		</tr>
	</table>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteNotes_ComponentModule_Generate_Code" PARAMETERS = "settings var, code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	<script type = "text/javascript">
		function Runtime_QuoteNote_Insert( quote_id, content, callback, delegator )
		{
			return AJAX_Call_Module(	callback,
										'runtime', 
										'quote',
										'Runtime_QuoteNote_Insert',
										'Quote_ID='	+ encodeURIComponent( quote_id ) +
										'&Content='	+ encodeURIComponent( content ),
										delegator );
		}

		function SubmitNote()
		{
			var note_content = document.getElementById( 'note_content' ).value;

			Runtime_QuoteNote_Insert( '&mvtj:quote_info:quote:id;', note_content, function( response )
			{
				if ( !response.success )
				{
					return alert( response.error_message );
				}

				window.location.reload( true );
			} );
		}
	</script>

	<h2 align="left">Request a change for Quote #&mvte:quote_info:quote:id;</h2>
	<table style="width: 40%; float: left;">
		<tr rowspan="4">
			<td style="background: #ffffff;width:30px">Request:</td>
			<td style="background: #ffffff;"><textarea id="note_content" rows="4" style="width: 95%; resize: vertical;"></textarea></td>
		</tr>
		<tr>
			<td colspan="2" align="right" style="background: #ffffff"><input type="button" onclick="SubmitNote()" value="Submit" /></td>
		</tr>
	</table>
	<table style="width: 60%; float: right;">
		<tr>
			<td></td>
			<td>Notes</td>
			<td>Date added</td>
			
			<mvt:foreach iterator="note" array="quote_notes:quote_notes">
				<tr>
					<td style="background: #ffffff">&mvte:note:formatted_source;</td>
					<td style="background: #ffffff; width: 60%">&mvte:note:notetext;</td>
					<td style="background: #ffffff">&mvt:note:formatted_dtstamp;</td>
				</tr>
			</mvt:foreach>
		</tr>
	</table>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteHistory_ComponentModule_Generate_Code" PARAMETERS = "settings var, code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	<div class="line-item">
	<table>
		<tr class="heading"><MIVA STANDARDOUTPUTLEVEL = "">
			<MvIF EXPR = "{ l.settings:quote_id }">
				<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					<mvt:if expr="g.SortBy EQ 'QuoIDAsc' OR ISNULL g.SortBy">
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoIDDesc">Quote ID</a>
					<mvt:else>
					<a class="a" href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoIDAsc">Quote ID</a>
					</mvt:if>
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.settings:order_id }">
				<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					<mvt:if expr="g.SortBy EQ 'QuoOrIDAsc' OR ISNULL g.SortBy">
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoOrIDDesc">Order ID</a>
					<mvt:else>
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoOrIDAsc">Order ID</a>		
					</mvt:if>
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.settings:code }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					Code
				</td>
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "">

			<MvIF EXPR = "{ l.settings:status }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					<mvt:if expr="g.SortBy EQ 'QuoStAsc' OR ISNULL g.SortBy">
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoStDesc">Status</a>
					<mvt:else>
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoStAsc">Status</a>
					</mvt:if>
				</td>
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "">

			<MvIF EXPR = "{ l.settings:created }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					<mvt:if expr="g.SortBy EQ 'QuoDtAsc' OR ISNULL g.SortBy">
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoDtDesc">Created</a>
					<mvt:else>
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoDtAsc">Created</a>
					</mvt:if>
				</td>
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "">

			<MvIF EXPR = "{ l.settings:expires }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					<mvt:if expr="g.SortBy EQ 'QuoExAsc' OR ISNULL g.SortBy">
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoExDesc">Expires</a>
					<mvt:else>
					<a href="&mvte:global:secure_sessionurl;&amp;Store_Code=&mvta:store:code;&amp;Screen=QUOH&amp;SortBy=QuoExAsc">Expires</a>
					</mvt:if>
				</td>
			</MvIF><MIVA STANDARDOUTPUTLEVEL = "">

			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					&nbsp;
				</td>
		</tr>
		<mvt:foreach iterator="quote" array="quotes">
		<mvt:if expr = "l.pos1 MOD 2">
		<tr class="alt_row">
		<mvt:else>
		<tr>
		</mvt:if>

			<MvIF EXPR = "{ l.settings:quote_id }">
				<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					&mvte:quote:id;
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.settings:order_id }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					<mvt:if expr = "l.settings:quote:order_id">
						<a href="&mvte:global:secure_sessionurl;Screen=ORDS&amp;Store_Code=&mvta:global:Store_Code;&amp;SortBy=&mvta:global:SortBy;&amp;Offset=&mvta:global:Offset;&amp;Order_ID=&mvta:quote:order_id;&amp;Order_BillEmail=&mvta:global:Order_BillEmail;&amp;Order_BillZip=&mvta:global:Order_BillZip;">&mvte:quote:order_id;</a>
					<mvt:else>
						None
					</mvt:if>
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.settings:code }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-invoice">
					&mvte:quote:code;
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.settings:status }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-status">
					&mvt:quote:formatted_status;
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.settings:created }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-date">
					&mvt:quote:formatted_created_date;
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>

			<MvIF EXPR = "{ l.settings:expires }">
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
				<td class="order-date">
					&mvt:quote:formatted_expiry_date;
				</td><MIVA STANDARDOUTPUTLEVEL = "">
			</MvIF>
			<MIVA STANDARDOUTPUTLEVEL = "text,html">
		<td class="order-view">
			<a href="&mvte:global:secure_sessionurl;Screen=QUOT&amp;Store_Code=&mvta:global:Store_Code;&amp;QuoteCode=&mvta:quote:code;">View</a>
		</td>
		</tr>
		</mvt:foreach>
	</table>

	<mvt:if expr="(g.Offset OR g.NextOffset) AND (l.settings:quotehistory_list:per_page NE 0)">
		<table>
			<tr>
				<td class="previous-button">
					<mvt:if expr="g.Offset EQ 0">
					&nbsp;
					<mvt:else>
					<form method="post" action="&mvte:global:secure_sessionurl;" />
					<input type="hidden" name="Screen" value="&mvte:global:Screen;" />
					<input type="hidden" name="Store_Code" value="&mvte:global:Store_Code;" />
					<input type="hidden" name="SortBy" value="&mvte:global:SortBy;" />
					<input type="hidden" name="Order_BillEmail" value="&mvte:global:Order_BillEmail;" />
					<input type="hidden" name="Order_BillZip" value="&mvte:global:Order_BillZip;" />
					<input type="hidden" name="Offset" value="&mvte:global:PrevOffset;" />
					<mvt:item name="buttons" param="Previous" />
					</form>
					</mvt:if>
				</td>
				<td class="next-button">
					<mvt:if expr="g.NextOffset EQ 0">
					&nbsp;
					<mvt:else>
					<form method="post" action="&mvte:global:secure_sessionurl;">
					<input type="hidden" name="Screen" value="&mvte:global:Screen;" />
					<input type="hidden" name="Store_Code" value="&mvte:global:Store_Code;" />
					<input type="hidden" name="SortBy" value="&mvte:global:SortBy;" />
					<input type="hidden" name="Order_BillEmail" value="&mvte:global:Order_BillEmail;" />
					<input type="hidden" name="Order_BillZip" value="&mvte:global:Order_BillZip;" />
					<input type="hidden" name="Offset" value="&mvte:global:NextOffset;" />
					<mvt:item name="buttons" param="Next" />
					</form>
					</mvt:if>
				</td>
			</tr>
		</table>
	</mvt:if>
</div>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "Generate_CSS_CSSUI" PARAMETERS = "code var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.code">
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	#requester-fields label{
		float:left;
		width:150px;
		white-space:nowrap;
		text-align:right;
		padding:2px 5px 3px 0;
		clear:both;
	}
	#requester-fields input.textfield,
	.non-editable div.form_row div{
		width:170px;
		margin:0 0 4px 0;
	}

	#requester-fields select{
		width:176px;
		margin:0 0 4px 0;
	}

	#requester-fields .controls label{
		float:none;
	}

	#requester-fields.editable .form_row{
		margin:0 0 6px 0;
		text-align:left;
	}

	#requester-fields.non-editable .form_row{
		margin:0 0 4px 0; 
		text-align:left;
	}

	#requester-fields.non-editable label{
		margin:0 0 0 30px;
		padding:0 4px 0 0;
		font-weight:bold;
		width:110px;
		text-align:right;
		float:left;
		clear:both;
		white-space:nowrap;
	}

	#requester-fields .form_row div{
		float:left;
	}

	#requester-fields
	{ 
		margin:0 0 32px 0;
	}

	#requester-fields{
		margin:16px 0;
	}

	#quote-contents,
	#order-contents table{
		width:100%;
		border-left:1px solid #ffffff;
		border-top:1px solid #ffffff;
	}

	#quote-contents table,
	#quote-contents table{
		border-collapse:collapse;
	}

	#quote-contents td,
	#order-contents td{
		background-color:#eeeeee;
		border-bottom:1px solid #ffffff;
		border-right:1px solid #ffffff;
		vertical-align:top;
		padding:6px;
		font:normal 1em Arial, Helvetica, Verdana, sans-serif;
	}

	#quote-contents table tr.quote-heading td,
	#quote-contents table tr.quote-heading td,
	#quote-contents table tr.heading td{
		background-color:#cccccc;
		color:#333333;
		font-weight:bold;
		text-align:center;
		font-size:1em;
		white-space:nowrap;
	}

	#quote-contents .quote-qty-input{ width:34px; }

	#quote-contents .item-image{
		vertical-align:middle;
	}

	#quote-contents .item-remove{
		width:8%;
		vertical-align:middle;
	}

	#quote-contents .item-remove-link{
		margin:auto;
		margin-top:.5em;
		vertical-align:middle;
	}

	#quote-contents table .quote-heading td.item-name{
		text-align:left;
	}

	#quote-contents.editable .item-quantity{
		width:13%;
		text-align:center;
		white-space:nowrap;
	}

	#quote-contents.non-editable .item-quantity{
		width:6%;
		text-align:center;
	}

	#quote-contents .item-options .item-name{ padding-left:16px; }

	#quote-contents.non-editable .item-name{ width:59%; }

	#quote-contents.editable .item-name{ width:66%; }
	#quote-contents.editable .item-name div.item-name-div{ float:left; }
	#quote-contents td.item-name{ text-align:left; }

	#quote-contents .item-price{
		width:10%;
		text-align:right;
		white-space:nowrap;
	}

	#quote-contents .item-total{
		width:10%;
		text-align:right;
	}

	#quote-contents .custom-field{
		font-size:x-small;
	}

	#quote-contents .item-discount{
		white-space:nowrap;
		font-size:x-small;
		font-style:italic;
	}

	#quote-contents .quote-charges .charge-description,
	#quote-contents .quote-charges .formatted-charge{
		font-style:italic;
		text-align:right;
		white-space:nowrap;
	}

	#quote-contents #quote-totals .formatted-total,
	#quote-contents #quote-totals .total-prompt,
	#quote-contents #quote-remaining .formatted-total,
	#quote-contents #quote-remaining .total-prompt{
		font-weight:bold;
		text-align:right;
	}

	#quote-contents .quote-payments .charge-description,
	#quote-contents .quote-payments .formatted-charge{
		font-style:normal;
		text-align:right;
		white-space:nowrap;
	}
	<MIVA STANDARDOUTPUTLEVEL = "text, html">
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "CommonComponentFields_Initialize_Quote" PARAMETERS = "quote var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.quote:status EQ 0 }">		<MvASSIGN NAME = "l.quote:formatted_status"	VALUE = "New">
	<MvELSEIF EXPR = "{ l.quote:status EQ 1 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Sent">
	<MvELSEIF EXPR = "{ l.quote:status EQ 2 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Modified">
	<MvELSEIF EXPR = "{ l.quote:status EQ 3 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Accepted">
	<MvELSEIF EXPR = "{ l.quote:status EQ 4 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Viewed">
	<MvELSEIF EXPR = "{ l.quote:status EQ 5 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Purchased">
	<MvELSEIF EXPR = "{ l.quote:status EQ 6 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Expired">
	<MvELSEIF EXPR = "{ l.quote:status EQ 7 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Response Needed">
	<MvELSEIF EXPR = "{ l.quote:status EQ 8 }">	<MvASSIGN NAME = "l.quote:formatted_status" VALUE = "Converted to Order">
	</MvIF>

	<MvASSIGN NAME = "l.quote:formatted_created_date"		VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( l.quote:created, s.miva_language ) }">
	<MvASSIGN NAME = "l.quote:formatted_created_time"		VALUE = "{ [ g.Module_Library_Utilities ].Format_Time( l.quote:created, s.miva_language ) }">

	<MvIF EXPR = "{ l.quote:expires }">
		<MvASSIGN NAME = "l.quote:formatted_expiry_date"	VALUE = "{ [ g.Module_Library_Utilities ].Format_Date( l.quote:expires, s.miva_language ) }">
		<MvASSIGN NAME = "l.quote:formatted_expiry_time"	VALUE = "{ [ g.Module_Library_Utilities ].Format_Time( l.quote:expires, s.miva_language ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.quote:formatted_expiry_date"	VALUE = "No expiry">
		<MvASSIGN NAME = "l.quote:formatted_expiry_time"	VALUE = "No expiry">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Quote_Append_NavigationItem" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.xml" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<Provision>
			<Store code="{ encodeentities( g.Store:code ) }">
				<Module code="readytheme" feature="util">
					<NavigationSetItem_Add code="account_navigation" subitem1="My Orders" last="true">
						<Name>View Quotes</Name>
						<Active>true</Active>
						<Link type="page">QUOH</Link>
					</NavigationSetItem_Add>
				</Module>
			</Store>
		</Provision>
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_Action_ProvisionStringData( l.xml ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "QuoteItem_Calculate_Total" PARAMETERS = "quoteitem var, quoteoptions var, quoteoption_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.quoteitem:total"		VALUE = "{ l.quoteitem:price }">

	<MvFOREACH ITERATOR = "l.quoteoption" ARRAY = "l.quoteoptions" COUNT = "{ l.quoteoption_count }">
		<MvASSIGN NAME = "l.quoteitem:total"	VALUE = "{ l.quoteitem:total + l.quoteoption:price }">			
	</MvFOREACH>

	<MvASSIGN NAME = "l.quoteitem:total"		VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.quoteitem:total * l.quoteitem:quantity ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvINCLUDE FILE = "modules/util/quote/emaillist.mv">
<MvINCLUDE FILE = "modules/util/quote/emaileditdialog.mv">
<MvINCLUDE FILE = "modules/util/quote/customfieldlist.mv">
<MvINCLUDE FILE = "modules/util/quote/baselist.mv">
<MvINCLUDE FILE = "modules/util/quote/list.mv">
<MvINCLUDE FILE = "modules/util/quote/customerquotelist.mv">
<MvINCLUDE FILE = "modules/util/quote/customerquotedialog.mv">
<MvINCLUDE FILE = "modules/util/quote/itemdialog.mv">
<MvINCLUDE FILE = "modules/util/quote/shippingmethoddialog.mv">
<MvINCLUDE FILE = "modules/util/quote/requestereditdialog.mv">
<MvINCLUDE FILE = "modules/util/quote/customfielddialog.mv">
<MvINCLUDE FILE = "modules/util/quote/overlay.mv">
<MvINCLUDE FILE = "modules/util/quote/overlaylist.mv">
<MvINCLUDE FILE = "modules/util/quote/overlaydetails.mv">
<MvINCLUDE FILE = "modules/util/quote/customerquoteoverlay.mv">
<MvINCLUDE FILE = "modules/util/quote/functions.mv">
<MvINCLUDE FILE = "modules/util/quote/notelist.mv">
<MvINCLUDE FILE = "modules/util/quote/notedialog.mv">
<MvINCLUDE FILE = "modules/util/quote/noteaddeditdialog.mv">
<MvINCLUDE FILE = "modules/util/quote/customerlookupdialog.mv">
<MvINCLUDE FILE = "modules/util/quote/customerdashboard.mv">

<MvINCLUDE FILE = "json/mivascript.mv">

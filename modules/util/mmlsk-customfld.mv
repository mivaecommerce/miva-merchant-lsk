<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-UTL-CST-
| Next Error Code: 382  
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-customfields">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Custom Fields">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1001">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.08">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Custom Fields allow you to add your own fields to categories, products, customer records, etc.  For example, you can add a custom product field called 'MSRP' to display the manufacturer suggested retail price on the product page.  You must enable the Custom Fields module before you can create custom fields.  You can add, edit and delete custom fields from the Store Utility Settings page.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "util, vis_util, vis_category, not_cat, fields_cat, fields_cat_map, vis_product, not_prod, fields_prod, fields_prod_map, vis_cust, not_cust, fields_cust, fields_cust_map, data_store, provision_store, component, component_frag, clientside, clientside_sri, json, fulfill, vis_order, not_order, fields_ordr, fields_ordr_map, not_search, prod_facet, upload, copy_prod, fields_page, not_page">
</MvFUNCTION>

<MvCOMMENT>
|
| Store-level Module Data Support Feature (data_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CFM_Fields', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CFM_Groups', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CFM_FieldOptions', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CFM_ProdMultiValues', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'customfields', l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'customfields', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ItemExtension( 'store', 	l.module:code ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ItemExtension( 'shipment', l.module:code ) }">

	<MvCOMMENT>
	|
	| Category Fields
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_CatFields
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 	$ ',
							group_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							fieldtype 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 ) 	$ ',
							info		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ ',
							is_public	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  ) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00043', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CatFields_1 ON ' $ g.Store_Table_Prefix $ 'CFM_CatFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00044', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CatFields_2 ON ' $ g.Store_Table_Prefix $ 'CFM_CatFields ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00045', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CatFields_3 ON ' $ g.Store_Table_Prefix $ 'CFM_CatFields ( group_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00253', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_CatValues
						  (
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							cat_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  ) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00046', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CatValues_1 ON ' $ g.Store_Table_Prefix $ 'CFM_CatValues ( cat_id, field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00047', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CatValues_2 ON ' $ g.Store_Table_Prefix $ 'CFM_CatValues ( field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00368', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Product Fields
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_ProdFields
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 	$ ',
							group_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							fieldtype 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 ) 	$ ',
							facet 		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							info		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ ',
							is_public	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  ) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdFields_1 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdFields_2 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdFields ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00003', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdFields_3 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdFields ( group_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00254', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_ProdValues
						  (
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  ) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdValues_1 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdValues ( product_id, field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdValues_2 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdValues ( field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00369', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00286', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues_1 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00287', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues_2 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues ( field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00288', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues_3 ON ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues ( product_id, field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00289', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Customer Fields
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_CustFields
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							group_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							fieldtype 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 ) 	$ ',
							info		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ ',
							is_public	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  ) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CustFields_1 ON ' $ g.Store_Table_Prefix $ 'CFM_CustFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CustFields_2 ON ' $ g.Store_Table_Prefix $ 'CFM_CustFields ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00009', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CustFields_3 ON ' $ g.Store_Table_Prefix $ 'CFM_CustFields ( group_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00255', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_CustValues
						  (
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							cust_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  ) ' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CustValues_1 ON ' $ g.Store_Table_Prefix $ 'CFM_CustValues ( cust_id, field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_CustValues_2 ON ' $ g.Store_Table_Prefix $ 'CFM_CustValues ( field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00370', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Order Fields
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_OrderFields
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							group_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							fieldtype 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 ) 	$ ',
							info		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ ',
							is_public	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00140', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_OrderFields_1 ON ' $ g.Store_Table_Prefix $ 'CFM_OrderFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00141', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_OrderFields_2 ON ' $ g.Store_Table_Prefix $ 'CFM_OrderFields ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00142', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_OrderFields_3 ON ' $ g.Store_Table_Prefix $ 'CFM_OrderFields ( group_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00256', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_OrderValues
						  (
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							order_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00143', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_OrderValues_1 ON ' $ g.Store_Table_Prefix $ 'CFM_OrderValues ( order_id, field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00144', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_OrderValues_2 ON ' $ g.Store_Table_Prefix $ 'CFM_OrderValues ( field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00371', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Page Fields
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_PageFields
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							group_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) 	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ ',
							fieldtype 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 ) 	$ ',
							info		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ ',
							is_public	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00312', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_PageFields_1 ON ' $ g.Store_Table_Prefix $ 'CFM_PageFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00313', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_PageFields_2 ON ' $ g.Store_Table_Prefix $ 'CFM_PageFields ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00314', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_PageFields_3 ON ' $ g.Store_Table_Prefix $ 'CFM_PageFields ( group_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00315', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_PageValues
						  (
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							page_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							pagever_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							value_long	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00316', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_PageValues_1 ON ' $ g.Store_Table_Prefix $ 'CFM_PageValues ( pagever_id, field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00317', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_PageValues_2 ON ' $ g.Store_Table_Prefix $ 'CFM_PageValues ( field_id, value )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00372', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_PageValues_3 ON ' $ g.Store_Table_Prefix $ 'CFM_PageValues ( page_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00376', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvCOMMENT>
	|
	| FieldOptions
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_FieldOptions
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							field_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 ) 	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00145', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions_1 ON ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00257', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions_2 ON ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions ( field_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00258', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvCOMMENT>
	|
	| Groups
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'CFM_Groups
						  (
							id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code 	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							name	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 ) 	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00146', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CFM_Groups_1 ON ' $ g.Store_Table_Prefix $ 'CFM_Groups ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00147', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CFM_Groups_2 ON ' $ g.Store_Table_Prefix $ 'CFM_Groups ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00148', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00259', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CFM_Fields' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CFM_Groups' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CFM_FieldOptions' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'CFM_ProdMultiValues' ) }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_CatFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_CatValues' }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_ProdFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_ProdValues' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues' }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_CustFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_CustValues' }">
	
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_OrderFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_OrderValues' }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_PageFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_PageValues' }">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'CFM_Groups' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Category Add/Edit Screen Feature (vis_category)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Category_Head" PARAMETERS = "module var, tab, category var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'CPFG_' CIN l.tab }">
		<MvEVAL EXPR = "{ Custom_Field_Head( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Tabs" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT GroupList_Load_Category( l.groups ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
		
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos">
		<MvIF EXPR = "{ l.pos GT 1 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ ',' }">
		</MvIF>
		
		<MvIF EXPR = "{ l.group:id EQ 0 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_default:Custom Fields' }">
		<MvELSE>
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_' $ l.group:code $ ':' $ l.group:name }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Content" PARAMETERS = "module var, tab, load_fields, category var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.group_count"			VALUE = "{ GroupList_Load_Include_Default( l.groups ) }">
		
	<MvIF EXPR = "{ l.category:id }">	<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">		
	<MvELSE>							<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'CTGY', 0, 1, 0, 0 ) }">
	</MvIF>
	
	<MvIF EXPR = "{ g.Load_Fields }">
		<MvASSIGN NAME = "g.CFM_Fields"			VALUE = "">
		
		<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
			<MvASSIGN NAME = "l.loaded_fields"	VALUE = "">
			
			<MvIF EXPR = "{ l.category:id }">
				<MvASSIGN NAME = "l.null"		VALUE = "{ CategoryFieldAndValueList_Load_Group( l.category:id, l.group:id, l.loaded_fields ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.null"		VALUE = "{ CategoryFieldList_Load_Group( l.group:id, l.loaded_fields ) }">
			</MvIF>
			
			<MvASSIGN NAME = "g.CFM_Fields" INDEX = "{ l.pos }" MEMBER = "fields" VALUE = "{ l.loaded_fields }">
		</MvFOREACH>
	</MvIF>
	
	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
		<MvIF EXPR = "{ g.Tab EQ 'CPFG_' $ l.group:code }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMImagePicker_HTML() }">
			<MvEVAL EXPR = "{ Custom_Field_Content( l.pos, l.can_upload, 1 ) }">
		<MvELSE>
			<MvHIDE FIELDS = "{ 'g.CFM_Fields[' $ l.pos $ ']' }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">		
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvASSIGN NAME = "l.field:value" VALUE = "{ trim( l.field:value ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Insert" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

			<MvIF EXPR = "{ len_var( l.field:value ) }">
				<MvIF EXPR = "{ NOT CategoryFieldValue_Set( l.field:id, l.category:id, l.field:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
				
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00089', 'CustomFields Category ID \'' $ l.category:id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Update" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

			<MvIF EXPR = "{ len_var( l.field:value ) }">
				<MvIF EXPR = "{ NOT CategoryFieldValue_Set( l.field:id, l.category:id, l.field:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
				
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00090', 'CustomFields Category ID \'' $ l.category:id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT CategoryFieldValue_Delete( l.field:id, l.category:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00091', 'CustomFields Category ID \'' $ l.category:id $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Delete" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Category Configuration Change Notification Feature (not_cat)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Category_Insert" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Category_Update" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Category_Delete" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CategoryFieldValue_Delete_All_Category( l.category:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_CategoryXProduct_Insert" PARAMETERS = "module var, cat_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_CategoryXProduct_Delete" PARAMETERS = "module var, cat_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Category Custom Fields Feature (fields_cat)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Category_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count" VALUE = "{ CategoryFieldList_Load_All( l.fields ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.count }">
		<MvASSIGN NAME = "l.field:public" VALUE = "{ l.field:is_public }">

		<MvEVAL EXPR = "{ CustomFields_Add_Field_Type( l.field ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:cache:customfld:category:field_definitions }">
		<MvASSIGN NAME = "l.null" VALUE = "{ CategoryFieldList_LoadAll_Cache( g.Session:cache:customfld:category:field_definitions ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:category:field_definitions">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Value" PARAMETERS = "module var, cat_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:category:cat_id NE l.cat_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:category:cat_id"	VALUE = "{ l.cat_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:category:fields"	VALUE = "">

		<MvIF EXPR = "{ NOT CategoryFieldValue_LoadAll_Cache( l.cat_id, g.Session:cache:customfld:category:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:category:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Value_Array" PARAMETERS = "module var, cat_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Set_Field" PARAMETERS = "module var, cat_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CategoryField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ Normalize_Value( l.field, l.value ) }">

	<MvIF EXPR = "{ len( l.value ) }">
		<MvIF EXPR = "{ NOT CategoryFieldValue_Set( l.field:id, l.cat_id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00094', 'CustomFields Category ID \'' $ l.cat_id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT CategoryFieldValue_Delete( l.field:id, l.cat_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00095', 'CustomFields Category ID \'' $ l.cat_id $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:category:cat_id EQ l.cat_id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:category:fields" VALUE = "{ l.value }">
			<MvMEMBER NAME = "{ l.code }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Set_Field_Array" PARAMETERS = "module var, cat_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00304', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CategoryField_Load_Code_Cached( l.code, l.null ) }">
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Category( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ CustomFields_Generic_Query_SELECT( l.query, l.code ) }">

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query( l.data, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Category( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Search( l.data, l.query, l.code, l.operator, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Category( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy( l.data, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, category_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CategoryFieldValue_Load_CodeAndCategory( l.code, l.category_id, l.field, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy_LoadIndexRecord( l.loaded_record, l.field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CategoryField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Value( l.view_name, l.code, l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Field_Choices" PARAMETERS = "module var, code, choices var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CategoryField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Build_Choices( l.field, l.choices ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Multiple Category Custom Fields Feature (fields_cat_map)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Category_Fields_Mapped" PARAMETERS = "module var, cat_id, field_map var, output_fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:category:cat_id NE l.cat_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:category:cat_id"	VALUE = "{ l.cat_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:category:fields"	VALUE = "">

		<MvIF EXPR = "{ NOT CategoryFieldValue_LoadAll_Cache( l.cat_id, g.Session:cache:customfld:category:fields ) }">
			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field_code" ARRAY = "l.field_codes" COUNT = "{ miva_struct_members( g.Session:cache:customfld:category:fields, l.field_codes ) }">
		<MvREFERENCEARRAY NAME = "l.value"			VARIABLE = "g.Session:cache:customfld:category:fields">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.mapped_member"	VARIABLE = "l.field_map">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.mapped_member }">
			<MvASSIGN NAME = "l.output_fields" MEMBER = "{ l.mapped_member }" VALUE = "{ l.value }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Add/Edit Screen Feature (vis_product)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Head" PARAMETERS = "module var, tab, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'CPFG_' CIN l.tab }">
		<MvEVAL EXPR = "{ Custom_Field_Head( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Tabs" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT GroupList_Load_Product( l.groups ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
		
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos">
		<MvIF EXPR = "{ l.pos GT 1 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ ',' }">
		</MvIF>
		
		<MvIF EXPR = "{ l.group:id EQ 0 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_default:Custom Fields' }">
		<MvELSE>
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_' $ l.group:code $ ':' $ l.group:name }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Content" PARAMETERS = "module var, tab, load_fields, product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.group_count"			VALUE = "{ GroupList_Load_Include_Default( l.groups ) }">
		
	<MvIF EXPR = "{ l.product:id }">	<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">		
	<MvELSE>							<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'PROD', 0, 1, 0, 0 ) }">
	</MvIF>
	
	<MvIF EXPR = "{ g.Load_Fields }">
		<MvASSIGN NAME = "g.CFM_Fields"			VALUE = "">
		
		<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
			<MvASSIGN NAME = "l.loaded_fields"	VALUE = "">
			
			<MvIF EXPR = "{ l.product:id }">
				<MvASSIGN NAME = "l.null"		VALUE = "{ ProductFieldAndValueList_Load_Group( l.product:id, l.group:id, l.loaded_fields ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.null"		VALUE = "{ ProductFieldList_Load_Group( l.group:id, l.loaded_fields ) }">
			</MvIF>
			
			<MvASSIGN NAME = "g.CFM_Fields" INDEX = "{ l.pos }" MEMBER = "fields" VALUE = "{ l.loaded_fields }">
		</MvFOREACH>
	</MvIF>

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
		<MvIF EXPR = "{ g.Tab EQ 'CPFG_' $ l.group:code }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMImagePicker_HTML() }">
			<MvEVAL EXPR = "{ Custom_Field_Content( l.pos, l.can_upload, 1 ) }">
		<MvELSE>
			<MvHIDE FIELDS = "{ 'g.CFM_Fields[' $ l.pos $ ']' }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">		
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvASSIGN NAME = "l.field:value" VALUE = "{ trim( l.field:value ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvIF EXPR = "{ l.field:fieldtype NE 'multitext' }">
				<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

				<MvIF EXPR = "{ NOT ISNULL l.field:value }">
					<MvIF EXPR = "{ NOT ProductFieldValue_Set( l.field:id, l.product:id, l.field:value ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00096', 'CustomFields Product ID \'' $ l.product:id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">	
				</MvIF>
			<MvELSE>
				<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_splitstring( l.field:value, asciichar( 10 ), l.values, 'trim' ) }">

				<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
					<MvIF EXPR = "{ NOT ISNULL l.value }">
						<MvIF EXPR = "{ NOT ProductFieldMultiValue_Set( l.field:id, l.product:id, l.value ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvFOREACH>
				
				<MvIF EXPR = "{ l.value_count }">
					<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00290', 'Created ' $ l.value_count $ ' multitext value(s) for CustomFields Product ID \'' $ l.product:id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">
				</MvIF>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvIF EXPR = "{ l.field:fieldtype NE 'multitext' }">
				<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

				<MvIF EXPR = "{ NOT ISNULL l.field:value }">
					<MvIF EXPR = "{ NOT ProductFieldValue_Set( l.field:id, l.product:id, l.field:value ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
					
					<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00097', 'CustomFields Product ID \'' $ l.product:id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
				<MvELSE>
					<MvIF EXPR = "{ NOT ProductFieldValue_Delete( l.field:id, l.product:id ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00098', 'CustomFields Product ID \'' $ l.product:id $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">	
				</MvIF>
			<MvELSE>
				<MvIF EXPR = "{ NOT ProductFieldMultiValue_Delete( l.field:id, l.product:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00291', 'Deleted all multitext values for CustomFields Product ID \'' $ l.product:id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">	

				<MvCOMMENT>
				|
				| If the custom fields are not viewed before clicking "Update"
				| then the hidden fields are still an ARRAY.
				|
				</MvCOMMENT>

				<MvIF EXPR = "{ miva_variable_type( l.field:value ) EQ 'ARRAY' }">
					<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_array_elements( l.field:value ) }">
					<MvASSIGN NAME = "l.values"			VALUE = "{ l.field:value }">
				<MvELSE>
					<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_splitstring( l.field:value, asciichar( 10 ), l.values, 'trim' ) }">
				</MvIF>

				<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
					<MvIF EXPR = "{ NOT ISNULL l.value }">
						<MvIF EXPR = "{ NOT ProductFieldMultiValue_Set( l.field:id, l.product:id, l.value ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvFOREACH>

				<MvIF EXPR = "{ l.value_count }">
					<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00292', 'Created ' $ l.value_count $ ' multitext value(s) for CustomFields Product ID \'' $ l.product:id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">
				</MvIF>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "g.Session:cache:customfld:product" VALUE = "">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Configuration Change Notification Feature (not_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductFieldValue_Delete_All_Product( l.product:id ) AND ProductFieldMultiValue_Delete_All_Product( l.product:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Copy" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This is handled in Module_Copy_Product
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_LowStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_OutOfStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Custom Fields Feature (fields_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count" VALUE = "{ ProductFieldList_Load_All( l.fields ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.count }">
		<MvASSIGN NAME = "l.field:public" VALUE = "{ l.field:is_public }">

		<MvEVAL EXPR = "{ CustomFields_Add_Field_Type( l.field ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:cache:customfld:product:field_definitions }">
		<MvASSIGN NAME = "l.null" VALUE = "{ ProductFieldList_LoadAll_Cache( g.Session:cache:customfld:product:field_definitions ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:product:field_definitions">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value" PARAMETERS = "module var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:product:product_id NE l.product_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:product:product_id"	VALUE = "{ l.product_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:product:fields"		VALUE = "">

		<MvIF EXPR = "{ NOT ProductFieldValue_LoadAll_Cache( l.product_id, g.Session:cache:customfld:product:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:product:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ miva_variable_type( l.field ) EQ 'ARRAY' }">	<MvFUNCTIONRETURN VALUE = "{ miva_joinstring( l.field, '|', 'escape' ) }">
	<MvELSE>														<MvFUNCTIONRETURN VALUE = "{ l.field }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value_Array" PARAMETERS = "module var, product_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:product:product_id NE l.product_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:product:product_id"	VALUE = "{ l.product_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:product:fields"		VALUE = "">

		<MvIF EXPR = "{ NOT ProductFieldValue_LoadAll_Cache( l.product_id, g.Session:cache:customfld:product:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.fields" VARIABLE = "g.Session:cache:customfld:product:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ miva_variable_type( l.fields ) EQ 'ARRAY' }">
		<MvASSIGN NAME = "l.values"				VALUE = "{ l.fields }">
		<MvASSIGN NAME = "l.value_count"		VALUE = "{ miva_array_elements( l.fields ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.values" INDEX = 1	VALUE = "{ l.fields }">
		<MvASSIGN NAME = "l.value_count"		VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Since ProductFieldValue_LoadAll_Cache LEFT OUTER JOINs to sNN_CFM_ProdMultiValues / sNN_CFM_ProdValues
	| we could have an array with a single element that is empty (either NULL from the database OR an empty string).
	| This causes callers of the function to think we have an array with data in it and can cause issues
	| in template code where NOT ISNULL returns false since we have an aggregate element.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.value_count EQ 1 AND ISNULL l.values[ 1 ] }">
		<MvASSIGN NAME = "l.values" VALUE = "">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.value_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Fields_Mapped" PARAMETERS = "module var, product_id, field_map var, output_fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:product:product_id NE l.product_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:product:product_id"	VALUE = "{ l.product_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:product:fields"		VALUE = "">

		<MvIF EXPR = "{ NOT ProductFieldValue_LoadAll_Cache( l.product_id, g.Session:cache:customfld:product:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field_code" ARRAY = "l.field_codes" COUNT = "{ miva_struct_members( g.Session:cache:customfld:product:fields, l.field_codes ) }">
		<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "g.Session:cache:customfld:product:fields">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.mapped_member" VARIABLE = "l.field_map">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.mapped_member }">
			<MvREFERENCEARRAY NAME = "l.output" VARIABLE = "l.output_fields">
				<MvMEMBER NAME = "{ l.mapped_member }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ miva_variable_type( l.value ) EQ 'ARRAY' }">	<MvASSIGN NAME = "l.output" VALUE = "{ miva_joinstring( l.value, '|', 'escape' ) }">
			<MvELSE>														<MvASSIGN NAME = "l.output" VALUE = "{ l.value }">
			</MvIF>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field" PARAMETERS = "module var, product_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.field:fieldtype NE 'multitext' }">
		<MvEVAL EXPR = "{ Normalize_Value( l.field, l.value ) }">

		<MvIF EXPR = "{ NOT ISNULL l.value }">
			<MvIF EXPR = "{ NOT ProductFieldValue_Set( l.field:id, l.product_id, l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ In_Admin() }">
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00101', 'CustomFields Product ID \'' $ l.product_id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT ProductFieldValue_Delete( l.field:id, l.product_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ In_Admin() }">
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00102', 'CustomFields Product ID \'' $ l.product_id $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT ProductFieldMultiValue_Delete( l.field:id, l.product_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00293', 'Deleted all multitext values for CustomFields Product ID \'' $ l.product_id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_splitstring( l.value, '|', l.values, 'trim,escaped' ) }">

		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.values" COUNT = "{ l.value_count }">
			<MvIF EXPR = "{ NOT ISNULL l.element }">
				<MvIF EXPR = "{ NOT ProductFieldMultiValue_Set( l.field:id, l.product_id, l.element ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ In_Admin() AND l.value_count }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00294', 'Created ' $ l.value_count $ ' multitext value(s) for CustomFields Product ID \'' $ l.product_id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:product:product_id EQ l.product_id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:product:fields" VALUE = "{ l.value }">
			<MvMEMBER NAME = "{ l.code }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field_Array" PARAMETERS = "module var, product_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.field:fieldtype NE 'multitext' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00305', 'Field must be a type of \'multitext\'' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ProductFieldMultiValue_Delete( l.field:id, l.product_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ In_Admin() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00306', 'Deleted all multitext values for CustomFields Product ID \'' $ l.product_id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
		<MvIF EXPR = "{ NOT ISNULL l.value }">
			<MvIF EXPR = "{ NOT ProductFieldMultiValue_Set( l.field:id, l.product_id, l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ In_Admin() AND l.value_count }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00307', 'Created ' $ l.value_count $ ' multitext value(s) for CustomFields Product ID \'' $ l.product_id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:product:product_id EQ l.product_id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:product:fields" VALUE = "{ l.values }">
			<MvMEMBER NAME = "{ l.code }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"						VALUE = "">

	<MvIF EXPR = "{ NOT ProductField_Load_Code_Cached( l.code, l.field ) }">
		<MvASSIGN NAME = "l.capabilities:query"				VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search"			VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search_fulltext"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"			VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby_relevance"	VALUE = 0>
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">
		<MvASSIGN NAME = "l.capabilities:query"				VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search"			VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search_fulltext"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"			VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby_relevance"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.capabilities:query"				VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"			VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search_fulltext"	VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby"			VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby_relevance"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Product( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ CustomFields_Generic_Query_SELECT( l.query, l.code ) }">

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query( l.data, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Product( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Search( l.data, l.query, l.code, l.operator, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Product( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy( l.data, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductFieldValue_Load_CodeAndProduct( l.code, l.product_id, l.field, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy_LoadIndexRecord( l.loaded_record, l.field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_OrderBy_Relevance" PARAMETERS = "module var, query var, search, code, weight" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'customfld', l.ref ) }">

	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Product( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT CustomFields_Generic_Query( l.data, l.query, l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT miva_array_search( l.ref:data:customfield_codes, 1, l.element, 'l.element:code EQ l.code' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY_Relevance( l.query, l.search,
																			l.element:alias $ '.value, ' $
																			l.element:alias $ '.value_long',
																			'FULLTEXT_NATURAL',
																			l.weight ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Value( l.view_name, l.code, l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Choices" PARAMETERS = "module var, code, choices var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Build_Choices( l.field, l.choices ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Add/Edit Screen Feature (vis_cust)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Customer_Head" PARAMETERS = "module var, tab, customer var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'CPFG_' CIN l.tab }">
		<MvEVAL EXPR = "{ Custom_Field_Head( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Tabs" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT GroupList_Load_Customer( l.groups ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
		
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos">
		<MvIF EXPR = "{ l.pos GT 1 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ ',' }">
		</MvIF>
		
		<MvIF EXPR = "{ l.group:id EQ 0 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_default:Custom Fields' }">
		<MvELSE>
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_' $ l.group:code $ ':' $ l.group:name }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Content" PARAMETERS = "module var, tab, load_fields, customer var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.group_count"			VALUE = "{ GroupList_Load_Include_Default( l.groups ) }">
	
	<MvIF EXPR = "{ l.customer:id }">	<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'CUST', 0, 0, 1, 0 ) }">		
	<MvELSE>							<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'CUST', 0, 1, 0, 0 ) }">
	</MvIF>
		
	<MvIF EXPR = "{ g.Load_Fields }">
		<MvASSIGN NAME = "g.CFM_Fields"			VALUE = "">
		
		<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
			<MvASSIGN NAME = "l.loaded_fields"	VALUE = "">
			
			<MvIF EXPR = "{ l.customer:id }">
				<MvASSIGN NAME = "l.null"		VALUE = "{ CustomerFieldAndValueList_Load_Group( l.customer:id, l.group:id, l.loaded_fields ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.null"		VALUE = "{ CustomerFieldList_Load_Group( l.group:id, l.loaded_fields ) }">
			</MvIF>
			
			<MvASSIGN NAME = "g.CFM_Fields" INDEX = "{ l.pos }" MEMBER = "fields"	VALUE = "{ l.loaded_fields }">
		</MvFOREACH>
	</MvIF>
	
	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
		<MvIF EXPR = "{ g.Tab EQ 'CPFG_' $ l.group:code }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMImagePicker_HTML() }">
			<MvEVAL EXPR = "{ Custom_Field_Content( l.pos, l.can_upload, 1 ) }">
		<MvELSE>
			<MvHIDE FIELDS = "{ 'g.CFM_Fields[' $ l.pos $ ']' }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">		
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvASSIGN NAME = "l.field:value" VALUE = "{ trim( l.field:value ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Insert" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

			<MvIF EXPR = "{ len_var( l.field:value ) }">
				<MvIF EXPR = "{ NOT CustomerFieldValue_Set( l.field:id, l.customer:id, l.field:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
				
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00103', 'CustomFields Customer ID \'' $ l.customer:id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">	
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Update" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

			<MvIF EXPR = "{ len_var( l.field:value ) }">
				<MvIF EXPR = "{ NOT CustomerFieldValue_Set( l.field:id, l.customer:id, l.field:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
				
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00104', 'CustomFields Customer ID \'' $ l.customer:id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT CustomerFieldValue_Delete( l.field:id, l.customer:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00105', 'CustomFields Customer ID \'' $ l.customer:id $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Delete" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Configuration Change Notification Feature (not_cust)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Customer_Insert" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Customer_Update" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Customer_Delete" PARAMETERS = "module var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ CustomerFieldValue_Delete_All_Customer( l.customer:id ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Customer Custom Fields Feature (fields_cust)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Customer_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count" VALUE = "{ CustomerFieldList_Load_All( l.fields ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.count }">
		<MvASSIGN NAME = "l.field:public" VALUE = "{ l.field:is_public }">

		<MvEVAL EXPR = "{ CustomFields_Add_Field_Type( l.field ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:cache:customfld:customer:field_definitions }">
		<MvASSIGN NAME = "l.null" VALUE = "{ CustomerFieldList_LoadAll_Cache( g.Session:cache:customfld:customer:field_definitions ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:customer:field_definitions">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Value" PARAMETERS = "module var, cust_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:customer:cust_id NE l.cust_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:customer:cust_id"	VALUE = "{ l.cust_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:customer:fields"	VALUE = "">

		<MvIF EXPR = "{ NOT CustomerFieldValue_LoadAll_Cache( l.cust_id, g.Session:cache:customfld:customer:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:customer:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Value_Array" PARAMETERS = "module var, cust_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Set_Field" PARAMETERS = "module var, cust_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ Normalize_Value( l.field, l.value ) }">

	<MvIF EXPR = "{ len( l.value ) }">
		<MvIF EXPR = "{ NOT CustomerFieldValue_Set( l.field:id, l.cust_id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00108', 'CustomFields Customer ID \'' $ l.cust_id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT CustomerFieldValue_Delete( l.field:id, l.cust_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00109', 'CustomFields Customer ID \'' $ l.cust_id $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:customer:cust_id EQ l.cust_id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:customer:fields" VALUE = "{ l.value }">
			<MvMEMBER NAME = "{ l.code }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Set_Field_Array" PARAMETERS = "module var, cust_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00308', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerField_Load_Code_Cached( l.code, l.null ) }">
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Customer( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ CustomFields_Generic_Query_SELECT( l.query, l.code ) }">

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query( l.data, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Customer( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Search( l.data, l.query, l.code, l.operator, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Customer( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy( l.data, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, customer_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerFieldValue_Load_CodeAndCustomer( l.code, l.customer_id, l.field, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy_LoadIndexRecord( l.loaded_record, l.field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Value( l.view_name, l.code, l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Field_Choices" PARAMETERS = "module var, code, choices var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Build_Choices( l.field, l.choices ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Multiple Customer Custom Fields Feature (fields_cust_map)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Customer_Fields_Mapped" PARAMETERS = "module var, customer_id, field_map var, output_fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:customer:customer_id NE l.customer_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:customer:customer_id"	VALUE = "{ l.customer_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:customer:fields"		VALUE = "">

		<MvIF EXPR = "{ NOT CustomerFieldValue_LoadAll_Cache( l.customer_id, g.Session:cache:customfld:customer:fields ) }">
			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field_code" ARRAY = "l.field_codes" COUNT = "{ miva_struct_members( g.Session:cache:customfld:customer:fields, l.field_codes ) }">
		<MvREFERENCEARRAY NAME = "l.value"			VARIABLE = "g.Session:cache:customfld:customer:fields">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.mapped_member"	VARIABLE = "l.field_map">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.mapped_member }">
			<MvASSIGN NAME = "l.output_fields" MEMBER = "{ l.mapped_member }" VALUE = "{ l.value }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvCOMMENT>
|
| Order Custom Fields Feature (fields_ordr)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Order_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count" VALUE = "{ OrderFieldList_Load_All( l.fields ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.count }">
		<MvASSIGN NAME = "l.field:public" VALUE = "{ l.field:is_public }">

		<MvEVAL EXPR = "{ CustomFields_Add_Field_Type( l.field ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:cache:customfld:order:field_definitions }">
		<MvASSIGN NAME = "l.null" VALUE = "{ OrderFieldList_LoadAll_Cache( g.Session:cache:customfld:order:field_definitions ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:order:field_definitions">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Value" PARAMETERS = "module var, order_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:order:order_id NE l.order_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:order:order_id"	VALUE = "{ l.order_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:order:fields"	VALUE = "">

		<MvIF EXPR = "{ NOT OrderFieldValue_LoadAll_Cache( l.order_id, g.Session:cache:customfld:order:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		<MvELSEIF EXPR = "{ ISNULL g.Session:cache:customfld:order:fields }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderInfo_Load( l.order_id, l.module:id, l.module:code, l.orderinfo ) }">
				<MvFUNCTIONRETURN VALUE = "">
			</MvIF>

			<MvASSIGN NAME = "g.Session:cache:customfld:order:fields" VALUE = "{ l.orderinfo:info }">
		</MvIF>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:order:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Value_Array" PARAMETERS = "module var, order_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Set_Field" PARAMETERS = "module var, order_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ Normalize_Value( l.field, l.value ) }">

	<MvIF EXPR = "{ len_var( l.value ) }">
		<MvIF EXPR = "{ NOT OrderFieldValue_Set( l.field:id, l.order_id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00191', 'CustomFields Order ID \'' $ l.order_id $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT OrderFieldValue_Delete( l.field:id, l.order_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00192', 'CustomFields Order ID \'' $ l.order_id $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:order:order_id EQ l.order_id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:order:fields" VALUE = "{ l.value }">
			<MvMEMBER NAME = "{ l.code }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Set_Field_Array" PARAMETERS = "module var, order_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00309', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderField_Load_Code_Cached( l.code, l.null ) }">
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Order( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ CustomFields_Generic_Query_SELECT( l.query, l.code ) }">

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query( l.data, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Order( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Search( l.data, l.query, l.code, l.operator, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Order( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy( l.data, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, order_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderFieldValue_Load_CodeAndOrder( l.code, l.order_id, l.field, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy_LoadIndexRecord( l.loaded_record, l.field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Value( l.view_name, l.code, l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Field_Choices" PARAMETERS = "module var, code, choices var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Build_Choices( l.field, l.choices ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Multiple Order Custom Fields Feature (fields_ordr_map)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Order_Fields_Mapped" PARAMETERS = "module var, order_id, field_map var, output_fields var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:order:order_id NE l.order_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:order:order_id"	VALUE = "{ l.order_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:order:fields"	VALUE = "">

		<MvIF EXPR = "{ NOT OrderFieldValue_LoadAll_Cache( l.order_id, g.Session:cache:customfld:order:fields ) }">
			<MvFUNCTIONRETURN>
		<MvELSEIF EXPR = "{ ISNULL g.Session:cache:customfld:order:fields }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderInfo_Load( l.order_id, l.module:id, l.module:code, l.orderinfo ) }">
				<MvFUNCTIONRETURN>
			</MvIF>

			<MvASSIGN NAME = "g.Session:cache:customfld:order:fields" VALUE = "{ l.orderinfo:info }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field_code" ARRAY = "l.field_codes" COUNT = "{ miva_struct_members( g.Session:cache:customfld:order:fields, l.field_codes ) }">
		<MvREFERENCEARRAY NAME = "l.value"			VARIABLE = "g.Session:cache:customfld:order:fields">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.mapped_member"	VARIABLE = "l.field_map">
			<MvMEMBER NAME = "{ l.field_code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.mapped_member }">
			<MvASSIGN NAME = "l.output_fields" MEMBER = "{ l.mapped_member }" VALUE = "{ l.value }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvCOMMENT>
|
| Utility Screen Feature (vis_util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Utility_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "CUSTOM_FIELDS:Custom Fields,CUSTOM_FIELD_GROUPS:Custom Field Groups">
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleUtilityHead_FieldList" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].JavaScript_SetVariables( 'g', 'adminurl,sessionurl,clientside_url,AdminGraphics_Path,Store_Code' ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AJAX_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_UI_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Functions_JavaScript() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
	<MvEVAL EXPR = "{ Element_CustomField_List_CSS( l.module ) }">
	<MvEVAL EXPR = "{ Element_CustomField_AddEditDialog_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_CustomField_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_CustomField_List_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_CustomField_AddEditDialog_JavaScript( l.module ) }">

		<MvEVAL EXPR = "{ Element_CustomField_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script language="JavaScript">
		MMScreen_LoadFinished( function() { new CustomFieldList(); } );
	</script>
</MvFUNCTION>

<MvFUNCTION NAME = "ModuleUtilityHead_FieldGroupList" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ Element_CustomFieldGroup_List_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_CustomField_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_CustomFieldGroup_List_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_CustomField_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script language="JavaScript">
		MMScreen_LoadFinished( function() { new CustomFieldGroupList(); } );
	</script>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.tab EQ 'CUSTOM_FIELDS' }"> 			<MvEVAL EXPR = "{ ModuleUtilityHead_FieldList( l.module ) }">
	<MvELSEIF EXPR = "{ l.tab EQ 'CUSTOM_FIELD_GROUPS' }">	<MvEVAL EXPR = "{ ModuleUtilityHead_FieldGroupList( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.tab EQ 'CUSTOM_FIELDS' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
	    <MvEVAL EXPR = "{ Element_CustomField_List_HTML( l.module ) }">
	    <MvEVAL EXPR = "{ Element_CustomField_AddEditDialog_HTML( l.module ) }">
	<MvELSEIF EXPR = "{ l.tab EQ 'CUSTOM_FIELD_GROUPS' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">
	    <MvEVAL EXPR = "{ Element_CustomFieldGroup_List_HTML( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Store Utilities Feature (util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation"  PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module Provisioning Feature (provision_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.child_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.child_count"	VALUE = "{ miva_array_elements( l.provide_xml:children ) }">

	<MvWHILE EXPR = "{ l.child_pos LE l.child_count }">
		<MvASSIGN NAME = "l.name"		VALUE = "{ tolower( l.provide_xml:children[ l.child_pos ]:name ) }">

		<MvIF EXPR = "{ l.name EQ 'productfield_add' }">					<MvEVAL EXPR = "{ Module_Provision_Store_ProductField_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'productfield_update' }">				<MvEVAL EXPR = "{ Module_Provision_Store_ProductField_Update( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'productfield_delete' }">				<MvEVAL EXPR = "{ Module_Provision_Store_ProductField_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'productfield_value' }">				<MvEVAL EXPR = "{ Module_Provision_Store_ProductField_Value( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'productfieldvalue_delete' }">		<MvEVAL EXPR = "{ Module_Provision_Store_ProductFieldValue_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'customerfield_add' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CustomerField_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'customerfield_update' }">			<MvEVAL EXPR = "{ Module_Provision_Store_CustomerField_Update( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'customerfield_delete' }">			<MvEVAL EXPR = "{ Module_Provision_Store_CustomerField_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'customerfield_value' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CustomerField_Value( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'categoryfield_add' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CategoryField_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'categoryfield_update' }">			<MvEVAL EXPR = "{ Module_Provision_Store_CategoryField_Update( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'categoryfield_delete' }">			<MvEVAL EXPR = "{ Module_Provision_Store_CategoryField_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'categoryfield_value' }">				<MvEVAL EXPR = "{ Module_Provision_Store_CategoryField_Value( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'orderfield_add' }">					<MvEVAL EXPR = "{ Module_Provision_Store_OrderField_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'orderfield_update' }">				<MvEVAL EXPR = "{ Module_Provision_Store_OrderField_Update( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'orderfield_delete' }">				<MvEVAL EXPR = "{ Module_Provision_Store_OrderField_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'orderfield_value' }">				<MvEVAL EXPR = "{ Module_Provision_Store_OrderField_Value( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'pagefield_add' }">					<MvEVAL EXPR = "{ Module_Provision_Store_PageField_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'pagefield_update' }">				<MvEVAL EXPR = "{ Module_Provision_Store_PageField_Update( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'pagefield_delete' }">				<MvEVAL EXPR = "{ Module_Provision_Store_PageField_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'pagefield_value' }">					<MvEVAL EXPR = "{ Module_Provision_Store_PageField_Value( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'group_add' }">						<MvEVAL EXPR = "{ Module_Provision_Store_Group_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'group_update' }">					<MvEVAL EXPR = "{ Module_Provision_Store_Group_Update( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'group_delete' }">					<MvEVAL EXPR = "{ Module_Provision_Store_Group_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'categoryfieldtypeoption_add' }">		<MvEVAL EXPR = "{ Module_Provision_Store_CategoryFieldTypeOption_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'customerfieldtypeoption_add' }">		<MvEVAL EXPR = "{ Module_Provision_Store_CustomerFieldTypeOption_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'orderfieldtypeoption_add' }">		<MvEVAL EXPR = "{ Module_Provision_Store_OrderFieldTypeOption_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'pagefieldtypeoption_add' }">			<MvEVAL EXPR = "{ Module_Provision_Store_PageFieldTypeOption_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'productfieldtypeoption_add' }">		<MvEVAL EXPR = "{ Module_Provision_Store_ProductFieldTypeOption_Add( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'categoryfieldtypeoption_delete' }">	<MvEVAL EXPR = "{ Module_Provision_Store_CategoryFieldTypeOption_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'customerfieldtypeoption_delete' }">	<MvEVAL EXPR = "{ Module_Provision_Store_CustomerFieldTypeOption_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'orderfieldtypeoption_delete' }">		<MvEVAL EXPR = "{ Module_Provision_Store_OrderFieldTypeOption_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'pagefieldtypeoption_delete' }">		<MvEVAL EXPR = "{ Module_Provision_Store_PageFieldTypeOption_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'productfieldtypeoption_delete' }">	<MvEVAL EXPR = "{ Module_Provision_Store_ProductFieldTypeOption_Delete( l.module, l.provide_xml:children[ l.child_pos ] ) }">
		</MvIF>

		<MvASSIGN NAME = "l.child_pos"	VALUE = "{ l.child_pos + 1 }">
	</MvWHILE>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "textfield">
	<MvASSIGN NAME = "l.field:group_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.field:facet" 		VALUE = 0>
	<MvASSIGN NAME = "l.field:is_public"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 	 'R', l.provide_xml, 'Code',		l.field:code ) 		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'R', l.provide_xml, 'Name',		l.field:name ) 		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'Facet', 		l.field:facet )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'o', l.provide_xml, 'Info',		l.field:info ) 		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'O', l.provide_xml, 'Group', 		l.group_code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'Public',		l.field:is_public )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', l.provide_xml, 'FieldType', 	l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload,multitext', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload,multitext' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ProductField_Load_Code( l.field:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A product field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ISNULL l.group_code }">
		<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00122', 'CustomFields Product Field \'' $ l.field:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.code, l.original_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field" VALUE = "{ l.original_field }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 	 'O',		l.provide_xml, 'Code',		l.field:code ) 		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'O:100',	l.provide_xml, 'Name',		l.field:name ) 		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', 		l.provide_xml, 'Facet', 	l.field:facet )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'o', 		l.provide_xml, 'Info',		l.field:info ) 		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', 		l.provide_xml, 'Public',	l.field:is_public )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'FieldType', l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload,multitext', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload,multitext' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ProductField_Load_Code( l.field:code, l.existing_field ) AND l.field:id NE l.existing_field:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A product field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_FieldType_OnChange_Values_Delete( l.original_field, l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Group' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Group', l.group_code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.group_code }">
			<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00123', 'CustomFields Product Field \'' $ l.field:code $ '\' updated' ) }">

	<MvIF EXPR = "{ CustomFields_FieldType_Supports_Options( l.original_field:fieldtype ) AND NOT CustomFields_FieldType_Supports_Options( l.field:fieldtype ) }">
		<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.field:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_Delete( l.field:id ) OR
					NOT ProductFieldValue_Delete_All_Field( l.field:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00124', 'CustomFields Product Field \'' $ l.field:code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductField_Value" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product',	l.product_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field',		l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.field:fieldtype NE 'multitext' }">
		<MvEVAL EXPR = "{ Normalize_Value( l.field, l.provide_xml:value ) }">

		<MvIF EXPR = "{ len( l.provide_xml:value ) }">
			<MvIF EXPR = "{ NOT ProductFieldValue_Set( l.field:id, l.product:id, l.provide_xml:value ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00125', 'CustomFields Product ID \'' $ l.product:id $ '\', Field ID \'' $ l.field:id $ '\' created' ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT ProductFieldValue_Delete( l.field:id, l.product:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00126', 'CustomFields Product ID \'' $ l.product:id $ '\', Field ID \'' $ l.field:id $ '\' deleted' ) }">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.value_count" VALUE = "{ miva_splitstring( l.provide_xml:value, '|', l.values, 'trim,escaped' ) }">

		<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" COUNT = "{ l.value_count }">
			<MvIF EXPR = "{ NOT ISNULL l.value }">
				<MvIF EXPR = "{ NOT ProductFieldMultiValue_Set( l.field:id, l.product:id, l.value ) }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
				</MvIF>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ l.value_count }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00302', 'Created ' $ l.value_count $ ' multitext value(s) for CustomFields Product ID \'' $ l.product:id $ '\', Custom Field ID \'' $ l.field:id $ '\'' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:product:product_id EQ l.product:id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:product:fields" VALUE = "{ l.provide_xml:value }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_prod', l.modules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated_Product( l.product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvIF EXPR = "{ l.module:api_ver GE 9.03 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Product_Update( l.module, l.product ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_COL_UT ].Product_Evaluate_Collections( l.product ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductFieldValue_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'product', l.product_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field', l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product \'' $ l.product_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ trim( l.provide_xml:value ) }">

	<MvIF EXPR = "{ ISNULL l.value }">
		<MvIF EXPR = "{ NOT ProductFieldValue_Delete( l.field:id, l.product:id ) OR
						NOT ProductFieldMultiValue_Delete( l.field:id, l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvIF EXPR = "{ l.field:fieldtype NE 'multitext' }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00295', 'CustomFields Product ID \'' $ l.product:id $ '\', Field ID \'' $ l.field:id $ '\' deleted' ) }">
		<MvELSE>												<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00303', 'Deleted all multitext values for CustomFields Product ID \'' $ l.product:id $ '\', Field ID \'' $ l.field:id $ '\'' ) }">
		</MvIF>

	<MvELSEIF EXPR = "{ l.field:fieldtype NE 'multitext' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Custom field \'' $ l.field:code $ '\' must have a field type of \'multitext\' to delete a specific value' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT ProductFieldMultiValue_Delete_All_Value( l.field:id, l.product:id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00296', 'Deleted all multitext values for CustomFields Product ID \'' $ l.product:id $ '\', Field ID \'' $ l.field:id $ '\'' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CustomerField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "textfield">
	<MvASSIGN NAME = "l.field:group_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.field:is_public"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'R', l.provide_xml, 'Code',			l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R', l.provide_xml, 'Name',			l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O', l.provide_xml, 'FieldType', 	l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o', l.provide_xml, 'Info',			l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Group', 		l.group_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Public',		l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CustomerField_Load_Code( l.field:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A customer field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ISNULL l.group_code }">
		<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerField_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00127', 'CustomFields Customer Field \'' $ l.field:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CustomerField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Customer field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_fieldtype" VALUE = "{ l.field:fieldtype }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'O',		l.provide_xml, 'Code',			l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O:100',	l.provide_xml, 'Name',			l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O',		l.provide_xml, 'FieldType', 	l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',		l.provide_xml, 'Info',			l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml, 'Public',		l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CustomerField_Load_Code( l.field:code, l.existing_field ) AND l.field:id NE l.existing_field:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A customer field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Group' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Group', l.group_code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.group_code }">
			<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00128', 'CustomFields Customer Field \'' $ l.field:code $ '\' updated' ) }">

	<MvIF EXPR = "{ CustomFields_FieldType_Supports_Options( l.original_fieldtype ) AND NOT CustomFields_FieldType_Supports_Options( l.field:fieldtype ) }">
		<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.field:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CustomerField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Customer field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerField_Delete( l.field:id ) OR
					NOT CustomerFieldValue_Delete_All_Field( l.field:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00129', 'CustomFields Customer Field \'' $ l.field:code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CustomerField_Value" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'customer',	l.customer_login ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field',		l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_Login( l.customer_login, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Customer \'' $ l.customer_login $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Customer field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Normalize_Value( l.field, l.provide_xml:value ) }">

	<MvIF EXPR = "{ len( l.provide_xml:value ) }">
		<MvIF EXPR = "{ NOT CustomerFieldValue_Set( l.field:id, l.customer:id, l.provide_xml:value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00130', 'CustomFields Customer ID \'' $ l.customer:id $ '\', Field ID \'' $ l.field:id $ '\' created' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT CustomerFieldValue_Delete( l.field:id, l.customer:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00131', 'CustomFields Customer ID \'' $ l.customer:id $ '\', Field ID \'' $ l.field:id $ '\' deleted' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:customer:cust_id EQ l.customer:id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:customer:fields" VALUE = "{ l.provide_xml:value }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvASSIGNARRAY>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CategoryField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "textfield">
	<MvASSIGN NAME = "l.field:group_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.field:is_public"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'R', l.provide_xml, 'Code',			l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'R', l.provide_xml, 'Name',			l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 		'O', l.provide_xml, 'FieldType', 	l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'o', l.provide_xml, 'Info',			l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml, 'Group', 		l.group_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Public',		l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CategoryField_Load_Code( l.field:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A category field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ISNULL l.group_code }">
		<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT CategoryField_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00132', 'CustomFields Category Field \'' $ l.field:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CategoryField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_fieldtype" VALUE = "{ l.field:fieldtype }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'O',		l.provide_xml, 'Code',			l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O:100',	l.provide_xml, 'Name',			l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O',		l.provide_xml, 'FieldType', 	l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',		l.provide_xml, 'Info',			l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml, 'Public',		l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ CategoryField_Load_Code( l.field:code, l.existing_field ) AND l.field:id NE l.existing_field:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A category field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Group' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Group', l.group_code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.group_code }">
			<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT CategoryField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00133', 'CustomFields Category Field \'' $ l.field:code $ '\' updated' ) }">

	<MvIF EXPR = "{ CustomFields_FieldType_Supports_Options( l.original_fieldtype ) AND NOT CustomFields_FieldType_Supports_Options( l.field:fieldtype ) }">
		<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.field:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CategoryField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CategoryField_Delete( l.field:id ) OR
					NOT CategoryFieldValue_Delete_All_Field( l.field:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00134', 'CustomFields Category Field \'' $ l.field:code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CategoryField_Value" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'category',	l.category_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field',		l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.category_code, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category \'' $ l.category_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Normalize_Value( l.field, l.provide_xml:value ) }">

	<MvIF EXPR = "{ len( l.provide_xml:value ) }">
		<MvIF EXPR = "{ NOT CategoryFieldValue_Set( l.field:id, l.category:id, l.provide_xml:value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00135', 'CustomFields Category ID \'' $ l.category:id $ '\', Field ID \'' $ l.field:id $ '\' created' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT CategoryFieldValue_Delete( l.field:id, l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00136', 'CustomFields Category ID \'' $ l.category:id $ '\', Field ID \'' $ l.field:id $ '\' deleted' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:category:cat_id EQ l.category:id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:category:fields" VALUE = "{ l.provide_xml:value }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvASSIGNARRAY>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_OrderField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "textfield">
	<MvASSIGN NAME = "l.field:group_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.field:is_public"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'R', l.provide_xml, 'Code',			l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R', l.provide_xml, 'Name',			l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O', l.provide_xml, 'FieldType', 	l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o', l.provide_xml, 'Info',			l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Group', 		l.group_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Public',		l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ OrderField_Load_Code( l.field:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'An order field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ISNULL l.group_code }">
		<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT OrderField_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00149', 'CustomFields Order Field \'' $ l.field:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_OrderField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT OrderField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Order field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_fieldtype" VALUE = "{ l.field:fieldtype }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'O',		l.provide_xml, 'Code',			l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O:100',	l.provide_xml, 'Name',			l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O',		l.provide_xml, 'FieldType', 	l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',		l.provide_xml, 'Info',			l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml, 'Public',		l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ OrderField_Load_Code( l.field:code, l.existing_field ) AND l.field:id NE l.existing_field:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'An order field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Group' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Group', l.group_code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.group_code }">
			<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT OrderField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00150', 'CustomFields Order Field \'' $ l.field:code $ '\' updated' ) }">

	<MvIF EXPR = "{ CustomFields_FieldType_Supports_Options( l.original_fieldtype ) AND NOT CustomFields_FieldType_Supports_Options( l.field:fieldtype ) }">
		<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.field:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_OrderField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT OrderField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Order field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT OrderField_Delete( l.field:id ) OR
					NOT OrderFieldValue_Delete_All_Field( l.field:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00151', 'CustomFields Order Field \'' $ l.field:code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_OrderField_Value" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Integer( 	l.provide_xml, 'order',	l.order_id ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( 	l.provide_xml, 'field',	l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Order ID \'' $ l.order_id $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT OrderField_Load_Code( l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Order field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Normalize_Value( l.field, l.provide_xml:value ) }">

	<MvIF EXPR = "{ len_var( l.provide_xml:value ) }">
		<MvIF EXPR = "{ NOT OrderFieldValue_Set( l.field:id, l.order:id, l.provide_xml:value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00152', 'CustomFields Order ID \'' $ l.order:id $ '\', Field \'' $ l.field:code $ '\' created' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT OrderFieldValue_Delete( l.field:id, l.order:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00153', 'CustomFields Order ID \'' $ l.order:id $ '\', Field \'' $ l.field:code $ '\' deleted' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:order:order_id EQ l.order:id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:order:fields" VALUE = "{ l.provide_xml:value }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvASSIGNARRAY>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_PageField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "textfield">
	<MvASSIGN NAME = "l.field:group_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.field:is_public"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'R',		l.provide_xml, 'Code',		l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R:100',	l.provide_xml, 'Name',		l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O',		l.provide_xml, 'FieldType', l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',		l.provide_xml, 'Info',		l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O',		l.provide_xml, 'Group', 	l.group_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml, 'Public',	l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ PageField_Load_Code( l.field:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A page field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT ISNULL l.group_code }">
		<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT PageField_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00318', 'CustomFields Page Field \'' $ l.field:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_PageField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT PageField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Page field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_fieldtype" VALUE = "{ l.field:fieldtype }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'O',		l.provide_xml, 'Code',		l.field:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O:100',	l.provide_xml, 'Name',		l.field:name ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'O',		l.provide_xml, 'FieldType', l.field:fieldtype, 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload', 'textfield,textarea,dropdown,radio,checkbox,imageupload,pdfupload' ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o',		l.provide_xml, 'Info',		l.field:info ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O',		l.provide_xml, 'Public',	l.field:is_public ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ PageField_Load_Code( l.field:code, l.existing_field ) AND l.field:id NE l.existing_field:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A page field with the code \'' $ l.field:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Group' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'o', l.provide_xml, 'Group', l.group_code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.group_code }">
			<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.group_code $ '\' not found' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.field:group_id" VALUE = "{ l.group:id }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT PageField_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00319', 'CustomFields Page Field \'' $ l.field:code $ '\' updated' ) }">

	<MvIF EXPR = "{ CustomFields_FieldType_Supports_Options( l.original_fieldtype ) AND NOT CustomFields_FieldType_Supports_Options( l.field:fieldtype ) }">
		<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.field:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_PageField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT PageField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Page field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT PageField_Delete( l.field:id ) OR
					NOT PageFieldValue_Delete_All_Field( l.field:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00320', 'CustomFields Page Field \'' $ l.field:code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_PageField_Value" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'page',	l.page_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field',	l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.page_code, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Page \'' $ l.page_code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.previous_version_id"	VALUE = "{ l.page:version_id }">

	<MvIF EXPR = "{ NOT PageField_Load_Code( l.field_code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Page field \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Fork_CustomFields( l.page ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.provide_xml:value }">
		<MvIF EXPR = "{ NOT PageFieldValue_Set( l.field:id, l.page:id, l.page:version_id, l.provide_xml:value ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00321', 'CustomFields Page \'' $ l.page:code $ '\', Field \'' $ l.field:code $ '\' created' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT PageFieldValue_Delete( l.field:id, l.page:id, l.page:version_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00322', 'CustomFields Page \'' $ l.page:code $ '\', Field \'' $ l.field:code $ '\' deleted' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:page:page_id EQ l.page:id AND g.Session:cache:customfld:page:version_id EQ l.page:version_id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:page:fields" VALUE = "{ l.provide_xml:value }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvASSIGNARRAY>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CategoryFieldTypeOption_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Provision_Store_FieldTypeOption_Add( l.provide_xml, l.code, l.value, 'Category', l.loaded_custom_field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CustomerFieldTypeOption_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Customer field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Provision_Store_FieldTypeOption_Add( l.provide_xml, l.code, l.value, 'Customer', l.loaded_custom_field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_OrderFieldTypeOption_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT OrderField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Order field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Provision_Store_FieldTypeOption_Add( l.provide_xml, l.code, l.value, 'Order', l.loaded_custom_field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_PageFieldTypeOption_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT PageField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Page field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Provision_Store_FieldTypeOption_Add( l.provide_xml, l.code, l.value, 'Page', l.loaded_custom_field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductFieldTypeOption_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product field \'' $ l.code $ '\' not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Provision_Store_FieldTypeOption_Add( l.provide_xml, l.code, l.value, 'Product', l.loaded_custom_field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CategoryFieldTypeOption_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Category field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT FieldOption_Delete( l.loaded_custom_field:id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_CustomerFieldTypeOption_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
		
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Customer field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT FieldOption_Delete( l.loaded_custom_field:id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_OrderFieldTypeOption_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT OrderField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Order field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT FieldOption_Delete( l.loaded_custom_field:id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_PageFieldTypeOption_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT PageField_Load_Code( l.code, l.field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Page field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT FieldOption_Delete( l.field:id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00323', 'CustomFields Page \'' $ l.field:code $ '\', Option Value \'' $ l.value $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductFieldTypeOption_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code',	l.code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'value',	l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.code, l.loaded_custom_field ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product field \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT FieldOption_Delete( l.loaded_custom_field:id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Group_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Code', l.group:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Name', l.group:name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ Group_Load_Code( l.group:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A group with the code \'' $ l.group:code $ '\' already exists' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Group_Insert( l.group ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
	
	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00154', 'CustomFields Group \'' $ l.group:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Group_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT Group_Load_Code( l.code, l.group ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Code', l.group:code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Name', l.group:name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ l.group:code NE l.code }">
		<MvIF EXPR = "{ Group_Load_Code( l.group:code, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A group with the code \'' $ l.group:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>
	
	<MvIF EXPR = "{ NOT Group_Update( l.group ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00155', 'CustomFields Group \'' $ l.group:code $ '\' updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_Group_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>
	
	<MvIF EXPR = "{ NOT Group_Load_Code( l.code, l.group ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Group \'' $ l.code $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Group_Delete( l.group:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00156', 'CustomFields Group \'' $ l.code $ '\' deleted' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_FieldTypeOption_Add" PARAMETERS = "provide_xml, code, value, type, custom_field var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.custom_field:fieldtype NE 'radio' ) AND
					( l.custom_field:fieldtype NE 'dropdown' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, l.type $ ' field \'' $ l.code $ '\' must have a field type of Radio or Drop-Down List' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.option:value" 		VALUE = "{ l.value }">
	<MvASSIGN NAME = "l.option:field_id" 	VALUE = "{ l.custom_field:id }">
	
	<MvIF EXPR = "{ NOT FieldOption_Insert( l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| Order Fulfillment Feature (fulfill)
|
</MvCOMMENT>

<MvFUNCTION NAME = "FulfillmentModule_ProcessOrder" PARAMETERS = "module var, order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderInfo_Load( l.order:id, l.module:id, l.module:code, l.orderinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
	
	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ miva_struct_members( l.orderinfo:info, l.customfields ) }">
		<MvIF EXPR = "{ NOT OrderField_Load_Code( l.customfield, l.customfield_order ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFOREACHCONTINUE>
		</MvIF>
		
		<MvASSIGN NAME = "l.field_value" VALUE = "{ miva_variable_value( 'l.orderinfo:info:' $ l.customfield ) }">
		<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field_value ) }">

		<MvIF EXPR = "{ NOT OrderFieldValue_Set( l.customfield_order:id, l.order:id, l.field_value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].OrderInfo_Delete( l.order:id, l.module:id, l.module:code ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Order Tabs Feature (vis_order)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Order_Head" PARAMETERS = "module var, tab, order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'CPFG_' CIN l.tab }">
		<MvEVAL EXPR = "{ Custom_Field_Order_Head( l.module ) }">
	</MvIF>	
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT GroupList_Load_Order( l.groups ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
		
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos">
		<MvIF EXPR = "{ l.pos GT 1 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ ',' }">
		</MvIF>
		
		<MvIF EXPR = "{ l.group:id EQ 0 }">
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_default:Custom Fields' }">
		<MvELSE>
			<MvASSIGN NAME = "l.tabs" VALUE = "{ l.tabs $ 'CPFG_' $ l.group:code $ ':' $ l.group:name }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ l.tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.group_count"	VALUE = "{ GroupList_Load_Include_Default( l.groups ) }">
	<MvASSIGN NAME = "l.can_upload"		VALUE = "{ [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">		
	
	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.CFM_Fields" VALUE = "">
		
		<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
			<MvASSIGN NAME = "l.loaded_fields" 										VALUE = "">
			<MvASSIGN NAME = "l.null" 												VALUE = "{ OrderFieldAndValueList_Load_Group( g.Order_ID, l.group:id, l.loaded_fields ) }">
			<MvASSIGN NAME = "g.CFM_Fields" INDEX = "{ l.pos }" MEMBER = "fields" 	VALUE = "{ l.loaded_fields }">
		</MvFOREACH>
	</MvIF>
	
	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
		<MvIF EXPR = "{ g.Tab EQ 'CPFG_' $ l.group:code }">
			<MvEVAL EXPR = "{ Custom_Field_Content( l.pos, l.can_upload, 0 ) }">
		<MvELSE>
			<MvHIDE FIELDS = "{ 'g.CFM_Fields[' $ l.pos $ ']' }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">		
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvASSIGN NAME = "l.field:value" VALUE = "{ trim( l.field:value ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

			<MvIF EXPR = "{ len_var( l.field:value ) }">
				<MvIF EXPR = "{ NOT OrderFieldValue_Set( l.field:id, g.Order_ID, l.field:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
				
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00157', 'CustomFields Order ID \'' $ g.Order_ID $ '\', Custom Field ID \'' $ l.field:id $ '\' created' ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT OrderFieldValue_Delete( l.field:id, g.Order_ID ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00158', 'CustomFields Order ID \'' $ g.Order_ID $ '\', Custom Field ID \'' $ l.field:id $ '\' deleted' ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Order_Delete_Order" PARAMETERS = "module var, order var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Order Status Change Notification Feature (not_order)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Order_Insert" PARAMETERS = "module var, order var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Order_Delete" PARAMETERS = "module var, order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ OrderFieldValue_Delete_All_Order( l.order:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Order_StatusChange" PARAMETERS = "module var, original_status, order var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Order_BatchChange" PARAMETERS = "module var, order_count, original_orders var, orders var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Order_TotalChange" PARAMETERS = "module var, original_total, order var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_CustomFieldGroupList_Load_All" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	
	<MvASSIGN NAME = "l.group_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" COUNT = "{ GroupList_Load_Include_Default( l.groups ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.group_count ) }">
			"id":	<MvEVAL EXPR = "{ l.group:id }">,
			"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.group:code ) }">",
			"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.group:name ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomFieldGroupList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CFM_Groups', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter, 'code,name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, g.Sort, 'code,name', 'code' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Groups', l.search_sql, l.search_fields, g.Offset, g.Count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00266', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.group_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( g.Count EQ 0 ) OR ( l.group_count LT g.Count ) ) AND ( NOT Groups.d.EOF ) }">
			<MvEVAL EXPR = "{ Group_Read( l.group ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.group_count ) }">
			"id":	<MvEVAL EXPR = "{ l.group:id }">,
			"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.group:code ) }">",
			"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.group:name ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			
			<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Group_Load" PARAMETERS = "group var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Group_ID', l.group_id ) }">
		<MvIF EXPR = "{ NOT Group_Load_ID( l.group_id, l.group ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00359', 'Group not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_Group', l.group_code ) }">
		<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00360', 'Group not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Group_Code', l.group_code ) }">
		<MvIF EXPR = "{ NOT Group_Load_Code( l.group_code, l.group ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00361', 'Group not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00362', 'Unable to load group: One of Group_ID, Edit_Group, or Group_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomFieldGroup_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	
	<MvASSIGN NAME = "g.Code" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "g.Name" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">
	
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( g.Code ) }">
        <MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', g.Validation_Message ) }">
	<MvELSEIF EXPR = "{ Group_Load_Code( g.Code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A group with the code \'' $ g.Code $ '\' already exists' ) }">
    </MvIF>
	
	<MvIF EXPR = "{ ISNULL g.Name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Name', 'Name cannot be blank' ) }">
	<MvELSEIF EXPR = "{ len_var( g.Name ) GT 100 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Name', 'Name must be 100 characters or less' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.customfieldgroup:code" VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.customfieldgroup:name" VALUE = "{ g.Name }">
	
	<MvIF EXPR = "{ NOT Group_Insert( l.customfieldgroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomFieldGroup_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Group_ID" 	VALUE = "{ int( g.Group_ID ) }">
	<MvASSIGN NAME = "g.Code" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "g.Name" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">
	
	<MvIF EXPR = "{ NOT Group_Load_ID( g.Group_ID, l.loaded_group ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, 'Group ID \'' $ g.Group_ID $ '\' not found' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( g.Code ) }">
        <MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', g.Validation_Message ) }">
	<MvELSEIF EXPR = "{ Group_Load_Code( g.Code, l.loaded_group_code ) AND
						( l.loaded_group_code:id NE l.loaded_group:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A group with the code \'' $ g.Code $ '\' already exists' ) }">	
    </MvIF>
	
	<MvIF EXPR = "{ ISNULL g.Name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Name', 'Name cannot be blank' ) }">
	<MvELSEIF EXPR = "{ len_var( g.Name ) GT 100 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Name', 'Name must be 100 characters or less' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.customfieldgroup:id" 	VALUE = "{ l.loaded_group:id }">
	<MvASSIGN NAME = "l.customfieldgroup:code" 	VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.customfieldgroup:name" 	VALUE = "{ g.Name }">
	
	<MvIF EXPR = "{ NOT Group_Update( l.customfieldgroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomFieldGroup_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Group_Load( l.group ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Group_Delete( l.group:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00363', 'CustomFields Group \'' $ l.group:code $ '\' deleted' ) }">
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomFieldList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	
	<MvASSIGN NAME = "g.Filter"						VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"						VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"						VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"						VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.category_search_query"		VALUE = "">
	<MvASSIGN NAME = "l.customer_search_query"		VALUE = "">
	<MvASSIGN NAME = "l.order_search_query"			VALUE = "">
	<MvASSIGN NAME = "l.page_search_query"			VALUE = "">
	<MvASSIGN NAME = "l.product_search_query"		VALUE = "">
	<MvASSIGN NAME = "l.single_search_query" 		VALUE = "">
	<MvASSIGN NAME = "l.query"						VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.category_search_query,	'c.id, c.group_id, c.code, c.name, c.fieldtype, c.info, 0		AS facet, g.name AS group_name, c.is_public, \'category\'	AS type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.customer_search_query,	'c.id, c.group_id, c.code, c.name, c.fieldtype, c.info, 0		AS facet, g.name AS group_name, c.is_public, \'customer\'	AS type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.order_search_query,		'c.id, c.group_id, c.code, c.name, c.fieldtype, c.info, 0		AS facet, g.name AS group_name, c.is_public, \'order\'		AS type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.page_search_query,		'c.id, c.group_id, c.code, c.name, c.fieldtype, c.info, 0		AS facet, g.name AS group_name, c.is_public, \'page\'		AS type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.product_search_query,		'c.id, c.group_id, c.code, c.name, c.fieldtype, c.info, c.facet AS facet, g.name AS group_name, c.is_public, \'product\'	AS type' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.category_search_query, g.Store_Table_Prefix $ 'CFM_CatFields', 'c' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.category_search_query, 'c', g.Store_Table_Prefix $ 'CFM_Groups', 'g', 'g.id = c.group_id', '' ) }">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.customer_search_query, g.Store_Table_Prefix $ 'CFM_CustFields', 'c' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.customer_search_query, 'c', g.Store_Table_Prefix $ 'CFM_Groups', 'g', 'g.id = c.group_id', '' ) }">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.order_search_query, g.Store_Table_Prefix $ 'CFM_OrderFields', 'c' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.order_search_query, 'c', g.Store_Table_Prefix $ 'CFM_Groups', 'g', 'g.id = c.group_id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.page_search_query, g.Store_Table_Prefix $ 'CFM_PageFields', 'c' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.page_search_query, 'c', g.Store_Table_Prefix $ 'CFM_Groups', 'g', 'g.id = c.group_id', '' ) }">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.product_search_query, g.Store_Table_Prefix $ 'CFM_ProdFields', 'c' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.product_search_query, 'c', g.Store_Table_Prefix $ 'CFM_Groups', 'g', 'g.id = c.group_id', '' ) }">

	<MvASSIGN NAME = "l.category_search_query_data:type"	VALUE = "category">
	<MvASSIGN NAME = "l.customer_search_query_data:type"	VALUE = "customer">
	<MvASSIGN NAME = "l.order_search_query_data:type"		VALUE = "order">
	<MvASSIGN NAME = "l.page_search_query_data:type"		VALUE = "page">
	<MvASSIGN NAME = "l.product_search_query_data:type"		VALUE = "product">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.category_search_query,	g.Filter, 'code:c.code,name:c.name,group_id:c.group_id,group:g.name,fieldtype:c.fieldtype,info:c.info,is_public:c.is_public', g.Module_Root $ l.module:module, '', 'JSON_CustomFieldList_Load_Query_Advanced_Filter', l.category_search_query_data ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.customer_search_query,	g.Filter, 'code:c.code,name:c.name,group_id:c.group_id,group:g.name,fieldtype:c.fieldtype,info:c.info,is_public:c.is_public', g.Module_Root $ l.module:module, '', 'JSON_CustomFieldList_Load_Query_Advanced_Filter', l.customer_search_query_data ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.order_search_query,		g.Filter, 'code:c.code,name:c.name,group_id:c.group_id,group:g.name,fieldtype:c.fieldtype,info:c.info,is_public:c.is_public', g.Module_Root $ l.module:module, '', 'JSON_CustomFieldList_Load_Query_Advanced_Filter', l.order_search_query_data ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.page_search_query,		g.Filter, 'code:c.code,name:c.name,group_id:c.group_id,group:g.name,fieldtype:c.fieldtype,info:c.info,is_public:c.is_public', g.Module_Root $ l.module:module, '', 'JSON_CustomFieldList_Load_Query_Advanced_Filter', l.page_search_query_data ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.product_search_query,	g.Filter, 'code:c.code,name:c.name,group_id:c.group_id,group:g.name,fieldtype:c.fieldtype,info:c.info,is_public:c.is_public', g.Module_Root $ l.module:module, '', 'JSON_CustomFieldList_Load_Query_Advanced_Filter', l.product_search_query_data ) }">

	<MvASSIGN NAME = "l.count_sql_array"					VALUE = "">

	<MvIF EXPR = "{ NOT l.category_search_query_data:exclude }">
		<MvASSIGN NAME = "l.count_sql_array_count"			VALUE = "{ miva_array_insert( l.count_sql_array, [ g.Module_Library_DB ].SQL_Query_Build_Count( l.category_search_query, l.null ), -1 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.query, l.category_search_query ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.customer_search_query_data:exclude }">
		<MvASSIGN NAME = "l.count_sql_array_count"			VALUE = "{ miva_array_insert( l.count_sql_array, [ g.Module_Library_DB ].SQL_Query_Build_Count( l.customer_search_query, l.null ), -1 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.query, l.customer_search_query ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.order_search_query_data:exclude }">
		<MvASSIGN NAME = "l.count_sql_array_count"			VALUE = "{ miva_array_insert( l.count_sql_array, [ g.Module_Library_DB ].SQL_Query_Build_Count( l.order_search_query, l.null ), -1 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.query, l.order_search_query ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.page_search_query_data:exclude }">
		<MvASSIGN NAME = "l.count_sql_array_count"			VALUE = "{ miva_array_insert( l.count_sql_array, [ g.Module_Library_DB ].SQL_Query_Build_Count( l.page_search_query, l.null ), -1 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.query, l.page_search_query ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.product_search_query_data:exclude }">
		<MvASSIGN NAME = "l.count_sql_array_count"			VALUE = "{ miva_array_insert( l.count_sql_array, [ g.Module_Library_DB ].SQL_Query_Build_Count( l.product_search_query, l.null ), -1 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.query, l.product_search_query ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count_sql" VALUE = "{ miva_joinstring( l.count_sql_array, ' UNION ALL ', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.query, g.Sort, 'code,name,group:group_name,fieldtype,type,info,facet,is_public', 'code' ) }">

	<MvASSIGN NAME = "l.search_sql"							VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Count( l.count_sql, l.search_fields, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CustomFields', l.search_sql, l.search_fields, g.Offset, g.Count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00267', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.custom_field_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( g.Count EQ 0 ) OR ( l.custom_field_count LT g.Count ) ) AND ( NOT CustomFields.d.EOF ) }">
			<MvASSIGN NAME = "l.formatted_group" VALUE = "{ Formatted_Group( CustomFields.d.group_id ) }">
			
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.custom_field_count ) }">
			"id":					<MvEVAL EXPR = "{ int( CustomFields.d.id ) }">,
			"code":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CustomFields.d.code ) }">",
			"name":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CustomFields.d.name ) }">",
			"type":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CustomFields.d.type ) }">",
			"fieldtype": 			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CustomFields.d.fieldtype ) }">",
			"facet":				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CustomFields.d.facet ) }">,
			"info":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( CustomFields.d.info ) }">",
			"group_id":				<MvEVAL EXPR = "{ int( CustomFields.d.group_id ) }">,
			"formatted_group":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_group ) }">",
			"is_public":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( CustomFields.d.is_public ) }">,
			"additional_options":
			[
				<MvASSIGN NAME = "l.add_count" VALUE = 0>
				
				<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ FieldOptionList_Load( CustomFields.d.id, l.options ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.add_count ) }">
					"id":		<MvEVAL EXPR = "{ int( l.option:id ) }">,
					"field_id":	<MvEVAL EXPR = "{ int( l.option:field_id ) }">,
					"value":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:value ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvFOREACH>
			]
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "CustomFields" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomFieldList_Load_Query_Advanced_Filter" PARAMETERS = "query var, field_count, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'type' }">
		<MvIF EXPR = "{ ( l.filter_operator EQ 'NE' AND l.filter_value EQ l.data:type ) OR
						( l.filter_operator EQ 'EQ' AND l.filter_value NE l.data:type ) }">
			<MvASSIGN NAME = "l.data:exclude" VALUE = 1>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomField_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	
	<MvASSIGN NAME = "g.Code" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "g.Name" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">
	<MvASSIGN NAME = "g.Facet" 		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Facet ) }">
	<MvASSIGN NAME = "g.Field_Type" VALUE = "{ tolower( [ g.Module_JSON ].JSON_Decode( g.Field_Type ) ) }">
	<MvASSIGN NAME = "g.Type" 		VALUE = "{ tolower( [ g.Module_JSON ].JSON_Decode( g.Type ) ) }">
	<MvASSIGN NAME = "g.Info"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Info ) }">
	<MvASSIGN NAME = "g.Group_ID" 	VALUE = "{ int( g.Group_ID ) }">
	<MvASSIGN NAME = "g.Is_Public"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Is_Public ) }">
	
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( g.Code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'invalid_code', g.Validation_Message ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Validate_Type( g.Type ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00166', '\'' $ g.Type $ '\' is not a valid Type' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Validate_Field_Type( g.Field_Type ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00167', '\'' $ g.Field_Type $ '\' is not a valid Field Type' ) }">	
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'invalid_name', 'Name cannot be blank' ) }">
	<MvELSEIF EXPR = "{ len_var( g.Name ) GT 100 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'invalid_name', 'Name must be 100 characters or less' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ g.Group_ID NE 0 }">
		<MvIF EXPR = "{ NOT Group_Load_ID( g.Group_ID, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00170', 'Group ID \'' $ g.Group_ID $ '\' could not be found' ) }">
		</MvIF>
	</MvIF>
	
	<MvASSIGN NAME = "l.customfield"			VALUE = "">
	<MvASSIGN NAME = "l.customfield:code" 		VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.customfield:name" 		VALUE = "{ g.Name }">
	<MvASSIGN NAME = "l.customfield:fieldtype" 	VALUE = "{ g.Field_Type }">
	<MvASSIGN NAME = "l.customfield:info" 		VALUE = "{ g.Info }">
	<MvASSIGN NAME = "l.customfield:group_id" 	VALUE = "{ g.Group_ID }">
	<MvASSIGN NAME = "l.customfield:is_public"	VALUE = "{ g.Is_Public }">

	<MvIF EXPR = "{ g.Type EQ 'product' }">	<MvASSIGN NAME = "l.customfield:facet" VALUE = "{ g.Facet }">
	<MvELSE>								<MvASSIGN NAME = "l.customfield:facet" VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.option_values_count"	VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Option_Values, l.option_values ) }">
	<MvASSIGN NAME = "l.pos" 					VALUE = 1>

	<MvFOREACH ITERATOR = "l.option_value" ARRAY = "l.option_values" COUNT = "{ l.option_values_count }">
		<MvASSIGN NAME = "l.option_value" VALUE = "{ trim( l.option_value ) }">

		<MvIF EXPR = "{ ISNULL l.option_value }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00171', 'Option value cannot be blank' ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ g.Type EQ 'category' }">
		<MvIF EXPR = "{ CategoryField_Load_Code( g.Code, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00172', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Category type' ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT CategoryField_Insert( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'customer' }">
		<MvIF EXPR = "{ CustomerField_Load_Code( g.Code, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00173', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Customer type' ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT CustomerField_Insert( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'order' }">
		<MvIF EXPR = "{ OrderField_Load_Code( g.Code, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00174', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Order type' ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT OrderField_Insert( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'page' }">
		<MvIF EXPR = "{ PageField_Load_Code( g.Code, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00324', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Page type' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT PageField_Insert( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'product' }">
		<MvIF EXPR = "{ ProductField_Load_Code( g.Code, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00175', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Product type' ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT ProductField_Insert( l.customfield ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ g.Field_Type EQ 'dropdown' OR g.Field_Type EQ 'radio' }">
		<MvASSIGN NAME = "l.option:field_id" VALUE = "{ l.customfield:id }">

		<MvFOREACH ITERATOR = "l.option_value" ARRAY = "l.option_values" COUNT = "{ l.option_values_count }">
			<MvASSIGN NAME = "l.option:value" VALUE = "{ l.option_value }">

			<MvIF EXPR = "{ NOT FieldOption_Insert( l.option ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomField_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	
	<MvASSIGN NAME = "g.Field_ID" 	VALUE = "{ int( g.Field_ID ) }">
	<MvASSIGN NAME = "g.Code" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "g.Name" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">
	<MvASSIGN NAME = "g.Facet" 		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Facet ) }">
	<MvASSIGN NAME = "g.Field_Type" VALUE = "{ tolower( [ g.Module_JSON ].JSON_Decode( g.Field_Type ) ) }">
	<MvASSIGN NAME = "g.Type" 		VALUE = "{ tolower( [ g.Module_JSON ].JSON_Decode( g.Type ) ) }">
	<MvASSIGN NAME = "g.Info" 		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Info ) }">
	<MvASSIGN NAME = "g.Group_ID" 	VALUE = "{ int( g.Group_ID ) }">
	<MvASSIGN NAME = "g.Is_Public"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Is_Public ) }">
	
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( g.Code ) }">
        <MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'invalid_code', g.Validation_Message ) }">
    </MvIF>
	
	<MvIF EXPR = "{ NOT Validate_Type( g.Type ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00176', '\'' $ g.Type $ '\' is not a valid Type' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Validate_Field_Type( g.Field_Type ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00177', '\'' $ g.Field_Type $ '\' is not a valid Field Type' ) }">	
	</MvIF>
	
	<MvIF EXPR = "{ ISNULL g.Name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'invalid_name', 'Name cannot be blank' ) }">
	<MvELSEIF EXPR = "{ len_var( g.Name ) GT 100 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'invalid_name', 'Name must be 100 characters or less' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ g.Group_ID NE 0 }">
		<MvIF EXPR = "{ NOT Group_Load_ID( g.Group_ID, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00180', 'Group ID \'' $ g.Group_ID $ '\' could not be found' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.option_count" VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Option_Values, l.option_values ) }">

	<MvFOREACH ITERATOR = "l.option_value" ARRAY = "l.option_values" COUNT = "{ l.option_count }">
		<MvASSIGN NAME = "l.option_value" VALUE = "{ trim( l.option_value ) }">

		<MvIF EXPR = "{ ISNULL l.option_value }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00181', 'Option value cannot be blank' ) }">
		</MvIF>
	</MvFOREACH>
	
	<MvIF EXPR = "{ g.Type EQ 'category' }">
		<MvIF EXPR = "{ NOT CategoryField_Load_ID( g.Field_ID, l.loaded_category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
			
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00182', 'Custom field ID \'' $ g.Field_ID $ '\' could not be found' ) }">
		</MvIF>
		
		<MvIF EXPR = "{ ( CategoryField_Load_Code( g.Code, l.loaded_category_code ) ) AND
						( l.loaded_category_code:id NE g.Field_ID ) }">			
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00183', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Category type' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.loaded_category:code" 		VALUE = "{ g.Code }">
		<MvASSIGN NAME = "l.loaded_category:name" 		VALUE = "{ g.Name }">
		<MvASSIGN NAME = "l.loaded_category:fieldtype" 	VALUE = "{ g.Field_Type }">
		<MvASSIGN NAME = "l.loaded_category:info" 		VALUE = "{ g.Info }">
		<MvASSIGN NAME = "l.loaded_category:group_id" 	VALUE = "{ g.Group_ID }">
		<MvASSIGN NAME = "l.loaded_category:is_public"	VALUE = "{ g.Is_Public }">
		
		<MvIF EXPR = "{ NOT CategoryField_Update( l.loaded_category ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.option:field_id" VALUE = "{ l.loaded_category:id }">
	<MvELSEIF EXPR = "{ g.Type EQ 'customer' }">
		<MvIF EXPR = "{ NOT CustomerField_Load_ID( g.Field_ID, l.loaded_customer ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
			
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00184', 'Custom field ID \'' $ g.Field_ID $ '\' could not be found' ) }">
		</MvIF>
		
		<MvIF EXPR = "{ ( CustomerField_Load_Code( g.Code, l.loaded_customer_code ) ) AND
						( l.loaded_customer_code:id NE g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00185', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Customer type' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.loaded_customer:code" 		VALUE = "{ g.Code }">
		<MvASSIGN NAME = "l.loaded_customer:name" 		VALUE = "{ g.Name }">
		<MvASSIGN NAME = "l.loaded_customer:fieldtype" 	VALUE = "{ g.Field_Type }">
		<MvASSIGN NAME = "l.loaded_customer:info" 		VALUE = "{ g.Info }">
		<MvASSIGN NAME = "l.loaded_customer:group_id" 	VALUE = "{ g.Group_ID }">
		<MvASSIGN NAME = "l.loaded_customer:is_public"	VALUE = "{ g.Is_Public }">
		
		<MvIF EXPR = "{ NOT CustomerField_Update( l.loaded_customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.option:field_id" VALUE = "{ l.loaded_customer:id }">
	<MvELSEIF EXPR = "{ g.Type EQ 'order' }">
		<MvIF EXPR = "{ NOT OrderField_Load_ID( g.Field_ID, l.loaded_order ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
			
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00186', 'Custom field ID \'' $ g.Field_ID $ '\' could not be found' ) }">
		</MvIF>

		<MvIF EXPR = "{ ( OrderField_Load_Code( g.Code, l.loaded_order_code ) ) AND
						( l.loaded_order_code:id NE g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00187', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Order type' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.loaded_order:code" 		VALUE = "{ g.Code }">
		<MvASSIGN NAME = "l.loaded_order:name" 		VALUE = "{ g.Name }">
		<MvASSIGN NAME = "l.loaded_order:fieldtype" VALUE = "{ g.Field_Type }">
		<MvASSIGN NAME = "l.loaded_order:info" 		VALUE = "{ g.Info }">
		<MvASSIGN NAME = "l.loaded_order:group_id" 	VALUE = "{ g.Group_ID }">
		<MvASSIGN NAME = "l.loaded_order:is_public"	VALUE = "{ g.Is_Public }">
		
		<MvIF EXPR = "{ NOT OrderField_Update( l.loaded_order ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.option:field_id" VALUE = "{ l.loaded_order:id }">
	<MvELSEIF EXPR = "{ g.Type EQ 'page' }">
		<MvIF EXPR = "{ NOT PageField_Load_ID( g.Field_ID, l.loaded_page ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
			
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00325', 'Custom field ID \'' $ g.Field_ID $ '\' could not be found' ) }">
		</MvIF>

		<MvIF EXPR = "{ ( PageField_Load_Code( g.Code, l.loaded_page_code ) ) AND
						( l.loaded_page_code:id NE g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00326', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Page type' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.loaded_page:code" 		VALUE = "{ g.Code }">
		<MvASSIGN NAME = "l.loaded_page:name" 		VALUE = "{ g.Name }">
		<MvASSIGN NAME = "l.loaded_page:fieldtype"	VALUE = "{ g.Field_Type }">
		<MvASSIGN NAME = "l.loaded_page:info" 		VALUE = "{ g.Info }">
		<MvASSIGN NAME = "l.loaded_page:group_id" 	VALUE = "{ g.Group_ID }">
		<MvASSIGN NAME = "l.loaded_page:is_public"	VALUE = "{ g.Is_Public }">

		<MvIF EXPR = "{ NOT PageField_Update( l.loaded_page ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.option:field_id" VALUE = "{ l.loaded_page:id }">
	<MvELSEIF EXPR = "{ g.Type EQ 'product' }">
		<MvIF EXPR = "{ NOT ProductField_Load_ID( g.Field_ID, l.loaded_product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
			
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00188', 'Custom field ID \'' $ g.Field_ID $ '\' could not be found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.original_field" VALUE = "{ l.loaded_product }">
		
		<MvIF EXPR = "{ ( ProductField_Load_Code( g.Code, l.loaded_product_code ) ) AND
						( l.loaded_product_code:id NE g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00189', 'A custom field with the code \'' $ g.Code $ '\' already exists for the Product type' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.loaded_product:code" 		VALUE = "{ g.Code }">
		<MvASSIGN NAME = "l.loaded_product:name" 		VALUE = "{ g.Name }">
		<MvASSIGN NAME = "l.loaded_product:facet" 		VALUE = "{ g.Facet }">
		<MvASSIGN NAME = "l.loaded_product:fieldtype" 	VALUE = "{ g.Field_Type }">
		<MvASSIGN NAME = "l.loaded_product:info" 		VALUE = "{ g.Info }">
		<MvASSIGN NAME = "l.loaded_product:group_id" 	VALUE = "{ g.Group_ID }">
		<MvASSIGN NAME = "l.loaded_product:is_public"	VALUE = "{ g.Is_Public }">

		<MvIF EXPR = "{ NOT ProductField_FieldType_OnChange_Values_Delete( l.original_field, l.loaded_product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT ProductField_Update( l.loaded_product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.option:field_id" VALUE = "{ l.loaded_product:id }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.option:field_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvIF EXPR = "{ g.Field_Type EQ 'dropdown' OR g.Field_Type EQ 'radio' }">
		<MvFOREACH ITERATOR = "l.option_value" ARRAY = "l.option_values" COUNT = "{ l.option_count }">
			<MvASSIGN NAME = "l.option:value" VALUE = "{ l.option_value }">

			<MvIF EXPR = "{ NOT FieldOption_Insert( l.option ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomField_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	
	<MvASSIGN NAME = "g.Field_ID" 	VALUE = "{ int( g.Field_ID ) }">
	<MvASSIGN NAME = "g.Type" 		VALUE = "{ tolower( [ g.Module_JSON ].JSON_Decode( g.Type ) ) }">
	
	<MvIF EXPR = "{ g.Type EQ 'category' }">		
		<MvIF EXPR = "{ NOT CategoryFieldValue_Delete_All_Field( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT CategoryField_Delete( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'customer' }">		
		<MvIF EXPR = "{ NOT CustomerFieldValue_Delete_All_Field( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT CustomerField_Delete( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'order' }">
		<MvIF EXPR = "{ NOT OrderFieldValue_Delete_All_Field( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT OrderField_Delete( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'page' }">
		<MvIF EXPR = "{ NOT PageFieldValue_Delete_All_Field( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT PageField_Delete( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Type EQ 'product' }">
		<MvIF EXPR = "{ NOT ProductFieldValue_Delete_All_Field( g.Field_ID ) OR
						NOT ProductFieldMultiValue_Delete_All_Field( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
		
		<MvIF EXPR = "{ NOT ProductField_Delete( g.Field_ID ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-CST-00190', '\'' $ g.Type $ '\' is not a valid Type' ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'CustomFieldList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFieldList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomField_Insert' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_CustomField_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomField_Update' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_CustomField_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomField_Delete' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_CustomField_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomFieldGroupList_Load_All' }"> 	<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFieldGroupList_Load_All( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomFieldGroupList_Load_Query' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFieldGroupList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomFieldGroup_Insert' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFieldGroup_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomFieldGroup_Update' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFieldGroup_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'CustomFieldGroup_Delete' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFieldGroup_Delete( l.module ) }">	
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module Client Side Feature (clientside)
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/util/customfld/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_CustomField_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/customfld/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/customfld/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/customfld/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Component Feature (component)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ 'CPFG_' CIN l.tab }">
		<MvEVAL EXPR = "{ Custom_Field_Head( l.module ) }">
	</MvIF>

	<MvASSIGN NAME = "l.group_count" VALUE = "{ GroupList_Load_Include_Default( l.groups ) }">

	<MvIF EXPR = "{ NOT ISNULL g.Edit_Page }">	<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">		
	<MvELSE>									<MvASSIGN NAME = "l.can_upload" VALUE = "{ [ g.Module_Admin ].CanI( 'PAGE', 0, 1, 0, 0 ) }">
	</MvIF>
	
	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "g.CFM_Fields" VALUE = "">

		<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
			<MvASSIGN NAME = "l.loaded_fields" VALUE = "">

			<MvIF EXPR = "{ NOT ISNULL g.Edit_Page }">	<MvASSIGN NAME = "l.null" VALUE = "{ PageFieldAndValueList_Load_Group( g.Edit_Page, l.group:id, l.loaded_fields ) }">
			<MvELSE>									<MvASSIGN NAME = "l.null" VALUE = "{ PageFieldList_Load_Group( l.group:id, l.loaded_fields ) }">
			</MvIF>

			<MvASSIGN NAME = "g.CFM_Fields" INDEX = "{ l.pos }" MEMBER = "fields" VALUE = "{ l.loaded_fields }">
		</MvFOREACH>
	</MvIF>

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" INDEX = "l.pos" COUNT = "{ l.group_count }">
		<MvIF EXPR = "{ g.Tab EQ 'CPFG_' $ l.group:code }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMImagePicker_HTML() }">
			<MvEVAL EXPR = "{ Custom_Field_Content( l.pos, l.can_upload, 1 ) }">
		<MvELSE>
			<MvHIDE FIELDS = "{ 'g.CFM_Fields[' $ l.pos $ ']' }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item NE 'customfields' }">
		<MvIF EXPR = "{ NOT miva_member_exists( l.all_settings:_mgr:lookup, 'customfields' ) }">
			<MvREFERENCE NAME = "l.all_settings:_mgr:lookup:customfields:module" VARIABLE = "l.module">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, settings var, item_settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Parse_Function_Parameters( l.param, l.function_name, l.parameters, l.parameter_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvIF EXPR = "{ l.function_name EQ 'debug' }">
		<MvIF EXPR = "{ l.parameter_count NE 0 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ Parameter_Error( l.param, 'Debug does not take any parameters' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Debug() }">
	</MvIF>
	
	<MvIF EXPR = "{ ( l.function_name EQ 'read_category_id' )		OR
					( l.function_name EQ 'read_customer_id' ) 		OR
					( l.function_name EQ 'read_order' ) 			OR
					( l.function_name EQ 'read_page_id' )			OR
					( l.function_name EQ 'read_product_id' )		OR
					( l.function_name EQ 'read_category_code' ) 	OR
					( l.function_name EQ 'read_customer_login' )	OR
					( l.function_name EQ 'read_page_code' ) 		OR
					( l.function_name EQ 'read_product_code' ) }">		
		<MvIF EXPR = "{ l.parameter_count EQ 2 }">
			<MvASSIGN NAME = "l.new_param" VALUE = "{ l.function_name $ '( l.module, l.param, ' $ l.parameters $ ', l.item_settings )' }">
		<MvELSEIF EXPR = "{ l.parameter_count EQ 3 }">
			<MvIF EXPR = "{ NOT Is_Variable( l.parameters[ 3 ] ) }">
				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'The third parameter must be a variable' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.new_param" VALUE = "{ l.function_name $ '( l.module, l.param, ' $ l.parameters $ ' )' }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, '\'' $ l.function_name $ '\' takes 2 or 3 parameters' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ ( l.function_name EQ 'write_category_id' ) 		OR
						( l.function_name EQ 'write_category_code' ) 	OR
						( l.function_name EQ 'write_customer_id' )		OR
						( l.function_name EQ 'write_customer_login' )	OR
						( l.function_name EQ 'write_order' ) 			OR
						( l.function_name EQ 'write_page_id' ) 			OR
						( l.function_name EQ 'write_page_code' ) 		OR
						( l.function_name EQ 'write_product_id' ) 		OR
						( l.function_name EQ 'write_product_code' ) }">
		<MvIF EXPR = "{ l.parameter_count EQ 3 }">
			<MvASSIGN NAME = "l.new_param" VALUE = "{ l.function_name $ '( l.module, l.param, ' $ l.parameters $ ' )' }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, '\'' $ l.function_name $ '\' takes 3 parameters' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.function_name EQ 'read_basket' }">		
		<MvIF EXPR = "{ l.parameter_count EQ 1 }">
			<MvASSIGN NAME = "l.new_param" VALUE = "{ l.function_name $ '( l.module, l.param, ' $ l.parameters $ ', l.item_settings )' }">
		<MvELSEIF EXPR = "{ l.parameter_count EQ 2 }">
			<MvIF EXPR = "{ NOT Is_Variable( l.parameters[ 2 ] ) }">
				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'The second parameter must be a variable' ) }">
			</MvIF>
		
			<MvASSIGN NAME = "l.new_param" VALUE = "{ l.function_name $ '( l.module, l.param, ' $ l.parameters $ ' )' }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, '\'' $ l.function_name $ '\' takes 1 or 2 parameters, found ' $ l.parameter_count ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.function_name EQ 'write_basket' }">
		<MvIF EXPR = "{ l.parameter_count EQ 2 }">
			<MvASSIGN NAME = "l.new_param" VALUE = "{ l.function_name $ '( l.module, l.param, ' $ l.parameters $ ' )' }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, '\'' $ l.function_name $ '\' takes 2 parameters' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, '\'' $ l.function_name $ '\' is not a valid function' ) }">
	</MvIF>
	
	<MvASSEMBLY>
		.string asm_0 "l.new_param"
		.string asm_1 "g.Module_Root"
		.string asm_2 "l.module"
		.string asm_3 "module"
		.string asm_4 "g.MvDO_Error"

			pushc		asm_1
			pushn
			pushc		asm_2
			pushn
			pushc		asm_3
			memb_ro
			cat
			pushc		asm_0
			pushn
			tagerror	22, 0
			do_function
			pop
			tagerror	22, 3
			pushc		asm_4
			pushn
			jmp_eq		L_asm_success
			retn
		L_asm_success:				
    </MvASSEMBLY>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tabs" VALUE = "">

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" COUNT = "{ GroupList_Load_Page( l.groups ) }">
		<MvIF EXPR = "{ l.group:id EQ 0 }">	<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.tabs, 'CPFG_default:Custom Fields', -1 ) }">
		<MvELSE>							<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert( l.tabs, 'CPFG_' $ l.group:code $ ':' $ l.group:name, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ miva_joinstring( l.tabs, ',', '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update_Requires_Version" PARAMETERS = "module var, page var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.field_array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.field_array:fields">
			<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

			<MvIF EXPR = "{ NOT PageFieldValue_Load( l.field:id, l.page:id, l.page:version_id, l.value ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT ISNULL l.field:value }">
					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>
			<MvELSE>
				<MvEVAL EXPR = "{ Normalize_Value( l.field, l.value ) }">

				<MvIF EXPR = "{ strcmp( l.field:value, l.value ) NE 0 }">
					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_PostUpdate" PARAMETERS = "module var, page var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvEVAL EXPR = "{ Normalize_Value( l.field, l.field:value ) }">

			<MvIF EXPR = "{ NOT ISNULL l.field:value }">
				<MvIF EXPR = "{ NOT PageFieldValue_Set( l.field:id, l.page:id, l.page:version_id, l.field:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
				
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00329', 'CustomFields Page \'' $ l.page:code $ '\', Custom Field \'' $ l.field:code $ '\' created' ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT PageFieldValue_Delete( l.field:id, l.page:id, l.page:version_id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00330', 'CustomFields Page \'' $ l.page:code $ '\', Custom Field \'' $ l.field:code $ '\' deleted' ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.array" ARRAY = "g.CFM_Fields">		
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.array:fields">
			<MvASSIGN NAME = "l.field:value" VALUE = "{ trim( l.field:value ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Copy" PARAMETERS = "module var, item, source_branch var, source_page var, source_settings var, dest_branch var, dest_page var, dest_settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PageFieldValue_Delete_All_Page_Version( l.dest_page:id, l.dest_page:version_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_PageValues ( field_id, page_id, pagever_id, value, value_long )
			 			  SELECT
			 			  	field_id, ?, ?, value, value_long
			 			  FROM ' $ 
			 				g.Store_Table_Prefix $ 'CFM_PageValues
			 			  WHERE
			 				pagever_id = ?' }"
			 FIELDS = "l.dest_page:id, l.dest_page:version_id,
					   l.source_page:version_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00364', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ l.source_branch:id EQ l.dest_branch:id }">	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00365', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' on branch \'' $ l.dest_branch:name $ '\'' ) }">
	<MvELSE>													<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00380', l.module:name $ ' settings copied from page \'' $ l.source_page:code $ '\' to page \'' $ l.dest_page:code $ '\' for item \'' $ l.item $ '\' from branch \'' $ l.source_branch:name $ '\' to branch \'' $ l.dest_branch:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Component Fragment Feature (component_frag)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Initialize_Fragment" PARAMETERS = "module var, item, page_all_settings var, page_item_settings var, fragment_all_settings var, fragment_item_settings var, merged_all_settings var, merged_item_settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ComponentModule_Initialize( l.module, l.item, l.merged_all_settings, l.merged_item_settings ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Search Settings (not_search)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_SearchSettings" PARAMETERS = "module var, original_searchsettings var, original_searchablecustomfields var, original_searchablecustomfield_count, searchsettings var, searchablecustomfields var, searchablecustomfield_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_FULLTEXT_Supported() }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.table"		VALUE = "{ g.Store_Table_Prefix $ 'CFM_ProdValues' }">
	<MvASSIGN NAME = "l.index"		VALUE = "{ g.Store_Table_Prefix $ 'CFM_ProdValues_FULLTEXT' }">
	<MvASSIGN NAME = "l.need_index"	VALUE = "{ miva_array_search( l.searchablecustomfields, 1, l.searchablecustomfield, 'CustomFields_Field_Requires_FULLTEXT_Index( l.module, l.searchablecustomfield )' ) GT 0 }">

	<MvLOCKFILE FILE = "{ g.MerchantPath $ 'customfields_fulltext_' $ int( g.Store:id ) }">
		<MvIF EXPR = "{ [ g.Module_Library_Native_DBAPI ].DB_Index_Exists( l.table, l.index, l.exists ) }">
			<MvIF EXPR = "{ ( NOT l.need_index ) AND l.exists }">		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Drop_Index( l.table, l.index ) }">
			<MvELSEIF EXPR = "{ l.need_index AND ( NOT l.exists ) }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_Create_FULLTEXT_Index( l.table, l.index, 'value, value_long' ) }">
			</MvIF>
		</MvIF>
	</MvLOCKFILE>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature prod_facet
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Facets" PARAMETERS = "module var, facets var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.facets"						VALUE = "">
	<MvASSIGN NAME = "l.facet_count"				VALUE = 0>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ ProductFieldList_Load_Facets( l.fields ) }">
		<MvASSIGN NAME = "l.facet"					VALUE = "">
		<MvASSIGN NAME = "l.facet:code"				VALUE = "{ l.field:code }">
		<MvASSIGN NAME = "l.facet:name"				VALUE = "{ l.field:name }">
		<MvASSIGN NAME = "l.facet:allowed_types"	VALUE = "checkbox,radio,select">

		<MvASSIGN NAME = "l.facet_count"			VALUE = "{ miva_array_insert_var( l.facets, l.facet, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.facet_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facets_Query" PARAMETERS = "module var, query var, facets var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.union_query"				VALUE = "{ l.query }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_DISTINCT( l.query, 'pf.code, pf.name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CFM_ProdFields',	'pf' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CFM_ProdValues',	'pv' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pf.id			= pv.field_id	AND
																		 pf.facet		= 1				AND
																		 pv.product_id	= prod.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_DISTINCT( l.union_query, 'pf.code, pf.name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.union_query, g.Store_Table_Prefix $ 'CFM_ProdFields',		'pf' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.union_query, g.Store_Table_Prefix $ 'CFM_ProdMultiValues',	'pmv' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.union_query, 'pf.id			= pmv.field_id	AND
																		 	   pf.facet			= 1				AND
																			   pmv.product_id	= prod.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION( l.query, l.union_query ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductFields"
				QUERY 	= "{ l.sql }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00366', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facets"						VALUE = "">
	<MvASSIGN NAME = "l.facet_count"				VALUE = 0> 

	<MvWHILE EXPR = "{ NOT ProductFields.d.EOF }">
		<MvASSIGN NAME = "l.facet"					VALUE = "">
		<MvASSIGN NAME = "l.facet:code"				VALUE = "{ ProductFields.d.code }">
		<MvASSIGN NAME = "l.facet:name"				VALUE = "{ ProductFields.d.name }">
		<MvASSIGN NAME = "l.facet:allowed_types"	VALUE = "checkbox,radio,select">

		<MvASSIGN NAME = "l.facet_count"			VALUE = "{ miva_array_insert_var( l.facets, l.facet, -1 ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00367', l.facet_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query_PostProcess" PARAMETERS = "module var, query var, facet var, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.value_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Value_Prompt" PARAMETERS = "module var, facet var, value var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.value }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Value_Prompt_JavaScript" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Value_Selected" PARAMETERS = "module var, facet var, value var, input_values var, input_value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_search( l.input_values, 1, l.input_value, 'l.input_value EQ l.value' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Values_Query" PARAMETERS = "module var, query var, facet var, values var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code_Cached( l.facet:code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.values" 				VALUE = "">
	<MvASSIGN NAME = "l.value_count" 			VALUE = 0>

	<MvIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">
		<MvASSIGN NAME = "l.facet_query"		VALUE = "{ l.query }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.facet_query, 'COUNT( DISTINCT pmv.product_id ) AS cpv_count, pmv.value AS cpv_value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.facet_query, g.Store_Table_Prefix $ 'CFM_ProdMultiValues', 'pmv' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query, 'pmv.product_id = prod.id AND pmv.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.facet_query, 'pmv.value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.facet_query, 'cpv_value', 'ASC' ) }">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'checkbox' }">
		<MvASSIGN NAME = "l.facet_query_yes" 	VALUE = "{ l.query }">
		<MvASSIGN NAME = "l.facet_query_no" 	VALUE = "{ l.query }">	

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.facet_query_yes, 'COUNT( * ) AS cpv_count, \'Yes\' AS cpv_value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.facet_query_yes, g.Store_Table_Prefix $ 'CFM_ProdValues', 'cpv' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query_yes, 'cpv.field_id = ? AND cpv.product_id = prod.id', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query_yes, '( ( cpv.value <> \'0\' AND cpv.value_long IS NULL ) OR ( cpv.value IS NULL AND cpv.value_long <> \'0\' ) )', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.facet_query_no, 'COUNT( * ) AS cpv_count, \'No\' AS cpv_value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.facet_query_no, 'prod', g.Store_Table_Prefix $ 'CFM_ProdValues', 'cpv', 'prod.id = cpv.product_id AND cpv.field_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query_no, '( ( ( cpv.value = \'0\' OR cpv.value IS NULL ) AND cpv.value_long IS NULL ) OR ( ( cpv.value_long = \'0\' OR cpv.value_long IS NULL ) AND cpv.value IS NULL ) )', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.facet_query, l.facet_query_yes ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.facet_query, l.facet_query_no ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.facet_query, 'cpv_value', 'DESC' ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.facet_query" 		VALUE = "{ l.query }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.facet_query, 'COUNT( * ) AS cpv_count, cpv.value AS cpv_value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.facet_query, g.Store_Table_Prefix $ 'CFM_ProdValues', 'cpv' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query, 'cpv.field_id	= ?', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.facet_query,
																   'cpv.product_id = prod.id AND
																    cpv.value IS NOT NULL', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.facet_query, 'cpv.value' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.facet_query, 'cpv_value', 'ASC' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_sql"				VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.facet_query, l.facet_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CFM_Facets', l.facet_sql, l.facet_fields, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00271', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT CFM_Facets.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.values_by_value">
			<MvMEMBER NAME = "{ CFM_Facets.d.cpv_value }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.value:value }">
			<MvASSIGN NAME = "l.value:count"	VALUE = "{ l.value:count + CFM_Facets.d.cpv_count }">
		<MvELSE>
			<MvASSIGN NAME = "l.value:value"	VALUE = "{ CFM_Facets.d.cpv_value }">
			<MvASSIGN NAME = "l.value:count"	VALUE = "{ CFM_Facets.d.cpv_count }">

			<MvASSIGN NAME = "l.value_count"	VALUE = "{ miva_array_insert_ref( l.values, l.value, -1 ) }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "CFM_Facets" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CFM_Facets">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00277', l.value_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Facet_Query_Search" PARAMETERS = "module var, query var, facet var, facet_values var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code_Cached( l.facet:code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.table_alias" VALUE = "{ CustomFields_Generic_Query_Field_Alias( l.field ) }">

	<MvIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">
		<MvCOMMENT>
		|
		| Need to modify the alias to bypass the duplicate alias check.  The alias for this search
		| could be a duplicate when the custom field is searchable AND is a facet.  The searchable
		| code uses a LEFT OUTER JOIN whereas an INNER JOIN is needed here and the duplicate alias
		| checker would end up not doing the INNER JOIN here in that case.  Modifying the alias
		| allows the INNER JOIN to be done and to work as expected.
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.table_alias" VALUE = "{ l.table_alias $ '_facet_filter' }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_DISTINCT( l.query ) }">
		<MvEVAL EXPR = "{ CustomFields_Generic_Query_CFM_xxxValues_FROM( l.query, g.Store_Table_Prefix $ 'CFM_ProdMultiValues', l.table_alias ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.table_alias $ '.field_id = ? AND prod.id = ' $ l.table_alias $ '.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.field:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'AND' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvFOREACH ITERATOR = "l.facet_value" ARRAY = "l.facet_values">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.table_alias $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.facet_value ) ) }">
			</MvFOREACH>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'checkbox' }">
		<MvEVAL EXPR = "{ CustomFields_Generic_Query_CFM_xxxValues_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CFM_ProdValues', l.table_alias, 'product_id', l.field:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvFOREACH ITERATOR = "l.facet_value" ARRAY = "l.facet_values">
				<MvIF EXPR = "{ l.facet_value EQ 'Yes' }">
					<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
						<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.table_alias $ '.value <> \'0\' AND ' $ l.table_alias $ '.value_long IS NULL )', '' ) }">
						<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.table_alias $ '.value IS NULL AND ' $ l.table_alias $ '.value_long <> \'0\' )' , '' ) }">
					<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
				<MvELSEIF EXPR = "{ l.facet_value EQ 'No' }">
					<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
						<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ' $ l.table_alias $ '.value = \'0\' OR ' $ l.table_alias $ '.value IS NULL ) AND ' $ l.table_alias $ '.value_long IS NULL )', '' ) }">
						<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ' $ l.table_alias $ '.value_long = \'0\' OR ' $ l.table_alias $ '.value_long IS NULL ) AND ' $ l.table_alias $ '.value IS NULL )' , '' ) }">
					<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
				</MvIF>
			</MvFOREACH>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ CustomFields_Generic_Query_CFM_xxxValues_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CFM_ProdValues', l.table_alias, 'product_id', l.field:id ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
			<MvFOREACH ITERATOR = "l.facet_value" ARRAY = "l.facet_values">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( l.table_alias $ '.value' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Module_Library_DB ].SQL_Query_Field( l.facet_value ) ) }">
			</MvFOREACH>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Make-shift fields_basket feature
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Basket_Field_Value" PARAMETERS = "module var, basket_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT g.Session:cache:customfld:basket:loaded }">
		<MvASSIGN NAME = "g.Session:cache:customfld:basket:fields" VALUE = "">

		<MvIF EXPR = "{ NOT BasketFieldValue_LoadAll_Cache( l.module, l.basket_id, g.Session:cache:customfld:basket:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>

		<MvASSIGN NAME = "g.Session:cache:customfld:basket:loaded" VALUE = 1>
	</MvIF>
	
	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:basket:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Basket_Set_Field" PARAMETERS = "module var, basket_id, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( l.basket_id, l.module:id, l.module:code, l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
		
		<MvASSIGN NAME = "l.basketinfo:basket_id" 	VALUE = "{ l.basket_id }">
		<MvASSIGN NAME = "l.basketinfo:module_id" 	VALUE = "{ l.module:id }">
		<MvASSIGN NAME = "l.basketinfo:type" 		VALUE = "{ l.module:code }">
		<MvASSIGN NAME = "l.basketinfo:clronmod" 	VALUE = 0>
		<MvASSIGN NAME = "l.basketinfo:orderinfo"	VALUE = 1>
		<MvASSIGN NAME = "l.basketinfo:info" 		VALUE = "">
		
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Insert( l.basketinfo ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.basketinfo:info" MEMBER = "{ l.custom_field }" VALUE = "{ l.value }">
	
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Update( l.basketinfo ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>	
	
	<MvASSIGN NAME = "g.Session:cache:customfld:basket:fields" MEMBER = "{ l.custom_field }" VALUE = "{ l.value }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Copy Feature (copy_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Copy_Product" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductFieldValue_Delete_All_Product( l.dest_product:id ) OR
					NOT ProductFieldMultiValue_Delete_All_Product( l.dest_product:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Copy values for sNN_CFM_ProdValues
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_ProdValues ( field_id, product_id, value, value_long )
			 			  SELECT
			 			  	field_id, ?, value, value_long
			 			  FROM ' $ 
			 				g.Store_Table_Prefix $ 'CFM_ProdValues
			 			  WHERE
			 				product_id = ?' }"
			 FIELDS = "l.dest_product:id,
					   l.source_product:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00310', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Copy values for sNN_CFM_ProdMultiValues
	|
	</MvCOMMENT>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CFM_ProdMultiValues"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues WHERE product_id = ? ORDER BY id' }"
				FIELDS	= "l.source_product:id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00311', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvWHILE EXPR = "{ NOT CFM_ProdMultiValues.d.EOF }">
		<MvIF EXPR = "{ NOT ProductFieldMultiValue_Set( CFM_ProdMultiValues.d.field_id, l.dest_product:id, CFM_ProdMultiValues.d.value ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "CFM_ProdMultiValues">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	
		<MvSKIP NAME = "Merchant" VIEW = "CFM_ProdMultiValues" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CFM_ProdMultiValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Upload Feature (upload)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_ProcessFileUpload" PARAMETERS = "module var, tempfile, filename_nopath" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) AND
					NOT [ g.Module_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) AND
					NOT [ g.Module_Admin ].CanI( 'CUST', 0, 0, 1, 0 ) AND
					NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) AND
					NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Extension_ToLowerCase( l.filename_nopath, 'pdf', l.pdf_ext ) }">
		<MvASSIGN NAME = "g.FileUpload_Error"	VALUE = "{ '\'.' $ l.pdf_ext $ '\' is not a valid PDF extension' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ file_read_bytes( l.tempfile, 'data', 0, 4, l.header ) LT 4 }">
		<MvASSIGN NAME = "g.FileUpload_Error"	VALUE = "File does not exist or is not a valid PDF">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ l.header NE '%PDF' }">
		<MvASSIGN NAME = "g.FileUpload_Error"	VALUE = "Invalid PDF file format">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.file_directory"			VALUE = "{ 'graphics/' $ padl( g.Store:id, 8, '0' ) $ '/' }">
	<MvASSIGN NAME = "l.file_path" 				VALUE = "{ l.file_directory $ l.filename_nopath }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].EnsurePathExists( 'script', g.imageroot $ l.file_directory ) }">
		<MvASSIGN NAME = "g.FileUpload_Error"	VALUE = "{ g.Error_Message }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ sexists( g.imageroot $ l.file_path ) AND NOT g.FileUpload_Overwrite }">
		<MvASSIGN NAME = "g.FileUpload_Error"	VALUE = "{ 'PDF \'' $ l.filename_nopath $ '\' already exists, not overwritten' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT fscopy( l.tempfile, g.imageroot $ l.file_path ) }">
		<MvASSIGN NAME = "g.FileUpload_Error"	VALUE = "{ 'Unable to copy \'' $ l.tempfile $ '\' to \'' $ g.imageroot $ l.file_path $ '\': ' $ file_last_error() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT schmod( g.imageroot $ l.file_path, '0644' ) }">
		<MvASSIGN NAME = "g.FileUpload_Error"	VALUE = "{ 'Unable to change permissions on \'' $ g.imageroot $ l.file_path $ '\': ' $ file_last_error() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "g.FileUpload_Path"		VALUE = "{ l.file_path }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Page Custom Fields Feature (fields_page)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Page_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.count" VALUE = "{ PageFieldList_Load_All( l.fields ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.count }">
		<MvASSIGN NAME = "l.field:public" VALUE = "{ l.field:is_public }">

		<MvEVAL EXPR = "{ CustomFields_Add_Field_Type( l.field ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:cache:customfld:page:field_definitions }">
		<MvASSIGN NAME = "l.null" VALUE = "{ PageFieldList_LoadAll_Cache( g.Session:cache:customfld:page:field_definitions ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:page:field_definitions">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Value" PARAMETERS = "module var, page_id, pagever_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:customfld:page:page_id NE l.page_id OR g.Session:cache:customfld:page:version_id NE l.pagever_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:page:page_id"		VALUE = "{ l.page_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:page:version_id"	VALUE = "{ l.pagever_id }">
		<MvASSIGN NAME = "g.Session:cache:customfld:page:fields"		VALUE = "">

		<MvIF EXPR = "{ NOT PageFieldValue_LoadAll_Cache( l.page_id, l.pagever_id, g.Session:cache:customfld:page:fields ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:page:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Value_Array" PARAMETERS = "module var, page_id, pagever_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Set_Field" PARAMETERS = "module var, page_id, pagever_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PageField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ Normalize_Value( l.field, l.value ) }">

	<MvIF EXPR = "{ NOT ISNULL l.value }">
		<MvIF EXPR = "{ NOT PageFieldValue_Set( l.field:id, l.page_id, l.pagever_id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_ID_Cached( l.page_id, l.page ) }">
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00331', 'CustomFields Page \'' $ l.page:code $ '\', Custom Field \'' $ l.field:code $ '\' created' ) }">
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT PageFieldValue_Delete( l.field:id, l.page_id, l.pagever_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ In_Admin() }">
			<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_ID_Cached( l.page_id, l.page ) }">
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTL-CST-00332', 'CustomFields Page \'' $ l.page:code $ '\', Custom Field \'' $ l.field:code $ '\' deleted' ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update in-memory cache, if neccessary
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ g.Session:cache:customfld:page:page_id EQ l.page_id AND g.Session:cache:customfld:page:version_id EQ l.pagever_id }">
		<MvASSIGNARRAY NAME = "g.Session:cache:customfld:page:fields" VALUE = "{ l.value }">
			<MvMEMBER NAME = "{ l.code }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Set_Field_Array" PARAMETERS = "module var, page_id, pagever_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00333', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PageField_Load_Code_Cached( l.code, l.null ) }">
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.capabilities:query"		VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"	VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:orderby"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Page( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ CustomFields_Generic_Query_SELECT( l.query, l.code ) }">

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query( l.data, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Page( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Search( l.data, l.query, l.code, l.operator, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Data_Page( l.code, l.data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy( l.data, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, page_id, pagever_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PageFieldValue_Load_CodeAndPage( l.code, l.page_id, l.pagever_id, l.field, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_OrderBy_LoadIndexRecord( l.loaded_record, l.field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PageField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Generic_Query_Value( l.view_name, l.code, l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Field_Choices" PARAMETERS = "module var, code, choices var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PageField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomFields_Build_Choices( l.field, l.choices ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Page_Fields_Propagate" PARAMETERS = "module var, page_id, oldpagever_id, newpagever_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.oldpagever_id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_PageValues
			 			 ( page_id, pagever_id, field_id, value, value_long )
			 			 SELECT
			 			   page_id, ?, field_id, value, value_long
			 			 FROM 
			 			   ' $ g.Store_Table_Prefix $ 'CFM_PageValues
			 			 WHERE 
			 			   page_id 		= ? AND 
			 			   pagever_id   = ?' }"
			 FIELDS = "l.newpagever_id, 
			 		   l.page_id, l.oldpagever_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00375', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Page Configuration Change Notification Feature (not_page)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Page_Insert" PARAMETERS = "module var, page var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Page_Update" PARAMETERS = "module var, page var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Page_Delete" PARAMETERS = "module var, page var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ PageFieldValue_Delete_All_Page( l.page:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Page_Copy" PARAMETERS = "module var, source_branch var, source_page var, dest_branch var, dest_page var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This is handled in ComponentModule_Page_Copy
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_Groups
|
</MvCOMMENT>

<MvFUNCTION NAME = "Group_Read" PARAMETERS = "group var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.group:id" 	VALUE = "{ Groups.d.id }">
	<MvASSIGN NAME = "l.group:code" VALUE = "{ Groups.d.code }">
	<MvASSIGN NAME = "l.group:name" VALUE = "{ Groups.d.name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Group_Insert" PARAMETERS = "group var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.group:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_Groups' ) }">
	
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_Groups
						  ( id, code, name )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS = "l.group:id, l.group:code, l.group:name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00193', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "g.Session:cache:customfld:groups" VALUE = "">
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Group_Load_Code" PARAMETERS = "code, group var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_Groups
							  WHERE ' $
								[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00194', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ Groups.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00195' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Group_Read( l.group ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Group_Load_ID" PARAMETERS = "id, group var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_Groups WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00196', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvIF EXPR = "{ Groups.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00197' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Group_Read( l.group ) }">
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_Load_Include_Default" PARAMETERS = "groups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_Groups ORDER BY name' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00198', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.groups" INDEX = 1 MEMBER = "id" 	VALUE = 0>
	<MvASSIGN NAME = "l.groups" INDEX = 1 MEMBER = "code" 	VALUE = "default">
	<MvASSIGN NAME = "l.groups" INDEX = 1 MEMBER = "name" 	VALUE = "<Default>">
	
	<MvASSIGN NAME = "l.count" VALUE = 1>
	
	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvEVAL EXPR = "{ Group_Read( l.groups[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00199', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_Load" PARAMETERS = "groups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_Groups ORDER BY name' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00200', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvEVAL EXPR = "{ Group_Read( l.groups[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00201', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_LoadAll_Cache" PARAMETERS = "cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Groups"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_Groups' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00260', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.cache">
		<MvMEMBER NAME = 0>
	</MvREFERENCEARRAY>
	
	<MvASSIGN NAME = "l.cache:0:id" 	VALUE = 0>
	<MvASSIGN NAME = "l.cache:0:code" 	VALUE = "default">
	<MvASSIGN NAME = "l.cache:0:name" 	VALUE = "<Default>">	

	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.cache">
			<MvMEMBER NAME = "{ Groups.d.id }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ Group_Read( l.field ) }">
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Group_Update" PARAMETERS = "group var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'CFM_Groups
						  SET
							code 	= ?,
							name	= ?
						  WHERE
							id		= ?' }"
			 FIELDS = "l.group:code, l.group:name, l.group:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00202', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "g.Session:cache:customfld:groups" VALUE = "">
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Group_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( NOT CategoryField_Update_Group( l.id, 0 ) )	OR
					( NOT CustomerField_Update_Group( l.id, 0 ) ) 	OR
					( NOT OrderField_Update_Group( l.id, 0 ) )		OR
					( NOT PageField_Update_Group( l.id, 0 ) )		OR
					( NOT ProductField_Update_Group( l.id, 0 ) ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvIF EXPR = "{ NOT Group_Delete_LowLevel( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Group_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $
							g.Store_Table_Prefix $ 'CFM_Groups
						  WHERE
							id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00203', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "g.Session:cache:customfld:groups" VALUE = "">
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_Load_Product" PARAMETERS = "groups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT
								DISTINCT pf.group_id, g.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_ProdFields pf
							  LEFT OUTER JOIN ' $
								g.Store_Table_Prefix $ 'CFM_Groups g ON pf.group_id = g.id
							  ORDER BY 
								group_id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00211', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" 	VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvEVAL EXPR = "{ Group_Read( l.groups[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00261', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_Load_Category" PARAMETERS = "groups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT
								DISTINCT cf.group_id, g.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CatFields cf
							  LEFT OUTER JOIN ' $
								g.Store_Table_Prefix $ 'CFM_Groups g ON cf.group_id = g.id
							  ORDER BY 
								group_id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00205', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" 	VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvEVAL EXPR = "{ Group_Read( l.groups[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00262', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_Load_Customer" PARAMETERS = "groups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT
								DISTINCT cf.group_id, g.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CustFields cf
							  LEFT OUTER JOIN ' $
								g.Store_Table_Prefix $ 'CFM_Groups g ON cf.group_id = g.id
							  ORDER BY 
								group_id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00217', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" 	VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvEVAL EXPR = "{ Group_Read( l.groups[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00263', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_Load_Order" PARAMETERS = "groups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT
								DISTINCT orf.group_id, g.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_OrderFields orf
							  LEFT OUTER JOIN ' $
								g.Store_Table_Prefix $ 'CFM_Groups g ON orf.group_id = g.id
							  ORDER BY 
								group_id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00223', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" 	VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvEVAL EXPR = "{ Group_Read( l.groups[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00264', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "GroupList_Load_Page" PARAMETERS = "groups var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "Groups"
				QUERY 	= "{ 'SELECT DISTINCT
								pf.group_id, g.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_PageFields pf
							  LEFT OUTER JOIN ' $
								g.Store_Table_Prefix $ 'CFM_Groups g ON pf.group_id = g.id
							  ORDER BY 
								group_id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00334', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT Groups.d.EOF }">
		<MvEVAL EXPR = "{ Group_Read( l.groups[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "Groups" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Groups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00335', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_CatFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "CategoryField_Update_Group" PARAMETERS = "old_group_id, group_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'CFM_CatFields
						  SET
							group_id = ?
						  WHERE
							group_id = ?' }"
			 FIELDS = "l.group_id, l.old_group_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00204', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Read" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ CategoryFields.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ CategoryFields.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ CategoryFields.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ CategoryFields.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "{ CategoryFields.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info" 		VALUE = "{ CategoryFields.d.info }">
	<MvASSIGN NAME = "l.field:is_public"	VALUE = "{ CategoryFields.d.is_public }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFields_Count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT COUNT( * ) AS field_count FROM ' $ g.Store_Table_Prefix $ 'CFM_CatFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CategoryFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = "{ CategoryFields.d.field_count }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldList_Load_All" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CatFields ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT CategoryFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ CategoryField_Read( l.fields[ l.field_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "CategoryFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00080', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldList_LoadAll_Cache" PARAMETERS = "cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CatFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00138', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT CategoryFields.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.cache">
			<MvMEMBER NAME = "{ CategoryFields.d.code }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ CategoryField_Read( l.field ) }">
		<MvSKIP NAME = "Merchant" VIEW = "CategoryFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldList_Load_Values" PARAMETERS = "cat_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT
								cf.id, cf.code, cf.name, cv.value, cv.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CatFields cf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_CatValues cv ON ( cv.field_id = cf.id AND cv.cat_id = ? )
							  ORDER BY
								cf.id' }"
				FIELDS	= "l.cat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00015', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT CategoryFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ CategoryField_Read( l.fields[ l.field_count ] ) }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.field_count }" MEMBER = "value"	VALUE = "{ CategoryFields.d.value $ CategoryFields.d.value_long }">

		<MvSKIP NAME = "Merchant" VIEW = "CategoryFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00081', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldList_Load_Group" PARAMETERS = "group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CatFields WHERE group_id = ? ORDER BY name' }"
				FIELDS	= "l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00206', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT CategoryFields.d.EOF }">
		<MvEVAL EXPR = "{ CategoryField_Read( l.fields[ ++l.field_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "CategoryFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00207', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldAndValueList_Load_Group" PARAMETERS = "cat_id, group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT
								cf.*, cv.value, cv.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CatFields cf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_CatValues cv ON ( cv.field_id = cf.id AND cv.cat_id = ? )
							  WHERE
								cf.group_id = ?
							  ORDER BY
								cf.name' }"
				FIELDS	= "l.cat_id, l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00247', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT CategoryFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ CategoryField_Read( l.fields[ l.field_count ] ) }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.field_count }" MEMBER = "value"	VALUE = "{ CategoryFields.d.value $ CategoryFields.d.value_long }">

		<MvSKIP NAME = "Merchant" VIEW = "CategoryFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00248', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Load_ID" PARAMETERS = "id, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CatFields
							  WHERE
								id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00208', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CategoryFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00209' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CategoryField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Load_Code_Cached" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:customfld:category_fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ CategoryField_Load_Code( l.code, l.cache:field ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field"							VALUE = "{ l.cache:field }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Load_Code" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CatFields WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00016', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CategoryFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00082' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CategoryField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_Fields' ) }">

	<MvIF EXPR = "{ ISNULL l.field:group_id }">
		<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:is_public }">
		<MvASSIGN NAME = "l.field:is_public" VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_CatFields
						  ( id, group_id, code, name, fieldtype, info, is_public )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.field:id, l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00017', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Update" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_CatFields
						  SET
							group_id	= ?,
							code		= ?,
							name		= ?,
							fieldtype	= ?,
							info		= ?,
							is_public	= ?
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public,
					   l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00018', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CategoryField_Delete_LowLevel( l.id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryField_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CatFields
						  WHERE
							id	= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00019', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_CatValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "CategoryFieldValue_Load_CodeAndCategory" PARAMETERS = "code, cat_id, field var, value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CategoryFieldValues"
				QUERY 	= "{ 'SELECT
								cf.*,
								cv.*
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CFM_CatFields cf, ' $
							  	g.Store_Table_Prefix $ 'CFM_CatValues cv
							  WHERE ' $
							  	[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cf.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' AND
							  	cv.field_id															= cf.id																AND
							  	cv.cat_id															= ?' }"
				FIELDS	= "l.code, l.cat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00278', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CategoryFieldValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFieldValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00279' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CFM_CatFields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field"				VALUE = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ CategoryFieldValues.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ CategoryFieldValues.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ CategoryFieldValues.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ CategoryFieldValues.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype"	VALUE = "{ CategoryFieldValues.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info"			VALUE = "{ CategoryFieldValues.d.info }">

	<MvCOMMENT>
	|
	| sNN_CFM_CatValues
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.value"				VALUE = "">
	<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ CategoryFieldValues.d.field_id }">
	<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ CategoryFieldValues.d.product_id }">
	<MvASSIGN NAME = "l.value:value"		VALUE = "{ CategoryFieldValues.d.value }">
	<MvASSIGN NAME = "l.value:value_long"	VALUE = "{ CategoryFieldValues.d.value_long }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldValue_LoadAll_Cache" PARAMETERS = "cat_id, cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CategoryFieldValues"
				QUERY	= "{ 'SELECT
								pf.code, pv.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CatFields pf, ' $
								g.Store_Table_Prefix $ 'CFM_CatValues pv
							  WHERE
							  	pf.id				= pv.field_id AND
								pv.cat_id		= ?' }"
				FIELDS	= "l.cat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00041', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT CategoryFieldValues.d.EOF }">
		<MvASSIGNARRAY NAME = "l.cache" VALUE = "{ CategoryFieldValues.d.value $ CategoryFieldValues.d.value_long }">
			<MvMEMBER NAME = "{ CategoryFieldValues.d.code }">
		</MvASSIGNARRAY>

		<MvSKIP NAME = "Merchant" VIEW = "CategoryFieldValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CategoryFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldValue_Set" PARAMETERS = "field_id, cat_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, NULL, ? )">
	<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_CatValues ( field_id, cat_id, value, value_long ) VALUES ' $ l.values }"
			 FIELDS	= "l.field_id, l.cat_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00061', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_CatValues SET ' $ l.values $ ' WHERE field_id = ? AND cat_id = ? AND ( ( value_long IS NULL ) OR ( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( 'value_long' ) $ ' <> ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( '?' ) $ ' ) )' }"
				 FIELDS	= "l.value, l.field_id, l.cat_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00062', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldValue_Delete" PARAMETERS = "field_id, cat_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CatValues
						  WHERE
							field_id	= ? AND
							cat_id		= ?' }"
			 FIELDS	= "l.field_id, l.cat_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00024', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldValue_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CatValues
						  WHERE
							field_id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00025', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFieldValue_Delete_All_Category" PARAMETERS = "cat_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CatValues
						  WHERE
							cat_id	= ?' }"
			 FIELDS	= "l.cat_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00026', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_ProdFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductField_Update_Group" PARAMETERS = "old_group_id, group_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'CFM_ProdFields
						  SET
							group_id = ?
						  WHERE
							group_id = ?' }"
			 FIELDS = "l.group_id, l.old_group_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00210', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Read" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ ProductFields.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ ProductFields.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ ProductFields.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ ProductFields.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "{ ProductFields.d.fieldtype }">
	<MvASSIGN NAME = "l.field:facet" 		VALUE = "{ ProductFields.d.facet }">
	<MvASSIGN NAME = "l.field:info" 		VALUE = "{ ProductFields.d.info }">
	<MvASSIGN NAME = "l.field:is_public"	VALUE = "{ ProductFields.d.is_public }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFields_Count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT COUNT( * ) AS field_count FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00068', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = "{ ProductFields.d.field_count }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldList_Load_All" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdFields ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00069', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT ProductFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ ProductField_Read( l.fields[ l.field_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "ProductFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00083', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldList_LoadAll_Cache" PARAMETERS = "cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00137', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductFields.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.cache">
			<MvMEMBER NAME = "{ ProductFields.d.code }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ ProductField_Read( l.field ) }">
		<MvSKIP NAME = "Merchant" VIEW = "ProductFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldList_Load_Values" PARAMETERS = "product_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT
								pf.id, pf.code, pf.name, pv.value, pv.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_ProdFields pf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_ProdValues pv ON ( pv.field_id = pf.id AND pv.product_id = ? )
							  ORDER BY
								pf.id' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00070', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT ProductFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ ProductField_Read( l.fields[ l.field_count ] ) }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.field_count }" MEMBER = "value"	VALUE = "{ ProductFields.d.value $ ProductFields.d.value_long }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00084', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldList_Load_Group" PARAMETERS = "group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdFields WHERE group_id = ? ORDER BY name' }"
				FIELDS	= "l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00212', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT ProductFields.d.EOF }">
		<MvEVAL EXPR = "{ ProductField_Read( l.fields[ ++l.field_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00213', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldList_Load_Facets" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdFields WHERE facet = 1 ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00272', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT ProductFields.d.EOF }">
		<MvEVAL EXPR = "{ ProductField_Read( l.fields[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00273', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldAndValueList_Load_Group" PARAMETERS = "product_id, group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT
								pf.*,
								pv.value		AS pv_value,
								pv.value_long	AS pv_value_long,
								pmv.value		AS pmv_value
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_ProdFields pf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_ProdValues pv ON pv.field_id = pf.id AND pv.product_id = ? AND pf.fieldtype <> \'multitext\'
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues pmv ON pmv.field_id = pf.id AND pmv.product_id = ? AND pf.fieldtype = \'multitext\'
							  WHERE
								pf.group_id = ?
							  ORDER BY
								pf.name,
								pmv.id' }"
				FIELDS	= "l.product_id, l.product_id, l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00249', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvASSIGN NAME = "l.current_field_id"	VALUE = 0>

	<MvWHILE EXPR = "{ NOT ProductFields.d.EOF }">
		<MvIF EXPR = "{ l.current_field_id NE ProductFields.d.id }">
			<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.fields">
				<MvDIMENSION INDEX = "{ ++l.field_count }">
			</MvREFERENCEARRAY>
		
			<MvEVAL EXPR = "{ ProductField_Read( l.field ) }">

			<MvASSIGN NAME = "l.current_field_id" VALUE = "{ l.field:id }">
		</MvIF>

		<MvIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">	<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert_var( l.field:value, ProductFields.d.pmv_value, -1 ) }">
		<MvELSE>												<MvASSIGN NAME = "l.field:value"	VALUE = "{ ProductFields.d.pv_value $ ProductFields.d.pv_value_long }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00250', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Load_ID" PARAMETERS = "id, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_ProdFields
							  WHERE
								id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00214', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00215' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Load_Code_Cached" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:customfld:product_fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ ProductField_Load_Code( l.code, l.cache:field ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field"							VALUE = "{ l.cache:field }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Load_Code" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdFields WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00071', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00085' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_Fields' ) }">

	<MvIF EXPR = "{ ISNULL l.field:group_id }">
		<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:is_public }">
		<MvASSIGN NAME = "l.field:is_public" VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_ProdFields
						  ( id, group_id, code, name, fieldtype, facet, info, is_public )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.field:id, l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:facet, l.field:info, l.field:is_public">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00072', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Update" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_ProdFields
						  SET
							group_id	= ?,
							code		= ?,
							name		= ?,
							fieldtype	= ?,
							facet		= ?,
							info		= ?,
							is_public	= ?
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:facet, l.field:info, l.field:is_public,
			 		   l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00073', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ProductField_Delete_LowLevel( l.id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdFields
						  WHERE
							id	= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00074', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_ProdValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductFieldValue_Load_CodeAndProduct" PARAMETERS = "code, product_id, field var, value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductFieldValues"
				QUERY 	= "{ 'SELECT
								pf.*,
								pv.*
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CFM_ProdFields pf, ' $
							  	g.Store_Table_Prefix $ 'CFM_ProdValues pv
							  WHERE ' $
							  	[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pf.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' AND
							  	pv.field_id															= pf.id																AND
							  	pv.product_id														= ?' }"
				FIELDS	= "l.code, l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00280', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductFieldValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFieldValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00281' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CFM_ProdFields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field"				VALUE = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ ProductFieldValues.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ ProductFieldValues.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ ProductFieldValues.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ ProductFieldValues.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype"	VALUE = "{ ProductFieldValues.d.fieldtype }">
	<MvASSIGN NAME = "l.field:facet"		VALUE = "{ ProductFieldValues.d.facet }">
	<MvASSIGN NAME = "l.field:info"			VALUE = "{ ProductFieldValues.d.info }">

	<MvCOMMENT>
	|
	| sNN_CFM_ProdValues
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.value"				VALUE = "">
	<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ ProductFieldValues.d.field_id }">
	<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ ProductFieldValues.d.product_id }">
	<MvASSIGN NAME = "l.value:value"		VALUE = "{ ProductFieldValues.d.value }">
	<MvASSIGN NAME = "l.value:value_long"	VALUE = "{ ProductFieldValues.d.value_long }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldValue_LoadAll_Cache" PARAMETERS = "product_id, cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductFieldValues"
				QUERY	= "{ 'SELECT
								pf.code,
								pf.fieldtype,
								pv.value		AS pv_value,
								pv.value_long	AS pv_value_long,
								pmv.value		AS pmv_value
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_ProdFields pf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues pmv ON pmv.field_id = pf.id AND pmv.product_id = ? AND pf.fieldtype = \'multitext\'
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_ProdValues pv ON pv.field_id = pf.id AND pv.product_id = ? AND pf.fieldtype <> \'multitext\'
							  ORDER BY
								pmv.id' }"
				FIELDS	= "l.product_id, l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00076', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT ProductFieldValues.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.data" VARIABLE = "l.cache">
			<MvMEMBER NAME = "{ ProductFieldValues.d.code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ProductFieldValues.d.fieldtype EQ 'multitext' }">	<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.data, ProductFieldValues.d.pmv_value, -1 ) }">
		<MvELSE>															<MvASSIGN NAME = "l.data" VALUE = "{ ProductFieldValues.d.pv_value $ ProductFieldValues.d.pv_value_long }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "ProductFieldValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldValue_Set" PARAMETERS = "field_id, product_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, NULL, ? )">
	<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_ProdValues ( field_id, product_id, value, value_long ) VALUES ' $ l.values }"
			 FIELDS	= "l.field_id, l.product_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00063', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_ProdValues SET ' $ l.values $ ' WHERE field_id = ? AND product_id = ? AND ( ( value_long IS NULL ) OR ( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( 'value_long' ) $ ' <> ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( '?' ) $ ' ) )' }"
				 FIELDS	= "l.value, l.field_id, l.product_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00064', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldValue_Delete" PARAMETERS = "field_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdValues
						  WHERE
							field_id	= ? AND
							product_id	= ?' }"
			 FIELDS	= "l.field_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00077', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldValue_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdValues
						  WHERE
							field_id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00078', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldValue_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdValues
						  WHERE
							product_id	= ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00079', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_CustFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "CustomerField_Update_Group" PARAMETERS = "old_group_id, group_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'CFM_CustFields
						  SET
							group_id = ?
						  WHERE
							group_id = ?' }"
			 FIELDS = "l.group_id, l.old_group_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00216', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Read" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ CustomerFields.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ CustomerFields.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ CustomerFields.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ CustomerFields.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "{ CustomerFields.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info" 		VALUE = "{ CustomerFields.d.info }">
	<MvASSIGN NAME = "l.field:is_public"	VALUE = "{ CustomerFields.d.is_public }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFields_Count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT COUNT( * ) AS field_count FROM ' $ g.Store_Table_Prefix $ 'CFM_CustFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00027', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CustomerFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = "{ CustomerFields.d.field_count }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldList_Load_All" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CustFields ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00028', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT CustomerFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ CustomerField_Read( l.fields[ l.field_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "CustomerFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00086', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldList_LoadAll_Cache" PARAMETERS = "cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CustFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00139', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT CustomerFields.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.cache">
			<MvMEMBER NAME = "{ CustomerFields.d.code }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ CustomerField_Read( l.field ) }">
		<MvSKIP NAME = "Merchant" VIEW = "CustomerFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldList_Load_Values" PARAMETERS = "cust_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT
								cf.id, cf.code, cf.name, cv.value, cv.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CustFields cf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_CustValues cv ON ( cv.field_id = cf.id AND cv.cust_id = ? )
							  ORDER BY
								cf.id' }"
				FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00029', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT CustomerFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ CustomerField_Read( l.fields[ l.field_count ] ) }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.field_count }" MEMBER = "value"	VALUE = "{ CustomerFields.d.value $ CustomerFields.d.value_long }">

		<MvSKIP NAME = "Merchant" VIEW = "CustomerFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00087', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldList_Load_Group" PARAMETERS = "group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CustFields WHERE group_id = ? ORDER BY name' }"
				FIELDS	= "l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00218', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT CustomerFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ CustomerField_Read( l.fields[ l.field_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "CustomerFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00219', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldAndValueList_Load_Group" PARAMETERS = "cust_id, group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT
								cf.*, cv.value, cv.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CustFields cf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_CustValues cv ON ( cv.field_id = cf.id AND cv.cust_id = ? )
							  WHERE
								group_id = ?
							  ORDER BY
								cf.name' }"
				FIELDS	= "l.cust_id, l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00251', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT CustomerFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ CustomerField_Read( l.fields[ l.field_count ] ) }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.field_count }" MEMBER = "value" VALUE = "{ CustomerFields.d.value $ CustomerFields.d.value_long }">

		<MvSKIP NAME = "Merchant" VIEW = "CustomerFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00252', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Load_ID" PARAMETERS = "id, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CustFields
							  WHERE
								id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00220', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CustomerFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00221' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CustomerField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Load_Code_Cached" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:customfld:customer_fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ CustomerField_Load_Code( l.code, l.cache:field ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field"							VALUE = "{ l.cache:field }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Load_Code" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_CustFields WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00030', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CustomerFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00088' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CustomerField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_Fields' ) }">

	<MvIF EXPR = "{ ISNULL l.field:group_id }">
		<MvASSIGN NAME = "l.field:group_id"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:is_public }">
		<MvASSIGN NAME = "l.field:is_public" VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_CustFields
						  ( id, group_id, code, name, fieldtype, info, is_public )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.field:id, l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00031', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Update" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_CustFields
						  SET
							group_id	= ?,
							code		= ?,
							name		= ?,
							fieldtype	= ?,
							info		= ?,
							is_public	= ?
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public,
			 		   l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00032', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ CustomerField_Delete_LowLevel( l.id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerField_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CustFields
						  WHERE
							id	= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00033', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_CustValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "CustomerFieldValue_Load_CodeAndCustomer" PARAMETERS = "code, cust_id, field var, value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "CustomerFieldValues"
				QUERY 	= "{ 'SELECT
								cf.*,
								cv.*
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CFM_CustFields cf, ' $
							  	g.Store_Table_Prefix $ 'CFM_CustValues cv
							  WHERE ' $
							  	[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cf.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' AND
							  	cv.field_id															= cf.id																AND
							  	cv.cust_id															= ?' }"
				FIELDS	= "l.code, l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00282', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CustomerFieldValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFieldValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00283' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CFM_CustFields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field"				VALUE = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ CustomerFieldValues.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ CustomerFieldValues.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ CustomerFieldValues.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ CustomerFieldValues.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype"	VALUE = "{ CustomerFieldValues.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info"			VALUE = "{ CustomerFieldValues.d.info }">

	<MvCOMMENT>
	|
	| sNN_CFM_CustValues
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.value"				VALUE = "">
	<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ CustomerFieldValues.d.field_id }">
	<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ CustomerFieldValues.d.product_id }">
	<MvASSIGN NAME = "l.value:value"		VALUE = "{ CustomerFieldValues.d.value }">
	<MvASSIGN NAME = "l.value:value_long"	VALUE = "{ CustomerFieldValues.d.value_long }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldValue_LoadAll_Cache" PARAMETERS = "cust_id, cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerFieldValues"
				QUERY	= "{ 'SELECT
								cf.code, cv.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_CustFields cf, ' $
								g.Store_Table_Prefix $ 'CFM_CustValues cv
							  WHERE
							  	cf.id				= cv.field_id AND
								cv.cust_id			= ?' }"
				FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00042', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT CustomerFieldValues.d.EOF }">
		<MvASSIGNARRAY NAME = "l.cache" VALUE = "{ CustomerFieldValues.d.value $ CustomerFieldValues.d.value_long }">
			<MvMEMBER NAME = "{ CustomerFieldValues.d.code }">
		</MvASSIGNARRAY>

		<MvSKIP NAME = "Merchant" VIEW = "CustomerFieldValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldValue_Set" PARAMETERS = "field_id, cust_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, NULL, ? )">
	<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_CustValues ( field_id, cust_id, value, value_long ) VALUES ' $ l.values }"
			 FIELDS	= "l.field_id, l.cust_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00065', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_CustValues SET ' $ l.values $ ' WHERE field_id = ? AND cust_id = ? AND ( ( value_long IS NULL ) OR ( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( 'value_long' ) $ ' <> ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( '?' ) $ ' ) )' }"
				 FIELDS	= "l.value, l.field_id, l.cust_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00066', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldValue_Delete" PARAMETERS = "field_id, cust_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CustValues
						  WHERE
							field_id	= ? AND
							cust_id	= ?' }"
			 FIELDS	= "l.field_id, l.cust_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00038', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldValue_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CustValues
						  WHERE
							field_id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00039', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerFieldValue_Delete_All_Customer" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_CustValues
						  WHERE
							cust_id	= ?' }"
			 FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00040', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_OrderFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "OrderField_Update_Group" PARAMETERS = "old_group_id, group_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'CFM_OrderFields
						  SET
							group_id = ?
						  WHERE
							group_id = ?' }"
			 FIELDS = "l.group_id, l.old_group_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00222', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldAndValueList_Load_Group" PARAMETERS = "order_id, group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderFields"
				QUERY	= "{ 'SELECT
								orf.*, ov.value, ov.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_OrderFields orf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_OrderValues ov ON ( ov.field_id = orf.id AND ov.order_id = ? )
							  WHERE
								group_id = ?
							  ORDER BY
								orf.name' }"
				FIELDS	= "l.order_id, l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00224', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT OrderFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count" VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ OrderField_Read( l.fields[ l.field_count ] ) }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.field_count }" MEMBER = "value" VALUE = "{ OrderFields.d.value $ OrderFields.d.value_long }">

		<MvSKIP NAME = "Merchant" VIEW = "OrderFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00225', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldList_Load_All" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_OrderFields ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00226', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT OrderFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ OrderField_Read( l.fields[ l.field_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "OrderFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00227', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldList_LoadAll_Cache" PARAMETERS = "cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_OrderFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00274', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT OrderFields.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.cache">
			<MvMEMBER NAME = "{ OrderFields.d.code }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ OrderField_Read( l.field ) }">
		<MvSKIP NAME = "Merchant" VIEW = "OrderFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Load_Code_Cached" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:customfld:order_fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ OrderField_Load_Code( l.code, l.cache:field ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field"							VALUE = "{ l.cache:field }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Load_Code" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_OrderFields WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00228', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00229' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ OrderField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Load_ID" PARAMETERS = "id, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderFields"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_OrderFields
							  WHERE
								id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00230', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00231' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ OrderField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_Fields' ) }">

	<MvIF EXPR = "{ ISNULL l.field:group_id }">
		<MvASSIGN NAME = "l.field:group_id"		VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:is_public }">
		<MvASSIGN NAME = "l.field:is_public"	VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_OrderFields
						  ( id, group_id, code, name, fieldtype, info, is_public )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.field:id, l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00233', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Update" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_OrderFields
						  SET
							group_id	= ?,
							code		= ?,
							name		= ?,
							fieldtype	= ?,
							info		= ?,
							is_public	= ?
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public,
					   l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00234', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ OrderField_Delete_LowLevel( l.id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_OrderFields WHERE id	= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00235', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_OrderValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "OrderFieldValue_Load_CodeAndOrder" PARAMETERS = "code, order_id, field var, value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "OrderFieldValues"
				QUERY 	= "{ 'SELECT
								cfmof.*,
								cfmov.*
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CFM_OrderFields cfmof, ' $
							  	g.Store_Table_Prefix $ 'CFM_OrderValues cfmov
							  WHERE ' $
							  	[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cfmof.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ '	AND
							  	cfmov.field_id														   = cfmof.id															AND
							  	cfmov.order_id														   = ?' }"
				FIELDS	= "l.code, l.order_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00284', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderFieldValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFieldValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00285' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CFM_OrderFields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field"				VALUE = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ OrderFieldValues.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ OrderFieldValues.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ OrderFieldValues.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ OrderFieldValues.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype"	VALUE = "{ OrderFieldValues.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info"			VALUE = "{ OrderFieldValues.d.info }">

	<MvCOMMENT>
	|
	| sNN_CFM_OrderValues
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.value"				VALUE = "">
	<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ OrderFieldValues.d.field_id }">
	<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ OrderFieldValues.d.product_id }">
	<MvASSIGN NAME = "l.value:value"		VALUE = "{ OrderFieldValues.d.value }">
	<MvASSIGN NAME = "l.value:value_long"	VALUE = "{ OrderFieldValues.d.value_long }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldValue_LoadAll_Cache" PARAMETERS = "order_id, cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderFieldValues"
				QUERY	= "{ 'SELECT
								pf.code, pv.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_OrderFields pf, ' $
								g.Store_Table_Prefix $ 'CFM_OrderValues pv
							  WHERE
							  	pf.id		= pv.field_id AND
								pv.order_id	= ?' }"
				FIELDS	= "l.order_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00232', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT OrderFieldValues.d.EOF }">
		<MvASSIGNARRAY NAME = "l.cache" VALUE = "{ OrderFieldValues.d.value $ OrderFieldValues.d.value_long }">
			<MvMEMBER NAME = "{ OrderFieldValues.d.code }">
		</MvASSIGNARRAY>

		<MvSKIP NAME = "Merchant" VIEW = "OrderFieldValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldValue_Delete" PARAMETERS = "field_id, order_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_OrderValues WHERE field_id = ? AND order_id = ?' }"
			 FIELDS	= "l.field_id, l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00236', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldValue_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_OrderValues WHERE field_id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00237', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldValue_Delete_All_Order" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_OrderValues WHERE order_id = ?' }"
			 FIELDS	= "l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00238', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderFieldValue_Set" PARAMETERS = "field_id, order_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, NULL, ? )">
	<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_OrderValues ( field_id, order_id, value, value_long ) VALUES ' $ l.values }"
			 FIELDS	= "l.field_id, l.order_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00239', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_OrderValues SET ' $ l.values $ ' WHERE field_id = ? AND order_id = ? AND ( ( value_long IS NULL ) OR ( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( 'value_long' ) $ ' <> ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( '?' ) $ ' ) )' }"
				 FIELDS	= "l.value, l.field_id, l.order_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00240', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderField_Read" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ OrderFields.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ OrderFields.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ OrderFields.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ OrderFields.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "{ OrderFields.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info" 		VALUE = "{ OrderFields.d.info }">
	<MvASSIGN NAME = "l.field:is_public"	VALUE = "{ OrderFields.d.is_public }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_FieldOptions
|
</MvCOMMENT>

<MvFUNCTION NAME = "FieldOption_Insert" PARAMETERS = "option var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.option:id"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_FieldOptions' ) }">
	
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions
						  ( id, field_id, value )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS = "l.option:id, l.option:field_id, l.option:value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00241', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FieldOption_Delete_Field_ID" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions WHERE field_id = ?' }"
			 FIELDS = "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00242', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FieldOption_Delete" PARAMETERS = "field_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_FieldOptions WHERE field_id = ? AND value = ?' }"
			 FIELDS = "l.field_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00243', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FieldOptionList_Load" PARAMETERS = "field_id, options var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "FieldOptions"
				QUERY 	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_FieldOptions
							  WHERE
								field_id = ?
							  ORDER BY
								value' }"
				FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00244', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = 0>
	
	<MvWHILE EXPR = "{ NOT FieldOptions.d.EOF }">
		<MvEVAL EXPR = "{ FieldOptions_Read( l.options[ ++l.count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "FieldOptions" ROWS = 1>
	</MvWHILE>
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "FieldOptions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00245', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "FieldOptions_Read" PARAMETERS = "option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.option:id" 			VALUE = "{ FieldOptions.d.id }">
	<MvASSIGN NAME = "l.option:field_id" 	VALUE = "{ FieldOptions.d.field_id }">
	<MvASSIGN NAME = "l.option:value" 		VALUE = "{ FieldOptions.d.value }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_ProdMultiValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductFieldMultiValue_Set" PARAMETERS = "field_id, product_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id"		VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_ProdMultiValues' ) }">
	<MvASSIGN NAME = "l.value"	VALUE = "{ substring_var( l.value, 1, 254 ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues
			 			  ( id, field_id, product_id, value )
			 			  VALUES
			 			  ( ?, ?, ?, ? )' }"
			 FIELDS = "l.id, l.field_id, l.product_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00297', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldMultiValue_Delete" PARAMETERS = "field_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues WHERE field_id = ? AND product_id = ?' }"
			 FIELDS = "l.field_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00298', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldMultiValue_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues WHERE field_id = ?' }"
			 FIELDS = "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00299', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldMultiValue_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues WHERE product_id = ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00300', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductFieldMultiValue_Delete_All_Value" PARAMETERS = "field_id, product_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues WHERE field_id = ? AND product_id = ? AND value = ?' }"
			 FIELDS = "l.field_id, l.product_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00301', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_PageFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "PageField_Update_Group" PARAMETERS = "old_group_id, group_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'CFM_PageFields
						  SET
							group_id = ?
						  WHERE
							group_id = ?' }"
			 FIELDS = "l.group_id, l.old_group_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00336', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldList_Load_Group" PARAMETERS = "group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_PageFields WHERE group_id = ? ORDER BY name' }"
				FIELDS	= "l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00337', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT PageFields.d.EOF }">
		<MvEVAL EXPR = "{ PageField_Read( l.fields[ ++l.field_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "PageFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00338', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldAndValueList_Load_Group" PARAMETERS = "page_code, group_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.branch_id"	VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFields"
				QUERY	= "{ 'SELECT
								pf.*, pv.value, pv.value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_PageFields pf
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PageBranchVersions pbv ON pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ '
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CFM_PageValues pv ON pv.field_id = pf.id AND pv.page_id = pbv.page_id AND pv.pagever_id = pbv.version_id
							  WHERE
								pf.group_id = ?
							  ORDER BY
								pf.name' }"
				FIELDS	= "l.branch_id, l.page_code, l.group_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00339', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT PageFields.d.EOF }">
		<MvEVAL EXPR = "{ PageField_Read( l.fields[ ++l.field_count ] ) }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.field_count }" MEMBER = "value" VALUE = "{ PageFields.d.value $ PageFields.d.value_long }">

		<MvSKIP NAME = "Merchant" VIEW = "PageFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00340', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldList_Load_All" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_PageFields ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00341', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT PageFields.d.EOF }">
		<MvASSIGN NAME = "l.field_count"	VALUE = "{ l.field_count + 1 }">

		<MvEVAL EXPR = "{ PageField_Read( l.fields[ l.field_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "PageFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTL-CST-00342', l.field_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldList_LoadAll_Cache" PARAMETERS = "cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_PageFields' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00343', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT PageFields.d.EOF }">
		<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.cache">
			<MvMEMBER NAME = "{ PageFields.d.code }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ PageField_Read( l.field ) }">
		<MvSKIP NAME = "Merchant" VIEW = "PageFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Load_Code_Cached" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:customfld:page_fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ PageField_Load_Code( l.code, l.cache:field ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.field"							VALUE = "{ l.cache:field }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Load_Code" PARAMETERS = "code, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'CFM_PageFields WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00344', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PageFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00345' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PageField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Load_ID" PARAMETERS = "id, field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFields"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_PageFields
							  WHERE
								id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00346', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PageFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00347' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PageField_Read( l.field ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CFM_Fields' ) }">

	<MvIF EXPR = "{ ISNULL l.field:group_id }">
		<MvASSIGN NAME = "l.field:group_id"		VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:is_public }">
		<MvASSIGN NAME = "l.field:is_public"	VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_PageFields
						  ( id, group_id, code, name, fieldtype, info, is_public )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.field:id, l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00348', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Update" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_PageFields
						  SET
							group_id	= ?,
							code		= ?,
							name		= ?,
							fieldtype	= ?,
							info		= ?,
							is_public	= ?
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.field:group_id, l.field:code, l.field:name, l.field:fieldtype, l.field:info, l.field:is_public,
					   l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00349', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT FieldOption_Delete_Field_ID( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ PageField_Delete_LowLevel( l.id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_PageFields WHERE id	= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00350', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CFM_PageValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "PageFieldValue_Load_CodeAndPage" PARAMETERS = "code, page_id, pagever_id, field var, value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "PageFieldValues"
				QUERY 	= "{ 'SELECT
								pf.*,
								pv.*
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CFM_PageFields pf, ' $
							  	g.Store_Table_Prefix $ 'CFM_PageValues pv
							  WHERE ' $
							  	[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pf.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ '	AND
							  	pv.field_id														    = pf.id																AND
							  	pv.page_id														    = ?																	AND
							  	pv.pagever_id														= ?' }"
				FIELDS	= "l.code, l.page_id, l.pagever_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00351', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PageFieldValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFieldValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00352' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_CFM_PageFields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field"				VALUE = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ PageFieldValues.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ PageFieldValues.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ PageFieldValues.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ PageFieldValues.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype"	VALUE = "{ PageFieldValues.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info"			VALUE = "{ PageFieldValues.d.info }">

	<MvCOMMENT>
	|
	| sNN_CFM_PageValues
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.value"				VALUE = "">
	<MvASSIGN NAME = "l.value:field_id"		VALUE = "{ PageFieldValues.d.field_id }">
	<MvASSIGN NAME = "l.value:product_id"	VALUE = "{ PageFieldValues.d.product_id }">
	<MvASSIGN NAME = "l.value:value"		VALUE = "{ PageFieldValues.d.value }">
	<MvASSIGN NAME = "l.value:value_long"	VALUE = "{ PageFieldValues.d.value_long }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldValue_LoadAll_Cache" PARAMETERS = "page_id, pagever_id, cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFieldValues"
				QUERY	= "{ 'SELECT
								pf.code, pv.*
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_PageFields pf, ' $
								g.Store_Table_Prefix $ 'CFM_PageValues pv
							  WHERE
							  	pf.id			= pv.field_id 	AND
							  	pv.page_id 		= ?				AND
								pv.pagever_id 	= ?' }"
				FIELDS	= "l.page_id, l.pagever_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00353', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT PageFieldValues.d.EOF }">
		<MvASSIGNARRAY NAME = "l.cache" VALUE = "{ PageFieldValues.d.value $ PageFieldValues.d.value_long }">
			<MvMEMBER NAME = "{ PageFieldValues.d.code }">
		</MvASSIGNARRAY>

		<MvSKIP NAME = "Merchant" VIEW = "PageFieldValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldValue_Load" PARAMETERS = "field_id, page_id, pagever_id, value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PageFieldValues"
				QUERY	= "{ 'SELECT
								value, value_long
							  FROM ' $
								g.Store_Table_Prefix $ 'CFM_PageValues
							  WHERE
							  	field_id	= ? AND
							  	page_id 	= ?	AND
								pagever_id 	= ?' }"
				FIELDS	= "l.field_id, l.page_id, l.pagever_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00377', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PageFieldValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFieldValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTL-CST-00378' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ PageFieldValues.d.value $ PageFieldValues.d.value_long }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PageFieldValues">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldValue_Delete" PARAMETERS = "field_id, page_id, pagever_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_PageValues WHERE field_id = ? AND page_id = ? AND pagever_id = ?' }"
			 FIELDS	= "l.field_id, l.page_id, l.pagever_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00354', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldValue_Delete_All_Field" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_PageValues WHERE field_id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00355', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldValue_Delete_All_Page" PARAMETERS = "page_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_PageValues WHERE page_id = ?' }"
			 FIELDS	= "l.page_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00356', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldValue_Delete_All_Page_Version" PARAMETERS = "page_id, version_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CFM_PageValues WHERE page_id = ? AND pagever_id = ?' }"
			 FIELDS	= "l.page_id, l.version_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00379', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageFieldValue_Set" PARAMETERS = "field_id, page_id, pagever_id, value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ len_var( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "( ?, ?, ?, NULL, ? )">
	<MvELSE>										<MvASSIGN NAME = "l.values" VALUE = "( ?, ?, ?, ?, NULL )">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CFM_PageValues ( field_id, page_id, pagever_id, value, value_long ) VALUES ' $ l.values }"
			 FIELDS	= "l.field_id, l.page_id, l.pagever_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00357', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ len( l.value ) GT 254 }">	<MvASSIGN NAME = "l.values"	VALUE = "value = NULL, value_long = ?">
		<MvELSE>									<MvASSIGN NAME = "l.values" VALUE = "value = ?, value_long = NULL">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CFM_PageValues SET ' $ l.values $ ' WHERE field_id = ? AND page_id = ? AND pagever_id = ? AND ( ( value_long IS NULL ) OR ( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( 'value_long' ) $ ' <> ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_CaseSensitive( '?' ) $ ' ) )' }"
				 FIELDS	= "l.value, l.field_id, l.page_id, l.pagever_id, l.value">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00358', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PageField_Read" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ PageFields.d.id }">
	<MvASSIGN NAME = "l.field:group_id"		VALUE = "{ PageFields.d.group_id }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ PageFields.d.code }">
	<MvASSIGN NAME = "l.field:name"			VALUE = "{ PageFields.d.name }">
	<MvASSIGN NAME = "l.field:fieldtype" 	VALUE = "{ PageFields.d.fieldtype }">
	<MvASSIGN NAME = "l.field:info" 		VALUE = "{ PageFields.d.info }">
	<MvASSIGN NAME = "l.field:is_public"	VALUE = "{ PageFields.d.is_public }">
</MvFUNCTION>

<MvCOMMENT>
|
| Assembly MvDO functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Read_Product_ID" PARAMETERS = "module var, param, product_id, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">	
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ ISNULL l.custom_fields }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ ProductFieldList_Load_All( l.fields ) }">			
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "code" VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "name" VALUE = "{ l.field:name }">

			<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.destination">
				<MvDIMENSION INDEX = "{ l.pos }">
				<MvMEMBER NAME = "value">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">	<MvASSIGN NAME = "l.null"	VALUE = "{ Module_Product_Field_Value_Array( l.module, l.product_id, l.field:code, l.value ) }">
			<MvELSE>												<MvASSIGN NAME = "l.value"	VALUE = "{ Module_Product_Field_Value( l.module, l.product_id, l.field:code ) }">
			</MvIF>
		</MvFOREACH>			
	<MvELSE>
		<MvASSIGN NAME = "l.total_custom_fields" VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.custom_fields, ',', l.custom_field_codes ) }">
		
		<MvIF EXPR = "{ l.total_custom_fields EQ 1 }">
			<MvIF EXPR = "{ NOT ProductField_Load_Code( l.custom_fields, l.field ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Product custom field \'' $ l.custom_fields $ '\' could not be found' ) }">
			</MvIF>

			<MvIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">	<MvASSIGN NAME = "l.null"			VALUE = "{ Module_Product_Field_Value_Array( l.module, l.product_id, l.custom_fields, l.destination ) }">
			<MvELSE>												<MvASSIGN NAME = "l.destination"	VALUE = "{ Module_Product_Field_Value( l.module, l.product_id, l.custom_fields ) }">
			</MvIF>
		<MvELSE>
			<MvFOREACH ITERATOR = "l.custom_field_code" ARRAY = "l.custom_field_codes" COUNT = "{ l.total_custom_fields }">
				<MvIF EXPR = "{ NOT ProductField_Load_Code( l.custom_field_code, l.field ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
					</MvIF>

					<MvASSIGN NAME = "l.null" VALUE = "{ Parameter_Error( l.param, 'Product custom field \'' $ l.custom_field_code $ '\' could not be found' ) }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.destination">
					<MvMEMBER NAME = "{ l.custom_field_code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">	<MvASSIGN NAME = "l.null"	VALUE = "{ Module_Product_Field_Value_Array( l.module, l.product_id, l.custom_field_code, l.value ) }">
				<MvELSE>												<MvASSIGN NAME = "l.value"	VALUE = "{ Module_Product_Field_Value( l.module, l.product_id, l.custom_field_code ) }">
				</MvIF>
			</MvFOREACH>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Product_Code" PARAMETERS = "module var, param, code, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Product code \'' $ l.code $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Read_Product_ID( l.module, l.param, l.product:id, l.custom_fields, l.destination ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Product_ID" PARAMETERS = "module var, param, product_id, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.product_id, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Product id \'' $ l.product_id $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Write_Product_LowLevel( l.module, l.param, l.product, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Product_Code" PARAMETERS = "module var, param, code, custom_field, value" STANDARDOUTPUTLEVEL = "">	
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Product code \'' $ l.code $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Write_Product_LowLevel( l.module, l.param, l.product, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Product_LowLevel" PARAMETERS = "module var, param, product var, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code( l.custom_field, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Product custom field \'' $ l.custom_field $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Product_Set_Field( l.module, l.product:id, l.custom_field, l.value ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated_Product( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_prod', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.03 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Product_Update( l.module, l.product ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_COL_UT ].Product_Evaluate_Collections( l.product ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Category_ID" PARAMETERS = "module var, param, category_id, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ ISNULL l.custom_fields }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ CategoryFieldList_Load_All( l.fields ) }">			
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "code"	VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "name"	VALUE = "{ l.field:name }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "value"	VALUE = "{ Module_Category_Field_Value( l.module, l.category_id, l.field:code ) }">
		</MvFOREACH>			
	<MvELSE>
		<MvASSIGN NAME = "l.total_custom_fields" VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.custom_fields, ',', l.custom_field_codes ) }">
		
		<MvIF EXPR = "{ l.total_custom_fields EQ 1 }">
			<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.custom_fields, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Category custom field \'' $ l.custom_fields $ '\' could not be found' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.destination" VALUE = "{ Module_Category_Field_Value( l.module, l.category_id, l.custom_fields ) }">
		<MvELSE>
			<MvFOREACH ITERATOR = "l.custom_field_code" ARRAY = "l.custom_field_codes" COUNT = "{ l.total_custom_fields }">
				<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.custom_field_code, l.null ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
					</MvIF>

					<MvASSIGN NAME = "l.null" VALUE = "{ Parameter_Error( l.param, 'Category custom field \'' $ l.custom_field_code $ '\' could not be found' ) }">
					<MvFOREACHCONTINUE>
				</MvIF>
				
				<MvASSIGN NAME = "l.destination" MEMBER = "{ l.custom_field_code }" VALUE = "{ Module_Category_Field_Value( l.module, l.category_id, l.custom_field_code ) }">			
			</MvFOREACH>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Category_Code" PARAMETERS = "module var, param, code, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.code, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Category code \'' $ l.code $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Read_Category_ID( l.module, l.param, l.category:id, l.custom_fields, l.destination ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Category_ID" PARAMETERS = "module var, param, category_id, custom_field, value" STANDARDOUTPUTLEVEL = "">	
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT CategoryField_Load_Code( l.custom_field, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Category custom field \'' $ l.custom_field $ '\' could not be found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Category_Set_Field( l.module, l.category_id, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Category_Code" PARAMETERS = "module var, param, code, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.code, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Category code \'' $ l.code $ '\' could not be found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Write_Category_ID( l.module, l.param, l.category:id, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Basket" PARAMETERS = "module var, param, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( g.Basket:basket_id, l.module:id, l.module:code, l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
	
	<MvIF EXPR = "{ ISNULL l.custom_fields }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ miva_struct_members( l.basketinfo:info, l.fields ) }">			
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "code"	VALUE = "{ l.field }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "value"	VALUE = "{ Module_Basket_Field_Value( l.module, g.Basket:basket_id, l.field ) }">
		</MvFOREACH>			
	<MvELSE>
		<MvASSIGN NAME = "l.total_custom_fields" VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.custom_fields, ',', l.custom_field_codes ) }">
		
		<MvIF EXPR = "{ l.total_custom_fields EQ 1 }">
			<MvASSIGN NAME = "l.destination" VALUE = "{ Module_Basket_Field_Value( l.module, g.Basket:basket_id, l.custom_fields ) }">
		<MvELSE>
			<MvFOREACH ITERATOR = "l.custom_field" ARRAY = "l.custom_field_codes" COUNT = "{ l.total_custom_fields }">
				<MvASSIGN NAME = "l.destination" MEMBER = "{ l.custom_field }" VALUE = "{ Module_Basket_Field_Value( l.module, g.Basket:basket_id, l.custom_field ) }">
			</MvFOREACH>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Basket" PARAMETERS = "module var, param, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Cache_Disable( 'write-basket' ) }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Basket_Register( g.Basket ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Basket_Set_Field( l.module, g.Basket:basket_id, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Customer_ID" PARAMETERS = "module var, param, customer_id, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ ISNULL l.custom_fields }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ CustomerFieldList_Load_All( l.fields ) }">			
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "code"	VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "name"	VALUE = "{ l.field:name }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "value"	VALUE = "{ Module_Customer_Field_Value( l.module, l.customer_id, l.field:code ) }">
		</MvFOREACH>			
	<MvELSE>
		<MvASSIGN NAME = "l.total_custom_fields" VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.custom_fields, ',', l.custom_field_codes ) }">
		
		<MvIF EXPR = "{ l.total_custom_fields EQ 1 }">
			<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.custom_fields, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Customer custom field \'' $ l.custom_fields $ '\' could not be found' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.destination" VALUE = "{ Module_Customer_Field_Value( l.module, l.customer_id, l.custom_fields ) }">
		<MvELSE>
			<MvFOREACH ITERATOR = "l.custom_field_code" ARRAY = "l.custom_field_codes" COUNT = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.custom_fields, ',', l.custom_field_codes ) }">
				<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.custom_field_code, l.null ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
					</MvIF>

					<MvASSIGN NAME = "l.null" VALUE = "{ Parameter_Error( l.param, 'Customer custom field \'' $ l.custom_field_code $ '\' could not be found' ) }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.destination" MEMBER = "{ l.custom_field_code }" VALUE = "{ Module_Customer_Field_Value( l.module, l.customer_id, l.custom_field_code ) }">			
			</MvFOREACH>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Customer_Login" PARAMETERS = "module var, param, customer_login, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_Login( l.customer_login, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Customer login \'' $ l.customer_login $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Read_Customer_ID( l.module, l.param, l.customer:id, l.custom_fields, l.destination ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Customer_ID" PARAMETERS = "module var, param, customer_id, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT CustomerField_Load_Code( l.custom_field, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Customer custom field \'' $ l.custom_field $ '\' could not be found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Customer_Set_Field( l.module, l.customer_id, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Customer_Login" PARAMETERS = "module var, param, customer_login, custom_field, value" STANDARDOUTPUTLEVEL = "">	
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_Login( l.customer_login, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Customer login \'' $ l.customer_login $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Write_Customer_ID( l.module, l.param, l.customer:id, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Order" PARAMETERS = "module var, param, order_id, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">	
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ ISNULL l.custom_fields }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ OrderFieldList_Load_All( l.fields ) }">			
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "code"	VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "name"	VALUE = "{ l.field:name }">
			<MvASSIGN NAME = "l.destination" INDEX = "{ l.pos }" MEMBER = "value"	VALUE = "{ Module_Order_Field_Value( l.module, l.order_id, l.field:code ) }">
		</MvFOREACH>			
	<MvELSE>
		<MvASSIGN NAME = "l.total_custom_fields" VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.custom_fields, ',', l.custom_field_codes ) }">
		
		<MvIF EXPR = "{ l.total_custom_fields EQ 1 }">
			<MvIF EXPR = "{ NOT OrderField_Load_Code( l.custom_fields, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Order custom field \'' $ l.custom_fields $ '\' could not be found' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.destination" MEMBER = "{ l.custom_fields }" VALUE = "{ Module_Order_Field_Value( l.module, l.order_id, l.custom_fields ) }">
		<MvELSE>
			<MvFOREACH ITERATOR = "l.custom_field_code" ARRAY = "l.custom_field_codes" COUNT = "{ l.total_custom_fields }">
				<MvIF EXPR = "{ NOT OrderField_Load_Code( l.custom_field_code, l.null ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
					</MvIF>

					<MvASSIGN NAME = "l.null" VALUE = "{ Parameter_Error( l.param, 'Order custom field \'' $ l.custom_field_code $ '\' could not be found' ) }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.destination" MEMBER = "{ l.custom_field_code }" VALUE = "{ Module_Order_Field_Value( l.module, l.order_id, l.custom_field_code ) }">			
			</MvFOREACH>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Order" PARAMETERS = "module var, param, order_id, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT OrderField_Load_Code( l.custom_field, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Order custom field \'' $ l.custom_field $ '\' could not be found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Order_Set_Field( l.module, l.order_id, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Page_ID" PARAMETERS = "module var, param, page_id, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_ID( l.page_id, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Page id \'' $ l.page_id $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Read_Page_LowLevel( l.module, l.param, l.page, l.custom_fields, l.destination ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Page_Code" PARAMETERS = "module var, param, code, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.code, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Page code \'' $ l.code $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Read_Page_LowLevel( l.module, l.param, l.page, l.custom_fields, l.destination ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Page_LowLevel" PARAMETERS = "module var, param, page var, custom_fields, destination var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.custom_fields }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" INDEX = "l.pos" COUNT = "{ PageFieldList_Load_All( l.fields ) }">
			<MvASSIGN NAME = "l.dest_field"			VALUE = "">
			<MvASSIGN NAME = "l.dest_field:code"	VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.dest_field:name"	VALUE = "{ l.field:name }">
			<MvASSIGN NAME = "l.dest_field:value"	VALUE = "{ Module_Page_Field_Value( l.module, l.page:id, l.page:version_id, l.field:code ) }">

			<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_var( l.destination, l.dest_field, -1 ) }">
		</MvFOREACH>			
	<MvELSE>
		<MvASSIGN NAME = "l.total_custom_fields" VALUE = "{ miva_splitstring( l.custom_fields, ',', l.custom_field_codes, 'trim' ) }">
		
		<MvIF EXPR = "{ l.total_custom_fields EQ 1 }">
			<MvIF EXPR = "{ NOT PageField_Load_Code( l.custom_fields, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Page custom field \'' $ l.custom_fields $ '\' could not be found' ) }">
			</MvIF>
			
			<MvASSIGN NAME = "l.destination" VALUE = "{ Module_Page_Field_Value( l.module, l.page:id, l.page:version_id, l.custom_fields ) }">
		<MvELSE>
			<MvFOREACH ITERATOR = "l.custom_field_code" ARRAY = "l.custom_field_codes" COUNT = "{ l.total_custom_fields }">
				<MvIF EXPR = "{ NOT PageField_Load_Code( l.custom_field_code, l.null ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
					</MvIF>

					<MvASSIGN NAME = "l.null" VALUE = "{ Parameter_Error( l.param, 'Page custom field \'' $ l.custom_field_code $ '\' could not be found' ) }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGNARRAY NAME = "l.destination" VALUE = "{ Module_Page_Field_Value( l.module, l.page:id, l.page:version_id, l.custom_field_code ) }">
					<MvMEMBER NAME = "{ l.custom_field_code }">
				</MvASSIGNARRAY>
			</MvFOREACH>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Page_ID" PARAMETERS = "module var, param, page_id, custom_field, value" STANDARDOUTPUTLEVEL = "">	
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_ID( l.page_id, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Page id \'' $ l.page_id $ '\' could not be found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Write_Page_LowLevel( l.module, l.param, l.page, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Page_Code" PARAMETERS = "module var, param, code, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MIVA MvDO_Error = "fatal, display">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.code, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Page code \'' $ l.code $ '\' could not be found' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.null" VALUE = "{ Write_Page_LowLevel( l.module, l.param, l.page, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Write_Page_LowLevel" PARAMETERS = "module var, param, page var, custom_field, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT PageField_Load_Code( l.custom_field, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'Page custom field \'' $ l.custom_field $ '\' could not be found' ) }">
	</MvIF>
		
	<MvASSIGN NAME = "l.null" VALUE = "{ Module_Page_Set_Field( l.module, l.page:id, l.page:version_id, l.custom_field, l.value ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "BasketFieldValue_LoadAll_Cache" PARAMETERS = "module var, basket_id, cache var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketInfo_Load( l.basket_id, l.module:id, l.module:code, l.basketinfo ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
	
	<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.basketinfo:info, l.members ) }">
		<MvASSIGNARRAY NAME = "l.cache" VALUE = "{ miva_variable_value( 'l.basketinfo:info:' $ l.member ) }">
			<MvMEMBER NAME = "{ l.member }">
		</MvASSIGNARRAY>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Is_Variable" PARAMETERS = "variable var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.valid_chars" 		VALUE = "_.: ">
	<MvASSIGN NAME = "l.square_bracket_pos" VALUE = 0>
	<MvASSIGN NAME = "l.bracket_count" 		VALUE = 0>

	<MvFOR INDEX = "l.pos" COUNT = "{ len_var( l.variable ) }">
		<MvASSIGN NAME = "l.char" VALUE = "{ substring_var( l.variable, l.pos, 1 ) }">

		<MvIF EXPR = "{ l.pos EQ 1 }">
			<MvIF EXPR = "{ ( NOT isalpha( l.char ) ) AND
							( l.char NE '_' ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
			
			<MvFORCONTINUE>
		</MvIF>
		
		<MvIF EXPR = "{ l.char EQ '[' }">
			<MvASSIGN NAME = "l.bracket_count" 				VALUE = "{ l.bracket_count + 1 }">
			<MvASSIGN NAME = "l.opening_square_bracket_pos" VALUE = "{ indexof( '[', l.variable, l.pos + 1 ) }">
			<MvASSIGN NAME = "l.closing_square_bracket_pos" VALUE = "{ indexof( ']', l.variable, l.pos ) }">
			
			<MvIF EXPR = "{ ( l.opening_square_bracket_pos GT 0 ) AND
							( l.opening_square_bracket_pos LT l.closing_square_bracket_pos ) }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.opening_square_bracket_pos - 1 }">
			<MvELSEIF EXPR = "{ l.closing_square_bracket_pos GT 0 }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.closing_square_bracket_pos - 1 }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ ']' }">
			<MvASSIGN NAME = "l.bracket_count" 				VALUE = "{ l.bracket_count - 1 }">
			<MvASSIGN NAME = "l.opening_square_bracket_pos" VALUE = "{ indexof( '[', l.variable, l.pos ) }">
			<MvASSIGN NAME = "l.closing_square_bracket_pos" VALUE = "{ indexof( ']', l.variable, l.pos + 1 ) }">
			
			<MvIF EXPR = "{ ( l.opening_square_bracket_pos GT 0 ) AND
							( l.opening_square_bracket_pos LT l.closing_square_bracket_pos ) }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.opening_square_bracket_pos - 1 }">
			<MvELSEIF EXPR = "{ l.closing_square_bracket_pos GT 0 }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.closing_square_bracket_pos - 1 }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ ( NOT isdigit( l.char ) ) AND
							( NOT isalpha( l.char ) ) AND
							( NOT ( l.char IN l.valid_chars ) ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOR>
	
	<MvIF EXPR = "{ l.bracket_count NE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Parse_Function_Parameters" PARAMETERS = "string, function_name var, parameters var, parameter_count var" STANDARDOUTPUTLEVEL = "">	
	<MvASSIGN NAME = "l.parameter_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.loop_counter" 		VALUE = 0>
	<MvASSIGN NAME = "l.string" 			VALUE = "{ trim( l.string ) }">
	<MvASSIGN NAME = "l.starting_pos" 		VALUE = "{ indexof( '(', l.string, 1 ) + 1 }">
	<MvASSIGN NAME = "l.function_name" 		VALUE = "{ tolower( substring_var( l.string, 1, l.starting_pos - 2 ) ) }">
	
	<MvIF EXPR = "{ l.starting_pos EQ 1 }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Expected \'(\' to start the function call' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ ISNULL l.function_name }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Missing function name' ) }">
	</MvIF>
	
	<MvIF EXPR = "{ substring_var( l.string, len_var( l.string ), 1 ) NE ')' }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Expected \')\' to end the function call' ) }">
	</MvIF>

	<MvWHILE EXPR = "{ 1 }">
		<MvASSIGN NAME = "l.quote_pos" 		VALUE = "{ indexof( '\'', l.string, l.starting_pos ) }">
		<MvASSIGN NAME = "l.end_quote_pos" 	VALUE = "{ indexof( '\'', l.string, l.quote_pos + 1 ) }">
		<MvASSIGN NAME = "l.comma_pos" 		VALUE = "{ indexof( ',', l.string, l.starting_pos ) }">

		<MvIF EXPR = "{ l.quote_pos AND NOT l.end_quote_pos }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Missing single quote' ) }">
		</MvIF>
		
		<MvWHILE EXPR = "{ ( l.comma_pos LT l.end_quote_pos ) AND ( l.comma_pos GT l.quote_pos ) }"> <MvCOMMENT> comma in a quoted string </MvCOMMENT>
			<MvASSIGN NAME = "l.comma_pos" VALUE = "{ indexof( ',', l.string, l.comma_pos + 1 ) }">
		</MvWHILE>
		
		<MvIF EXPR = "{ l.comma_pos EQ 0 }"> <MvCOMMENT> on the last parameter or we only have 1 parameter </MvCOMMENT>
			<MvASSIGN NAME = "l.start" 			VALUE = "{ l.starting_pos }">
			<MvASSIGN NAME = "l.end" 			VALUE = "{ len_var( l.string ) - l.starting_pos }">
			<MvASSIGN NAME = "l.starting_pos" 	VALUE = "{ len_var( l.string ) }">
			<MvASSIGN NAME = "l.quote_pos" 		VALUE = 0>
		<MvELSE> <MvCOMMENT> if there are more commas to come, grab from the start to the comma</MvCOMMENT>
			<MvASSIGN NAME = "l.start" 			VALUE = "{ l.starting_pos }">
			<MvASSIGN NAME = "l.end" 			VALUE = "{ l.comma_pos - l.starting_pos }">
			<MvASSIGN NAME = "l.starting_pos" 	VALUE = "{ l.comma_pos + 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.param" VALUE = "{ trim( substring_var( l.string, l.start, l.end ) ) }">
		
		<MvIF EXPR = "{ ISNULL l.param }">
			<MvIF EXPR = "{ l.comma_pos EQ 0 AND l.parameter_count EQ 0 }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
			
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Parameter number ' $ ( ++l.parameter_count ) $ ' cannot be empty' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.parameters" INDEX = "{ ++l.parameter_count }" VALUE = "{ l.param }">
		
		<MvIF EXPR = "{ l.quote_pos EQ 0 AND l.comma_pos EQ 0 }">
			<MvWHILESTOP>
		</MvIF>

		<MvIF EXPR = "{ l.loop_counter GT 1000 }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Error parsing parameters' ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.loop_counter" VALUE = "{ l.loop_counter + 1 }">
	</MvWHILE>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Parameter_Error" PARAMETERS = "param, message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.error_count" 																	VALUE = "{ miva_array_elements( g.Session:customfield_errors ) }">
	<MvASSIGN NAME = "g.Session:customfield_errors" INDEX = "{ l.error_count + 1 }" MEMBER = "param" 	VALUE = "{ l.param }">
	<MvASSIGN NAME = "g.Session:customfield_errors" INDEX = "{ l.error_count + 1 }" MEMBER = "message" 	VALUE = "{ l.message }">
	
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Debug" PARAMETERS = "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.error_count" VALUE = "{ miva_array_elements( g.Session:customfield_errors ) }">
	
	<div style="border: 1px solid #000; position: absolute; top: 0; right: 0; background-color: #FFF; margin: 10px; padding: 5px;">
		<h1 style="text-align: center;">Custom Field Debug Console</h1>

		<table cellspacing="10px">
		<MvIF EXPR = "{ NOT l.error_count }">
			<tr>
				<td>No errors have occurred</td>
			</tr>
		<MvELSE>
			<tr>
				<th>param</th>
				<th>message</th>
			</tr>

			<MvFOREACH ITERATOR = "l.error" ARRAY = "g.Session:customfield_errors" COUNT = "{ l.error_count }">
			<tr>
				<td><MvEVAL EXPR = "{ encodeentities( l.error:param ) }"></td>
				<td><MvEVAL EXPR = "{ encodeentities( l.error:message ) }"></td>
			</tr>
			</MvFOREACH>
			
			<MvASSIGN NAME = "g.Session:customfield_errors" VALUE = "">
		</MvIF>
		</table>
	</div>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Type" PARAMETERS = "type" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Value_In_List( l.type, 'category,customer,order,product,page' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Field_Type" PARAMETERS = "field_type" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Value_In_List( l.field_type, 'textfield,textarea,radio,dropdown,checkbox,imageupload,pdfupload,multitext' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Formatted_Group" PARAMETERS = "group_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:cache:customfld:groups }">
		<MvASSIGN NAME = "l.null" VALUE = "{ GroupList_LoadAll_Cache( g.Session:cache:customfld:groups ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "g.Session:cache:customfld:groups">
		<MvMEMBER NAME = "{ l.group_id }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = "{ l.field:name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Custom_Field_Head" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMImagePicker_CSS() }">

	<MvIF EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMImagePicker_JavaScript() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

	<script>
		function CustomField_ImageUpload( input_name )
		{
			var dialog;

			dialog				= new MMImagePicker( true, false );
			dialog.onComplete	= function( images )
			{
				if ( images.length )
				{
					document.forms[ Screen ].elements[ input_name ].value = images[ 0 ].image;
				}
			};

			dialog.Show();
		}

		function CustomField_PDFUpload( input_name )
		{
			return PopupFileUpload( 'Module_Data', '<MvEVAL EXPR = "{ encodejavascriptstring( l.module:code ) }">', input_name );
		}
	</script>
</MvFUNCTION>

<MvFUNCTION NAME = "Custom_Field_Order_Head" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvCOMMENT>
	|
	| Order tabs are currently drawn in an iframe within a dialog, we just use the old style popup upload dialog for those.
	|
	</MvCOMMENT>

	<script>
		function CustomField_ImageUpload( input_name )
		{
			return PopupFileUpload( 'Image', '', input_name );
		}

		function CustomField_PDFUpload( input_name )
		{
			return PopupFileUpload( 'Module_Data', '<MvEVAL EXPR = "{ encodejavascriptstring( l.module:code ) }">', input_name );
		}
	</script>
</MvFUNCTION>

<MvFUNCTION NAME = "Custom_Field_Content" PARAMETERS = "index, can_upload, can_use_wysiwyg" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<table border="0" cellpadding="2" cellspacing="0" width="100%">
	<MvFOREACH ITERATOR = "l.custom_field" ARRAY = "{ 'g.CFM_Fields[ ' $ l.index $ ' ]:fields' }" INDEX = "l.pos">
		<MvASSIGN NAME = "l.input_name" VALUE = "{ 'CFM_Fields[' $ l.index $ ']:fields[' $ l.pos $ ']:value' }">

		<MvCAPTURE VARIABLE = "l.prompt">
			<MvIF EXPR = "{ NOT ISNULL l.custom_field:info }">
				<span title="{ encodeentities( l.custom_field:info ) }" style="border-bottom: 1px dashed #000; cursor: help;"><MvEVAL EXPR = "{ encodeentities( l.custom_field:name ) }"></span>
			<MvELSE>
				<MvEVAL EXPR = "{ encodeentities( l.custom_field:name ) }">
			</MvIF>
		</MvCAPTURE>
		
		<MvIF EXPR = "{ [ g.Module_Library_Utilities ].Value_In_List( l.custom_field:fieldtype, 'radio,textarea,multitext' ) }">	<MvASSIGN NAME = "l.align" VALUE = "top">
		<MvELSE>																													<MvASSIGN NAME = "l.align" VALUE = "middle">
		</MvIF>
		
		<tr>
			<td valign="{ l.align }" nowrap>
			<MvIF EXPR = "{ l.custom_field:fieldtype NE 'checkbox' }">
				<MvEVAL EXPR = "{ trim( l.prompt ) }">:
			</MvIF>
			</td>

			<td width="100%" valign="{ l.align }">
				<MvIF EXPR = "{ l.custom_field:fieldtype EQ 'textfield' }">
					<input type="text" size="40" name="{ l.input_name }" value="{ encodeentities( l.custom_field:value ) }">
				<MvELSEIF EXPR = "{ l.custom_field:fieldtype EQ 'textarea' }">
					<MvIF EXPR = "{ l.can_use_wysiwyg }">	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawMMTextEditor( l.input_name, l.custom_field:value, 15, 1, 1, 0 ) }">
					<MvELSE>								<MvEVAL EXPR = "{ DrawTemplateTextArea_No_WYSIWYG( l.input_name, l.custom_field:value, 8, 1 ) }">
					</MvIF>
				<MvELSEIF EXPR = "{ l.custom_field:fieldtype EQ 'multitext' }">
					<MvASSIGN NAME = "l.join" VALUE = "">

					<MvCOMMENT>
					|
					| Once the data is output into a text area, the values are no longer an array and
					| switching tabs and then switching back makes the value a STRING.
					|
					</MvCOMMENT>

					<MvIF EXPR = "{ miva_variable_type( l.custom_field:value ) EQ 'ARRAY' }">	<MvASSIGN NAME = "l.join" VALUE = "{ miva_joinstring( l.custom_field:value, asciichar( 13 ) $ asciichar( 10 ), '' ) }">
					<MvELSE>																	<MvASSIGN NAME = "l.join" VALUE = "{ l.custom_field:value }">
					</MvIF>

					<MvIF EXPR = "{ l.can_use_wysiwyg }">	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawMMTextEditor( l.input_name, l.join, 15, 1, 0, 0 ) }">
					<MvELSE>								<MvEVAL EXPR = "{ DrawTemplateTextArea_No_WYSIWYG( l.input_name, l.join, 8, 1 ) }">
					</MvIF>
				<MvELSEIF EXPR = "{ l.custom_field:fieldtype EQ 'imageupload' }">
					<input type="text" size="40" name="{ l.input_name }" value="{ encodeentities( l.custom_field:value ) }">

					<MvIF EXPR = "{ l.can_upload }">
						<a href="{ 'JavaScript:CustomField_ImageUpload( \'' $ l.input_name $ '\' );' }"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Upload( 0 ) }"></a>
					</MvIF>
				<MvELSEIF EXPR = "{ l.custom_field:fieldtype EQ 'pdfupload' }">
					<input type="text" size="40" name="{ l.input_name }" value="{ encodeentities( l.custom_field:value ) }">

					<MvIF EXPR = "{ l.can_upload }">
						<a href="{ 'JavaScript:CustomField_PDFUpload( \'' $ l.input_name $ '\' );' }"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Upload( 0 ) }"></a>
					</MvIF>
				<MvELSEIF EXPR = "{ l.custom_field:fieldtype EQ 'radio' }">
					<MvASSIGN NAME = "l.found" VALUE = 0>

					<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ FieldOptionList_Load( l.custom_field:id, l.options ) }">
						<MvIF EXPR = "{ l.custom_field:value EQ l.option:value }">
							<MvASSIGN NAME = "l.found" VALUE = 1>
						</MvIF>

						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.input_name, l.option:value, l.custom_field:value, encodeentities( l.option:value ) ) }"><br />
					</MvFOREACH>

					<MvIF EXPR = "{ NOT l.found AND
									NOT ISNULL l.custom_field:value }">
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( l.input_name, l.custom_field:value, l.custom_field:value, encodeentities( l.custom_field:value ) ) }"><br />
					</MvIF>
				<MvELSEIF EXPR = "{ l.custom_field:fieldtype EQ 'dropdown' }">
					<MvASSIGN NAME = "l.found" VALUE = 0>

					<select name="{ l.input_name }">
						<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption_SelectOne() }">
						
						<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ FieldOptionList_Load( l.custom_field:id, l.options ) }">
							<MvIF EXPR = "{ l.custom_field:value EQ l.option:value }">
								<MvASSIGN NAME = "l.found" VALUE = 1>
							</MvIF>

							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( l.option:value, l.custom_field:value, encodeentities( l.option:value ) ) }">
						</MvFOREACH>

						<MvIF EXPR = "{ NOT l.found AND
										NOT ISNULL l.custom_field:value }">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( l.custom_field:value, l.custom_field:value, encodeentities( l.custom_field:value ) ) }">
						</MvIF>
					</select>
				<MvELSEIF EXPR = "{ l.custom_field:fieldtype EQ 'checkbox' }">
					<MvIF EXPR = "{ NOT ISNULL l.custom_field:value }">	<MvASSIGN NAME = "l.checked" VALUE = 1>
					<MvELSE>											<MvASSIGN NAME = "l.checked" VALUE = 0>
					</MvIF>
					
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.checked, l.input_name, 'yes', l.prompt ) }">
				</MvIF>
			</td>
		</tr>			
		
		<input type="hidden" name="{ 'CFM_Fields[' $ l.index $ ']:fields[' $ l.pos $ ']:id' }" 			value="{ encodeentities( l.custom_field:id ) }">
		<input type="hidden" name="{ 'CFM_Fields[' $ l.index $ ']:fields[' $ l.pos $ ']:name' }" 		value="{ encodeentities( l.custom_field:name ) }">
		<input type="hidden" name="{ 'CFM_Fields[' $ l.index $ ']:fields[' $ l.pos $ ']:fieldtype' }" 	value="{ encodeentities( l.custom_field:fieldtype ) }">
		<input type="hidden" name="{ 'CFM_Fields[' $ l.index $ ']:fields[' $ l.pos $ ']:info' }" 		value="{ encodeentities( l.custom_field:info ) }">
	</MvFOREACH>
	</table>
</MvFUNCTION>

<MvFUNCTION NAME = "In_Admin" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.arg1_len"	VALUE = "{ len_var( s.arg1 ) }">

	<MvIF EXPR = "{ ( ( 'admin.mvc' EIN s.arg1 ) EQ l.arg1_len ) OR
					( ( ( 'json.mvc' EIN s.arg1 ) EQ l.arg1_len ) AND ( ( g.Session_Type EQ 'admin' ) OR ( g.Session_Type EQ 'api' ) ) ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_SELECT" PARAMETERS = "query var, code" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'customfld', l.ref ) }">

	<MvASSIGN NAME = "l.ref:data:select_codes" MEMBER = "{ l.code }" VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query" PARAMETERS = "data var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data:field:id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00373', 'Invalid field identifier' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'customfld', l.ref ) }">

	<MvCOMMENT>
	|
	| Columns that need to be selected
	|
	| These are necessary for the fields being requested as part of the Module_xxx_Field_Query, Module_xxx_Field_Query_OrderBy,
	| and Module_xxx_Field_Query_Value API functions. Module_xxx_Field_Query_OrderBy is necessary so the column alias can be
	| used in the ORDER BY, which is necessary when using UNION queries both MySQL and PostgreSQL or SELECT DISTINCT queries on
	| PostgreSQL.
	|
	</MvCOMMENT>

	<MvREFERENCEARRAY NAME = "l.select" VARIABLE = "l.ref:data:select_codes">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvCOMMENT>
	|
	| Columns that have already been selected
	|
	</MvCOMMENT>

	<MvREFERENCEARRAY NAME = "l.selected" VARIABLE = "l.ref:data:selected_codes">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvCOMMENT>
	|
	| Tables that have already been queried
	|
	</MvCOMMENT>

	<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried_codes">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.alias"						VALUE = "{ CustomFields_Generic_Query_Field_Alias( l.data:field ) }">

	<MvIF EXPR = "{ l.select AND NOT l.selected }">
		<MvASSIGN NAME = "l.selected"				VALUE = 1>

		<MvIF EXPR = "{ l.data:field:fieldtype NE 'multitext' }">
			<MvASSIGN NAME = "l.column"				VALUE = "{ [ g.Module_Library_Native_DBAPI ].DB_IFNULL( l.alias $ '.value', l.alias $ '.value_long' ) }">

			<MvIF EXPR = "{ l.queried:conjunctive }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.column $ ' AS ' $ l.alias $ '_value' ) }">
			<MvELSE>									<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query, l.column, l.alias $ '_value' ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.queried }">
		<MvASSIGN NAME = "l.queried:queried"		VALUE = 1>
		<MvASSIGN NAME = "l.queried:conjunctive"	VALUE = 0>

		<MvASSIGN NAME = "l.record"					VALUE = "">
		<MvASSIGN NAME = "l.record:join_count"		VALUE = 0>
		<MvASSIGN NAME = "l.record:code"			VALUE = "{ l.code }">
		<MvASSIGN NAME = "l.record:field"			VALUE = "{ l.data:field }">
		<MvASSIGN NAME = "l.record:alias"			VALUE = "">
		<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_insert_ref( l.ref:data:customfield_codes, l.record, -1 ) }">

		<MvIF EXPR = "{ l.data:field:fieldtype NE 'multitext' }">
			<MvASSIGN NAME = "l.record:alias"		VALUE = "{ l.alias }">

			<MvEVAL EXPR = "{ CustomFields_Generic_Query_CFM_xxxValues_LEFT_OUTER_JOIN( l.query, l.data:correlation, l.data:cf_table, l.alias, l.data:cf_correlation, l.data:field:id ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_With_Search" PARAMETERS = "data var, query var, code, operator var, value var, is_conjunctive var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data:field:id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTL-CST-00381', 'Invalid field identifier' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'customfld', l.ref ) }">

	<MvCOMMENT>
	|
	| Translate searches for checkbox fields that use the "EQ" operator and have a "0"
	| value to use the FALSE operator instead
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.data:field:fieldtype EQ 'checkbox' AND l.operator EQ 'EQ' AND strcmp( l.value, '0' ) EQ 0 }">
		<MvASSIGN NAME = "l.operator"	VALUE = "FALSE">
		<MvASSIGN NAME = "l.value"		VALUE = "">
	</MvIF>

	<MvCOMMENT>
	|
	| This function is very similar to CustomFields_Generic_Query except this function will NOT select
	| the fields as when ONLY doing a search the custom fields do not need to be selected.  However, this
	| function will do an inner join or a LEFT OUTER JOIN depending on whether the query can be a
	| conjunctive query or not.  In addition, it will store additional information about the search request
	| that will allow CustomFields_Generic_Query to select the appropriate column if necessary.  (This could
	| happen if a field is searched for and also used in an ORDER BY or the value is going to be retrieved via
	| the query as both of those operations will cause the column to be selected)
	|
	</MvCOMMENT>

	<MvCOMMENT>
	|
	| Tables that have already been queried
	|
	</MvCOMMENT>

	<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried_codes">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.alias"						VALUE = "{ CustomFields_Generic_Query_Field_Alias( l.data:field ) }">
	<MvASSIGN NAME = "l.is_conjunctive"				VALUE = "{ CustomFields_Generic_Search_Is_Conjunctive( l.data, l.query, l.code, l.operator, l.value ) }">

	<MvIF EXPR = "{ ISNULL l.queried }">
		<MvASSIGN NAME = "l.queried:queried"		VALUE = 1>
		<MvASSIGN NAME = "l.queried:conjunctive"	VALUE = "{ l.is_conjunctive }">

		<MvASSIGN NAME = "l.record"					VALUE = "">
		<MvASSIGN NAME = "l.record:join_count"		VALUE = 0>
		<MvASSIGN NAME = "l.record:code"			VALUE = "{ l.code }">
		<MvASSIGN NAME = "l.record:field"			VALUE = "{ l.data:field }">
		<MvASSIGN NAME = "l.record:alias"			VALUE = "">
		<MvASSIGN NAME = "l.null"					VALUE = "{ miva_array_insert_ref( l.ref:data:customfield_codes, l.record, -1 ) }">

		<MvIF EXPR = "{ l.data:field:fieldtype NE 'multitext' }">
			<MvASSIGN NAME = "l.record:alias"		VALUE = "{ l.alias }">

			<MvIF EXPR = "{ l.is_conjunctive }">	<MvEVAL EXPR = "{ CustomFields_Generic_Query_CFM_xxxValues_FROM( l.query, l.data:cf_table, l.alias ) }">
			<MvELSE>								<MvEVAL EXPR = "{ CustomFields_Generic_Query_CFM_xxxValues_LEFT_OUTER_JOIN( l.query, l.data:correlation, l.data:cf_table, l.alias, l.data:cf_correlation, l.data:field:id ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_Search" PARAMETERS = "data var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'customfld', l.ref ) }">

	<MvIF EXPR = "{ NOT CustomFields_Generic_Query_With_Search( l.data, l.query, l.code, l.operator, l.value, l.is_conjunctive ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT miva_array_search( l.ref:data:customfield_codes, 1, l.element, 'l.element:code EQ l.code' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">

	<MvIF EXPR = "{ l.is_conjunctive }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, l.element:alias $ '.field_id = ? AND ' $ l.element:alias $ '.' $ l.data:cf_correlation $ ' = ' $ l.data:correlation $ '.id', [ g.Module_Library_DB ].SQL_Query_Field( l.data:field:id ) ) }">
	</MvIF>

	<MvIF EXPR = "{ l.data:field:fieldtype EQ 'multitext' }">
		<MvASSIGN NAME = "l.alias"			VALUE = "{ CustomFields_Generic_Query_MultiText_Field_Alias( l.element:field, ++l.element:join_count ) }">
		<MvASSIGN NAME = "l.where_fields"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Field( l.data:field:id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( '%' $ l.value $ '%' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'prod.id = ( SELECT product_id FROM ' $ g.Store_Table_Prefix $ 'CFM_ProdMultiValues ' $ l.alias $ ' WHERE ' $ l.alias $ '.field_id = ? AND ' $ l.alias $ '.product_id = prod.id AND ' $ l.alias $ '.value LIKE ? LIMIT 1 )',	l.where_fields ) }">
	<MvELSE>
		<MvIF EXPR = "{ ( l.operator EQ 'NC' )		OR
						( l.operator EQ 'NE' )		OR
						( l.operator EQ 'NOT_IN' )	OR
						( l.operator EQ 'NOTLIKE' )	OR
						( l.operator EQ 'NULL' ) }">
			<MvASSIGN NAME = "l.inner_joining_clause" VALUE = "AND">
		<MvELSE>
			<MvASSIGN NAME = "l.inner_joining_clause" VALUE = "OR">
		</MvIF>

		<MvIF EXPR = "{ l.operator EQ 'TRUE' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.element:alias $ '.value <> \'0\' AND ' $ l.element:alias $ '.value_long IS NULL )', '' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.element:alias $ '.value IS NULL AND ' $ l.element:alias $ '.value_long <> \'0\' )' , '' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'FALSE' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ' $ l.element:alias $ '.value = \'0\' OR ' $ l.element:alias $ '.value IS NULL ) AND ' $ l.element:alias $ '.value_long IS NULL )', '' ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ' $ l.element:alias $ '.value_long = \'0\' OR ' $ l.element:alias $ '.value_long IS NULL ) AND ' $ l.element:alias $ '.value IS NULL )' , '' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'OR' ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'FULLTEXT'			OR
							l.operator EQ 'FULLTEXT_NATURAL'	OR
							l.operator EQ 'FULLTEXT_BOOLEAN' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, 'CHAR', l.element:alias $ '.value,' $ l.element:alias $ '.value_long', l.operator, l.value, 'OR', l.inner_joining_clause ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'CO'		OR
							l.operator EQ 'NC'		OR
							l.operator EQ 'LIKE'	OR
							l.operator EQ 'NOTLIKE' OR
							l.operator EQ 'NULL' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, ternary( l.is_conjunctive, 'CHAR', 'NULL_CHAR' ), l.element:alias $ '.value,' $ l.element:alias $ '.value_long', l.operator, l.value, 'AND', l.inner_joining_clause ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, ternary( l.is_conjunctive, 'CHAR', 'NULL_CHAR' ), l.element:alias $ ternary( len_var( l.value ) GT 254, '.value_long', '.value' ), l.operator, l.value, 'AND', l.inner_joining_clause ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END_Clause( l.query, 'OR', 'AND' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_OrderBy" PARAMETERS = "data var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'customfld', l.ref ) }">

	<MvEVAL EXPR = "{ CustomFields_Generic_Query_SELECT( l.query, l.code ) }">

	<MvIF EXPR = "{ NOT CustomFields_Generic_Query( l.data, l.query, l.code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT miva_array_search( l.ref:data:customfield_codes, 1, l.element, 'l.element:code EQ l.code' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY_Flag_With_Alias_And_Member( l.query,
																				 			 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( l.element:alias $ '.value', l.element:alias $ '.value_long' ),
																							 l.element:alias $ '_value',
																			 				 l.element:alias $ ':value',
																			 				 l.direction,
																			 				 'null_char' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_OrderBy_LoadIndexRecord" PARAMETERS = "loaded_record var, field var, value var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.data" VARIABLE = "l.loaded_record">
		<MvMEMBER NAME = "{ CustomFields_Generic_Query_Field_Alias( l.field ) }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ NOT ISNULL l.value:value }">	<MvASSIGN NAME = "l.data:value"	VALUE = "{ l.value:value }">
	<MvELSE>										<MvASSIGN NAME = "l.data:value"	VALUE = "{ l.value:value_long }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_Value" PARAMETERS = "view_name, code, field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alias" VALUE = "{ CustomFields_Generic_Query_Field_Alias( l.field ) }">

	<MvFUNCTIONRETURN VALUE = "{ miva_variable_value( l.view_name $ '.d.' $ l.alias $ '_value' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_Field_Alias" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'cfm_' $ int( l.field:id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_MultiText_Field_Alias" PARAMETERS = "field var, join_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'cfm_' $ int( l.field:id ) $ '_' $ int( l.join_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Alias_In_Use" PARAMETERS = "query var, alias" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'cfm_xxxvalues_tables', l.ref ) }">

	<MvREFERENCEARRAY NAME = "l.in_use" VARIABLE = "l.ref:data">
		<MvMEMBER NAME = "{ l.alias }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.in_use }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.in_use" VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_CFM_xxxValues_FROM" PARAMETERS = "query var, cf_table, cf_alias" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Alias_In_Use( l.query, l.cf_alias ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, l.cf_table, l.cf_alias ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Query_CFM_xxxValues_LEFT_OUTER_JOIN" PARAMETERS = "query var, correlation, cf_table, cf_alias, cf_correlation, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomFields_Generic_Alias_In_Use( l.query, l.cf_alias ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, l.correlation, l.cf_table, l.cf_alias, l.cf_alias $ '.field_id = ? AND ' $ l.cf_alias $ '.' $ l.cf_correlation $ ' = ' $ l.correlation $ '.id', [ g.Module_Library_DB ].SQL_Query_Field( l.field_id ) ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Data_Category" PARAMETERS = "code, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.data"					VALUE = "">
	<MvASSIGN NAME = "l.data:correlation"		VALUE = "cat">
	<MvASSIGN NAME = "l.data:cf_table"			VALUE = "{ g.Store_Table_Prefix $ 'CFM_CatValues' }">
	<MvASSIGN NAME = "l.data:cf_correlation"	VALUE = "cat_id">
	<MvASSIGN NAME = "l.data:field"				VALUE = "">

	<MvFUNCTIONRETURN VALUE = "{ CategoryField_Load_Code_Cached( l.code, l.data:field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Data_Product" PARAMETERS = "code, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductField_Load_Code_Cached( l.code, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">
		<MvASSIGN NAME = "l.data"					VALUE = "">
		<MvASSIGN NAME = "l.data:correlation"		VALUE = "prod">
		<MvASSIGN NAME = "l.data:cf_table"			VALUE = "{ g.Store_Table_Prefix $ 'CFM_ProdMultiValues' }">
		<MvASSIGN NAME = "l.data:cf_correlation"	VALUE = "product_id">
		<MvASSIGN NAME = "l.data:field"				VALUE = "">
	<MvELSE>
		<MvASSIGN NAME = "l.data"					VALUE = "">
		<MvASSIGN NAME = "l.data:correlation"		VALUE = "prod">
		<MvASSIGN NAME = "l.data:cf_table"			VALUE = "{ g.Store_Table_Prefix $ 'CFM_ProdValues' }">
		<MvASSIGN NAME = "l.data:cf_correlation"	VALUE = "product_id">
		<MvASSIGN NAME = "l.data:field"				VALUE = "">
	</MvIF>

	<MvREFERENCE NAME = "l.data:field" VARIABLE = "l.field">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Data_Order" PARAMETERS = "code, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.data"					VALUE = "">
	<MvASSIGN NAME = "l.data:correlation"		VALUE = "ord">
	<MvASSIGN NAME = "l.data:cf_table"			VALUE = "{ g.Store_Table_Prefix $ 'CFM_OrderValues' }">
	<MvASSIGN NAME = "l.data:cf_correlation"	VALUE = "order_id">
	<MvASSIGN NAME = "l.data:field"				VALUE = "">

	<MvFUNCTIONRETURN VALUE = "{ OrderField_Load_Code_Cached( l.code, l.data:field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Data_Customer" PARAMETERS = "code, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.data"					VALUE = "">
	<MvASSIGN NAME = "l.data:correlation"		VALUE = "cust">
	<MvASSIGN NAME = "l.data:cf_table"			VALUE = "{ g.Store_Table_Prefix $ 'CFM_CustValues' }">
	<MvASSIGN NAME = "l.data:cf_correlation"	VALUE = "cust_id">
	<MvASSIGN NAME = "l.data:field"				VALUE = "">

	<MvFUNCTIONRETURN VALUE = "{ CustomerField_Load_Code_Cached( l.code, l.data:field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Data_Page" PARAMETERS = "code, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.data"					VALUE = "">
	<MvASSIGN NAME = "l.data:correlation"		VALUE = "pv">
	<MvASSIGN NAME = "l.data:cf_table"			VALUE = "{ g.Store_Table_Prefix $ 'CFM_PageValues' }">
	<MvASSIGN NAME = "l.data:cf_correlation"	VALUE = "pagever_id">
	<MvASSIGN NAME = "l.data:field"				VALUE = "">

	<MvFUNCTIONRETURN VALUE = "{ PageField_Load_Code_Cached( l.code, l.data:field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Generic_Search_Is_Conjunctive" PARAMETERS = "data var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'Query_Hints', l.query_hints ) }">

	<MvIF EXPR = "{ NOT l.query_hints:data:conjunctive }">																						<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ l.data:field:fieldtype EQ 'multitext' }">																				<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ l.data:field:fieldtype EQ 'checkbox' AND l.operator EQ 'TRUE' }">														<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT ISNULL l.value AND ( l.operator EQ 'EQ' OR l.operator EQ 'IN' OR l.operator EQ 'CO' OR l.operator EQ 'LIKE' ) }">	<MvFUNCTIONRETURN VALUE = 1>
	<MvELSE>																																	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Add_Field_Type" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field:fieldtype EQ 'textfield' }">		<MvASSIGN NAME = "l.field:type" VALUE = "text">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'textarea' }">		<MvASSIGN NAME = "l.field:type" VALUE = "textarea">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'radio' }">		<MvASSIGN NAME = "l.field:type" VALUE = "choice">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'dropdown' }">		<MvASSIGN NAME = "l.field:type" VALUE = "choice">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'checkbox' }">		<MvASSIGN NAME = "l.field:type" VALUE = "checkbox">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'imageupload' }">	<MvASSIGN NAME = "l.field:type" VALUE = "imageupload">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'pdfupload' }">	<MvASSIGN NAME = "l.field:type" VALUE = "customupload">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">	<MvASSIGN NAME = "l.field:type" VALUE = "multitext">
	<MvELSE>													<MvASSIGN NAME = "l.field:type" VALUE = "text">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Build_Choices" PARAMETERS = "field var, choices var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.choices"		VALUE = "">
	<MvASSIGN NAME = "l.choice_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ FieldOptionList_Load( l.field:id, l.options ) }">
		<MvASSIGN NAME = "l.choices" INDEX = "{ ++l.choice_count }" VALUE = "{ l.option:value }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.choice_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_Field_Requires_FULLTEXT_Index" PARAMETERS = "module var, searchablecustomfield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.searchablecustomfield:relevance }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ( l.searchablecustomfield:module_id EQ l.module:id ) AND ( l.searchablecustomfield:searchtype EQ 'fulltext' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawTemplateTextArea_No_WYSIWYG" PARAMETERS = "name, value var, rows, cols" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<script type="text/javascript">
	<!--
		function PopupTextAreaColorSelector( field, inputText )
		{
			window.open( Adminurl + 'Screen=COLR&Form=' + encodeURIComponent( Screen ) + '&Field=' + encodeURIComponent( field ) + '&InputText=' + encodeURIComponent( inputText ), 'ColorSelector', 'toolbar=no,location=no,directories=no,status=no,scrollbars=yes,resizable=yes,copyhistory=no,width=340,height=402' ).focus();
		}

		function TextArea_Insert( name, newText )
		{
			var self = document.forms[ Screen ].elements[ name ];
			var scroll_top;
			var caret_pos;

			self.focus();
			scroll_top		= self.scrollTop;

			caret_pos		= self.selectionStart + newText.length;
			self.value		= self.value.substring( 0, self.selectionStart ) + newText + self.value.substring( self.selectionStart, self.value.length );
			self.setSelectionRange( caret_pos, caret_pos );
			self.scrollTop	= scroll_top;
			
		}
	//-->
	</script>
	<table cellspacing="0" cellpadding="0" border="0" width="100%"><tr>
	<td valign="top"><textarea name="{ encodeentities( l.name ) }" rows="{ encodeentities( l.rows ) }" wrap="off" onkeydown="TextArea_TabCapture_OnKeyDown( event ? event : window.event, this );" style="width:100%;"><MvEVAL EXPR = "{ encodeentities( l.value ) }"></textarea></td>
	<td valign="top" align="right" style="width:34px;"><MvEVAL EXPR = "{ '<a href="JavaScript:PopupTextAreaColorSelector( \'' $ [ g.Module_Admin ].JavaScriptEncode( l.name ) $ '\', \'Insert\' );">' }"><img alt="Insert Color" border="0" src="{ g.AdminGraphics_Path $ 'color.gif' }" style="margin:0 8px;" /></a></td>
	</tr></table>
</MvFUNCTION>

<MvFUNCTION NAME = "Normalize_Value" PARAMETERS = "field var, value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field:fieldtype EQ 'checkbox' }">
		<MvIF EXPR = "{ l.value }">	<MvASSIGN NAME = "l.value" VALUE = 1>
		<MvELSE>					<MvASSIGN NAME = "l.value" VALUE = "">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductField_FieldType_OnChange_Values_Delete" PARAMETERS = "original_field var, field var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.original_field:fieldtype EQ l.field:fieldtype }">	<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.original_field:fieldtype EQ 'multitext' }">	<MvFUNCTIONRETURN VALUE = "{ ProductFieldMultiValue_Delete_All_Field( l.original_field:id ) }">
	<MvELSEIF EXPR = "{ l.field:fieldtype EQ 'multitext' }">			<MvFUNCTIONRETURN VALUE = "{ ProductFieldValue_Delete_All_Field( l.original_field:id ) }">
	<MvELSE>															<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomFields_FieldType_Supports_Options" PARAMETERS = "fieldtype" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.fieldtype EQ 'dropdown' OR l.fieldtype EQ 'radio' }">
</MvFUNCTION>

<MvINCLUDE FILE = "modules/util/customfld/functions.mv">
<MvINCLUDE FILE = "modules/util/customfld/customfieldlist.mv">
<MvINCLUDE FILE = "modules/util/customfld/customfieldaddeditdialog.mv">
<MvINCLUDE FILE = "modules/util/customfld/customfieldgrouplist.mv">

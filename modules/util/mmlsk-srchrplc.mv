<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-UTL-TSAR-
| Next Error Code: 5
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-srchrplc">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Template Search and Replace">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.0800">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.00">
	<MvASSIGN NAME = "l.module:description" VALUE = "Template Search and Replace allows you to search for and replace all string matches across all, or within selected, managed templates.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "util, vis_util, json, clientside">
</MvFUNCTION>

<MvCOMMENT>
|
| Feature vis_util
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Utility_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "TSAR:Template Search and Replace">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.tab NE 'TSAR' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_TemplateSearchAndReplace_Interface_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_TemplateSearchAndReplace_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_TemplateSearchAndReplace_Interface_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_TemplateSearchAndReplace_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.tab NE 'TSAR' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ Element_TemplateSearchAndReplace_Interface_HTML( l.module ) }">

	<script type="text/javascript">
		MMScreen_LoadFinished( function() { new TemplateSearchAndReplace_Interface(); } );
	</script>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons_Suppress( '[UPDATE]' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature util
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation"  PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature json
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'TemplateSearchAndReplace_Find' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_TemplateSearchAndReplace_Find( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'TemplateSearchAndReplace_Replace' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_TemplateSearchAndReplace_Replace( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_TemplateSearchAndReplace_Find" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.match_case"			VALUE = 0>
	<MvASSIGN NAME = "l.last_template_id"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Binary(	'R', 'SearchText',		l.search_text )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'MatchCase',		l.match_case )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O', 'LastTemplateID',	l.last_template_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.query"			VALUE = "">
	<MvASSIGN NAME = "l.resultlist"		VALUE = "">
	<MvASSIGN NAME = "l.result_count"	VALUE = 0>
	<MvASSIGN NAME = "l.search_text" 	VALUE = "{ GetNormalizedValue( l.search_text ) }">
	<MvASSIGN NAME = "l.search_length"	VALUE = "{ len_var( l.search_text ) }">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 't.*,
																		  bv.version_id		AS current_id' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'css.id			AS cssresource_id,
																		  cssv.code			AS cssresource_code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'js.id				AS scriptresource_id,
																		  jsv.code			AS scriptresource_code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'mp.id				AS property_id,
																		  mpv.type			AS property_type,
																		  mpv.code			AS property_code,
																		  mpv.product_id	AS property_product_id,
																		  mpv.cat_id		AS property_cat_id' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.id',		'parent_p.id' )		$ ' AS page_id,'	$
																		 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'pv.code',	'parent_pv.code' )	$ ' AS page_code,'	$
																		 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'pv.name',	'parent_pv.name' )	$ ' AS page_name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ManagedTemplates', 't' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ManagedTemplateBranchVersions', 'bv' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'Pages',								'p',			'p.templ_id = t.id',																		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'PageBranchVersions',					'pbv',			'pbv.branch_id = ? AND pbv.page_id = p.id AND pbv.head = 1',								[ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'PageVersions',						'pv',			'pv.id = pbv.version_id',																	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'Pages',								'parent_p',		't.parent_id <> 0 AND parent_p.templ_id = t.parent_id',										'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'PageBranchVersions',					'parent_pbv',	'parent_pbv.branch_id = ? AND parent_pbv.page_id = parent_p.id AND parent_pbv.head = 1',	[ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'PageVersions',						'parent_pv',	'parent_pv.id = parent_pbv.version_id',														'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'CSSResources',						'css',			'css.templ_id = t.id',																		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'CSSResourceBranchVersions',			'cssbv',		'cssbv.res_id = css.id AND cssbv.branch_id = ? AND cssbv.head = 1',							[ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'CSSResourceVersions',				'cssv',			'cssv.id = cssbv.version_id ',																'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'JavaScriptResources',				'js',			'js.templ_id = t.id',																		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'JavaScriptResourceBranchVersions',	'jsbv',			'jsbv.res_id = js.id AND jsbv.branch_id = ? AND jsbv.head = 1',								[ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'JavaScriptResourceVersions',			'jsv',			'jsv.id = jsbv.version_id',																	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'ManagedProperties',					'mp',			'mp.templ_id = t.id',																		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'ManagedPropertyBranchVersions',		'mpbv',			'mpbv.prop_id = mp.id AND mpbv.branch_id = ? AND mpbv.head = 1',							[ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 't', g.Store_Table_Prefix $ 'ManagedPropertyVersions',			'mpv',			'mpv.id = mpbv.version_id',																	'' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 't.id			> ?		AND
																		 bv.branch_id	= ?		AND
																		 bv.templ_id	= t.id	AND
																		 bv.head		= 1', [ g.Module_Library_DB ].SQL_Query_Field( l.last_template_id ) $ ',' $
																		 					  [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 't.id', 'ASC' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'ManagedTemplates', l.sql, l.fields, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTL-TSAR-00004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output_count" VALUE = 0>
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"matches":
		[
			<MvWHILE EXPR = "{ NOT ManagedTemplates.d.EOF }">
				<MvASSIGN NAME = "l.last_template_id"	VALUE = "{ ManagedTemplates.d.id }">

				<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplate_Read( l.template ) }">

				<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.template:current_id, l.managedtemplateversion ) }">
					<MvSKIP NAME = "Merchant" VIEW = "ManagedTemplates" ROWS = 1>
					<MvWHILECONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.managedtemplateversion:source" 	VALUE = "{ GetNormalizedValue( l.managedtemplateversion:source ) }">

				<MvASSIGN NAME = "l.matchlist"						VALUE = "">
				<MvASSIGN NAME = "l.match_count" 					VALUE = 0>
				<MvASSIGN NAME = "l.match_start" 					VALUE = 1>
				<MvASSIGN NAME = "l.template_length"				VALUE = "{ len_var( l.managedtemplateversion:source ) }">

				<MvWHILE EXPR = "{ 1 }">
					<MvIF EXPR = "{ l.match_case }">			<MvASSIGN NAME = "l.match_start" VALUE = "{ indexof( l.search_text, l.managedtemplateversion:source, l.match_start ) }">
					<MvELSE> 									<MvASSIGN NAME = "l.match_start" VALUE = "{ indexofi( l.search_text, l.managedtemplateversion:source, l.match_start ) }">
					</MvIF>

					<MvIF EXPR = "{ l.match_start EQ 0 }">
						<MvWHILESTOP>
					</MvIF>

					<MvASSIGN NAME = "l.start_index" 				VALUE = "{ indexofl( asciichar( 13 ) $ asciichar( 10 ), l.managedtemplateversion:source, l.match_start ) }">

					<MvIF EXPR = "{ l.start_index EQ 0 }"> 		<MvASSIGN NAME = "l.start_index_2" VALUE = 1>
					<MvELSE>									<MvASSIGN NAME = "l.start_index_2" VALUE = "{ indexofl( asciichar( 13 ) $ asciichar( 10 ), l.managedtemplateversion:source, l.start_index - 1 ) }">
					</MvIF>

					<MvIF EXPR = "{ l.start_index_2 EQ 0 }">
					 	<MvASSIGN NAME = "l.start_index_2" 			VALUE = 1>
					</MvIF>

					<MvASSIGN NAME = "l.end_index" 					VALUE = "{ indexof( asciichar( 13 ) $ asciichar( 10 ), l.managedtemplateversion:source, l.match_start + l.search_length ) }">

					<MvIF EXPR = "{ l.end_index EQ 0 }"> 		<MvASSIGN NAME = "l.end_index_2" VALUE = "{ l.template_length }">
					<MvELSE>									<MvASSIGN NAME = "l.end_index_2" VALUE = "{ indexof( asciichar( 13 ) $ asciichar( 10 ), l.managedtemplateversion:source, l.end_index + 2 ) }">
					</MvIF>

					<MvIF EXPR = "{ l.end_index_2 EQ 0 }">
					 	<MvASSIGN NAME = "l.end_index_2" 			VALUE = "{ l.template_length }">
					</MvIF>

					<MvASSIGN NAME = "l.start_index"				VALUE = "{ l.start_index_2 }">
					<MvASSIGN NAME = "l.end_index" 					VALUE = "{ l.end_index_2 }">

					<MvIF EXPR = "{ substring_var( l.managedtemplateversion:source, l.start_index, 2 ) EQ ( asciichar( 13 ) $ asciichar( 10 ) ) }">
						<MvASSIGN NAME = "l.start_index"			VALUE = "{ l.start_index + 2 }">
					</MvIF>

					<MvIF EXPR = "{ substring_var( l.managedtemplateversion:source, l.end_index, 2 ) EQ ( asciichar( 13 ) $ asciichar( 10 ) ) }">
						<MvASSIGN NAME = "l.end_index"				VALUE = "{ l.end_index - 2 }">
					</MvIF>

					<MvASSIGN NAME = "l.match"						VALUE = "">
					<MvASSIGN NAME = "l.match:template_start_index"	VALUE = "{ l.match_start }">
					<MvASSIGN NAME = "l.match:template_end_index"	VALUE = "{ l.match:template_start_index + l.search_length }">
					<MvASSIGN NAME = "l.match:local_start_index"	VALUE = "{ l.match_start - l.start_index }">
					<MvASSIGN NAME = "l.match:local_end_index"		VALUE = "{ l.match:local_start_index + l.search_length }">
					<MvASSIGN NAME = "l.match:match"				VALUE = "{ substring_var( l.managedtemplateversion:source, l.start_index, l.end_index - l.start_index + 2 ) }">

					<MvASSIGN NAME = "l.match_count"				VALUE = "{ miva_array_insert_var( l.matchlist, l.match, -1 ) }">
					<MvASSIGN NAME = "l.match_start"				VALUE = "{ l.match_start + l.search_length }">
				</MvWHILE>

				<MvIF EXPR = "{ l.match_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
						"template_id":		<MvEVAL EXPR = "{ int( l.template:id ) }">,
						"template_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( substring_var( l.template:filename, 1, len_var( l.template:filename ) - 4 ) ) }">",
						"version_id":		<MvEVAL EXPR = "{ int( l.template:current_id ) }">,
						"matchlist": 
						[
							<MvASSIGN NAME = "l.match_output_count" VALUE = 0>
							<MvFOREACH ITERATOR = "l.match" ARRAY = "l.matchlist" COUNT = "{ l.match_count }">
								<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.match_output_count ) }">
									"match":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.match:match ) }">",
									"template_start_index":	<MvEVAL EXPR = "{ int( l.match:template_start_index ) }">,
									"template_end_index":	<MvEVAL EXPR = "{ int( l.match:template_end_index ) }">,
									"local_start_index":	<MvEVAL EXPR = "{ int( l.match:local_start_index ) }">,
									"local_end_index":		<MvEVAL EXPR = "{ int( l.match:local_end_index ) }">
								<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
							</MvFOREACH>
						]

						<MvIF EXPR = "{ ManagedTemplates.d.page_id }">
							, "page":
							{
								"id":	<MvEVAL EXPR = "{ int( ManagedTemplates.d.page_id ) }">,
								"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.page_code ) }">",
								"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.page_name ) }">"
							}
						<MvELSEIF EXPR = "{ ManagedTemplates.d.cssresource_id }">
							, "cssresource":
							{
								"id":	<MvEVAL EXPR = "{ int( ManagedTemplates.d.cssresource_id ) }">,
								"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.cssresource_code ) }">"
							}
						<MvELSEIF EXPR = "{ ManagedTemplates.d.scriptresource_id }">
							, "scriptresource":
							{
								"id":	<MvEVAL EXPR = "{ int( ManagedTemplates.d.scriptresource_id ) }">,
								"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.scriptresource_code ) }">"
							}
						<MvELSEIF EXPR = "{ ManagedTemplates.d.property_id }">
							<MvIF EXPR = "{ ManagedTemplates.d.property_type EQ 'readytheme_contentsection' OR ManagedTemplates.d.property_type EQ 'readytheme_navigationset' OR ManagedTemplates.d.property_type EQ 'readytheme_productlisting' }">
								<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedPropertyVersion_Load_Property_Current( ManagedTemplates.d.property_id, l.version ) }">
									<MvIF EXPR = "{ ManagedTemplates.d.property_type EQ 'readytheme_contentsection' }">
										, "readytheme_contentsection":
										{
											"id":	<MvEVAL EXPR = "{ int( ManagedTemplates.d.property_id ) }">,
											"type":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.property_type ) }">",
											"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.property_code ) }">",
											"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.version:settings:name ) }">"
										}
									<MvELSEIF EXPR = "{ ManagedTemplates.d.property_type EQ 'readytheme_navigationset' }">
										, "readytheme_navigationset":
										{
											"id":	<MvEVAL EXPR = "{ int( ManagedTemplates.d.property_id ) }">,
											"type":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.property_type ) }">",
											"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.property_code ) }">",
											"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.version:settings:name ) }">"
										}
									<MvELSEIF EXPR = "{ ManagedTemplates.d.property_type EQ 'readytheme_productlisting' }">
										, "readytheme_productlisting":
										{
											"id":	<MvEVAL EXPR = "{ int( ManagedTemplates.d.property_id ) }">,
											"type":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.property_type ) }">",
											"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ManagedTemplates.d.property_code ) }">",
											"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.version:settings:name ) }">"
										}
									</MvIF>
								</MvIF>
							<MvELSEIF EXPR = "{ ManagedTemplates.d.property_product_id }">
								<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_ID( ManagedTemplates.d.property_product_id, l.product ) }">
									, "product":
									{
										"id":	<MvEVAL EXPR = "{ int( l.product:id ) }">,
										"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.product:code ) }">",
										"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.product:name ) }">"
									}
								</MvIF>
							<MvELSEIF EXPR = "{ ManagedTemplates.d.property_cat_id }">
								<MvIF EXPR = "{ [ g.Module_Library_DB ].Category_Load_ID( ManagedTemplates.d.property_cat_id, l.category ) }">
									, "category":
									{
										"id":	<MvEVAL EXPR = "{ int( l.category:id ) }">,
										"code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.category:code ) }">",
										"name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.category:name ) }">"
									}
								</MvIF>
							</MvIF>
						</MvIF>
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvSKIP NAME = "Merchant" VIEW = "ManagedTemplates" ROWS = 1>

				<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvWHILESTOP>
				<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvWHILESTOP>
				</MvIF>
			</MvWHILE>
		],

		<MvIF EXPR = "{ ManagedTemplates.d.EOF }">
			"complete":			true
		<MvELSE>
			"complete":			false,
			"last_template_id":	<MvEVAL EXPR = "{ int( l.last_template_id ) }">
		</MvIF>
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ManagedTemplates">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_TemplateSearchAndReplace_Replace" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.notes"		VALUE = "Template Search & Replace">
	<MvASSIGN NAME = "l.processed" 	VALUE = 0>
	<MvASSIGN NAME = "l.start_time" VALUE = "{ s.dyn_time_t }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Binary(	'r', 'ReplaceText',	l.replace_text ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O', 'Notes',		l.notes ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvCOMMENT>
	|
	| Validate templates
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.input_template" ARRAY = "l.input_templates" COUNT = "{ [ g.Module_JSON ].JSON_Input_Array( 'Templates', l.input_templates ) }">
		<MvASSIGN NAME = "l.replacement_template"					VALUE = "">
		<MvASSIGN NAME = "l.replacement_template:replacements"		VALUE = "">
		<MvASSIGN NAME = "l.replacement_template:replacement_count"	VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Integer( l.input_template, 'R', 'template_id',	l.replacement_template:template_id ) OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Integer( l.input_template, 'R', 'version_id',	l.replacement_template:version_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ miva_array_search( l.replacement_templates, 1, l.search_replacement_template, '( l.search_replacement_template:template_id EQ l.replacement_template:template_id )' ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_template, 'template_id', 'Template already specified' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.input_replacement" ARRAY = "l.input_replacements" COUNT = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_template, 'replacements', l.input_replacements ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Integer( l.input_replacement, 'R', 'start_index',	l.replacement:start_index ) OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Integer( l.input_replacement, 'R', 'end_index',	l.replacement:end_index ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ miva_array_search( l.replacement_template:replacements, 1, l.search_replacement, '( l.search_replacement:start_index GE l.replacement:start_index AND l.search_replacement:end_index LE l.replacement:end_index ) OR
																											  ( l.search_replacement:start_index LE l.replacement:start_index AND l.search_replacement:end_index GE l.replacement:end_index ) OR
																											  ( l.search_replacement:start_index LE l.replacement:start_index AND l.search_replacement:end_index LE l.replacement:end_index AND l.search_replacement:end_index GT l.replacement:start_index ) OR
																											  ( l.search_replacement:start_index GE l.replacement:start_index AND l.search_replacement:end_index GE l.replacement:end_index AND l.search_replacement:start_index LT l.replacement:end_index )' ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_template, 'template_id', 'Replacement overlap detected' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.replacement_template:replacement_count" VALUE = "{ miva_array_insert_var( l.replacement_template:replacements, l.replacement, -1 ) }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.replacement_template_count" VALUE = "{ miva_array_insert_var( l.replacement_templates, l.replacement_template, -1 ) }">
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Replace matches
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.replace_text" VALUE = "{ GetNormalizedValue( l.replace_text ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( l.notes ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.replacement_template" ARRAY = "l.replacement_templates" COUNT = "{ l.replacement_template_count }">
		<MvASSIGN NAME = "l.processed" VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT JSON_TemplateSearchAndReplace_Replace_LowLevel( l.replace_text, l.replacement_template ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_TemplateSearchAndReplace_Replace_LowLevel" PARAMETERS = "replace_text var, replacement_template var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.replacement_template:template_id, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.replacement_template:version_id, l.managedtemplateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Sort Descending so we can blindly replace in the template
	| without having to track the shift in replaced text.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.replacement_template:replacement_count"	VALUE = "{ miva_array_sort( l.replacement_template:replacements, 'JSON_SearchAndReplace_Replace_Sort', l.null ) }">
	<MvASSIGN NAME = "l.managedtemplateversion:source" 			VALUE = "{ GetNormalizedValue( l.managedtemplateversion:source ) }">

	<MvFOREACH ITERATOR = "l.replacement" ARRAY = "l.replacement_template:replacements" COUNT = "{ l.replacement_template:replacement_count }">
		<MvASSIGN NAME = "l.managedtemplateversion:source"		VALUE = "{ substring_var( l.managedtemplateversion:source, 1, l.replacement:start_index - 1 ) $ l.replace_text $ substring_var( l.managedtemplateversion:source, l.replacement:end_index, len_var( l.managedtemplateversion:source ) - l.replacement:end_index + 1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.managedtemplateversion:source, l.managedtemplateversion:settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchAndReplace_Replace_Sort" PARAMETERS = "left var, right var, data" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.right:start_index LT l.left:start_index }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.right:start_index GT l.left:start_index }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvCOMMENT>
|
| Feature clientside
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/util/srchrplc/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_TemplateSearchAndReplace_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/srchrplc/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/srchrplc/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/srchrplc/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Helper functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "GetNormalizedValue" PARAMETERS = "source" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.source" VALUE = "{ glosub( l.source, asciichar( 13 ) $ asciichar( 10 ),	asciichar( 10 ) ) }">
	<MvASSIGN NAME = "l.source" VALUE = "{ glosub( l.source, asciichar( 10 ) $ asciichar( 13 ),	asciichar( 10 ) ) }">
	<MvASSIGN NAME = "l.source" VALUE = "{ glosub( l.source, asciichar( 13 ),					asciichar( 10 ) ) }">
	<MvASSIGN NAME = "l.source" VALUE = "{ glosub( l.source, asciichar( 10 ), 					asciichar( 13 ) $ asciichar( 10 ) ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.source }">
</MvFUNCTION>

<MvINCLUDE FILE = "modules/util/srchrplc/functions.mv">
<MvINCLUDE FILE = "modules/util/srchrplc/interface.mv">
<MvINCLUDE FILE = "modules/util/srchrplc/confirmationnotesdialog.mv">

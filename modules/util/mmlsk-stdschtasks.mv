<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-UTIL-SST-
| Next Error Code: 32    
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-stdschtasks">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Standard Scheduled Tasks">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1200">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.00">
	<MvASSIGN NAME = "l.module:description"	VALUE = "This module implements a set of standard scheduled tasks.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "data_store, util, scheduledtask">
</MvFUNCTION>

<MvCOMMENT>
|
| Store-level Module Data Support Feature (data_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Default Scheduled Task: Perform Module Cleanup Tasks
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Perform Module Cleanup Tasks">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "module_cleanup">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Delete Expired Shopping Baskets
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Delete Expired Shopping Baskets">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "baskets">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Process Subscriptions
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Process Subscriptions">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "subscriptions">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Delete Cached Product List Entries
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Delete Cached Product List Entries">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 14400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "deletecachedproductlists">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">
	<MvASSIGN NAME = "l.task:config:which"				VALUE = "expired">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Pre-Calculate Discount Prices
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Pre-Calculate Discount Prices">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "precalcprices">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 60>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "precalcprices">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">
	<MvASSIGN NAME = "l.task:config:now"				VALUE = 1>
	<MvASSIGN NAME = "l.task:config:future"				VALUE = 1>
	<MvASSIGN NAME = "l.task:config:future_hours"		VALUE = 24>
	<MvASSIGN NAME = "l.task:config:max_proc_min"		VALUE = 0>
	<MvASSIGN NAME = "l.task:config:variants"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Clear Scheduled Task Log
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Clear Scheduled Task Logs">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = "{ 60 * 60 * 24 * 7 }">
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "logs">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">
	<MvASSIGN NAME = "l.task:config:retain_days"		VALUE = 30>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Generate Dashboard Reports
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Generate Dashboard Reports">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "dashboardreports">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 3600>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "dashboardreports">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Expunge Payment Card
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Delete Unreferenced MivaPay Tokens">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 14400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "deletemivapaytokens">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Notify Modules of Time-based Price Group Events
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Notify Modules of Time-based Price Group Events">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 3600>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "pricegroup_validity">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Daily Collection Rebuild
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Daily Collection Rebuild">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "rebuildcollections">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">
	<MvASSIGN NAME = "l.task:config:rebuildkey"			VALUE = "daily">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Search Log Maintenance
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Search Log Maintenance">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 86400>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "searchlog">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: Analyze Tables
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "Analyze Tables">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 1>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = "{ 60 * 60 * 24 * 30 }">
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t + l.task:runint }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "analyze_tables">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Default Scheduled Task: AI Search Index Generation
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.task"							VALUE = "">
	<MvASSIGN NAME = "l.task:descrip"					VALUE = "AI Search Index">
	<MvASSIGN NAME = "l.task:enabled"					VALUE = 0>
	<MvASSIGN NAME = "l.task:loglevel"					VALUE = "WE">
	<MvASSIGN NAME = "l.task:trig"						VALUE = "aisearchindex">
	<MvASSIGN NAME = "l.task:trig_delay"				VALUE = 0>
	<MvASSIGN NAME = "l.task:runint"					VALUE = 0>
	<MvASSIGN NAME = "l.task:runonce"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_mode"					VALUE = 0>
	<MvASSIGN NAME = "l.task:mnt_advnce"				VALUE = 1800>
	<MvASSIGN NAME = "l.task:lastrun"					VALUE = 0>
	<MvASSIGN NAME = "l.task:nextrun"					VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.task:module_id"					VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.task:operation"					VALUE = "aisearchindex">
	<MvASSIGN NAME = "l.task:config"					VALUE = "">
	<MvASSIGN NAME = "l.task:config:max_proc_min"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTask_Insert( l.task ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00009', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Store Utilities Feature (util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation" PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Scheduled Task (scheduledtask)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ScheduledTaskModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Operations" PARAMETERS = "module var, operations var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.operations"			VALUE = "">
	<MvASSIGN NAME = "l.operation_count"	VALUE = 0>

	<MvASSIGN NAME = "l.operation:code"		VALUE = "module_cleanup">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Perform Module Cleanup Tasks">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "baskets">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Delete Expired Shopping Baskets">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "feed">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Run a Feed">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "subscriptions">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Process Subscriptions">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "import">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Import">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "precalcprices">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Pre-Calculate Discount Prices">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "deletecachedproductlists">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Delete Product List Cache Entries">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "logs">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Clear Scheduled Task Log">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "dashboardreports">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Generate Dashboard Reports">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "deletemivapaytokens">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Delete Unreferenced MivaPay Tokens">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "pricegroup_validity">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Notify Modules of Time-based Price Group Events">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "rebuildcollections">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Rebuild Collection(s)">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "searchlog">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Search Log Maintenance">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "optimize_tables">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Optimize Tables">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "analyze_tables">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Analyze Tables">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvASSIGN NAME = "l.operation:code"		VALUE = "aisearchindex">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "AI Search Index">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.operation_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Fields" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation EQ 'feed' }">
		<MvIF EXPR = "{ l.task:id }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_Feed"			VALUE = "{ l.task:config:feed }">
		<MvELSE>
			<MvASSIGN NAME = "g.StandardScheduledTasks_Feed"			VALUE = "">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "feed">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'import' }">
		<MvIF EXPR = "{ l.task:id }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_Import_ID"		VALUE = "{ l.task:config:import_id }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_Import_Filename"	VALUE = "{ l.task:config:import_filename }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_Import_Delete"	VALUE = "{ l.task:config:import_delete }">
		<MvELSE>
			<MvASSIGN NAME = "g.StandardScheduledTasks_Import_ID"		VALUE = "">
			<MvASSIGN NAME = "g.StandardScheduledTasks_Import_Filename"	VALUE = "">
			<MvASSIGN NAME = "g.StandardScheduledTasks_Import_Delete"	VALUE = "">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "import_id,import_filename,import_delete">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'precalcprices' }">
		<MvIF EXPR = "{ l.task:id }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_Now"						VALUE = "{ l.task:config:now }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_Future"					VALUE = "{ l.task:config:future }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_FutureHours"				VALUE = "{ l.task:config:future_hours }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes"		VALUE = "{ int( l.task:config:max_proc_min ) }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_CalculateVariantPrices"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.task:config:variants ) }">
		<MvELSE>
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_Now"						VALUE = 1>
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_Future"					VALUE = 1>
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_FutureHours"				VALUE = 24>
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes"		VALUE = 0>
			<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_CalculateVariantPrices"	VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "precalcprices_now,precalcprices_future,precalcprices_variants,precalcprices_max_proc_min">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'deletecachedproductlists' }">
		<MvIF EXPR = "{ l.task:id }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_DeleteCachedProductLists_Which"	VALUE = "{ l.task:config:which }">
		<MvELSE>
			<MvASSIGN NAME = "g.StandardScheduledTasks_DeleteCachedProductLists_Which"	VALUE = "expired">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "deletecachedproductlists_which">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'logs' }">
		<MvIF EXPR = "{ l.task:id }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_Logs_RetainDays"	VALUE = "{ int( l.task:config:retain_days ) }">
		<MvELSE>
			<MvASSIGN NAME = "g.StandardScheduledTasks_Logs_RetainDays"	VALUE = 30>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "logs">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'rebuildcollections' }">
		<MvIF EXPR = "{ l.task:id }">
			<MvASSIGN NAME = "g.StandardScheduledTasks_RebuildCollections_RebuildKey" VALUE = "{ l.task:config:rebuildkey }">
		<MvELSE>
			<MvASSIGN NAME = "g.StandardScheduledTasks_RebuildCollections_RebuildKey" VALUE = "daily">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "rebuildcollections">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'optimize_tables' }">
		<MvFUNCTIONRETURN VALUE = "optimize_tables">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'aisearchindex' }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_AISearchIndex_MaxProcessingMinutes"	VALUE = "{ ternary( l.task:id, int( l.task:config:max_proc_min ), 0 ) }">

		<MvFUNCTIONRETURN VALUE = "aisearchindex_max_proc_min">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'feed' }">								<MvFUNCTIONRETURN VALUE = "<b>Feed:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'import_id' }">						<MvFUNCTIONRETURN VALUE = "<b>Import:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'import_filename' }">					<MvFUNCTIONRETURN VALUE = "<b>File Name:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'deletecachedproductlists_which' }">	<MvFUNCTIONRETURN VALUE = "<b>Entries to Delete:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'precalcprices_max_proc_min' }">		<MvFUNCTIONRETURN VALUE = "<b>Limit Processing Time To:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'rebuildcollections' }">				<MvFUNCTIONRETURN VALUE = "<b>Rebuild Key:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'aisearchindex_max_proc_min' }">		<MvFUNCTIONRETURN VALUE = "<b>Limit Processing Time To:</b>">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'feed' }">
		<input type="text" size="20" id="StandardScheduledTasks_Feed" name="StandardScheduledTasks_Feed" value="{ encodeentities( g.StandardScheduledTasks_Feed ) }">
		<a href="JavaScript:FeedLookupDialog( 'StandardScheduledTasks_Feed' );"><MvEVAL EXPR = "{ [ g.Module_Admin ].DrawImgButton_Lookup( 0 ) }"></a>
	<MvELSEIF EXPR = "{ l.field_id EQ 'import_id' }">
		<select name="StandardScheduledTasks_Import_ID">
			<option value="0">&lt;Select One&gt;</option>
			<MvFOREACH ITERATOR = "l.import" ARRAY = "l.imports" COUNT = "{ [ g.Module_Feature_IMP_DB ].ImportList_Load_All( l.imports ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption_Encode( l.import:id, g.StandardScheduledTasks_Import_ID, l.import:descrip ) }">
			</MvFOREACH>
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'import_filename' }">
		<input type="text" size="50" id="StandardScheduledTasks_Import_Filename" name="StandardScheduledTasks_Import_Filename" value="{ encodeentities( g.StandardScheduledTasks_Import_Filename ) }">
	<MvELSEIF EXPR = "{ l.field_id EQ 'import_delete' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( g.StandardScheduledTasks_Import_Delete, 'StandardScheduledTasks_Import_Delete', '1', 'Delete File After Import' ) }">
	<MvELSEIF EXPR = "{ l.field_id EQ 'precalcprices_now' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( g.StandardScheduledTasks_PrecalcPrices_Now, 'StandardScheduledTasks_PrecalcPrices_Now', '1', 'Calculate Current Discounts' ) }">
	<MvELSEIF EXPR = "{ l.field_id EQ 'precalcprices_future' }">
		<label>
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( g.StandardScheduledTasks_PrecalcPrices_Future, 'StandardScheduledTasks_PrecalcPrices_Future', '1', 'Calculate Discounts' ) }">
			<input type="text" size="5" name="StandardScheduledTasks_PrecalcPrices_FutureHours" value="{ encodeentities( g.StandardScheduledTasks_PrecalcPrices_FutureHours ) }"> Hour(s) in the Future
		</label>
	<MvELSEIF EXPR = "{ l.field_id EQ 'precalcprices_max_proc_min' }">
		<label>
			<input type="text" size="5" name="StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes" value="{ encodeentities( g.StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes ) }"> minute(s) (0 = no limit)
		</label>
	<MvELSEIF EXPR = "{ l.field_id EQ 'precalcprices_variants' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( g.StandardScheduledTasks_PrecalcPrices_CalculateVariantPrices, 'StandardScheduledTasks_PrecalcPrices_CalculateVariantPrices', '1', 'Calculate Variant Prices' ) }">
	<MvELSEIF EXPR = "{ l.field_id EQ 'deletecachedproductlists_which' }">
		<select name="StandardScheduledTasks_DeleteCachedProductLists_Which">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'all',		g.StandardScheduledTasks_DeleteCachedProductLists_Which, 'All Cached Product Lists' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'expired',	g.StandardScheduledTasks_DeleteCachedProductLists_Which, 'Expired Cached Product Lists' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'logs' }">
		<label>
			Delete logs older than <input type="text" size="5" name="StandardScheduledTasks_Logs_RetainDays" value="{ encodeentities( g.StandardScheduledTasks_Logs_RetainDays ) }"> Day(s) (0 = Delete all logs)
		</label>
	<MvELSEIF EXPR = "{ l.field_id EQ 'rebuildcollections' }">
		<label>
			<input type="text" size="20" name="StandardScheduledTasks_RebuildCollections_RebuildKey" value="{ encodeentities( g.StandardScheduledTasks_RebuildCollections_RebuildKey ) }">
		</label>
	<MvELSEIF EXPR = "{ l.field_id EQ 'optimize_tables' }">
		<br />
		<b>Optimizing tables may impact site performance and availability while the scheduled task is running</b>
	<MvELSEIF EXPR = "{ l.field_id EQ 'aisearchindex_max_proc_min' }">
		<label>
			<input type="text" size="5" name="StandardScheduledTasks_AISearchIndex_MaxProcessingMinutes" value="{ encodeentities( g.StandardScheduledTasks_AISearchIndex_MaxProcessingMinutes ) }"> minute(s) (0 = no limit)
		</label>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Validate" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation EQ 'feed' }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_Feed"									VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.StandardScheduledTasks_Feed ) }">

		<MvIF EXPR = "{ ISNULL g.StandardScheduledTasks_Feed }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_Feed', 'Please specify a feed' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_FDS_DB ].Feed_Load_Code( g.StandardScheduledTasks_Feed, l.feed ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_Feed', 'Feed \'' $ g.StandardScheduledTasks_Feed $ '\' does not exist' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'import' }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_Import_ID"								VALUE = "{ int( g.StandardScheduledTasks_Import_ID ) }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_Import_Filename"							VALUE = "{ trim( g.StandardScheduledTasks_Import_Filename ) }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_Import_Delete"							VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.StandardScheduledTasks_Import_Delete ) }">

		<MvIF EXPR = "{ NOT g.StandardScheduledTasks_Import_ID }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_Import_ID', 'Please select a configured import' ) }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL g.StandardScheduledTasks_Import_Filename }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_Import_Filename', 'Please specify a file name' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'precalcprices' }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_Now"						VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.StandardScheduledTasks_PrecalcPrices_Now ) }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_Future"					VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.StandardScheduledTasks_PrecalcPrices_Future ) }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_FutureHours"				VALUE = "{ trim( g.StandardScheduledTasks_PrecalcPrices_FutureHours ) }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes"		VALUE = "{ trim( g.StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes ) }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_PrecalcPrices_CalculateVariantPrices"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.StandardScheduledTasks_PrecalcPrices_CalculateVariantPrices ) }">

		<MvIF EXPR = "{ NOT g.StandardScheduledTasks_PrecalcPrices_Now AND
						NOT g.StandardScheduledTasks_PrecalcPrices_Future }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.module_Admin ].FieldError( '', '', 'Please select at least one set of discounts to calculate' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Range_Required( g.StandardScheduledTasks_PrecalcPrices_FutureHours, 1, 999999999 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_PrecalcPrices_FutureHours', g.Validation_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes', g.Validation_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'deletecachedproductlists' }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_DeleteCachedProductLists_Which"			VALUE = "{ trim( g.StandardScheduledTasks_DeleteCachedProductLists_Which ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Value_In_List( g.StandardScheduledTasks_DeleteCachedProductLists_Which, 'all,expired' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_DeleteCachedProductLists_Which', 'Select the cached product lists to delete' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'logs' }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_Logs_RetainDays" VALUE = "{ trim( g.StandardScheduledTasks_Logs_RetainDays ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.StandardScheduledTasks_Logs_RetainDays ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_Logs_RetainDays', g.Validation_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'rebuildcollections' }">
		<MvASSIGN NAME = "g.StandardScheduledTasks_RebuildCollections_RebuildKey" VALUE = "{ trim( g.StandardScheduledTasks_RebuildCollections_RebuildKey ) }">

		<MvIF EXPR = "{ ISNULL g.StandardScheduledTasks_RebuildCollections_RebuildKey }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_RebuildCollections_RebuildKey', 'Please specify a Rebuild Key' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'aisearchindex' }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.StandardScheduledTasks_AISearchIndex_MaxProcessingMinutes ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'StandardScheduledTasks_AISearchIndex_MaxProcessingMinutes', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Update" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation EQ 'feed' }">
		<MvASSIGN NAME = "l.task:config:feed"				VALUE = "{ g.StandardScheduledTasks_Feed }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'import' }">
		<MvASSIGN NAME = "l.task:config:import_id"			VALUE = "{ g.StandardScheduledTasks_Import_ID }">
		<MvASSIGN NAME = "l.task:config:import_filename"	VALUE = "{ g.StandardScheduledTasks_Import_Filename }">
		<MvASSIGN NAME = "l.task:config:import_delete"		VALUE = "{ g.StandardScheduledTasks_Import_Delete }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'precalcprices' }">
		<MvASSIGN NAME = "l.task:config:now"				VALUE = "{ g.StandardScheduledTasks_PrecalcPrices_Now }">
		<MvASSIGN NAME = "l.task:config:future"				VALUE = "{ g.StandardScheduledTasks_PrecalcPrices_Future }">
		<MvASSIGN NAME = "l.task:config:future_hours"		VALUE = "{ g.StandardScheduledTasks_PrecalcPrices_FutureHours }">
		<MvASSIGN NAME = "l.task:config:max_proc_min"		VALUE = "{ g.StandardScheduledTasks_PrecalcPrices_MaxProcessingMinutes }">
		<MvASSIGN NAME = "l.task:config:variants"			VALUE = "{ g.StandardScheduledTasks_PrecalcPrices_CalculateVariantPrices }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'deletecachedproductlists' }">
		<MvASSIGN NAME = "l.task:config:which"				VALUE = "{ g.StandardScheduledTasks_DeleteCachedProductLists_Which }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'logs' }">
		<MvASSIGN NAME = "l.task:config:retain_days"		VALUE = "{ g.StandardScheduledTasks_Logs_RetainDays }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'rebuildcollections' }">
		<MvASSIGN NAME = "l.task:config:rebuildkey"			VALUE = "{ g.StandardScheduledTasks_RebuildCollections_RebuildKey }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'aisearchindex' }">
		<MvASSIGN NAME = "l.task:config:max_proc_min"		VALUE = "{ g.StandardScheduledTasks_AISearchIndex_MaxProcessingMinutes }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Delete" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation EQ 'module_cleanup' }">				<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_ModuleCleanup( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'baskets' }">					<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_DeleteExpiredBaskets( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'feed' }">						<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_RunFeed( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'subscriptions' }">				<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_ProcessSubscriptions( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'import' }">					<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_Import( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'precalcprices' }">				<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_PrecalculatePrices( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'deletecachedproductlists' }">	<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_DeleteCachedProductLists( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'logs' }">						<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_ClearLogs( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'dashboardreports' }">			<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_DashboardReports( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'deletemivapaytokens' }">		<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_DeleteMivaPayTokens( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'pricegroup_validity' }">		<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_PriceGroupValidityNotifications( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'rebuildcollections' }">		<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_RebuildCollections( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'searchlog' }">					<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_SearchLogMaintenance( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'optimize_tables' }">			<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_OptimizeTables( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'analyze_tables' }">			<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_AnalyzeTables( l.task ) }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'aisearchindex' }">				<MvFUNCTIONRETURN VALUE = "{ StandardScheduledTasks_AISearchIndex( l.task ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00001', 'Unsupported operation' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Provision_Settings" PARAMETERS = "module var, task var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation EQ 'feed' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 'O', l.provide_xml, 'Feed', l.task:config:feed ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_FDS_DB ].Feed_Load_Code( l.task:config:feed, l.feed ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Feed \'' $ l.task:config:feed $ '\' does not exist' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'import' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'ImportDescription', l.import_description )					OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Filename', l.task:config:import_filename )					OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'DeleteFileAfterImport', l.task:config:import_delete ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_IMP_DB ].Import_Load_Description( l.import_description, l.import ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Import \"' $ l.import_description $ '\" not found' ) }">
		</MvIF>
			
		<MvASSIGN NAME = "l.task:config:import_id" VALUE = "{ l.import:id }">
	<MvELSEIF EXPR = "{ l.task:operation EQ 'precalcprices' }">
		<MvASSIGN NAME = "l.task:config:now"			VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Now' ) }">
		<MvASSIGN NAME = "l.task:config:future"			VALUE = 0>
		<MvASSIGN NAME = "l.task:config:future_hours"	VALUE = 24>
		<MvASSIGN NAME = "l.task:config:max_proc_min"	VALUE = 0>
		<MvASSIGN NAME = "l.task:config:variants"		VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer( 'O:nonneg',	l.provide_xml, 'MaxProcessingMinutes',		l.task:config:max_proc_min ) OR
						NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O',			l.provide_xml, 'CalculateVariantPrices',	l.task:config:variants ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Future' ) }">
			<MvASSIGN NAME = "l.task:config:future"		VALUE = 1>

			<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Attribute_Exists( l.provide_xml:tags:Future[ 1 ], 'hours' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Number( l.provide_xml:tags:Future[ 1 ], 'hours', l.task:config:future_hours, 10, 0 ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Range_Required( l.task:config:future_hours, 1, 999999999 ) }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:tags:Future[ 1 ], 'Invalid value for hours: ' $ g.Validation_Message ) }">
				</MvIF>
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'deletecachedproductlists' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'R', l.provide_xml, 'DeleteCacheEntries', l.task:config:which, 'All,Expired', 'all,expired' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'logs' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer( 'O:nonneg', l.provide_xml, 'DeleteLogsOlderThan', l.task:config:retain_days ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'rebuildcollections' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'RebuildKey', l.task:config:rebuildkey ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.task:operation EQ 'aisearchindex' }">
		<MvASSIGN NAME = "l.task:config:max_proc_min" VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer( 'O:nonneg', l.provide_xml, 'MaxProcessingMinutes', l.task:config:max_proc_min ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "StandardScheduledTasks_ModuleCleanup" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'cleanup_store', l.modules ) }">
        <MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'I', 'Cleanup for module \'' $ l.module:name $ '\' started' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].Module_Cleanup_Store( l.module ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

        <MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'I', 'Cleanup for module \'' $ l.module:name $ '\' completed' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_DeleteExpiredBaskets" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventorySettings_Load_Cached( l.inventorysettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.time" VALUE = "{ s.dyn_time_t - ( g.Store:baskexp * 60 ) }">

	<MvIF EXPR = "{ l.inventorysettings:mode EQ 'basket' }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_InventoryAdjust_ProductList( l.time ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_AFF_DB ].AffiliateSession_Delete_All_OlderThan( l.time ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Delete_All_OlderThan( l.time ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'cleanup_store', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 10.10 }">
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].Module_Cleanup_Baskets( l.module ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_ProcessSubscriptions" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.subscription_group" ARRAY = "l.subscription_groups" COUNT = "{ [ g.Module_Feature_SUB_DB ].SubscriptionGroupList_Load_Pending( s.dyn_time_t, l.subscription_groups ) }">
		<MvASSIGN NAME = "l.subscription_count"	VALUE = "{ miva_array_filter( l.subscription_group:subscriptions, 1, l.subscription, 'NOT l.task:state:exceptions[ l.subscription:id ]', l.subscriptions ) }">
		<MvIF EXPR = "{ l.subscription_count EQ 0 }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].SubscriptionList_CheckInventory( l.subscriptions, l.subscription_count, l.instock_subscriptions, l.instock_subscription_count, l.outofstock_subscriptions, l.outofstocksubscription_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SUB_UT ].SubscriptionList_ProcessOrder( l.instock_subscriptions, l.instock_subscription_count, l.order ) }">
			<MvFOREACH ITERATOR = "l.instock_subscription" ARRAY = "l.instock_subscriptions" COUNT = "{ l.instock_subscription_count }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'I', 'Order #' $ l.order:id $ ' created for subscription ' $ l.instock_subscription:id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvFOREACH>
		<MvELSE>
			<MvFOREACH ITERATOR = "l.instock_subscription" ARRAY = "l.instock_subscriptions" COUNT = "{ l.instock_subscription_count }">
				<MvASSIGN NAME = "l.task:state:exceptions" INDEX = "{ l.instock_subscription:id }" VALUE = 1>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'E', 'Subscription ' $ l.instock_subscription:id $ ': ' $ g.Error_Code $ ': ' $ g.Error_Message ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvFOREACH>
		</MvIF>

		<MvIF EXPR = "{ l.outofstocksubscription_count }">
			<MvFOREACH ITERATOR = "l.outofstock_subscription" ARRAY = "l.outofstock_subscriptions" COUNT = "{ l.outofstocksubscription_count }">
				<MvASSIGN NAME = "l.task:state:exceptions" INDEX = "{ l.outofstock_subscription:id }" VALUE = 1>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'E', 'Subscription ' $ l.outofstock_subscription:id $ ': ' $ l.outofstock_subscription:message ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvFOREACH>

			<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].ModuleList_Load_Features( 'not_subscript', l.modules ) }">
				<MvIF EXPR = "{ l.module:api_ver GE 10.05 }">
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Subscriptions_OutOfStock( l.module, l.outofstock_subscriptions, l.outofstocksubscription_count ) }">
				</MvIF>
			</MvFOREACH>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_RunFeed" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_FDS_DB ].Feed_Load_Code( l.task:config:feed, l.feed ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00002', 'Failed to load feed' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_FDS_UT ].Feed_Process( l.feed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_Import" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.task:state }">
		<MvASSIGN NAME = "l.task:state:import_session"		VALUE = "">
		<MvASSIGN NAME = "l.task:state:import_filename"		VALUE = "{ l.task:config:import_filename }">
	</MvIF>

	<MvIF EXPR = "{ NOT fexists( l.task:state:import_filename ) }">
		<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'W', 'File \'' $ l.task:state:import_filename $ '\' not found.' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_IMP_DB ].Import_Load_ID( l.task:config:import_id, l.import ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00013', 'Failed to load import ID ' $ l.task:config:import_id ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_ID( l.import:module_id, l.module ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00014', 'Failed to load import module ID ' $ l.import:module_id ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT StandardScheduledTasks_Import_Validate_PersistentCapability( l.module, l.capabilities ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.task:state:import_session }">
		<MvASSIGN NAME = "l.session"						VALUE = "{ [ g.Module_Feature_IMP_UT ].Import_Session_Deserialize( l.task:state:import_session ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.task:state:import_filename"		VALUE = "{ 'stdschtasks-import-' $ int( l.task:id ) $ '-' $ MakeSessionID() }">

		<MvIF EXPR = "{ NOT fcopy( l.task:config:import_filename, l.task:state:import_filename ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00015', 'Failed to copy \'' $ l.task:config:import_filename $ '\' to \'' $ l.task:state:import_filename $ '\': ' $ file_last_error() ) }">
		</MvIF>

		<MvASSIGN NAME = "l.session"						VALUE = "">
		<MvASSIGN NAME = "l.session:session_id"				VALUE = "{ MakeSessionID() }">
		<MvASSIGN NAME = "l.session:file"					VALUE = "{ l.task:state:import_filename }">
		<MvASSIGN NAME = "l.session:import"					VALUE = "{ l.import }">
		<MvASSIGN NAME = "l.session:module"					VALUE = "{ l.module }">
		<MvASSIGN NAME = "l.session:capabilities"			VALUE = "{ l.capabilities }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_IMP_UT ].Import_Session_Initialize( l.session ) }">
			<MvASSIGN NAME = "l.null"						VALUE = "{ fdelete( l.task:state:import_filename ) }">

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.task:config:import_delete }">
			<MvIF EXPR = "{ fdelete( l.task:config:import_filename ) }">
				<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'I', 'File \'' $ l.task:config:import_filename $ '\' deleted' ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'W', 'File \'' $ l.task:config:import_filename $ '\' failed to be deleted' ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvWHILE EXPR = "{ 1 }">
		<MvASSIGN NAME = "l.result"							VALUE = "{ [ g.Module_Feature_IMP_UT ].Import_Session_Execute( l.session ) }">

		<MvIF EXPR = "{ l.result EQ 0 }">
			<MvASSIGN NAME = "l.return_status"				VALUE = 0>

			<MvWHILESTOP>
		<MvELSEIF EXPR = "{ l.result EQ 1 }">
			<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Module_Feature_IMP_UT ].Import_Session_Cleanup( l.session ) }">
			<MvASSIGN NAME = "l.return_status"				VALUE = 1>

			<MvWHILESTOP>
		<MvELSEIF EXPR = "{ l.result EQ 2 }">
			<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
				<MvCOMMENT>
				|
				|	Reload required.
				|
				</MvCOMMENT>

				<MvASSIGN NAME = "l.task:state:import_session"	VALUE = "{ [ g.Module_Feature_IMP_UT ].Import_Session_Serialize( l.session ) }">
				<MvASSIGN NAME = "l.return_status"				VALUE = -1>

				<MvWHILESTOP>
			</MvIF>
		<MvELSEIF EXPR = "{ l.result EQ 3 }">
			<MvFOREACH ITERATOR = "l.message" ARRAY = "l.messages" COUNT = "{ [ g.Module_Feature_IMP_UT ].Import_Session_MessageQueue_Flush( l.session, l.messages ) }">
				<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'I', 'Import Line ' $ l.message:lineno $ ': ' $ l.message:message ) }">
			</MvFOREACH>
		<MvELSEIF EXPR = "{ l.result EQ 4 }">
			<MvASSIGN NAME = "l.pct_display"				VALUE = "{ [ g.Module_Feature_IMP_UT ].Import_Session_PercentComplete( l.session ) ROUND 1 }">

			<MvIF EXPR = "{ l.task:state:pct_done NE l.pct_display }">
				<MvASSIGN NAME = "l.task:state:pct_done"	VALUE = "{ l.pct_display }">
				<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'I', 'Import ' $ l.pct_display $ '% Complete' ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.result EQ 5 }">
			<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'I', 'Import Cancelled' ) }">
			<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Module_Feature_IMP_UT ].Import_Session_Cleanup( l.session ) }">
			<MvASSIGN NAME = "l.return_status"				VALUE = 1>

			<MvWHILESTOP>
		<MvELSE>
			<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00016', 'Import returned unknown status: ' $ l.result ) }">
			<MvASSIGN NAME = "l.return_status"				VALUE = 0>

			<MvWHILESTOP>
		</MvIF>
	</MvWHILE>

	<MvIF EXPR = "{ l.return_status GE 0 }">
		<MvASSIGN NAME = "l.null"							VALUE = "{ fdelete( l.task:state:import_filename ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.return_status }">
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_Import_Validate_PersistentCapability" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.module:feature_hash:import }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00017', 'Module \'' $ l.module:name $ '\' does not implement the import feature' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.module:api_ver LT 5.70 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00018', 'Module \'' $ l.module:name $ '\' does not support saved import settings' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].ImportModule_Capabilities( l.module, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:persistent }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00019', 'Module \'' $ l.module:name $ '\' does not support saved import settings' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.result"						VALUE = 1>

	<MvIF EXPR = "{ ISNULL l.task:state:start_time }">
		<MvASSIGN NAME = "l.task:state:start_time"	VALUE = "{ s.dyn_time_t }">
		<MvASSIGN NAME = "l.task:state:future_time"	VALUE = "{ l.task:state:start_time + ( l.task:config:future_hours * 3600 ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result GT 0 }">		<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_Mark_Unused( l.task ) }">																		</MvIF>
	
	<MvIF EXPR = "{ l.task:config:now }">
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_AllShoppers( l.task, l.task:state:start_time, l.task:state:new:all ) }">							</MvIF>
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_AllLoggedInCustomers( l.task, l.task:state:start_time, l.task:state:state:new:loggedin ) }">		</MvIF>
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_BusinessAccounts( l.task, l.task:state:start_time, l.task:state:new:businessaccounts ) }">		</MvIF>
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_Customers( l.task, l.task:state:start_time, l.task:state:new:customers  ) }">					</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.task:config:future }">
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_AllShoppers( l.task, l.task:state:future_time, l.task:state:future:all ) }">						</MvIF>
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_AllLoggedInCustomers( l.task, l.task:state:future_time, l.task:state:state:future:loggedin ) }">	</MvIF>
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_BusinessAccounts( l.task, l.task:state:future_time, l.task:state:future:businessaccounts ) }">	</MvIF>
		<MvIF EXPR = "{ l.result GT 0 }">	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_Customers( l.task, l.task:state:future_time, l.task:state:future:customers  ) }">				</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.result GT 0 }">		<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_DiscountSignature_Delete_Unused( l.task ) }">																		</MvIF>
	<MvIF EXPR = "{ l.result GT 0 }">		<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_Process( l.task ) }">																								</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_DiscountSignature_Mark_Unused" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:state:completed:mark_unused }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'DiscountSignatures SET inuse = 0' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.task:state:completed:mark_unused"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_DiscountSignature_AllShoppers" PARAMETERS = "task var, asof, state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.state:completed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.all_count"			VALUE = "{ [ g.Module_Feature_PGR_UT ].ResolvedPriceGroupAndModuleList_Load_Customer_AsOf( 0, l.asof, l.all_pricegroups ) }">
	<MvIF EXPR = "{ l.all_count GT 0 }">
		<MvASSIGN NAME = "l.filtered_count" VALUE = "{ StandardScheduledTasks_FilterPriceGroups( l.all_pricegroups, l.all_count, l.filtered_pricegroups ) }">

		<MvIF EXPR = "{ l.filtered_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].PriceGroupList_Register_Signature( l.filtered_pricegroups, l.filtered_count, l.signature ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.state:completed"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_DiscountSignature_AllLoggedInCustomers" PARAMETERS = "task var, asof, state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.state:completed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.loggedin_count"		VALUE = "{ [ g.Module_Feature_PGR_UT ].ResolvedPriceGroupAndModuleList_Load_AllLoggedInCustomers_AsOf( l.asof, l.loggedin_pricegroups ) }">
	<MvIF EXPR = "{ l.loggedin_count GT 0 }">
		<MvASSIGN NAME = "l.filtered_count" VALUE = "{ StandardScheduledTasks_FilterPriceGroups( l.loggedin_pricegroups, l.loggedin_count, l.filtered_pricegroups ) }">

		<MvIF EXPR = "{ l.filtered_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].PriceGroupList_Register_Signature( l.filtered_pricegroups, l.filtered_count, l.signature ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.state:completed"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_DiscountSignature_BusinessAccounts" PARAMETERS = "task var, asof, state var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.state:completed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.state:last_id }">
		<MvASSIGN NAME = "l.state:last_id"		VALUE = 0>
	</MvIF>

	<MvWHILE EXPR = "{ 1 }">
		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "BusinessAccounts"
					QUERY	= "{ 'SELECT id FROM ' $ g.Store_Table_Prefix $ 'BusinessAccounts WHERE pgrpcount > 0 AND id > ? ORDER BY id' }"
					FIELDS	= "l.state:last_id">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00004', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ BusinessAccounts.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "BusinessAccounts">
			<MvWHILESTOP>
		</MvIF>

		<MvWHILE EXPR = "{ NOT BusinessAccounts.d.EOF }">
			<MvASSIGN NAME = "l.state:last_id"	VALUE = "{ BusinessAccounts.d.id }">
			<MvASSIGN NAME = "l.account_count"	VALUE = "{ [ g.Module_Feature_PGR_UT ].ResolvedPriceGroupAndModuleList_Load_BusinessAccount_AsOf( BusinessAccounts.d.id, l.asof, l.account_pricegroups ) }">

			<MvIF EXPR = "{ l.account_count GT 0 }">
				<MvASSIGN NAME = "l.filtered_count" VALUE = "{ StandardScheduledTasks_FilterPriceGroups( l.account_pricegroups, l.account_count, l.filtered_pricegroups ) }">

				<MvIF EXPR = "{ l.filtered_count }">
					<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].PriceGroupList_Register_Signature( l.filtered_pricegroups, l.filtered_count, l.signature ) }">
						<MvCLOSEVIEW NAME = "Merchant" VIEW = "BusinessAccounts">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "BusinessAccounts">
				<MvFUNCTIONRETURN VALUE = -1>
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "BusinessAccounts" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "BusinessAccounts">

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvWHILE>

	<MvASSIGN NAME = "l.state:completed"		VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_DiscountSignature_Customers" PARAMETERS = "task var, asof, state var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.state:completed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.state:last_id }">
		<MvASSIGN NAME = "l.state:last_id"		VALUE = 0>
	</MvIF>

	<MvWHILE EXPR = "{ 1 }">
		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "Customers"
					QUERY	= "{ 'SELECT id FROM ' $ g.Store_Table_Prefix $ 'Customers WHERE pgrpcount > 0 AND id > ? ORDER BY id' }"
					FIELDS	= "l.state:last_id">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00006', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ Customers.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Customers">
			<MvWHILESTOP>
		</MvIF>

		<MvWHILE EXPR = "{ NOT Customers.d.EOF }">
			<MvASSIGN NAME = "l.state:last_id"	VALUE = "{ Customers.d.id }">
			<MvASSIGN NAME = "l.cust_count"		VALUE = "{ [ g.Module_Feature_PGR_UT ].ResolvedPriceGroupAndModuleList_Load_Customer_AsOf( Customers.d.id, l.asof, l.cust_pricegroups ) }">

			<MvIF EXPR = "{ l.cust_count GT 0 }">
				<MvASSIGN NAME = "l.filtered_count" VALUE = "{ StandardScheduledTasks_FilterPriceGroups( l.cust_pricegroups, l.cust_count, l.filtered_pricegroups ) }">

				<MvIF EXPR = "{ l.filtered_count }">
					<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].PriceGroupList_Register_Signature( l.filtered_pricegroups, l.filtered_count, l.signature ) }">
						<MvCLOSEVIEW NAME = "Merchant" VIEW = "Customers">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "Customers">
				<MvFUNCTIONRETURN VALUE = -1>
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "Customers" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Customers">

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvWHILE>

	<MvASSIGN NAME = "l.state:completed"		VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_DiscountSignature_Delete_Unused" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:state:completed:delete_unused }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.discountsignature" ARRAY = "l.discountsignatures" COUNT = "{ [ g.Module_Feature_PGR_DB ].DiscountSignatureList_Load_Unused( l.discountsignatures ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountSignature_Delete( l.discountsignature ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.task:state:completed:delete_unused"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_Process" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.task:state:processing_end_time AND l.task:config:max_proc_min GT 0 }">
		<MvASSIGN NAME = "l.task:state:processing_end_time" VALUE = "{ s.dyn_time_t + ( int( l.task:config:max_proc_min ) * 60 ) }">
	</MvIF>

	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_PrecalculatePrices_Process_Products( l.task ) }">

	<MvIF EXPR = "{ l.result GT 0 }">
		<MvASSIGN NAME = "l.result"	VALUE = "{ StandardScheduledTasks_PrecalculatePrices_Process_Variants( l.task ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_Process_Products" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:state:completed:prices }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.task:state:signature }">
		<MvASSIGN NAME = "l.task:state:signature:previous"					VALUE = 0>
		<MvASSIGN NAME = "l.task:state:signature:current"					VALUE = 0>
	</MvIF>

	<MvWHILE EXPR = "{ 1 }">
		<MvCOMMENT>
		|
		| Load the next discount signature for processing
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.task:state:signature:current EQ 0 }">
			<MvASSIGN NAME = "g.Session:cache:stdschtasks:dscsig_id"		VALUE = "{ l.task:state:signature:previous }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'DiscountSignatures',
																					 'SELECT id FROM ' $ g.Store_Table_Prefix $ 'DiscountSignatures WHERE id > ? AND inuse = 1 ORDER BY id',
																					 'g.Session:cache:stdschtasks:dscsig_id',
																					 0, 1 ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00010', g.MvOPENVIEW_Error ) }">
			</MvIF>

			<MvIF EXPR = "{ DiscountSignatures.d.EOF }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "DiscountSignatures">
				<MvWHILESTOP>
			</MvIF>

			<MvASSIGN NAME = "l.task:state:signature:current"				VALUE = "{ DiscountSignatures.d.id }">
			<MvASSIGN NAME = "l.discount_state"								VALUE = "">

			<MvCLOSEVIEW NAME = "Merchant" VIEW = "DiscountSignatures">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.discount_state }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_CreateFromDiscountSignature( l.task:state:signature:current, l.discount_state ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvCOMMENT>
		|
		| Iterate over unpriced products for the current discount signature
		|
		</MvCOMMENT>	

		<MvASSIGN NAME = "g.Session:cache:stdschtasks:dscsig_id"			VALUE = "{ l.task:state:signature:current }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'UnpricedProducts',
																				 'SELECT
																					p.*
																				  FROM
																					' $ g.Store_Table_Prefix $ 'Products p
																					LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'DiscountPrices dp ON dp.dscsig_id = ? AND dp.product_id = p.id
																				  WHERE
																					p.active	= 1		AND
																					dp.price IS NULL',
																				 'g.Session:cache:stdschtasks:dscsig_id',
																				 0, 1000 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00008', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ UnpricedProducts.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedProducts">

			<MvASSIGN NAME = "l.task:state:signature:previous"				VALUE = "{ l.task:state:signature:current }">
			<MvASSIGN NAME = "l.task:state:signature:current"				VALUE = 0>
		<MvELSE>
			<MvWHILE EXPR = "{ NOT UnpricedProducts.d.EOF }">
				<MvASSIGN NAME = "l.product:id"								VALUE = "{ UnpricedProducts.d.id }">
				<MvASSIGN NAME = "l.product:catcount"						VALUE = "{ UnpricedProducts.d.catcount }">
				<MvASSIGN NAME = "l.product:cancat_id"						VALUE = "{ UnpricedProducts.d.cancat_id }">
				<MvASSIGN NAME = "l.product:agrpcount"						VALUE = "{ UnpricedProducts.d.agrpcount }">
				<MvASSIGN NAME = "l.product:pgrpcount"						VALUE = "{ UnpricedProducts.d.pgrpcount }">
				<MvASSIGN NAME = "l.product:disp_order"						VALUE = "{ UnpricedProducts.d.disp_order }">
				<MvASSIGN NAME = "l.product:page_code"						VALUE = "{ UnpricedProducts.d.page_code }">
				<MvASSIGN NAME = "l.product:code"							VALUE = "{ UnpricedProducts.d.code }">
				<MvASSIGN NAME = "l.product:sku"							VALUE = "{ UnpricedProducts.d.sku }">
				<MvASSIGN NAME = "l.product:name"							VALUE = "{ UnpricedProducts.d.name }">
				<MvASSIGN NAME = "l.product:page_title"						VALUE = "{ UnpricedProducts.d.page_title }">
				<MvASSIGN NAME = "l.product:thumbnail"						VALUE = "{ UnpricedProducts.d.thumbnail }">
				<MvASSIGN NAME = "l.product:image"							VALUE = "{ UnpricedProducts.d.image }">
				<MvASSIGN NAME = "l.product:price"							VALUE = "{ UnpricedProducts.d.price }">
				<MvASSIGN NAME = "l.product:cost"							VALUE = "{ UnpricedProducts.d.cost }">
				<MvASSIGN NAME = "l.product:descrip"						VALUE = "{ UnpricedProducts.d.descrip }">
				<MvASSIGN NAME = "l.product:weight"							VALUE = "{ UnpricedProducts.d.weight }">
				<MvASSIGN NAME = "l.product:taxable"						VALUE = "{ UnpricedProducts.d.taxable }">
				<MvASSIGN NAME = "l.product:active"							VALUE = "{ UnpricedProducts.d.active }">
				<MvASSIGN NAME = "l.product:dt_created"						VALUE = "{ UnpricedProducts.d.dt_created }">
				<MvASSIGN NAME = "l.product:dt_updated"						VALUE = "{ UnpricedProducts.d.dt_updated }">

				<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Predict_Product_Price( l.discount_state, l.product, l.base_price, l.price ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedProducts">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountPrice_Insert( l.product:id, l.task:state:signature:current, l.base_price, l.price ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedProducts">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ StandardScheduledTasks_PrecalculatePrices_Process_TimeLimitReached( l.task ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedProducts">
					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>

				<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedProducts">
					<MvFUNCTIONRETURN VALUE = -1>
				</MvIF>

				<MvSKIP NAME = "Merchant" VIEW = "UnpricedProducts" ROWS = 1>
			</MvWHILE>

			<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedProducts">
		</MvIF>

		<MvIF EXPR = "{ StandardScheduledTasks_PrecalculatePrices_Process_TimeLimitReached( l.task ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvWHILE>

	<MvASSIGN NAME = "l.task:state:completed:prices"						VALUE = 1>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_Process_Variants" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.task:config:variants }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.task:state:completed:variant_prices }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.task:state:variant_signature }">
		<MvASSIGN NAME = "l.task:state:variant_signature:previous"			VALUE = 0>
		<MvASSIGN NAME = "l.task:state:variant_signature:current"			VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.query_limit"										VALUE = 1000>

	<MvWHILE EXPR = "{ 1 }">
		<MvCOMMENT>
		|
		| Load the next discount signature for processing
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.task:state:variant_signature:current EQ 0 }">
			<MvASSIGN NAME = "g.Session:cache:stdschtasks:dscsig_id"		VALUE = "{ l.task:state:variant_signature:previous }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'DiscountSignatures',
																					 'SELECT id FROM ' $ g.Store_Table_Prefix $ 'DiscountSignatures WHERE id > ? AND inuse = 1 ORDER BY id',
																					 'g.Session:cache:stdschtasks:dscsig_id',
																					 0, 1 ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00020', g.MvOPENVIEW_Error ) }">
			</MvIF>

			<MvIF EXPR = "{ DiscountSignatures.d.EOF }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "DiscountSignatures">
				<MvWHILESTOP>
			</MvIF>

			<MvASSIGN NAME = "l.task:state:variant_signature:current"		VALUE = "{ DiscountSignatures.d.id }">
			<MvASSIGN NAME = "l.discount_state"								VALUE = "">

			<MvCLOSEVIEW NAME = "Merchant" VIEW = "DiscountSignatures">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.discount_state }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_CreateFromDiscountSignature( l.task:state:variant_signature:current, l.discount_state ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvCOMMENT>
		|
		| Iterate over unpriced products for the current discount signature
		|
		</MvCOMMENT>	

		<MvASSIGN NAME = "g.Session:cache:stdschtasks:dscsig_id"			VALUE = "{ l.task:state:variant_signature:current }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'UnpricedVariants',
																				 'SELECT
																					pv.product_id,
																					pv.variant_id,
																					pv.dimensions
																				  FROM
																					' $ g.Store_Table_Prefix $ 'ProductVariants pv
																					LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'DiscountVariantPrices dvp ON dvp.dscsig_id = ? AND dvp.product_id = pv.product_id AND dvp.variant_id = pv.variant_id
																				  WHERE
																					dvp.price IS NULL
																				  ORDER BY
																					pv.product_id, pv.variant_id',
																				 'g.Session:cache:stdschtasks:dscsig_id',
																				 0, l.query_limit ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00021', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ UnpricedVariants.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariants">

			<MvASSIGN NAME = "l.task:state:variant_signature:previous"		VALUE = "{ l.task:state:variant_signature:current }">
			<MvASSIGN NAME = "l.task:state:variant_signature:current"		VALUE = 0>
		<MvELSE>
			<MvWHILE EXPR = "{ NOT UnpricedVariants.d.EOF }">
				<MvASSIGN NAME = "l.product"								VALUE = "">
				<MvASSIGN NAME = "l.options"								VALUE = "">
				<MvASSIGN NAME = "l.option_count"							VALUE = 0>

				<MvOPENVIEW NAME	= "Merchant"
							VIEW	= "UnpricedVariantData"
							QUERY	= "{ 'SELECT
											p.*,
											pv.option_id,
											a.id			AS attr_id,
											a.type			AS attr_type,
											a.price			AS attr_price,
											a.cost			AS attr_cost,
											a.weight		AS attr_weight,
											o.price			AS opt_price,
											o.cost			AS opt_cost,
											o.weight		AS opt_weight,
											ata.type		AS ata_type,
											ata.price		AS ata_price,
											ata.cost		AS ata_cost,
											ata.weight		AS ata_weight,
											ato.price		AS ato_price,
											ato.cost		AS ato_cost,
											ato.weight		AS ato_weight,
											pvp.method		AS pricing_method,
											pvp.price		AS pricing_price,
											pvp.cost		AS pricing_cost,
											pvp.weight		AS pricing_weight
										  FROM
											' $ g.Store_Table_Prefix $ 'ProductVariants pv
											LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Attributes a ON a.id = pv.attr_id
											LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'Options o ON o.id = pv.option_id
											LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'AttributeTemplateAttrs ata ON ata.id = pv.attmpat_id
											LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'AttributeTemplateOptions ato ON ato.id = pv.option_id
											LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductVariantPricing pvp ON pvp.product_id = pv.product_id AND pvp.variant_id = pv.variant_id,
											' $ g.Store_Table_Prefix $ 'Products p
										  WHERE
											pv.product_id	= ? AND
											pv.variant_id	= ? AND
											p.id			= pv.product_id
										  ORDER BY
											pv.product_id, pv.variant_id' }"
							FIELDS	= "UnpricedVariants.d.product_id, UnpricedVariants.d.variant_id">
				<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00022', g.MvOPENVIEW_Error ) }">
				</MvIF>

				<MvIF EXPR = "{ UnpricedVariantData.d.EOF }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariantData">
					<MvSKIP NAME = "Merchant" VIEW = "UnpricedVariants" ROWS = "{ UnpricedVariants.d.dimensions }">

					<MvWHILECONTINUE>
				</MvIF>

				<MvCOMMENT>
				|
				| Initialize Product Data from first record
				|
				</MvCOMMENT>

				<MvASSIGN NAME = "l.product"								VALUE = "">
				<MvASSIGN NAME = "l.product:id"								VALUE = "{ UnpricedVariantData.d.id }">
				<MvASSIGN NAME = "l.product:catcount"						VALUE = "{ UnpricedVariantData.d.catcount }">
				<MvASSIGN NAME = "l.product:cancat_id"						VALUE = "{ UnpricedVariantData.d.cancat_id }">
				<MvASSIGN NAME = "l.product:agrpcount"						VALUE = "{ UnpricedVariantData.d.agrpcount }">
				<MvASSIGN NAME = "l.product:pgrpcount"						VALUE = "{ UnpricedVariantData.d.pgrpcount }">
				<MvASSIGN NAME = "l.product:disp_order"						VALUE = "{ UnpricedVariantData.d.disp_order }">
				<MvASSIGN NAME = "l.product:page_code"						VALUE = "{ UnpricedVariantData.d.page_code }">
				<MvASSIGN NAME = "l.product:code"							VALUE = "{ UnpricedVariantData.d.code }">
				<MvASSIGN NAME = "l.product:sku"							VALUE = "{ UnpricedVariantData.d.sku }">
				<MvASSIGN NAME = "l.product:name"							VALUE = "{ UnpricedVariantData.d.name }">
				<MvASSIGN NAME = "l.product:page_title"						VALUE = "{ UnpricedVariantData.d.page_title }">
				<MvASSIGN NAME = "l.product:thumbnail"						VALUE = "{ UnpricedVariantData.d.thumbnail }">
				<MvASSIGN NAME = "l.product:image"							VALUE = "{ UnpricedVariantData.d.image }">
				<MvASSIGN NAME = "l.product:price"							VALUE = "{ UnpricedVariantData.d.price }">
				<MvASSIGN NAME = "l.product:cost"							VALUE = "{ UnpricedVariantData.d.cost }">
				<MvASSIGN NAME = "l.product:descrip"						VALUE = "{ UnpricedVariantData.d.descrip }">
				<MvASSIGN NAME = "l.product:weight"							VALUE = "{ UnpricedVariantData.d.weight }">
				<MvASSIGN NAME = "l.product:taxable"						VALUE = "{ UnpricedVariantData.d.taxable }">
				<MvASSIGN NAME = "l.product:active"							VALUE = "{ UnpricedVariantData.d.active }">
				<MvASSIGN NAME = "l.product:dt_created"						VALUE = "{ UnpricedVariantData.d.dt_created }">
				<MvASSIGN NAME = "l.product:dt_updated"						VALUE = "{ UnpricedVariantData.d.dt_updated }">

				<MvCOMMENT>
				|
				| Custom implementation of Inventory_Adjust_VariantPricing to avoid
				| separate load of the ProductVariantPricing record
				|
				</MvCOMMENT>

				<MvASSIGN NAME = "l.attr_price_override"					VALUE = 0>

				<MvIF EXPR = "{ UnpricedVariantData.d.pricing_method EQ 1 }">		<MvCOMMENT> Use pricing specified here </MvCOMMENT>
					<MvASSIGN NAME = "l.attr_price_override"				VALUE = 1>

					<MvASSIGN NAME = "l.product:price"						VALUE = "{ UnpricedVariantData.d.pricing_price }">
					<MvASSIGN NAME = "l.product:cost"						VALUE = "{ UnpricedVariantData.d.pricing_cost }">
					<MvASSIGN NAME = "l.product:weight"						VALUE = "{ UnpricedVariantData.d.pricing_weight }">
				<MvELSEIF EXPR = "{ UnpricedVariantData.d.pricing_method EQ 2 }">	<MvCOMMENT> Sum of variant part price, cost, weight </MvCOMMENT>
					<MvASSIGN NAME = "l.attr_price_override"				VALUE = 1>

					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ProductVariant_Sum_Pricing( l.product:id, UnpricedVariants.d.variant_id,
																							l.product:price, l.product:cost, l.product:weight ) }">
						<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariantData">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvCOMMENT>
				|
				| Process attribute/option data
				|
				</MvCOMMENT>

				<MvASSIGN NAME = "l.options"								VALUE = "">
				<MvASSIGN NAME = "l.option_count"							VALUE = 0>

				<MvWHILE EXPR = "{ NOT UnpricedVariantData.d.EOF }">
					<MvCOMMENT>
					|
					| If attribute type is text/checkbox/memo and option_id is 0, we ignore the attribute
					|
					</MvCOMMENT>

					<MvIF EXPR = "{ UnpricedVariantData.d.option_id GT 0 }">	<MvASSIGN NAME = "l.include_option" VALUE = 1>
					<MvELSEIF EXPR = "{ UnpricedVariantData.d.attmpat_id }">	<MvASSIGN NAME = "l.include_option" VALUE = "{ ( UnpricedVariantData.d.ata_type EQ 'radio' ) OR ( UnpricedVariantData.d.ata_type EQ 'select' ) OR ( UnpricedVariantData.d.ata_type EQ 'swatch-select' ) }">
					<MvELSE>													<MvASSIGN NAME = "l.include_option" VALUE = "{ ( UnpricedVariantData.d.attr_type EQ 'radio' ) OR ( UnpricedVariantData.d.attr_type EQ 'select' ) OR ( UnpricedVariantData.d.attr_type EQ 'swatch-select' ) }">
					</MvIF>

					<MvIF EXPR = "{ l.include_option }">
						<MvASSIGN NAME = "l.option"							VALUE = "">
						<MvASSIGN NAME = "l.option:attr_id"					VALUE = "{ UnpricedVariantData.d.attr_id }">
						<MvASSIGN NAME = "l.option:attmpat_id"				VALUE = "{ UnpricedVariantData.d.attmpat_id }">
						<MvASSIGN NAME = "l.option:option_id"				VALUE = "{ UnpricedVariantData.d.option_id }">
						<MvASSIGN NAME = "l.option:price"					VALUE = 0.00>
						<MvASSIGN NAME = "l.option:cost"					VALUE = 0.00>
						<MvASSIGN NAME = "l.option:weight"					VALUE = 0.00>

						<MvIF EXPR = "{ NOT l.attr_price_override }">
							<MvIF EXPR = "{ UnpricedVariantData.d.attmpat_id }">
								<MvIF EXPR = "{ ( UnpricedVariantData.d.ata_type EQ 'checkbox' ) OR ( UnpricedVariantData.d.ata_type EQ 'text' ) OR ( UnpricedVariantData.d.ata_type EQ 'memo' ) }">
									<MvASSIGN NAME = "l.option:price"		VALUE = "{ UnpricedVariantData.d.ata_price }">
									<MvASSIGN NAME = "l.option:cost"		VALUE = "{ UnpricedVariantData.d.ata_cost }">
									<MvASSIGN NAME = "l.option:weight"		VALUE = "{ UnpricedVariantData.d.ata_weight }">
								<MvELSEIF EXPR = "{ ( UnpricedVariantData.d.ata_type EQ 'radio' ) OR ( UnpricedVariantData.d.ata_type EQ 'select' ) OR ( UnpricedVariantData.d.ata_type EQ 'swatch-select' ) }">
									<MvASSIGN NAME = "l.option:price"		VALUE = "{ UnpricedVariantData.d.ato_price }">
									<MvASSIGN NAME = "l.option:cost"		VALUE = "{ UnpricedVariantData.d.ato_cost }">
									<MvASSIGN NAME = "l.option:weight"		VALUE = "{ UnpricedVariantData.d.ato_weight }">
								</MvIF>
							<MvELSE>
								<MvIF EXPR = "{ ( UnpricedVariantData.d.attr_type EQ 'checkbox' ) OR ( UnpricedVariantData.d.attr_type EQ 'text' ) OR ( UnpricedVariantData.d.attr_type EQ 'memo' ) }">
									<MvASSIGN NAME = "l.option:price"		VALUE = "{ UnpricedVariantData.d.attr_price }">
									<MvASSIGN NAME = "l.option:cost"		VALUE = "{ UnpricedVariantData.d.attr_cost }">
									<MvASSIGN NAME = "l.option:weight"		VALUE = "{ UnpricedVariantData.d.attr_weight }">
								<MvELSEIF EXPR = "{ ( UnpricedVariantData.d.attr_type EQ 'radio' ) OR ( UnpricedVariantData.d.attr_type EQ 'select' ) OR ( UnpricedVariantData.d.attr_type EQ 'swatch-select' ) }">
									<MvASSIGN NAME = "l.option:price"		VALUE = "{ UnpricedVariantData.d.opt_price }">
									<MvASSIGN NAME = "l.option:cost"		VALUE = "{ UnpricedVariantData.d.opt_cost }">
									<MvASSIGN NAME = "l.option:weight"		VALUE = "{ UnpricedVariantData.d.opt_weight }">
								</MvIF>
							</MvIF>
						</MvIF>

						<MvASSIGN NAME = "l.option_count"					VALUE = "{ miva_array_insert_var( l.options, l.option, -1 ) }">
					</MvIF>

					<MvSKIP NAME = "Merchant" VIEW = "UnpricedVariantData" ROWS = 1>
				</MvWHILE>

				<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariantData">

				<MvCOMMENT>
				|
				| All variant data has been processed, calculate and insert the discounted variant price.
				|
				</MvCOMMENT>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Predict_Product_Price_WithProductSubscriptionTermAndOptions( l.discount_state, l.product, 0, UnpricedVariants.d.variant_id, 1, l.options, l.option_count, l.variant_base_price, l.variant_price ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariants">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountVariantPrice_Insert( l.product:id, UnpricedVariants.d.variant_id, l.task:state:variant_signature:current, l.variant_base_price, l.variant_price ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariants">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ StandardScheduledTasks_PrecalculatePrices_Process_TimeLimitReached( l.task ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariants">
					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>

				<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariants">
					<MvFUNCTIONRETURN VALUE = -1>
				</MvIF>

				<MvSKIP NAME = "Merchant" VIEW = "UnpricedVariants" ROWS = "{ UnpricedVariants.d.dimensions }">
			</MvWHILE>
		</MvIF>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "UnpricedVariants">

		<MvIF EXPR = "{ StandardScheduledTasks_PrecalculatePrices_Process_TimeLimitReached( l.task ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvWHILE>

	<MvASSIGN NAME = "l.task:state:completed:variant_prices" VALUE = 1>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PrecalculatePrices_Process_TimeLimitReached" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ISNULL l.task:state:processing_end_time AND s.dyn_time_t GT l.task:state:processing_end_time }">
		<MvASSIGN NAME = "l.task:state:completed:prices"			VALUE = 1>
		<MvASSIGN NAME = "l.task:state:completed:variant_prices"	VALUE = 1>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_DeleteCachedProductLists" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:config:which EQ 'all' }">	<MvASSIGN NAME = "l.cachedproductlist_count" VALUE = "{ [ g.Module_Library_DB ].CachedProductListList_Load_All( l.cachedproductlists ) }">
	<MvELSE>											<MvASSIGN NAME = "l.cachedproductlist_count" VALUE = "{ [ g.Module_Library_DB ].CachedProductListList_Load_OlderThan( s.dyn_time_t - ( g.Store:cache_exp * 60 ), l.cachedproductlists ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.cachedproductlist" ARRAY = "l.cachedproductlists" COUNT = "{ l.cachedproductlist_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].CachedProductList_Delete( l.cachedproductlist ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_ClearLogs" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.task:config:retain_days }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTaskLog_Delete_All() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.dtstamp" VALUE = "{ s.dyn_time_t - ( ( 60 * 60 * 24 ) * l.task:config:retain_days ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_DB ].ScheduledTaskLog_Delete_All_OlderThan( l.dtstamp ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-SST-00026', 'Scheduled task logs deleted' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_DashboardReports" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.report" ARRAY = "l.reports" COUNT = "{ [ g.Module_Feature_RPT_DB ].ReportList_Load_Display( l.reports ) }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( l.report:module_id, l.module ) }">
			<MvIF EXPR = "{ l.report:lastrun LE ( s.dyn_time_t - ( l.report:rinterval * 60 ) ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_RPT_UT ].Report_Run( l.report, l.module ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Log( l.task, 'E', 'Report \'' $ l.report:descrip $ '\' failed to run: ' $ g.Error_Code $ ': ' $ g.Error_Message ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_FilterPriceGroups" PARAMETERS = "pricegroups var, pricegroup_count var, filtered_pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.filtered_count"			VALUE = 0>
	<MvASSIGN NAME = "l.filtered_pricegroups"	VALUE = "">

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ l.pricegroup_count }">
		<MvASSIGN NAME = "l.capabilities"		VALUE = "">

		<MvIF EXPR = "{ l.pricegroup:module_id }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Capabilities( l.pricegroup:module, l.capabilities ) }">
		</MvIF>	

		<MvIF EXPR = "{ ISNULL l.capabilities:precalc OR l.capabilities:precalc EQ 'default' }">
			<MvASSIGN NAME = "l.filtered_count"	VALUE = "{ miva_array_insert_ref( l.filtered_pricegroups, l.pricegroup, -1 ) }">
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTIL-SST-00011', l.filtered_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_DeleteMivaPayTokens" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.paymentcard" ARRAY = "l.paymentcards" COUNT = "{ [ g.Module_Feature_PAY_DB ].OrderPaymentCardList_Load_Expired( l.paymentcards ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].OrderPaymentCard_Delete( l.paymentcard ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "MivaPayDeletedTokens"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'MivaPayDeletedTokens' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00012', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT MivaPayDeletedTokens.d.EOF }">
		<MvASSIGN NAME = "l.token" VALUE = "{ MivaPayDeletedTokens.d.token }">

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_PAY_UT ].MivaPay_PaymentCard_Delete_Token( l.token ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_PAY_DB ].MivaPayDeletedToken_Delete( l.token ) }">
		
		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "MivaPayDeletedTokens">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "MivaPayDeletedTokens" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "MivaPayDeletedTokens">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_PriceGroupValidityNotifications" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module_count" VALUE = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_pricegroup', l.modules ) }">

	<MvIF EXPR = "{ l.module_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Store the last_time_t in the config because it is used across executions
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ISNULL l.task:config:last_time_t }">
		<MvASSIGN NAME = "l.task:config:last_time_t" VALUE = "{ s.dyn_time_t }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_SCH_DB ].ScheduledTask_Update_Config( l.task ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.task:state:last_time_t }">
		<MvASSIGN NAME = "l.task:state:last_time_t"			VALUE = "{ l.task:config:last_time_t }">
		<MvASSIGN NAME = "l.task:state:now_time_t"			VALUE = "{ s.dyn_time_t }">
		<MvASSIGN NAME = "l.task:state:last_pricegroup_id"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'PriceGroups',
																			 'SELECT
																				*
																			  FROM ' $
																			  	g.Store_Table_Prefix $ 'PriceGroups
																			  WHERE
																			  	id > ? AND
																			  	(
																				  	(
																				  		(
																				  			dt_start <> 0	AND
																				  			dt_start > ?	AND
																				  			dt_start < ?
																				  		)
																				  		AND
																				  		(
																				  			dt_end = 0 OR
																				  			dt_end > ?
																				  		)
																				  	)
																				  	OR
																				  	(
																				  		(
																				  			dt_end <> 0	AND
																				  		  	dt_end > ?	AND
																				  		  	dt_end < ?
																				  		)
																				  		AND
																				  		(
																				  		  	dt_start = 0 OR
																				  		  	dt_start < ?
																				  		)
																				  	)
																				)
																			  ORDER BY
																			  	id',
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:last_pricegroup_id ) $ ',' $
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:last_time_t ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:now_time_t ) $ ',' $
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:now_time_t ) $ ',' $
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:last_time_t ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:now_time_t ) $ ',' $
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:last_time_t ),
																			 0, 1001 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00024', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ ( NOT PriceGroups.d.EOF ) AND ( l.count LT 1000 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroup_Read( l.pricegroup ) }">

		<MvASSIGN NAME = "l.count"							VALUE = "{ l.count + 1 }">
		<MvASSIGN NAME = "l.task:state:last_pricegroup_id"	VALUE = "{ l.pricegroup:id }">

		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ l.module_count }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_PriceGroup_Update( l.module, l.pricegroup ) }">
		</MvFOREACH>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvWHILESTOP>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
	</MvWHILE>

	<MvASSIGN NAME = "l.eof" VALUE = "{ PriceGroups.d.EOF }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">

	<MvIF EXPR = "{ NOT l.eof }">
		<MvFUNCTIONRETURN VALUE = -1>
	</MvIF>

	<MvASSIGN NAME = "l.task:config:last_time_t" VALUE = "{ l.task:state:now_time_t }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_SCH_DB ].ScheduledTask_Update_Config( l.task ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_RebuildCollections" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.start_time" VALUE = "{ s.dyn_time_t }">

	<MvIF EXPR = "{ ISNULL l.task:state:last_col_id }">
		<MvASSIGN NAME = "l.task:state:last_col_id" VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Collections"
				QUERY	= "{ 'SELECT 
								* 
							  FROM 
								' $ g.Store_Table_Prefix $ 'Collections 
							  WHERE 
								id			> ?	AND 
								lastrbld	< ?	AND 
								' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'rebuildkey' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ '
							  ORDER BY 
								id ASC' }"
				FIELDS	= "l.task:state:last_col_id, l.start_time, l.task:config:rebuildkey">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00027', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT Collections.d.EOF }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_COL_DB ].Collection_Read( l.collection ) }">

		<MvASSIGN NAME = "l.task:state:last_col_id" VALUE = "{ l.collection:id }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_UT ].Collection_Rebuild_Products( l.collection ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_DB ].Collection_Update_LastRebuild( l.collection ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "Collections" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_SearchLogMaintenance" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_SEA_DB ].SearchSettings_Load_Cached( l.searchsettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.logrtanon_dtstamp"	VALUE = "{ s.dyn_time_t - ( l.searchsettings:logrtanon * 60 * 60 * 24 ) }">
	<MvASSIGN NAME = "l.logrtcust_dtstamp"	VALUE = "{ s.dyn_time_t - ( l.searchsettings:logrtcust * 60 * 60 * 24 ) }">
	<MvASSIGN NAME = "l.logrtorder_dtstamp"	VALUE = "{ s.dyn_time_t - ( l.searchsettings:logrtorder * 60 * 60 * 24 ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SEA_DB ].SearchLogEntry_Delete_Anonymous_OlderThan( l.logrtanon_dtstamp )	OR
					NOT [ g.Module_Feature_SEA_DB ].SearchLogEntry_Delete_Customer_OlderThan( l.logrtcust_dtstamp )		OR
					NOT [ g.Module_Feature_SEA_DB ].SearchLogEntry_Delete_Order_OlderThan( l.logrtorder_dtstamp ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_OptimizeTables" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.task:state:next_index }">
		<MvASSIGN NAME = "l.task:state:next_index" VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_TableList_Load( l.task:state:tables ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.table" ARRAY = "l.task:state:tables" FIRST = "{ l.task:state:next_index }">
		<MvASSIGN NAME = "l.task:state:next_index" VALUE = "{ l.task:state:next_index + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Table_Optimize( l.table ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_AnalyzeTables" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.task:state:next_index }">
		<MvASSIGN NAME = "l.task:state:next_index" VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_TableList_Load( l.task:state:tables ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.table" ARRAY = "l.task:state:tables" FIRST = "{ l.task:state:next_index }">
		<MvASSIGN NAME = "l.task:state:next_index" VALUE = "{ l.task:state:next_index + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Table_Analyze( l.table ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
			<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_AISearchIndex" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_AI_UT ].AISearchIndex_Redis_Connect( l.conn_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.result" VALUE = "{ StandardScheduledTasks_AISearchIndex_Process( l.task, l.conn_id ) }">
	<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_AI_UT ].AISearchIndex_Redis_Disconnect( l.conn_id ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_AISearchIndex_Process" PARAMETERS = "task var, conn_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_AI_DB ].AISettings_Load( l.aisettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.task:state:processing_end_time AND l.task:config:max_proc_min GT 0 }">
		<MvASSIGN NAME = "l.task:state:processing_end_time" VALUE = "{ s.dyn_time_t + ( l.task:config:max_proc_min * 60 ) }">
	</MvIF>

	<MvREFERENCE NAME = "l.pending_queue" VARIABLE = "l.task:state:pending_queue">
	<MvREFERENCE NAME = "l.last_index_id" VARIABLE = "l.task:state:last_index_id">	

	<MvCOMMENT>
	|
	| Mark all queued (Q) products to processing (P)
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct SET status = \'P\' WHERE status = \'Q\'' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00028', g.MvQUERY_Error ) }">
	</MvIF>

	<MvWHILE EXPR = 1>
		<MvCOMMENT>
		|
		| Load all products marked for processing sorted by index.
		| Send the queued entries when:
		|	- Queue has 100 or more entries
		|	- Index changes
		|	- EOF
		|
		</MvCOMMENT>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW 	= "Products"
					QUERY 	= "{ 'SELECT
									p.*,

									aisxp.index_id		AS indexxproduct_index_id,
									aisxp.product_id	AS indexxproduct_product_id,
									aisxp.status		AS indexxproduct_status,
									aisxp.last_hash		AS indexxproduct_last_hash,

									aisi.id				AS index_id,
									aisi.active			AS index_active,
									aisi.code			AS index_code,
									aisi.source			AS index_source
								  FROM
								  	' $ g.Store_Table_Prefix $ 'Products p,
								  	' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct aisxp,
								  	' $ g.Store_Table_Prefix $ 'AISearchIndexes aisi
								  WHERE
									p.id			= aisxp.product_id	AND
									aisxp.index_id	= aisi.id			AND
									aisi.active		= 1					AND
									aisxp.status	= \'P\'
								  ORDER BY
									aisi.id' }">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00029', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvWHILE EXPR = "{ NOT Products.d.EOF }">
			<MvIF EXPR = "{ ( l.last_index_id GT 0 ) AND ( ( l.pending_queue:count GE 100 ) OR ( l.last_index_id NE Products.d.index_id AND l.pending_queue:count GT 0 ) ) }">
				<MvWHILESTOP>
			</MvIF>

			<MvASSIGN NAME = "l.last_index_id"							VALUE = "{ Products.d.index_id }">

			<MvIF EXPR = "{ ISNULL l.pending_queue }">
				<MvASSIGN NAME = "l.pending_queue:aisearchindex"		VALUE = "">
				<MvASSIGN NAME = "l.pending_queue:aisearchindex:id"		VALUE = "{ Products.d.index_id }">
				<MvASSIGN NAME = "l.pending_queue:aisearchindex:active"	VALUE = "{ Products.d.index_active }">
				<MvASSIGN NAME = "l.pending_queue:aisearchindex:code"	VALUE = "{ Products.d.index_code }">
				<MvASSIGN NAME = "l.pending_queue:aisearchindex:source"	VALUE = "{ Products.d.index_source }">
			</MvIF>

			<MvASSIGN NAME = "l.aisearchindexxproduct"					VALUE = "">
			<MvASSIGN NAME = "l.aisearchindexxproduct:index_id"			VALUE = "{ Products.d.indexxproduct_index_id }">
			<MvASSIGN NAME = "l.aisearchindexxproduct:product_id"		VALUE = "{ Products.d.indexxproduct_product_id }">
			<MvASSIGN NAME = "l.aisearchindexxproduct:status"			VALUE = "{ Products.d.indexxproduct_status }">
			<MvASSIGN NAME = "l.aisearchindexxproduct:last_hash"		VALUE = "{ Products.d.indexxproduct_last_hash }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Product_Read( l.product ) }">

			<MvASSIGN NAME = "l.input"									VALUE = "{ [ g.Module_Feature_AI_UT ].AISearchIndex_Template_Render( l.pending_queue:aisearchindex, l.product, l.input_hash ) }">

			<MvIF EXPR = "{ strcmp( l.aisearchindexxproduct:last_hash, l.input_hash ) NE 0 }">
				<MvASSIGN NAME = "l.null"								VALUE = "{ miva_array_insert_var( l.pending_queue:aisearchindexxproducts,	l.aisearchindexxproduct,	-1 ) }">
				<MvASSIGN NAME = "l.null"								VALUE = "{ miva_array_insert_var( l.pending_queue:input_hashes,				l.input_hash,				-1 ) }">
				<MvASSIGN NAME = "l.pending_queue:count"				VALUE = "{ miva_array_insert_var( l.pending_queue:inputs,					l.input,					-1 ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.aisearchindexxproduct:status"		VALUE = "I">

				<MvIF EXPR = "{ NOT [ g.Module_Feature_AI_DB ].AISearchIndexXProduct_Update( l.aisearchindexxproduct ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() OR StandardScheduledTasks_AISearchIndex_Process_TimeLimitReached( l.task ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
				<MvFUNCTIONRETURN VALUE = -1>
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>

		<MvASSIGN NAME = "l.eof" VALUE = "{ Products.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">

		<MvIF EXPR = "{ l.pending_queue:count GT 0 }">
			<MvIF EXPR = "{ NOT StandardScheduledTasks_AISearchIndex_ProcessQueue( l.conn_id, l.aisettings, l.pending_queue ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pending_queue" VALUE = "">
		</MvIF>

		<MvIF EXPR = "{ l.eof }">
			<MvWHILESTOP>
		</MvIF>
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_AISearchIndex_ProcessQueue" PARAMETERS = "conn_id, aisettings var, pending_queue var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_AI_UT ].MARS_Call_Embeddings_Index( l.pending_queue:aisearchindex, l.pending_queue:inputs, l.response ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ miva_array_elements( l.response ) NE l.pending_queue:count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-SST-00030', 'Returned embedding dimension count differs from expected' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.aisearchindexxproduct" ARRAY = "l.pending_queue:aisearchindexxproducts" INDEX = "l.pos" COUNT = "{ l.pending_queue:count }">
		<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.response">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.input_hash" VARIABLE = "l.pending_queue:input_hashes">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_AI_UT ].AISearchIndex_Redis_Set_Hash_Value( l.conn_id, l.aisettings, l.aisearchindexxproduct:index_id, l.aisearchindexxproduct:product_id, l.value ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.aisearchindexxproduct:status"		VALUE = "I">
		<MvASSIGN NAME = "l.aisearchindexxproduct:last_hash"	VALUE = "{ l.input_hash }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_AI_DB ].AISearchIndexXProduct_Update( l.aisearchindexxproduct ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StandardScheduledTasks_AISearchIndex_Process_TimeLimitReached" PARAMETERS = "task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ISNULL l.task:state:processing_end_time AND s.dyn_time_t GT l.task:state:processing_end_time }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

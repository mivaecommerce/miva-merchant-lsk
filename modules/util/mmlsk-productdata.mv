<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-UTIL-PDF-
| Next Error Code: 134
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "mmlsk-productdata">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Product Data Fields and Feeds">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Miva Merchant">
	<MvASSIGN NAME = "l.module:version"		VALUE = "10.1200">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "10.04">
	<MvASSIGN NAME = "l.module:description"	VALUE = "The Product Data Fields and Feeds module provides a mechanism for template-based generation of complex product data upon modification of the data. The primary goal of this module is to allow for extremely fast and efficient output of large dataset feeds which can then be consumed by other external systems. A secondary use case is to precalculate dynamic data on change of each product record so they it can be loaded as static data for faster performance in runtime.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "util, data_store, provision_store, clientside, component, component_prov, skins, feed, scheduledtask, fields_prod, not_prod, not_attr, not_attemp, not_relprod, not_inventory, not_prodimage, not_variant, not_pricegroup, not_availgroup, not_cat, not_uri, vis_util, json, json_api">
</MvFUNCTION>

<MvCOMMENT>
|
| Store-level Module Data Support Feature (data_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductDataSettings
						  (
							pgrp_ignel ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() $ ',
							pgrp_ignit ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() $ ',
							pgrp_ignex ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00115', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productdatasettings"			VALUE = "">
	<MvASSIGN NAME = "l.productdatasettings:pgrp_ignel" VALUE = 0>
	<MvASSIGN NAME = "l.productdatasettings:pgrp_ignit" VALUE = 0>
	<MvASSIGN NAME = "l.productdatasettings:pgrp_ignex" VALUE = 0>

	<MvIF EXPR = "{ NOT ProductDataSettings_Insert( l.productdatasettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductDataFields
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							is_public	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							page_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							on_prod		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_attr		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_pimage	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_variant	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_inv		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_relprod	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_pgrp		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_agrp		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_cat		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							on_uri		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							trig		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductDataFields_1 ON ' $ g.Store_Table_Prefix $ 'ProductDataFields ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductDataFields_2 ON ' $ g.Store_Table_Prefix $ 'ProductDataFields ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'ProductDataFields', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Create items
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT ProductData_Create_Item( 'productdatafield', l.module:code ) OR
					NOT ProductData_Create_Item( 'productdatafeed', l.module:code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'ProductDataFields' ) }">

	<MvCOMMENT>
	|
	| Delete all created field tables
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.productdatafields" COUNT = "{ ProductDataFieldList_Load_All( l.productdatafields ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ ProductDataField_Delete( l.module, l.productdatafield ) }">
	</MvFOREACH>

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductDataSettings' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductDataFields' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:version EQ l.version }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00084', 'Module \'' $ l.module:name $ '\' does not support manual upgrade.  New versions may only be obtained through the streaming update system.' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module Provisioning Feature (provision_store)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.child_name"	VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.child_name EQ 'settings_update' }">				<MvEVAL EXPR = "{ Module_Provision_Store_ProductDataSettings_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productdatafield_add' }">		<MvEVAL EXPR = "{ Module_Provision_Store_ProductDataField_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productdatafield_update' }">	<MvEVAL EXPR = "{ Module_Provision_Store_ProductDataField_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.child_name EQ 'productdatafield_delete' }">	<MvEVAL EXPR = "{ Module_Provision_Store_ProductDataField_Delete( l.module, l.child_xml ) }">
		<MvELSE>															<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unknown tag \'' $ l.child_xml:name $ '\'' ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductDataSettings_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductDataSettings_Load( l.productdatasettings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'OnPriceGroupChangeIgnoresNonAnonymousShoppers',		l.productdatasettings:pgrp_ignel ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'OnPriceGroupChangeIgnoresNonProductDiscounts',		l.productdatasettings:pgrp_ignit ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'OnPriceGroupChangeIgnoresApplyToAllUnlessExcluded',	l.productdatasettings:pgrp_ignex ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataSettings_Update( l.productdatasettings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00116', 'Product Data Settings updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductDataField_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdatafield"				VALUE = "">
	<MvASSIGN NAME = "l.productdatafield:is_public"		VALUE = 0>
	<MvASSIGN NAME = "l.productdatafield:on_prod"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_attr"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_pimage"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_variant"	VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_inv"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_relprod"	VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_pgrp"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_agrp"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_cat"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_uri"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:trig"			VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 	 'R',		l.provide_xml, 'Code',									l.productdatafield:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'R:100',	l.provide_xml, 'Name',									l.productdatafield:name )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', 		l.provide_xml, 'Public', 								l.productdatafield:is_public )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnProductChange',						l.productdatafield:on_prod,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnAttributeChange',						l.productdatafield:on_attr,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnProductImageChange',					l.productdatafield:on_pimage,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnVariantChange',						l.productdatafield:on_variant,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnInventoryChange',						l.productdatafield:on_inv,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnRelatedProductChange',				l.productdatafield:on_relprod,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnPriceGroupChange',					l.productdatafield:on_pgrp,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnAvailabilityGroupChange',				l.productdatafield:on_agrp,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnCategoryChange',						l.productdatafield:on_cat,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O', 		l.provide_xml, 'OnURIChange',							l.productdatafield:on_uri,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )												OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'o:50',	l.provide_xml, 'Trigger',								l.productdatafield:trig ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ProductDataField_Load_Code( l.productdatafield:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product data field with code \'' $ l.productdatafield:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Insert( l.module, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00004', 'Product Data Field \'' $ l.productdatafield:code $ '\' created' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductDataField_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field_code', l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.field_code, l.productdatafield ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product data field with code \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 	 'O',		l.provide_xml, 'Code',									l.productdatafield:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'O:100',	l.provide_xml, 'Name',									l.productdatafield:name ) 		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O',		l.provide_xml, 'Public', 								l.productdatafield:is_public )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnProductChange',						l.productdatafield:on_prod,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnAttributeChange',						l.productdatafield:on_attr,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnProductImageChange',					l.productdatafield:on_pimage,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnVariantChange',						l.productdatafield:on_variant,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnInventoryChange',						l.productdatafield:on_inv,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnRelatedProductChange',				l.productdatafield:on_relprod,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnPriceGroupChange',					l.productdatafield:on_pgrp,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnAvailabilityGroupChange',				l.productdatafield:on_agrp,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnCategoryChange',						l.productdatafield:on_cat,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 	 'O',		l.provide_xml, 'OnURIChange',							l.productdatafield:on_uri,
																							   'Ignore,Queue,QueueWithVariantMasters',
																							   'ignore,queue,queue+' )													OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 	 'o:50',	l.provide_xml, 'Trigger',								l.productdatafield:trig ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ProductDataField_Load_Code( l.productdatafield:code, l.existing_productdatafield ) AND l.existing_productdatafield:id NE l.productdatafield:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product data field with code \'' $ l.productdatafield:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Update( l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00005', 'Product Data Field \'' $ l.productdatafield:code $ '\' updated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Store_ProductDataField_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'field_code', l.field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.field_code, l.productdatafield ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Product data field with code \'' $ l.field_code $ '\' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Delete( l.module, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00006', 'Product Data Field \'' $ l.productdatafield:code $ '\' deleted' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module Client Side Feature (clientside)
|
</MvCOMMENT>

<MvINCLUDE FILE = "modules/util/productdata/combined.mv">

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'combined.js' }">									<MvFUNCTIONRETURN VALUE = "{ Element_ProductData_JavaScript_Combined( l.module ) }">
	<MvELSEIF EXPR = "{ Module_Clientside_Output_File( l.module, g.Filename ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.null"	VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Output_File" PARAMETERS = "module var, filename" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/productdata/output.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_File_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/productdata/integrity.mv">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Clientside_Combined_Integrity" PARAMETERS = "module var, filename, minified" STANDARDOUTPUTLEVEL = "">
	<MvINCLUDE FILE = "modules/util/productdata/combined_integrity.mv">
</MvFUNCTION>

<MvCOMMENT>
|
| Component Feature (component)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Tabs( l.module, l.item, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Tabs( l.module, l.item, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Validate( l.module, l.item, l.field_prefix, l.fields, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Validate( l.module, l.item, l.field_prefix, l.fields, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Update( l.module, l.item, l.field_prefix, l.fields, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Update( l.module, l.item, l.field_prefix, l.fields, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Content( l.module, l.item, l.tab, l.load_fields, l.field_prefix, l.fields, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Content( l.module, l.item, l.tab, l.load_fields, l.field_prefix, l.fields, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Defaults( l.module, l.item, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Defaults( l.module, l.item, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Page_Assign( l.module, l.page, l.item, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Page_Assign( l.module, l.page, l.item, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Page_Unassign( l.module, l.page, l.item, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Page_Unassign( l.module, l.page, l.item, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Initialize( l.module, l.item, l.all_settings, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Initialize( l.module, l.item, l.all_settings, l.settings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Prerender( l.module, l.item, l.all_settings, l.settings, l.param ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Prerender( l.module, l.item, l.all_settings, l.settings, l.param ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Render_Start( l.module, l.item, l.all_settings, l.settings, l.param ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Render_Start( l.module, l.item, l.all_settings, l.settings, l.param ) }">
	</MvIF>

	<MvFUNCTIONRETURN>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Render_End( l.module, l.item, l.all_settings, l.settings, l.param ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Render_End( l.module, l.item, l.all_settings, l.settings, l.param ) }">
	</MvIF>

	<MvFUNCTIONRETURN>
</MvFUNCTION>

<MvCOMMENT>
|
| Feed Module Feature (feed)
|
</MvCOMMENT>

<MvFUNCTION NAME = "FeedModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:output_custom"			VALUE = 1>
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Fields" PARAMETERS = "module var, feed var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.feed:id }">
		<MvASSIGN NAME = "g.ProductDataFeed_File_Location"	VALUE = "{ l.feed:config:file_location }">
		<MvASSIGN NAME = "g.ProductDataFeed_File_Name"		VALUE = "{ l.feed:config:file_name }">
		<MvASSIGN NAME = "g.ProductDataFeed_Field_Code"		VALUE = "{ l.feed:config:field_code }">
		<MvASSIGN NAME = "g.ProductDataFeed_Page_Code"		VALUE = "{ l.feed:config:page_code }">

		<MvASSIGN NAME = "l.fields"							VALUE = "file_location,file_name,field_code,view_template">
	<MvELSE>
		<MvASSIGN NAME = "g.ProductDataFeed_File_Location"	VALUE = "data">
		<MvASSIGN NAME = "g.ProductDataFeed_File_Name"		VALUE = "">
		<MvASSIGN NAME = "g.ProductDataFeed_Field_Code"		VALUE = "">
		<MvASSIGN NAME = "g.ProductDataFeed_Page_Code"		VALUE = "">

		<MvASSIGN NAME = "l.fields"							VALUE = "file_location,file_name,field_code">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.fields }">
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'file_location' }">		<MvFUNCTIONRETURN VALUE = "<b>File Location:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'file_name' }">		<MvFUNCTIONRETURN VALUE = "<b>File Path:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'field_code' }">		<MvFUNCTIONRETURN VALUE = "<b>Product Data Field:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'view_template' }">	<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'file_location' }">
		<select name="ProductDataFeed_File_Location">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'data', 	g.ProductDataFeed_File_Location, 'Data (Private)' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'script',	g.ProductDataFeed_File_Location, 'Script (Public)' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'none', 	g.ProductDataFeed_File_Location, 'None' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'file_name' }">
		<input type="text" size="40" name="ProductDataFeed_File_Name" value="{ encodeentities( g.ProductDataFeed_File_Name ) }">
	<MvELSEIF EXPR = "{ l.field_id EQ 'field_code' }">
		<input type="text" size="20" name="ProductDataFeed_Field_Code" value="{ encodeentities( g.ProductDataFeed_Field_Code ) }">
	<MvELSEIF EXPR = "{ l.field_id EQ 'view_template' }">
		<a href="{ glosub( g.sessionurl, 'json.mvc', 'admin.mvc' ) $ 'Screen=PAGE&Edit_Page=' $ encodeattribute( g.ProductDataFeed_Page_Code ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) }">Edit Template</a>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Validate" PARAMETERS = "module var, feed var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.ProductDataFeed_File_Location"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataFeed_File_Location ) }">
	<MvASSIGN NAME = "g.ProductDataFeed_File_Name"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataFeed_File_Name ) }">
	<MvASSIGN NAME = "g.ProductDataFeed_Field_Code"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataFeed_Field_Code ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.ProductDataFeed_File_Location, 'data,script,none' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataFeed_File_Location', 'Please select a file location' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.ProductDataFeed_File_Name AND g.ProductDataFeed_File_Location NE 'none' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataFeed_File_Name', 'Please enter a file name' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Load_Code( g.ProductDataFeed_Field_Code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataFeed_Field_Code', 'Field \'' $ g.ProductDataFeed_Field_Code $ '\' does not exist' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Update" PARAMETERS = "module var, feed var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.feed:config:file_location"	VALUE = "{ g.ProductDataFeed_File_Location }">
	<MvASSIGN NAME = "l.feed:config:file_name"		VALUE = "{ g.ProductDataFeed_File_Name }">
	<MvASSIGN NAME = "l.feed:config:field_code"		VALUE = "{ g.ProductDataFeed_Field_Code }">

	<MvIF EXPR = "{ ISNULL l.feed:config:page_code }">
		<MvIF EXPR = "{ NOT ProductDataFeed_Generate_Template( l.module, l.feed, l.page ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Delete" PARAMETERS = "module var, feed var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.feed:config:page_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_Page_Code_Admin_UI( l.feed:config:page_code, l.module:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Output_Custom" PARAMETERS = "module var, feed var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "g.Session:cache:productdatafeed:feed" VARIABLE = "l.feed">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Page_Admin( l.feed:config:page_code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "FeedModule_Provision_Settings" PARAMETERS = "module var, feed var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(	'R', l.provide_xml, 'File_Location',	l.feed:config:file_location,
																											'data,script,none', 'data,script,none' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(	'o', l.provide_xml, 'File_Name'	,		l.feed:config:file_name )					OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(	'R', l.provide_xml, 'Field_Code',		l.feed:config:field_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.feed:config:file_name AND l.feed:config:file_location NE 'none' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'File_Name cannot be blank' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.feed:config:field_code, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Field \'' $ l.feed:config:field_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.feed:config:page_code }">
		<MvIF EXPR = "{ NOT ProductDataFeed_Generate_Template( l.module, l.feed, l.null ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Product Data (Feed)' }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.fields:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.fields:load:product"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:product ) }">
	<MvASSIGN NAME = "l.fields:load:inventory"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:inventory ) }">
	<MvASSIGN NAME = "l.fields:load:saleprice"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:saleprice ) }">
	<MvASSIGN NAME = "l.fields:load:discounts"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:discounts ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Validate_Compilation( l.fields:template_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.settings:load:product"		VALUE = "{ l.fields:load:product }">
	<MvASSIGN NAME = "l.settings:load:inventory"	VALUE = "{ l.fields:load:inventory }">
	<MvASSIGN NAME = "l.settings:load:saleprice"	VALUE = "{ l.fields:load:saleprice }">
	<MvASSIGN NAME = "l.settings:load:discounts"	VALUE = "{ l.fields:load:discounts }">

	<MvASSIGN NAME = "l.selectedfield_count"		VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( l.fields:fields_custom, l.settings:fields_custom ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, '', l.fields:template_code, l.settings ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( l.item, l.field_prefix $ 'template_code', g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00007', l.module:name $ ' \'' $ l.item $ '\' settings updated' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields:load:product"		VALUE = "{ l.settings:load:product }">
		<MvASSIGN NAME = "l.fields:load:inventory"		VALUE = "{ l.settings:load:inventory }">
		<MvASSIGN NAME = "l.fields:load:saleprice"		VALUE = "{ l.settings:load:saleprice }">
		<MvASSIGN NAME = "l.fields:load:discounts"		VALUE = "{ l.settings:load:discounts }">

		<MvASSIGN NAME = "l.fields:template_code"		VALUE = "{ l.templateversion:source }">
		<MvASSIGN NAME = "l.fields:template_filename"	VALUE = "{ l.settings:template_filename }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].InitializeCustomFieldSelect( l.settings:fields_custom, l.fields:fields_custom ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'load:product,load:inventory,load:saleprice,load:discounts,fields_custom,template_code,template_filename' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">

		<table border="0" cellpadding="2" cellspacing="0" width="100%">
		<tr><td>
			&nbsp;
		</td><td align="left" width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:product,	l.field_prefix $ 'load:product',	1, 'Load Product' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:inventory,	l.field_prefix $ 'load:inventory',	1, 'Load Inventory' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:saleprice,	l.field_prefix $ 'load:saleprice',	1, 'Load Sale Price' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:discounts,	l.field_prefix $ 'load:discounts',	1, 'Predict Discounts' ) }">
		</td>

		<MvASSIGN NAME = "l.customfield_count" VALUE = "{ [ g.Module_Library_Utilities ].ProductCustomFieldList_Load( l.customfields ) }">
		<MvIF EXPR = "{ l.customfield_count }">
			<tr><td align="left" valign="top" nowrap>
				<b>Custom Fields:</b>
			</td><td align="left" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCustomFieldSelect( l.field_prefix $ 'fields_custom', l.fields:fields_custom, l.customfields, l.customfield_count ) }">
			</td></tr>
		</MvIF>

		<tr><td colspan="2" width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea_WithRecall( l.field_prefix $ 'template_code', l.fields:template_code, 20, 100, l.templateversion:templ_id ) }">
		</td></tr>
		</table>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:load:product"		VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:inventory"	VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:saleprice"	VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:discounts"	VALUE = 0>
	<MvASSIGN NAME = "l.settings:fields_custom"		VALUE = "">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:template_filename"	VALUE = "{ tolower( l.page:code ) $ '-' $ tolower( l.item ) $ '.mvc' }">

	<MvCAPTURE VARIABLE = "l.source" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/productdata/productdatafeed_item.mvt"></MvCAPTURE>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplate_NoDuplicates( l.source, l.settings, l.settings:template_filename ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_ManagedTemplate_Filename( l.settings:template_filename ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Session:cache:productdatafeed:feed }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'productdatafeed_missing' ) }">
	</MvIF>

	<MvREFERENCE NAME = "l.feed" VARIABLE = "g.Session:cache:productdatafeed:feed">

	<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.feed:config:field_code, l.all_settings:productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'productdatafeed_unabletoloadfield' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings:file_location"	VALUE = "{ l.feed:config:file_location }">
	<MvASSIGN NAME = "l.settings:file_name"		VALUE = "{ l.feed:config:file_name }">

	<MvIF EXPR = "{ l.feed:config:file_location EQ 'none' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].EnsurePathExists( l.settings:file_location, [ g.Module_Library_Utilities ].BasePath( l.settings:file_name ) ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOR COUNT = "{ 100 }">
		<MvASSIGN NAME = "l.settings:temporary_file_name"	VALUE = "{ l.settings:file_name $ '.' $ MakeSessionID() }">

		<MvIF EXPR = "{ file_create( l.settings:temporary_file_name, l.settings:file_location, l.null ) GE 0 }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOR>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'productdatafeed_unabletocreatetemporaryfile' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.discount_state"			VARIABLE = "l.all_settings:discount_state">
	<MvREFERENCE NAME = "l.discountsignature"		VARIABLE = "l.all_settings:discountsignature">

	<MvASSIGN NAME = "l.query"						VALUE = "">
	<MvASSIGN NAME = "l.inventorysettings"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state"				VALUE = "">
	<MvASSIGN NAME = "l.discount_state_signature"	VALUE = "">
	<MvASSIGN NAME = "l.discountsignature"			VALUE = "">
	<MvASSIGN NAME = "l.customfield_count"			VALUE = "{ miva_array_elements( l.settings:fields_custom ) }">
	<MvASSIGN NAME = "l.optimized_loop"				VALUE = 1>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'pd.product_id	AS productdatafield_product_id,
																		  pd.value		AS productdatafield_value,
																		  pd.dtstamp	AS productdatafield_dtstamp' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductData_' $ int( l.all_settings:productdatafield:id ), 'pd' ) }">

	<MvIF EXPR = "{ l.settings:load:product OR l.settings:load:saleprice OR l.settings:load:discounts OR l.customfield_count }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'prod.*' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.query, 'pbv.page_id', 'page_id' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Products', 'prod' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'prod.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'prod.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'prod.id = pd.product_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:inventory }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventorySettings_Load( l.inventorysettings ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'productdatafeed_inventorysettingsloaderror' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'ipc.inventory		AS ipc_inventory,
																			  ips.active		AS ips_active,
																			  ips.in_long		AS ips_in_long,
																			  ips.in_short		AS ips_in_short,
																			  ips.low_level		AS ips_low_level,
																			  ips.low_long		AS ips_low_long,
																			  ips.low_lvl_d		AS ips_low_lvl_d,
																			  ips.low_short		AS ips_low_short,
																			  ips.low_track		AS ips_low_track,
																			  ips.out_level		AS ips_out_level,
																			  ips.out_long		AS ips_out_long,
																			  ips.out_lvl_d		AS ips_out_lvl_d,
																			  ips.out_short		AS ips_out_short,
																			  ips.out_track		AS ips_out_track' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pd', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'ips.product_id = pd.product_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pd', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'ipc.product_id = pd.product_id', '' ) }">

		<MvASSIGN NAME = "l.optimized_loop"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:saleprice OR l.settings:load:discounts }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_CreateEmpty( l.discount_state ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.pricegroup_count"			VALUE = "{ [ g.Module_Feature_PGR_UT ].ResolvedPriceGroupAndModuleList_Load_Customer_Cached( 0, l.pricegroups ) }">

		<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Set_PriceGroups( l.discount_state, l.pricegroups, l.pricegroup_count ) }">

		<MvASSIGN NAME = "l.discount_state_signature"	VALUE = "{ [ g.Module_Feature_PGR_UT ].PriceGroupList_Signature( l.pricegroups, l.pricegroup_count ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Disable_Unused_Item_PriceGroups( l.discount_state ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Predict_Baseline_Discounts( l.discount_state ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.optimized_loop"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:saleprice }">
		<MvCOMMENT>
		|
		| If the discount signature does not exist in the database, there is no reason to include the LEFT OUTER JOIN to sNN_DiscountPrices
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountSignature_Load_Signature( l.discount_state_signature, l.discountsignature ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'productdatafeed_queryerror' ) }">
			</MvIF>
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'dp.base_price	AS base_price,
																				  dp.price		AS sale_price' ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pd', g.Store_Table_Prefix $ 'DiscountPrices', 'dp', 'dp.product_id = pd.product_id AND dp.dscsig_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.discountsignature:id ) ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.customfield_count }">
		<MvEVAL EXPR = "{ ProductData_Query_CustomFields( l.query, l.settings:fields_custom, l.customfield_count ) }">

		<MvASSIGN NAME = "l.optimized_loop"	VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductData_Products"
				QUERY	= "{ l.sql }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'productdatafeed_queryerror' ) }">
	</MvIF>

	<MvREFERENCE NAME = "l.all_settings:product:id"						VARIABLE = "ProductData_Products.d.productdatafield_product_id">
	<MvREFERENCE NAME = "l.all_settings:productdatafield_value"			VARIABLE = "ProductData_Products.d.productdatafield_value">
	<MvREFERENCE NAME = "l.all_settings:productdatafield_dtstamp"		VARIABLE = "ProductData_Products.d.productdatafield_dtstamp">
	<MvASSIGN NAME = "l.all_settings:eol:cr"							VALUE = "{ asciichar( 13 ) }">
	<MvASSIGN NAME = "l.all_settings:eol:lf"							VALUE = "{ asciichar( 10 ) }">
	<MvASSIGN NAME = "l.all_settings:eol:crlf"							VALUE = "{ l.all_settings:eol:cr $ l.all_settings:eol:lf }">

	<MvIF EXPR = "{ l.settings:load:product }">
		<MvREFERENCE NAME = "l.all_settings:product:catcount"			VARIABLE = "ProductData_Products.d.catcount">
		<MvREFERENCE NAME = "l.all_settings:product:cancat_id"			VARIABLE = "ProductData_Products.d.cancat_id">
		<MvREFERENCE NAME = "l.all_settings:product:agrpcount"			VARIABLE = "ProductData_Products.d.agrpcount">
		<MvREFERENCE NAME = "l.all_settings:product:pgrpcount"			VARIABLE = "ProductData_Products.d.pgrpcount">
		<MvREFERENCE NAME = "l.all_settings:product:disp_order"			VARIABLE = "ProductData_Products.d.disp_order">
		<MvREFERENCE NAME = "l.all_settings:product:page_id"			VARIABLE = "ProductData_Products.d.page_id">
		<MvREFERENCE NAME = "l.all_settings:product:page_code"			VARIABLE = "ProductData_Products.d.page_code">
		<MvREFERENCE NAME = "l.all_settings:product:code"				VARIABLE = "ProductData_Products.d.code">
		<MvREFERENCE NAME = "l.all_settings:product:sku"				VARIABLE = "ProductData_Products.d.sku">
		<MvREFERENCE NAME = "l.all_settings:product:name"				VARIABLE = "ProductData_Products.d.name">
		<MvREFERENCE NAME = "l.all_settings:product:page_title"			VARIABLE = "ProductData_Products.d.page_title">
		<MvREFERENCE NAME = "l.all_settings:product:thumbnail"			VARIABLE = "ProductData_Products.d.thumbnail">
		<MvREFERENCE NAME = "l.all_settings:product:image"				VARIABLE = "ProductData_Products.d.image">
		<MvREFERENCE NAME = "l.all_settings:product:price"				VARIABLE = "ProductData_Products.d.price">
		<MvREFERENCE NAME = "l.all_settings:product:cost"				VARIABLE = "ProductData_Products.d.cost">
		<MvREFERENCE NAME = "l.all_settings:product:descrip"			VARIABLE = "ProductData_Products.d.descrip">
		<MvREFERENCE NAME = "l.all_settings:product:weight"				VARIABLE = "ProductData_Products.d.weight">
		<MvREFERENCE NAME = "l.all_settings:product:taxable"			VARIABLE = "ProductData_Products.d.taxable">
		<MvREFERENCE NAME = "l.all_settings:product:active"				VARIABLE = "ProductData_Products.d.active">
		<MvREFERENCE NAME = "l.all_settings:product:original_active"	VARIABLE = "ProductData_Products.d.active">
		<MvREFERENCE NAME = "l.all_settings:product:dt_created"			VARIABLE = "ProductData_Products.d.dt_created">
		<MvREFERENCE NAME = "l.all_settings:product:dt_updated"			VARIABLE = "ProductData_Products.d.dt_updated">
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:saleprice }">
		<MvREFERENCE NAME = "l.all_settings:product:sale_price"			VARIABLE = "ProductData_Products.d.sale_price">
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:discounts }">
		<MvREFERENCE NAME = "l.all_settings:product:discounts"			VARIABLE = "l.discounts">
		<MvREFERENCE NAME = "l.all_settings:product:discount_count"		VARIABLE = "l.discount_count">
	</MvIF>

	<MvCOMMENT>
	|
	| If we are not loading any data that requires processing inside the loop, use an optimized loop without conditionals
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.optimized_loop }">
		<MvWHILE EXPR = "{ NOT ProductData_Products.d.EOF }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( l.settings:template_filename, l.all_settings ) }">
			<MvSKIP NAME = "Merchant" VIEW = "ProductData_Products" ROWS = 1>
		</MvWHILE>
	<MvELSE>
		<MvWHILE EXPR = "{ NOT ProductData_Products.d.EOF }">
			<MvIF EXPR = "{ l.settings:load:inventory }">
				<MvEVAL EXPR = "{ ProductData_InventoryFields_Read( l.inventorysettings, l.all_settings:product ) }">
			</MvIF>

			<MvIF EXPR = "{ l.settings:load:discounts OR ( l.settings:load:saleprice AND ISNULL l.all_settings:product:sale_price ) }">
				<MvASSIGN NAME = "l.all_settings:product:retail"			VALUE = "{ ProductData_Products.d.price }">
				<MvASSIGN NAME = "l.all_settings:product:base_price"		VALUE = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Adjusted_Price( l.discount_state, l.all_settings:product, l.all_settings:product:price, l.all_settings:product:cost ) }">

				<MvASSIGN NAME = "l.discounts"								VALUE = "">
				<MvASSIGN NAME = "l.discount_count"							VALUE = 0>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Predict_Product_Discounts_WithProductSubscriptionTerm( l.discount_state, l.all_settings:product, 0, 0, 1, l.all_settings:product:price, l.discounts, l.discount_count ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Throw_Exception( 'productdatafeed_predicterror' ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.settings:load:saleprice }">
				<MvASSIGN NAME = "l.all_settings:product:retail"			VALUE = "{ ProductData_Products.d.price }">
				<MvASSIGN NAME = "l.all_settings:product:base_price"		VALUE = "{ ProductData_Products.d.base_price }">

				<MvIF EXPR = "{ NOT ISNULL l.all_settings:product:sale_price }">
					<MvASSIGN NAME = "l.all_settings:product:price"			VALUE = "{ l.all_settings:product:sale_price }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.customfield_count }">
				<MvEVAL EXPR = "{ ProductData_Query_CustomFields_Read( l.query, 'ProductData_Products', l.all_settings:product ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Template( l.settings:template_filename, l.all_settings ) }">
			<MvSKIP NAME = "Merchant" VIEW = "ProductData_Products" ROWS = 1>
		</MvWHILE>
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvCOMMENT>
|
| Scheduled Task Feature (scheduledtask)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ScheduledTaskModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:provision_settings"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Operations" PARAMETERS = "module var, operations var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.operations"			VALUE = "">
	<MvASSIGN NAME = "l.operation_count"	VALUE = 0>

	<MvASSIGN NAME = "l.operation:code"		VALUE = "generate">
	<MvASSIGN NAME = "l.operation:descrip"	VALUE = "Generate Product Field Data">
	<MvASSIGN NAME = "l.operation_count"	VALUE = "{ miva_array_insert_var( l.operations, l.operation, -1 ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.operation_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Fields" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation NE 'generate' }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ l.task:id }">
		<MvASSIGN NAME = "g.ProductDataTask_Field"				VALUE = "{ l.task:config:field_code }">
		<MvASSIGN NAME = "g.ProductDataTask_Generation"			VALUE = "{ l.task:config:generation }">
		<MvASSIGN NAME = "g.ProductDataTask_MaxProducts"		VALUE = "{ l.task:config:max_products }">
		<MvASSIGN NAME = "g.ProductDataTask_MaxSeconds"			VALUE = "{ l.task:config:max_seconds }">
		<MvASSIGN NAME = "g.ProductDataTask_CompletionTrigger"	VALUE = "{ l.task:config:completiontrigger }">
	<MvELSE>
		<MvASSIGN NAME = "g.ProductDataTask_Field"				VALUE = "">
		<MvASSIGN NAME = "g.ProductDataTask_Generation"			VALUE = "queued">
		<MvASSIGN NAME = "g.ProductDataTask_MaxProducts"		VALUE = 0>
		<MvASSIGN NAME = "g.ProductDataTask_MaxSeconds"			VALUE = 0>
		<MvASSIGN NAME = "g.ProductDataTask_CompletionTrigger"	VALUE = "">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "field,generation,limit,completiontrigger">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.field_id EQ 'field' }">					<MvFUNCTIONRETURN VALUE = "<b>Product Data Field:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'generation' }">			<MvFUNCTIONRETURN VALUE = "<b>Generation:</b>">
	<MvELSEIF EXPR = "{ l.field_id EQ 'limit' }">				<MvFUNCTIONRETURN VALUE = "Process No More Than:">
	<MvELSEIF EXPR = "{ l.field_id EQ 'completiontrigger' }">	<MvFUNCTIONRETURN VALUE = "Trigger on Completion:">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.field_id EQ 'field' }">
		<input type="text" size="20" name="ProductDataTask_Field" value="{ encodeentities( g.ProductDataTask_Field ) }">
	<MvELSEIF EXPR = "{ l.field_id EQ 'generation' }">
		<select name="ProductDataTask_Generation">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'queued',	g.ProductDataTask_Generation, 'Queued Products' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'all',		g.ProductDataTask_Generation, 'All Products' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'active',	g.ProductDataTask_Generation, 'All Active Products' ) }">
		</select>
	<MvELSEIF EXPR = "{ l.field_id EQ 'limit' }">
		<label><input type="text" size="5" name="ProductDataTask_MaxProducts" value="{ encodeentities( g.ProductDataTask_MaxProducts ) }"> Product(s) (0 = no limit)</label><br />
		<label><input type="text" size="5" name="ProductDataTask_MaxSeconds" value="{ encodeentities( g.ProductDataTask_MaxSeconds ) }"> Second(s) (0 = no limit)</label>
	<MvELSEIF EXPR = "{ l.field_id EQ 'completiontrigger' }">
		<input type="text" size="20" name="ProductDataTask_CompletionTrigger" value="{ encodeentities( g.ProductDataTask_CompletionTrigger ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Validate" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation NE 'generate' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "g.ProductDataTask_Field"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataTask_Field ) }">
	<MvASSIGN NAME = "g.ProductDataTask_Generation"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataTask_Generation ) }">
	<MvASSIGN NAME = "g.ProductDataTask_MaxProducts"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataTask_MaxProducts ) }">
	<MvASSIGN NAME = "g.ProductDataTask_MaxSeconds"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataTask_MaxSeconds ) }">
	<MvASSIGN NAME = "g.ProductDataTask_CompletionTrigger"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.ProductDataTask_CompletionTrigger ) }">

	<MvIF EXPR = "{ ISNULL g.ProductDataTask_Field }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataTask_Field', 'Please specify a product data field' ) }">
	<MvELSEIF EXPR = "{ NOT ProductDataField_Load_Code( g.ProductDataTask_Field, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataTask_Field', 'Field \'' $ g.ProductDataTask_Field $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.ProductDataTask_Generation, 'queued,all,active' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataTask_Generation', 'Please select the products to process' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.ProductDataTask_MaxProducts ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataTask_MaxProducts', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.ProductDataTask_MaxSeconds ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataTask_MaxSeconds', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ ( NOT ISNULL g.ProductDataTask_CompletionTrigger ) AND ( NOT strcasecmp( g.ProductDataTask_CompletionTrigger, l.task:trig ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'ProductDataTask_CompletionTrigger', 'A task cannot trigger itself on completion' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Update" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation NE 'generate' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00008', 'Unsupported operation' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.task:config:field_code"			VALUE = "{ g.ProductDataTask_Field }">
	<MvASSIGN NAME = "l.task:config:generation"			VALUE = "{ g.ProductDataTask_Generation }">
	<MvASSIGN NAME = "l.task:config:max_products"		VALUE = "{ g.ProductDataTask_MaxProducts }">
	<MvASSIGN NAME = "l.task:config:max_seconds"		VALUE = "{ g.ProductDataTask_MaxSeconds }">
	<MvASSIGN NAME = "l.task:config:completiontrigger"	VALUE = "{ g.ProductDataTask_CompletionTrigger }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Delete" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation NE 'generate' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00009', 'Unsupported operation' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Initialize state
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ISNULL l.task:state }">
		<MvASSIGN NAME = "l.task:state:dtstamp_start"		VALUE = "{ s.dyn_time_t }">

		<MvIF EXPR = "{ l.task:config:max_seconds EQ 0 }">	<MvASSIGN NAME = "l.task:state:dtstamp_end" VALUE = 0>
		<MvELSE>											<MvASSIGN NAME = "l.task:state:dtstamp_end" VALUE = "{ l.task:state:dtstamp_start + l.task:config:max_seconds }">
		</MvIF>

		<MvASSIGN NAME = "l.task:state:products_processed"	VALUE = 0>
		<MvASSIGN NAME = "l.task:state:last_product_id"		VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Load field and generation page
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.task:config:field_code, l.productdatafield ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00010', 'Field \'' $ l.task:config:field_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code_Cached( l.productdatafield:page_code, l.page ) OR
					NOT l.page:admin }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00011', 'Page \'' $ l.productdatafield:page_code $ '\' does not exist or is not an admin page' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.page:settings:productdatafield:generation" VALUE = "{ l.task:config:generation }">

	<MvIF EXPR = "{ NOT ProductDataField_Page_Prepare( l.page, l.template ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Flag queued products for processing
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.task:config:generation EQ 'queued' }">
		<MvIF EXPR = "{ NOT ProductDataQueue_MarkForProcessing( l.productdatafield:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Generate the base SQL query based on the page and task settings
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'prod.*' ) }">

	<MvIF EXPR = "{ l.task:config:generation EQ 'queued' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ), 'q' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Products', 'prod' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'q.status = \'P\' AND prod.id = q.product_id', '' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Products', 'prod' ) }">

		<MvIF EXPR = "{ l.task:config:generation EQ 'active' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'prod.active = 1', '' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY( l.query, 'prod.id', 'ASC' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Handle additional data loads configured at the page level
	|
	</MvCOMMENT>

	<MvREFERENCE NAME = "l.settings"					VARIABLE = "l.page:settings:productdatafield">
	<MvREFERENCE NAME = "l.discount_state"				VARIABLE = "l.page:settings:discount_state">
	<MvREFERENCE NAME = "l.discountsignature"			VARIABLE = "l.page:settings:discountsignature">

	<MvASSIGN NAME = "l.inventorysettings"				VALUE = "">
	<MvASSIGN NAME = "l.discount_state"					VALUE = "">
	<MvASSIGN NAME = "l.discountsignature"				VALUE = "">

	<MvASSIGN NAME = "l.customfield_count"				VALUE = "{ miva_array_elements( l.settings:fields_custom ) }">

	<MvIF EXPR = "{ l.settings:load:link }">
		<MvASSIGN NAME = "l.product_url_flags"			VALUE = "{ [ g.Module_Feature_URI_UT ].URL_Build_Flags( 'nosession' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:cancat }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'cancat.code AS cancat_code' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'Categories', 'cancat', 'cancat.id = prod.cancat_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:page }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.query, 'pbv.page_id', 'page_id' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'prod.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'prod.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:inventory }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventorySettings_Load( l.inventorysettings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'ipc.inventory		AS ipc_inventory,
																			  ips.active		AS ips_active,
																			  ips.in_long		AS ips_in_long,
																			  ips.in_short		AS ips_in_short,
																			  ips.low_level		AS ips_low_level,
																			  ips.low_long		AS ips_low_long,
																			  ips.low_lvl_d		AS ips_low_lvl_d,
																			  ips.low_short		AS ips_low_short,
																			  ips.low_track		AS ips_low_track,
																			  ips.out_level		AS ips_out_level,
																			  ips.out_long		AS ips_out_long,
																			  ips.out_lvl_d		AS ips_out_lvl_d,
																			  ips.out_short		AS ips_out_short,
																			  ips.out_track		AS ips_out_track' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'ips.product_id = prod.id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'ipc.product_id = prod.id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:saleprice OR l.settings:load:discounts }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_CreateEmpty( l.discount_state ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.pricegroup_count"			VALUE = "{ [ g.Module_Feature_PGR_UT ].ResolvedPriceGroupAndModuleList_Load_Customer_Cached( 0, l.pricegroups ) }">

		<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Set_PriceGroups( l.discount_state, l.pricegroups, l.pricegroup_count ) }">

		<MvASSIGN NAME = "l.discount_state_signature"	VALUE = "{ [ g.Module_Feature_PGR_UT ].PriceGroupList_Signature( l.pricegroups, l.pricegroup_count ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Disable_Unused_Item_PriceGroups( l.discount_state ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Predict_Baseline_Discounts( l.discount_state ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.settings:load:saleprice }">
		<MvCOMMENT>
		|
		| If the discount signature does not exist in the database, there is no reason to include the LEFT OUTER JOIN to sNN_DiscountPrices
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountSignature_Load_Signature( l.discount_state_signature, l.discountsignature ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, 'dp.base_price	AS base_price,
																				  dp.price		AS sale_price' ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'DiscountPrices', 'dp', 'dp.product_id = prod.id AND dp.dscsig_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.discountsignature:id ) ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.customfield_count }">
		<MvEVAL EXPR = "{ ProductData_Query_CustomFields( l.query, l.settings:fields_custom, l.customfield_count ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Build and execute the query
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ 1 }">
		<MvIF EXPR = "{ ( l.task:config:generation EQ 'queued' ) OR ( l.task:state:last_product_id EQ 0 ) }">
			<MvASSIGN NAME = "l.sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.fields ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.resume_query"	VALUE = "{ l.query }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.resume_query, 'prod.id > ?', [ g.Module_Library_DB ].SQL_Query_Field( l.task:state:last_product_id ) ) }">
			<MvASSIGN NAME = "l.sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.resume_query, l.fields ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'ProductData_Products', l.sql, l.fields, 0, 1000 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00012', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ ProductData_Products.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">

			<MvIF EXPR = "{ ( l.task:state:products_processed GT 0 ) AND ( NOT ISNULL l.task:config:completiontrigger ) AND strcasecmp( l.task:trig, l.task:config:completiontrigger ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.task:config:completiontrigger ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvCOMMENT>
		|
		| Process records
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.count"				VALUE = 0>
		<MvWHILE EXPR = "{ ( NOT ProductData_Products.d.EOF ) AND ( l.count++ LT 1000 ) }">
			<MvASSIGN NAME = "l.task:state:last_product_id"	VALUE = "{ ProductData_Products.d.id }">

			<MvIF EXPR = "{ NOT ProductDataQueue_Delete_All_Product( l.productdatafield:id, ProductData_Products.d.id ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvCOMMENT>
			|
			| Page-level settings are reset between iterations to prevent leakage from one product to another
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ ProductDataField_Page_Reset( l.page ) }">

			<MvREFERENCE NAME = "l.product"								VARIABLE = "l.page:settings:product">

			<MvREFERENCE NAME = "l.product:id"							VARIABLE = "ProductData_Products.d.id">
			<MvREFERENCE NAME = "l.product:catcount"					VARIABLE = "ProductData_Products.d.catcount">
			<MvREFERENCE NAME = "l.product:cancat_id"					VARIABLE = "ProductData_Products.d.cancat_id">
			<MvREFERENCE NAME = "l.product:agrpcount"					VARIABLE = "ProductData_Products.d.agrpcount">
			<MvREFERENCE NAME = "l.product:pgrpcount"					VARIABLE = "ProductData_Products.d.pgrpcount">
			<MvREFERENCE NAME = "l.product:disp_order"					VARIABLE = "ProductData_Products.d.disp_order">
			<MvREFERENCE NAME = "l.product:page_code"					VARIABLE = "ProductData_Products.d.page_code">
			<MvREFERENCE NAME = "l.product:code"						VARIABLE = "ProductData_Products.d.code">
			<MvREFERENCE NAME = "l.product:sku"							VARIABLE = "ProductData_Products.d.sku">
			<MvREFERENCE NAME = "l.product:name"						VARIABLE = "ProductData_Products.d.name">
			<MvREFERENCE NAME = "l.product:page_title"					VARIABLE = "ProductData_Products.d.page_title">
			<MvREFERENCE NAME = "l.product:thumbnail"					VARIABLE = "ProductData_Products.d.thumbnail">
			<MvREFERENCE NAME = "l.product:image"						VARIABLE = "ProductData_Products.d.image">
			<MvREFERENCE NAME = "l.product:price"						VARIABLE = "ProductData_Products.d.price">
			<MvREFERENCE NAME = "l.product:cost"						VARIABLE = "ProductData_Products.d.cost">
			<MvREFERENCE NAME = "l.product:descrip"						VARIABLE = "ProductData_Products.d.descrip">
			<MvREFERENCE NAME = "l.product:weight"						VARIABLE = "ProductData_Products.d.weight">
			<MvREFERENCE NAME = "l.product:taxable"						VARIABLE = "ProductData_Products.d.taxable">
			<MvREFERENCE NAME = "l.product:active"						VARIABLE = "ProductData_Products.d.active">
			<MvREFERENCE NAME = "l.product:original_active"				VARIABLE = "ProductData_Products.d.active">
			<MvREFERENCE NAME = "l.product:dt_created"					VARIABLE = "ProductData_Products.d.dt_created">
			<MvREFERENCE NAME = "l.product:dt_updated"					VARIABLE = "ProductData_Products.d.dt_updated">

			<MvIF EXPR = "{ l.settings:load:cancat }">
				<MvREFERENCE NAME = "l.product:canonical_category"		VARIABLE = "ProductData_Products.d.cancat_code">
			</MvIF>

			<MvIF EXPR = "{ l.settings:load:page }">
				<MvREFERENCE NAME = "l.product:page_id"					VARIABLE = "ProductData_Products.d.page_id">
				<MvREFERENCE NAME = "l.product:alternate_display_page"	VARIABLE = "ProductData_Products.d.page_code">
			</MvIF>

			<MvIF EXPR = "{ l.settings:load:saleprice }">
				<MvREFERENCE NAME = "l.product:sale_price"				VARIABLE = "ProductData_Products.d.sale_price">
			</MvIF>

			<MvIF EXPR = "{ l.settings:load:discounts }">
				<MvREFERENCE NAME = "l.product:discounts"				VARIABLE = "l.discounts">
				<MvREFERENCE NAME = "l.product:discount_count"			VARIABLE = "l.discount_count">
			</MvIF>

			<MvIF EXPR = "{ l.settings:load:link }">
				<MvASSIGN NAME = "l.product:link"						VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Product_URL( l.product, l.product_url_flags ) }">
				<MvREFERENCE NAME = "l.product:url"						VARIABLE = "l.product:link">
			</MvIF>

			<MvIF EXPR = "{ l.settings:load:inventory }">
				<MvEVAL EXPR = "{ ProductData_InventoryFields_Read( l.inventorysettings, l.product ) }">
			</MvIF>

			<MvIF EXPR = "{ l.settings:load:discounts OR ( l.settings:load:saleprice AND ISNULL l.product:sale_price ) }">
				<MvASSIGN NAME = "l.product:retail"			VALUE = "{ ProductData_Products.d.price }">
				<MvASSIGN NAME = "l.product:base_price"		VALUE = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Adjusted_Price( l.discount_state, l.product, l.product:price, l.product:cost ) }">

				<MvASSIGN NAME = "l.discounts"				VALUE = "">
				<MvASSIGN NAME = "l.discount_count"			VALUE = 0>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_Predict_Product_Discounts_WithProductSubscriptionTerm( l.discount_state, l.product, 0, 0, 1, l.product:price, l.discounts, l.discount_count ) }">
					<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.settings:load:saleprice }">
				<MvASSIGN NAME = "l.product:retail"			VALUE = "{ ProductData_Products.d.price }">
				<MvASSIGN NAME = "l.product:base_price"		VALUE = "{ ProductData_Products.d.base_price }">

				<MvIF EXPR = "{ NOT ISNULL l.product:sale_price }">
					<MvASSIGN NAME = "l.product:price"		VALUE = "{ l.product:sale_price }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.customfield_count }">
				<MvEVAL EXPR = "{ ProductData_Query_CustomFields_Read( l.query, 'ProductData_Products', l.product ) }">
			</MvIF>

			<MvASSIGN NAME = "l.productdata:product_id"		VALUE = "{ l.product:id }">
			<MvASSIGN NAME = "l.productdata:value"			VALUE = "">

			<MvCOMMENT>
			|
			| Set the session generating flag during generation to prevent recursive queueing due to operations
			| inside the generation template.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "g.Session:cache:productdata:generating"	VALUE = 1>
			<MvASSIGN NAME = "l.result"									VALUE = "{ ProductDataField_Page_Render( l.page, l.template, l.productdata:value ) }">
			<MvASSIGN NAME = "g.Session:cache:productdata:generating"	VALUE = 0>

			<MvIF EXPR = "{ NOT l.result }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ ISNULL l.productdata:value }">
				<MvIF EXPR = "{ NOT ProductData_Delete( l.productdatafield:id, l.productdata:product_id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ NOT ProductData_InsertOrUpdate( l.productdatafield:id, l.productdata ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvCOMMENT>
			|
			| Handle execution limits, if configured
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ ( l.task:config:max_products AND ( ++l.task:state:products_processed GE l.task:config:max_products ) ) OR
							( l.task:state:dtstamp_end AND ( s.dyn_time_t GE l.task:state:dtstamp_end ) ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">

				<MvIF EXPR = "{ ( NOT ISNULL l.task:config:completiontrigger ) AND strcasecmp( l.task:trig, l.task:config:completiontrigger ) }">
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.task:config:completiontrigger ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvCOMMENT>
			|
			| Handle recycle, if necessary
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_RecycleRecommended() }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">
				<MvFUNCTIONRETURN VALUE = -1>
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "ProductData_Products" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData_Products">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Provision_Settings" PARAMETERS = "module var, task var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation NE 'generate' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00013', 'Unsupported operation' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'R',		l.provide_xml, 'Field',					l.task:config:field_code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List(		'R',		l.provide_xml, 'Generation',			l.task:config:generation,
																								   'Queued,All,Active', 'queued,all,active' )				OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O:nonneg',	l.provide_xml, 'MaxProducts',			l.task:config:max_products )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Integer(	'O:nonneg',	l.provide_xml, 'MaxSeconds',			l.task:config:max_seconds )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'o:50',		l.provide_xml, 'TriggerOnCompletion',	l.task:config:completiontrigger ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.task:config:field_code, l.productdatafield ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Field \'' $ l.task:config:field_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( NOT ISNULL l.task:config:completiontrigger ) AND ( NOT strcasecmp( l.task:config:completiontrigger, l.task:trig ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'A task cannot trigger itself on completion' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'GT_PAGE/' $ l.item $ ':Product Data Field' }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields:load:link"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:link ) }">
	<MvASSIGN NAME = "l.fields:load:cancat"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:cancat ) }">
	<MvASSIGN NAME = "l.fields:load:page"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:page ) }">
	<MvASSIGN NAME = "l.fields:load:inventory"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:inventory ) }">
	<MvASSIGN NAME = "l.fields:load:saleprice"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:saleprice ) }">
	<MvASSIGN NAME = "l.fields:load:discounts"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.fields:load:discounts ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:load:link"			VALUE = "{ l.fields:load:link }">
	<MvASSIGN NAME = "l.settings:load:cancat"		VALUE = "{ l.fields:load:cancat }">
	<MvASSIGN NAME = "l.settings:load:page"			VALUE = "{ l.fields:load:page }">
	<MvASSIGN NAME = "l.settings:load:inventory"	VALUE = "{ l.fields:load:inventory }">
	<MvASSIGN NAME = "l.settings:load:saleprice"	VALUE = "{ l.fields:load:saleprice }">
	<MvASSIGN NAME = "l.settings:load:discounts"	VALUE = "{ l.fields:load:discounts }">

	<MvASSIGN NAME = "l.selectedfield_count"		VALUE = "{ [ g.Module_Library_Utilities ].CustomFieldSelect_Selected( l.fields:fields_custom, l.settings:fields_custom ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00014', l.module:name $ ' \'' $ l.item $ '\' settings updated' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.load_fields }">
		<MvASSIGN NAME = "l.fields:load:link"			VALUE = "{ l.settings:load:link }">
		<MvASSIGN NAME = "l.fields:load:cancat"			VALUE = "{ l.settings:load:cancat }">
		<MvASSIGN NAME = "l.fields:load:page"			VALUE = "{ l.settings:load:page }">
		<MvASSIGN NAME = "l.fields:load:inventory"		VALUE = "{ l.settings:load:inventory }">
		<MvASSIGN NAME = "l.fields:load:saleprice"		VALUE = "{ l.settings:load:saleprice }">
		<MvASSIGN NAME = "l.fields:load:discounts"		VALUE = "{ l.settings:load:discounts }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].InitializeCustomFieldSelect( l.settings:fields_custom, l.fields:fields_custom ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( l.tab, l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'load:link,load:cancat,load:page,load:inventory,load:saleprice,load:discounts,fields_custom' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'GT_PAGE', l.item ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].TUI_Hide_ComponentFields( l.field_prefix, 'template_filename' ) }">

		<table border="0" cellpadding="2" cellspacing="0" width="100%">
		<tr><td>
			&nbsp;
		</td><td align="left" width="100%">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:link,		l.field_prefix $ 'load:link',		1, 'Load Canonical URL' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:cancat,		l.field_prefix $ 'load:cancat',		1, 'Load Canonical Category Code' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:page,		l.field_prefix $ 'load:page',		1, 'Load Alternate Display Page Code' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:inventory,	l.field_prefix $ 'load:inventory',	1, 'Load Inventory' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:saleprice,	l.field_prefix $ 'load:saleprice',	1, 'Load Sale Price' ) }"><br />
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( l.fields:load:discounts,	l.field_prefix $ 'load:discounts',	1, 'Predict Discounts' ) }">
		</td>

		<MvASSIGN NAME = "l.customfield_count" VALUE = "{ [ g.Module_Library_Utilities ].ProductCustomFieldList_Load( l.customfields ) }">
		<MvIF EXPR = "{ l.customfield_count }">
			<tr><td align="left" valign="top" nowrap>
				<b>Custom Fields:</b>
			</td><td align="left" width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCustomFieldSelect( l.field_prefix $ 'fields_custom', l.fields:fields_custom, l.customfields, l.customfield_count ) }">
			</td></tr>
		</MvIF>
		</table>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Defaults" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:load:link"			VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:cancat"		VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:page"			VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:inventory"	VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:saleprice"	VALUE = 0>
	<MvASSIGN NAME = "l.settings:load:discounts"	VALUE = 0>
	<MvASSIGN NAME = "l.settings:fields_custom"		VALUE = "">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Render_Start" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvCOMMENT>
|
| Component Provisioning Feature (component_prov)
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Provision" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.item ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ l.item EQ 'productdatafield' }">	<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldComponentModule_Provision( l.module, l.provide_xml, l.settings ) }">
	<MvELSEIF EXPR = "{ l.item EQ 'productdatafeed' }">	<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedComponentModule_Provision( l.module, l.provide_xml, l.settings ) }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Unknown item \'' $ l.item $ '\'' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Provision_CustomFields" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.settings:fields_custom"		VALUE = "">

	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"					VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'customfield' }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child_xml, 'module',	l.module_module ) OR
							NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.child_xml, 'code',	l.module_code ) }">
				<MvFUNCTIONRETURN>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code( l.module_module, l.customfield_module ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.child_xml ) }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Module not found' ) }">
			<MvELSEIF EXPR = "{ NOT l.customfield_module:feature_hash:fields_prod }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Module \'' $ l.customfield_module:name $ '\' does not implement the fields_prod feature' ) }">
			<MvELSEIF EXPR = "{ NOT l.customfield_module:active }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Module \'' $ l.customfield_module:name $ '\' has been deactivated' ) }">
			<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module( l.customfield_module:id ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Module \'' $ l.customfield_module:name $ '\' is not installed in store \'' $ g.Store:code $ '\'' ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.customfield"		VALUE = "">
				<MvASSIGN NAME = "l.customfield:module"	VALUE = "{ l.module_module }">
				<MvASSIGN NAME = "l.customfield:code"	VALUE = "{ l.module_code }">

				<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_var( l.settings:fields_custom, l.customfield, -1 ) }">
			</MvIF>
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.child_xml, 'Unknown tag' ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldComponentModule_Provision" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.working_settings"	VALUE = "{ l.settings }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadCanonicalURL',				l.working_settings:load:link )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadCanonicalCategoryCode',	l.working_settings:load:cancat )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadAlternateDisplayPageCode',	l.working_settings:load:page )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadInventory',				l.working_settings:load:inventory )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadSalePrice',				l.working_settings:load:saleprice )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'PredictDiscounts',				l.working_settings:load:discounts ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'CustomFields' ) }">
		<MvIF EXPR = "{ NOT ComponentModule_Provision_CustomFields( l.module, l.provide_xml:tags:CustomFields[ 1 ], l.working_settings ) }">
			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.settings" VALUE = "{ l.working_settings }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedComponentModule_Provision" PARAMETERS = "module var, provide_xml var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateAndVersion_Load_Filename( l.settings:template_filename, l.managedtemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.working_settings"	VALUE = "{ l.settings }">
	<MvASSIGN NAME = "l.source"				VALUE = "{ l.managedtemplate:version:source }">
	<MvASSIGN NAME = "l.notes"				VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadProduct',		l.working_settings:load:product )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadInventory',	l.working_settings:load:inventory )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'LoadSalePrice',	l.working_settings:load:saleprice )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml,	'PredictDiscounts',	l.working_settings:load:discounts )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml,	'Notes',			l.notes ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'CustomFields' ) }">
		<MvIF EXPR = "{ NOT ComponentModule_Provision_CustomFields( l.module, l.provide_xml:tags:CustomFields[ 1 ], l.working_settings ) }">
			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Template' ) }">
		<MvASSIGN NAME = "l.source"			VALUE = "{ trim( l.provide_xml:tags:Template[ 1 ]:value ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_CreateIfModified_ManagedTemplateVersion( l.managedtemplate, l.notes, l.source, l.working_settings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogError( l.provide_xml ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings" VALUE = "{ l.working_settings }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Framework Export Feature (skins)
|
</MvCOMMENT>

<MvFUNCTION NAME = "SkinsComponentModule_Description" PARAMETERS = "module var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pages" VALUE = "{ [ g.Module_Feature_TUI_DB ].Item_Load_PageList( l.item ) }">

	<MvFUNCTIONRETURN VALUE = "{ 'Exports ' $ l.module:name $ ' settings for item ' $ l.item:code $ ' from pages: ' $ l.pages }">
</MvFUNCTION>

<MvFUNCTION NAME = "SkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item:code EQ 'productdatafield' }">		<MvFUNCTIONRETURN VALUE = "{ ProductDataFieldSkinsComponentModule_Export_Item( l.module, l.item, l.output ) }">
	<MvELSEIF EXPR = "{ l.item:code EQ 'productdatafeed' }">	<MvFUNCTIONRETURN VALUE = "{ ProductDataFeedSkinsComponentModule_Export_Item( l.module, l.item, l.output ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldSkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.output" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item_Runtime( l.item:id, l.pages ) }">
			<Page_Update code="{ encodeentities( l.page:code ) }">
				<Item code="{ encodeentities( l.item:code ) }">
					<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
						<MvMEMBER NAME = "{ l.item:code }">
					</MvREFERENCEARRAY>

					<LoadCanonicalURL><MvIF EXPR = "{ l.settings:load:link }">Yes<MvELSE>No</MvIF></LoadCanonicalURL>
					<LoadCanonicalCategoryCode><MvIF EXPR = "{ l.settings:load:cancat }">Yes<MvELSE>No</MvIF></LoadCanonicalCategoryCode>
					<LoadAlternateDisplayPageCode><MvIF EXPR = "{ l.settings:load:page }">Yes<MvELSE>No</MvIF></LoadAlternateDisplayPageCode>
					<LoadInventory><MvIF EXPR = "{ l.settings:load:inventory }">Yes<MvELSE>No</MvIF></LoadInventory>
					<LoadSalePrice><MvIF EXPR = "{ l.settings:load:saleprice }">Yes<MvELSE>No</MvIF></LoadSalePrice>
					<PredictDiscounts><MvIF EXPR = "{ l.settings:load:discounts }">Yes<MvELSE>No</MvIF></PredictDiscounts>

					<CustomFields>
						<MvFOREACH ITERATOR = "l.custom_field" ARRAY = "l.settings:fields_custom">
							<CustomField module="{ encodeentities( l.custom_field:module ) }" code="{ encodeentities( l.custom_field:code ) }" />
						</MvFOREACH>
					</CustomFields>
				</Item>
			</Page_Update>
		</MvFOREACH>
	</MvCAPTURE>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeedSkinsComponentModule_Export_Item" PARAMETERS = "module var, item, output var" STANDARDOUTPUTLEVEL = "">
	<MvCAPTURE VARIABLE = "l.output" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvFOREACH ITERATOR = "l.page" ARRAY = "l.pages" COUNT = "{ [ g.Module_Feature_TUI_DB ].PageList_Load_Item_Runtime( l.item:id, l.pages ) }">
			<Page_Update code="{ encodeentities( l.page:code ) }">
				<Item code="{ encodeentities( l.item:code ) }">
					<MvREFERENCEARRAY NAME = "l.settings" VARIABLE = "l.page:settings">
						<MvMEMBER NAME = "{ l.item:code }">
					</MvREFERENCEARRAY>

					<LoadProduct><MvIF EXPR = "{ l.settings:load:product }">Yes<MvELSE>No</MvIF></LoadProduct>
					<LoadInventory><MvIF EXPR = "{ l.settings:load:inventory }">Yes<MvELSE>No</MvIF></LoadInventory>
					<LoadSalePrice><MvIF EXPR = "{ l.settings:load:saleprice }">Yes<MvELSE>No</MvIF></LoadSalePrice>
					<PredictDiscounts><MvIF EXPR = "{ l.settings:load:discounts }">Yes<MvELSE>No</MvIF></PredictDiscounts>

					<CustomFields>
						<MvFOREACH ITERATOR = "l.custom_field" ARRAY = "l.settings:fields_custom">
							<CustomField module="{ encodeentities( l.custom_field:module ) }" code="{ encodeentities( l.custom_field:code ) }" />
						</MvFOREACH>
					</CustomFields>

					<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Filename_Current( l.settings:template_filename, l.templateversion ) }">
						<Template><MvEVAL EXPR = "{ miva_cdata_encode( l.templateversion:source ) }"></Template>
					</MvIF>

					<Notes>#Set_Current_Time#</Notes>
				</Item>
			</Page_Update>
		</MvFOREACH>
	</MvCAPTURE>
</MvFUNCTION>

<MvCOMMENT>
|
| Product Custom Fields Feature (fields_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Product_Field_Capabilities" PARAMETERS = "module var, code, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities"						VALUE = "">

	<MvIF EXPR = "{ NOT ProductDataField_Load_CustomFieldCode_Cached( l.code, l.null, l.productdatafield ) }">
		<MvASSIGN NAME = "l.capabilities:query"				VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search"			VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:search_fulltext"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"			VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby_relevance"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.capabilities:query"				VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search"			VALUE = 1>
		<MvASSIGN NAME = "l.capabilities:search_fulltext"	VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby"			VALUE = 0>
		<MvASSIGN NAME = "l.capabilities:orderby_relevance"	VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Name" PARAMETERS = "module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ProductDataField_Load_CustomFieldCode_Cached( l.code, l.field_type, l.productdatafield ) }">
		<MvIF EXPR = "{ l.field_type EQ 'queued' }">		<MvFUNCTIONRETURN VALUE = "{ l.productdatafield:name $ ' Queued for Update' }">
		<MvELSEIF EXPR = "{ l.field_type EQ 'dtstamp' }">	<MvFUNCTIONRETURN VALUE = "{ l.productdatafield:name $ ' Last Updated' }">
		<MvELSEIF EXPR = "{ l.field_type EQ 'value' }">		<MvFUNCTIONRETURN VALUE = "{ l.productdatafield:name }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value" PARAMETERS = "module var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductDataField_Load_CustomFieldCode_Cached( l.code, l.field_type, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ l.field_type EQ 'queued' }">
		<MvIF EXPR = "{ ProductDataQueueList_Load_Product( l.productdatafield:id, l.product_id, l.null ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.field_type EQ 'dtstamp' OR l.field_type EQ 'value' }">
		<MvIF EXPR = "{ NOT ProductData_Load( l.productdatafield:id, l.product_id, l.productdata ) }">
			<MvFUNCTIONRETURN VALUE = "">
		</MvIF>

		<MvIF EXPR = "{ l.field_type EQ 'value' }">
			<MvFUNCTIONRETURN VALUE = "{ l.productdata:value }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ l.productdata:dtstamp }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Value_Array" PARAMETERS = "module var, product_id, code, values var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Fields" PARAMETERS = "module var, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields"				VALUE = "">
	<MvASSIGN NAME = "l.field_count"		VALUE = 0>

	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.productdatafields" COUNT = "{ ProductDataFieldList_Load_All_Cached( l.productdatafields ) }">
		<MvASSIGN NAME = "l.field"				VALUE = "">
		<MvASSIGN NAME = "l.field:code"			VALUE = "{ 'queued_' $ l.productdatafield:code }">
		<MvASSIGN NAME = "l.field:name"			VALUE = "{ l.productdatafield:name $ ' Queued for Update' }">
		<MvASSIGN NAME = "l.field:type"			VALUE = "checkbox">
		<MvASSIGN NAME = "l.field:readonly"		VALUE = 0>
		<MvASSIGN NAME = "l.field:public"		VALUE = 0>
		<MvASSIGN NAME = "l.field_count"		VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">

		<MvASSIGN NAME = "l.field"				VALUE = "">
		<MvASSIGN NAME = "l.field:code"			VALUE = "{ 'dtstamp_' $ l.productdatafield:code }">
		<MvASSIGN NAME = "l.field:name"			VALUE = "{ l.productdatafield:name $ ' Last Update' }">
		<MvASSIGN NAME = "l.field:type"			VALUE = "datetime">
		<MvASSIGN NAME = "l.field:readonly"		VALUE = 1>
		<MvASSIGN NAME = "l.field:public"		VALUE = 0>
		<MvASSIGN NAME = "l.field_count"		VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">

		<MvASSIGN NAME = "l.field"				VALUE = "">
		<MvASSIGN NAME = "l.field:code"			VALUE = "{ l.productdatafield:code }">
		<MvASSIGN NAME = "l.field:name"			VALUE = "{ l.productdatafield:name }">
		<MvASSIGN NAME = "l.field:type"			VALUE = "textarea">
		<MvASSIGN NAME = "l.field:readonly"		VALUE = 0>
		<MvASSIGN NAME = "l.field:public"		VALUE = "{ l.productdatafield:is_public }">
		<MvASSIGN NAME = "l.field_count"		VALUE = "{ miva_array_insert_var( l.fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field" PARAMETERS = "module var, product_id, code, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductDataField_Load_CustomFieldCode_Cached( l.code, l.field_type, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.field_type EQ 'queued' }">
		<MvIF EXPR = "{ NOT l.value }">
			<MvFUNCTIONRETURN VALUE = "{ ProductDataQueue_Delete( l.productdatafield:id, l.product_id, 'Q' ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT ProductDataQueue_Insert_Ignore( l.productdatafield:id, l.product_id, 'Q' ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT ISNULL l.productdatafield:trig }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.productdatafield:trig ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	<MvELSEIF EXPR = "{ l.field_type EQ 'dtstamp' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00015', 'Field is read only' ) }">
	<MvELSEIF EXPR = "{ l.field_type EQ 'value' }">
		<MvASSIGN NAME = "l.productdata"			VALUE = "">
		<MvASSIGN NAME = "l.productdata:product_id"	VALUE = "{ l.product_id }">
		<MvASSIGN NAME = "l.productdata:value"		VALUE = "{ l.value }">

		<MvFUNCTIONRETURN VALUE = "{ ProductData_InsertOrUpdate( l.productdatafield:id, l.productdata ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00016', 'Unsupported field type' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Set_Field_Array" PARAMETERS = "module var, product_id, code, values var, value_count" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00017', 'Custom field code \'' $ l.code $ '\' does not support arrays' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query" PARAMETERS = "module var, query var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductData_Product_Field_TableAndAlias( l.module, l.code, l.field_type, l.table, l.alias ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ProductData_Product_Field_Query( l.module, l.query, l.field_type, l.table, l.alias ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_Search" PARAMETERS = "module var, query var, code, operator, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductData_Product_Field_TableAndAlias( l.module, l.code, l.field_type, l.table, l.alias ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductData_Product_Field_Query( l.module, l.query, l.field_type, l.table, l.alias ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.field_type EQ 'dtstamp' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, 'NUMBER', l.alias $ '.dtstamp', l.operator, l.value, 'OR', 'AND' ) }">
	<MvELSEIF EXPR = "{ l.field_type EQ 'value' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, 'CHAR', l.alias $ '.value', l.operator, l.value, 'OR', 'AND' ) }">
	<MvELSEIF EXPR = "{ l.field_type EQ 'queued' }">
		<MvIF EXPR = "{ l.operator EQ 'TRUE' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.alias $ '_q.product_id IS NOT NULL OR ' $ l.alias $ '_p.product_id IS NOT NULL )', '' ) }">
		<MvELSEIF EXPR = "{ l.operator EQ 'FALSE' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.alias $ '_q.product_id IS NULL AND ' $ l.alias $ '_p.product_id IS NULL )', '' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_OrderBy" PARAMETERS = "module var, query var, code, direction" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00018', 'Custom field code \'' $ l.code $ '\' does not support sorting' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_OrderBy_LoadIndexRecord" PARAMETERS = "module var, loaded_record var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00019', 'Custom field code \'' $ l.code $ '\' does not support sorting' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Product_Field_TableAndAlias" PARAMETERS = "module var, customfield_code, field_type var, table var, alias var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductDataField_Load_CustomFieldCode_Cached( l.customfield_code, l.field_type, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.productdatafield:id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00114', 'Invalid Product Data Field' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.field_type EQ 'queued' }">
		<MvASSIGN NAME = "l.table"		VALUE = "{ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) }">
		<MvASSIGN NAME = "l.alias"		VALUE = "{ 'pdq_' $ int( l.productdatafield:id ) }">
	<MvELSEIF EXPR = "{ l.field_type EQ 'dtstamp' OR l.field_type EQ 'value' }">
		<MvASSIGN NAME = "l.table"		VALUE = "{ g.Store_Table_Prefix $ 'ProductData_' $ int( l.productdatafield:id ) }">
		<MvASSIGN NAME = "l.alias"		VALUE = "{ 'pd_' $ int( l.productdatafield:id ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00020', 'Unsupported field type' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Product_Field_Query" PARAMETERS = "module var, query var, field_type, table, alias" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, l.module:code, l.ref ) }">

	<MvREFERENCEARRAY NAME = "l.data" VARIABLE = "l.ref:data">
		<MvMEMBER NAME = "{ l.alias }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ NOT l.data:joined }">
		<MvIF EXPR = "{ l.field_type EQ 'queued' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', l.table, l.alias $ '_q', l.alias $ '_q.product_id = prod.id AND ' $ l.alias $ '_q.status = \'Q\'', '' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', l.table, l.alias $ '_p', l.alias $ '_p.product_id = prod.id AND ' $ l.alias $ '_p.status = \'P\'', '' ) }">
		<MvELSEIF EXPR = "{ l.field_type EQ 'dtstamp' OR l.field_type EQ 'value' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', l.table, l.alias, l.alias $ '.product_id = prod.id', '' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.data:joined"	VALUE = 1>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.selected" VARIABLE = "l.data">
		<MvMEMBER NAME = "{ l.field_type }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ NOT l.selected }">
		<MvIF EXPR = "{ l.field_type EQ 'queued' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, [ g.Module_Library_Native_DBAPI ].DB_IFNULL( l.alias $ '_q.product_id', l.alias $ '_p.product_id' ) $ ' AS ' $ l.alias $ '_queued' ) }">
		<MvELSEIF EXPR = "{ l.field_type EQ 'dtstamp' }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.alias $ '.dtstamp AS ' $ l.alias $ '_dtstamp' ) }">
		<MvELSEIF EXPR = "{ l.field_type EQ 'value' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, l.alias $ '.value AS ' $ l.alias $ '_value' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.selected"		VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Field_Query_Value" PARAMETERS = "module var, view_name, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ProductData_Product_Field_TableAndAlias( l.module, l.code, l.field_type, l.table, l.alias ) }">
		<MvIF EXPR = "{ l.field_type EQ 'queued' }">		<MvFUNCTIONRETURN VALUE = "{ NOT ISNULL miva_variable_value( l.view_name $ '.d.' $ l.alias $ '_queued' ) }">
		<MvELSEIF EXPR = "{ l.field_type EQ 'dtstamp' }">	<MvFUNCTIONRETURN VALUE = "{ miva_variable_value( l.view_name $ '.d.' $ l.alias $ '_dtstamp' ) }">
		<MvELSEIF EXPR = "{ l.field_type EQ 'value' }">		<MvFUNCTIONRETURN VALUE = "{ miva_variable_value( l.view_name $ '.d.' $ l.alias $ '_value' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Configuration Change Notification Feature (not_prod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Product_Insert" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_prod', l.product:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Update" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_prod', l.product:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Delete" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.productdatafields" COUNT = "{ ProductDataFieldList_Load_All_Cached( l.productdatafields ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ ProductDataQueue_Delete_All_Product( l.productdatafield:id, l.product:id ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ ProductData_Delete( l.productdatafield:id, l.product:id ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_Copy" PARAMETERS = "module var, source_product var, dest_product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_prod', l.dest_product:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_LowStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Product_OutOfStock" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Attribute / Option Configuration Change Notification Feature (not_attr)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Attribute_Insert" PARAMETERS = "module var, attribute var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_attr', l.attribute:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Attribute_Update" PARAMETERS = "module var, attribute var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_attr', l.attribute:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Attribute_Delete" PARAMETERS = "module var, attribute var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_attr', l.attribute:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Option_Insert" PARAMETERS = "module var, option var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_attr', l.option:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Option_Update" PARAMETERS = "module var, option var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_attr', l.option:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Option_Delete" PARAMETERS = "module var, option var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_attr', l.option:product_id, '' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Attribute / Option Configuration Change Notification Feature (not_attemp)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplate_Insert" PARAMETERS = "module var, attributetemplate var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplate_Update" PARAMETERS = "module var, attributetemplate var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplate_Delete" PARAMETERS = "module var, attributetemplate var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplateAttr_Insert" PARAMETERS = "module var, attributetemplateattr var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AttributeTemplateProducts( l.attributetemplateattr:attemp_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplateAttr_Update" PARAMETERS = "module var, attributetemplateattr var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AttributeTemplateProducts( l.attributetemplateattr:attemp_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplateAttr_Delete" PARAMETERS = "module var, attributetemplateattr var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AttributeTemplateProducts( l.attributetemplateattr:attemp_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplateOption_Insert" PARAMETERS = "module var, attributetemplateoption var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AttributeTemplateProducts( l.attributetemplateoption:attemp_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplateOption_Update" PARAMETERS = "module var, attributetemplateoption var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AttributeTemplateProducts( l.attributetemplateoption:attemp_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AttributeTemplateOption_Delete" PARAMETERS = "module var, attributetemplateoption var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AttributeTemplateProducts( l.attributetemplateoption:attemp_id ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Related Product Configuration Change Notification Feature (not_relprod)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_RelatedProduct_Insert" PARAMETERS = "module var, product_id, relprod_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_relprod', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_RelatedProduct_Delete" PARAMETERS = "module var, product_id, relprod_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_relprod', l.product_id, '' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Inventory Change Notification Feature (not_inventory)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_InventorySettings_Update" PARAMETERS = "module var, inventorysettings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_InventoryProductSettings_Update" PARAMETERS = "module var, product_id, inventoryproductsettings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_inv', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_InventoryProductCount_Update" PARAMETERS = "module var, product_id, inventory" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_inv', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_InventoryProductCount_Adjust" PARAMETERS = "module var, product_id, adjust" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_inv', l.product_id, '' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Image Configuration Change Notification Feature (not_prodimage)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_ProductImage_Insert" PARAMETERS = "module var, productimage var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_pimage', l.productimage:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_ProductImage_Update" PARAMETERS = "module var, original_productimage var, productimage var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_pimage', l.productimage:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_ProductImage_Delete" PARAMETERS = "module var, productimage var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_pimage', l.productimage:product_id, '' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Variant Configuration Change Notification Feature (not_variant)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_ProductVariant_Insert" PARAMETERS = "module var, product var, variant_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_variant', l.product:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_ProductVariant_Update" PARAMETERS = "module var, product var, variant_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_variant', l.product:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_ProductVariant_Delete" PARAMETERS = "module var, product var, variant_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_variant', l.product:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_ProductVariant_Generate" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_variant', l.product:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_ProductVariant_Delete_All_Product" PARAMETERS = "module var, product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_variant', l.product:id, '' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Price Group Change Notification Feature (not_pricegroup)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_PriceGroup_Insert" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_PriceGroupProducts( l.pricegroup ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroup_Copy" PARAMETERS = "module var, source_pricegroup var, dest_pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_PriceGroupProducts( l.dest_pricegroup ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroup_Update" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_PriceGroupProducts( l.pricegroup ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroup_Delete" PARAMETERS = "module var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_PriceGroupProducts( l.pricegroup ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXCustomer_Insert" PARAMETERS = "module var, pgrp_id, cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXCustomer_Delete" PARAMETERS = "module var, pgrp_id, cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXProduct_Insert" PARAMETERS = "module var, pgrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_pgrp', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXProduct_Delete" PARAMETERS = "module var, pgrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_pgrp', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXExcludedProduct_Insert" PARAMETERS = "module var, pgrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_pgrp', l.product_id, 'ignore_variants' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXExcludedProduct_Delete" PARAMETERS = "module var, pgrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_pgrp', l.product_id, 'ignore_variants' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXQualifyingProduct_Insert" PARAMETERS = "module var, pgrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXQualifyingProduct_Delete" PARAMETERS = "module var, pgrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXProductSubscription_Insert" PARAMETERS = "module var, pgrp_id, product_id, subterm_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXProductSubscription_Delete" PARAMETERS = "module var, pgrp_id, product_id, subterm_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXExcludedProductSubscription_Insert" PARAMETERS = "module var, pgrp_id, product_id, subterm_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXExcludedProductSubscription_Delete" PARAMETERS = "module var, pgrp_id, product_id, subterm_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXQualifyingProductSubscription_Insert" PARAMETERS = "module var, pgrp_id, product_id, subterm_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXQualifyingProductSubscription_Delete" PARAMETERS = "module var, pgrp_id, product_id, subterm_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXCategory_Insert" PARAMETERS = "module var, pgrp_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_CategoryProducts( 'on_pgrp', l.cat_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXCategory_Delete" PARAMETERS = "module var, pgrp_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_CategoryProducts( 'on_pgrp', l.cat_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXExcludedCategory_Insert" PARAMETERS = "module var, pgrp_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_CategoryProducts( 'on_pgrp', l.cat_id, 'ignore_variants' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_PriceGroupXExcludedCategory_Delete" PARAMETERS = "module var, pgrp_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_CategoryProducts( 'on_pgrp', l.cat_id, 'ignore_variants' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Availability Group Configuration Change Notification Feature (not_availgroup)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroup_Insert" PARAMETERS = "module var, availabilitygroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AvailabilityGroupProducts( l.availabilitygroup ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroup_Update" PARAMETERS = "module var, availabilitygroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AvailabilityGroupProducts( l.availabilitygroup ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroup_Delete" PARAMETERS = "module var, availabilitygroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_AvailabilityGroupProducts( l.availabilitygroup ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroupXProduct_Insert" PARAMETERS = "module var, agrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_agrp', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroupXProduct_Delete" PARAMETERS = "module var, agrp_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_agrp', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroupXCategory_Insert" PARAMETERS = "module var, agrp_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_CategoryProducts( 'on_agrp', l.cat_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroupXCategory_Delete" PARAMETERS = "module var, agrp_id, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_CategoryProducts( 'on_agrp', l.cat_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroupXCustomer_Insert" PARAMETERS = "module var, agrp_id, cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailabilityGroupXCustomer_Delete" PARAMETERS = "module var, agrp_id, cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailGroupXBusinessAccount_Insert" PARAMETERS = "module var, agrp_id, account_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailGroupXBusinessAccount_Delete" PARAMETERS = "module var, agrp_id, account_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailGroupXShippingMethod_Insert" PARAMETERS = "module var, agrp_id, mod_code, meth_code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailGroupXShippingMethod_Delete" PARAMETERS = "module var, agrp_id, mod_code, meth_code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailGroupXPaymentMethod_Insert" PARAMETERS = "module var, agrp_id, mod_code, meth_code, pctype_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_AvailGroupXPaymentMethod_Delete" PARAMETERS = "module var, agrp_id, mod_code, meth_code, pctype_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Category Configuration Change Notification Feature (not_cat)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_Category_Insert" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Category_Update" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_Category_Delete" PARAMETERS = "module var, category var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_CategoryProducts( 'on_cat', l.category:id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_CategoryXProduct_Insert" PARAMETERS = "module var, cat_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_cat', l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_CategoryXProduct_Delete" PARAMETERS = "module var, cat_id, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_cat', l.product_id, '' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| URI Change Notification Feature (not_uri)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Notify_URI_Insert" PARAMETERS = "module var, uri var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.uri:product_id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_uri', l.uri:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_URI_Update" PARAMETERS = "module var, uri var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.uri:product_id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_uri', l.uri:product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Notify_URI_Delete" PARAMETERS = "module var, uri var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.uri:product_id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ProductData_Notify_Product( 'on_uri', l.uri:product_id, '' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Store Utilities Feature (util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation" PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvCOMMENT>
|
| Utility Screen Feature (vis_util)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Utility_Tabs" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "PRODUCTDATAFIELDS:Product Data Fields">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Head" PARAMETERS = "module var, tab" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab NE 'PRODUCTDATAFIELDS' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AJAX_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_UI_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Functions_JavaScript() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
	<MvEVAL EXPR = "{ Element_ProductDataFieldList_CSS( l.module ) }">

	<MvIF EXPR = "{ Element_ProductData_JavaScript_Combined_Begin( l.module ) }">
		<MvEVAL EXPR = "{ Element_ProductDataFieldList_JavaScript( l.module ) }">
		<MvEVAL EXPR = "{ Element_ProductData_JavaScript_Combined_End( l.module ) }">
	</MvIF>

	<script language="JavaScript">
		MMScreen_LoadFinished( function() { new ProductDataFieldList(); } );
	</script>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Content" PARAMETERS = "module var, tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ Element_ProductDataFieldList_HTML( l.module ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Utility_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON Feature (json)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'ProductDataSettings_Load' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ProductDataSettings_Load( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductDataSettings_Update' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_ProductDataSettings_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductDataFieldList_Load_Query' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_ProductDataFieldList_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductDataField_Insert' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ProductDataField_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductDataField_Update' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ProductDataField_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ProductDataField_Delete' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ProductDataField_Delete( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductDataSettings_Load" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataSettings_Load( l.productdatasettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"pgrp_ignel": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productdatasettings:pgrp_ignel ) }">,
		"pgrp_ignit": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productdatasettings:pgrp_ignit ) }">,
		"pgrp_ignex": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productdatasettings:pgrp_ignex ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductDataSettings_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataSettings_Load( l.productdatasettings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'O', 'OnPriceGroupChangeIgnoresNonAnonymousShoppers',		l.productdatasettings:pgrp_ignel ) OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean( 'O', 'OnPriceGroupChangeIgnoresNonProductDiscounts',		l.productdatasettings:pgrp_ignit ) OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean( 'O', 'OnPriceGroupChangeIgnoresApplyToAllUnlessExcluded',	l.productdatasettings:pgrp_ignex ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataSettings_Update( l.productdatasettings ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00117', 'Product Data Settings updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductDataField_Load" PARAMETERS = "productdatafield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'ProductDataField_ID', l.productdatafield_id ) }">
		<MvIF EXPR = "{ NOT ProductDataField_Load_ID( l.productdatafield_id, l.productdatafield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00083', 'Product Data not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_ProductDataField', l.productdatafield_code ) }">
		<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.productdatafield_code, l.productdatafield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00030', 'Product Data not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'ProductDataField_Code', l.productdatafield_code ) }">
		<MvIF EXPR = "{ NOT ProductDataField_Load_Code( l.productdatafield_code, l.productdatafield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00031', 'Product Data not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00032', 'Unable to load product data field: One of ProductDataField_ID, Edit_ProductDataField, or ProductDataField_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductDataFieldList_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.available_filters"		VALUE = "">
	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.offset"					VALUE = 0>
	<MvASSIGN NAME = "l.count"					VALUE = 0>
	<MvASSIGN NAME = "l.query"					VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'code',			'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'name',			'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL( l.available_filters, 'is_public',	'is_public' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'page_code',	'page_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_prod',		'on_prod' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_attr',		'on_attr' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_pimage',	'on_pimage' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_variant',	'on_variant' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_inv',		'on_inv' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_relprod',	'on_relprod' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_pgrp',		'on_pgrp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_agrp',		'on_agrp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_cat',		'on_cat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'on_uri',		'on_uri' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'trig',			'trig' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductDataFields', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, 'code,name,is_public,page_code,on_prod,on_attr,on_pimage,on_variant,on_inv,on_relprod,on_pgrp,on_agrp,on_cat,on_uri,trig', 'id' ) }">

	<MvASSIGN NAME = "l.search_sql"				VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'ProductDataFields', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PDF-00021', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productdatafield_count"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT ProductDataFields.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.productdatafield_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productdatafield_count ) }">
				"id":			<MvEVAL EXPR = "{ int( ProductDataFields.d.id ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.code ) }">",
				"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.name ) }">",
				"is_public":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( ProductDataFields.d.is_public ) }">,
				"page_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.page_code ) }">",
				"on_prod":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_prod ) }">",
				"on_attr":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_attr ) }">",
				"on_pimage":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_pimage ) }">",
				"on_variant":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_variant ) }">",
				"on_inv":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_inv ) }">",
				"on_relprod":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_relprod ) }">",
				"on_pgrp":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_pgrp ) }">",
				"on_agrp":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_agrp ) }">",
				"on_cat":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_cat ) }">",
				"on_uri":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.on_uri ) }">",
				"trig":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( ProductDataFields.d.trig ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "ProductDataFields" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductDataField_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.productdatafield"				VALUE = "">
	<MvASSIGN NAME = "l.productdatafield:is_public"		VALUE = 0>
	<MvASSIGN NAME = "l.productdatafield:on_prod"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_attr"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_pimage"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_variant"	VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_inv"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_relprod"	VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_pgrp"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_agrp"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_cat"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:on_uri"		VALUE = "ignore">
	<MvASSIGN NAME = "l.productdatafield:trig"			VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R:50',		'Code',							l.productdatafield:code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R:100',	'Name',							l.productdatafield:name )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Public',						l.productdatafield:is_public )	OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnProductChange',				l.productdatafield:on_prod,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnAttributeChange',			l.productdatafield:on_attr,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnProductImageChange',			l.productdatafield:on_pimage,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnVariantChange',				l.productdatafield:on_variant,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnInventoryChange',			l.productdatafield:on_inv,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnRelatedProductChange',		l.productdatafield:on_relprod,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnPriceGroupChange',			l.productdatafield:on_pgrp,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnAvailabilityGroupChange',	l.productdatafield:on_agrp,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnCategoryChange',				l.productdatafield:on_cat,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnURIChange',					l.productdatafield:on_uri,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:50',		'Trigger',						l.productdatafield:trig ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Insert( l.module, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00085', 'Product Data Field \'' $ l.productdatafield:code $ '\' created' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductDataField_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductDataField_Load( l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'O:50',		'Code',							l.productdatafield:code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O:100',	'Name',							l.productdatafield:name )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Public',						l.productdatafield:is_public )	OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnProductChange',				l.productdatafield:on_prod,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnAttributeChange',			l.productdatafield:on_attr,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnProductImageChange',			l.productdatafield:on_pimage,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnVariantChange',				l.productdatafield:on_variant,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnInventoryChange',			l.productdatafield:on_inv,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnRelatedProductChange',		l.productdatafield:on_relprod,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnPriceGroupChange',			l.productdatafield:on_pgrp,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnAvailabilityGroupChange',	l.productdatafield:on_agrp,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnCategoryChange',				l.productdatafield:on_cat,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'o',		'OnURIChange',					l.productdatafield:on_uri,
																			'ignore,queue,queue+',
																			'ignore,queue,queue+' )											OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:50',		'Trigger',						l.productdatafield:trig ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ ProductDataField_Load_Code( l.productdatafield:code, l.existing_productdatafield ) AND l.existing_productdatafield:id NE l.productdatafield:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PDF-00028', 'Code \'' $ l.productdatafield:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Update( l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00086', 'Product Data Field \'' $ l.productdatafield:code $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductDataField_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">							<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUTL', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductDataField_Load( l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Delete( l.module, l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-UTIL-PDF-00087', 'Product Data Field \'' $ l.productdatafield:code $ '\' deleted' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Module JSON API Feature (json_api)
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON_API" PARAMETERS = "module var, function" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.function EQ 'ProductModified' }"> <MvFUNCTIONRETURN VALUE = "{ JSON_API_ProductModified( l.module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-UTIL-PDF-00057', 'Invalid function' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_API_ProductModified" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( g.Session_Type NE 'api' ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.queue"		VALUE = 0>
	<MvASSIGN NAME = "l.delete"		VALUE = 0>
	<MvASSIGN NAME = "l.trigger"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductDataField_Load( l.productdatafield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'o', 'Queue',		l.queue )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean( 'o', 'Delete',	l.delete )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean( 'o', 'Trigger',	l.trigger ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.delete }">
		<MvIF EXPR = "{ NOT ProductData_Delete( l.productdatafield:id, l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.queue }">
		<MvIF EXPR = "{ NOT ProductDataQueue_Insert_Ignore( l.productdatafield:id, l.product:id, 'Q' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.trigger AND NOT ISNULL l.productdatafield:trig }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.productdatafield:trig ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductDataFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductDataField_Read" PARAMETERS = "productdatafield var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdatafield:id"			VALUE = "{ ProductDataFields.d.id }">
	<MvASSIGN NAME = "l.productdatafield:code"			VALUE = "{ ProductDataFields.d.code }">
	<MvASSIGN NAME = "l.productdatafield:name"			VALUE = "{ ProductDataFields.d.name }">
	<MvASSIGN NAME = "l.productdatafield:is_public"		VALUE = "{ ProductDataFields.d.is_public }">
	<MvASSIGN NAME = "l.productdatafield:page_code"		VALUE = "{ ProductDataFields.d.page_code }">
	<MvASSIGN NAME = "l.productdatafield:on_prod"		VALUE = "{ ProductDataFields.d.on_prod }">
	<MvASSIGN NAME = "l.productdatafield:on_attr"		VALUE = "{ ProductDataFields.d.on_attr }">
	<MvASSIGN NAME = "l.productdatafield:on_pimage"		VALUE = "{ ProductDataFields.d.on_pimage }">
	<MvASSIGN NAME = "l.productdatafield:on_variant"	VALUE = "{ ProductDataFields.d.on_variant }">
	<MvASSIGN NAME = "l.productdatafield:on_inv"		VALUE = "{ ProductDataFields.d.on_inv }">
	<MvASSIGN NAME = "l.productdatafield:on_relprod"	VALUE = "{ ProductDataFields.d.on_relprod }">
	<MvASSIGN NAME = "l.productdatafield:on_pgrp"		VALUE = "{ ProductDataFields.d.on_pgrp }">
	<MvASSIGN NAME = "l.productdatafield:on_agrp"		VALUE = "{ ProductDataFields.d.on_agrp }">
	<MvASSIGN NAME = "l.productdatafield:on_cat"		VALUE = "{ ProductDataFields.d.on_cat }">
	<MvASSIGN NAME = "l.productdatafield:on_uri"		VALUE = "{ ProductDataFields.d.on_uri }">
	<MvASSIGN NAME = "l.productdatafield:trig"			VALUE = "{ ProductDataFields.d.trig }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Insert" PARAMETERS = "module var, productdatafield var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdatafield:id"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'ProductDataFields' ) }">

	<MvIF EXPR = "{ NOT ProductDataField_Generate_Template( l.module, l.productdatafield, l.page ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Insert_LowLevel( l.productdatafield ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Delete_Page( l.page ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataField_Create_Tables( l.productdatafield ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ ProductDataField_Delete( l.module, l.productdatafield ) }">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Create_Tables" PARAMETERS = "productdatafield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
						  (
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()	$ ',
							status		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00022', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '_1 ON ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' ( product_id, status )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00023', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.productdatafield:id ) $ '
						  (
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()	$ ',
							value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()	$ ',
							dtstamp		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00024', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.productdatafield:id ) $ '_1 ON ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.productdatafield:id ) $ ' ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00025', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.productdatafield:id ) $ '_2 ON ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.productdatafield:id ) $ ' ( dtstamp )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00026', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Insert_LowLevel" PARAMETERS = "productdatafield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:cache:productdata"	VALUE = "">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataFields
						  ( id, code, name, is_public, page_code, on_prod, on_attr, on_pimage,
						    on_variant, on_inv, on_relprod, on_pgrp, on_agrp, on_cat, on_uri, trig )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.productdatafield:id, l.productdatafield:code, l.productdatafield:name, l.productdatafield:is_public,
			 		   l.productdatafield:page_code, l.productdatafield:on_prod, l.productdatafield:on_attr, l.productdatafield:on_pimage,
					   l.productdatafield:on_variant, l.productdatafield:on_inv, l.productdatafield:on_relprod, l.productdatafield:on_pgrp,
					   l.productdatafield:on_agrp, l.productdatafield:on_cat, l.productdatafield:on_uri, l.productdatafield:trig">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00027', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Update" PARAMETERS = "productdatafield" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:cache:productdata"	VALUE = "">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'ProductDataFields
			 			  SET
			 			  	code		= ?,
			 			  	name		= ?,
			 			  	is_public	= ?,
			 			  	on_prod		= ?,
			 			  	on_attr		= ?,
			 			  	on_pimage	= ?,
			 			  	on_variant	= ?,
			 			  	on_inv		= ?,
			 			  	on_relprod	= ?,
			 			  	on_pgrp		= ?,
			 			  	on_agrp		= ?,
							on_cat		= ?,
							on_uri		= ?,
			 			  	trig		= ?
			 			  WHERE
			 			  	id			= ?' }"
			 FIELDS = " l.productdatafield:code, l.productdatafield:name, l.productdatafield:is_public,
			 			l.productdatafield:on_prod, l.productdatafield:on_attr, l.productdatafield:on_pimage,
						l.productdatafield:on_variant, l.productdatafield:on_inv, l.productdatafield:on_relprod,
						l.productdatafield:on_pgrp, l.productdatafield:on_agrp, l.productdatafield:on_cat,
						l.productdatafield:on_uri, l.productdatafield:trig,
			 			l.productdatafield:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00029', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Delete" PARAMETERS = "module var, productdatafield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ProductDataField_Delete_ID( l.productdatafield:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_GlobalDelete_Page_Code_Admin_UI( l.productdatafield:page_code, l.module:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.productdatafield:id ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Delete_ID" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:cache:productdata"	VALUE = "">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductDataFields WHERE id = ?' }"
			 FIELDS = "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00033', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Load_ID" PARAMETERS = "id, productdatafield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "ProductDataFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductDataFields WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00034', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductDataFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PDF-00035' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductDataField_Read( l.productdatafield ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Load_CustomFieldCode_Cached" PARAMETERS = "customfield_code, field_type var, productdatafield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( 'queued_' IN l.customfield_code ) EQ 1 }">
		<MvASSIGN NAME = "l.field_type"	VALUE = "queued">
		<MvASSIGN NAME = "l.field_code"	VALUE = "{ substring_var( l.customfield_code, 8, len_var( l.customfield_code ) - 7 ) }">
	<MvELSEIF EXPR = "{ ( 'dtstamp_' IN l.customfield_code ) EQ 1 }">
		<MvASSIGN NAME = "l.field_type"	VALUE = "dtstamp">
		<MvASSIGN NAME = "l.field_code"	VALUE = "{ substring_var( l.customfield_code, 9, len_var( l.customfield_code ) - 8 ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.field_type"	VALUE = "value">
		<MvASSIGN NAME = "l.field_code"	VALUE = "{ l.customfield_code }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ProductDataField_Load_Code_Cached( l.field_code, l.productdatafield ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Load_Code_Cached" PARAMETERS = "code, productdatafield var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:productdata:fields">
		<MvMEMBER NAME = "{ l.code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ ProductDataField_Load_Code( l.code, l.cache:productdatafield ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productdatafield"				VALUE = "{ l.cache:productdatafield }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Load_Code" PARAMETERS = "code, productdatafield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductDataFields"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
								g.Store_Table_Prefix $ 'ProductDataFields
							  WHERE ' $
								[ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00036', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductDataFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PDF-00037' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductDataField_Read( l.productdatafield ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldList_Load_All_Cached" PARAMETERS = "productdatafields var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:productdata:all_fields">

	<MvIF EXPR = "{ ISNULL l.cache:count }">
		<MvASSIGN NAME = "l.cache:count"				VALUE = "{ ProductDataFieldList_Load_All( l.cache:productdatafields ) }">
		<MvIF EXPR = "{ l.cache:count EQ 0 }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.cache:count EQ 0 }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productdatafields"				VALUE = "{ l.cache:productdatafields }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldList_Load_All" PARAMETERS = "productdatafields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductDataFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductDataFields ORDER BY id' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00038', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productdatafield_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT ProductDataFields.d.EOF }">
		<MvEVAL EXPR = "{ ProductDataField_Read( l.productdatafields[ ++l.productdatafield_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductDataFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTIL-PDF-00039', l.productdatafield_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldLookup_Load_Notification_Cached" PARAMETERS = "lookup var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:productdata:notification_lookup">

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ ProductDataFieldLookup_Load_Notification( l.cache:lookup ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.lookup" VALUE = "">

	<MvREFERENCE NAME = "l.lookup:on_prod_count"	VARIABLE = "l.cache:lookup:on_prod_count">		<MvREFERENCE NAME = "l.lookup:on_prod"		VARIABLE = "l.cache:lookup:on_prod">
	<MvREFERENCE NAME = "l.lookup:on_attr_count"	VARIABLE = "l.cache:lookup:on_attr_count">		<MvREFERENCE NAME = "l.lookup:on_attr"		VARIABLE = "l.cache:lookup:on_attr">
	<MvREFERENCE NAME = "l.lookup:on_pimage_count"	VARIABLE = "l.cache:lookup:on_pimage_count">	<MvREFERENCE NAME = "l.lookup:on_pimage"	VARIABLE = "l.cache:lookup:on_pimage">
	<MvREFERENCE NAME = "l.lookup:on_variant_count"	VARIABLE = "l.cache:lookup:on_variant_count">	<MvREFERENCE NAME = "l.lookup:on_variant"	VARIABLE = "l.cache:lookup:on_variant">
	<MvREFERENCE NAME = "l.lookup:on_inv_count"		VARIABLE = "l.cache:lookup:on_inv_count">		<MvREFERENCE NAME = "l.lookup:on_inv"		VARIABLE = "l.cache:lookup:on_inv">
	<MvREFERENCE NAME = "l.lookup:on_relprod_count"	VARIABLE = "l.cache:lookup:on_relprod_count">	<MvREFERENCE NAME = "l.lookup:on_relprod"	VARIABLE = "l.cache:lookup:on_relprod">
	<MvREFERENCE NAME = "l.lookup:on_pgrp_count"	VARIABLE = "l.cache:lookup:on_pgrp_count">		<MvREFERENCE NAME = "l.lookup:on_pgrp"		VARIABLE = "l.cache:lookup:on_pgrp">
	<MvREFERENCE NAME = "l.lookup:on_agrp_count"	VARIABLE = "l.cache:lookup:on_agrp_count">		<MvREFERENCE NAME = "l.lookup:on_agrp"		VARIABLE = "l.cache:lookup:on_agrp">
	<MvREFERENCE NAME = "l.lookup:on_cat_count"		VARIABLE = "l.cache:lookup:on_cat_count">		<MvREFERENCE NAME = "l.lookup:on_cat"		VARIABLE = "l.cache:lookup:on_cat">
	<MvREFERENCE NAME = "l.lookup:on_uri_count"		VARIABLE = "l.cache:lookup:on_uri_count">		<MvREFERENCE NAME = "l.lookup:on_uri"		VARIABLE = "l.cache:lookup:on_uri">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFieldLookup_Load_Notification" PARAMETERS = "lookup var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.lookup"	VALUE = "">

	<MvFOREACH INDEX = "l.productdatafield_pos" ITERATOR = "l.productdatafield" ARRAY = "l.productdatafields" COUNT = "{ ProductDataFieldList_Load_All_Cached( l.productdatafields ) }">
		<MvIF EXPR = "{ l.productdatafield:on_prod NE 'ignore' }">		<MvASSIGN NAME = "l.lookup:on_prod_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_prod,		l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_attr NE 'ignore' }">		<MvASSIGN NAME = "l.lookup:on_attr_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_attr,		l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_pimage NE 'ignore' }">	<MvASSIGN NAME = "l.lookup:on_pimage_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_pimage,	l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_variant NE 'ignore' }">	<MvASSIGN NAME = "l.lookup:on_variant_count"	VALUE = "{ miva_array_insert_ref( l.lookup:on_variant,	l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_inv NE 'ignore' }">		<MvASSIGN NAME = "l.lookup:on_inv_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_inv,		l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_relprod NE 'ignore' }">	<MvASSIGN NAME = "l.lookup:on_relprod_count"	VALUE = "{ miva_array_insert_ref( l.lookup:on_relprod,	l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_pgrp NE 'ignore' }">		<MvASSIGN NAME = "l.lookup:on_pgrp_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_pgrp,		l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_agrp NE 'ignore' }">		<MvASSIGN NAME = "l.lookup:on_agrp_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_agrp,		l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_cat NE 'ignore' }">		<MvASSIGN NAME = "l.lookup:on_cat_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_cat,		l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
		<MvIF EXPR = "{ l.productdatafield:on_uri NE 'ignore' }">		<MvASSIGN NAME = "l.lookup:on_uri_count"		VALUE = "{ miva_array_insert_ref( l.lookup:on_uri,		l.productdatafields[ l.productdatafield_pos ], -1 ) }">	</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductDataSettings
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductDataSettings_Read" PARAMETERS = "productdatasettings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdatasettings:pgrp_ignel"	VALUE = "{ ProductDataSettings.d.pgrp_ignel }">
	<MvASSIGN NAME = "l.productdatasettings:pgrp_ignit"	VALUE = "{ ProductDataSettings.d.pgrp_ignit }">
	<MvASSIGN NAME = "l.productdatasettings:pgrp_ignex"	VALUE = "{ ProductDataSettings.d.pgrp_ignex }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataSettings_Insert" PARAMETERS = "productdatasettings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataSettings
						  ( pgrp_ignel, pgrp_ignit, pgrp_ignex )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.productdatasettings:pgrp_ignel, l.productdatasettings:pgrp_ignit, l.productdatasettings:pgrp_ignex">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00118', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataSettings_Update" PARAMETERS = "productdatasettings" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'ProductDataSettings
			 			  SET
			 			  	pgrp_ignel = ?,
			 			  	pgrp_ignit = ?,
			 			  	pgrp_ignex = ?' }"
			 FIELDS = " l.productdatasettings:pgrp_ignel, l.productdatasettings:pgrp_ignit, l.productdatasettings:pgrp_ignex">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00119', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataSettings_Load" PARAMETERS = "productdatasettings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductDataSettings"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductDataSettings' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00120', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductDataSettings.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataSettings">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PDF-00121' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductDataSettings_Read( l.productdatasettings ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataSettings">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataSettings_Load_Cached" PARAMETERS = "productdatasettings var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:productdatasettings_load_cached">

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ ProductDataSettings_Load( l.cache:settings ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ NOT l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productdatasettings" VALUE = "{ l.cache:settings }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductDataQueue_<id>
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductDataQueue_Read" PARAMETERS = "productdataqueue var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdataqueue:product_id"	VALUE = "{ ProductDataQueue.d.product_id }">
	<MvASSIGN NAME = "l.productdataqueue:status"		VALUE = "{ ProductDataQueue.d.status }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataQueue_Insert" PARAMETERS = "field_id, product_id, status" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ '
						  ( product_id, status )
						  VALUES
						  ( ?, ? )' }"
			 FIELDS = "l.product_id, l.status">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00040', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataQueue_Insert_Ignore" PARAMETERS = "field_id, product_id, status" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ '
							  ( product_id, status )
							  VALUES
							  ( ?, ? )' }"
				 FIELDS	= "l.product_id, l.status">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00094', g.MvQUERY_Error ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ '
							  ( product_id, status )
							  VALUES
							  ( ?, ? )
							  ON CONFLICT DO NOTHING' }"
				 FIELDS	= "l.product_id, l.status">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00095', g.MvQUERY_Error ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataQueue_Insert( l.field_id, l.product_id, l.status ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataQueue_Delete" PARAMETERS = "field_id, product_id, status" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ ' WHERE product_id = ? AND status = ?' }"
			 FIELDS = "l.product_id, l.status">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00041', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataQueue_Delete_All_Product" PARAMETERS = "field_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ ' WHERE product_id = ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00042', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataQueue_Load" PARAMETERS = "field_id, product_id, status, productdataqueue var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductDataQueue"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ ' WHERE product_id = ? AND status = ?' }"
				FIELDS	= "l.product_id, l.status">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00043', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductDataQueue.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataQueue">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PDF-00044' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductDataQueue_Read( l.productdataqueue ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataQueue">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataQueueList_Load_Product" PARAMETERS = "field_id, product_id, productdataqueues var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductDataQueue"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ ' WHERE product_id = ?' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00045', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productdataqueue_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT ProductDataQueue.d.EOF }">
		<MvEVAL EXPR = "{ ProductDataQueue_Read( l.productdataqueues[ ++l.productdataqueue_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductDataQueue" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductDataQueue">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-UTIL-PDF-00046', l.productdataqueue_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataQueue_MarkForProcessing" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE IGNORE ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ ' SET status = \'P\' WHERE status = \'Q\'' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00047', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ '
							  SET
								status = \'P\'
							  WHERE
								status = \'Q\' AND
								NOT EXISTS
								(
									SELECT
										sub.product_id
									FROM
										' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ ' sub
									WHERE
										sub.status		= \'P\' AND
										sub.product_id	= ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.field_id ) $ '.product_id
								)' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00048', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00049', 'Unsupported DBAPI' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductData_<id>
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductData_Read" PARAMETERS = "productdata var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdata:product_id"	VALUE = "{ ProductData.d.product_id }">
	<MvASSIGN NAME = "l.productdata:value"		VALUE = "{ ProductData.d.value }">
	<MvASSIGN NAME = "l.productdata:dtstamp"	VALUE = "{ ProductData.d.dtstamp }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_InsertOrUpdate" PARAMETERS = "field_id, productdata var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdata:dtstamp"	VALUE = "{ s.dyn_time_t }">

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME 	= "Merchant"
				 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.field_id ) $ '
							  ( product_id, value, dtstamp )
							  VALUES
							  ( ?, ?, ? )
							  ON DUPLICATE KEY UPDATE
								value		= ?,
								dtstamp		= ?' }"
				 FIELDS = "l.productdata:product_id, l.productdata:value, l.productdata:dtstamp,
						   l.productdata:value, l.productdata:dtstamp">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00050', g.MvQUERY_Error ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME 	= "Merchant"
				 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.field_id ) $ '
							  ( product_id, value, dtstamp )
							  VALUES
							  ( ?, ?, ? )
							  ON CONFLICT( product_id ) DO UPDATE
							  SET
								value		= ?,
								dtstamp		= ?' }"
				 FIELDS = "l.productdata:product_id, l.productdata:value, l.productdata:dtstamp,
						   l.productdata:value, l.productdata:dtstamp">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00051', g.MvQUERY_Error ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.field_id ) $ '
						  ( product_id, value, dtstamp )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS = "l.productdata:product_id, l.productdata:value, l.productdata:dtstamp">
	<MvIF EXPR = "{ NOT g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.MvQUERY_Error ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00052', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.field_id ) $ '
						  SET
							value		= ?,
							dtstamp		= ?
						  WHERE
							product_id	= ?' }"
			 FIELDS = "l.productdata:value, l.productdata:dtstamp,
					   l.productdata:product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00053', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Delete" PARAMETERS = "field_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.field_id ) $ ' WHERE product_id = ?' }"
			 FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00054', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Load" PARAMETERS = "field_id, product_id, productdata var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductData"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductData_' $ int( l.field_id ) $ ' WHERE product_id = ?' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00055', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductData.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-UTIL-PDF-00056' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductData_Read( l.productdata ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductData">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductData_Create_Item" PARAMETERS = "item_code, module_code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( l.item_code, l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( l.item_code, l.module_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Notify_Product" PARAMETERS = "type, product_id, flags" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:productdata:generating }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataFieldLookup_Load_Notification_Cached( l.lookup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.productdatafield_count" VARIABLE = "l.lookup">
		<MvMEMBER NAME = "{ l.type $ '_count' }">
	</MvREFERENCEARRAY>

	<MvREFERENCEARRAY NAME = "l.productdatafields" VARIABLE = "l.lookup">
		<MvMEMBER NAME = "{ l.type }">
	</MvREFERENCEARRAY>

	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.productdatafields" COUNT = "{ l.productdatafield_count }">
		<MvREFERENCEARRAY NAME = "l.action" VARIABLE = "l.productdatafield">
			<MvMEMBER NAME = "{ l.type }">
		</MvREFERENCEARRAY>

		<MvCOMMENT>
		|
		| The directly modified product is always queued
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT ProductDataQueue_Insert_Ignore( l.productdatafield:id, l.product_id, 'Q' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvCOMMENT>
		|
		| Queue variant masters, if configured
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ( l.action EQ 'queue+' ) AND ( l.flags NE 'ignore_variants' ) }">
			<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'ProductVariantParts WHERE part_id = ?' }"
						 FIELDS	= "l.product_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00077', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'ProductVariantParts WHERE part_id = ?
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.product_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00078', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSE>
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT DISTINCT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pvp.product_id AND q.status = \'Q\'
									  WHERE
										pvp.part_id = ? AND
										q.product_id IS NULL' }"
						 FIELDS	= "l.product_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00079', g.MvQUERY_Error ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.productdatafield:trig }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.productdatafield:trig ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Notify_CategoryProducts" PARAMETERS = "type, cat_id, flags" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:productdata:generating }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataFieldLookup_Load_Notification_Cached( l.lookup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.productdatafield_count" VARIABLE = "l.lookup">
		<MvMEMBER NAME = "{ l.type $ '_count' }">
	</MvREFERENCEARRAY>

	<MvREFERENCEARRAY NAME = "l.productdatafields" VARIABLE = "l.lookup">
		<MvMEMBER NAME = "{ l.type }">
	</MvREFERENCEARRAY>

	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.productdatafields" COUNT = "{ l.productdatafield_count }">
		<MvREFERENCEARRAY NAME = "l.action" VARIABLE = "l.productdatafield">
			<MvMEMBER NAME = "{ l.type }">
		</MvREFERENCEARRAY>

		<MvCOMMENT>
		|
		| Products in the impacted category are always queued
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'CategoryXProduct WHERE cat_id = ?' }"
					 FIELDS	= "l.cat_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00108', g.MvQUERY_Error ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'CategoryXProduct WHERE cat_id = ?
								  ON CONFLICT DO NOTHING' }"
					 FIELDS	= "l.cat_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00109', g.MvQUERY_Error ) }">
			</MvIF>
		<MvELSE>
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT
									cxp.product_id,
									\'Q\'
								  FROM
									' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp
									LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = cxp.product_id AND q.status = \'Q\'
								  WHERE
									cxp.cat_id		= ? AND
									q.product_id	IS NULL' }"
					 FIELDS	= "l.cat_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00110', g.MvQUERY_Error ) }">
			</MvIF>
		</MvIF>

		<MvCOMMENT>
		|
		| Queue variant masters, if configured
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ( l.action EQ 'queue+' ) AND ( l.flags NE 'ignore_variants' ) }">
			<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										cxp.cat_id	= ?	AND
										pvp.part_id	= cxp.product_id' }"
						 FIELDS	= "l.cat_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00111', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										cxp.cat_id	= ? AND
										pvp.part_id	= cxp.product_id
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.cat_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00112', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSE>
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT DISTINCT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pvp.product_id AND q.status = \'Q\'
									  WHERE
										cxp.cat_id		= ?					AND
										pvp.part_id		= cxp.product_id	AND
										q.product_id	IS NULL' }"
						 FIELDS	= "l.cat_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00113', g.MvQUERY_Error ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.productdatafield:trig }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.productdatafield:trig ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Notify_PriceGroupProducts" PARAMETERS = "pricegroup var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:productdata:generating }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataSettings_Load_Cached( l.productdatasettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataFieldLookup_Load_Notification_Cached( l.lookup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Ignore Price Groups that Apply To All Products Unless Excluded
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.productdatasettings:pgrp_ignex AND l.pricegroup:exclusion }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Ignore Price Groups that do not apply to All Shoppers
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.productdatasettings:pgrp_ignel AND ( l.pricegroup:custscope NE 'A' ) AND ( l.pricegroup:original_custscope NE 'A' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Ignore Price Groups that do not directly discount Products
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.productdatasettings:pgrp_ignit }">
		<MvIF EXPR = "{ l.pricegroup:module_id EQ l.pricegroup:original_module_id }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID_Cached( l.pricegroup:module_id, l.pricegroup_module ) }">
				<MvEVAL EXPR = "{ [ g.Module_Root $ l.pricegroup_module:module ].DiscountModule_Capabilities( l.pricegroup:module, l.capabilities ) }">			
			</MvIF>

			<MvIF EXPR = "{ NOT l.capabilities:items }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID_Cached( l.pricegroup:module_id, l.pricegroup_module ) }">
				<MvEVAL EXPR = "{ [ g.Module_Root $ l.pricegroup_module:module ].DiscountModule_Capabilities( l.pricegroup_module:module, l.capabilities ) }">
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID_Cached( l.pricegroup:original_module_id, l.original_pricegroup_module ) }">
				<MvEVAL EXPR = "{ [ g.Module_Root $ l.original_pricegroup_module:module ].DiscountModule_Capabilities( l.original_pricegroup_module:module, l.original_capabilities ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT l.capabilities:items AND NOT l.original_capabilities:items }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.lookup:on_pgrp" COUNT = "{ l.lookup:on_pgrp_count }">
		<MvCOMMENT>
		|
		| Exclusion price groups ignore variant part products
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.pricegroup:exclusion }">
			<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										prod.id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'Products prod
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct pgxep ON pgxep.pgrp_id = ? AND pgxep.product_id = prod.id
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp ON cxp.product_id = prod.id
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory pgxec ON pgxec.pgrp_id = ? AND pgxec.cat_id = cxp.cat_id
									  WHERE
										pgxep.product_id	IS NULL AND
										pgxec.cat_id		IS NULL' }"
						 FIELDS	= "l.pricegroup:id, l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00064', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										prod.id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'Products prod
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct pgxep ON pgxep.pgrp_id = ? AND pgxep.product_id = prod.id
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp ON cxp.product_id = prod.id
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory pgxec ON pgxec.pgrp_id = ? AND pgxec.cat_id = cxp.cat_id
									  WHERE
										pgxep.product_id	IS NULL AND
										pgxec.cat_id		IS NULL
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.pricegroup:id, l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00065', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSE>
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT DISTINCT
										prod.id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'Products prod
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = prod.id AND q.status = \'Q\'
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct pgxep ON pgxep.pgrp_id = ? AND pgxep.product_id = prod.id
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp ON cxp.product_id = prod.id
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory pgxec ON pgxec.pgrp_id = ? AND pgxec.cat_id = cxp.cat_id
									  WHERE
										q.product_id		IS NULL AND
										pgxep.product_id	IS NULL	AND
										pgxec.cat_id		IS NULL' }"
						 FIELDS	= "l.pricegroup:id, l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00066', g.MvQUERY_Error ) }">
				</MvIF>
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| Directly modified products for inclusion price groups are always queued
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'PriceGroupXProduct WHERE pgrp_id = ?' }"
						 FIELDS	= "l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00067', g.MvQUERY_Error ) }">
				</MvIF>

				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										cxp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'PriceGroupXCategory pgxc,
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp
									  WHERE
										pgxc.pgrp_id	= ? AND
										cxp.cat_id		= pgxc.cat_id' }"
						 FIELDS	= "l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00102', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'PriceGroupXProduct WHERE pgrp_id = ?
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00068', g.MvQUERY_Error ) }">
				</MvIF>

				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										cxp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'PriceGroupXCategory pgxc,
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp
									  WHERE
										pgxc.pgrp_id	= ? AND
										cxp.cat_id		= pgxc.cat_id
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00103', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSE>
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pgxp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'PriceGroupXProduct pgxp
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pgxp.product_id AND q.status = \'Q\'
									  WHERE
										pgxp.pgrp_id	= ? AND
										q.product_id	IS NULL' }"
						 FIELDS	= "l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00069', g.MvQUERY_Error ) }">
				</MvIF>

				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										cxp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'PriceGroupXCategory pgxc,
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = cxp.product_id AND q.status = \'Q\'
									  WHERE
										pgxc.pgrp_id	= ?				AND
										cxp.cat_id		= pgxc.cat_id	AND
										q.product_id	IS NULL' }"
						 FIELDS	= "l.pricegroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00104', g.MvQUERY_Error ) }">
				</MvIF>
			</MvIF>

			<MvCOMMENT>
			|
			| Queue variant masters, if configured
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.productdatafield:on_pgrp EQ 'queue+' }">
				<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
					<MvQUERY NAME	= "Merchant"
							 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
										  ( product_id, status )
									      SELECT
											pvp.product_id,
											\'Q\'
										  FROM
											' $ g.Store_Table_Prefix $ 'PriceGroupXProduct pgxp,
											' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										  WHERE
											pgxp.pgrp_id	= ?					AND
											pvp.part_id		= pgxp.product_id' }"
							 FIELDS	= "l.pricegroup:id">
					<MvIF EXPR = "{ g.MvQUERY_Error }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00096', g.MvQUERY_Error ) }">
					</MvIF>

					<MvQUERY NAME	= "Merchant"
							 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
										  ( product_id, status )
									      SELECT
											pvp.product_id,
											\'Q\'
										  FROM
											' $ g.Store_Table_Prefix $ 'PriceGroupXCategory pgxc,
											' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
											' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										  WHERE
											pgxc.pgrp_id	= ?					AND
											cxp.cat_id		= pgxc.cat_id		AND
											pvp.part_id		= cxp.product_id' }"
							 FIELDS	= "l.pricegroup:id">
					<MvIF EXPR = "{ g.MvQUERY_Error }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00105', g.MvQUERY_Error ) }">
					</MvIF>
				<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
					<MvQUERY NAME	= "Merchant"
							 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
										  ( product_id, status )
									      SELECT
											pvp.product_id,
											\'Q\'
										  FROM
											' $ g.Store_Table_Prefix $ 'PriceGroupXProduct pgxp,
											' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										  WHERE
											pgxp.pgrp_id	= ?					AND
											pvp.part_id		= pgxp.product_id
										  ON CONFLICT DO NOTHING' }"
							 FIELDS	= "l.pricegroup:id">
					<MvIF EXPR = "{ g.MvQUERY_Error }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00097', g.MvQUERY_Error ) }">
					</MvIF>

					<MvQUERY NAME	= "Merchant"
							 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
										  ( product_id, status )
									      SELECT
											pvp.product_id,
											\'Q\'
										  FROM
											' $ g.Store_Table_Prefix $ 'PriceGroupXCategory pgxc,
											' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
											' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										  WHERE
											pgxc.pgrp_id	= ?					AND
											cxp.cat_id		= pgxc.cat_id		AND
											pvp.part_id		= cxp.product_id
										  ON CONFLICT DO NOTHING' }"
							 FIELDS	= "l.pricegroup:id">
					<MvIF EXPR = "{ g.MvQUERY_Error }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00106', g.MvQUERY_Error ) }">
					</MvIF>
				<MvELSE>
					<MvQUERY NAME	= "Merchant"
							 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
										  ( product_id, status )
									      SELECT
											pvp.product_id,
											\'Q\'
										  FROM
											' $ g.Store_Table_Prefix $ 'PriceGroupXProduct pgxp,
											' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
											LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pvp.product_id AND q.status = \'Q\'
										  WHERE
											pgxp.pgrp_id	= ?					AND
											pvp.part_id		= pgxp.product_id	AND
											q.product_id IS NULL' }"
							 FIELDS	= "l.pricegroup:id">
					<MvIF EXPR = "{ g.MvQUERY_Error }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00098', g.MvQUERY_Error ) }">
					</MvIF>

					<MvQUERY NAME	= "Merchant"
							 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
										  ( product_id, status )
									      SELECT
											pvp.product_id,
											\'Q\'
										  FROM
											' $ g.Store_Table_Prefix $ 'PriceGroupXCategory pgxc,
											' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
											' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
											LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pvp.product_id AND q.status = \'Q\'
										  WHERE
											pgxc.pgrp_id	= ?					AND
											cxp.cat_id		= pgxc.cat_id		AND
											pvp.part_id		= cxp.product_id	AND
											q.product_id IS NULL' }"
							 FIELDS	= "l.pricegroup:id">
					<MvIF EXPR = "{ g.MvQUERY_Error }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00107', g.MvQUERY_Error ) }">
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.productdatafield:trig }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.productdatafield:trig ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Notify_AvailabilityGroupProducts" PARAMETERS = "availabilitygroup var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:productdata:generating }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataFieldLookup_Load_Notification_Cached( l.lookup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.lookup:on_agrp" COUNT = "{ l.lookup:on_agrp_count }">
		<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT
									product_id,
									\'Q\'
								  FROM
									' $ g.Store_Table_Prefix $ 'AvailGroupXProduct
								  WHERE
									agrp_id = ?' }"
					 FIELDS	= "l.availabilitygroup:id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00122', g.MvQUERY_Error ) }">
			</MvIF>

			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT
									cxp.product_id,
									\'Q\'
								  FROM
									' $ g.Store_Table_Prefix $ 'AvailGroupXCategory agxc,
									' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp
								  WHERE
									agxc.agrp_id	= ? AND
									cxp.cat_id		= agxc.cat_id' }"
					 FIELDS	= "l.availabilitygroup:id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00123', g.MvQUERY_Error ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT
									product_id,
									\'Q\'
								  FROM
									' $ g.Store_Table_Prefix $ 'AvailGroupXProduct
								  WHERE
									agrp_id = ?
								  ON CONFLICT DO NOTHING' }"
					 FIELDS	= "l.availabilitygroup:id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00124', g.MvQUERY_Error ) }">
			</MvIF>

			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT
									cxp.product_id,
									\'Q\'
								  FROM
									' $ g.Store_Table_Prefix $ 'AvailGroupXCategory agxc,
									' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp
								  WHERE
									agxc.agrp_id	= ? AND
									cxp.cat_id		= agxc.cat_id
								  ON CONFLICT DO NOTHING' }"
					 FIELDS	= "l.availabilitygroup:id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00125', g.MvQUERY_Error ) }">
			</MvIF>
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00126', 'Unsupported DBAPI "' $ encodeentities( g.Native_DBAPI ) $ '"' ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| Queue variant masters, if configured
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.productdatafield:on_agrp EQ 'queue+' }">
			<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'AvailGroupXProduct agxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										agxp.agrp_id	= ? AND
										pvp.part_id		= agxp.product_id' }"
						 FIELDS	= "l.availabilitygroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00128', g.MvQUERY_Error ) }">
				</MvIF>

				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'AvailGroupXCategory agxc,
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										agxc.agrp_id	= ?						AND
										cxp.cat_id		= agxc.cat_id			AND
										pvp.part_id		= cxp.product_id' }"
						 FIELDS	= "l.availabilitygroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00129', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'AvailGroupXProduct agxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										agxp.agrp_id	= ? AND
										pvp.part_id		= agxp.product_id
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.availabilitygroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00130', g.MvQUERY_Error ) }">
				</MvIF>

				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'AvailGroupXCategory agxc,
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										agxc.agrp_id	= ?					AND
										cxp.cat_id		= agxc.cat_id		AND
										pvp.part_id		= cxp.product_id
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.availabilitygroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00131', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSE>
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'AvailGroupXProduct agxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pvp.product_id AND q.status = \'Q\'
									  WHERE
										agxp.agrp_id	= ?					AND
										pvp.part_id		= agxp.product_id	AND
										q.product_id IS NULL' }"
						 FIELDS	= "l.availabilitygroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00132', g.MvQUERY_Error ) }">
				</MvIF>

				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'AvailGroupXCategory agxc,
										' $ g.Store_Table_Prefix $ 'CategoryXProduct cxp,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pvp.product_id AND q.status = \'Q\'
									  WHERE
										agxc.agrp_id	= ?					AND
										cxp.cat_id		= agxc.cat_id		AND
										pvp.part_id		= cxp.product_id	AND
										q.product_id IS NULL' }"
						 FIELDS	= "l.availabilitygroup:id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00133', g.MvQUERY_Error ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.productdatafield:trig }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.productdatafield:trig ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Notify_AttributeTemplateProducts" PARAMETERS = "attemp_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session:cache:productdata:generating }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ProductDataFieldLookup_Load_Notification_Cached( l.lookup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.productdatafield" ARRAY = "l.lookup:on_attr" COUNT = "{ l.lookup:on_attr_count }">
		<MvCOMMENT>
		|
		| Directly modified products are always queued
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'Attributes WHERE attemp_id = ?' }"
					 FIELDS	= "l.attemp_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00072', g.MvQUERY_Error ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT product_id, \'Q\' FROM ' $ g.Store_Table_Prefix $ 'Attributes WHERE attemp_id = ?
								  ON CONFLICT DO NOTHING' }"
					 FIELDS	= "l.attemp_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00073', g.MvQUERY_Error ) }">
			</MvIF>
		<MvELSE>
			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
								  ( product_id, status )
								  SELECT DISTINCT
									a.product_id,
									\'Q\'
								  FROM
									' $ g.Store_Table_Prefix $ 'Attributes a
									LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = a.product_id AND q.status = \'Q\'
								  WHERE
									a.attemp_id	= ? AND
									q.product_id IS NULL' }"
					 FIELDS	= "l.attemp_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00074', g.MvQUERY_Error ) }">
			</MvIF>
		</MvIF>

		<MvCOMMENT>
		|
		| Queue variant masters, if configured
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.productdatafield:on_attr EQ 'queue+' }">
			<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT IGNORE INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT DISTINCT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'Attributes a,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										a.attemp_id		= ?					AND
										pvp.part_id		= a.product_id' }"
						 FIELDS	= "l.attemp_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00099', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'Attributes a,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
									  WHERE
										a.attemp_id		= ?					AND
										pvp.part_id		= a.product_id
									  ON CONFLICT DO NOTHING' }"
						 FIELDS	= "l.attemp_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00100', g.MvQUERY_Error ) }">
				</MvIF>
			<MvELSE>
				<MvQUERY NAME	= "Merchant"
						 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ '
									  ( product_id, status )
									  SELECT DISTINCT
										pvp.product_id,
										\'Q\'
									  FROM
										' $ g.Store_Table_Prefix $ 'Attributes a,
										' $ g.Store_Table_Prefix $ 'ProductVariantParts pvp
										LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'ProductDataQueue_' $ int( l.productdatafield:id ) $ ' q ON q.product_id = pvp.product_id AND q.status = \'Q\'
									  WHERE
										a.attemp_id		= ?					AND
										pvp.part_id		= a.product_id		AND
										q.product_id IS NULL' }"
						 FIELDS	= "l.attemp_id">
				<MvIF EXPR = "{ g.MvQUERY_Error }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00101', g.MvQUERY_Error ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.productdatafield:trig }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( l.productdatafield:trig ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Generate_Template" PARAMETERS = "module var, productdatafield var, page var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productdatafield:page_code" VALUE = "{ 'PRODUCTDATAFIELD_' $ l.productdatafield:code }">

	<MvIF EXPR = "{ len_var( l.productdatafield:page_code ) GT 50 }">
		<MvASSIGN NAME = "l.productdatafield:page_code" VALUE = "{ substring_var( l.productdatafield:page_code, 1, 50 ) }">

		<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.productdatafield:page_code, l.existing_page ) }">
			<MvASSIGN NAME = "l.productdatafield:page_code" VALUE = "{ 'PRODUCTDATAFIELD_' $ crypto_md5( l.productdatafield:code ) }">
		</MvIF>
	</MvIF>	

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.productdatafield:page_code, l.existing_page ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00080', 'Page code \'' $ l.productdatafield:page_code $ '\' already exists' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.page"					VALUE = "">
	<MvASSIGN NAME = "l.page:code"				VALUE = "{ l.productdatafield:page_code }">
	<MvASSIGN NAME = "l.page:name"				VALUE = "{ l.productdatafield:name }">
	<MvASSIGN NAME = "l.page:ui_id"				VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.page:admin"				VALUE = 1>
	<MvASSIGN NAME = "l.page:settings"			VALUE = "">
	<MvASSIGN NAME = "l.page:settings:field_id"	VALUE = "{ l.productdatafield:id }">

	<MvCAPTURE VARIABLE = "l.source" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/productdata/productdata_page.mvt"></MvCAPTURE>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Page_LowLevel( l.page, l.source ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Assign_Item( l.page, 'productdatafield' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Page_Prepare" PARAMETERS = "page var, template var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Reset_Exception() }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.page:templ_id, l.template ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.page:settings:page:id"		VALUE = "{ l.page:id }">
	<MvASSIGN NAME = "l.page:settings:page:admin"	VALUE = "{ l.page:admin }">
	<MvASSIGN NAME = "l.page:settings:page:code"	VALUE = "{ l.page:code }">
	<MvASSIGN NAME = "l.page:settings:page:name"	VALUE = "{ l.page:name }">
	<MvASSIGN NAME = "l.page:settings:page:title"	VALUE = "{ l.page:title }">
	<MvASSIGN NAME = "l.page:settings:eol:cr"		VALUE = "{ asciichar( 13 ) }">
	<MvASSIGN NAME = "l.page:settings:eol:lf"		VALUE = "{ asciichar( 10 ) }">
	<MvASSIGN NAME = "l.page:settings:eol:crlf"		VALUE = "{ l.page:settings:eol:cr $ l.page:settings:eol:lf }">

	<MvCOMMENT>
	|
	| Load and initialize items
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.item_count" VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemModuleList_Load_Page_Render( l.page:id, l.page:settings:_mgr ) }">

	<MvIF EXPR = "{ l.item_count EQ 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ItemExtensionModuleList_Load_Page_Render( l.page:id, l.page:settings:_mgr ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.page:base_settings"			VALUE = "{ l.page:settings }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Page_Reset" PARAMETERS = "page var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.page:settings"				VALUE = "{ l.page:base_settings }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataField_Page_Render" PARAMETERS = "page var, template var, output var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.page:settings:_mgr:items" COUNT = "{ l.item_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item_LowLevel( l.page:settings, l.item ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ g.TemplateManager_Exception }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00081', 'Item \'' $ l.item:item_code $ '\' threw exception \'' $ g.TemplateManager_Exception_Code $ '\' during initialization' ) }">
		</MvIF>
	</MvFOREACH>

	<MvCAPTURE VARIABLE = "l.output">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Store_Template_Path $ l.template:filename ].Template_Render( l.page, l.page:settings ) }">
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductDataFeed_Generate_Template" PARAMETERS = "module var, feed var, page var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.feed:config:page_code" VALUE = "{ 'PRODUCTDATAFEED_' $ l.feed:code }">

	<MvIF EXPR = "{ len_var( l.feed:config:page_code ) GT 50 }">
		<MvASSIGN NAME = "l.feed:config:page_code" VALUE = "{ substring_var( l.feed:config:page_code, 1, 50 ) }">

		<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.feed:config:page_code, l.existing_page ) AND l.existing_page:id NE l.feed:config:page_id }">
			<MvASSIGN NAME = "l.feed:config:page_code" VALUE = "{ 'PRODUCTDATAFEED_' $ crypto_md5( l.feed:code ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.feed:config:page_code, l.existing_page ) AND l.existing_page:id NE l.feed:config:page_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-UTIL-PDF-00082', 'Page code \'' $ l.feed:config:page_code $ '\' already exists' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.page"					VALUE = "">
	<MvASSIGN NAME = "l.page:code"				VALUE = "{ l.feed:config:page_code }">
	<MvASSIGN NAME = "l.page:name"				VALUE = "{ l.feed:name }">
	<MvASSIGN NAME = "l.page:ui_id"				VALUE = "{ l.module:id }">
	<MvASSIGN NAME = "l.page:admin"				VALUE = 1>
	<MvASSIGN NAME = "l.page:settings"			VALUE = "">
	<MvASSIGN NAME = "l.page:settings:feed_id"	VALUE = "{ l.feed:id }">

	<MvCAPTURE VARIABLE = "l.source" STANDARDOUTPUTLEVEL = "text, html"><MvINCLUDE INTERPRET = "off" FILE = "modules/util/productdata/productdatafeed_page.mvt"></MvCAPTURE>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Page_LowLevel( l.page, l.source ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_InventoryFields_Read" PARAMETERS = "inventorysettings var, product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product:inv_active"		VALUE = "{ ProductData_Products.d.ips_active AND l.inventorysettings:active }">

	<MvIF EXPR = "{ NOT l.product:inv_active }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ( ProductData_Products.d.ips_out_track EQ 'y' ) OR ( ( ProductData_Products.d.ips_out_track EQ 'd' ) AND ( l.inventorysettings:out_track ) ) }">
		<MvASSIGN NAME = "l.product:inv_out_track"		VALUE = 1>

		<MvIF EXPR = "{ ProductData_Products.d.ips_out_lvl_d }">
			<MvASSIGN NAME = "l.product:inv_out_level"	VALUE = "{ l.inventorysettings:out_level }">
			<MvASSIGN NAME = "l.product:inv_available"	VALUE = "{ ProductData_Products.d.ipc_inventory - l.inventorysettings:out_level }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_out_level"	VALUE = "{ ProductData_Products.d.ips_out_level }">
			<MvASSIGN NAME = "l.product:inv_available"	VALUE = "{ ProductData_Products.d.ipc_inventory - ProductData_Products.d.ips_out_level }">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.product:inv_out_track"		VALUE = 0>
		<MvASSIGN NAME = "l.product:inv_out_level"		VALUE = 0>
		<MvASSIGN NAME = "l.product:inv_available"		VALUE = "{ ProductData_Products.d.ipc_inventory }">
	</MvIF>

	<MvIF EXPR = "{ ( ProductData_Products.d.ips_low_track EQ 'y' ) OR ( ( ProductData_Products.d.ips_low_track EQ 'd' ) AND ( l.inventorysettings:low_track ) ) }">
		<MvASSIGN NAME = "l.product:inv_low_track"		VALUE = 1>

		<MvIF EXPR = "{ ProductData_Products.d.ips_low_lvl_d }">
			<MvASSIGN NAME = "l.product:inv_low_level"	VALUE = "{ l.inventorysettings:low_level }">
			<MvASSIGN NAME = "l.product:inv_instock"	VALUE = "{ ProductData_Products.d.ipc_inventory - l.inventorysettings:low_level }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_low_level"	VALUE = "{ ProductData_Products.d.ips_low_level }">
			<MvASSIGN NAME = "l.product:inv_instock"	VALUE = "{ ProductData_Products.d.ipc_inventory - ProductData_Products.d.ips_low_level }">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.product:inv_low_track"		VALUE = 0>
		<MvASSIGN NAME = "l.product:inv_low_level"		VALUE = 0>
		<MvASSIGN NAME = "l.product:inv_instock"		VALUE = "{ ProductData_Products.d.ipc_inventory }">
	</MvIF>

	<MvIF EXPR = "{ ( l.product:inv_available LE 0 ) AND l.product:inv_out_track }">
		<MvASSIGN NAME = "l.product:inv_level"		VALUE = "out">

		<MvIF EXPR = "{ NOT ISNULL ProductData_Products.d.ips_out_short }">
			<MvASSIGN NAME = "l.product:inv_short"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, ProductData_Products.d.ips_out_short ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_short"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, l.inventorysettings:out_short ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL ProductData_Products.d.ips_out_long }">
			<MvASSIGN NAME = "l.product:inv_long"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, ProductData_Products.d.ips_out_long ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_long"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, l.inventorysettings:out_long ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ ( l.product:inv_instock LE 0 ) AND l.product:inv_low_track }">
		<MvASSIGN NAME = "l.product:inv_level"		VALUE = "low">

		<MvIF EXPR = "{ NOT ISNULL ProductData_Products.d.ips_low_short }">
			<MvASSIGN NAME = "l.product:inv_short"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, ProductData_Products.d.ips_low_short ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_short"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, l.inventorysettings:low_short ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL ProductData_Products.d.ips_low_long }">
			<MvASSIGN NAME = "l.product:inv_long"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, ProductData_Products.d.ips_low_long ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_long"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, l.inventorysettings:low_long ) }">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.product:inv_level"		VALUE = "in">

		<MvIF EXPR = "{ NOT ISNULL ProductData_Products.d.ips_in_short }">
			<MvASSIGN NAME = "l.product:inv_short"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, ProductData_Products.d.ips_in_short ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_short"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, l.inventorysettings:in_short ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL ProductData_Products.d.ips_in_long }">
			<MvASSIGN NAME = "l.product:inv_long"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, ProductData_Products.d.ips_in_long ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.product:inv_long"	VALUE = "{ [ g.Module_Feature_INV_RT ].Inventory_Tokenize_Message( l.product, l.inventorysettings:in_long ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Query_CustomFields" PARAMETERS = "query var, customfields var, customfield_count" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'ProductData', l.query_params ) }">

	<MvCOMMENT>
	|
	| Build an execution plan to determine which custom fields are directly queryable
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ ProductData_Query_CustomFields_GeneratePlan( l.customfields, l.customfield_count, l.query_params:data:customfield_state:plan ) }">

	<MvCOMMENT>
	|
	| Custom fields that have been added to the query are tracked in query_params:data:customfield_state as:
	|
	|	queried
	|		:<module_code>
	|			:<field_code>=1
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.query_field" ARRAY = "l.query_params:data:customfield_state:plan:query" COUNT = "{ l.query_params:data:customfield_state:plan:query_count }">
		<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.query_params">
			<MvMEMBER NAME = "data">
			<MvMEMBER NAME = "customfield_state">
			<MvMEMBER NAME = "queried">
			<MvMEMBER NAME = "{ l.query_field:module:code }">
			<MvMEMBER NAME = "{ l.query_field:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT l.queried }">
			<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Root $ l.query_field:module:module ].Module_Product_Field_Query( l.query_field:module, l.query, l.query_field:code ) }">
			<MvASSIGN NAME = "l.queried"	VALUE = 1>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Query_CustomFields_GeneratePlan" PARAMETERS = "customfields var, customfield_count, plan var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Build an execution plan for the retrieval of custom field values:
	|
	|	:plan
	|		:query[ n ]			- Retrieved using Module_Product_Field_Query_Value
	|			:module
	|			:code
	|			:output_module_code
	|			:output_field_code
	|		:individual[ n ]	- Retrieved using Module_Product_Field_Value
	|			:module
	|			:code
	|			:output_module_code
	|			:output_field_code
	|		:array[ n ]			- Retrieved using Module_Product_Field_Value_Array
	|			:module
	|			:code
	|			:output_module_code
	|			:output_field_code
	|		:map[ n ]			- Retrieved using Module_Product_Fields_Mapped
	|			:module
	|			:output_module_code
	|			:field_map
	|				:field_code=output_member_name
	|				:field_code=output_member_name
	|		:map_lookup
	|			:<module_code>
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.plan"										VALUE = "">

	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ l.customfield_count }">
		<MvASSIGN NAME = "l.customfield_code_lowercase"				VALUE = "{ tolower( l.customfield:code ) }">
		<MvASSIGN NAME = "l.field"									VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code_Cached( l.customfield:module, l.field:module ) OR
		 				NOT [ g.Module_Library_DB ].Module_Load_Features_Cached( l.field:module )					OR
		 				NOT l.field:module:active																	OR
		 				NOT l.field:module:feature_hash:fields_prod }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.loaded_fields" VARIABLE = "l.module_product_fields">
			<MvMEMBER NAME = "{ l.customfield:module }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ISNULL l.loaded_fields }">
			<MvASSIGN NAME = "l.null"								VALUE = "{ [ g.Module_Root $ l.field:module:module ].Module_Product_Fields( l.field:module, l.loaded_fields ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT miva_array_search( l.loaded_fields, 1, l.loaded_field, 'l.customfield_code_lowercase EQ tolower( l.loaded_field:code )' ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.field:code"								VALUE = "{ l.customfield:code }">
		<MvASSIGN NAME = "l.field:capabilities"						VALUE = "">

		<MvASSIGN NAME = "l.field:output_module_code"				VALUE = "{ [ g.Module_Feature_TUI_UT ].StripSpecialCharacters_TemplateCode( l.field:module:code )  }">
		<MvASSIGN NAME = "l.field:output_field_code"				VALUE = "{ [ g.Module_Feature_TUI_UT ].StripSpecialCharacters_TemplateCode( l.field:code )  }">

		<MvIF EXPR = "{ l.field:module:api_ver GE 9.07 }">
			<MvEVAL EXPR = "{ [ g.Module_Root $ l.field:module:module ].Module_Product_Field_Capabilities( l.field:module, l.field:code, l.field:capabilities ) }">
		</MvIF>

		<MvIF EXPR = "{ l.field:capabilities:query AND ( l.plan:query_count LT 50 ) }">
			<MvASSIGN NAME = "l.plan:query_count"					VALUE = "{ miva_array_insert_var( l.plan:query, l.field, -1 ) }">
		<MvELSEIF EXPR = "{ l.loaded_field:type EQ 'multitext' }">
			<MvASSIGN NAME = "l.plan:array_count"					VALUE = "{ miva_array_insert_var( l.plan:array, l.field, -1 ) }">
		<MvELSEIF EXPR = "{ ( l.field:module:api_ver LT 5.72 ) OR ( NOT l.field:module:feature_hash:fields_prod_map ) }">
			<MvASSIGN NAME = "l.plan:individual_count"				VALUE = "{ miva_array_insert_var( l.plan:individual, l.field, -1 ) }">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.module_data" VARIABLE = "l.plan:map_lookup">
				<MvMEMBER NAME = "{ l.field:module:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ ISNULL l.module_data }">
				<MvASSIGN NAME = "l.module_data:module"				VALUE = "{ l.field:module }">
				<MvASSIGN NAME = "l.module_data:output_module_code"	VALUE = "{ l.field:output_module_code }">

				<MvASSIGN NAME = "l.plan:map_count"					VALUE = "{ miva_array_insert_ref( l.plan:map, l.module_data, -1 ) }">
			</MvIF>

			<MvASSIGNARRAY NAME = "l.module_data"					VALUE = "{ l.field:output_field_code }">
				<MvMEMBER NAME = "field_map">
				<MvMEMBER NAME = "{ l.field:code }">
			</MvASSIGNARRAY>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductData_Query_CustomFields_Read" PARAMETERS = "query var, view, product var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Reference( l.query, 'ProductData', l.query_params ) }">

	<MvASSIGN NAME = "l.product:customfield_values" VALUE = "">

	<MvCOMMENT>
	|
	| Load values using Module_Product_Field_Query_Value
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.query_field" ARRAY = "l.query_params:data:customfield_state:plan:query" COUNT = "{ l.query_params:data:customfield_state:plan:query_count }">
		<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.product">
			<MvMEMBER NAME = "customfield_values">
			<MvMEMBER NAME = "{ l.query_field:output_module_code }">
			<MvMEMBER NAME = "{ l.query_field:output_field_code }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.reference_array"	VALUE = "">
		<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_ref( l.reference_array, l.value, -1 ) }">
		<MvREFERENCE NAME = "l.product:customfield" MEMBER = "{ l.query_field:output_field_code }" VARIABLE = "l.reference_array[ 1 ]">

		<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.query_field:module:module ].Module_Product_Field_Query_Value( l.query_field:module, l.view, l.query_field:code ) }">
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Load values using Module_Product_Field_Value
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.individual_field" ARRAY = "l.query_params:data:customfield_state:plan:individual" COUNT = "{ l.query_params:data:customfield_state:plan:individual_count }">
		<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.product">
			<MvMEMBER NAME = "customfield_values">
			<MvMEMBER NAME = "{ l.individual_field:output_module_code }">
			<MvMEMBER NAME = "{ l.individual_field:output_field_code }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.reference_array"	VALUE = "">
		<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_ref( l.reference_array, l.value, -1 ) }">
		<MvREFERENCE NAME = "l.product:customfield" MEMBER = "{ l.individual_field:output_field_code }" VARIABLE = "l.reference_array[ 1 ]">

		<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.individual_field:module:module ].Module_Product_Field_Value( l.individual_field:module, l.product:id, l.individual_field:code ) }">
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Load values using Module_Product_Field_Value_Array
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.array_field" ARRAY = "l.query_params:data:customfield_state:plan:array" COUNT = "{ l.query_params:data:customfield_state:plan:array_count }">
		<MvREFERENCEARRAY NAME = "l.values" VARIABLE = "l.product">
			<MvMEMBER NAME = "customfield_values">
			<MvMEMBER NAME = "{ l.array_field:output_module_code }">
			<MvMEMBER NAME = "{ l.array_field:output_field_code }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.reference_array"	VALUE = "">
		<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_ref( l.reference_array, l.values, -1 ) }">
		<MvREFERENCE NAME = "l.product:customfield" MEMBER = "{ l.array_field:output_field_code }" VARIABLE = "l.reference_array[ 1 ]">

		<MvIF EXPR = "{ l.array_field:module:api_ver LT 9.08 }">	<MvASSIGN NAME = "l.values"	VALUE = "{ [ g.Module_Root $ l.array_field:module:module ].Module_Product_Field_Value( l.array_field:module, l.product:id, l.array_field:code ) }">
		<MvELSE> 													<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.array_field:module:module ].Module_Product_Field_Value_Array( l.array_field:module, l.product:id, l.array_field:code, l.values ) }">
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Load values using Module_Product_Fields_Mapped
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.map_data" ARRAY = "l.query_params:data:customfield_state:plan:map" COUNT = "{ l.query_params:data:customfield_state:plan:map_count }">
		<MvREFERENCEARRAY NAME = "l.module_output" VARIABLE = "l.product">
			<MvMEMBER NAME = "customfield_values">
			<MvMEMBER NAME = "{ l.map_data:output_module_code }">
		</MvREFERENCEARRAY>

		<MvFOREACH ITERATOR = "l.field_code" ARRAY = "l.field_codes" COUNT = "{ miva_struct_members( l.map_data:field_map, l.field_codes ) }">
			<MvREFERENCEARRAY NAME = "l.output_field_code" VARIABLE = "l.map_data:field_map">
				<MvMEMBER NAME = "{ l.field_code }">
			</MvREFERENCEARRAY>

			<MvREFERENCEARRAY NAME = "l.mapped_value" VARIABLE = "l.product">
				<MvMEMBER NAME = "customfield_values">
				<MvMEMBER NAME = "{ l.map_data:output_module_code }">
				<MvMEMBER NAME = "{ l.output_field_code }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.reference_array"	VALUE = "">
			<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_ref( l.reference_array, l.mapped_value, -1 ) }">
			<MvREFERENCE NAME = "l.product:customfield" MEMBER = "{ l.output_field_code }" VARIABLE = "l.reference_array[ 1 ]">
		</MvFOREACH>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.map_data:module:module ].Module_Product_Fields_Mapped( l.map_data:module, l.product:id, l.map_data:field_map, l.module_output ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvINCLUDE FILE = "modules/util/productdata/functions.mv">
<MvINCLUDE FILE = "modules/util/productdata/productdatafieldaddeditdialog.mv">
<MvINCLUDE FILE = "modules/util/productdata/productdatasettingsdialog.mv">
<MvINCLUDE FILE = "modules/util/productdata/productdatafieldlist.mv">

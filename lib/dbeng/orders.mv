<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-DBE-ORD-
| Next Error Code: 43
|
</MvCOMMENT>

<MvFUNCTION NAME = "Order_Create_Empty" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT StandardFields_Load_Cached( l.std_fields ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.order:id"			VALUE = "{ StoreKey_Generate( 'Orders' ) }">
	<MvASSIGN NAME = "l.order:batch_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:status"		VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:stk_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_instock"	VALUE = 0>
	<MvASSIGN NAME = "l.order:orderdate"	VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.order:cust_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:ship_fname"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_lname"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_email"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_comp"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_phone"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_fax"		VALUE = "">
	<MvASSIGN NAME = "l.order:ship_addr"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_addr1"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_addr2"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_city"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_state"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_zip"		VALUE = "">
	<MvASSIGN NAME = "l.order:ship_cntry"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_fname"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_lname"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_email"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_comp"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_phone"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_fax"		VALUE = "">
	<MvASSIGN NAME = "l.order:bill_addr"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_addr1"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_addr2"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_city"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_state"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_zip"		VALUE = "">
	<MvASSIGN NAME = "l.order:bill_cntry"	VALUE = "">
	<MvASSIGN NAME = "l.order:ship_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:ship_data"	VALUE = "">
	<MvASSIGN NAME = "l.order:total"		VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_ship"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_tax"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_auth"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_capt"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_rfnd"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:net_capt"		VALUE = 0.00>
	<MvASSIGN NAME = "l.order:pend_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:bord_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:note_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_updated"	VALUE = "{ l.order:orderdate }">

	<MvIF EXPR = "{ l.std_fields:ship_res EQ 'C' }">	<MvASSIGN NAME = "l.order:ship_res" VALUE = 0>
	<MvELSE>											<MvASSIGN NAME = "l.order:ship_res" VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT Order_Insert( l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Orders() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Insert" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Order_Insert_LowLevel( l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_order', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Order_Insert( l.module, l.order ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "v56_Order_Create" PARAMETERS = "basket var, total, order var" STANDARDOUTPUTLEVEL = "">
	<MvTRANSACT NAME = "Merchant">

	<MvIF EXPR = "{ NOT Order_Create_LowLevel( l.basket, l.total, l.order ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "v96_Order_Create" PARAMETERS = "basket var, total, order var, paymentcard var, existing_subscription var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-ORD-00024', 'This function has been deprecated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Create_LowLevel" PARAMETERS = "basket var, total, order var" STANDARDOUTPUTLEVEL = "">
	<MvTRANSACT NAME = "Merchant">

	<MvASSIGN NAME = "l.order:id"			VALUE = "{ l.basket:order_id }">
	<MvASSIGN NAME = "l.order:batch_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:status"		VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:stk_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_instock"	VALUE = 0>
	<MvASSIGN NAME = "l.order:orderdate"	VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.order:cust_id"		VALUE = "{ l.basket:cust_id }">
	<MvASSIGN NAME = "l.order:ship_res" 	VALUE = "{ l.basket:ship_res }">
	<MvASSIGN NAME = "l.order:ship_fname"	VALUE = "{ l.basket:ship_fname }">
	<MvASSIGN NAME = "l.order:ship_lname"	VALUE = "{ l.basket:ship_lname }">
	<MvASSIGN NAME = "l.order:ship_email"	VALUE = "{ l.basket:ship_email }">
	<MvASSIGN NAME = "l.order:ship_comp"	VALUE = "{ l.basket:ship_comp }">
	<MvASSIGN NAME = "l.order:ship_phone"	VALUE = "{ l.basket:ship_phone }">
	<MvASSIGN NAME = "l.order:ship_fax"		VALUE = "{ l.basket:ship_fax }">
	<MvASSIGN NAME = "l.order:ship_addr"	VALUE = "{ l.basket:ship_addr }">
	<MvASSIGN NAME = "l.order:ship_addr1"	VALUE = "{ l.basket:ship_addr1 }">
	<MvASSIGN NAME = "l.order:ship_addr2"	VALUE = "{ l.basket:ship_addr2 }">
	<MvASSIGN NAME = "l.order:ship_city"	VALUE = "{ l.basket:ship_city }">
	<MvASSIGN NAME = "l.order:ship_state"	VALUE = "{ l.basket:ship_state }">
	<MvASSIGN NAME = "l.order:ship_zip"		VALUE = "{ l.basket:ship_zip }">
	<MvASSIGN NAME = "l.order:ship_cntry"	VALUE = "{ l.basket:ship_cntry }">
	<MvASSIGN NAME = "l.order:bill_fname"	VALUE = "{ l.basket:bill_fname }">
	<MvASSIGN NAME = "l.order:bill_lname"	VALUE = "{ l.basket:bill_lname }">
	<MvASSIGN NAME = "l.order:bill_email"	VALUE = "{ l.basket:bill_email }">
	<MvASSIGN NAME = "l.order:bill_comp"	VALUE = "{ l.basket:bill_comp }">
	<MvASSIGN NAME = "l.order:bill_phone"	VALUE = "{ l.basket:bill_phone }">
	<MvASSIGN NAME = "l.order:bill_fax"		VALUE = "{ l.basket:bill_fax }">
	<MvASSIGN NAME = "l.order:bill_addr"	VALUE = "{ l.basket:bill_addr }">
	<MvASSIGN NAME = "l.order:bill_addr1"	VALUE = "{ l.basket:bill_addr1 }">
	<MvASSIGN NAME = "l.order:bill_addr2"	VALUE = "{ l.basket:bill_addr2 }">
	<MvASSIGN NAME = "l.order:bill_city"	VALUE = "{ l.basket:bill_city }">
	<MvASSIGN NAME = "l.order:bill_state"	VALUE = "{ l.basket:bill_state }">
	<MvASSIGN NAME = "l.order:bill_zip"		VALUE = "{ l.basket:bill_zip }">
	<MvASSIGN NAME = "l.order:bill_cntry"	VALUE = "{ l.basket:bill_cntry }">
	<MvASSIGN NAME = "l.order:ship_id"		VALUE = "{ l.basket:ship_id }">
	<MvASSIGN NAME = "l.order:ship_data"	VALUE = "{ l.basket:ship_data }">
	<MvASSIGN NAME = "l.order:total"		VALUE = "{ l.total }">
	<MvASSIGN NAME = "l.order:total_ship"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_tax"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_auth"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_capt"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_rfnd"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:net_capt"		VALUE = 0.00>
	<MvASSIGN NAME = "l.order:pend_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:bord_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:note_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_updated"	VALUE = "{ l.order:orderdate }">

	<MvIF EXPR = "{ NOT OrderItem_Copy_Basket_WithoutInventory( l.basket, l.order ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT OrderInfo_Copy_BasketInfo( l.order, l.basket ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Order_Insert( l.order )													OR
					NOT Order_Update_PaymentTotals( l.order )									OR
					NOT	OrderItemDiscount_Copy_Basket( l.basket )								OR
					NOT OrderOption_Copy_Basket( l.basket )										OR
					NOT OrderOptionDiscount_Copy_Basket( l.basket )								OR
					NOT OrderCharge_Copy_Basket( l.basket )										OR
					NOT [ g.Module_Feature_PGR_DB ].OrderCoupon_Copy_Basket( l.basket )			OR
					NOT [ g.Module_Feature_PGR_DB ].OrderDiscountTotal_Copy_Basket( l.basket ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.order:cust_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Update_OrderMetrics( l.order:cust_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Orders() }">
	<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Revenue( l.total ) }">
	<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Update_Products_From_Basket( l.basket ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_AFF_DB ].Affiliate_Create_Order( g.Session_ID, l.order:id, l.total ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.basket:order_proc"	VALUE = 1>

	<MvIF EXPR = "{ NOT Basket_Update_Order( l.basket ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT StoreModule_Increment_ReferenceCount( l.order:ship_id, 'shipping' ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "v56_Order_Delete" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_order', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Order_Delete( l.module, l.order ) }">
		</MvIF>
	</MvFOREACH>

	<MvTRANSACT NAME = "Merchant">

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ OrderItemList_Load_Order( l.order:id, l.orderitems ) }">
		<MvCOMMENT>
		|
		| Reclaim inventory for line items that would normally be reclaimed if they were deleted separately
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ( l.orderitem:status EQ 0 ) OR
						( l.orderitem:status EQ 100 ) OR
						( l.orderitem:status EQ 400 ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant( l.orderitem, l.product, l.variant_id ) }">
				<MvROLLBACK NAME = "Merchant">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ l.product:id }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.variant_id, l.orderitem:quantity ) }">
					<MvROLLBACK NAME = "Merchant">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT OrderItem_Delete( l.orderitem:order_id, l.orderitem:line_id )	OR
						NOT OrderItemDiscount_Delete_All_Line( l.orderitem:line_id )		OR
						NOT OrderOption_Delete_All_Line( l.orderitem:line_id )				OR
						NOT OrderOptionDiscount_Delete_All_Line( l.orderitem:line_id ) }">
			<MvROLLBACK NAME = "Merchant">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT StoreModule_Decrement_ReferenceCount( l.order:ship_id, 'shipping' )				OR
					NOT OrderInfo_Delete_All_Order( l.order:id )										OR
					NOT OrderItemDiscount_Delete_All_Order( l.order:id )								OR
					NOT OrderOptionDiscount_Delete_All_Order( l.order:id )								OR
					NOT OrderShipment_Delete_All_Order( l.order:id )									OR
					NOT OrderShipmentLabel_Delete_All_Order( l.order:id )								OR
					NOT OrderReturn_Delete_All_Order( l.order:id )										OR
					NOT OrderCharge_Delete_All_Order( l.order:id )										OR
					NOT OrderPayment_Delete_All_Order( l.order:id )										OR
					NOT OrderSource_Delete_All_Order( l.order:id )										OR
					NOT [ g.Module_Feature_PGR_DB ].OrderCoupon_Delete_All_Order( l.order:id )			OR
					NOT [ g.Module_Feature_PGR_DB ].OrderDiscountTotal_Delete_All_Order( l.order:id ) 	OR
					NOT [ g.Module_Feature_PAY_DB ].OrderPaymentCard_Detach_All_Order( l.order ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Order_Delete_ID( l.order:id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.order:cust_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Update_OrderMetrics( l.order:cust_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Copy_Basket_WithoutInventory" PARAMETERS = "basket var, order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basketitem_count"			VALUE = "{ BasketItemList_Load_Basket( l.basket:basket_id, l.basketitems ) }">

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ l.basketitem_count }">
		<MvASSIGN NAME = "l.orderitem"				VALUE = "{ l.basketitem }">
		<MvASSIGN NAME = "l.orderitem:order_id"		VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderitem:status"		VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:shpmnt_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:dt_instock"	VALUE = 0>

		<MvIF EXPR = "{ NOT OrderItem_Insert_LowLevel( l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.order:pend_count"			VALUE = "{ l.basketitem_count }">
	<MvASSIGN NAME = "l.order:bord_count"			VALUE = 0>
	<MvASSIGN NAME = "l.order:stk_status"			VALUE = 0>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Copy_Basket_WithInventory" PARAMETERS = "basket var, order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basketitem_count"		VALUE = "{ BasketItemList_Load_Basket( l.basket:basket_id, l.basketitems ) }">
	<MvASSIGN NAME = "l.product_count"			VALUE = "{ Runtime_ProductList_Load_Basket( l.basket:basket_id, l.products ) }">
	<MvASSIGN NAME = "l.inventory_count"		VALUE = 0>
	<MvASSIGN NAME = "l.inventory_out_count"	VALUE = 0>

	<MvCOMMENT>
	|
	| There may be less products than basket items, due to "virtual" basket entries, so we cannot just
	| iterate through both arrays simultaneously.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.basketitem_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.basketitem_pos LE l.basketitem_count }">
		<MvASSIGN NAME = "l.orderitem"				VALUE = "{ l.basketitems[ l.basketitem_pos ] }">
		<MvASSIGN NAME = "l.orderitem:order_id"		VALUE = "{ l.basket:order_id }">
		<MvASSIGN NAME = "l.orderitem:status"		VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:shpmnt_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:dt_instock"	VALUE = 0>

		<MvASSIGN NAME = "l.product_pos"			VALUE = 1>
		<MvWHILE EXPR = "{ l.product_pos LE l.product_count }">
			<MvIF EXPR = "{ l.products[ l.product_pos ]:id EQ l.basketitems[ l.basketitem_pos ]:product_id }">
				<MvIF EXPR = "{ l.products[ l.product_pos ]:inv_active }">
					<MvASSIGN NAME = "l.inventory_count"			VALUE = "{ l.inventory_count + 1 }">

					<MvIF EXPR = "{ ( l.products[ l.product_pos ]:inv_low_track AND
									  l.products[ l.product_pos ]:inv_instock LT l.products[ l.product_pos ]:inv_low_level ) OR
									( l.products[ l.product_pos ]:inv_out_track AND
									  l.products[ l.product_pos ]:inv_instock LT l.products[ l.product_pos ]:inv_out_level ) }">
						<MvASSIGN NAME = "l.orderitem:status"		VALUE = 400>
						<MvASSIGN NAME = "l.inventory_out_count"	VALUE = "{ l.inventory_out_count + 1 }">
					</MvIF>
				</MvIF>

				<MvWHILESTOP>
			</MvIF>

			<MvASSIGN NAME = "l.product_pos"		VALUE = "{ l.product_pos + 1 }">
		</MvWHILE>

		<MvIF EXPR = "{ NOT OrderItem_Insert_LowLevel( l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.basketitem_pos"	VALUE = "{ l.basketitem_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.order:pend_count"	VALUE = "{ l.basketitem_count - l.inventory_out_count }">
	<MvASSIGN NAME = "l.order:bord_count"	VALUE = "{ l.inventory_out_count }">

	<MvCOMMENT>
	|
	| If there are any non-inventory items in an Order, its stock status is "Pending" (0)
	| If all items are inventory, and in stock, its status is "Yes" (100)
	| If all items are inventory, and one or more are out of stock, its status is "Partial" (201)
	| If all items are inventory, and all items are out of stock, its status is "No" (200)
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.inventory_count NE l.basketitem_count }">
		<MvASSIGN NAME = "l.order:stk_status"	VALUE = 0>
	<MvELSEIF EXPR = "{ l.inventory_out_count EQ 0 }">
		<MvASSIGN NAME = "l.order:stk_status" VALUE = 100>
	<MvELSEIF EXPR = "{ l.inventory_out_count LT l.basketitem_count }">
		<MvASSIGN NAME = "l.order:stk_status"	VALUE = 201>
	<MvELSE>
		<MvASSIGN NAME = "l.order:stk_status"	VALUE = 200>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderInfo_Copy_BasketInfo" PARAMETERS = "order var, basket var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderInfo
			 			  ( order_id, module_id, type, info )
			 			  SELECT
			 				?, module_id, type, info
			 			  FROM ' $ 
			 				g.Store_Table_Prefix $ 'BasketInfo
			 			  WHERE
			 				basket_id = ? AND orderinfo = 1' }"
			 FIELDS = "l.order:id, l.basket:basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-ORD-00034', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Copy_Basket" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderItems
						  ( order_id, line_id, status, shpmnt_id, rma_id, dt_instock, product_id, code, name,
						    sku, retail, base_price, price, weight, taxable, upsold, quantity, tax )
						  SELECT
							?, line_id, 0, 0, 0, \'\', product_id, code, name, sku, retail, base_price, price, weight, taxable, upsold, quantity, tax
						  FROM ' $
							g.Store_Table_Prefix $ 'BasketItems
						  WHERE
							basket_id = ?' }"
			 FIELDS	= "l.basket:order_id, l.basket:basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemDiscount_Copy_Basket" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderItemDiscounts
						  ( order_id, line_id, pgrp_id, priority, display, descrip, discount )
						  SELECT
							?, line_id, pgrp_id, priority, display, descrip, discount
						  FROM ' $
							g.Store_Table_Prefix $ 'BasketItemDiscounts
						  WHERE
							basket_id = ?' }"
			 FIELDS	= "l.basket:order_id, l.basket:basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00017', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemDiscount_Copy_Line" PARAMETERS = "old_line_id, new_line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderItemDiscounts
						  ( order_id, line_id, pgrp_id, priority, display, descrip, discount )
						  SELECT
							order_id, ?, pgrp_id, priority, display, descrip, discount
						  FROM ' $
							g.Store_Table_Prefix $ 'OrderItemDiscounts
						  WHERE
							line_id = ?' }"
			 FIELDS	= "l.new_line_id, l.old_line_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00021', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Explode" PARAMETERS = "orderitem var, exploded_orderitems var, exploded_orderitem_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.exploded_orderitems"		VALUE = "">
	<MvASSIGN NAME = "l.exploded_orderitem_count"	VALUE = "{ miva_array_insert_ref( l.exploded_orderitems, l.orderitem, -1 ) }">
	<MvASSIGN NAME = "l.copy_count"					VALUE = "{ l.orderitem:quantity - 1 }">

	<MvIF EXPR = "{ l.copy_count LE 0 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Update the original order item quantity (which also references
	| the first exploded order item)
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.orderitem:quantity" VALUE = 1>

	<MvIF EXPR = "{ NOT OrderItem_Update( l.orderitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOR COUNT = "{ l.copy_count }">
		<MvASSIGN NAME = "l.exploded_orderitem"				VALUE = "{ l.orderitem }">
		<MvASSIGN NAME = "l.exploded_orderitem:line_id"		VALUE = "{ StoreKey_Generate( 'BasketItems' ) }">
		<MvASSIGN NAME = "l.exploded_orderitem:quantity"	VALUE = 1>

		<MvIF EXPR = "{ NOT OrderItem_Insert_LowLevel( l.exploded_orderitem )									OR
						NOT OrderItemDiscount_Copy_Line( l.orderitem:line_id, l.exploded_orderitem:line_id )	OR
						NOT OrderOption_Copy_Line( l.orderitem:line_id, l.exploded_orderitem:line_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.exploded_orderitem_count"		VALUE = "{ miva_array_insert_var( l.exploded_orderitems, l.exploded_orderitem, -1 ) }">
	</MvFOR>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOption_Copy_Basket" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderOptions
						  ( id, order_id, line_id, attr_id, attr_code, attmpat_id, option_id, opt_code,
						    retail, base_price, price, weight, data, data_long )
						  SELECT
							id, ?, line_id, attr_id, attr_code, attmpat_id, option_id, opt_code, retail, base_price, price, weight, data, data_long
						  FROM ' $
							g.Store_Table_Prefix $ 'BasketOptions
						  WHERE
							basket_id = ?' }"
			 FIELDS	= "l.basket:order_id, l.basket:basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOption_Copy_Line" PARAMETERS = "old_line_id, new_line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderOptions"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'OrderOptions WHERE line_id = ?' }"
				FIELDS	= "l.old_line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00035', g.MvQUERY_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT OrderOptions.d.EOF }">
		<MvEVAL EXPR = "{ OrderOption_Read( l.orderoption ) }">

		<MvASSIGN NAME = "l.old_lineopt_id"			VALUE = "{ l.orderoption:id }">
		<MvASSIGN NAME = "l.orderoption:line_id"	VALUE = "{ l.new_line_id }">

		<MvIF EXPR = "{ NOT OrderOption_Insert( l.orderoption ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptions">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT OrderOptionDiscount_Copy_LineOption( l.old_lineopt_id, l.new_line_id, l.orderoption:id ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptions">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "OrderOptions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptions">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOptionDiscount_Copy_Basket" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderOptionDiscounts
						  ( order_id, line_id, lineopt_id, attr_id, attmpat_id, pgrp_id, priority, display, descrip, discount )
						  SELECT
							?, line_id, lineopt_id, attr_id, attmpat_id, pgrp_id, priority, display, descrip, discount
						  FROM ' $
							g.Store_Table_Prefix $ 'BasketOptionDiscounts
						  WHERE
							basket_id = ?' }"
			 FIELDS	= "l.basket:order_id, l.basket:basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00018', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOptionDiscount_Copy_Line" PARAMETERS = "old_line_id, new_line_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00039', 'Function OrderOptionDiscount_Copy_Line has been deprecated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOptionDiscount_Copy_LineOption" PARAMETERS = "old_lineopt_id, new_line_id, new_lineopt_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderOptionDiscounts
						  ( order_id, line_id, lineopt_id, attr_id, attmpat_id, pgrp_id, priority, display, descrip, discount )
						  SELECT
							order_id, ?, ?, attr_id, attmpat_id, pgrp_id, priority, display, descrip, discount
						  FROM ' $
							g.Store_Table_Prefix $ 'OrderOptionDiscounts
						  WHERE
							lineopt_id	= ?' }"
			 FIELDS	= "l.new_line_id, l.new_lineopt_id, l.old_lineopt_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00023', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderCharge_Copy_Basket" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderCharges
						  ( order_id, charge_id, module_id, type, descrip, amount, disp_amt, tax_exempt, tax )
						  SELECT
							?, charge_id, module_id, type, descrip, amount, disp_amt, tax_exempt, tax
						  FROM ' $
							g.Store_Table_Prefix $ 'BasketCharges
						  WHERE
							basket_id = ?' }"
			 FIELDS	= "l.basket:order_id, l.basket:basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemDiscount_Total_Line" PARAMETERS = "line_id, total var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderItemDiscounts"
				QUERY	= "{ 'SELECT SUM( discount ) AS total FROM ' $ g.Store_Table_Prefix $ 'OrderItemDiscounts WHERE line_id = ?' }"
				FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00019', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderItemDiscounts.d.EOF }">	<MvASSIGN NAME = "l.total"	VALUE = 0.00>
	<MvELSE>										<MvASSIGN NAME = "l.total"	VALUE = "{ OrderItemDiscounts.d.total ROUND 2 }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderItemDiscounts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOptionDiscount_Total_Option" PARAMETERS = "line_id, attr_id, attmpat_id, total var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderOptionDiscounts"
				QUERY	= "{ 'SELECT
								SUM( discount ) AS total
							  FROM
								' $ g.Store_Table_Prefix $ 'OrderOptionDiscounts
							  WHERE
								line_id		= ?	AND
								attr_id		= ?	AND
								attmpat_id	= ?' }"
				FIELDS	= "l.line_id, l.attr_id, l.attmpat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00020', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderOptionDiscounts.d.EOF }">	<MvASSIGN NAME = "l.total"	VALUE = 0.00>
	<MvELSE>										<MvASSIGN NAME = "l.total"	VALUE = "{ OrderOptionDiscounts.d.total ROUND 2 }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptionDiscounts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOptionDiscount_Total_LineOption_ID" PARAMETERS = "lineopt_id, total var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderOptionDiscounts"
				QUERY	= "{ 'SELECT
								SUM( discount ) AS total
							  FROM
								' $ g.Store_Table_Prefix $ 'OrderOptionDiscounts
							  WHERE
								lineopt_id	= ?' }"
				FIELDS	= "l.lineopt_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00038', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderOptionDiscounts.d.EOF }">	<MvASSIGN NAME = "l.total"	VALUE = 0.00>
	<MvELSE>										<MvASSIGN NAME = "l.total"	VALUE = "{ OrderOptionDiscounts.d.total ROUND 2 }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptionDiscounts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOption_Total_Line" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "OrderOptions"
				QUERY	= "{ 'SELECT
								price
							  FROM ' $
								g.Store_Table_Prefix $ 'OrderOptions
							  WHERE
								line_id	= ?' }"
				FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total" VALUE = 0>
	<MvWHILE EXPR = "{ NOT OrderOptions.d.EOF }">
		<MvASSIGN NAME = "l.total"	VALUE = "{ l.total + OrderOptions.d.price }">
		<MvSKIP NAME = "Merchant" VIEW = "OrderOptions" ROWS = "1">
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptions">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOption_Line_Weight" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "OrderOptions"
				QUERY	= "{ 'SELECT
								SUM( weight ) AS weight
							  FROM
								' $ g.Store_Table_Prefix $ 'OrderOptions
							  WHERE
								line_id	= ?' }"
				FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00016', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.weight"	VALUE = "{ OrderOptions.d.weight }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptions">

	<MvFUNCTIONRETURN VALUE = "{ l.weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderCharge_Total" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "OrderCharges"
				QUERY	= "{ 'SELECT
								amount
							  FROM ' $
								g.Store_Table_Prefix $ 'OrderCharges
							  WHERE
								order_id	= ?' }"
				FIELDS	= "l.order_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total" VALUE = 0>
	<MvWHILE EXPR = "{ NOT OrderCharges.d.EOF }">
		<MvASSIGN NAME = "l.total"	VALUE = "{ l.total + ( OrderCharges.d.amount ROUND 2 ) }">
		<MvSKIP NAME = "Merchant" VIEW = "OrderCharges" ROWS = "1">
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderCharges">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Change_Shipping" PARAMETERS = "order var, ship_id, ship_data" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.order:ship_id AND ( l.order:ship_id NE l.ship_id ) }">
		<MvIF EXPR = "{ NOT StoreModule_Decrement_ReferenceCount( l.order:ship_id, 'shipping' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ( l.order:ship_id EQ 0 ) OR ( l.order:ship_id NE l.ship_id ) }">
		<MvIF EXPR = "{ NOT StoreModule_Increment_ReferenceCount( l.ship_id, 'shipping' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.order:ship_id"		VALUE = "{ l.ship_id }">
	<MvASSIGN NAME = "l.order:ship_data"	VALUE = "{ l.ship_data }">

	<MvFUNCTIONRETURN VALUE = "{ Order_Update_Shipping( l.order ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Update_Status" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderItemStatus"
				QUERY	= "{ 'SELECT COUNT( * ) AS oi_count, status FROM ' $ g.Store_Table_Prefix $ 'OrderItems WHERE order_id = ? GROUP BY status ORDER BY status' }"
				FIELDS	= "l.order:id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00006', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Build a sparse array of the various statuses.  We add 10000 to the status value to allow values of 0
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.total_items"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT OrderItemStatus.d.EOF }">
		<MvASSIGN NAME = "l.total_items"											VALUE = "{ l.total_items + OrderItemStatus.d.oi_count }">
		<MvASSIGN NAME = "l.counts" INDEX = "{ OrderItemStatus.d.status + 10000 }"	VALUE = "{ OrderItemStatus.d.oi_count }">

		<MvSKIP NAME = "Merchant" VIEW = "OrderItemStatus" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderItemStatus">

	<MvCOMMENT>
	|
	| Calculate the status
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.total_items AND
					( l.counts[ 300 + 10000 ] EQ l.total_items ) }">		<MvASSIGN NAME = "l.order_status"	VALUE = 300>	<MvCOMMENT> Cancelled </MvCOMMENT>
	<MvELSE>
		<MvASSIGN NAME = "l.total_items" VALUE = "{ l.total_items - l.counts[ 300 + 10000 ] - l.counts[ 999 + 10000 ] }">		<MvCOMMENT> Exclude cancelled / adjusted items from the remainder of the calculations </MvCOMMENT>

		<MvIF EXPR = "{ l.counts[ 0 + 10000 ] EQ l.total_items }">			<MvASSIGN NAME = "l.order_status"	VALUE = 0>		<MvCOMMENT> Pending </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.counts[ 200 + 10000 ] EQ l.total_items }">	<MvASSIGN NAME = "l.order_status"	VALUE = 200>	<MvCOMMENT> Shipped </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.counts[ 200 + 10000 ] +
							l.counts[ 210 + 10000 ] +
							l.counts[ 211 + 10000 ] +
							l.counts[ 220 + 10000 ] +
							l.counts[ 221 + 10000 ] EQ l.total_items }">	<MvASSIGN NAME = "l.order_status"	VALUE = 200>	<MvCOMMENT> Digital and Gift Certificate Products result in Order Status Shipped </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.counts[ 400 + 10000 ] EQ l.total_items }">	<MvASSIGN NAME = "l.order_status"	VALUE = 400>	<MvCOMMENT> Backordered </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.counts[ 500 + 10000 ] EQ l.total_items }">	<MvASSIGN NAME = "l.order_status"	VALUE = 500>	<MvCOMMENT> RMA Issued </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.counts[ 600 + 10000 ] EQ l.total_items }">	<MvASSIGN NAME = "l.order_status"	VALUE = 600>	<MvCOMMENT> Returned </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.counts[ 200 + 10000 ] +
							l.counts[ 500 + 10000 ] +
							l.counts[ 600 + 10000 ] EQ l.total_items }">	<MvASSIGN NAME = "l.order_status"	VALUE = 200>	<MvCOMMENT> Shipped, with RMA Issued or Returned items that should not affect the status </MvCOMMENT>
		<MvELSEIF EXPR = "{ l.counts[ 200 + 10000 ] OR
							l.counts[ 210 + 10000 ] OR
							l.counts[ 211 + 10000 ] OR
							l.counts[ 220 + 10000 ] OR
							l.counts[ 221 + 10000 ] }">						<MvASSIGN NAME = "l.order_status"	VALUE = 201>	<MvCOMMENT> Partially Shipped </MvCOMMENT>
		<MvELSE>															<MvASSIGN NAME = "l.order_status"	VALUE = 100>	<MvCOMMENT> Processing </MvCOMMENT>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.order:pend_count"	VALUE = "{ l.counts[ 0 + 10000 ] + 0 }">
	<MvASSIGN NAME = "l.order:bord_count"	VALUE = "{ l.counts[ 400 + 10000 ] + 0 }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'Orders
						  SET
							status		= ?,
							dt_instock	= ( SELECT ' $ [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'MAX( dt_instock )', '0' ) $ ' FROM ' $ g.Store_Table_Prefix $ 'OrderItems WHERE order_id = ? ),
							pend_count	= ?,
							bord_count	= ?
						  WHERE id = ?' }"
			 FIELDS	= "l.order_status, l.order:id, l.order:pend_count, l.order:bord_count, l.order:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ l.order_status NE l.order:status }">
		<MvASSIGN NAME = "l.original_status"	VALUE = "{ l.order:status }">
		<MvASSIGN NAME = "l.order:status"		VALUE = "{ l.order_status }">

		<MvASSIGN NAME = "l.module_pos"			VALUE = 1>
		<MvASSIGN NAME = "l.module_count"		VALUE = "{ StoreModuleList_Load_Features_Cached( 'not_order', l.modules ) }">

		<MvWHILE EXPR = "{ l.module_pos LE l.module_count }">
			<MvDO FILE = "{ g.Module_Root $ l.modules[ l.module_pos ]:module }" NAME = "l.ok" VALUE = "{ Module_Notify_Order_StatusChange( l.modules[ l.module_pos ], l.original_status, l.order ) }">
			<MvASSIGN NAME = "l.module_pos"		VALUE = "{ l.module_pos + 1 }">
		</MvWHILE>
	</MvIF>

	<MvCOMMENT>
	|
	| Update the order's shipping and tax totals here.  A lot of modules / core software
	| call this function after inserting their own order charges or after modifying something
	| with the order.  This ensures the shipping and tax totals are kept up to date.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT Order_Update_ShippingAndTaxTotals( l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Update_PaymentTotals" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderPaymentTotals"
				QUERY	= "{ 'SELECT type, SUM( amount ) AS amount FROM ' $ g.Store_Table_Prefix $ 'OrderPayments WHERE order_id = ? GROUP BY type ORDER BY type' }"
				FIELDS	= "l.order:id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00008', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.order:total_auth"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_capt"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_rfnd"	VALUE = 0.00>

	<MvWHILE EXPR = "{ NOT OrderPaymentTotals.d.EOF }">
		<MvIF EXPR = "{ OrderPaymentTotals.d.type EQ 0 }">			<MvCOMMENT> Decline </MvCOMMENT>
		<MvELSEIF EXPR = "{ OrderPaymentTotals.d.type EQ 1 }">		<MvCOMMENT> Legacy Authorization </MvCOMMENT>
			<MvASSIGN NAME = "l.order:total_auth"	VALUE = "{ l.order:total_auth + OrderPaymentTotals.d.amount }">
		<MvELSEIF EXPR = "{ OrderPaymentTotals.d.type EQ 2 }">		<MvCOMMENT> Legacy Capture </MvCOMMENT>
			<MvASSIGN NAME = "l.order:total_capt"	VALUE = "{ l.order:total_capt + OrderPaymentTotals.d.amount }">
		<MvELSEIF EXPR = "{ OrderPaymentTotals.d.type EQ 3 }">		<MvCOMMENT> Authorization </MvCOMMENT>
			<MvASSIGN NAME = "l.order:total_auth"	VALUE = "{ l.order:total_auth + OrderPaymentTotals.d.amount }">
		<MvELSEIF EXPR = "{ OrderPaymentTotals.d.type EQ 4 }">		<MvCOMMENT> Capture </MvCOMMENT>
			<MvASSIGN NAME = "l.order:total_capt"	VALUE = "{ l.order:total_capt + OrderPaymentTotals.d.amount }">
		<MvELSEIF EXPR = "{ OrderPaymentTotals.d.type EQ 5 }">		<MvCOMMENT> Authorization + Capture </MvCOMMENT>
			<MvASSIGN NAME = "l.order:total_auth"	VALUE = "{ l.order:total_auth + OrderPaymentTotals.d.amount }">
			<MvASSIGN NAME = "l.order:total_capt"	VALUE = "{ l.order:total_capt + OrderPaymentTotals.d.amount }">
		<MvELSEIF EXPR = "{ OrderPaymentTotals.d.type EQ 6 }">		<MvCOMMENT> Refund </MvCOMMENT>
			<MvASSIGN NAME = "l.order:total_rfnd"	VALUE = "{ l.order:total_rfnd + OrderPaymentTotals.d.amount }">
		<MvELSEIF EXPR = "{ OrderPaymentTotals.d.type EQ 7 }">		<MvCOMMENT> VOID </MvCOMMENT>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "OrderPaymentTotals" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderPaymentTotals">

	<MvASSIGN NAME = "l.order:total_auth"	VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.order:total_auth ) }">
	<MvASSIGN NAME = "l.order:total_capt"	VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.order:total_capt ) }">
	<MvASSIGN NAME = "l.order:total_rfnd"	VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.order:total_rfnd ) }">
	<MvASSIGN NAME = "l.order:net_capt"		VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.order:total_capt - l.order:total_rfnd ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'OrderPayments', 'SELECT pay_id FROM ' $ g.Store_Table_Prefix $ 'OrderPayments WHERE order_id = ? ORDER BY id DESC', [ g.Library_Filename_DB ].SQL_Query_Field( l.order:id ), 0, 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT OrderPayments.d.EOF }">	<MvASSIGN NAME = "l.order:pay_id" VALUE = "{ OrderPayments.d.pay_id }">
	<MvELSE>									<MvASSIGN NAME = "l.order:pay_id" VALUE = 0>
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderPayments">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'Orders
						  SET
							pay_id		= ?,
							total_auth	= ?,
							total_capt	= ?,
							total_rfnd	= ?,
							net_capt	= ?
						  WHERE
							id = ?' }"
			 FIELDS	= "l.order:pay_id, l.order:total_auth, l.order:total_capt, l.order:total_rfnd, l.order:net_capt,
					   l.order:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Update_ShippingAndTaxTotals" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.order:total_ship"	VALUE = "{ miva_ieee754_normalize( 2, OrderCharge_Total_Type( l.order:id, 'SHIPPING' ) ) }">
	<MvASSIGN NAME = "l.order:total_tax"	VALUE = "{ miva_ieee754_normalize( 2, OrderCharge_Total_Type( l.order:id, 'TAX' ) ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'Orders
			 			  SET
			 			  	total_ship	= ?,
			 			  	total_tax	= ?
			 			  WHERE
			 			  	id			= ?' }"
			 FIELDS = "l.order:total_ship, l.order:total_tax,
			 		   l.order:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00033', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipment_SubTotal" PARAMETERS = "shpmnt_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.subtotal"	VALUE = "{ OrderItem_Total_OrderShipment( l.shpmnt_id ) + OrderOption_Total_OrderShipment( l.shpmnt_id ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.subtotal ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Total_OrderShipment" PARAMETERS = "shpmnt_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "OrderItems"
				QUERY	= "{ 'SELECT SUM( price * quantity ) AS total FROM ' $ g.Store_Table_Prefix $ 'OrderItems WHERE shpmnt_id = ?' }"
				FIELDS	= "l.shpmnt_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total"	VALUE = "{ OrderItems.d.total ROUND 2 }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderItems">

	<MvFUNCTIONRETURN VALUE = "{ l.total }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderOption_Total_OrderShipment" PARAMETERS = "shpmnt_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "OrderOptions"
				QUERY	= "{ 'SELECT
								SUM( oo.price * oi.quantity ) AS total
							  FROM ' $
								g.Store_Table_Prefix $ 'OrderItems oi, ' $
								g.Store_Table_Prefix $ 'OrderOptions oo
							  WHERE
								oi.shpmnt_id	= ?				AND
								oo.line_id		= oi.line_id' }"
				FIELDS	= "l.shpmnt_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00015', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total"	VALUE = "{ OrderOptions.d.total ROUND 2 }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderOptions">

	<MvFUNCTIONRETURN VALUE = "{ l.total }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_RemoveFromShipments" PARAMETERS = "orderitem_count, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.orderitem_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.shipment_count"		VALUE = 0>

	<MvCOMMENT>
	|
	| Build three arrays:
	|
	|  shipment_weights[ shipment_id ]	= weight of each shipment's items that are being deleted 
	|  shipment_items[ shipment_id ]	= number of orderitems removed from that shipment
	|  shipment_ids[ pos ]				= IDs of shipments that have items being removed
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ l.orderitem:shpmnt_id GT 0 }">
			<MvIF EXPR = "{ l.shipment_items[ l.orderitem:shpmnt_id ] EQ 0 }">
				<MvASSIGN NAME = "l.shipment_count"										VALUE = "{ l.shipment_count + 1 }">
				<MvASSIGN NAME = "l.shipment_ids"	INDEX = "{ l.shipment_count }"		VALUE = "{ l.orderitem:shpmnt_id }">	
			</MvIF>

			<MvASSIGN NAME = "l.shipment_weights" 	INDEX = "{ l.orderitem:shpmnt_id }" VALUE = "{ l.shipment_weights[ l.orderitem:shpmnt_id ] + ( ( l.orderitem:weight + OrderOption_Line_Weight( l.orderitem:line_id ) ) * l.orderitem:quantity ) }">			
			<MvASSIGN NAME = "l.shipment_items" 	INDEX = "{ l.orderitem:shpmnt_id }" VALUE = "{ l.shipment_items[ l.orderitem:shpmnt_id ] + 1 }">
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Iterate through the shipments being modified.  If count of orderitems is <= orderitems to be removed, delete
	| the shipment, otherwise, decrement the weight of the shipment. 
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.shipment_id" ARRAY = "l.shipment_ids" COUNT = "{ l.shipment_count }">
		<MvIF EXPR = "{ NOT OrderItem_Count_Shipment( l.shipment_id, l.count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.count LE l.shipment_items[ l.shipment_id ] }">
			<MvIF EXPR = "{ NOT OrderShipment_Delete( l.shipment_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT OrderShipment_Load_ID( l.shipment_id, l.ordershipment ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ l.ordershipment:status EQ 100 }">
				<MvASSIGN NAME = "l.ordershipment:weight" VALUE = "{ l.ordershipment:weight - l.shipment_weights[ l.shipment_id ] }">

				<MvIF EXPR = "{ NOT OrderShipment_Update_Status_LowLevel( l.ordershipment ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_Update_Status" PARAMETERS = "orderitem_count, original_orderitems var, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>
	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" INDEX = "l.pos" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitems[ l.pos ], l.orderitem ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_RemoveFromReturns" PARAMETERS = "orderitem_count, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.orderitem_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.return_count"		VALUE = 0>

	<MvCOMMENT>
	|
	| Build two arrays:
	|
	|  return_items[ return_id ]	= number of orderitems removed from that return
	|  return_ids[ pos ]			= IDs of returns that have items being removed
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ l.orderitem_pos LE l.orderitem_count }">
		<MvIF EXPR = "{ l.orderitems[ l.orderitem_pos ]:rma_id GT 0 }">
			<MvIF EXPR = "{ l.return_items[ l.orderitems[ l.orderitem_pos ]:rma_id ] EQ 0 }">
				<MvASSIGN NAME = "l.return_count"								VALUE = "{ l.return_count + 1 }">
				<MvASSIGN NAME = "l.return_ids"	INDEX = "{ l.return_count }"	VALUE = "{ l.orderitems[ l.orderitem_pos ]:rma_id }">
			</MvIF>

			<MvASSIGN NAME = "l.return_items" INDEX = "{ l.orderitems[ l.orderitem_pos ]:rma_id }" VALUE = "{ l.return_items[ l.orderitems[ l.orderitem_pos ]:rma_id ] + 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.orderitem_pos"	VALUE = "{ l.orderitem_pos + 1 }">
	</MvWHILE>

	<MvCOMMENT>
	|
	| Iterate through the returns being modified.  If count of orderitems is <= orderitems to be removed, delete
	| the return
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.return_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.return_pos LE l.return_count }">
		<MvIF EXPR = "{ NOT OrderItem_Count_Return( l.return_ids[ l.return_pos ], l.count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.count LE l.return_items[ l.return_ids[ l.return_pos ] ] }">
			<MvIF EXPR = "{ NOT OrderReturn_Delete( l.return_ids[ l.return_pos ] ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.return_pos"	VALUE = "{ l.return_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_NotifyList_Add" PARAMETERS = "notify_count var, notify_original_orderitems var, notify_orderitems var, original_orderitem var, orderitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"												VALUE = "{ l.notify_count + 1 }">
	<MvASSIGN NAME = "l.notify_original_orderitems" INDEX = "{ l.notify_count }"	VALUE = "{ l.original_orderitem }">
	<MvASSIGN NAME = "l.notify_orderitems"			INDEX = "{ l.notify_count }"	VALUE = "{ l.orderitem }">
</MvFUNCTION>

<MvFUNCTION NAME = "v58_OrderItemList_CreateShipment" PARAMETERS = "order_id, orderitem_count, orderitems var, ordershipment var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ordershipment:id"			VALUE = "{ StoreKey_Generate( 'OrderShipments' ) }">
	<MvASSIGN NAME = "l.ordershipment:batch_id"		VALUE = 0>
	<MvASSIGN NAME = "l.ordershipment:order_id"		VALUE = "{ l.order_id }">
	<MvASSIGN NAME = "l.ordershipment:code"			VALUE = "{ OrderShipment_Generate_Code( l.ordershipment ) }">
	<MvASSIGN NAME = "l.ordershipment:status"		VALUE = 100>
	<MvASSIGN NAME = "l.ordershipment:ship_date"	VALUE = 0>
	<MvASSIGN NAME = "l.ordershipment:tracknum"		VALUE = "">
	<MvASSIGN NAME = "l.ordershipment:tracktype"	VALUE = "">
	<MvASSIGN NAME = "l.ordershipment:weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.ordershipment:cost"			VALUE = 0.00>
	<MvASSIGN NAME = "l.ordershipment:label_id"		VALUE = 0>
	<MvASSIGN NAME = "l.ordershipment:label_data"	VALUE = "">
	<MvASSIGN NAME = "l.ordershipment:label_type"	VALUE = "">

	<MvFUNCTIONRETURN VALUE = "{ OrderItemList_CreateShipment_LowLevel( l.ordershipment, l.orderitem_count, l.orderitems ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_CreateShipment_LowLevel" PARAMETERS = "ordershipment var, orderitem_count, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItemList_RemoveFromShipments( l.orderitem_count, l.orderitems ) OR
					NOT OrderItemList_RemoveFromReturns( l.orderitem_count, l.orderitems ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>
	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ l.orderitems:status NE 300 AND
						l.orderitems:status NE 600 }">
			<MvASSIGN NAME = "l.original_orderitem"		VALUE = "{ l.orderitem }">
			<MvASSIGN NAME = "l.ordershipment:weight"	VALUE = "{ l.ordershipment:weight + ( ( l.orderitem:weight + OrderOption_Line_Weight( l.orderitem:line_id ) ) * l.orderitem:quantity ) }">

			<MvIF EXPR = "{ l.ordershipment:status EQ 200 }">
				<MvASSIGN NAME = "l.orderitem:status"	VALUE = 200>
			<MvELSE>
				<MvASSIGN NAME = "l.orderitem:status"	VALUE = 100>
			</MvIF>

			<MvASSIGN NAME = "l.orderitem:shpmnt_id"	VALUE = "{ l.ordershipment:id }">
			<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:dt_instock"	VALUE = 0>

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT OrderShipment_Insert_LowLevel( l.ordershipment ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_ordershpmnt', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderShipment_Insert( l.module, l.ordershipment ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_AddToShipment" PARAMETERS = "ordershipment var, orderitem_count, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItemList_RemoveFromShipments( 	l.orderitem_count, l.orderitems ) OR
					NOT OrderItemList_RemoveFromReturns( 	l.orderitem_count, l.orderitems ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>
	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ l.orderitems:status NE 300 AND
						l.orderitems:status NE 600 }">
			<MvASSIGN NAME = "l.original_orderitem"		VALUE = "{ l.orderitem }">
			<MvASSIGN NAME = "l.ordershipment:weight"	VALUE = "{ l.ordershipment:weight + ( ( l.orderitem:weight + OrderOption_Line_Weight( l.orderitem:line_id ) ) * l.orderitem:quantity ) }">

			<MvIF EXPR = "{ l.ordershipment:status EQ 200 }">
				<MvASSIGN NAME = "l.orderitem:status"	VALUE = 200>
			<MvELSE>
				<MvASSIGN NAME = "l.orderitem:status"	VALUE = 100>
			</MvIF>

			<MvASSIGN NAME = "l.orderitem:shpmnt_id"	VALUE = "{ l.ordershipment:id }">
			<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:dt_instock"	VALUE = 0>

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT OrderShipment_Update_Status_LowLevel( l.ordershipment ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Update_Status_Shipment" PARAMETERS = "shpmnt_id, status" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ OrderItemList_Load_Shipment( l.shpmnt_id, l.orderitems ) }">
		<MvIF EXPR = "{ l.orderitem:status NE l.status }">
			<MvASSIGN NAME = "l.original_orderitem"	VALUE = "{ l.orderitem }">
			<MvASSIGN NAME = "l.orderitem:status"	VALUE = "{ l.status }">

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Update_Status_Return" PARAMETERS = "return_id, status" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ OrderItemList_Load_Return( l.return_id, l.orderitems ) }">
		<MvIF EXPR = "{ l.orderitem:status NE l.status }">
			<MvASSIGN NAME = "l.original_orderitem"	VALUE = "{ l.orderitem }">
			<MvASSIGN NAME = "l.orderitem:status"	VALUE = "{ l.status }">

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_BackOrder" PARAMETERS = "order_id, orderitem_count, orderitems var, dt_instock" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItemList_RemoveFromShipments( l.orderitem_count, l.orderitems ) OR
					NOT OrderItemList_RemoveFromReturns( l.orderitem_count, l.orderitems ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.notify_count"					VALUE = 0>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ l.orderitem:status NE 300 AND
						l.orderitem:status NE 600 }">
			<MvASSIGN NAME = "l.original_orderitem"		VALUE = "{ l.orderitem }">

			<MvASSIGN NAME = "l.orderitem:status"		VALUE = 400>
			<MvASSIGN NAME = "l.orderitem:shpmnt_id"	VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:dt_instock"	VALUE = "{ l.dt_instock }">

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_BackOrder_Dates" PARAMETERS = "order_id, orderitem_count, orderitems var, instock_dates" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItemList_RemoveFromShipments( l.orderitem_count, l.orderitems ) OR
					NOT OrderItemList_RemoveFromReturns( l.orderitem_count, l.orderitems ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.notify_count"					VALUE = 0>

	<MvFOREACH INDEX = "l.orderitem_pos" ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ l.orderitem:status NE 300 AND
						l.orderitem:status NE 600 }">
			<MvASSIGN NAME = "l.original_orderitem"		VALUE = "{ l.orderitem }">

			<MvASSIGN NAME = "l.orderitem:status"		VALUE = 400>
			<MvASSIGN NAME = "l.orderitem:shpmnt_id"	VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:dt_instock"	VALUE = "{ l.instock_dates[ l.orderitem_pos ] }">

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_Delete_LookupVariants" PARAMETERS = "orderitem_count, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.orderitem_pos" ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant( l.orderitem, l.products[ l.orderitem_pos ], l.variant_ids[ l.orderitem_pos ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ OrderItemList_Delete_WithVariants( l.orderitem_count, l.orderitems, l.products, l.variant_ids ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_Delete_WithVariants" PARAMETERS = "orderitem_count, orderitems var, products var, variant_ids var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItemList_RemoveFromShipments( l.orderitem_count, l.orderitems ) OR
					NOT OrderItemList_RemoveFromReturns( l.orderitem_count, l.orderitems ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.notify_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.orderitem_pos" ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvASSIGN NAME = "l.original_orderitem" VALUE = "{ l.orderitem }">

		<MvIF EXPR = "{ NOT OrderItem_Delete( l.orderitem:order_id, l.orderitem:line_id )				OR
						NOT OrderItemDiscount_Delete_All_Line( l.orderitem:line_id )					OR
						NOT OrderOption_Delete_All_Line( l.orderitem:line_id )							OR
						NOT OrderOptionDiscount_Delete_All_Line( l.orderitem:line_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Products( 0 - l.orderitem:quantity ) }">

		<MvIF EXPR = "{ ( l.orderitem:status NE 300 ) AND
						( l.orderitem:status NE 600 ) AND
						l.products[ l.orderitem_pos ]:id }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.products[ l.orderitem_pos ], l.variant_ids[ l.orderitem_pos ], l.orderitem:quantity ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.products[ l.orderitem_pos ]:id, l.products[ l.orderitem_pos ]:name, 0 - l.orderitem:quantity ) }">
		</MvIF>

		<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvIF EXPR = "{ l.module:api_ver GE 5.73 }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderItem_Delete( l.module, l.notify_count, l.notify_original_orderitems, l.notify_orderitems ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_Cancel_LookupVariants" PARAMETERS = "orderitem_count, orderitems var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.orderitem_pos" ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant( l.orderitem, l.products[ l.orderitem_pos ], l.variant_ids[ l.orderitem_pos ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ OrderItemList_Cancel_WithVariants( l.orderitem_count, l.orderitems, l.products, l.variant_ids ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItemList_Cancel_WithVariants" PARAMETERS = "orderitem_count, orderitems var, products var, variant_ids var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItemList_RemoveFromShipments( l.orderitem_count, l.orderitems ) OR
					NOT OrderItemList_RemoveFromReturns( l.orderitem_count, l.orderitems ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.notify_count"					VALUE = 0>

	<MvFOREACH INDEX = "l.orderitem_pos" ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ ( l.orderitem:status NE 300 ) AND
						( l.orderitem:status NE 600 ) }">
			<MvASSIGN NAME = "l.original_orderitem"		VALUE = "{ l.orderitem }">

			<MvASSIGN NAME = "l.orderitem:status"		VALUE = 300>
			<MvASSIGN NAME = "l.orderitem:shpmnt_id"	VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:dt_instock"	VALUE = 0>

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.null"					VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Products( 0 - l.orderitem:quantity ) }">

			<MvIF EXPR = "{ l.products[ l.orderitem_pos ]:id }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.products[ l.orderitem_pos ], l.variant_ids[ l.orderitem_pos ], l.orderitem:quantity ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.products[ l.orderitem_pos ]:id, l.products[ l.orderitem_pos ]:name, 0 - l.orderitem:quantity ) }">
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "v58_OrderItemList_CreateReturn" PARAMETERS = "order_id, orderitem_count, orderitems var, orderreturn var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItemList_RemoveFromReturns( l.orderitem_count, l.orderitems ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.orderreturn:id"				VALUE = "{ StoreKey_Generate( 'OrderReturns' ) }">
	<MvASSIGN NAME = "l.orderreturn:order_id"		VALUE = "{ l.order_id }">
	<MvASSIGN NAME = "l.orderreturn:code"			VALUE = "{ padl( l.orderreturn:order_id, 5, '0' ) $ '-' $
															   padl( s.tm_year, 4, '0' ) $ padl( s.tm_mon, 2, '0' ) $ padl( s.tm_mday, 2, '0' ) $ '-' $
															   padl( l.orderreturn:id, 5, '0' ) }">
	<MvASSIGN NAME = "l.orderreturn:status"			VALUE = 500>
	<MvASSIGN NAME = "l.orderreturn:dt_issued"		VALUE = "{ s.time_t }">
	<MvASSIGN NAME = "l.orderreturn:dt_recvd"		VALUE = 0>

	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvIF EXPR = "{ l.orderitem:status NE 300 AND
						l.orderitem:status NE 600 }">
			<MvASSIGN NAME = "l.original_orderitem"	VALUE = "{ l.orderitem }">

			<MvASSIGN NAME = "l.orderitem:status"	VALUE = 500>
			<MvASSIGN NAME = "l.orderitem:rma_id"	VALUE = "{ l.orderreturn:id }">

			<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT OrderReturn_Insert_LowLevel( l.orderreturn ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderreturn', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderReturn_Insert( l.module, l.orderreturn ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipment_NotifyList_Add" PARAMETERS = "notify_count var, notify_original_ordershipments var, notify_ordershipments var, original_ordershipment var, ordershipment var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"													VALUE = "{ l.notify_count + 1 }">
	<MvASSIGN NAME = "l.notify_original_ordershipments" INDEX = "{ l.notify_count }"	VALUE = "{ l.original_ordershipment }">
	<MvASSIGN NAME = "l.notify_ordershipments"			INDEX = "{ l.notify_count }"	VALUE = "{ l.ordershipment }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipment_Generate_Code" PARAMETERS = "ordershipment var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ padl( l.ordershipment:order_id, 5, '0' ) $ '-' $
								 padl( s.tm_year, 4, '0' ) $ padl( s.tm_mon, 2, '0' ) $ padl( s.tm_mday, 2, '0' ) $ '-' $
								 padl( l.ordershipment:id, 5, '0' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipment_Insert" PARAMETERS = "ordershipment var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ordershipment:id"	VALUE = "{ StoreKey_Generate( 'OrderShipments' ) }">
	<MvASSIGN NAME = "l.ordershipment:code"	VALUE = "{ OrderShipment_Generate_Code( l.ordershipment ) }">

	<MvIF EXPR = "{ NOT OrderShipment_Insert_LowLevel( l.ordershipment ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_ordershpmnt', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
			<MvASSIGN NAME = "l.null" 		VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderShipment_Insert( l.module, l.ordershipment ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipment_Update_Status" PARAMETERS = "original_ordershipment var, ordershipment var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"		VALUE = 0>

	<MvIF EXPR = "{ NOT OrderShipment_Update_Status_LowLevel( l.ordershipment ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.ordershipment:status NE l.original_ordershipment:status }">
		<MvIF EXPR = "{ NOT OrderItem_Update_Status_Shipment( l.ordershipment:id, l.ordershipment:status ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ( l.ordershipment:status NE l.original_ordershipment:status ) OR
					( l.ordershipment:ship_date NE l.original_ordershipment:ship_date ) OR
					( l.ordershipment:tracknum NE l.original_ordershipment:tracknum ) OR
					( l.ordershipment:tracktype NE l.original_ordershipment:tracktype ) OR
					( l.ordershipment:cost NE l.original_ordershipment:cost ) }">
		<MvEVAL EXPR = "{ OrderShipment_NotifyList_Add( l.notify_count, l.notify_original_ordershipments, l.notify_ordershipments, l.original_ordershipment, l.ordershipment ) }">
	</MvIF>

	<MvIF EXPR = "{ l.notify_count }">
		<MvASSIGN NAME = "l.module_pos"			VALUE = 1>
		<MvASSIGN NAME = "l.module_count"		VALUE = "{ StoreModuleList_Load_Features_Cached( 'not_ordershpmnt', l.modules ) }">

		<MvWHILE EXPR = "{ l.module_pos LE l.module_count }">
			<MvDO FILE = "{ g.Module_Root $ l.modules[ l.module_pos ]:module }" NAME = "l.ok" VALUE = "{ Module_Notify_OrderShipment_StatusChange( l.modules[ l.module_pos ],
																																				   l.notify_count,
																																				   l.notify_original_ordershipments,
																																				   l.notify_ordershipments ) }">
			<MvASSIGN NAME = "l.module_pos"		VALUE = "{ l.module_pos + 1 }">
		</MvWHILE>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipmentList_Update_Status" PARAMETERS = "original_ordershipments var, ordershipments var, ordershipment_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>
	<MvASSIGN NAME = "l.ordershipment_pos"			VALUE = 1>

	<MvWHILE EXPR = "{ l.ordershipment_pos LE l.ordershipment_count }">
		<MvREFERENCEARRAY NAME = "l.original_ordershipment" VARIABLE = "l.original_ordershipments">
			<MvDIMENSION INDEX = "{ l.ordershipment_pos }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.ordershipment" VARIABLE = "l.ordershipments">
			<MvDIMENSION INDEX = "{ l.ordershipment_pos }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT OrderShipment_Update_Status_LowLevel( l.ordershipment ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.ordershipment:status NE l.original_ordershipment:status }">
			<MvIF EXPR = "{ NOT OrderItem_Update_Status_Shipment( l.ordershipment:id, l.ordershipment:status ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( l.ordershipment:status NE l.original_ordershipment:status ) OR
						( l.ordershipment:ship_date NE l.original_ordershipment:ship_date ) OR
						( l.ordershipment:tracknum NE l.original_ordershipment:tracknum ) OR
						( l.ordershipment:tracktype NE l.original_ordershipment:tracktype ) OR
						( l.ordershipment:cost NE l.original_ordershipment:cost ) }">
			<MvEVAL EXPR = "{ OrderShipment_NotifyList_Add( l.notify_count, l.notify_original_ordershipments, l.notify_ordershipments, l.original_ordershipment, l.ordershipment ) }">
		</MvIF>

		<MvASSIGN NAME = "l.ordershipment_pos"		VALUE = "{ l.ordershipment_pos + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ l.notify_count }">
		<MvASSIGN NAME = "l.module_pos"			VALUE = 1>
		<MvASSIGN NAME = "l.module_count"		VALUE = "{ StoreModuleList_Load_Features_Cached( 'not_ordershpmnt', l.modules ) }">

		<MvWHILE EXPR = "{ l.module_pos LE l.module_count }">
			<MvDO FILE = "{ g.Module_Root $ l.modules[ l.module_pos ]:module }" NAME = "l.ok" VALUE = "{ Module_Notify_OrderShipment_StatusChange( l.modules[ l.module_pos ],
																																				   l.notify_count,
																																				   l.notify_original_ordershipments,
																																				   l.notify_ordershipments ) }">
			<MvASSIGN NAME = "l.module_pos"		VALUE = "{ l.module_pos + 1 }">
		</MvWHILE>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderReturn_NotifyList_Add" PARAMETERS = "notify_count var, notify_original_orderreturns var, notify_orderreturns var, original_orderreturn var, orderreturn var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"													VALUE = "{ l.notify_count + 1 }">
	<MvASSIGN NAME = "l.notify_original_orderreturns"	INDEX = "{ l.notify_count }"	VALUE = "{ l.original_orderreturn }">
	<MvASSIGN NAME = "l.notify_orderreturns"			INDEX = "{ l.notify_count }"	VALUE = "{ l.orderreturn }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderReturn_Update_Status" PARAMETERS = "original_orderreturn var, orderreturn var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>

	<MvIF EXPR = "{ ( l.orderreturn:status EQ 600 ) AND ( l.original_orderreturn:status NE 600 ) }">
		<MvASSIGN NAME = "l.orderreturn:dt_recvd"	VALUE = "{ s.dyn_time_t }">
	</MvIF>

	<MvIF EXPR = "{ NOT OrderReturn_Update_Status_LowLevel( l.orderreturn ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( l.orderreturn:status EQ 600 ) AND ( l.original_orderreturn:status NE 600 ) }">
		<MvIF EXPR = "{ NOT OrderItem_Update_Status_Return( l.orderreturn:id, 600 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.orderreturn:status NE l.original_orderreturn:status }">
		<MvEVAL EXPR = "{ OrderReturn_NotifyList_Add( l.notify_count, l.notify_original_orderreturns, l.notify_orderreturns, l.original_orderreturn, l.orderreturn ) }">
	</MvIF>

	<MvIF EXPR = "{ l.notify_count }">
		<MvASSIGN NAME = "l.module_pos"			VALUE = 1>
		<MvASSIGN NAME = "l.module_count"		VALUE = "{ StoreModuleList_Load_Features_Cached( 'not_orderreturn', l.modules ) }">

		<MvWHILE EXPR = "{ l.module_pos LE l.module_count }">
			<MvDO FILE = "{ g.Module_Root $ l.modules[ l.module_pos ]:module }" NAME = "l.ok" VALUE = "{ Module_Notify_OrderReturn_StatusChange( l.modules[ l.module_pos ],
																																				 l.notify_count,
																																				 l.notify_original_orderreturns,
																																				 l.notify_orderreturns ) }">
			<MvASSIGN NAME = "l.module_pos"		VALUE = "{ l.module_pos + 1 }">
		</MvWHILE>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderReturnList_Update_Status" PARAMETERS = "original_orderreturns var, orderreturns var, orderreturn_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"					VALUE = 0>
	<MvASSIGN NAME = "l.orderreturn_pos"				VALUE = 1>

	<MvWHILE EXPR = "{ l.orderreturn_pos LE l.orderreturn_count }">
		<MvREFERENCEARRAY NAME = "l.original_orderreturn" VARIABLE = "l.original_orderreturns">
			<MvDIMENSION INDEX = "{ l.orderreturn_pos }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.orderreturn" VARIABLE = "l.orderreturns">
			<MvDIMENSION INDEX = "{ l.orderreturn_pos }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ( l.orderreturn:status EQ 600 ) AND ( l.original_orderreturn:status NE 600 ) }">
			<MvASSIGN NAME = "l.orderreturn:dt_recvd"	VALUE = "{ s.dyn_time_t }">
		</MvIF>

		<MvIF EXPR = "{ NOT OrderReturn_Update_Status_LowLevel( l.orderreturn ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ ( l.orderreturn:status EQ 600 ) AND ( l.original_orderreturn:status NE 600 ) }">
			<MvIF EXPR = "{ NOT OrderItem_Update_Status_Return( l.orderreturn:id, 600 ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.orderreturn:status NE l.original_orderreturn:status }">
			<MvEVAL EXPR = "{ OrderReturn_NotifyList_Add( l.notify_count, l.notify_original_orderreturns, l.notify_orderreturns, l.original_orderreturn, l.orderreturn ) }">
		</MvIF>

		<MvASSIGN NAME = "l.orderreturn_pos"			VALUE = "{ l.orderreturn_pos + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ l.notify_count }">
		<MvASSIGN NAME = "l.module_pos"			VALUE = 1>
		<MvASSIGN NAME = "l.module_count"		VALUE = "{ StoreModuleList_Load_Features_Cached( 'not_orderreturn', l.modules ) }">

		<MvWHILE EXPR = "{ l.module_pos LE l.module_count }">
			<MvDO FILE = "{ g.Module_Root $ l.modules[ l.module_pos ]:module }" NAME = "l.ok" VALUE = "{ Module_Notify_OrderReturn_StatusChange( l.modules[ l.module_pos ],
																																				 l.notify_count,
																																				 l.notify_original_orderreturns,
																																				 l.notify_orderreturns ) }">
			<MvASSIGN NAME = "l.module_pos"		VALUE = "{ l.module_pos + 1 }">
		</MvWHILE>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderReturn_Cancel" PARAMETERS = "orderreturn var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_count"				VALUE = 0>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ OrderItemList_Load_Return( l.orderreturn:id, l.orderitems ) }">
		<MvASSIGN NAME = "l.original_orderitem"		VALUE = "{ l.orderitem }">
		<MvASSIGN NAME = "l.orderitem:status"		VALUE = 200>
		<MvASSIGN NAME = "l.orderitem:rma_id"		VALUE = 0>

		<MvIF EXPR = "{ NOT OrderItem_Update_Status_LowLevel( l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ OrderItem_NotifyList_Add( l.notify_count, l.notify_original_orderitems, l.notify_orderitems, l.original_orderitem, l.orderitem ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ NOT OrderReturn_Delete( l.orderreturn:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.notify_count }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.null"	VALUE = "{ Module_Notify_OrderItem_StatusChange( l.module,
																																 l.notify_count,
																																 l.notify_original_orderitems,
																																 l.notify_orderitems ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderReturn_Delete" PARAMETERS = "rma_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.feature_count"			VALUE = "{ StoreModuleList_Load_Features_Cached( 'not_orderreturn', l.modules ) }">

	<MvIF EXPR = "{ l.feature_count }">
		<MvASSIGN NAME = "l.orderreturn_loaded"	VALUE = "{ OrderReturn_Load_ID( l.rma_id, l.orderreturn ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT OrderReturn_Delete_LowLevel( l.rma_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.feature_count AND l.orderreturn_loaded }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ l.feature_count }">
			<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
				<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderReturn_Delete( l.module, l.orderreturn ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPayment_Create" PARAMETERS = "order_id, parent_id, type, refnum, amount, available, pay_id, pay_data var, secure_data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.payment:order_id"	VALUE = "{ l.order_id }">
	<MvASSIGN NAME = "l.payment:parent_id"	VALUE = "{ l.parent_id }">
	<MvASSIGN NAME = "l.payment:type"		VALUE = "{ l.type }">
	<MvASSIGN NAME = "l.payment:refnum"		VALUE = "{ l.refnum }">
	<MvASSIGN NAME = "l.payment:amount"		VALUE = "{ l.amount }">
	<MvASSIGN NAME = "l.payment:available"	VALUE = "{ l.available }">
	<MvASSIGN NAME = "l.payment:dtstamp"	VALUE = "{ s.time_t }">
	<MvASSIGN NAME = "l.payment:expires"	VALUE = 0>
	<MvASSIGN NAME = "l.payment:ip"			VALUE = "{ s.remote_addr }">
	<MvASSIGN NAME = "l.payment:pay_id"		VALUE = "{ l.pay_id }">
	<MvASSIGN NAME = "l.payment:currency"	VALUE = "">
	<MvASSIGN NAME = "l.payment:environ"	VALUE = "">
	<MvASSIGN NAME = "l.payment:level"		VALUE = "">

	<MvFUNCTIONRETURN VALUE = "{ v9_OrderPayment_Create( l.payment, l.pay_data, l.secure_data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v9_OrderPayment_Create" PARAMETERS = "payment var, pay_data var, secure_data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.payment:pay_data"	VALUE = "{ miva_array_serialize( l.pay_data ) }">
	<MvASSIGN NAME = "l.pay_secure_data"	VALUE = "{ miva_array_serialize( l.secure_data ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Filename_Crypto ].Encrypt_Payment( g.Store:crypt_id, l.pay_secure_data, l.payment_secure ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.payment:pay_secid"	VALUE = "{ l.payment_secure:id }">
	<MvASSIGN NAME = "l.payment:pay_seckey"	VALUE = "{ l.payment_secure:key }">
	<MvASSIGN NAME = "l.payment:pay_secdat"	VALUE = "{ l.payment_secure:data }">

	<MvFUNCTIONRETURN VALUE = "{ OrderPayment_Insert( l.payment ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPayment_Insert" PARAMETERS = "orderpayment var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.orderpayment:id"				VALUE = "{ StoreKey_Generate( 'OrderPayments' ) }">
	<MvASSIGN NAME = "l.orderpayment:original_type"		VALUE = "{ l.orderpayment:type }">
	<MvASSIGN NAME = "l.orderpayment:original_amount"	VALUE = "{ l.orderpayment:amount }">

	<MvIF EXPR = "{ ISNULL l.orderpayment:expires }">
		<MvASSIGN NAME = "l.orderpayment:expires"		VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.orderpayment:ip }">
		<MvASSIGN NAME = "l.orderpayment:ip"			VALUE = "{ s.remote_addr }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderPayments
						  ( id, order_id, parent_id, type, refnum, amount, available, dtstamp, expires,
						    ip, pay_id, pay_data, pay_secid, pay_seckey, pay_secdat, currency, environ, level )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.orderpayment:id, l.orderpayment:order_id, l.orderpayment:parent_id, l.orderpayment:type, l.orderpayment:refnum, l.orderpayment:amount,
					   l.orderpayment:available, l.orderpayment:dtstamp, l.orderpayment:expires, l.orderpayment:ip, l.orderpayment:pay_id, l.orderpayment:pay_data,
					   l.orderpayment:pay_secid, l.orderpayment:pay_seckey, l.orderpayment:pay_secdat, l.orderpayment:currency, l.orderpayment:environ, l.orderpayment:level">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-ORD-00013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_OrderPayment( 'MER-DBE-ORD-00040', 'OrderPayment_Insert', l.orderpayment ) }">

	<MvIF EXPR = "{ NOT StoreModule_Increment_ReferenceCount( l.orderpayment:pay_id, 'payment' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.orderpayment:pay_secid }">
		<MvIF EXPR = "{ NOT Encryption_Increment_ReferenceCount( l.orderpayment:pay_secid ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPayment_Update" PARAMETERS = "payment var, pay_data var, secure_data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.payment:pay_secid AND ( l.payment:pay_secid NE g.Store:crypt_id ) }">
		<MvIF EXPR = "{ NOT Encryption_Decrement_ReferenceCount( l.payment:pay_secid ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.payment:pay_data"			VALUE = "{ miva_array_serialize( l.pay_data ) }">
	<MvASSIGN NAME = "l.pay_secure_data" 			VALUE = "{ miva_array_serialize( l.secure_data ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Filename_Crypto ].Encrypt_Payment( g.Store:crypt_id, l.pay_secure_data, l.payment_secure ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.original_secid"		VALUE = "{ l.payment:pay_secid }">

	<MvASSIGN NAME = "l.payment:pay_secid"	VALUE = "{ l.payment_secure:id }">
	<MvASSIGN NAME = "l.payment:pay_seckey"	VALUE = "{ l.payment_secure:key }">
	<MvASSIGN NAME = "l.payment:pay_secdat"	VALUE = "{ l.payment_secure:data }">

	<MvIF EXPR = "{ NOT OrderPayment_Update_LowLevel( l.payment ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_OrderPayment( 'MER-DBE-ORD-00041', 'OrderPayment_Update', l.payment ) }">

	<MvIF EXPR = "{ l.payment_secure:id NE l.original_secid }">
		<MvIF EXPR = "{ NOT Encryption_Increment_ReferenceCount( l.payment_secure:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.payment:original_type"		VALUE = "{ l.payment:type }">
	<MvASSIGN NAME = "l.payment:original_amount"	VALUE = "{ l.payment:amount }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPayment_Delete_All_Order" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.orderpayment_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.orderpayment_count"		VALUE = "{ OrderPaymentList_Load_Order( l.order_id, l.orderpayments ) }">

	<MvWHILE EXPR = "{ l.orderpayment_pos LE l.orderpayment_count }">
		<MvIF EXPR = "{ NOT OrderPayment_Delete( l.orderpayments[ l.orderpayment_pos ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.orderpayment_pos"	VALUE = "{ l.orderpayment_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPayment_Delete" PARAMETERS = "orderpayment var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT StoreModule_Decrement_ReferenceCount( l.orderpayment:pay_id, 'payment' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.orderpayment:pay_secid }">
		<MvIF EXPR = "{ NOT Encryption_Decrement_ReferenceCount( l.orderpayment:pay_secid ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'OrderPayments WHERE id = ?' }"
			 FIELDS	= "l.orderpayment:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-ORD-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_OrderPayment( 'MER-DBE-ORD-00042', 'OrderPayment_Delete', l.orderpayment ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderItem_Insert" PARAMETERS = "orderitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.orderitem:line_id" VALUE = "{ StoreKey_Generate( 'BasketItems' ) }">

	<MvIF EXPR = "{ NOT OrderItem_Insert_LowLevel( l.orderitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderItem_Insert( l.module, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "v56_OrderItem_Insert" PARAMETERS = "orderitem var, product var, variant_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderItem_Insert( l.orderitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Products( l.orderitem:quantity ) }">

	<MvIF EXPR = "{ l.product:id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.variant_id, 0 - l.orderitem:quantity ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.product:id, l.product:name, l.orderitem:quantity ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "v56_OrderItem_Update" PARAMETERS = "original_orderitem var, original_product var, original_variant_id,
														orderitem var, product var, variant_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.product:id NE l.original_product:id ) OR ( l.original_variant_id NE l.variant_id ) }">
		<MvCOMMENT>
		|
		| If changing the product, return all of the old product to inventory
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.original_product:id }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.original_product, l.original_variant_id, l.original_orderitem:quantity ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.product:id }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.variant_id, 0 - l.orderitem:quantity ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ ( l.orderitem:quantity NE l.original_orderitem:quantity ) AND l.product:id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.variant_id, l.original_orderitem:quantity - l.orderitem:quantity ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update statistics
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.orderitem:quantity NE l.original_orderitem:quantity }">
		<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Products( l.orderitem:quantity - l.original_orderitem:quantity ) }">
	</MvIF>

	<MvIF EXPR = "{ l.product:id NE l.original_product:id }">
		<MvIF EXPR = "{ l.original_product:id }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.original_product:id, l.original_product:name, 0 - l.original_orderitem:quantity ) }">
		</MvIF>

		<MvIF EXPR = "{ l.product:id }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.product:id, l.product:name, l.orderitem:quantity ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ ( l.original_orderitem:quantity NE l.orderitem:quantity ) AND l.product:id }">
		<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.product:id, l.product:name, l.orderitem:quantity - l.original_orderitem:quantity ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT OrderItem_Update( l.orderitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_orderitem', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderItem_Update( l.module, l.original_orderitem, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipment_Delete" PARAMETERS = "shpmnt_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.feature_count"				VALUE = "{ StoreModuleList_Load_Features_Cached( 'not_ordershpmnt', l.modules ) }">

	<MvIF EXPR = "{ l.feature_count }">
		<MvASSIGN NAME = "l.ordershipment_loaded"	VALUE = "{ OrderShipment_Load_ID( l.shpmnt_id, l.ordershipment ) }">
	</MvIF>

	<MvIF EXPR = "{ l.feature_count AND l.ordershipment_loaded }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ l.feature_count }">
			<MvIF EXPR = "{ l.module:api_ver GE 9.04 }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_OrderShipment_Delete( l.module, l.ordershipment ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT OrderShipment_Delete_LowLevel( l.shpmnt_id ) OR
					NOT OrderShipmentLabel_Delete_All_Shipment( l.shpmnt_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipmentLabel_Insert" PARAMETERS = "ordershipmentlabel var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderShipmentLabel_Insert_LowLevel( l.ordershipmentlabel ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.ordershipmentlabel:module_id AND ( l.ordershipmentlabel:label_type EQ 'module' ) }">
		<MvIF EXPR = "{ NOT StoreModule_Increment_ReferenceCount( l.ordershipmentlabel:module_id, 'shipping_label' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ OrderShipment_Increment_LabelCount( l.ordershipmentlabel:shpmnt_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipmentLabel_Delete" PARAMETERS = "ordershipmentlabel var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderShipmentLabel_Delete_LowLevel( l.ordershipmentlabel:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.ordershipmentlabel:module_id AND ( l.ordershipmentlabel:label_type EQ 'module' ) }">
		<MvIF EXPR = "{ NOT StoreModule_Decrement_ReferenceCount( l.ordershipmentlabel:module_id, 'shipping_label' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ OrderShipment_Decrement_LabelCount( l.ordershipmentlabel:shpmnt_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipmentLabel_Delete_All_Order" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ordershipmentlabel_count"	VALUE = "{ OrderShipmentLabelList_Load_Order( l.order_id, l.ordershipmentlabels ) }">
	<MvIF EXPR = "{ l.ordershipmentlabel_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ Error_Is_EOF() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.ordershipmentlabel" ARRAY = "l.ordershipmentlabels" COUNT = "{ l.ordershipmentlabel_count }">
		<MvIF EXPR = "{ NOT OrderShipmentLabel_Delete( l.ordershipmentlabel ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipmentLabel_Delete_All_Shipment" PARAMETERS = "shpmnt_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ordershipmentlabel_count"	VALUE = "{ OrderShipmentLabelList_Load_Shipment( l.shpmnt_id, l.ordershipmentlabels ) }">
	<MvIF EXPR = "{ l.ordershipmentlabel_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ Error_Is_EOF() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.ordershipmentlabel" ARRAY = "l.ordershipmentlabels" COUNT = "{ l.ordershipmentlabel_count }">
		<MvIF EXPR = "{ NOT OrderShipmentLabel_Delete( l.ordershipmentlabel ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderShipmentLabel_Delete_All_Shipment_Module" PARAMETERS = "shpmnt_id, module_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ordershipmentlabel_count"	VALUE = "{ OrderShipmentLabelList_Load_Shipment_Module( l.shpmnt_id, l.module_id, l.ordershipmentlabels ) }">
	<MvIF EXPR = "{ l.ordershipmentlabel_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ Error_Is_EOF() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.ordershipmentlabel" ARRAY = "l.ordershipmentlabels" COUNT = "{ l.ordershipmentlabel_count }">
		<MvIF EXPR = "{ NOT OrderShipmentLabel_Delete( l.ordershipmentlabel ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Total" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.total"	VALUE = "{ OrderItem_Total( l.order_id ) + OrderOption_Total( l.order_id ) + OrderCharge_Total( l.order_id ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Update_Total" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT v56_Order_Load_ID( l.order:id, l.original_order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Order_Update_Total_LowLevel( l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.order:cust_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Update_OrderMetrics( l.order:cust_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_order', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.12 }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Order_TotalChange( l.module, l.original_order:total, l.order ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "v56_Order_Update_Total" PARAMETERS = "order var, total" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.original_total" VALUE = "{ l.order:total }">

	<MvIF EXPR = "{ NOT v56_Order_Update_Total_LowLevel( l.order, l.total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.order:cust_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Update_OrderMetrics( l.order:cust_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_order', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver GE 9.12 }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Order_TotalChange( l.module, l.original_total, l.order ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Reset_Tax" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'OrderItems
			 			  SET 
			 				tax			= 0.00
			 			  WHERE 
			 				order_id	= ?' }"
			 FIELDS = "l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-ORD-00036', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'OrderCharges
			 			  SET 
			 				tax			= 0.00
			 			  WHERE 
			 				order_id	= ?' }"
			 FIELDS = "l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-ORD-00037', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

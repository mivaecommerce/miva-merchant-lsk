<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2022 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-DBE-MMT-
| Next Error Code: 1
|
</MvCOMMENT>

<MvFUNCTION NAME = "MMTextEditor_Load_Preferences_Global_Cached" PARAMETERS = "preferences var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:mmtexteditor:mmtexteditor_load_preferences_global_cached">

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ MMTextEditor_Load_Preferences_Global( l.cache:preferences ) }">
		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.preferences"					VALUE = "{ l.cache:preferences }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "MMTextEditor_Load_Preferences_Global" PARAMETERS = "preferences var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.userpreference" ARRAY = "l.userpreferencelist" COUNT = "{ UserPreferenceList_Load_Heirarchy( 0, g.Admin_User_ID, 'mmtexteditor', l.userpreferencelist ) }">
		<MvASSIGN NAME = "l.key"		VALUE = "{ substring_var( l.userpreference:key, len( 'mmtexteditor.' ) + 1, len_var( l.userpreference:key ) - len( 'mmtexteditor.' ) ) }">
		<MvASSIGN NAME = "l.member"		VALUE = "{ glosub( l.key, '.', ':' ) }">

		<MvREFERENCE NAME = "l.preference" VARIABLE = "{ 'l.preferences:' $ l.member }">
		<MvASSIGN NAME = "l.preference" VALUE = "{ l.userpreference:value }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MMTextEditor_Load_Preferences_Local_Cached" PARAMETERS = "store_id, screen, tab, name, preferences var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ len_var( l.tab ) }">	<MvASSIGN NAME = "l.key_prefix" VALUE = "{ l.screen $ '.' $ l.tab $ '.MMTextEditor.' $ l.name }">
	<MvELSE>								<MvASSIGN NAME = "l.key_prefix" VALUE = "{ l.screen $ '.' $ l.screen $ '.MMTextEditor.' $ l.name }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache" 					VARIABLE = "g.Session:cache:mmtexteditor:mmtexteditor_load_preferences_local_cached">
		<MvMEMBER NAME = "{ l.key_prefix }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ MMTextEditor_Load_Preferences_Local( l.store_id, l.screen, l.tab, l.name, l.cache:preferences ) }">
		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.preferences"					VALUE = "{ l.cache:preferences }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "MMTextEditor_Load_Preferences_Local" PARAMETERS = "store_id, screen, tab, name, preferences var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ len_var( l.tab ) }">	<MvASSIGN NAME = "l.key_prefix" VALUE = "{ l.screen $ '.' $ l.tab $ '.MMTextEditor.' $ l.name }">
	<MvELSE>								<MvASSIGN NAME = "l.key_prefix" VALUE = "{ l.screen $ '.' $ l.screen $ '.MMTextEditor.' $ l.name }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.userpreference" ARRAY = "l.userpreferencelist" COUNT = "{ UserPreferenceList_Load_Heirarchy( l.store_id, g.User:id, l.key_prefix, l.userpreferencelist ) }">
		<MvASSIGN NAME = "l.key"		VALUE = "{ substring_var( l.userpreference:key, len_var( l.key_prefix ) + 2, len_var( l.userpreference:key ) - len_var( l.key_prefix ) - 1 ) }">
		<MvASSIGN NAME = "l.member"		VALUE = "{ glosub( l.key, '.', ':' ) }">

		<MvREFERENCE NAME = "l.preference" VARIABLE = "{ 'l.preferences:' $ l.member }">
		<MvASSIGN NAME = "l.preference" VALUE = "{ l.userpreference:value }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MMTextEditor_Enabled" PARAMETERS = "store_id, screen, tab, name" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ len_var( l.tab ) }">	<MvASSIGN NAME = "l.key" VALUE = "{ l.screen $ '.' $ l.tab $ '.MMTextEditor.' $ l.name $ '.enabled' }">
	<MvELSE>								<MvASSIGN NAME = "l.key" VALUE = "{ l.screen $ '.' $ l.screen $ '.MMTextEditor.' $ l.name $ '.enabled' }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:mmtexteditor:mmtexteditor_enabled">
		<MvMEMBER NAME = "{ l.key }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvIF EXPR = "{ UserPreference_Load_Key( l.store_id, g.User:id, l.key, l.userpreference ) }">
			<MvASSIGN NAME = "l.cache:result" VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.userpreference:value ) }">
		<MvELSEIF EXPR = "{ UserPreference_Load_Key( 0, g.User:id, 'mmtexteditor.enabled', l.userpreference ) }">
			<MvASSIGN NAME = "l.cache:result" VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.userpreference:value ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.cache:result" VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-DBE-BSK-
| Next Error Code: 27   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Basket_Create" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basket"					VALUE = "">
	<MvASSIGN NAME = "l.basket:cust_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_id"		VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_proc"		VALUE = 0>
	<MvASSIGN NAME = "l.basket:ship_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:session_id"		VALUE = "{ g.Session_ID }">
	<MvASSIGN NAME = "l.basket:cussess_id"		VALUE = "">
	<MvASSIGN NAME = "l.basket:chksess_id"		VALUE = "">
	<MvASSIGN NAME = "l.basket:lastupdate"		VALUE = "{ s.time_t }">
	<MvASSIGN NAME = "l.basket:csrf_token"		VALUE = "{ MakeSessionID() }">

	<MvFUNCTIONRETURN VALUE = "{ Basket_Insert( l.basket ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Create_Provisional" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basket"					VALUE = "">
	<MvASSIGN NAME = "l.basket:basket_id"		VALUE = "provisional">
	<MvASSIGN NAME = "l.basket:cust_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_id"		VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_proc"		VALUE = 0>
	<MvASSIGN NAME = "l.basket:ship_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:session_id"		VALUE = "{ g.Session_ID }">
	<MvASSIGN NAME = "l.basket:cussess_id"		VALUE = "">
	<MvASSIGN NAME = "l.basket:chksess_id"		VALUE = "">
	<MvASSIGN NAME = "l.basket:lastupdate"		VALUE = "{ s.time_t }">
	<MvASSIGN NAME = "l.basket:csrf_token"		VALUE = "{ MakeSessionID() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Register" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Basket_Is_Provisional( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Basket_Insert( l.basket ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_ID_Register" PARAMETERS = "basket_id var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ( ISNULL g.Basket ) OR ( g.Basket:basket_id NE l.basket_id ) OR ( g.Basket:session_id NE g.Session_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00016', 'Basket is provisional' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Basket_Register( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.basket_id"	VALUE = "{ g.Basket:basket_id }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Is_Provisional" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ Basket_ID_Is_Provisional( l.basket:basket_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_ID_Is_Provisional" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.basket_id EQ 'provisional' }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Dirty" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_Is_Provisional( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.basket:order_id }">
		<MvASSIGN NAME = "l.basket:order_id"	VALUE = 0>
		<MvASSIGN NAME = "l.basket:order_proc"	VALUE = 0>

		<MvIF EXPR = "{ NOT Basket_Update_Order( l.basket ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.basket:subtotal"		VALUE = "">
	<MvASSIGN NAME = "l.basket:quantity"		VALUE = "">
	<MvASSIGN NAME = "l.basket:weight"			VALUE = "">

	<MvIF EXPR = "{ NOT BasketInfo_Clear_Basket( l.basket:basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Basket_Reset_Tax( l.basket:basket_id )							OR 
					NOT BasketCharge_Delete_All_Type( l.basket:basket_id, 'TAX' )		OR
					NOT BasketCharge_Delete_All_Type( l.basket:basket_id, 'SHIPPING' )	OR
					NOT BasketCharge_Delete_All_Type( l.basket:basket_id, 'HANDLING' )	OR
					NOT BasketCharge_Delete_All_Type( l.basket:basket_id, 'PAYMENT' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_SubTotal_Taxable" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0.00>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "BasketItems"
				QUERY	= "{ 'SELECT SUM( bi.total ) as item_total 
							  FROM ' $ 
							  	g.Store_Table_Prefix $ 'BasketItems bi 
							  WHERE 
							  	bi.basket_id 	= ? AND 
							  	bi.taxable 		= 1' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total" VALUE = "{ BasketItems.d.item_total }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_SubTotal" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.subtotal"	VALUE = "{ BasketItem_Total( l.basket_id ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.subtotal ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Total" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.total"		VALUE = "{ BasketItem_Total( l.basket_id ) + BasketCharge_Total( l.basket_id ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketInfo_InsertOrUpdate" PARAMETERS = "basketinfo var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ BasketInfo_Insert( l.basketinfo ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Library_Filename_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ BasketInfo_Update( l.basketinfo ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Insert" PARAMETERS = "basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basketitem:basket_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00022', 'Basket is provisional' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.basketitem:line_id"	VALUE = "{ StoreKey_Generate( 'BasketItems' ) }">
	<MvASSIGN NAME = "l.basketitem:total"	VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.basketitem:price * l.basketitem:quantity ) }">

	<MvIF EXPR = "{ NOT BasketItem_Insert_LowLevel( l.basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Insert( l.module, l.basketitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItemAndOptions_Insert" PARAMETERS = "basketitem var, basketoptions var, basketoption_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basketitem:basket_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00023', 'Basket is provisional' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.basketitem:line_id"	VALUE = "{ StoreKey_Generate( 'BasketItems' ) }">
	<MvASSIGN NAME = "l.total"				VALUE = "{ l.basketitem:price }">

	<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketoptions" COUNT = "{ l.basketoption_count }">
		<MvASSIGN NAME = "l.total"			VALUE = "{ l.total + l.basketoption:price }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.basketitem:total"	VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.total * l.basketitem:quantity ) }">

	<MvIF EXPR = "{ NOT BasketItem_Insert_LowLevel( l.basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketoptions" COUNT = "{ l.basketoption_count }">
		<MvASSIGN NAME = "l.basketoption:basket_id"	VALUE = "{ l.basketitem:basket_id }">
		<MvASSIGN NAME = "l.basketoption:line_id"	VALUE = "{ l.basketitem:line_id }">

		<MvIF EXPR = "{ NOT BasketOption_Insert_LowLevel( l.basketoption ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Insert( l.module, l.basketitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Update" PARAMETERS = "basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Load_Line( l.basketitem:basket_id, l.basketitem:line_id, l.original_basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ v10_BasketItem_Update( l.original_basketitem, l.basketitem ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketItem_Update" PARAMETERS = "original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.original_basketitem:price NE l.basketitem:price OR l.original_basketitem:quantity NE l.basketitem:quantity }">
		<MvIF EXPR = "{ NOT BasketItem_Recalculate_Total( l.basketitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT BasketItem_Update_LowLevel( l.basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Update( l.module, l.original_basketitem, l.basketitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Update_Pricing" PARAMETERS = "basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Load_Line( l.basketitem:basket_id, l.basketitem:line_id, l.original_basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ v10_BasketItem_Update_Pricing( l.original_basketitem, l.basketitem ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketItem_Update_Pricing" PARAMETERS = "original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.original_basketitem:price NE l.basketitem:price OR l.original_basketitem:quantity NE l.basketitem:quantity }">
		<MvIF EXPR = "{ NOT BasketItem_Recalculate_Total( l.basketitem ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT BasketItem_Update_Pricing_LowLevel( l.basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Update( l.module, l.original_basketitem, l.basketitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Update_Tax" PARAMETERS = "basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Load_Line( l.basketitem:basket_id, l.basketitem:line_id, l.original_basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ v10_BasketItem_Update_Tax( l.original_basketitem, l.basketitem ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketItem_Update_Tax" PARAMETERS = "original_basketitem var, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Update_Tax_LowLevel( l.basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Update( l.module, l.original_basketitem, l.basketitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Increment_Quantity" PARAMETERS = "line_id, quantity" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This function performs a blind incrememnt to avoid race conditions. It is therefore
	| necessary to load the original basket item, perform the increment, then load the
	| basketitem again to get the current state of the basketitem for use with the
	| not_basketitem notification.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT BasketItem_Load_Line_ID( l.line_id, l.original_basketitem ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketItem_Increment_Quantity_LowLevel( l.line_id, l.quantity ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketItem_Load_Line_ID( l.line_id, l.basketitem ) }">				<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketItem_Recalculate_Total( l.basketitem ) }">					<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketItem_Update_Pricing_LowLevel( l.basketitem ) }">				<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Update( l.module, l.original_basketitem, l.basketitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Delete" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Load_Line_ID( l.line_id, l.basketitem ) }">
		<MvIF EXPR = "{ NOT Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ v10_BasketItem_Delete( l.basketitem ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketItem_Delete" PARAMETERS = "basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Delete( l.module, l.basketitem ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ BasketItem_Delete_LowLevel( l.basketitem:line_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Delete_LowLevel" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ BasketOptionDiscount_Delete_All_Line( l.line_id )	AND
								 BasketOption_Delete_All_Line( l.line_id )			AND
								 BasketItemDiscount_Delete_All_Line( l.line_id )	AND
								 BasketItem_Delete_Line( l.line_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Total" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0.00>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "BasketItems"
				QUERY	= "{ 'SELECT SUM( total ) AS total FROM ' $ g.Store_Table_Prefix $ 'BasketItems WHERE basket_id = ?' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total"	VALUE = "{ BasketItems.d.total }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItemDiscount_Total_Line" PARAMETERS = "line_id, total var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "BasketItemDiscounts"
				QUERY	= "{ 'SELECT SUM( discount ) AS total FROM ' $ g.Store_Table_Prefix $ 'BasketItemDiscounts WHERE line_id = ?' }"
				FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ BasketItemDiscounts.d.EOF }">	<MvASSIGN NAME = "l.total"	VALUE = 0.00>
	<MvELSE>										<MvASSIGN NAME = "l.total"	VALUE = "{ BasketItemDiscounts.d.total }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItemDiscounts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOptionDiscount_Total_Option" PARAMETERS = "line_id, attr_id, attmpat_id, total var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "BasketOptionDiscounts"
				QUERY	= "{ 'SELECT
								SUM( discount ) AS total
							  FROM
								' $ g.Store_Table_Prefix $ 'BasketOptionDiscounts
							  WHERE
								line_id		= ?	AND
								attr_id		= ?	AND
								attmpat_id	= ?' }"
				FIELDS	= "l.line_id, l.attr_id, l.attmpat_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00015', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ BasketOptionDiscounts.d.EOF }">	<MvASSIGN NAME = "l.total"	VALUE = 0.00>
	<MvELSE>										<MvASSIGN NAME = "l.total"	VALUE = "{ BasketOptionDiscounts.d.total }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketOptionDiscounts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOptionDiscount_Total_LineOption_ID" PARAMETERS = "lineopt_id, total var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "BasketOptionDiscounts"
				QUERY	= "{ 'SELECT
								SUM( discount ) AS total
							  FROM
								' $ g.Store_Table_Prefix $ 'BasketOptionDiscounts
							  WHERE
								lineopt_id = ?' }"
				FIELDS	= "l.lineopt_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00020', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ BasketOptionDiscounts.d.EOF }">	<MvASSIGN NAME = "l.total"	VALUE = 0.00>
	<MvELSE>										<MvASSIGN NAME = "l.total"	VALUE = "{ BasketOptionDiscounts.d.total }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketOptionDiscounts">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Total" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00024', 'Function BasketOption_Total has been deprecated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketCharge_Total" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0.00>
	</MvIF>

	<MvCOMMENT>
	|
	| This version of the function rounds of each basket charge to 2 decimal places, before adding it to the total in order to 
	| avoid discrpeancies between the invoice line items and the invoice total.  
	| See GEM#M5-756.
	|
	</MvCOMMENT>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "BasketCharges"
				QUERY	= "{ 'SELECT
								amount
							  FROM ' $
								g.Store_Table_Prefix $ 'BasketCharges
							  WHERE
								basket_id	= ?' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT BasketCharges.d.EOF }">
		<MvASSIGN NAME = "l.total"	VALUE = "{ l.total + ( BasketCharges.d.amount ROUND 2 ) }">
		<MvSKIP NAME = "Merchant" VIEW = "BasketCharges" ROWS = "1">
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketCharges">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketCharge_Total_Type" PARAMETERS = "basket_id, type" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0.00>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "BasketCharges"
				QUERY	= "{ 'SELECT
								amount
							  FROM ' $
								g.Store_Table_Prefix $ 'BasketCharges
							  WHERE
								basket_id	= ?	AND
								type		= ?' }"
				FIELDS	= "l.basket_id, l.type">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00012', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT BasketCharges.d.EOF }">
		<MvASSIGN NAME = "l.total"	VALUE = "{ l.total + ( BasketCharges.d.amount ROUND 2 ) }">
		<MvSKIP NAME = "Merchant" VIEW = "BasketCharges" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketCharges">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].IEEE754_Normalize( 2, l.total ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Quantity_All" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "BasketItems"
				QUERY	= "{ 'SELECT SUM( quantity ) AS quantity FROM ' $ g.Store_Table_Prefix $ 'BasketItems WHERE basket_id = ?' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quantity" VALUE = "{ BasketItems.d.quantity ROUND 0 }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">

	<MvFUNCTIONRETURN VALUE = "{ l.quantity }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Quantity" PARAMETERS = "basket_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "BasketItems"
				QUERY	= "{ 'SELECT SUM( quantity ) AS quantity FROM ' $ g.Store_Table_Prefix $ 'BasketItems WHERE basket_id = ? AND product_id = ?' }"
				FIELDS	= "l.basket_id, l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00006', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.quantity" VALUE = "{ BasketItems.d.quantity ROUND 0 }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">

	<MvFUNCTIONRETURN VALUE = "{ l.quantity }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Weight" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ BasketItem_Weight( l.basket_id ) + BasketOption_Weight( l.basket_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Weight" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0.00>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "BasketItems"
				QUERY	= "{ 'SELECT quantity, weight FROM ' $ g.Store_Table_Prefix $ 'BasketItems WHERE basket_id = ?' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00007', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.weight" VALUE = 0.00>

	<MvWHILE EXPR = "{ NOT BasketItems.d.EOF }">
		<MvASSIGN NAME = "l.weight" VALUE = "{ l.weight + ( BasketItems.d.weight * BasketItems.d.quantity ) }">

		<MvSKIP NAME = "Merchant" VIEW = "BasketItems" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">
	<MvFUNCTIONRETURN VALUE = "{ l.weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Quantity_Upsold" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "BasketItems"
				QUERY	= "{ 'SELECT COUNT( * ) AS item_count FROM ' $ g.Store_Table_Prefix $ 'BasketItems WHERE basket_id = ? AND upsold = 1' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00008', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.upsold_count" VALUE = "{ int( BasketItems.d.item_count ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">

	<MvFUNCTIONRETURN VALUE = "{ l.upsold_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Weight" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0.00>
	</MvIF>

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "BasketOptions"
				QUERY	= "{ 'SELECT
								bi.quantity,
								bo.weight
							  FROM ' $
								g.Store_Table_Prefix $ 'BasketItems bi, ' $
								g.Store_Table_Prefix $ 'BasketOptions bo
							  WHERE
								bi.basket_id	= ? AND
								bo.line_id		= bi.line_id' }"
				FIELDS	= "l.basket_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00009', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.weight" VALUE = 0.00>

	<MvWHILE EXPR = "{ NOT BasketOptions.d.EOF }">
		<MvASSIGN NAME = "l.weight" VALUE = "{ l.weight + ( BasketOptions.d.weight * BasketOptions.d.quantity ) }">

		<MvSKIP NAME = "Merchant" VIEW = "BasketOptions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketOptions">
	<MvFUNCTIONRETURN VALUE = "{ l.weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Line_Weight" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "BasketOptions"
				QUERY	= "{ 'SELECT
								weight
							  FROM
								' $ g.Store_Table_Prefix $ 'BasketOptions
							  WHERE
								line_id	= ?' }"
				FIELDS	= "l.line_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.weight" VALUE = 0.00>

	<MvWHILE EXPR = "{ NOT BasketOptions.d.EOF }">
		<MvASSIGN NAME = "l.weight" VALUE = "{ l.weight + BasketOptions.d.weight }">

		<MvSKIP NAME = "Merchant" VIEW = "BasketOptions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketOptions">
	<MvFUNCTIONRETURN VALUE = "{ l.weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Total_Line" PARAMETERS = "line_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-BSK-00025', 'Function BasketOption_Total_Line has been deprecated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Reset" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_Is_Provisional( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvTRANSACT NAME = "Merchant">

	<MvIF EXPR = "{ NOT Basket_Delete_ID( l.basket:basket_id )													OR
					NOT BasketOptionDiscount_Delete_All_Basket( l.basket:basket_id )							OR
					NOT BasketOption_Delete_All_Basket( l.basket:basket_id )									OR
					NOT BasketItemDiscount_Delete_All_Basket( l.basket:basket_id )								OR
				    NOT BasketItem_Delete_All_Basket( l.basket:basket_id )										OR
					NOT BasketCharge_Delete_All_Basket( l.basket:basket_id )									OR
					NOT BasketInfo_Delete_All_Basket( l.basket:basket_id )										OR
					NOT [ g.Module_Feature_PGR_DB ].BasketCoupon_Delete_All_Basket( l.basket:basket_id )		OR
					NOT [ g.Module_Feature_PGR_DB ].BasketDiscountTotal_Delete_All_Basket( l.basket:basket_id )	OR
					NOT [ g.Module_Feature_CUS_DB ].ShopAsCustomerSession_Delete_All_Basket( g.Store:id, l.basket:basket_id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_AFF_DB ].Basket_Delete( l.basket:session_id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Reset_Basket" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_Is_Provisional( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvTRANSACT NAME = "Merchant">

	<MvIF EXPR = "{ NOT BasketInfo_Delete_All_Basket( l.basket:basket_id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Basket_Delete_ID( l.basket:basket_id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].ShopAsCustomerSession_Delete_All_Basket( g.Store:id, l.basket:basket_id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_AFF_DB ].Basket_Delete( l.basket:session_id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Reset_Contents" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_Is_Provisional( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvTRANSACT NAME = "Merchant">

	<MvIF EXPR = "{ NOT BasketOptionDiscount_Delete_All_Basket( l.basket:basket_id )						OR
					NOT BasketOption_Delete_All_Basket( l.basket:basket_id )								OR
					NOT BasketItemDiscount_Delete_All_Basket( l.basket:basket_id )							OR
				    NOT BasketItem_Delete_All_Basket( l.basket:basket_id )									OR
					NOT BasketCharge_Delete_All_Basket( l.basket:basket_id )								OR
					NOT BasketInfo_Delete_ClearOnMod_Basket( l.basket:basket_id )							OR
					NOT [ g.Module_Feature_PGR_DB ].BasketCoupon_Delete_All_Basket( l.basket:basket_id )	OR
					NOT [ g.Module_Feature_PGR_DB ].BasketDiscountTotal_Delete_All_Basket( l.basket:basket_id ) }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_InventoryAdjust_ProductList" PARAMETERS = "time" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.time EQ 0 }">
		<MvCOMMENT>
		|
		| This code joins to Baskets even though it does not technically need to do so,
		| because a previous bug in Basket_Delete_All_OlderThan() left orphaned BasketItems which
		| would cause this function to improperly reapply those expired BasketItem records to
		| the product inventory
		|
		</MvCOMMENT>

		<MvOPENVIEW	NAME	= "Merchant"
					VIEW	= "Products"
					QUERY	= "{ 'SELECT
									bi.variant_id		AS variant_id,
									SUM( bi.quantity )	AS quantity,
									prod.id				AS id,
									prod.catcount		AS catcount,
									prod.agrpcount		AS agrpcount,
									prod.pgrpcount		AS pgrpcount,
									prod.disp_order		AS disp_order,
									prod.code			AS code,
									prod.sku			AS sku,
									prod.name			AS name,
									prod.thumbnail		AS thumbnail,
									prod.image			AS image,
									prod.price			AS price,
									prod.cost			AS cost,
									prod.descrip		AS descrip,
									prod.weight			AS weight,
									prod.taxable		AS taxable,
									prod.active			AS active,
									prod.dt_created		AS dt_created,
									prod.dt_updated		AS dt_updated,
									ipc.inventory		AS ipc_inventory,
									ips.active			AS ips_active,
									ips.in_long			AS ips_in_long,
									ips.in_short		AS ips_in_short,
									ips.low_level		AS ips_low_level,
									ips.low_long		AS ips_low_long,
									ips.low_lvl_d		AS ips_low_lvl_d,
									ips.low_short		AS ips_low_short,
									ips.low_track		AS ips_low_track,
									ips.out_level		AS ips_out_level,
									ips.out_long		AS ips_out_long,
									ips.out_lvl_d		AS ips_out_lvl_d,
									ips.out_short		AS ips_out_short,
									ips.out_track		AS ips_out_track,
									iset.active			AS iset_active,
									iset.in_long		AS iset_in_long,
									iset.in_short		AS iset_in_short,
									iset.low_level		AS iset_low_level,
									iset.low_long		AS iset_low_long,
									iset.low_short		AS iset_low_short,
									iset.low_track		AS iset_low_track,
									iset.out_level		AS iset_out_level,
									iset.out_long		AS iset_out_long,
									iset.out_short		AS iset_out_short,
									iset.out_track		AS iset_out_track
								  FROM ' $
									g.Store_Table_Prefix $ 'Baskets b, ' $
									g.Store_Table_Prefix $ 'BasketItems bi, ' $
									g.Store_Table_Prefix $ 'InventorySettings iset, ' $
									g.Store_Table_Prefix $ 'Products prod
									LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductSettings ips ON ips.product_id = prod.id
									LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductCounts ipc ON ipc.product_id = prod.id
								  WHERE
									bi.basket_id	= b.basket_id	AND
									prod.id			= bi.product_id
								  GROUP BY
									bi.variant_id,
									prod.id, prod.catcount, prod.agrpcount, prod.pgrpcount, prod.disp_order, prod.code, prod.sku, prod.name,
									prod.thumbnail, prod.image, prod.price, prod.cost, prod.descrip, prod.weight, prod.taxable, prod.active,
									prod.dt_created, prod.dt_updated,
									ipc.inventory,
									ips.active, ips.in_long, ips.in_short, ips.low_level, ips.low_long, ips.low_lvl_d, ips.low_short, ips.low_track,
									ips.out_level, ips.out_long, ips.out_lvl_d, ips.out_short, ips.out_track,
									iset.active, iset.in_long, iset.in_short, iset.low_level, iset.low_long, iset.low_short, iset.low_track, iset.out_level,
									iset.out_long, iset.out_short, iset.out_track' }">
	<MvELSE>
		<MvOPENVIEW	NAME	= "Merchant"
					VIEW	= "Products"
					QUERY	= "{ 'SELECT
									bi.variant_id		AS variant_id,
									SUM( bi.quantity )	AS quantity,
									prod.id				AS id,
									prod.catcount		AS catcount,
									prod.agrpcount		AS agrpcount,
									prod.pgrpcount		AS pgrpcount,
									prod.disp_order		AS disp_order,
									prod.code			AS code,
									prod.sku			AS sku,
									prod.name			AS name,
									prod.thumbnail		AS thumbnail,
									prod.image			AS image,
									prod.price			AS price,
									prod.cost			AS cost,
									prod.descrip		AS descrip,
									prod.weight			AS weight,
									prod.taxable		AS taxable,
									prod.active			AS active,
									prod.dt_created		AS dt_created,
									prod.dt_updated		AS dt_updated,
									ipc.inventory		AS ipc_inventory,
									ips.active			AS ips_active,
									ips.in_long			AS ips_in_long,
									ips.in_short		AS ips_in_short,
									ips.low_level		AS ips_low_level,
									ips.low_long		AS ips_low_long,
									ips.low_lvl_d		AS ips_low_lvl_d,
									ips.low_short		AS ips_low_short,
									ips.low_track		AS ips_low_track,
									ips.out_level		AS ips_out_level,
									ips.out_long		AS ips_out_long,
									ips.out_lvl_d		AS ips_out_lvl_d,
									ips.out_short		AS ips_out_short,
									ips.out_track		AS ips_out_track,
									iset.active			AS iset_active,
									iset.in_long		AS iset_in_long,
									iset.in_short		AS iset_in_short,
									iset.low_level		AS iset_low_level,
									iset.low_long		AS iset_low_long,
									iset.low_short		AS iset_low_short,
									iset.low_track		AS iset_low_track,
									iset.out_level		AS iset_out_level,
									iset.out_long		AS iset_out_long,
									iset.out_short		AS iset_out_short,
									iset.out_track		AS iset_out_track
								  FROM ' $
									g.Store_Table_Prefix $ 'Baskets b, ' $
									g.Store_Table_Prefix $ 'BasketItems bi, ' $
									g.Store_Table_Prefix $ 'InventorySettings iset, ' $
									g.Store_Table_Prefix $ 'Products prod
									LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductSettings ips ON ips.product_id = prod.id
									LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductCounts ipc ON ipc.product_id = prod.id
								  WHERE
									b.lastupdate	< ?				AND
									bi.basket_id	= b.basket_id	AND
									prod.id			= bi.product_id
								  GROUP BY
									bi.variant_id,
									prod.id, prod.catcount, prod.agrpcount, prod.pgrpcount, prod.disp_order, prod.code, prod.sku, prod.name,
									prod.thumbnail, prod.image, prod.price, prod.cost, prod.descrip, prod.weight, prod.taxable, prod.active,
									prod.dt_created, prod.dt_updated,
									ipc.inventory,
									ips.active, ips.in_long, ips.in_short, ips.low_level, ips.low_long, ips.low_lvl_d, ips.low_short, ips.low_track,
									ips.out_level, ips.out_long, ips.out_lvl_d, ips.out_short, ips.out_track,
									iset.active, iset.in_long, iset.in_short, iset.low_level, iset.low_long, iset.low_short, iset.low_track, iset.out_level,
									iset.out_long, iset.out_short, iset.out_track' }"
					FIELDS	= "l.time">
	</MvIF>

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">	
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBE-BSK-00010', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count"		VALUE = 0>

	<MvWHILE EXPR = "{ NOT Products.d.EOF }">
		<MvASSIGN NAME = "l.product_count"	VALUE = "{ l.product_count + 1 }">

		<MvEVAL EXPR = "{ Product_Read( l.products[ l.product_count ] ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_INV_RT ].Runtime_Product_InventoryFields_Read( l.products[ l.product_count ] ) }">

		<MvASSIGN NAME = "l.products" INDEX = "{ l.product_count }" MEMBER = "variant_id"	VALUE = "{ Products.d.variant_id }">
		<MvASSIGN NAME = "l.products" INDEX = "{ l.product_count }" MEMBER = "quantity"		VALUE = "{ Products.d.quantity }">

		<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">

	<MvASSIGN NAME = "l.product_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.product_pos LE l.product_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.products[ l.product_pos ], l.products[ l.product_pos ]:variant_id, l.products[ l.product_pos ]:quantity ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.product_pos"	VALUE = "{ l.product_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Reset_Tax" PARAMETERS = "basket_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'BasketItems 
			 			  SET 
			 				tax			= 0.00 
			 			  WHERE 
			 				basket_id	= ?' }"
			 FIELDS = "l.basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-BSK-00017', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'BasketCharges 
			 			  SET 
			 				tax			= 0.00 
			 			  WHERE 
			 				basket_id	= ?' }"
			 FIELDS = "l.basket_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-BSK-00018', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Delete_All" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvTRANSACT NAME = "Merchant">

	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'Baskets' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketOptionDiscounts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketOptions' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketItems' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketItemDiscounts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketCharges' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketInfo' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketCoupons' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketDiscountTotals' }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_AFF_DB ].AffiliateSession_Delete_All() }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_CUS_DB ].ShopAsCustomerSession_Delete_All() }">

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Delete_All_OlderThan" PARAMETERS = "time_t" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvTRANSACT NAME = "Merchant">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_CUS_DB ].ShopAsCustomerSession_Delete_All_Basket_OlderThan( g.Store:id, l.time_t ) }">

	<MvIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketOptionDiscounts bod
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bod.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketOptions bo
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bo.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketItems bi
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bi.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketItemDiscounts bid
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bid.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketCharges bc
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bc.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketInfo bi
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bi.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketCoupons bc
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bc.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'BasketDiscountTotals bd
				 			  USING ' $
				 			  	g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bd.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'Baskets WHERE lastupdate < ?' }"
				 FIELDS	= "l.time_t">
	<MvELSE>
		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bod.* FROM ' $ g.Store_Table_Prefix $ 'BasketOptionDiscounts bod, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bod.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bo.* FROM ' $ g.Store_Table_Prefix $ 'BasketOptions bo, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bo.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bi.* FROM ' $ g.Store_Table_Prefix $ 'BasketItems bi, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bi.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bid.* FROM ' $ g.Store_Table_Prefix $ 'BasketItemDiscounts bid, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bid.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bc.* FROM ' $ g.Store_Table_Prefix $ 'BasketCharges bc, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bc.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bi.* FROM ' $ g.Store_Table_Prefix $ 'BasketInfo bi, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bi.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bc.* FROM ' $ g.Store_Table_Prefix $ 'BasketCoupons bc, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bc.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE bd.* FROM ' $ g.Store_Table_Prefix $ 'BasketDiscountTotals bd, ' $ g.Store_Table_Prefix $ 'Baskets b WHERE b.lastupdate < ? AND bd.basket_id = b.basket_id' }"
				 FIELDS	= "l.time_t">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'Baskets WHERE lastupdate < ?' }"
				 FIELDS	= "l.time_t">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_AFF_DB ].AffiliateSession_Delete_All_OlderThan( l.time_t ) }">

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Is_Empty" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ Basket_Is_Provisional( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Basket_Is_Empty', 'SELECT line_id FROM ' $ g.Store_Table_Prefix $ 'BasketItems WHERE basket_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.basket:basket_id ), 0, 1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-DBE-BSK-00019', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.empty" VALUE = "{ Basket_Is_Empty.d.EOF }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Basket_Is_Empty">
	<MvFUNCTIONRETURN VALUE = "{ l.empty }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Insert" PARAMETERS = "basketoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Load_Line_ID( l.basketoption:line_id, l.basketitem ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ v10_BasketOption_Insert( l.basketitem, l.basketoption ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketOption_Insert" PARAMETERS = "basketitem var, basketoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketOption_Insert_LowLevel( l.basketoption ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.basketoption:price NE 0 }">
		<MvIF EXPR = "{ NOT BasketItem_Recalculate_Total( l.basketitem ) }">			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT BasketItem_Update_Pricing_LowLevel( l.basketitem ) }">	<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Update" PARAMETERS = "basketoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Load_Line_ID( l.basketoption:line_id, l.basketitem ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketOption_Load_ID( l.basketoption:id, l.original_basketoption ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ v10_BasketOption_Update( l.basketitem, l.original_basketoption, l.basketoption ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketOption_Update" PARAMETERS = "basketitem var, original_basketoption var, basketoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketOption_Update_LowLevel( l.basketoption ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.original_basketoption:price NE l.basketoption:price }">
		<MvIF EXPR = "{ NOT BasketItem_Recalculate_Total( l.basketitem ) }">			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT BasketItem_Update_Pricing_LowLevel( l.basketitem ) }">	<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Update_Pricing" PARAMETERS = "basketoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketItem_Load_Line( l.basketoption:basket_id, l.basketoption:line_id, l.basketitem ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketOption_Load_ID( l.basketoption:id, l.original_basketoption ) }">					<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ v10_BasketOption_Update_Pricing( l.basketitem, l.original_basketoption, l.basketoption ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketOption_Update_Pricing" PARAMETERS = "basketitem var, original_basketoption var, basketoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketOption_Update_Pricing_LowLevel( l.basketoption ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.original_basketoption:price NE l.basketoption:price }">
		<MvIF EXPR = "{ NOT BasketItem_Recalculate_Total( l.basketitem ) }">			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT BasketItem_Update_Pricing_LowLevel( l.basketitem ) }">	<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketOption_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketOption_Load_ID( l.id, l.basketoption ) }">						<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketItem_Load_Line_ID( l.basketoption:line_id, l.basketitem ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ v10_BasketOption_Delete( l.basketitem, l.basketoption ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v10_BasketOption_Delete" PARAMETERS = "basketitem var, basketoption var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT BasketOption_Delete_LowLevel( l.basketoption ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketItem_Recalculate_Total( l.basketitem ) }">		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT BasketItem_Update_Pricing_LowLevel( l.basketitem ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItemList_Load_Basket_Summary" PARAMETERS = "basket_id, basketitems var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basketitems"		VALUE = "">
	<MvASSIGN NAME = "l.basketitem_count"	VALUE = "{ BasketItemList_Load_Basket( l.basket_id, l.basketitems ) }">

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ l.basketitem_count }">
		<MvASSIGN NAME = "l.basketitem:option_count"	VALUE = "{ BasketOptionList_Load_Line( l.basketitem:line_id, l.basketitem:options ) }">
		<MvASSIGN NAME = "l.unit_price"					VALUE = "{ l.basketitem:price }">

		<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketitem:options" COUNT = "{ l.basketitem:option_count }">
			<MvASSIGN NAME = "l.unit_price" VALUE = "{ l.unit_price + l.basketoption:price }">
		</MvFOREACH>
		
		<MvIF EXPR = "{ [ g.Module_Library_Utilities ].Price_IsHighPrecision( l.unit_price ) }">
			<MvASSIGN NAME = "l.basketitem:unit_quantity"	VALUE = 1>
			<MvASSIGN NAME = "l.basketitem:unit_price"		VALUE = "{ l.basketitem:total }">
			<MvASSIGN NAME = "l.basketitem:unit_name"		VALUE = "{ '(Qty ' $ l.basketitem:quantity $ ') ' $ l.basketitem:name }">
		<MvELSE>
			<MvASSIGN NAME = "l.basketitem:unit_quantity"	VALUE = "{ l.basketitem:quantity }">
			<MvASSIGN NAME = "l.basketitem:unit_price"		VALUE = "{ l.unit_price }">
			<MvASSIGN NAME = "l.basketitem:unit_name"		VALUE = "{ l.basketitem:name }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ ListLoad_EOF_Return( 'MER-DBE-BSK-00026', l.basketitem_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_Recalculate_Total" PARAMETERS = "basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.total"				VALUE = "{ l.basketitem:price }">
	<MvASSIGN NAME = "l.basketoption_count"	VALUE = "{ BasketOptionList_Load_Line( l.basketitem:line_id, l.basketoptions ) }">

	<MvIF EXPR = "{ l.basketoption_count EQ 0 AND NOT Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketoptions" COUNT = "{ l.basketoption_count }">
		<MvASSIGN NAME = "l.total"			VALUE = "{ l.total + l.basketoption:price }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.basketitem:total"	VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.total * l.basketitem:quantity ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_NotifyList_Append_Insert" PARAMETERS = "basketitem var, notify_items var, notify_item_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_item"			VALUE = "">
	<MvASSIGN NAME = "l.notify_item:insert"		VALUE = 1>
	<MvASSIGN NAME = "l.notify_item:basketitem"	VALUE = "{ l.basketitem }">

	<MvASSIGN NAME = "l.notify_item_count"		VALUE = "{ miva_array_insert_ref( l.notify_items, l.notify_item, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BasketItem_NotifyList_Append_Update" PARAMETERS = "original_basketitem var, basketitem var, notify_items var, notify_item_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.notify_item"						VALUE = "">
	<MvASSIGN NAME = "l.notify_item:update"					VALUE = 1>
	<MvASSIGN NAME = "l.notify_item:original_basketitem"	VALUE = "{ l.original_basketitem }">
	<MvASSIGN NAME = "l.notify_item:basketitem"				VALUE = "{ l.basketitem }">

	<MvASSIGN NAME = "l.notify_item_count"					VALUE = "{ miva_array_insert_ref( l.notify_items, l.notify_item, -1 ) }">
</MvFUNCTION>

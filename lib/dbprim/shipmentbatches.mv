<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-DBP-SBH-
| Next Error Code: 11   
|
</MvCOMMENT>

<MvFUNCTION NAME = "ShipmentBatch_Read" PARAMETERS = "shipmentbatch var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.shipmentbatch:id"			VALUE = "{ ShipmentBatches.d.id }">
	<MvASSIGN NAME = "l.shipmentbatch:batchdate"	VALUE = "{ ShipmentBatches.d.batchdate }">
	<MvASSIGN NAME = "l.shipmentbatch:name"			VALUE = "{ ShipmentBatches.d.name }">
</MvFUNCTION>

<MvFUNCTION NAME = "ShipmentBatch_Insert" PARAMETERS = "shipmentbatch var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.shipmentbatch:id"	VALUE = "{ StoreKey_Generate( 'ShipmentBatches' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ShipmentBatches
					      ( id, batchdate, name )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.shipmentbatch:id, l.shipmentbatch:batchdate, l.shipmentbatch:name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBP-SBH-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShipmentBatch_Delete_ID" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ShipmentBatches WHERE id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBP-SBH-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShipmentBatch_Load_ID" PARAMETERS = "id, shipmentbatch var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ShipmentBatches"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ShipmentBatches WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBP-SBH-00003', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ShipmentBatches.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ShipmentBatches">
		<MvFUNCTIONRETURN VALUE = "{ Error_Load_EOF( 'MER-DBP-SBH-00004' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ShipmentBatch_Read( l.shipmentbatch ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ShipmentBatches">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShipmentBatchList_Load_All" PARAMETERS = "shipmentbatches var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ShipmentBatches"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ShipmentBatches ORDER BY id DESC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'MER-DBP-SBH-00005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.shipmentbatch_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT ShipmentBatches.d.EOF }">
		<MvASSIGN NAME = "l.shipmentbatch_count" VALUE = "{ l.shipmentbatch_count + 1 }">
		<MvEVAL EXPR = "{ ShipmentBatch_Read( l.shipmentbatches[ l.shipmentbatch_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ShipmentBatches" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ShipmentBatches">
	<MvFUNCTIONRETURN VALUE = "{ ListLoad_EOF_Return( 'MER-DBP-SBH-00006', l.shipmentbatch_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ShipmentBatchList_Load_Closed" PARAMETERS = "closed, shipmentbatches var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.closed }">	<MvFUNCTIONRETURN VALUE = "{ ListLoad_EOF_Return( 'MER-DBP-SBH-00008', 0 ) }">
	<MvELSE>						<MvFUNCTIONRETURN VALUE = "{ ShipmentBatchList_Load_All( l.shipmentbatches ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ShipmentBatchList_Load_Offset" PARAMETERS = "offset, search, searchable_fields, max, nextoffset var, shipmentbatches var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.query"		VALUE = "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ShipmentBatches' }">

	<MvIF EXPR = "{ len( l.search ) }">
		<MvASSIGN NAME = "l.query"	VALUE = "{ l.query $ ' WHERE ' $ SQL_Search_Clause( l.search, g.Store_Table_Prefix $ 'ShipmentBatches', l.searchable_fields, l.fields ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "{ l.query $ ' ORDER BY id desc' }">

	<MvIF EXPR = "{ l.max EQ 0 }">	<MvASSIGN NAME = "l.limit" VALUE = 0>
	<MvELSE>						<MvASSIGN NAME = "l.limit" VALUE = "{ l.max + 1 }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_Filename_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'ShipmentBatches',
																			   l.query, l.fields,
																			   l.offset, l.limit ) }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Library_Filename_Utilities ].Error( 'MER-DBP-SBH-00009', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.shipmentbatch_count" VALUE = 0>
	<MvSKIP NAME = "Merchant" VIEW = "ShipmentBatches" ROWS = "{ l.offset }">
	<MvWHILE EXPR = "{ ( NOT ShipmentBatches.d.EOF ) AND ( ( l.max EQ 0 ) OR ( l.shipmentbatch_count LT l.max ) ) }">
		<MvASSIGN NAME = "l.shipmentbatch_count" VALUE = "{ l.shipmentbatch_count + 1 }">
		<MvEVAL EXPR = "{ ShipmentBatch_Read( l.shipmentbatches[ l.shipmentbatch_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "ShipmentBatches" ROWS = 1>
	</MvWHILE>

	<MvIF EXPR = "{ ShipmentBatches.d.EOF }">
		<MvASSIGN NAME = "l.nextoffset"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.nextoffset"	VALUE = "{ l.offset + l.shipmentbatch_count }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ShipmentBatches">
	<MvFUNCTIONRETURN VALUE = "{ ListLoad_EOF_Return( 'MER-DBP-SBH-00010', l.shipmentbatch_count ) }">
</MvFUNCTION>

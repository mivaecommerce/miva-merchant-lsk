<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-FCT-JSN-
| Next Error Code: 13
|
</MvCOMMENT>

<MvFUNCTION NAME = "FacetRulesList_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data EQ 'module_name' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:module:name ) }">				<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.right:module:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-module_name' }">	<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:module:name ) }">				<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.left:module:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'facet_code' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:code ) }">						<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.right:code ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-facet_code' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:code ) }">					<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.left:code ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'facet_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:name ) }">						<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.right:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-facet_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:name ) }">					<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.left:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'priority' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.left:facetrules:priority }">						<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.right:facetrules:priority }">
	<MvELSEIF EXPR = "{ l.data EQ '-priority' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.right:facetrules:priority }">						<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.left:facetrules:priority }">
	<MvELSEIF EXPR = "{ l.data EQ 'handle' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:handle ) }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:handle ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-handle' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:handle ) }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:handle ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'cathandle' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:cathandle ) }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:cathandle ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-cathandle' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:cathandle ) }">	<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:cathandle ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'disp_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:disp_name ) }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:disp_name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-disp_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:disp_name ) }">	<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:disp_name ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'type' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:type ) }">						<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:type ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-type' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:type ) }">					<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:type ) }">
	</MvIF>

	<MvIF EXPR = "{ l.left_data LT l.right_data }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left_data GT l.right_data }">					<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Break ties using module code then facet code.  priority tiebreaking is reversed, to match the
	| runtime logic.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ( l.data EQ 'priority' ) OR ( ( l.data NE '-priority' ) AND ( substring_var( l.data, 1, 1 ) EQ '-' ) ) }">
		<MvIF EXPR = "{ ( 'x' $ toupper( l.left:module:code ) ) LT ( 'x' $ toupper( l.right:module:code ) ) }">		<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ ( 'x' $ toupper( l.left:module:code ) ) GT ( 'x' $ toupper( l.right:module:code ) ) }">	<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ ( 'x' $ toupper( l.left:code ) ) LT ( 'x' $ toupper( l.right:code ) ) }">				<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ ( 'x' $ toupper( l.left:code ) ) GT ( 'x' $ toupper( l.right:code ) ) }">				<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ ( 'x' $ toupper( l.left:module:code ) ) LT ( 'x' $ toupper( l.right:module:code ) ) }">		<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ ( 'x' $ toupper( l.left:module:code ) ) GT ( 'x' $ toupper( l.right:module:code ) ) }">	<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ ( 'x' $ toupper( l.left:code ) ) LT ( 'x' $ toupper( l.right:code ) ) }">				<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ ( 'x' $ toupper( l.left:code ) ) GT ( 'x' $ toupper( l.right:code ) ) }">				<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_FacetRulesList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'module_name',	'l.facet:module:name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'facet_code',	'l.facet:code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'facet_name',	'l.facet:name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_INTEGER(	l.available_filters, 'priority',	'l.facet:facetrules:priority' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'handle',		'l.facet:facetrules:handle' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'cathandle',	'l.facet:facetrules:cathandle' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'disp_name',	'l.facet:facetrules:disp_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'type',		'l.facet:type' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text_Array(	'o', 'FacetModule_List',	l.facet_modules, l.facet_module_count )	OR
					NOT [ g.Module_JSON ].JSON_Input_Filter(		'o', 'Filter',				l.filter )								OR
					NOT [ g.Module_JSON ].JSON_Input_Text(			'o', 'Sort',				l.sort )								OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(		'o', 'Offset',				l.offset )								OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(		'o', 'Count',				l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_count"					VALUE = "{ [ g.Module_Feature_FCT_UT ].FacetList_Load_All( l.facets ) }">
	<MvASSIGN NAME = "l.null"							VALUE = "{ miva_array_sort( l.facets, 'FacetRulesList_Sort_Callback', l.sort ) }">

	<MvASSIGN NAME = "l.search_expression"				VALUE = "1 EQ 1">

	<MvIF EXPR = "{ l.facet_module_count }">
		<MvASSIGN NAME = "l.search_expression"			VALUE = "{ l.search_expression $ ' AND ( ' }">
		<MvASSIGN NAME = "l.search_module_pos"			VALUE = 0>

		<MvFOREACH ITERATOR = "l.facet_module" ARRAY = "l.facet_modules" INDEX = "l.pos" COUNT = "{ l.facet_module_count }">
			<MvIF EXPR = "{ l.pos GT 1 }">
				<MvASSIGN NAME = "l.search_expression"	VALUE = "{ l.search_expression $ ' OR ' }">
			</MvIF>

			<MvASSIGNARRAY NAME = "l.search_modules"	VALUE = "{ l.facet_module }">
				<MvDIMENSION INDEX = "{ ++l.search_module_pos }">
			</MvASSIGNARRAY>

			<MvASSIGN NAME = "l.search_expression"		VALUE = "{ l.search_expression $ '( \'x\' $ toupper( l.facet:module:code ) ) EQ ( \'x\' $ toupper( l.search_modules[' $ l.search_module_pos $ '] ) )' }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.search_expression"			VALUE = "{ l.search_expression $ ' )' }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">

	<MvASSIGN NAME = "l.total_count"					VALUE = 0>
	<MvASSIGN NAME = "l.output_count"					VALUE = 0>
	<MvASSIGN NAME = "l.skip"							VALUE = "{ l.offset }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
			<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.filtered_array" COUNT = "{ miva_array_filter_ref( l.facets, 1, l.facet, l.search_expression, l.filtered_array ) }">
				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">

				<MvIF EXPR = "{ l.skip }">
					<MvASSIGN NAME = "l.skip"			VALUE = "{ l.skip - 1 }">
				<MvELSEIF EXPR = "{ ( l.output_count LT l.count ) OR ( l.count EQ 0 ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
					"module":
					{
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.facet:module ) }">
					},
					"mod_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:module:code ) }">",
					"facet_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:code ) }">",
					"facet_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:name ) }">",
					"priority":		<MvEVAL EXPR = "{ int( l.facet:facetrules:priority ) }">,
					"handle":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:facetrules:handle ) }">",
					"cathandle":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:facetrules:cathandle ) }">",
					"disp_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:facetrules:disp_name ) }">",
					"allowed_types":
					{
						<MvFOREACH INDEX = "l.type_pos" ITERATOR = "l.allowed_type" ARRAY = "l.allowed_types" COUNT = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.facet:allowed_types, ',', l.allowed_types ) }">
							<MvIF EXPR = "{ l.type_pos GT 1 }">
								,
							</MvIF>

							"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.allowed_type ) }">": true
						</MvFOREACH>
					},
					"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:type ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>
			</MvFOREACH>
		],
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">
	}

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_FacetRules_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Module_Code" 			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Module_Code ) }">
	<MvASSIGN NAME = "g.Facet_Code" 			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Facet_Code ) }">
	<MvASSIGN NAME = "g.Priority" 				VALUE = "{ int( g.Priority ) }">
	<MvASSIGN NAME = "g.Handling"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Handling ) }">
	<MvASSIGN NAME = "g.CategoryHandling"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.CategoryHandling ) }">
	<MvASSIGN NAME = "g.Display_Name" 			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Display_Name ) }">
	<MvASSIGN NAME = "g.Type" 					VALUE = "{ trim( g.Type ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].FacetRules_Load_FacetOrDefault( g.Module_Code, g.Facet_Code, l.facetrules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.Handling, 'show,hide,disable' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Handling', 'Please specify a valid global handling' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.CategoryHandling, 'show,hide,disable' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'CategoryHandling', 'Please specify a valid default category handling' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.Type, 'radio,checkbox,select,rangeslider,nested' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Type', 'Please specify a valid type' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facetrules:mod_code" 	VALUE = "{ g.Module_Code }">
	<MvASSIGN NAME = "l.facetrules:facet_code" 	VALUE = "{ g.Facet_Code }">
	<MvASSIGN NAME = "l.facetrules:priority" 	VALUE = "{ g.Priority }">
	<MvASSIGN NAME = "l.facetrules:handle"		VALUE = "{ g.Handling }">
	<MvASSIGN NAME = "l.facetrules:cathandle"	VALUE = "{ g.CategoryHandling }">
	<MvASSIGN NAME = "l.facetrules:disp_name" 	VALUE = "{ g.Display_Name }">
	<MvASSIGN NAME = "l.facetrules:type"	 	VALUE = "{ g.Type }">

	<MvIF EXPR = "{ [ g.Module_Feature_FCT_DB ].FacetRules_Insert( l.facetrules ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-FCT-JSN-00003', 'Facet rules for module \'' $ l.facetrules:mod_code $ '\' facet \'' $ l.facetrules:facet_code $ '\' inserted' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].FacetRules_Update( l.facetrules ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-FCT-JSN-00001', 'Facet rules for module \'' $ l.facetrules:mod_code $ '\' facet \'' $ l.facetrules:facet_code $ '\' updated' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_FacetList_Load_Priority" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.facet_count"	VALUE = "{ [ g.Module_Feature_FCT_UT ].FacetList_Load_All( l.facets ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ l.facet_count }">
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
		"facet_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:code ) }">",
		"disp_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:name ) }">",
		"module":
		{
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.facet:module ) }">
		},
		"priority":		<MvEVAL EXPR = "{ int( l.facet:priority ) }">
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
	</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_FacetList_Update_Priority" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.module_count"	VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Module_Codes, l.module_codes ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Facet_Codes, l.facet_codes ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Priorities, l.priorities ) }">

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.module_code" ARRAY = "l.module_codes" COUNT = "{ l.module_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].FacetRules_Load_FacetOrDefault( l.module_code, l.facet_codes[ l.pos ], l.facetrules ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.facetrules:priority" VALUE = "{ l.priorities[ l.pos ] }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].FacetRules_Insert( l.facetrules ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].FacetRules_Update( l.facetrules ) }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-FCT-JSN-00002', 'Facet rules priority for module \'' $ l.mod_code $ '\' facet \'' $ l.facet_code $ '\' updated' ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "CategoryFacetRulesList_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data EQ 'module_name' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:module:name ) }">				<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.right:module:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-module_name' }">	<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:module:name ) }">				<MvASSIGN NAME = "l.right_data" VALUE = "{ 'x' $ toupper( l.left:module:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'facet_code' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:code ) }">						<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:code ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-facet_code' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:code ) }">					<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:code ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'facet_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:name ) }">						<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-facet_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:name ) }">					<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'priority' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.left:facetrules:priority }">						<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.right:facetrules:priority }">
	<MvELSEIF EXPR = "{ l.data EQ '-priority' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.right:facetrules:priority }">						<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.left:facetrules:priority }">
	<MvELSEIF EXPR = "{ l.data EQ 'handle' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:handle ) }">					<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:handle ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-handle' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:handle ) }">					<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:handle ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'disp_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:disp_name ) }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:disp_name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-disp_name' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:disp_name ) }">	<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:disp_name ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'type' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:type ) }">			<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:type ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-type' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ 'x' $ toupper( l.right:facetrules:type ) }">			<MvASSIGN NAME = "l.right_data"	VALUE = "{ 'x' $ toupper( l.left:facetrules:type ) }">
	</MvIF>

	<MvIF EXPR = "{ l.left_data LT l.right_data }">							<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left_data GT l.right_data }">						<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Break ties using module code then facet code.  priority tiebreaking is reversed, to match the
	| runtime logic.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ( l.data EQ 'priority' ) OR ( ( l.data NE '-priority' ) AND ( substring_var( l.data, 1, 1 ) EQ '-' ) ) }">
		<MvIF EXPR = "{ 'x' $ toupper( l.left:module:code ) LT 'x' $ toupper( l.right:module:code ) }">		<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:module:code ) GT 'x' $ toupper( l.right:module:code ) }">	<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:code ) LT 'x' $ toupper( l.right:code ) }">				<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:code ) GT 'x' $ toupper( l.right:code ) }">				<MvFUNCTIONRETURN VALUE = -1>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ 'x' $ toupper( l.left:module:code ) LT 'x' $ toupper( l.right:module:code ) }">		<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:module:code ) GT 'x' $ toupper( l.right:module:code ) }">	<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:code ) LT 'x' $ toupper( l.right:code ) }">				<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:code ) GT 'x' $ toupper( l.right:code ) }">				<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryFacetRulesList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"		VALUE = "">
	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.offset"					VALUE = 0>
	<MvASSIGN NAME = "l.count"					VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'module_name',	'l.facet:module:name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'facet_code',	'l.facet:code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'facet_name',	'l.facet:name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_INTEGER(	l.available_filters, 'priority',	'l.facet:facetrules:priority' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'handle',		'l.facet:handle' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'disp_name',	'l.facet:facetrules:disp_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'type',		'l.facet:facetrules:type' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text_Array(	'o', 'FacetModule_List',	l.facet_modules, l.facet_module_count )	OR
					NOT [ g.Module_JSON ].JSON_Input_Filter(		'o', 'Filter',				l.filter )								OR
					NOT [ g.Module_JSON ].JSON_Input_Text(			'o', 'Sort',				l.sort )								OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(		'o', 'Offset',				l.offset )								OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(		'o', 'Count',				l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_count"					VALUE = "{ [ g.Module_Feature_FCT_UT ].FacetList_Load_Category( l.category, l.facets ) }">
	<MvASSIGN NAME = "l.null"							VALUE = "{ miva_array_sort( l.facets, 'CategoryFacetRulesList_Sort_Callback', l.sort ) }">
	<MvASSIGN NAME = "l.search_expression"				VALUE = "1 EQ 1">

	<MvIF EXPR = "{ l.facet_module_count }">
		<MvASSIGN NAME = "l.search_expression"			VALUE = "{ l.search_expression $ ' AND ( ' }">
		<MvASSIGN NAME = "l.search_module_pos"			VALUE = 0>

		<MvFOREACH ITERATOR = "l.facet_module" ARRAY = "l.facet_modules" INDEX = "l.pos" COUNT = "{ l.facet_module_count }">
			<MvIF EXPR = "{ l.pos GT 1 }">
				<MvASSIGN NAME = "l.search_expression"	VALUE = "{ l.search_expression $ ' OR ' }">
			</MvIF>

			<MvASSIGNARRAY NAME = "l.search_modules"	VALUE = "{ l.facet_module }">
				<MvDIMENSION INDEX = "{ ++l.search_module_pos }">
			</MvASSIGNARRAY>

			<MvASSIGN NAME = "l.search_expression"		VALUE = "{ l.search_expression $ '( \'x\' $ toupper( l.facet:module:code ) ) EQ ( \'x\' $ toupper( l.search_modules[' $ l.search_module_pos $ '] ) )' }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.search_expression"			VALUE = "{ l.search_expression $ ' )' }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">

	<MvASSIGN NAME = "l.total_count"					VALUE = 0>
	<MvASSIGN NAME = "l.output_count"					VALUE = 0>
	<MvASSIGN NAME = "l.skip"							VALUE = "{ l.offset }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
			<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.filtered_array" COUNT = "{ miva_array_filter_ref( l.facets, 1, l.facet, l.search_expression, l.filtered_array ) }">
				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">

				<MvIF EXPR = "{ l.skip }">
					<MvASSIGN NAME = "l.skip"			VALUE = "{ l.skip - 1 }">
				<MvELSEIF EXPR = "{ ( l.output_count LT l.count ) OR ( l.count EQ 0 ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
					"module":
					{
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.facet:module ) }">
					},
					"cat_id":		<MvEVAL EXPR = "{ int( l.category:id ) }">,
					"mod_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:module:code ) }">",
					"facet_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:code ) }">",
					"facet_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:name ) }">",
					"priority":		<MvEVAL EXPR = "{ int( l.facet:facetrules:priority ) }">,
					"handle":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:handle ) }">",
					"disp_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:facetrules:disp_name ) }">",
					"allowed_types":
					{
						<MvFOREACH INDEX = "l.type_pos" ITERATOR = "l.allowed_type" ARRAY = "l.allowed_types" COUNT = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.facet:allowed_types, ',', l.allowed_types ) }">
							<MvIF EXPR = "{ l.type_pos GT 1 }">
								,
							</MvIF>

							"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.allowed_type ) }">": true
						</MvFOREACH>
					},
					"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:facetrules:type ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>
			</MvFOREACH>
		],
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">
	}

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryFacetRules_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Category_ID"			VALUE = "{ int( g.Category_ID ) }">
	<MvASSIGN NAME = "g.Module_Code" 			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Module_Code ) }">
	<MvASSIGN NAME = "g.Facet_Code" 			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Facet_Code ) }">
	<MvASSIGN NAME = "g.Priority" 				VALUE = "{ int( g.Priority ) }">
	<MvASSIGN NAME = "g.Handling"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Handling ) }">
	<MvASSIGN NAME = "g.Display_Name" 			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Display_Name ) }">
	<MvASSIGN NAME = "g.Type" 					VALUE = "{ trim( g.Type ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( g.Category_ID, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-FCT-JSN-00005', 'Category not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].CategoryFacetRules_Load_FacetOrDefault( g.Category_ID, g.Module_Code, g.Facet_Code, l.categoryfacetrules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.Handling, 'show,hide,disable' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Handling', 'Please specify a valid handling' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.Type, ',radio,checkbox,select,rangeslider,nested' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Type', 'Please specify a valid type' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.categoryfacetrules:cat_id"		VALUE = "{ l.category:id }">
	<MvASSIGN NAME = "l.categoryfacetrules:mod_code" 	VALUE = "{ g.Module_Code }">
	<MvASSIGN NAME = "l.categoryfacetrules:facet_code" 	VALUE = "{ g.Facet_Code }">
	<MvASSIGN NAME = "l.categoryfacetrules:priority" 	VALUE = "{ g.Priority }">
	<MvASSIGN NAME = "l.categoryfacetrules:handle"		VALUE = "{ g.Handling }">
	<MvASSIGN NAME = "l.categoryfacetrules:disp_name" 	VALUE = "{ g.Display_Name }">
	<MvASSIGN NAME = "l.categoryfacetrules:type"	 	VALUE = "{ g.Type }">

	<MvIF EXPR = "{ [ g.Module_Feature_FCT_DB ].CategoryFacetRules_Insert( l.categoryfacetrules ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-FCT-JSN-00006', 'Category facet rules for category \'' $ l.category:code $ '\' module \'' $ l.facetrules:mod_code $ '\' facet \'' $ l.facetrules:facet_code $ '\' inserted' ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].CategoryFacetRules_Update( l.categoryfacetrules ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-FCT-JSN-00007', 'Category facet rules for category \'' $ l.category:code $ '\' module \'' $ l.facetrules:mod_code $ '\' facet \'' $ l.facetrules:facet_code $ '\' updated' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryFacetRulesList_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.cat_count"	VALUE = "{ [ g.Module_JSON ].JSON_Array_Integer( g.Category_IDs, l.cat_ids ) }">
	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Module_Codes, l.mod_codes ) }">
	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Facet_Codes, l.facet_codes ) }">

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.cat_id" ARRAY = "l.cat_ids" COUNT = "{ l.cat_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].CategoryFacetRules_Delete( l.cat_id, l.mod_codes[ l.pos ], l.facet_codes[ l.pos ] ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-FCT-JSN-00008', 'Category facet rules for category ' $ l.cat_id $ ' module \'' $ l.mod_code $ '\' facet \'' $ l.facet_code $ '\' deleted' ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryFacetList_Load_Priority" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Category_ID"	VALUE = "{ int( g.Category_ID ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( g.Category_ID, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-FCT-JSN-00009', 'Category not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.facet_count"	VALUE = "{ [ g.Module_Feature_FCT_UT ].FacetList_Load_Category( l.category, l.facets ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
	<MvFOREACH ITERATOR = "l.facet" ARRAY = "l.facets" COUNT = "{ l.facet_count }">
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
		"facet_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:code ) }">",
		"disp_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.facet:name ) }">",
		"module":
		{
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.facet:module ) }">
		},
		"priority":		<MvEVAL EXPR = "{ int( l.facet:priority ) }">
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
	</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryFacetList_Update_Priority" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Category_ID"	VALUE = "{ int( g.Category_ID ) }">
	<MvASSIGN NAME = "l.module_count"	VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Module_Codes, l.module_codes ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Facet_Codes, l.facet_codes ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_JSON ].JSON_Array_String( g.Priorities, l.priorities ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( g.Category_ID, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-FCT-JSN-00010', 'Category not found' ) }">
	</MvIF>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.module_code" ARRAY = "l.module_codes" COUNT = "{ l.module_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].CategoryFacetRules_Load_FacetOrDefault( l.category:id, l.module_code, l.facet_codes[ l.pos ], l.categoryfacetrules ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.categoryfacetrules:priority" VALUE = "{ l.priorities[ l.pos ] }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].CategoryFacetRules_Insert( l.categoryfacetrules ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_FCT_DB ].CategoryFacetRules_Update( l.categoryfacetrules ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-FCT-JSN-00011', 'Category facet rules priority for category \'' $ l.cateogry:code $ '\' module \'' $ l.mod_code $ '\' facet \'' $ l.facet_code $ '\' updated' ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_FacetCategoryRulesList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'FACT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"  VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'm.name',			'module_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cfr.mod_code',	'rules_mod_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cfr.facet_code',	'rules_facet_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cfr.priority',	'rules_priority' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cfr.handle',		'rules_handle' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cfr.disp_name',	'rules_disp_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cfr.type',		'rules_type' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.facet_count"	VALUE = "{ [ g.Feature_Filename_FCT_UT ].FacetList_Load_All_LowLevel( l.facets ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'cfr.mod_code		AS rules_mod_code,
																				 cfr.facet_code		AS rules_facet_code,
																				 cfr.handle			AS rules_handle,
																				 cfr.disp_name		AS rules_disp_name,
																				 cfr.type			AS rules_type,
																				 cfr.priority		AS rules_priority,
																				 m.id				AS module_id,
																				 m.code				AS module_code,
																				 m.name				AS module_name,
																				 m.provider			AS module_provider,
																				 m.api_ver			AS module_api_ver,
																				 m.version			AS module_version,
																				 m.module			AS module_module,
																				 m.refcount			AS module_refcount,
																				 m.active			AS module_active,
																				 cat.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id',		'page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'parent_cat.code',	'parent_category' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CategoryFacetRules', 'cfr' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, 'Modules', 'm' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'm.code	= cfr.mod_code	AND
																				cat.id	= cfr.cat_id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions',	'pbv',			'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'Categories',			'parent_cat', 	'cat.parent_id = parent_cat.id',	'' ) }">

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Filters() $ ',' $ l.available_filters }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_OrderBy() $ ',module_name:m.name,rules_mod_code:cfr.mod_code,rules_facet_code:cfr.facet_code,rules_priority:cfr.priority,rules_handle:cfr.handle,rules_disp_name:cfr.disp_name,rules_type:cfr.type' }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Category_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cat.disp_order;cfr.mod_code;cfr.facet_code', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Categories', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-FCT-JSN-00012', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.category_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.category_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Category_Read( l.category, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.category_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_OnDemandColumns( l.category, l.ondemandcolumns ) }">,
				"parent_category":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.parent_category ) }">",
				"assigned":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Categories.d.assigned ) }">,
				"facetrules":
				{
					"module":
					{
						"id":		<MvEVAL EXPR = "{ int( Categories.d.module_id ) }">,
						"code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.module_code ) }">",
						"name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.module_name ) }">",
						"provider":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.module_provider ) }">",
						"api_ver":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.module_api_ver ) }">",
						"version":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.module_version ) }">",
						"module":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.module_module ) }">",
						"refcount":	<MvEVAL EXPR = "{ int( Categories.d.module_refcount ) }">,
						"active":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Categories.d.module_active ) }">
					},
					"cat_id":		<MvEVAL EXPR = "{ int( Categories.d.id ) }">,
					"mod_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.rules_mod_code ) }">",
					"facet_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.rules_facet_code ) }">",
					"priority":		<MvEVAL EXPR = "{ int( Categories.d.rules_priority ) }">,
					"handle":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.rules_handle ) }">",
					"disp_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.rules_disp_name ) }">",
					"allowed_types":
					{
						<MvIF EXPR = "{ miva_array_search( l.facets, 1, l.facet, 'l.facet:module:code EQ Categories.d.rules_mod_code AND l.facet:code EQ Categories.d.rules_facet_code' ) }">
							<MvFOREACH INDEX = "l.type_pos" ITERATOR = "l.allowed_type" ARRAY = "l.allowed_types" COUNT = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.facet:allowed_types, ',', l.allowed_types ) }">
								<MvIF EXPR = "{ l.type_pos GT 1 }">
									,
								</MvIF>

								"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.allowed_type ) }">": true
							</MvFOREACH>
						</MvIF>
					},
					"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.rules_type ) }">"
				}

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_CustomFields_With_Query( l.search_query, l.customfield_state, Categories.d.id, 'Categories' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvINCLUDE FILE = "json/mivascript.mv">

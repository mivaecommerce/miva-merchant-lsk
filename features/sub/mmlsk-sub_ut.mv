<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-SUB-UTL-
| Next Error Code: 45
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductSubscriptionTerm_Generate_Description" PARAMETERS = "productsubscriptionterm var, productsubscriptiontermdates var, productsubscriptiontermdate_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.productsubscriptionterm:term EQ 0 }">								<MvASSIGN NAME = "l.term" VALUE = "">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n' }">					<MvASSIGN NAME = "l.term" VALUE = "{ ' for a total of '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'order',	'orders' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n_months' }">			<MvASSIGN NAME = "l.term" VALUE = "{ ' for a total of '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'order',	'orders' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'daily' }">				<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term, 'day',		'days' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'weekly' }">				<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'week',		'weeks' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'biweekly' }">			<MvASSIGN NAME = "l.term" VALUE = "{ ' for a total of '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'order',	'orders' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'monthly' }">			<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'month',	'months' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'quarterly' }">			<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'quarter',	'quarters' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'semiannually' }">		<MvASSIGN NAME = "l.term" VALUE = "{ ' for a total of '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'order',	'orders' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'annually' }">			<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'year',		'years' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'fixedmonthly' }">		<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'month',	'months' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'fixedweekly' }">		<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'week',		'weeks' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">				<MvASSIGN NAME = "l.term" VALUE = "{ ' for the next '	$ l.productsubscriptionterm:term $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:term,	'order',	'orders' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.value"			VALUE = "N/A">

	<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n' }">						<MvASSIGN NAME = "l.value" VALUE = "{ 'Reorder every ' $ l.productsubscriptionterm:n $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:n, 'day',		'days' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n_months' }">			<MvASSIGN NAME = "l.value" VALUE = "{ 'Reorder every ' $ l.productsubscriptionterm:n $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.productsubscriptionterm:n, 'month',	'months' ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'daily' }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every day">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'weekly' }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every week">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'biweekly' }">			<MvASSIGN NAME = "l.value" VALUE = "Reorder bi-weekly">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'monthly' }">			<MvASSIGN NAME = "l.value" VALUE = "Reorder every month">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'quarterly' }">			<MvASSIGN NAME = "l.value" VALUE = "Reorder quarterly">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'semiannually' }">		<MvASSIGN NAME = "l.value" VALUE = "Reorder semi-annually">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'annually' }">			<MvASSIGN NAME = "l.value" VALUE = "Reorder annually">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'fixedweekly' }">
		<MvIF EXPR = "{ l.productsubscriptionterm:fixed_dow EQ 1 }">					<MvASSIGN NAME = "l.value" VALUE = "Reorder every Sunday">
		<MvELSEIF EXPR = "{ l.productsubscriptionterm:fixed_dow EQ 2 }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every Monday">
		<MvELSEIF EXPR = "{ l.productsubscriptionterm:fixed_dow EQ 3 }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every Tuesday">
		<MvELSEIF EXPR = "{ l.productsubscriptionterm:fixed_dow EQ 4 }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every Wednesday">
		<MvELSEIF EXPR = "{ l.productsubscriptionterm:fixed_dow EQ 5 }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every Thursday">
		<MvELSEIF EXPR = "{ l.productsubscriptionterm:fixed_dow EQ 6 }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every Friday">
		<MvELSEIF EXPR = "{ l.productsubscriptionterm:fixed_dow EQ 7 }">				<MvASSIGN NAME = "l.value" VALUE = "Reorder every Saturday">
		</MvIF>
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'fixedmonthly' }">		<MvASSIGN NAME = "l.value" VALUE = "{ 'Reorder on the ' $ [ g.Module_Library_Utilities ].OrdinalNumber( l.productsubscriptionterm:fixed_dom ) $ ' day of every month' }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">
		<MvASSIGN NAME = "l.value"		VALUE = "Reorder on the ">

		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.productsubscriptiontermdate" ARRAY = "l.productsubscriptiontermdates" COUNT = "{ l.productsubscriptiontermdate_count }">
			<MvIF EXPR = "{ l.pos GT 1 }">
				<MvIF EXPR = "{ l.pos EQ l.productsubscriptiontermdate_count }">		<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ ', and the ' }">
				<MvELSE>																<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ ', the ' }">
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.value"	VALUE = "{ l.value $ [ g.Module_Library_Utilities ].OrdinalNumber( l.productsubscriptiontermdate:term_dom ) $ ' of ' }">

			<MvIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 1 }">				<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'January' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 2 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'February' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 3 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'March' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 4 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'April' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 5 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'May' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 6 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'June' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 7 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'July' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 8 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'August' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 9 }">			<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'September' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 10 }">		<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'October' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 11 }">		<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'November' }">
			<MvELSEIF EXPR = "{ l.productsubscriptiontermdate:term_mon EQ 12 }">		<MvASSIGN NAME = "l.value" VALUE = "{ l.value $ 'December' }">
			</MvIF>
		</MvFOREACH>

		<MvASSIGN NAME = "l.value"		VALUE = "{ l.value $ ' every year' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.value $ l.term }">
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_CalculateNextDate" PARAMETERS = "subscription var, productsubscriptionterm var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.last_date_year"				VALUE = "{ time_t_year( l.subscription:lastdate, g.Merchant_Local_Timezone ) }">
	<MvASSIGN NAME = "l.last_date_month"			VALUE = "{ time_t_month( l.subscription:lastdate, g.Merchant_Local_Timezone ) }">
	<MvASSIGN NAME = "l.last_date_dayofmonth"		VALUE = "{ time_t_dayofmonth( l.subscription:lastdate, g.Merchant_Local_Timezone ) }">

	<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n' 		OR 
					l.productsubscriptionterm:frequency EQ 'daily' 	OR
					l.productsubscriptionterm:frequency EQ 'weekly' OR 
					l.productsubscriptionterm:frequency EQ 'biweekly' }">
		<MvASSIGN NAME = "l.days" 		VALUE = "{ SubscriptionTerm_Get_Days( l.productsubscriptionterm ) }">

		<MvASSIGN NAME = "l.next_t"		VALUE = "{ mktime_t( l.last_date_year, l.last_date_month, l.last_date_dayofmonth, 0, 0, 0, g.Merchant_Local_Timezone ) + ( ( l.days + 1 ) * 86400 ) - 43200 }">
		<MvASSIGN NAME = "l.next_year"	VALUE = "{ time_t_year( l.next_t, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.next_month"	VALUE = "{ time_t_month( l.next_t, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.next_day"	VALUE = "{ time_t_dayofmonth( l.next_t, g.Merchant_Local_Timezone ) }">

		<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.next_year, l.next_month, l.next_day, 0, 0, 0, g.Merchant_Local_Timezone ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n_months' }">
		<MvASSIGN NAME = "l.month"					VALUE = "{ l.last_date_month + ( l.productsubscriptionterm:n MOD 12 ) }">
		<MvASSIGN NAME = "l.year"					VALUE = "{ l.last_date_year + floor( l.productsubscriptionterm:n / 12 ) }">	
		
		<MvIF EXPR = "{ l.month GT 12 }">
			<MvASSIGN NAME = "l.month"				VALUE = "{ l.month - 12 }">
			<MvASSIGN NAME = "l.year"				VALUE = "{ l.year + 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.days_in_month"			VALUE = "{ [ g.Module_Library_Utilities ].TimeT_DaysInMonth( l.year, l.month ) }">

		<MvIF EXPR = "{ l.last_date_dayofmonth GT l.days_in_month }">	<MvASSIGN NAME = "l.day" VALUE = "{ l.days_in_month }">
		<MvELSE>														<MvASSIGN NAME = "l.day" VALUE = "{ l.last_date_dayofmonth }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.year, l.month, l.day, 0, 0, 0, g.Merchant_Local_Timezone ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'monthly' }">
		<MvIF EXPR = "{ l.last_date_month LT 12 }">
			<MvASSIGN NAME = "l.month"				VALUE = "{ l.last_date_month + 1 }">
			<MvASSIGN NAME = "l.year"				VALUE = "{ l.last_date_year }">
		<MvELSE>
			<MvASSIGN NAME = "l.month"				VALUE = "{ 1 }">
			<MvASSIGN NAME = "l.year"				VALUE = "{ l.last_date_year + 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.days_in_month"			VALUE = "{ [ g.Module_Library_Utilities ].TimeT_DaysInMonth( l.year, l.month ) }">

		<MvIF EXPR = "{ l.last_date_dayofmonth GT l.days_in_month }">							<MvASSIGN NAME = "l.days" VALUE = "{ l.days_in_month }">
		<MvELSE>																				<MvASSIGN NAME = "l.days" VALUE = "{ l.last_date_dayofmonth }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year, l.last_date_month + 1, l.days, 0, 0, 0, g.Merchant_Local_Timezone ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'quarterly' }">
		<MvCOMMENT>
		|
		| Reorder on January 1st, April 1st, July 1st, and August 1st
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.last_date_month LT 4 }">												<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year, 4, 1, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		<MvELSEIF EXPR = "{ l.last_date_month LT 7 }">											<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year, 7, 1, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		<MvELSEIF EXPR = "{ l.last_date_month LT 10 }">											<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year, 10, 1, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		<MvELSE>																				<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year + 1, 1, 1, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'semiannually' }">
		<MvCOMMENT>
		|
		| Reorder on January 1st and July 1st
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.last_date_month LT 7 }">												<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year, 7, 1, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		<MvELSE>																				<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year + 1, 1, 1, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'annually' }">					<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year + 1, l.last_date_month, l.last_date_dayofmonth, 0, 0, 0, g.Merchant_Local_Timezone ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'fixedweekly' }">
		<MvASSIGN NAME = "l.last_date_dayofweek" VALUE = "{ time_t_dayofweek( l.subscription:lastdate, g.Merchant_Local_Timezone ) }">

		<MvIF EXPR = "{ l.last_date_dayofweek EQ l.productsubscriptionterm:fixed_dow }">
			<MvASSIGN NAME = "l.next_t"		VALUE = "{ mktime_t( l.last_date_year, l.last_date_month, l.last_date_dayofmonth, 0, 0, 0, g.Merchant_Local_Timezone ) + ( 8 * 86400 ) - 43200 }">
		<MvELSEIF EXPR = "{ l.productsubscriptionterm:fixed_dow GT l.last_date_dayofweek }">
			<MvASSIGN NAME = "l.next_t"		VALUE = "{ mktime_t( l.last_date_year, l.last_date_month, l.last_date_dayofmonth, 0, 0, 0, g.Merchant_Local_Timezone ) + ( ( l.productsubscriptionterm:fixed_dow - l.last_date_dayofweek + 1 ) * 86400 ) - 43200 }">
		<MvELSE>
			<MvASSIGN NAME = "l.next_t"		VALUE = "{ mktime_t( l.last_date_year, l.last_date_month, l.last_date_dayofmonth, 0, 0, 0, g.Merchant_Local_Timezone ) + ( ( ( l.productsubscriptionterm:fixed_dow + 7 ) - l.last_date_dayofweek + 1 ) * 86400 ) - 43200 }">
		</MvIF>
		
		<MvASSIGN NAME = "l.next_year"		VALUE = "{ time_t_year( l.next_t, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.next_month"		VALUE = "{ time_t_month( l.next_t, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.next_day"		VALUE = "{ time_t_dayofmonth( l.next_t, g.Merchant_Local_Timezone ) }">

		<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.next_year, l.next_month, l.next_day, 0, 0, 0, g.Merchant_Local_Timezone ) }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'fixedmonthly' }">
		<MvIF EXPR = "{ l.last_date_month LT 12 }">
			<MvASSIGN NAME = "l.month"		VALUE = "{ l.last_date_month + 1 }">
			<MvASSIGN NAME = "l.year"		VALUE = "{ l.last_date_year }">
		<MvELSE>
			<MvASSIGN NAME = "l.month"		VALUE = "{ 1 }">
			<MvASSIGN NAME = "l.year"		VALUE = "{ l.last_date_year + 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.days_in_month"	VALUE = "{ [ g.Module_Library_Utilities ].TimeT_DaysInMonth( l.year, l.month ) }">

		<MvIF EXPR = "{ l.productsubscriptionterm:fixed_dom GT l.days_in_month }">				<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.year, l.month, l.days_in_month, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		<MvELSE>																				<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.year, l.month, l.productsubscriptionterm:fixed_dom, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermDateList_Load_ProductSubscriptionTerm( l.productsubscriptionterm:id, l.productsubscriptiontermdates ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ miva_array_search( l.productsubscriptiontermdates, 1, l.date, '(
																								( l.date:term_mon EQ l.last_date_month ) AND
																								( l.date:term_dom GT l.last_date_dayofmonth )
																						   ) OR
																						   ( 
																						   		l.date:term_mon GT l.last_date_month
																						   )' ) }">
			<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year, l.date:term_mon, l.date:term_dom, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ mktime_t( l.last_date_year + 1, l.productsubscriptiontermdates[ 1 ]:term_mon, l.productsubscriptiontermdates[ 1 ]:term_dom, 0, 0, 0, g.Merchant_Local_Timezone ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionTerm_Get_Days" PARAMETERS = "term var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.term:frequency EQ 'n' }">				<MvFUNCTIONRETURN VALUE = "{ l.term:n }">
	<MvELSEIF EXPR = "{ l.term:frequency EQ 'daily' }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.term:frequency EQ 'weekly' }">	<MvFUNCTIONRETURN VALUE = 7>
	<MvELSEIF EXPR = "{ l.term:frequency EQ 'biweekly' }">	<MvFUNCTIONRETURN VALUE = 14>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionOptions_BuildAttributes" PARAMETERS = "subscriptionoptions var, subscriptionoption_count, attributes var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attributes"			VALUE = "">
	<MvASSIGN NAME = "l.attribute_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.subscriptionoption" ARRAY = "l.subscriptionoptions" COUNT = "{ l.subscriptionoption_count }">
		<MvASSIGN NAME = "l.attribute:template_code"	VALUE = "{ l.subscriptionoption:templ_code }">
		<MvASSIGN NAME = "l.attribute:code"				VALUE = "{ l.subscriptionoption:attr_code }">

		<MvIF EXPR = "{ ISNULL l.subscriptionoption:value }">	<MvASSIGN NAME = "l.attribute:value" VALUE = "{ l.subscriptionoption:attr_code }"> <MvCOMMENT> Checkbox attribute with blank value </MvCOMMENT>
		<MvELSE>												<MvASSIGN NAME = "l.attribute:value" VALUE = "{ l.subscriptionoption:value }">
		</MvIF>

		<MvASSIGN NAME = "l.attribute_count"			VALUE = "{ miva_array_insert( l.attributes, l.attribute, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.attribute_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_CreateBasket" PARAMETERS = "subscription var, basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.subscription:product_id, l.product ) OR
					NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.subscription:cust_id, l.customer ) OR
					NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( l.subscription:addr_id, l.shipping_address ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.subscription:custpc_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID( l.subscription:custpc_id, l.customer:id, l.customerpaymentcard ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.option_count"			VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription:id, l.options ) }">
	<MvASSIGN NAME = "l.attribute_count"		VALUE = "{ SubscriptionOptions_BuildAttributes( l.options, l.option_count, l.attributes ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.product, 0, l.attributes, l.attribute_count, l.basketoptions, l.basketoption_count, l.variant_id ) OR
					l.variant_id EQ -1 }">
		<MvASSIGN NAME = "l.variant_id"			VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Subscription_CreateBasket_LowLevel( l.customer, l.shipping_address, l.customerpaymentcard, l.product, l.basketoptions, l.basketoption_count, l.variant_id, l.attr_price_override, l.subscription:id, l.subscription:subterm_id, l.subscription:quantity, l.basket ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_CreateBasket_LowLevel" PARAMETERS = "customer var, shipping_address var, customerpaymentcard var, product var, basketoptions var, basketoption_count, variant_id, attr_price_override, subscrp_id, subterm_id, quantity, basket var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basket"						VALUE = "">
	<MvASSIGN NAME = "l.basket:cust_id"				VALUE = "{ l.customer:id }">
	<MvASSIGN NAME = "l.basket:order_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_proc"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:ship_id"				VALUE = 0>
	<MvASSIGN NAME = "l.basket:session_id"			VALUE = "{ MakeSessionID() }">
	<MvASSIGN NAME = "l.basket:lastupdate"			VALUE = "{ s.time_t }">

	<MvASSIGN NAME = "l.basket:ship_res" 			VALUE = "{ l.shipping_address:resdntl }">
	<MvASSIGN NAME = "l.basket:ship_fname"			VALUE = "{ l.shipping_address:fname }">
	<MvASSIGN NAME = "l.basket:ship_lname"			VALUE = "{ l.shipping_address:lname }">
	<MvASSIGN NAME = "l.basket:ship_email"			VALUE = "{ l.shipping_address:email }">
	<MvASSIGN NAME = "l.basket:ship_comp"			VALUE = "{ l.shipping_address:comp }">
	<MvASSIGN NAME = "l.basket:ship_phone"			VALUE = "{ l.shipping_address:phone }">
	<MvASSIGN NAME = "l.basket:ship_fax"			VALUE = "{ l.shipping_address:fax }">
	<MvASSIGN NAME = "l.basket:ship_addr1"			VALUE = "{ l.shipping_address:addr1 }">
	<MvASSIGN NAME = "l.basket:ship_addr2"			VALUE = "{ l.shipping_address:addr2 }">
	<MvASSIGN NAME = "l.basket:ship_city"			VALUE = "{ l.shipping_address:city }">
	<MvASSIGN NAME = "l.basket:ship_state"			VALUE = "{ l.shipping_address:state }">
	<MvASSIGN NAME = "l.basket:ship_zip"			VALUE = "{ l.shipping_address:zip }">
	<MvASSIGN NAME = "l.basket:ship_cntry"			VALUE = "{ l.shipping_address:cntry }">

	<MvASSIGN NAME = "l.basket:bill_email"			VALUE = "{ l.customer:bill_email }">
	<MvASSIGN NAME = "l.basket:bill_comp"			VALUE = "{ l.customer:bill_comp }">
	<MvASSIGN NAME = "l.basket:bill_phone"			VALUE = "{ l.customer:bill_phone }">
	<MvASSIGN NAME = "l.basket:bill_fax"			VALUE = "{ l.customer:bill_fax }">

	<MvIF EXPR = "{ l.customerpaymentcard:id }">
		<MvASSIGN NAME = "l.basket:bill_fname"		VALUE = "{ l.customerpaymentcard:fname }">
		<MvASSIGN NAME = "l.basket:bill_lname"		VALUE = "{ l.customerpaymentcard:lname }">
		<MvASSIGN NAME = "l.basket:bill_addr1"		VALUE = "{ l.customerpaymentcard:addr1 }">
		<MvASSIGN NAME = "l.basket:bill_addr2"		VALUE = "{ l.customerpaymentcard:addr2 }">
		<MvASSIGN NAME = "l.basket:bill_city"		VALUE = "{ l.customerpaymentcard:city }">
		<MvASSIGN NAME = "l.basket:bill_state"		VALUE = "{ l.customerpaymentcard:state }">
		<MvASSIGN NAME = "l.basket:bill_zip"		VALUE = "{ l.customerpaymentcard:zip }">
		<MvASSIGN NAME = "l.basket:bill_cntry"		VALUE = "{ l.customerpaymentcard:cntry }">
	<MvELSE>
		<MvASSIGN NAME = "l.basket:bill_fname"		VALUE = "{ l.customer:bill_fname }">
		<MvASSIGN NAME = "l.basket:bill_lname"		VALUE = "{ l.customer:bill_lname }">
		<MvASSIGN NAME = "l.basket:bill_addr1"		VALUE = "{ l.customer:bill_addr1 }">
		<MvASSIGN NAME = "l.basket:bill_addr2"		VALUE = "{ l.customer:bill_addr2 }">
		<MvASSIGN NAME = "l.basket:bill_city"		VALUE = "{ l.customer:bill_city }">
		<MvASSIGN NAME = "l.basket:bill_state"		VALUE = "{ l.customer:bill_state }">
		<MvASSIGN NAME = "l.basket:bill_zip"		VALUE = "{ l.customer:bill_zip }">
		<MvASSIGN NAME = "l.basket:bill_cntry"		VALUE = "{ l.customer:bill_cntry }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Insert( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Create a BasketItem for the subscription
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.basketitem:basket_id"	VALUE = "{ l.basket:basket_id }">
	<MvASSIGN NAME = "l.basketitem:product_id"	VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.basketitem:variant_id"	VALUE = "{ l.variant_id }">
	<MvASSIGN NAME = "l.basketitem:wish_id"		VALUE = 0>
	<MvASSIGN NAME = "l.basketitem:subscrp_id"	VALUE = "{ l.subscrp_id }">
	<MvASSIGN NAME = "l.basketitem:subterm_id"	VALUE = "{ l.subterm_id }">
	<MvASSIGN NAME = "l.basketitem:type"		VALUE = "product">
	<MvASSIGN NAME = "l.basketitem:code"		VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.basketitem:name"		VALUE = "{ l.product:name }">

	<MvASSIGN NAME = "l.part_count"				VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.product:id, l.variant_id, l.parts ) }">

	<MvIF EXPR = "{ l.variant_id EQ 0 AND l.part_count EQ 0 }">
		<MvASSIGN NAME = "l.basketitem:sku"		VALUE = "{ l.product:sku }">
	<MvELSEIF EXPR = "{ l.part_count NE 1 }">
		<MvASSIGN NAME = "l.basketitem:sku"		VALUE = "">
	<MvELSE>
		<MvREFERENCEARRAY NAME = "l.part"		VARIABLE = "l.parts">
			<MvDIMENSION INDEX = 1>
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.basketitem:sku"		VALUE = "{ l.part:sku }">
	</MvIF>

	<MvIF EXPR = "{ l.product:pgrpcount EQ 0 }">	<MvASSIGN NAME = "l.basketitem:base_price" VALUE = "{ l.product:price }">
	<MvELSE>										<MvASSIGN NAME = "l.basketitem:base_price" VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.product:price, l.product:cost ) }">
	</MvIF>

	<MvASSIGN NAME = "l.basketitem:retail"		VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.basketitem:price"		VALUE = "{ l.basketitem:base_price }">
	<MvASSIGN NAME = "l.basketitem:weight"		VALUE = "{ l.product:weight }">
	<MvASSIGN NAME = "l.basketitem:taxable"		VALUE = "{ l.product:taxable }">
	<MvASSIGN NAME = "l.basketitem:upsold"		VALUE = 0>
	<MvASSIGN NAME = "l.basketitem:quantity"	VALUE = "{ l.quantity }">

	<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketoptions" COUNT = "{ l.basketoption_count }">
		<MvIF EXPR = "{ l.attr_price_override }">
			<MvASSIGN NAME = "l.basketoption:retail"		VALUE = 0.00>
			<MvASSIGN NAME = "l.basketoption:base_price"	VALUE = 0.00>
			<MvASSIGN NAME = "l.basketoption:price"			VALUE = 0.00>
			<MvASSIGN NAME = "l.basketoption:weight"		VALUE = 0.00>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItemAndOptions_Insert( l.basketitem, l.basketoptions, l.basketoption_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionList_CreateBasket" PARAMETERS = "subscriptions var, subscription_count, basket var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.first_subscription" VARIABLE = "l.subscriptions">
		<MvDIMENSION INDEX = 1>
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ miva_array_search( l.subscriptions, 2, l.subscription, '( l.first_subscription:cust_id NE l.subscription:cust_id ) OR
																			( l.first_subscription:addr_id NE l.subscription:addr_id ) OR
																			( l.first_subscription:ship_id NE l.subscription:ship_id ) OR
																			( l.first_subscription:custpc_id NE l.subscription:custpc_id ) OR
																			( l.first_subscription:ship_data NE l.subscription:ship_data )' ) NE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00023', 'Subscriptions must have the same customer information' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.first_subscription:cust_id, l.customer ) OR
					NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( l.first_subscription:addr_id, l.shipping_address ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.first_subscription:custpc_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID( l.first_subscription:custpc_id, l.customer:id, l.customerpaymentcard ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.subscription:product_id, l.subscription:product ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.subscription:option_count"		VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription:id, l.subscription:options ) }">
		<MvASSIGN NAME = "l.subscription:attribute_count"	VALUE = "{ SubscriptionOptions_BuildAttributes( l.subscription:options, l.subscription:option_count, l.subscription:attributes ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.subscription:product, 0, l.subscription:attributes, l.subscription:attribute_count, l.subscription:basketoptions, l.subscription:basketoption_count, l.subscription:variant_id ) OR
						l.subscription:variant_id EQ -1 }">
			<MvASSIGN NAME = "l.subscription:variant_id"	VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.subscription:product, l.subscription:variant_id, l.subscription:attr_price_override ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ SubscriptionList_CreateBasket_LowLevel( l.customer, l.shipping_address, l.customerpaymentcard, l.subscriptions, l.subscription_count, l.basket ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionList_CreateBasket_LowLevel" PARAMETERS = "customer var, shipping_address var, customerpaymentcard var, subscriptions var, subscription_count, basket var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basket"						VALUE = "">
	<MvASSIGN NAME = "l.basket:cust_id"				VALUE = "{ l.customer:id }">
	<MvASSIGN NAME = "l.basket:order_id"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:order_proc"			VALUE = 0>
	<MvASSIGN NAME = "l.basket:ship_id"				VALUE = 0>
	<MvASSIGN NAME = "l.basket:session_id"			VALUE = "{ MakeSessionID() }">
	<MvASSIGN NAME = "l.basket:lastupdate"			VALUE = "{ s.time_t }">

	<MvASSIGN NAME = "l.basket:ship_res" 			VALUE = "{ l.shipping_address:resdntl }">
	<MvASSIGN NAME = "l.basket:ship_fname"			VALUE = "{ l.shipping_address:fname }">
	<MvASSIGN NAME = "l.basket:ship_lname"			VALUE = "{ l.shipping_address:lname }">
	<MvASSIGN NAME = "l.basket:ship_email"			VALUE = "{ l.shipping_address:email }">
	<MvASSIGN NAME = "l.basket:ship_comp"			VALUE = "{ l.shipping_address:comp }">
	<MvASSIGN NAME = "l.basket:ship_phone"			VALUE = "{ l.shipping_address:phone }">
	<MvASSIGN NAME = "l.basket:ship_fax"			VALUE = "{ l.shipping_address:fax }">
	<MvASSIGN NAME = "l.basket:ship_addr1"			VALUE = "{ l.shipping_address:addr1 }">
	<MvASSIGN NAME = "l.basket:ship_addr2"			VALUE = "{ l.shipping_address:addr2 }">
	<MvASSIGN NAME = "l.basket:ship_city"			VALUE = "{ l.shipping_address:city }">
	<MvASSIGN NAME = "l.basket:ship_state"			VALUE = "{ l.shipping_address:state }">
	<MvASSIGN NAME = "l.basket:ship_zip"			VALUE = "{ l.shipping_address:zip }">
	<MvASSIGN NAME = "l.basket:ship_cntry"			VALUE = "{ l.shipping_address:cntry }">

	<MvASSIGN NAME = "l.basket:bill_email"			VALUE = "{ l.customer:bill_email }">
	<MvASSIGN NAME = "l.basket:bill_comp"			VALUE = "{ l.customer:bill_comp }">
	<MvASSIGN NAME = "l.basket:bill_phone"			VALUE = "{ l.customer:bill_phone }">
	<MvASSIGN NAME = "l.basket:bill_fax"			VALUE = "{ l.customer:bill_fax }">

	<MvIF EXPR = "{ l.customerpaymentcard:id }">
		<MvASSIGN NAME = "l.basket:bill_fname"		VALUE = "{ l.customerpaymentcard:fname }">
		<MvASSIGN NAME = "l.basket:bill_lname"		VALUE = "{ l.customerpaymentcard:lname }">
		<MvASSIGN NAME = "l.basket:bill_addr1"		VALUE = "{ l.customerpaymentcard:addr1 }">
		<MvASSIGN NAME = "l.basket:bill_addr2"		VALUE = "{ l.customerpaymentcard:addr2 }">
		<MvASSIGN NAME = "l.basket:bill_city"		VALUE = "{ l.customerpaymentcard:city }">
		<MvASSIGN NAME = "l.basket:bill_state"		VALUE = "{ l.customerpaymentcard:state }">
		<MvASSIGN NAME = "l.basket:bill_zip"		VALUE = "{ l.customerpaymentcard:zip }">
		<MvASSIGN NAME = "l.basket:bill_cntry"		VALUE = "{ l.customerpaymentcard:cntry }">
	<MvELSE>
		<MvASSIGN NAME = "l.basket:bill_fname"		VALUE = "{ l.customer:bill_fname }">
		<MvASSIGN NAME = "l.basket:bill_lname"		VALUE = "{ l.customer:bill_lname }">
		<MvASSIGN NAME = "l.basket:bill_addr1"		VALUE = "{ l.customer:bill_addr1 }">
		<MvASSIGN NAME = "l.basket:bill_addr2"		VALUE = "{ l.customer:bill_addr2 }">
		<MvASSIGN NAME = "l.basket:bill_city"		VALUE = "{ l.customer:bill_city }">
		<MvASSIGN NAME = "l.basket:bill_state"		VALUE = "{ l.customer:bill_state }">
		<MvASSIGN NAME = "l.basket:bill_zip"		VALUE = "{ l.customer:bill_zip }">
		<MvASSIGN NAME = "l.basket:bill_cntry"		VALUE = "{ l.customer:bill_cntry }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_UT ].TaxExempt_Load_Customer( l.customer, l.basket:tax_exempt ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Insert( l.basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Create a BasketItem for each subscription
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
		<MvASSIGN NAME = "l.basketitem"							VALUE = "">
		<MvASSIGN NAME = "l.basketitem:basket_id"				VALUE = "{ l.basket:basket_id }">
		<MvASSIGN NAME = "l.basketitem:product_id"				VALUE = "{ l.subscription:product:id }">
		<MvASSIGN NAME = "l.basketitem:variant_id"				VALUE = "{ l.subscription:variant_id }">
		<MvASSIGN NAME = "l.basketitem:wish_id"					VALUE = 0>
		<MvASSIGN NAME = "l.basketitem:subscrp_id"				VALUE = "{ l.subscription:id }">
		<MvASSIGN NAME = "l.basketitem:subterm_id"				VALUE = "{ l.subscription:subterm_id }">
		<MvASSIGN NAME = "l.basketitem:type"					VALUE = "product">
		<MvASSIGN NAME = "l.basketitem:code"					VALUE = "{ l.subscription:product:code }">
		<MvASSIGN NAME = "l.basketitem:name"					VALUE = "{ l.subscription:product:name }">
		
		<MvASSIGN NAME = "l.part_count"							VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.subscription:product:id, l.subscription:variant_id, l.parts ) }">

		<MvIF EXPR = "{ l.subscription:variant_id EQ 0 AND l.part_count EQ 0 }">
			<MvASSIGN NAME = "l.basketitem:sku"					VALUE = "{ l.subscription:product:sku }">
		<MvELSEIF EXPR = "{ l.part_count NE 1 }">
			<MvASSIGN NAME = "l.basketitem:sku"					VALUE = "">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.part"					VARIABLE = "l.parts">
				<MvDIMENSION INDEX = 1>
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.basketitem:sku"					VALUE = "{ l.part:sku }">
		</MvIF>

		<MvASSIGN NAME = "l.basketitem:price"					VALUE = "{ l.subscription:product:price }">
		<MvASSIGN NAME = "l.basketitem:weight"					VALUE = "{ l.subscription:product:weight }">
		<MvASSIGN NAME = "l.basketitem:taxable"					VALUE = "{ l.subscription:product:taxable }">
		<MvASSIGN NAME = "l.basketitem:upsold"					VALUE = 0>
		<MvASSIGN NAME = "l.basketitem:quantity"				VALUE = "{ l.subscription:quantity }">
 
		<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.subscription:basketoptions" COUNT = "{ l.subscription:basketoption_count }">
			<MvIF EXPR = "{ l.subscription:attr_price_override }">
				<MvASSIGN NAME = "l.basketoption:retail"		VALUE = 0.00>
				<MvASSIGN NAME = "l.basketoption:base_price"	VALUE = 0.00>
				<MvASSIGN NAME = "l.basketoption:price"			VALUE = 0.00>
				<MvASSIGN NAME = "l.basketoption:weight"		VALUE = 0.00>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItemAndOptions_Insert( l.basketitem, l.subscription:basketoptions, l.subscription:basketoption_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_Recalculate_Totals" PARAMETERS = "subscription var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( l.subscription:addr_id, l.customeraddress ) OR
					NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID_Cached( l.subscription:subterm_id, l.productsubscriptionterm ) OR
					NOT [ g.Module_Library_DB ].Product_Load_ID_Cached( l.subscription:product_id, l.product ) OR
					NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID_Cached( l.subscription:cust_id, l.customer ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.subscription:custpc_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID_Cached( l.subscription:custpc_id, l.customer:id, l.paymentcard ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.option_count"		VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription:id, l.options ) }">
	<MvASSIGN NAME = "l.attribute_count"	VALUE = "{ SubscriptionOptions_BuildAttributes( l.options, l.option_count, l.attributes ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.product, 0, l.attributes, l.attribute_count, l.basketoptions, l.basketoption_count, l.variant_id ) OR
					l.variant_id EQ -1 }">
		<MvASSIGN NAME = "l.variant_id"		VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.original_basket"	VALUE = "{ g.Basket }">
	<MvASSIGN NAME = "g.Basket"				VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT Subscription_CreateBasket_LowLevel( l.customer, l.customeraddress, l.paymentcard, l.product, l.basketoptions, l.basketoption_count, l.variant_id, l.attr_price_override, l.subscription:id, l.productsubscriptionterm:id, l.subscription:quantity, g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSE>
		<MvIF EXPR = "{ l.subscription:ship_id }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( l.subscription:ship_id, l.shipping_module ) OR
							NOT [ g.Module_Library_DB ].StoreModule_Load_Cached( l.shipping_module:id, 'shipping', l.storemodule ) OR
							NOT l.shipping_module:active }">
				<MvASSIGN NAME = "l.null"	VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
				<MvASSIGN NAME = "g.Basket"	VALUE = "{ l.original_basket }">

				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.null"			VALUE = "{ Subscription_Calculate_Basket( l.shipping_module, l.subscription:ship_data, l.subscription:tax, l.subscription:shipping, l.subscription:subtotal, l.subscription:total ) }">
		<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Library_DB ].Basket_Reset( g.Basket ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Basket"				VALUE = "{ l.original_basket }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_SUB_DB ].Subscription_Update_Totals( l.subscription ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_Calculate_Basket" PARAMETERS = "module var, module_data, tax var, shipping var, subtotal var, total var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tax"				VALUE = 0>
	<MvASSIGN NAME = "l.shipping"			VALUE = 0>
	<MvASSIGN NAME = "l.subtotal"			VALUE = 0>
	<MvASSIGN NAME = "l.total"				VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Basket( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Subscription_Calculate_Basket_Shipping( l.module, l.module_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Root $ g.Store:tax_mod:module ].TaxModule_Calculate_Basket( g.Store:tax_mod ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketcharge" ARRAY = "l.basketcharges" COUNT = "{ [ g.Module_Library_DB ].BasketChargeList_Load_Basket( g.Basket:basket_id, l.basketcharges ) }">
		<MvASSIGN NAME = "l.total"			VALUE = "{ l.total + ( l.basketcharge:amount ROUND 2 ) }">

		<MvIF EXPR = "{ l.basketcharge:type EQ 'SHIPPING' }">	<MvASSIGN NAME = "l.shipping"	VALUE = "{ l.basketcharge:amount ROUND 2 }">
		<MvELSEIF EXPR = "{ l.basketcharge:type EQ 'TAX' }">	<MvASSIGN NAME = "l.tax"		VALUE = "{ l.basketcharge:amount ROUND 2 }">
		<MvELSE>												<MvASSIGN NAME = "l.subtotal"	VALUE = "{ l.subtotal + ( l.basketcharge:amount ROUND 2 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ [ g.Module_Library_DB ].BasketItemList_Load_Basket( g.Basket:basket_id, l.basketitems ) }">
		<MvASSIGN NAME = "l.total"			VALUE = "{ l.total + ( l.basketitem:price * l.basketitem:quantity ) }">
		<MvASSIGN NAME = "l.subtotal"		VALUE = "{ l.subtotal + ( l.basketitem:price * l.basketitem:quantity ) }">

		<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketitem:options" COUNT = "{ [ g.Module_Library_DB ].BasketOptionList_Load_Line( l.basketitem:line_id, l.basketitem:options ) }">
			<MvASSIGN NAME = "l.total"		VALUE = "{ l.total + ( l.basketoption:price * l.basketitem:quantity ) }">
			<MvASSIGN NAME = "l.subtotal"	VALUE = "{ l.subtotal + ( l.basketoption:price * l.basketitem:quantity ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.total"				VALUE = "{ l.total ROUND 2 }">
	<MvASSIGN NAME = "l.subtotal"			VALUE = "{ l.subtotal ROUND 2 }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_Calculate_Basket_Shipping" PARAMETERS = "module var, module_data" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module:id }">
		<MvCOMMENT>
		|
		| Calculate shipping
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ShippingModule_Calculate_Basket( l.module, l.module_data ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "g.Basket:ship_id"		VALUE = "{ l.module:id }">
		<MvASSIGN NAME = "g.Basket:ship_data"	VALUE = "{ l.module_data }">

		<MvCOMMENT>
		|
		| Apply shipping method rate adjustments
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.basketcharge_count"	VALUE = "{ [ g.Module_Library_DB ].BasketChargeList_Load_Type( g.Basket:basket_id, 'SHIPPING', l.basketcharges ) }">

		<MvIF EXPR = "{ l.basketcharge_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ShippingMethodRules_Load_MethodOrDefault_Cached( l.module:code, l.module_data, l.shippingmethodrules ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_UT ].ShippingMethod_ApplyAdjustments( l.shippingmethodrules, l.basketcharges, l.basketcharge_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvCOMMENT>
		|
		| If a method was not specified, first make sure shipping is not required, then apply the fallback
		| method.  If shipping is not required for free orders, do not insert any shipping or handling
		| charges, as the UI will be skipping the OSEL and OPAY screens, and if the order total is not
		| 0 during the AUTH action an error will be generated.
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.total" VALUE = "{ [ g.Module_Library_DB ].Basket_Total( g.Basket:basket_id ) }">

		<MvIF EXPR = "{ ( l.total GT 0 ) AND g.Store:req_ship }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00019', 'Invalid shipping method' ) }">
		<MvELSEIF EXPR = "{ ( l.total EQ 0 ) AND ( NOT g.Store:req_frship ) }">	<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_UT ].FallbackShippingMethod_ApplyToBasket() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_UT ].HandlingCharge_CalculateAndApplyToBasket() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Shipping( g.Basket, l.module, l.module_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Update_Shipping( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionList_Calculate_Basket_Shipping" PARAMETERS = "initial_ship_id, initial_ship_data, subscriptions var, subscription_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ship_module"			VALUE = "">
	<MvASSIGN NAME = "l.ship_data"				VALUE = "">

	<MvCOMMENT>
	|
	| Use specified shipping method if valid for the basket
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ShippingRules_Load( l.shippingrules ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( l.initial_ship_id NE 0 ) }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( l.initial_ship_id, l.ship_module ) AND l.ship_module:active }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].StoreModule_Load( l.ship_module:id, 'shipping', l.storemodule ) }">
				<MvIF EXPR = "{ [ g.Module_Feature_SHP_UT ].ShippingMethod_Valid_ForBasket( l.ship_module, l.initial_ship_data ) OR l.shippingrules:subignruls }">
					<MvFUNCTIONRETURN VALUE = "{ Subscription_Calculate_Basket_Shipping( l.ship_module, l.initial_ship_data ) }">
				</MvIF>
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.total"					VALUE = "{ [ g.Module_Library_DB ].Basket_Total( g.Basket:basket_id ) }">

		<MvIF EXPR = "{ ( l.total EQ 0 ) AND ( NOT g.Store:req_frship ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Apply subscription fallback shipping rules
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.shippingrules:subfb EQ 'fallback' }">
		<MvASSIGN NAME = "l.ship_module:id"			VALUE = 0>
		<MvASSIGN NAME = "l.ship_data"				VALUE = "">
	<MvELSEIF EXPR = "{ l.shippingrules:subfb EQ 'priority' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_UT ].ShippingMethodList_Load_Basket( l.fallback_methods ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error_No_ShippingMethods() }">
		</MvIF>

		<MvASSIGN NAME = "l.ship_module"			VALUE = "{ l.fallback_methods[ 1 ]:module }">
		<MvASSIGN NAME = "l.ship_data"				VALUE = "{ l.fallback_methods[ 1 ]:code }">
	<MvELSEIF EXPR = "{ l.shippingrules:subfb EQ 'price' }">
		<MvASSIGN NAME = "l.fallback_method_count"	VALUE = "{ [ g.Module_Feature_SHP_UT ].ShippingMethodList_Load_Basket( l.fallback_methods ) }">

		<MvIF EXPR = "{ l.fallback_method_count EQ 0 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error_No_ShippingMethods() }">
		</MvIF>

		<MvASSIGN NAME = "l.cheapest_index"			VALUE = 1>

		<MvFOREACH ITERATOR = "l.fallback_method" ARRAY = "l.fallback_methods" INDEX = "l.pos" FIRST = 2 LAST = "{ l.fallback_method_count }">
			<MvIF EXPR = "{ l.fallback_methods[ l.cheapest_index ]:price GT l.fallback_method:price }">
				<MvASSIGN NAME = "l.cheapest_index"	VALUE = "{ l.pos }">
			</MvIF>
		</MvFOREACH>

		<MvASSIGN NAME = "l.ship_module"			VALUE = "{ l.fallback_methods[ l.cheapest_index ]:module }">
		<MvASSIGN NAME = "l.ship_data"				VALUE = "{ l.fallback_methods[ l.cheapest_index ]:code }">
	<MvELSEIF EXPR = "{ l.shippingrules:subfb EQ 'specific' }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code( l.shippingrules:subfbmod, l.ship_module ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00040', 'The specified fallback shipping module does not exist' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Load( l.ship_module:id, 'shipping', l.storemodule ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00043', 'The specified fallback shipping is not installed in the store' ) }">
		<MvELSEIF EXPR = "{ NOT l.ship_module:active }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00041', 'The specified fallback shipping module has been deactivated' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.ship_data"				VALUE = "{ l.shippingrules:subfbmeth }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00042', 'Invalid or no shipping method configured' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Calculate shipping using the fallback shipping method
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT Subscription_Calculate_Basket_Shipping( l.ship_module, l.ship_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Update the subscription shipping method if configured to do so and the following qualifications are met:
	|
	|	1. We are processing a single subscription
	|	2. We did not fall back to the fallback shipping method
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.shippingrules:subfbupd AND ( l.subscription_count EQ 1 ) AND ( l.ship_module:id NE 0 ) }">
		<MvREFERENCEARRAY NAME = "l.subscription" VARIABLE = "l.subscriptions">
			<MvDIMENSION INDEX = 1>
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.subscription:ship_id"	VALUE = "{ l.ship_module:id }">
		<MvASSIGN NAME = "l.subscription:ship_data"	VALUE = "{ l.ship_data }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_Shipping( l.subscription ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionList_ProcessOrder" PARAMETERS = "subscriptions var, subscription_count, order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.order_id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'Orders' ) }">

	<MvIF EXPR = "{ l.subscription_count GT 1 }">
		<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderSource_Insert( l.order_id, 'subscription', l.subscription:id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].SubscriptionSettings_Load_Cached( l.subscriptionsettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT SubscriptionList_ProcessOrder_LowLevel_CreateOrder( l.subscriptions, l.subscription_count, l.order_id, l.order ) }">
		<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
			<MvIF EXPR = "{ l.subscriptionsettings:maxafails GT 0 AND l.subscription:authfails GE l.subscriptionsettings:maxafails }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SUB_DB ].Subscription_Update_Status_Cancel_WithNotifications( l.subscription, 'Cancelled: Too many authorization failures' ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SUB_DB ].Subscription_Update_Status_Error( l.subscription, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ l.subscription_count GT 1 }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].OrderSource_Delete_All_Order( l.order_id ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT SubscriptionList_ProcessOrder_LowLevel_FinalizeOrder( l.subscriptions, l.subscription_count, l.order ) }">
		<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SUB_DB ].Subscription_Update_Status_Error( l.subscription, g.Error_Message ) }">
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_FEL_DB ].FeatureEngagement_Increment_Counter( 'subscription_processed', l.subscription_count ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionList_ProcessOrder_LowLevel_CreateOrder" PARAMETERS = "subscriptions var, subscription_count, order_id, order var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Load and validate required items
	|
	</MvCOMMENT>

	<MvREFERENCEARRAY NAME = "l.first_subscription" VARIABLE = "l.subscriptions">
		<MvDIMENSION INDEX = 1>
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ miva_array_search( l.subscriptions, 2, l.subscription, '( l.first_subscription:cust_id NE l.subscription:cust_id ) OR
																			( l.first_subscription:addr_id NE l.subscription:addr_id ) OR
																			( l.first_subscription:ship_id NE l.subscription:ship_id ) OR
																			( l.first_subscription:custpc_id NE l.subscription:custpc_id ) OR
																			( l.first_subscription:ship_data NE l.subscription:ship_data )' ) NE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00024', 'Subscriptions must have the same customer information' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.first_subscription:cust_id, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00036', 'Customer record not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( l.first_subscription:addr_id, l.shipping_address ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00037', 'Address record not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.first_subscription:custpc_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID( l.first_subscription:custpc_id, l.customer:id, l.customerpaymentcard ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00038', 'Payment Card not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code( l.customerpaymentcard:mod_code, l.payment_module ) OR
					    NOT [ g.Module_Library_DB ].StoreModule_Load( l.payment_module:id, 'payment', l.storemodule ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00025', 'The associated payment module does not exist or is not installed in the store' ) }">
		<MvELSEIF EXPR = "{ NOT l.payment_module:active }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00026', 'The associated payment module is inactive' ) }">
		<MvELSEIF EXPR = "{ l.payment_module:api_ver LT 9.06 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00027', 'Invalid payment module specified' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Root $ l.payment_module:module ].PaymentModule_Method_Capabilities( l.payment_module, l.customerpaymentcard:meth_code, l.method_capabilities ) }">

		<MvIF EXPR = "{ NOT l.method_capabilities:mivapay }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00028', 'Invalid payment method specified' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Create basket and assign order ID
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT SubscriptionList_CreateBasket_LowLevel( l.customer, l.shipping_address, l.customerpaymentcard, l.subscriptions, l.subscription_count, g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "g.Basket:order_id" VALUE = "{ l.order_id }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Update_Order( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Basket( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT SubscriptionList_Calculate_Basket_Shipping( l.first_subscription:ship_id, l.first_subscription:ship_data, l.subscriptions, l.subscription_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Calculate tax
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Root $ g.Store:tax_mod:module ].TaxModule_Calculate_Basket( g.Store:tax_mod ) }">
		<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Authorize payment
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.total" VALUE = "{ [ g.Module_Library_DB ].Basket_Total( g.Basket:basket_id ) }">

	<MvIF EXPR = "{ l.total GT 0 }">
		<MvIF EXPR = "{ NOT l.customerpaymentcard:id }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Basket_Reset( g.Basket ) }">

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00031', 'Invalid payment method' ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.payment_module:module ].PaymentModule_Manipulate_Shipping( l.payment_module, l.customerpaymentcard:meth_code ) }">
				<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.payment_module:module ].PaymentModule_Runtime_Authorize_PaymentCard( l.payment_module, l.customerpaymentcard:meth_code, l.customerpaymentcard, l.total ) }">
				<MvASSIGN NAME = "l.invalid_method" VALUE = "{ [ g.Module_Library_Utilities ].Error_Is_PaymentMethod_Invalid() }">

				<MvIF EXPR = "{ l.subscription_count GT 1 }">	<MvASSIGN NAME = "l.subscrp_id" VALUE = 0>
				<MvELSE>										<MvASSIGN NAME = "l.subscrp_id" VALUE = "{ l.subscriptions[ 1 ]:id }">
				</MvIF>

				<MvCOMMENT>
				|
				| Log the failure first
				|
				</MvCOMMENT>

				<MvASSIGN NAME = "l.authorizationfailure:order_id"			VALUE = "{ g.Basket:order_id }">
				<MvASSIGN NAME = "l.authorizationfailure:dtstamp"			VALUE = "{ s.time_t }">
				<MvASSIGN NAME = "l.authorizationfailure:ip"				VALUE = "{ s.remote_addr }">
				<MvASSIGN NAME = "l.authorizationfailure:mod_name"			VALUE = "{ l.payment_module:name }">
				<MvASSIGN NAME = "l.authorizationfailure:method"			VALUE = "{ 'MivaPay: ' $ [ g.Module_Root $ l.payment_module:module ].PaymentModule_Payment_Description( l.payment_module, l.customerpaymentcard:meth_code ) }">
				<MvASSIGN NAME = "l.authorizationfailure:amount"			VALUE = "{ l.total }">
				<MvASSIGN NAME = "l.authorizationfailure:cust_id"			VALUE = "{ g.Basket:cust_id }">

				<MvIF EXPR = "{ g.Session:cache:error_message_count }">
					<MvASSIGN NAME = "l.authorizationfailure:error_text"	VALUE = "{ g.Session:cache:error_messages[ g.Session:cache:error_message_count ] }">
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].AuthorizationFailure_Insert( l.authorizationfailure ) }">
					<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Feature_PAY_UT ].Payment_Notify_AuthorizationFailure( g.Basket, 'subscription', l.subscrp_id, l.payment_module, l.customerpaymentcard:meth_code, l.total ) }">

				<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
					<MvASSIGN NAME = "l.subscription:authfails"				VALUE = "{ l.subscription:authfails + 1 }">
					<MvASSIGN NAME = "l.subscription:lastafail"				VALUE = "{ mktime_t( s.tm_year, s.tm_mon, s.tm_mday, 0, 0, 0, g.Merchant_Local_Timezone ) }">

					<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_AuthorizationFailureTracking( l.subscription ) }">
						<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
					</MvIF>
				</MvFOREACH>

				<MvIF EXPR = "{ l.invalid_method }">						<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00032', 'Invalid payment method' ) }">
				<MvELSEIF EXPR = "{ g.Session:cache:error_message_count }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00033', 'Authorization failure: ' $ g.Session:cache:error_messages[ g.Session:cache:error_message_count ] ) }">
				<MvELSE>													<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00034', 'Authorization failure' ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
			</MvIF>

			<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
				<MvIF EXPR = "{ l.subscription:authfails GT 0 }">
					<MvASSIGN NAME = "l.subscription:authfails"				VALUE = 0>

					<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_AuthorizationFailureTracking( l.subscription ) }">
						<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
					</MvIF>
				</MvIF>
			</MvFOREACH>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Update_LastUsed( l.customerpaymentcard ) }">

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_PaymentOperation( 'MER-SUB-UTL-00035', 'Authorize', g.Basket:order_id, l.payment_module:code, l.total ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Create the order
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.order:source" VALUE = "subscription">

	<MvIF EXPR = "{ l.subscription_count GT 1 }">	<MvASSIGN NAME = "l.order:source_id" VALUE = 0>
	<MvELSE>										<MvASSIGN NAME = "l.order:source_id" VALUE = "{ l.subscriptions[ 1 ]:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].v56_Order_Create( g.Basket, l.total, l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionList_ProcessOrder_LowLevel_FinalizeOrder" PARAMETERS = "subscriptions var, subscription_count, order var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "g.Order" VARIABLE = "l.order">

	<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.subscription:product, l.subscription:variant_id, 0 - l.subscription:quantity ) }">
			<MvFUNCTIONRETURN VALUE = "{ Subscription_Basket_Reset( g.Basket ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Reset( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Process gift certificates and digital downloads
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_GFT_UT ].GiftCertificateSales_Process_Order( g.Order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_DDL_UT ].DigitalDownload_Process_Order( g.Order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Update_Status( g.Order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Perform final module notifications
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Root $ g.Store:tax_mod:module ].TaxModule_ProcessOrder( g.Store:tax_mod ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.fulfillment_module" ARRAY = "l.fulfillment_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features( 'fulfill', l.fulfillment_modules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.fulfillment_module:module ].FulfillmentModule_ProcessOrder( l.fulfillment_module, g.Order ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Update the subscriptions
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
		<MvASSIGN NAME = "l.subscription:status"		VALUE = "A">
		<MvASSIGN NAME = "l.subscription:message"		VALUE = "">

		<MvIF EXPR = "{ l.subscription:firstdate EQ 0 }">
			<MvASSIGN NAME = "l.subscription:firstdate"	VALUE = "{ s.time_t }">
		</MvIF>

		<MvASSIGN NAME = "l.subscription:lastdate"		VALUE = "{ s.time_t }">

		<MvIF EXPR = "{ ( l.subscription:term:term EQ 0 ) OR ( l.subscription:termrem GT 1 ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID_Cached( l.subscription:subterm_id, l.productsubscriptionterm ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.subscription:nextdate"	VALUE = "{ Subscription_CalculateNextDate( l.subscription, l.productsubscriptionterm ) }">
		</MvIF>

		<MvIF EXPR = "{ l.subscription:termrem GE 1 }">
			<MvASSIGN NAME = "l.subscription:termrem"	VALUE = "{ l.subscription:termrem - 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.subscription:termproc"		VALUE = "{ l.subscription:termproc + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_ProcessingInformation_LowLevel( l.subscription ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ Subscription_Recalculate_Totals( l.subscription ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionList_CheckInventory" PARAMETERS = "subscriptions var, subscription_count var, instock_subscriptions var, instock_subscription_count var, outofstock_subscriptions var, outofstock_subscription_count var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].SubscriptionSettings_Load( l.subscriptionsettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.instock_subscriptions"						VALUE = "">
	<MvASSIGN NAME = "l.instock_subscription_count"					VALUE = 0>
	<MvASSIGN NAME = "l.outofstock_subscriptions"					VALUE = "">
	<MvASSIGN NAME = "l.outofstock_subscription_count"				VALUE = 0>

	<MvIF EXPR = "{ l.subscriptionsettings:out_skip EQ 'process' }">
		<MvASSIGN NAME = "l.instock_subscription_count"				VALUE = "{ miva_array_copy_ref( l.subscriptions, 1, l.subscription_count, l.instock_subscriptions, 1 ) }">
	<MvELSEIF EXPR = "{ l.subscriptionsettings:out_skip EQ 'skip' }">
		<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ l.subscription_count }">
			<MvASSIGN NAME = "l.available" 							VALUE = 1>

			<MvASSIGN NAME = "l.invprod_count"						VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.subscription:product:id, l.subscription:variant_id, l.invprods ) }">

			<MvIF EXPR = "{ l.invprod_count EQ 0 }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ l.subscription:product:inv_active AND l.subscription:product:inv_out_track AND ( l.subscription:product:inv_available LT l.subscription:quantity ) }">
					<MvASSIGN NAME = "l.available"					VALUE = 0>
				</MvIF>
			<MvELSE>
				<MvFOREACH ITERATOR = "l.invprod" ARRAY = "l.invprods" COUNT = "{ l.invprod_count }">
					<MvIF EXPR = "{ l.invprod:inv_active AND l.invprod:inv_out_track AND ( l.invprod:inv_available LT l.subscription:quantity ) }">
						<MvASSIGN NAME = "l.available"				VALUE = 0>
					</MvIF>
				</MvFOREACH>
			</MvIF>

			<MvIF EXPR = "{ l.available }">
				<MvASSIGN NAME = "l.instock_subscription_count"		VALUE = "{ miva_array_insert_ref( l.instock_subscriptions, l.subscription, -1 ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.subscription:message"			VALUE = "Out of stock">

				<MvASSIGN NAME = "l.subscription:status"			VALUE = "E">

				<MvIF EXPR = "{ l.subscription:firstdate EQ 0 }">
					<MvASSIGN NAME = "l.subscription:firstdate"		VALUE = "{ s.time_t }">
				</MvIF>

				<MvASSIGN NAME = "l.subscription:lastdate"			VALUE = "{ s.time_t }">

				<MvIF EXPR = "{ ( l.subscription:term:term EQ 0 ) OR ( l.subscription:termrem GT 1 ) }">
					<MvASSIGN NAME = "l.subscription:nextdate"		VALUE = "{ Subscription_CalculateNextDate( l.subscription, l.subscription:term ) }">
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_ProcessingInformation_LowLevel( l.subscription ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.outofstock_subscription_count"	VALUE = "{ miva_array_insert_ref( l.outofstock_subscriptions, l.subscription, -1 ) }">
			</MvIF>
		</MvFOREACH>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-UTL-00044', 'Unsupported Out of Stock Handling method \'' $ l.subscriptionsettings:out_skip $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_Basket_Reset" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.error_code"		VALUE = "{ g.Error_Code }">
	<MvASSIGN NAME = "l.error_message"	VALUE = "{ g.Error_Message }">

	<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Library_DB ].Basket_Reset( l.basket ) }">

	<MvASSIGN NAME = "g.Error_Code"		VALUE = "{ l.error_code }">
	<MvASSIGN NAME = "g.Error_Message"	VALUE = "{ l.error_message }">

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_ProcessOrder" PARAMETERS = "subscription var, order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.subscription_count"			VALUE = 1>
	<MvASSIGN NAME = "l.subscriptions" INDEX = 1 	VALUE = "{ l.subscription }">

	<MvFUNCTIONRETURN VALUE = "{ SubscriptionList_ProcessOrder( l.subscriptions, l.subscription_count, l.order ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_Validate_Attributes_DetermineVariant" PARAMETERS = "subscription var, product var, attributes var, attribute_count, basketoptions var, basketoption_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.inventory_attribute_count"	VALUE = 0>
	<MvASSIGN NAME = "l.product_has_inv_attrs"		VALUE = 0>

	<MvASSIGN NAME = "l.product_attribute_count"	VALUE = "{ [ g.Module_Library_DB ].AttributeList_Load_Product( l.product:id, l.product_attributes ) }">

	<MvFOREACH ITERATOR = "l.product_attribute" ARRAY = "l.product_attributes" COUNT = "{ l.product_attribute_count }">
		<MvIF EXPR = "{ l.product_attribute:type EQ 'template' }">
			<MvASSIGN NAME = "l.product_attribute:template_attribute_count"	VALUE = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateAttrList_Load_Template( l.product_attribute:attemp_id, l.product_attribute:template_attributes ) }">
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Loop over all attributes, try to match each option to a valid product attribute.
	| 	- If none exist, place it in an orphaned array.
	| 	- If it matches an attribute (and option if needed) then add it to the basket options
	| 	- If it is an option type and no option is matched from the provided value, then add it to the orphaned options array
	| Determine the variant from the matched attributes and options.
	| Append the orphaned options after trying to determine the variant
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.subscription:orphanedoptions"						VALUE = "">
	<MvASSIGN NAME = "l.subscription:orphanedoption_count"					VALUE = 0>

	<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ l.attribute_count }">
		<MvASSIGN NAME = "l.product_attribute_index"						VALUE = "{ miva_array_search( l.product_attributes, 1, l.product_attribute, 'l.product_attribute:code EQ l.attribute:code' ) }">

		<MvIF EXPR = "{ NOT l.product_attribute_index }">
			<MvASSIGN NAME = "l.subscription:orphanedoption_count"			VALUE = "{ Subscription_Validate_Attributes_DetermineVariant_AddOrphanedOption( l.attribute, l.subscription:orphanedoptions ) }">

			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ ( l.product_attribute:type NE 'template' ) AND l.product_attribute:inventory }">
			<MvASSIGN NAME = "l.product_has_inv_attrs"	VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ ( l.product_attribute:type EQ 'radio' ) OR
						( l.product_attribute:type EQ 'select' ) OR
						( l.product_attribute:type EQ 'swatch-select' ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Option_Load_Code( l.product_attribute:id, l.attribute:value, l.option ) }">
				<MvASSIGN NAME = "l.subscription:orphanedoption_count"		VALUE = "{ Subscription_Validate_Attributes_DetermineVariant_AddOrphanedOption( l.attribute, l.subscription:orphanedoptions ) }">

				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.basketoption:attr_id"						VALUE = "{ l.product_attribute:id }">
			<MvASSIGN NAME = "l.basketoption:attr_code"						VALUE = "{ l.product_attribute:code }">
			<MvASSIGN NAME = "l.basketoption:attmpat_id"					VALUE = 0>
			<MvASSIGN NAME = "l.basketoption:option_id"						VALUE = "{ l.option:id }">
			<MvASSIGN NAME = "l.basketoption:opt_code"						VALUE = "{ l.option:code }">
			<MvASSIGN NAME = "l.basketoption:retail"						VALUE = "{ l.option:price }">
			<MvASSIGN NAME = "l.basketoption:base_price"					VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.option:price, l.option:cost ) }">
			<MvASSIGN NAME = "l.basketoption:price"							VALUE = "{ l.basketoption:base_price }">
			<MvASSIGN NAME = "l.basketoption:weight"						VALUE = "{ l.option:weight }">
			<MvASSIGN NAME = "l.basketoption:data"							VALUE = "{ l.option:data }">
			<MvASSIGN NAME = "l.basketoption:data_long"						VALUE = "{ l.option:data_long }">

			<MvASSIGN NAME = "l.basketoption_count"							VALUE = "{ miva_array_insert_var( l.basketoptions, l.basketoption, -1 ) }">

			<MvIF EXPR = "{ l.product_attribute:inventory }">
				<MvASSIGN NAME = "l.inventory_attribute:attr_id"			VALUE = "{ l.product_attribute:id }">
				<MvASSIGN NAME = "l.inventory_attribute:attmpat_id"			VALUE = 0>
				<MvASSIGN NAME = "l.inventory_attribute:option_id"			VALUE = "{ l.option:id }">

				<MvASSIGN NAME = "l.inventory_attribute_count"				VALUE = "{ miva_array_insert_var( l.inventory_attributes, l.inventory_attribute, -1 ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ ( l.product_attribute:type EQ 'text' ) OR
							( l.product_attribute:type EQ 'memo' ) OR
							( l.product_attribute:type EQ 'checkbox' ) }">
			<MvASSIGN NAME = "l.basketoption:attr_id"						VALUE = "{ l.product_attribute:id }">
			<MvASSIGN NAME = "l.basketoption:attr_code"						VALUE = "{ l.product_attribute:code }">
			<MvASSIGN NAME = "l.basketoption:attmpat_id"					VALUE = 0>
			<MvASSIGN NAME = "l.basketoption:option_id"						VALUE = 0>
			<MvASSIGN NAME = "l.basketoption:opt_code"						VALUE = "">
			<MvASSIGN NAME = "l.basketoption:retail"						VALUE = "{ l.product_attribute:price }">
			<MvASSIGN NAME = "l.basketoption:base_price"					VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.product_attribute:price, l.product_attribute:cost ) }">
			<MvASSIGN NAME = "l.basketoption:price"							VALUE = "{ l.basketoption:base_price }">
			<MvASSIGN NAME = "l.basketoption:weight"						VALUE = "{ l.product_attribute:weight }">
			<MvASSIGN NAME = "l.basketoption:data"							VALUE = "">
			<MvASSIGN NAME = "l.basketoption:data_long"						VALUE = "">

			<MvIF EXPR = "{ l.product_attribute:type NE 'checkbox' }">
				<MvIF EXPR = "{ len_var( l.attribute:value ) GT 254 }">	<MvASSIGN NAME = "l.basketoption:data_long"	VALUE = "{ l.attribute:value }">
				<MvELSE>												<MvASSIGN NAME = "l.basketoption:data"		VALUE = "{ l.attribute:value }">
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.basketoption_count"							VALUE = "{ miva_array_insert_var( l.basketoptions, l.basketoption, -1 ) }">

			<MvIF EXPR = "{ l.product_attribute:inventory }">
				<MvASSIGN NAME = "l.inventory_attribute:attr_id"			VALUE = "{ l.product_attribute:id }">
				<MvASSIGN NAME = "l.inventory_attribute:attmpat_id"			VALUE = 0>
				<MvASSIGN NAME = "l.inventory_attribute:option_id"			VALUE = 1>

				<MvASSIGN NAME = "l.inventory_attribute_count"				VALUE = "{ miva_array_insert_var( l.inventory_attributes, l.inventory_attribute, -1 ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.product_attribute:type EQ 'template' }">
			<MvASSIGN NAME = "l.template_attribute_index"					VALUE = "{ miva_array_search( l.product_attribute:template_attributes, 1, l.template_attribute, 'l.template_attribute:code EQ l.attribute:template_code' ) }">

			<MvIF EXPR = "{ NOT l.template_attribute_index }">
				<MvASSIGN NAME = "l.subscription:orphanedoption_count"		VALUE = "{ Subscription_Validate_Attributes_DetermineVariant_AddOrphanedOption( l.attribute, l.subscription:orphanedoptions ) }">

				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ l.template_attribute:inventory }">
				<MvASSIGN NAME = "l.product_has_inv_attrs"	VALUE = 1>
			</MvIF>

			<MvIF EXPR = "{ ( l.template_attribute:type EQ 'radio' ) OR
							( l.template_attribute:type EQ 'select' ) OR
							( l.template_attribute:type EQ 'swatch-select' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_ATT_DB ].AttributeTemplateOption_Load_Code( l.template_attribute:id, l.attribute:value, l.option ) }">
					<MvASSIGN NAME = "l.subscription:orphanedoption_count"	VALUE = "{ Subscription_Validate_Attributes_DetermineVariant_AddOrphanedOption( l.attribute, l.subscription:orphanedoptions ) }">

					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.basketoption:attr_id"					VALUE = "{ l.product_attribute:id }">
				<MvASSIGN NAME = "l.basketoption:attr_code"					VALUE = "{ l.template_attribute:code }">
				<MvASSIGN NAME = "l.basketoption:attmpat_id"				VALUE = "{ l.template_attribute:id }">
				<MvASSIGN NAME = "l.basketoption:option_id"					VALUE = "{ l.option:id }">
				<MvASSIGN NAME = "l.basketoption:opt_code"					VALUE = "{ l.option:code }">
				<MvASSIGN NAME = "l.basketoption:retail"					VALUE = "{ l.option:price }">
				<MvASSIGN NAME = "l.basketoption:base_price"				VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.option:price, l.option:cost ) }">
				<MvASSIGN NAME = "l.basketoption:price"						VALUE = "{ l.basketoption:base_price }">
				<MvASSIGN NAME = "l.basketoption:weight"					VALUE = "{ l.option:weight }">
				<MvASSIGN NAME = "l.basketoption:data"						VALUE = "{ l.option:data }">
				<MvASSIGN NAME = "l.basketoption:data_long"					VALUE = "{ l.option:data_long }">

				<MvASSIGN NAME = "l.basketoption_count"						VALUE = "{ miva_array_insert_var( l.basketoptions, l.basketoption, -1 ) }">

				<MvIF EXPR = "{ l.template_attribute:inventory }">
					<MvASSIGN NAME = "l.inventory_attribute:attr_id"		VALUE = "{ l.product_attribute:id }">
					<MvASSIGN NAME = "l.inventory_attribute:attmpat_id"		VALUE = "{ l.template_attribute:id }">
					<MvASSIGN NAME = "l.inventory_attribute:option_id"		VALUE = "{ l.option:id }">

					<MvASSIGN NAME = "l.inventory_attribute_count"			VALUE = "{ miva_array_insert_var( l.inventory_attributes, l.inventory_attribute, -1 ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ ( l.template_attribute:type EQ 'text' ) OR
								( l.template_attribute:type EQ 'memo' ) OR
								( l.template_attribute:type EQ 'checkbox' ) }">
				<MvASSIGN NAME = "l.basketoption:attr_id"					VALUE = "{ l.product_attribute:id }">
				<MvASSIGN NAME = "l.basketoption:attr_code"					VALUE = "{ l.template_attribute:code }">
				<MvASSIGN NAME = "l.basketoption:attmpat_id"				VALUE = "{ l.template_attribute:id }">
				<MvASSIGN NAME = "l.basketoption:option_id"					VALUE = 0>
				<MvASSIGN NAME = "l.basketoption:opt_code"					VALUE = "">
				<MvASSIGN NAME = "l.basketoption:retail"					VALUE = "{ l.template_attribute:price }">
				<MvASSIGN NAME = "l.basketoption:base_price"				VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price( l.product, l.template_attribute:price, l.template_attribute:cost ) }">
				<MvASSIGN NAME = "l.basketoption:price"						VALUE = "{ l.basketoption:base_price }">
				<MvASSIGN NAME = "l.basketoption:weight"					VALUE = "{ l.template_attribute:weight }">
				<MvASSIGN NAME = "l.basketoption:data"						VALUE = "">
				<MvASSIGN NAME = "l.basketoption:data_long"					VALUE = "">

				<MvIF EXPR = "{ l.template_attribute:type NE 'checkbox' }">
					<MvIF EXPR = "{ len_var( l.attribute:value ) GT 254 }">	<MvASSIGN NAME = "l.basketoption:data_long"	VALUE = "{ l.attribute:value }">
					<MvELSE>												<MvASSIGN NAME = "l.basketoption:data"		VALUE = "{ l.attribute:value }">
					</MvIF>
				</MvIF>

				<MvASSIGN NAME = "l.basketoption_count" 					VALUE = "{ miva_array_insert_var( l.basketoptions, l.basketoption, -1 ) }">

				<MvIF EXPR = "{ l.template_attribute:inventory }">
					<MvASSIGN NAME = "l.inventory_attribute:attr_id"		VALUE = "{ l.product_attribute:id }">
					<MvASSIGN NAME = "l.inventory_attribute:attmpat_id"		VALUE = "{ l.template_attribute:id }">
					<MvASSIGN NAME = "l.inventory_attribute:option_id"		VALUE = 1>

					<MvASSIGN NAME = "l.inventory_attribute_count"			VALUE = "{ miva_array_insert_var( l.inventory_attributes, l.inventory_attribute, -1 ) }">
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.subscription:variant_id"							VALUE = 0>

	<MvIF EXPR = "{ l.inventory_attribute_count }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].ProductVariant_Load_Attributes( l.product:id, l.inventory_attributes, l.inventory_attribute_count, l.productvariant ) }">
			<MvASSIGN NAME = "l.subscription:variant_id"					VALUE = "{ l.productvariant:variant_id }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.subscription:orphanedoption_count }">
		<MvASSIGN NAME = "l.basketoption_count"								VALUE = "{ miva_array_merge_ref( l.subscription:orphanedoptions, 1, l.subscription:orphanedoption_count, l.basketoptions, l.basketoption_count + 1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Subscription_Validate_Attributes_DetermineVariant_AddOrphanedOption" PARAMETERS = "attribute var, orphanedoptions var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.orphanedoption:attr_id"		VALUE = 0>
	<MvASSIGN NAME = "l.orphanedoption:attr_code"	VALUE = "">
	<MvASSIGN NAME = "l.orphanedoption:attmpat_id"	VALUE = 0>
	<MvASSIGN NAME = "l.orphanedoption:option_id"	VALUE = 0>
	<MvASSIGN NAME = "l.orphanedoption:opt_code"	VALUE = "">
	<MvASSIGN NAME = "l.orphanedoption:retail"		VALUE = 0.00>
	<MvASSIGN NAME = "l.orphanedoption:base_price"	VALUE = 0.00>
	<MvASSIGN NAME = "l.orphanedoption:price"		VALUE = 0.00>
	<MvASSIGN NAME = "l.orphanedoption:weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.orphanedoption:data"		VALUE = "">
	<MvASSIGN NAME = "l.orphanedoption:data_long"	VALUE = "">

	<MvIF EXPR = "{ NOT ISNULL l.attribute:template_code }">	<MvASSIGN NAME = "l.orphanedoption:attr_code"	VALUE = "{ l.attribute:template_code }">
	<MvELSE>													<MvASSIGN NAME = "l.orphanedoption:attr_code"	VALUE = "{ l.attribute:code }">
	</MvIF>

	<MvIF EXPR = "{ len_var( l.attribute:value ) GT 254 }">		<MvASSIGN NAME = "l.orphanedoption:data_long"	VALUE = "{ l.attribute:value }">
	<MvELSE>													<MvASSIGN NAME = "l.orphanedoption:data"		VALUE = "{ l.attribute:value }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ miva_array_insert_var( l.orphanedoptions, l.orphanedoption, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionShippingMethodList_Load_Basket" PARAMETERS = "methods var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ShippingRules_Load( l.shippingrules ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.shippingrules:subignruls }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_SHP_UT ].ShippingMethodList_Load_Basket( l.methods ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].PackagingRules_Load( l.packagingrules ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Basket:subtotal }">	<MvASSIGN NAME = "g.Basket:subtotal"	VALUE = "{ [ g.Module_Library_DB ].Basket_SubTotal( g.Basket:basket_id ) }">		</MvIF>
	<MvIF EXPR = "{ ISNULL g.Basket:quantity }">	<MvASSIGN NAME = "g.Basket:quantity"	VALUE = "{ [ g.Module_Library_DB ].Basket_Quantity_All( g.Basket:basket_id ) }">	</MvIF>
	<MvIF EXPR = "{ ISNULL g.Basket:weight }">		<MvASSIGN NAME = "g.Basket:weight"		VALUE = "{ [ g.Module_Library_DB ].Basket_Weight( g.Basket:basket_id ) }">			</MvIF>

	<MvASSIGN NAME = "l.separate_item_count"			VALUE = 0>
	<MvASSIGN NAME = "l.packable_item_count"			VALUE = 0>
	<MvASSIGN NAME = "l.basketitem_count"				VALUE = "{ [ g.Module_Library_DB ].BasketItemList_Load_Basket( g.Basket:basket_id, l.basketitems ) }">

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ l.basketitem_count }">
		<MvIF EXPR = "{ NOT SubscriptionProductShippingRules_Merge_BasketItem( l.packagingrules, l.basketitem,
																   			   l.separate_items, l.separate_item_count,
																   			   l.packable_items, l.packable_item_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.package_count"	VALUE = "{ [ g.Module_Feature_SHP_UT ].ProductShippingRules_Finalize_Packing( l.packagingrules,
																													  l.separate_items, l.separate_item_count,
																													  l.packable_items, l.packable_item_count,
																													  l.packages ) }">

	<MvASSIGN NAME = "l.methods"						VALUE = "">
	<MvASSIGN NAME = "l.method_count"					VALUE = 0>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Feature( 'shipping', l.modules ) }">
		<MvIF EXPR = "{ l.module:api_ver LT 5.71 }">	<MvASSIGN NAME = "l.module_method_count" VALUE = "{ [ g.Module_Root $ l.module:module ].ShippingModule_Shipping_Methods( l.module, l.module_methods ) }">
		<MvELSE>										<MvASSIGN NAME = "l.module_method_count" VALUE = "{ [ g.Module_Root $ l.module:module ].ShippingModule_Basket_Methods( l.module, l.packages, l.package_count, l.module_methods ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.method" ARRAY = "l.module_methods" COUNT = "{ l.module_method_count }">
			<MvASSIGN NAME = "l.method:module"			VALUE = "{ l.module }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ShippingMethodRules_Load_MethodOrDefault( l.method:module:code, l.method:code, l.shippingmethodrules ) }">
				<MvASSIGN NAME = "l.method:priority"	VALUE = 0>
			<MvELSE>
				<MvASSIGN NAME = "l.method:priority"	VALUE = "{ l.shippingmethodrules:priority }">
				<MvASSIGN NAME = "l.method:price" 		VALUE = "{ [ g.Module_Feature_SHP_UT ].ShippingMethodRules_Adjusted_Price( l.shippingmethodrules, l.method:price ) }">

				<MvIF EXPR = "{ NOT ISNULL l.shippingmethodrules:descrip }">
					<MvASSIGN NAME = "l.method:name"	VALUE = "{ l.shippingmethodrules:descrip }">
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.method_count"			VALUE = "{ miva_array_insert_var( l.methods, l.method, -1 ) }">
		</MvFOREACH>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_SHP_UT ].ShippingMethodList_Runtime_Sort( l.methods ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionProductShippingRules_Merge_BasketItem" PARAMETERS = "packagingrules var, basketitem var,
																					 separate_items var, separate_item_count var,
																					 packable_items var, packable_item_count var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Check the master product first
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingRules_Load_ProductOrDefault( l.basketitem:product_id, l.mastershippingrules ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| If there are parts, the master product is not considered "packable".  If there are parts,
	| any difference between the basketitem weight and the total weight of the parts is evenly
	| distributed across the parts.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.weight"					VALUE = "{ l.basketitem:weight + [ g.Module_Library_DB ].BasketOption_Line_Weight( l.basketitem:line_id ) }">
	<MvASSIGN NAME = "l.part_count"				VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.basketitem:product_id, l.basketitem:variant_id, l.part_products ) }">

	<MvIF EXPR = "{ ( l.part_count EQ 0 ) OR ( l.packagingrules:vp_mode EQ 'master' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.basketitem:product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.product:id"		VALUE = "{ l.basketitem:product_id }">
			<MvASSIGN NAME = "l.product:code"	VALUE = "{ l.basketitem:code }">
			<MvASSIGN NAME = "l.product:name"	VALUE = "{ l.basketitem:name }">
			<MvASSIGN NAME = "l.product:price"	VALUE = "{ l.basketitem:price }">
			<MvASSIGN NAME = "l.product:weight"	VALUE = "{ l.weight }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Feature_SHP_UT ].ProductShippingRules_Merge_Packing( l.packagingrules,
																						  l.product, 'basketitem', l.basketitem,
																						  l.basketitem:quantity, l.weight, l.mastershippingrules,
																						  l.separate_items, l.separate_item_count,
																						  l.packable_items, l.packable_item_count ) }">
	<MvELSE>
		<MvIF EXPR = "{ NOT SubscriptionProductShippingRules_ApplyInventoryVariantPackagingRules( l.packagingrules, 'basketitem', l.basketitem,
																								  l.separate_items, l.separate_item_count,
																								  l.packable_items, l.packable_item_count,
																								  l.part_products, l.part_count,
																								  l.weight ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionProductShippingRules_ApplyInventoryVariantPackagingRules" PARAMETERS = "packagingrules var, itemtype, item var,
																										separate_items var, separate_item_count var,
																										packable_items var, packable_item_count var,
																										part_products var, part_count var,
																										weight var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.packagingrules:vp_mode EQ 'parts' }">
		<MvFOREACH ITERATOR = "l.part_product" ARRAY = "l.part_products" COUNT = "{ l.part_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingRules_Load_ProductOrDefault( l.part_product:id, l.partshippingrules ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Feature_SHP_UT ].ProductShippingRules_Merge_Packing( l.packagingrules,
																							  l.part_product, l.itemtype, l.item,
																							  l.item:quantity * l.part_product:quantity, l.part_product:weight, l.partshippingrules,
																							  l.separate_items, l.separate_item_count,
																							  l.packable_items, l.packable_item_count ) }">
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.part_total_weight"			VALUE = 0.00>
	<MvASSIGN NAME = "l.part_total_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.part_product" ARRAY = "l.part_products" COUNT = "{ l.part_count }">
		<MvASSIGN NAME = "l.part_total_count"		VALUE = "{ l.part_total_count + l.part_product:quantity }">
		<MvASSIGN NAME = "l.part_total_weight"		VALUE = "{ l.part_total_weight + ( l.part_product:weight * l.part_product:quantity ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.part_total_weight"			VALUE = "{ l.part_total_weight ROUND 2 }">
	<MvASSIGN NAME = "l.part_weight_offset"			VALUE = "{ ( l.weight - l.part_total_weight ) / l.part_total_count }">

	<MvFOREACH ITERATOR = "l.part_product" ARRAY = "l.part_products" COUNT = "{ l.part_count }">
		<MvASSIGN NAME =  "l.part_weight"			VALUE = "{ l.part_product:weight }">

		<MvIF EXPR = "{ ( l.packagingrules:vp_mode EQ 'parts_proportional' ) AND ( l.part_total_weight NE 0 ) }">
			<MvASSIGN NAME = "l.part_weight_offset"	VALUE = "{ ( l.weight * ( l.part_product:weight / l.part_total_weight ) ) - l.part_product:weight }">
		</MvIF>

		<MvIF EXPR = "{ ( l.part_weight_offset GT 0 ) AND l.packagingrules:vp_part_up }">
			<MvASSIGN NAME = "l.part_weight"		VALUE = "{ l.part_weight + l.part_weight_offset }">
		<MvELSEIF EXPR = "{ ( l.part_weight_offset LT 0 ) AND l.packagingrules:vp_part_dn }">
			<MvASSIGN NAME = "l.part_weight"		VALUE = "{ l.part_weight + l.part_weight_offset }">

			<MvIF EXPR = "{ ( l.part_weight LT 0 ) AND ( NOT l.packagingrules:vp_part_ng ) }">
				<MvASSIGN NAME = "l.part_weight"	VALUE = 0.00>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingRules_Load_ProductOrDefault( l.part_product:id, l.partshippingrules ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Feature_SHP_UT ].ProductShippingRules_Merge_Packing( l.packagingrules,
																						  l.part_product, l.itemtype, l.item,
																						  l.item:quantity * l.part_product:quantity, l.part_weight, l.partshippingrules,
																						  l.separate_items, l.separate_item_count,
																						  l.packable_items, l.packable_item_count ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-SUB-JSN-
| Next Error Code: 85
|
</MvCOMMENT>

<MvCOMMENT>
|
| Product Subscription Settings
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_ProductSubscriptionSettings" PARAMETERS = "productsubscriptionsettings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"product_id":	<MvEVAL EXPR = "{ int( l.productsubscriptionsettings:product_id ) }">,
	"enabled":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productsubscriptionsettings:enabled ) }">,
	"mandatory":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productsubscriptionsettings:mandatory ) }">,
	"can_cancel":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productsubscriptionsettings:can_cancel ) }">,
	"cncl_min":		<MvEVAL EXPR = "{ int( l.productsubscriptionsettings:cncl_min ) }">,
	"can_qty":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productsubscriptionsettings:can_qty ) }">,
	"qty_min":		<MvEVAL EXPR = "{ int( l.productsubscriptionsettings:qty_min ) }">,
	"can_term":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productsubscriptionsettings:can_term ) }">,
	"term_min":		<MvEVAL EXPR = "{ int( l.productsubscriptionsettings:term_min ) }">,
	"can_date":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.productsubscriptionsettings:can_date ) }">,
	"date_min":		<MvEVAL EXPR = "{ int( l.productsubscriptionsettings:date_min ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Subscription Terms
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_BaseProductSubscriptionTermList_Filters" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.available_filters" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pst.frequency',	'term_frequency' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.term',		'term_term' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pst.descrip',		'term_descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.n',			'term_n' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.fixed_dow',	'term_fixed_dow' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.fixed_dom',	'term_fixed_dom' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.sub_count',	'term_sub_count' ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.available_filters }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductSubscriptionTermList_OrderBy" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "term_id:pst.id,term_frequency:pst.frequency,term_term:pst.term,term_descrip:pst.descrip,term_n:pst.n;pst.frequency,term_fixed_dow:pst.fixed_dow,term_fixed_dom:pst.fixed_dom,term_sub_count:pst.sub_count">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProducSubscriptionTermIndex_Load_ID" PARAMETERS = "filter var, sort, query var, record var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.productsubscriptionterm"	VARIABLE = "l.record:pst">
	<MvREFERENCE NAME = "l.product"					VARIABLE = "l.record:prod">
	
	<MvIF EXPR = "{ NOT JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.productsubscriptionterm:product_id, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-JSN-00064', 'Product ' $ l.productsubscriptionterm:product_id $ ' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_BaseProductIndex_Load_ID_LowLevel( l.filter, l.sort,
																				  [ g.Module_JSON ].JSON_BaseProductList_Filters() $ ',' $ [ g.Module_Feature_SUB_JSON ].JSON_BaseProductSubscriptionTermList_Filters(),
																				  [ g.Module_JSON ].JSON_BaseProductList_OrderBy() $ ',' $ [ g.Module_Feature_SUB_JSON ].JSON_BaseProductSubscriptionTermList_OrderBy(),
																				  'prod.disp_order;pst.id',
																				  g.Module_JSON, 'JSON_ProductList_Load_Query_Filter', 'JSON_ProductList_Load_Query_Search_Filter', 'JSON_Product_CustomFields_Query_Filter',
																				  l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductSubscriptionSettings',	'pss' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'ProductSubscriptionTerms',		'pst' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pss.product_id	= pst.product_id	AND
																		 pss.enabled	= 1					AND
																		 prod.id		= pst.product_id', '' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProducSubscriptionTermList_Load_Query" PARAMETERS = "filter var, sort, search_query var, count_query var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_LowLevel( l.filter, l.sort,
																				  [ g.Module_JSON ].JSON_BaseProductList_Filters() $ ',' $ [ g.Module_Feature_SUB_JSON ].JSON_BaseProductSubscriptionTermList_Filters(),
																				  [ g.Module_JSON ].JSON_BaseProductList_OrderBy() $ ',' $ [ g.Module_Feature_SUB_JSON ].JSON_BaseProductSubscriptionTermList_OrderBy(),
																				  'prod.disp_order;pst.id',
																				  g.Module_JSON, 'JSON_ProductList_Load_Query_Filter', 'JSON_ProductList_Load_Query_Search_Filter', 'JSON_Product_CustomFields_Query_Filter',
																				  l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pst.id			AS term_id,
																				 pst.frequency	AS term_frequency,
																				 pst.term		AS term_term,
																				 pst.descrip	AS term_descrip,
																				 pst.n			AS term_n,
																				 pst.fixed_dow	AS term_fixed_dow,
																				 pst.fixed_dom	AS term_fixed_dom,
																				 pst.sub_count	AS term_sub_count' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'ProductSubscriptionTerms',	'pst' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'ProductSubscriptionSettings',	'pss' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pss.product_id	= pst.product_id	AND
																				pss.enabled		= 1					AND
																				prod.id			= pst.product_id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'ProductSubscriptionTerms',		'pst' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'ProductSubscriptionSettings',	'pss' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,  'pss.product_id	= pst.product_id	AND
																				pss.enabled		= 1					AND
																				prod.id			= pst.product_id', '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProducSubscriptionTermList_Product_Read" PARAMETERS = "product var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

	<MvASSIGN NAME = "l.product:term_id"		VALUE = "{ Products.d.term_id }">
	<MvASSIGN NAME = "l.product:term_frequency"	VALUE = "{ Products.d.term_frequency }">
	<MvASSIGN NAME = "l.product:term_term"		VALUE = "{ Products.d.term_term }">
	<MvASSIGN NAME = "l.product:term_descrip"	VALUE = "{ Products.d.term_descrip }">
	<MvASSIGN NAME = "l.product:term_n"			VALUE = "{ Products.d.term_n }">
	<MvASSIGN NAME = "l.product:term_fixed_dow"	VALUE = "{ Products.d.term_fixed_dow }">
	<MvASSIGN NAME = "l.product:term_fixed_dom"	VALUE = "{ Products.d.term_fixed_dom }">
	<MvASSIGN NAME = "l.product:term_sub_count"	VALUE = "{ Products.d.term_sub_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProducSubscriptionTermList_OnDemandColumns" PARAMETERS = "product var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">,
	"term_id":			<MvEVAL EXPR = "{ int( l.product:term_id ) }">,
	"term_frequency":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.product:term_frequency ) }">",
	"term_term":		<MvEVAL EXPR = "{ int( l.product:term_term ) }">,
	"term_descrip":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.product:term_descrip ) }">",
	"term_n":			<MvEVAL EXPR = "{ int( l.product:term_n ) }">,
	"term_fixed_dow":	<MvEVAL EXPR = "{ int( l.product:term_fixed_dow ) }">,
	"term_fixed_dom":	<MvEVAL EXPR = "{ int( l.product:term_fixed_dom ) }">,
	"term_sub_count":	<MvEVAL EXPR = "{ int( l.product:term_sub_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm" PARAMETERS = "productsubscriptionterm var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.productsubscriptionterm:id ) }">,
	"disp_order":	<MvEVAL EXPR = "{ int( l.productsubscriptionterm:disp_order ) }">,
	"product_id":	<MvEVAL EXPR = "{ int( l.productsubscriptionterm:product_id ) }">,
	"frequency":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.productsubscriptionterm:frequency ) }">",
	"term":			<MvEVAL EXPR = "{ int( l.productsubscriptionterm:term ) }">,
	"descrip":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.productsubscriptionterm:descrip ) }">",
	"n":			<MvEVAL EXPR = "{ int( l.productsubscriptionterm:n ) }">,
	"fixed_dow":	<MvEVAL EXPR = "{ int( l.productsubscriptionterm:fixed_dow ) }">,
	"fixed_dom":	<MvEVAL EXPR = "{ int( l.productsubscriptionterm:fixed_dom ) }">,
	"sub_count":	<MvEVAL EXPR = "{ int( l.productsubscriptionterm:sub_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_Loaders_Present" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'ProductSubscriptionTerm_ID' ) }">					<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'ProductSubscriptionTerm_Description' ) }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_Load" PARAMETERS = "productsubscriptionterm var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'ProductSubscriptionTerm_ID', l.term_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_SUB_DB ].ProductSubscriptionTerm_Load_ID( l.term_id, l.productsubscriptionterm ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-JSN-00057', 'Product subscription term not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'ProductSubscriptionTerm_Description', l.term_descrip ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_SUB_DB ].ProductSubscriptionTerm_Load_Description( l.product:id, l.term_descrip, l.productsubscriptionterm ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-JSN-00058', 'Product subscription term not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-JSN-00059', 'Unable to load product subscription term: Either ProductSubscriptionTerm_ID or ProductSubscriptionTerm_Description and one of Edit_Product, Product_ID, Product_Code or Product_SKU must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTermList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'frequency',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'term',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'descrip',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'n',			'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'fixed_dow',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'fixed_dom',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sub_count',	'' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'ProductSubscriptionTerms', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'id,frequency,term,descrip,n:n;frequency,fixed_dow,fixed_dom,sub_count,disp_order', 'disp_order' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'ProductSubscriptionTerms', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productsubscriptionterm_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.productsubscriptionterm_count LT l.count ) ) AND ( NOT ProductSubscriptionTerms.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productsubscriptionterm_count ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Read( l.productsubscriptionterm ) }">
			<MvEVAL EXPR = "{ JSON_ProductSubscriptionTerm( l.productsubscriptionterm ) }">

			, "dates":
			[
				<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">
					<MvASSIGN NAME = "l.productsubscriptiontermdate_count" VALUE = 0>
					<MvFOREACH ITERATOR = "l.productsubscriptiontermdate" ARRAY = "l.productsubscriptiontermdates" COUNT = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermDateList_Load_ProductSubscriptionTerm( l.productsubscriptionterm:id, l.productsubscriptiontermdates ) }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productsubscriptiontermdate_count ) }">
							"subterm_id":	<MvEVAL EXPR = "{ int( l.productsubscriptiontermdate:subterm_id ) }">,
							"term_dom":		<MvEVAL EXPR = "{ int( l.productsubscriptiontermdate:term_dom ) }">,
							"term_mon":		<MvEVAL EXPR = "{ int( l.productsubscriptiontermdate:term_mon ) }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					</MvFOREACH>
				</MvIF>
			]
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "ProductSubscriptionTerms" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductSubscriptionTerms">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductAndSubscriptionTermList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseProducSubscriptionTermList_Load_Query( l.filter, l.sort, l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00027', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productsubscriptionterm_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.productsubscriptionterm_count LT l.count ) ) AND ( NOT Products.d.EOF ) }">
			<MvEVAL EXPR = "{ JSON_BaseProducSubscriptionTermList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productsubscriptionterm_count ) }">
				<MvEVAL EXPR = "{ JSON_ProducSubscriptionTermList_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductAndSubscriptionTermIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_BaseProducSubscriptionTermIndex_Load_ID( l.filter, l.sort, l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index": <MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_ValidateCommon" PARAMETERS = "productsubscriptiontermdates var, productsubscriptiontermdate_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Frequency"							VALUE = "{ tolower( [ g.Module_JSON ].JSON_Decode( g.Frequency ) ) }">
	<MvASSIGN NAME = "g.Term"								VALUE = "{ int( g.Term ) }">
	<MvASSIGN NAME = "g.Generate_Description"				VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Generate_Description ) }">
	<MvASSIGN NAME = "g.Description"						VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Description ) }">
	<MvASSIGN NAME = "g.N_Days"								VALUE = "{ int( g.N_Days ) }">
	<MvASSIGN NAME = "g.N_Months"							VALUE = "{ int( g.N_Months ) }">
	<MvASSIGN NAME = "g.DayOfWeek"							VALUE = "{ int( g.DayOfWeek ) }">
	<MvASSIGN NAME = "g.DayOfMonth"							VALUE = "{ int( g.DayOfMonth ) }">
	<MvASSIGN NAME = "l.day_count"							VALUE = "{ [ g.Module_JSON ].JSON_Array_Integer( g.Days, l.days ) }">
	<MvASSIGN NAME = "l.month_count"						VALUE = "{ [ g.Module_JSON ].JSON_Array_Integer( g.Months, l.months ) }">
	<MvASSIGN NAME = "l.productsubscriptiontermdates"		VALUE = "">
	<MvASSIGN NAME = "l.productsubscriptiontermdate_count"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( g.Term ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Term', 'Please specify a valid term (# of total orders placed for your subscription)' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.Frequency, 'n,n_months,daily,weekly,biweekly,monthly,quarterly,semiannually,annually,fixedweekly,fixedmonthly,dates' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Frequency', 'Please specify a valid Frequency' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT g.Generate_Description }">
		<MvIF EXPR = "{ ISNULL g.Description }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Description', 'Please enter a Description' ) }">
		<MvELSEIF EXPR = "{ len_var( g.Description ) GT 254 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Description', 'Please enter a Description of 254 characters or less' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ g.Frequency EQ 'n' AND NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( g.N_Days ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'N_Days', 'Please specify a valid number of days for reorder frequency' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Frequency EQ 'n_months' AND NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( g.N_Months ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'N_Months', 'Please specify a valid number of months for reorder frequency' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Frequency EQ 'fixedweekly' AND NOT [ g.Module_Admin ].Validate_WholeNumber_Range_Required( g.DayOfWeek, 1, 7 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'DayOfWeek', 'Please specify a valid day of the week for reorder frequency' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Frequency EQ 'fixedmonthly' AND NOT [ g.Module_Admin ].Validate_WholeNumber_Range_Required( g.DayOfMonth, 1, 31 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'DayOfMonth', 'Please specify a valid day of the month for reorder frequency' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Frequency EQ 'dates' }">
		<MvFOR INDEX = "l.pos" COUNT = "{ l.day_count }">
			<MvIF EXPR = "{ l.days[ l.pos ] LT 1 OR l.days[ l.pos ] GT 31 }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Days[' $ l.pos $ ']', 'Please specify a valid Day of Month' ) }">
			<MvELSEIF EXPR = "{ l.months[ l.pos ] LT 1 OR l.months[ l.pos ] GT 12 }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Months[' $ l.pos $ ']', 'Please specify a valid Month' ) }">
			</MvIF>

			<MvIF EXPR = "{ miva_array_search( l.productsubscriptiontermdates, 1, l.search_productsubscriptiontermdate, 'l.search_productsubscriptiontermdate:term_dom EQ l.days[ l.pos ] AND l.search_productsubscriptiontermdate:term_mon EQ l.months[ l.pos ]' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Days[' $ l.pos $ ']', 'Please remove duplicate dates' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.productsubscriptiontermdate:term_dom"	VALUE = "{ l.days[ l.pos ] }">
			<MvASSIGN NAME = "l.productsubscriptiontermdate:term_mon"	VALUE = "{ l.months[ l.pos ] }">

			<MvASSIGN NAME = "l.productsubscriptiontermdate_count"		VALUE = "{ miva_array_insert( l.productsubscriptiontermdates, l.productsubscriptiontermdate, -1 ) }">
		</MvFOR>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_Insert" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Product_ID" VALUE = "{ int( g.Product_ID ) }">

	<MvIF EXPR = "{ NOT JSON_ProductSubscriptionTerm_ValidateCommon( l.productsubscriptiontermdates, l.productsubscriptiontermdate_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( g.Product_ID, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00002', 'Product not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productsubscriptionterm:product_id"		VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.productsubscriptionterm:frequency"		VALUE = "{ g.Frequency }">
	<MvASSIGN NAME = "l.productsubscriptionterm:fixed_dow"		VALUE = "{ g.DayOfWeek }">
	<MvASSIGN NAME = "l.productsubscriptionterm:fixed_dom"		VALUE = "{ g.DayOfMonth }">
	<MvASSIGN NAME = "l.productsubscriptionterm:term"			VALUE = "{ g.Term }">
	<MvASSIGN NAME = "l.productsubscriptionterm:sub_count"		VALUE = 0>

	<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n' }">				<MvASSIGN NAME = "l.productsubscriptionterm:n" VALUE = "{ g.N_Days }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n_months' }">	<MvASSIGN NAME = "l.productsubscriptionterm:n" VALUE = "{ g.N_Months }">
	<MvELSE>																	<MvASSIGN NAME = "l.productsubscriptionterm:n" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT g.Generate_Description }">
		<MvASSIGN NAME = "l.productsubscriptionterm:descrip"	VALUE = "{ g.Description }">
	<MvELSE>
		<MvASSIGN NAME = "l.productsubscriptionterm:descrip"	VALUE = "{ [ g.Module_Feature_SUB_UT ].ProductSubscriptionTerm_Generate_Description( l.productsubscriptionterm, l.productsubscriptiontermdates, l.productsubscriptiontermdate_count ) }">

		<MvIF EXPR = "{ len_var( l.productsubscriptionterm:descrip ) GT 254 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Description', 'The generated value for Description exceeds the available 254 character limit.  Please specify a custom description of 254 characters or less' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_Description( l.product:id, l.productsubscriptionterm:descrip, l.existing_productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Description', 'A product subscription term already exists with Description \'' $ l.productsubscriptionterm:descrip $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Insert( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00003', 'Product Subscription Term for Product ID \'' $ l.productsubscriptionterm:product_id $ '\' with description \'' $ l.productsubscriptionterm:descrip $ '\' created' ) }">

	<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">
		<MvFOREACH ITERATOR = "l.productsubscriptiontermdate" ARRAY = "l.productsubscriptiontermdates" COUNT = "{ l.productsubscriptiontermdate_count }">
			<MvASSIGN NAME = "l.productsubscriptiontermdate:subterm_id" VALUE = "{ l.productsubscriptionterm:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermDate_Insert( l.productsubscriptiontermdate ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.ProductSubscriptionTerm_ID" VALUE = "{ int( g.ProductSubscriptionTerm_ID ) }">
	
	<MvIF EXPR = "{ NOT JSON_ProductSubscriptionTerm_ValidateCommon( l.productsubscriptiontermdates, l.productsubscriptiontermdate_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID( g.ProductSubscriptionTerm_ID, l.productsubscriptionterm ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00004', 'Product Subscription Term not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_frequency"						VALUE = "{ l.productsubscriptionterm:frequency }">

	<MvASSIGN NAME = "l.productsubscriptionterm:frequency"		VALUE = "{ g.Frequency }">
	<MvASSIGN NAME = "l.productsubscriptionterm:fixed_dow"		VALUE = "{ g.DayOfWeek }">
	<MvASSIGN NAME = "l.productsubscriptionterm:fixed_dom"		VALUE = "{ g.DayOfMonth }">
	<MvASSIGN NAME = "l.productsubscriptionterm:term"			VALUE = "{ g.Term }">

	<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n' }">				<MvASSIGN NAME = "l.productsubscriptionterm:n" VALUE = "{ g.N_Days }">
	<MvELSEIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'n_months' }">	<MvASSIGN NAME = "l.productsubscriptionterm:n" VALUE = "{ g.N_Months }">
	<MvELSE>																	<MvASSIGN NAME = "l.productsubscriptionterm:n" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT g.Generate_Description }">
		<MvASSIGN NAME = "l.productsubscriptionterm:descrip"	VALUE = "{ g.Description }">
	<MvELSE>
		<MvASSIGN NAME = "l.productsubscriptionterm:descrip"	VALUE = "{ [ g.Module_Feature_SUB_UT ].ProductSubscriptionTerm_Generate_Description( l.productsubscriptionterm, l.productsubscriptiontermdates, l.productsubscriptiontermdate_count ) }">

		<MvIF EXPR = "{ len_var( l.productsubscriptionterm:descrip ) GT 254 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Description', 'The generated value for Description exceeds the available 254 character limit.  Please specify a custom description of 254 characters or less' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_Description( l.product:id, l.productsubscriptionterm:descrip, l.existing_productsubscriptionterm ) AND
					( l.productsubscriptionterm:id NE l.existing_productsubscriptionterm:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Description', 'A product subscription term already exists with Description \'' $ l.productsubscriptionterm:descrip $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Update( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00005', 'Product Subscription Term for Product ID \'' $ l.productsubscriptionterm:product_id $ '\' with description \'' $ l.productsubscriptionterm:descrip $ '\' updated' ) }">

	<MvIF EXPR = "{ l.original_frequency EQ 'dates' OR l.productsubscriptionterm:frequency EQ 'dates' }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermDate_Delete_All_ProductSubscriptionTerm( l.productsubscriptionterm:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">
		<MvFOREACH ITERATOR = "l.productsubscriptiontermdate" ARRAY = "l.productsubscriptiontermdates" COUNT = "{ l.productsubscriptiontermdate_count }">
			<MvASSIGN NAME = "l.productsubscriptiontermdate:subterm_id" VALUE = "{ l.productsubscriptionterm:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermDate_Insert( l.productsubscriptiontermdate ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTerm_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.ProductSubscriptionTerm_ID" VALUE = "{ int( g.ProductSubscriptionTerm_ID ) }">

	<MvIF EXPR = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID( g.ProductSubscriptionTerm_ID, l.productsubscriptionterm ) }">
		<MvIF EXPR = "{ l.productsubscriptionterm:sub_count }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00006', 'The term is in use by one or more subscriptions and cannot be deleted' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Delete( l.productsubscriptionterm ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00007', 'Product Subscription Term for Product ID \'' $ l.productsubscriptionterm:product_id $ '\' with description ' $ l.productsubscriptionterm:descrip $ ' deleted' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTermList_DisplayOrder_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.change_count"		VALUE = 0>
	<MvASSIGN NAME = "l.changes" 			VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.productsubscriptionterm_order" ARRAY = "l.productsubscriptionterm_orders" COUNT = "{ [ g.Module_JSON ].JSON_Input_Array( 'ProductSubscriptionTerm_Order', l.productsubscriptionterm_orders ) }">
		<MvASSIGN NAME = "l.change" VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Integer( l.productsubscriptionterm_order, 'R', 'id',				l.change:id )		OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Integer( l.productsubscriptionterm_order, 'R', 'offset',			l.change:offset )	OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Integer( l.productsubscriptionterm_order, 'R', 'original_offset',	l.change:original_offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.change:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Element_FieldError( l.productsubscriptionterm_order, '', g.Validation_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.change_count" 	VALUE = "{ miva_array_insert_var( l.changes, l.change, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.change_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_SUB_DB ].ProductSubscriptionTermList_Update_Offsets( l.product:id, l.changes, l.change_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00062', 'Product Subscription Term sort order updated' ) }">
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Subscriptions
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Subscription" PARAMETERS = "subscription var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.formatted_tax"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.subscription:tax ) }">
	<MvASSIGN NAME = "l.formatted_shipping"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.subscription:shipping ) }">
	<MvASSIGN NAME = "l.formatted_subtotal"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.subscription:subtotal ) }">
	<MvASSIGN NAME = "l.formatted_total"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.subscription:total ) }">

	"id":					<MvEVAL EXPR = "{ int( l.subscription:id ) }">,
	"order_id":				<MvEVAL EXPR = "{ int( l.subscription:order_id ) }">,
	"line_id":				<MvEVAL EXPR = "{ int( l.subscription:line_id ) }">,
	"cust_id":				<MvEVAL EXPR = "{ int( l.subscription:cust_id ) }">,
	"custpc_id":			<MvEVAL EXPR = "{ int( l.subscription:custpc_id ) }">,
	"product_id":			<MvEVAL EXPR = "{ int( l.subscription:product_id ) }">,
	"subterm_id":			<MvEVAL EXPR = "{ int( l.subscription:subterm_id ) }">,
	"addr_id":				<MvEVAL EXPR = "{ int( l.subscription:addr_id ) }">,
	"ship_id":				<MvEVAL EXPR = "{ int( l.subscription:ship_id ) }">,
	"ship_data":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscription:ship_data ) }">",
	"quantity":				<MvEVAL EXPR = "{ int( l.subscription:quantity ) }">,
	"termrem":				<MvEVAL EXPR = "{ int( l.subscription:termrem ) }">,
	"termproc":				<MvEVAL EXPR = "{ int( l.subscription:termproc ) }">,
	"firstdate":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.subscription:firstdate ) }">,
	"lastdate":				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.subscription:lastdate ) }">,
	"nextdate":				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.subscription:nextdate ) }">,
	"status":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscription:status ) }">",
	"message":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscription:message ) }">",
	"cncldate":				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.subscription:cncldate ) }">,
	"tax":					<MvEVAL EXPR = "{ l.subscription:tax ROUND 2 }">,
	"formatted_tax":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_tax ) }">",
	"shipping":				<MvEVAL EXPR = "{ l.subscription:shipping ROUND 2 }">,
	"formatted_shipping":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_shipping ) }">",
	"subtotal":				<MvEVAL EXPR = "{ l.subscription:subtotal ROUND 2 }">,
	"formatted_subtotal":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_subtotal ) }">",
	"total":				<MvEVAL EXPR = "{ l.subscription:total ROUND 2 }">,
	"formatted_total":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.formatted_total ) }">",
	"authfails":			<MvEVAL EXPR = "{ int( l.subscription:authfails ) }">,
	"lastafail":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.subscription:lastafail ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseSubscription" PARAMETERS = "ondemandcolumns var, customfield_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_BaseSubscription_With_Query( l.null, l.ondemandcolumns, l.customfield_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseSubscription_With_Query" PARAMETERS = "query var, ondemandcolumns var, customfield_state var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ Subscriptions.d.ship_id EQ 0 }">
		<MvASSIGN NAME = "l.method"	VALUE = "Unknown">
	<MvELSE>
		<MvIF EXPR = "{ g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ]:loaded EQ 0 }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( Subscriptions.d.ship_id, g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ] ) }">
				<MvASSIGN NAME = "g.Session:basesubscriptionlist:cached_modules" INDEX = "{ Subscriptions.d.ship_id }" MEMBER = "loaded" VALUE = 1>
			<MvELSE>
				<MvASSIGN NAME = "g.Session:basesubscriptionlist:cached_modules" INDEX = "{ Subscriptions.d.ship_id }" MEMBER = "loaded" VALUE = -1>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ]:loaded EQ -1 }">
			<MvASSIGN NAME = "l.method" VALUE = "Unknown">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.module_methods" VARIABLE = "g.Session:basesubscriptionlist:cached_module_methods">
				<MvDIMENSION INDEX = "{ Subscriptions.d.ship_id }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ ISNULL l.module_methods:module_method_count }">
				<MvIF EXPR = "{ g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ]:api_ver LT 5.61 }">	<MvASSIGN NAME = "l.module_methods:module_method_count" VALUE = "{ [ g.Module_Root $ g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ]:module ].ShippingModule_Shipping_Methods( g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ], l.module_methods:methods ) }">
				<MvELSE>																										<MvASSIGN NAME = "l.module_methods:module_method_count" VALUE = "{ [ g.Module_Root $ g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ]:module ].ShippingModule_Enabled_Methods( g.Session:basesubscriptionlist:cached_modules[ Subscriptions.d.ship_id ], l.module_methods:methods ) }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ NOT miva_array_search( l.module_methods:methods, 1, l.search_method, 'l.search_method:code EQ Subscriptions.d.ship_data' ) }">
				<MvASSIGN NAME = "l.method" VALUE = "Unknown">
			<MvELSE>
				<MvASSIGN NAME = "l.method" VALUE = "{ l.search_method:name }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.product_formatted_price"	VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, Subscriptions.d.product_price ) }">
	<MvASSIGN NAME = "l.product_formatted_cost"		VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, Subscriptions.d.product_cost ) }">

	<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_DB ].Subscription_Read( l.subscription ) }">
	<MvEVAL EXPR = "{ JSON_Subscription( l.subscription ) }">

	, "frequency":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.frequency ) }">",
	"term":						<MvEVAL EXPR = "{ int( Subscriptions.d.term ) }">,
	"descrip":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.descrip ) }">",
	"n":						<MvEVAL EXPR = "{ int( Subscriptions.d.n ) }">,
	"fixed_dow":				<MvEVAL EXPR = "{ int( Subscriptions.d.fixed_dow ) }">,
	"fixed_dom":				<MvEVAL EXPR = "{ int( Subscriptions.d.fixed_dom ) }">,
	"sub_count":				<MvEVAL EXPR = "{ int( Subscriptions.d.sub_count ) }">,

	"method":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method ) }">",

	"product_code":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_code ) }">",
	"product_name":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_name ) }">",
	"product_sku":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_sku ) }">",
	"product_price":			<MvEVAL EXPR = "{ encodejavascriptnumber( Subscriptions.d.product_price ) }">,
	"product_formatted_price":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.product_formatted_price ) }">",
	"product_cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( Subscriptions.d.product_cost ) }">,
	"product_formatted_cost":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.product_formatted_cost ) }">",
	"product_weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( Subscriptions.d.product_weight ) }">,
	"product_formatted_weight":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( [ g.Module_Library_Utilities ].Format_Weight( Subscriptions.d.product_weight ) ) }">",

	<MvIF EXPR = "{ l.ondemandcolumns:product_descrip }">
		"product_descrip":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_descrip ) }">",
	</MvIF>

	"product_taxable":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Subscriptions.d.product_taxable ) }">,
	"product_thumbnail":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_thumbnail ) }">",
	"product_image":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_image ) }">",
	"product_active":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Subscriptions.d.product_active ) }">,
	"product_dt_created":		<MvEVAL EXPR = "{ int( Subscriptions.d.product_dt_created ) }">,
	"product_dt_updated":		<MvEVAL EXPR = "{ int( Subscriptions.d.product_dt_updated ) }">,
	"product_page_title":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_page_title ) }">",
	"product_page_id":			<MvEVAL EXPR = "{ int( Subscriptions.d.product_page_id ) }">,
	"product_page_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_page_code ) }">",
	"product_cancat_id":		<MvEVAL EXPR = "{ int( Subscriptions.d.product_cancat_id ) }">,
	"product_cancat_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.product_cancat_code ) }">",
	"product_inventory_active":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Subscriptions.d.product_inventory_active ) }">,
	"product_inventory":		<MvEVAL EXPR = "{ int( Subscriptions.d.product_inventory ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:imagetype_count }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			, "imagetype:<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.imagetype:code ) }">": <MvEVAL EXPR = "{ int( miva_variable_value( 'Subscriptions.d.product_image_' $ l.imagetype:id ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.query, l.customfield_state, Subscriptions.d.product_id, 'Subscriptions' ) }">

	, "paymentcard_lastfour":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.paymentcard_lastfour ) }">",
	"paymentcard_type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.paymentcard_type ) }">",

	"address_descrip":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_descrip ) }">",
	"address_fname":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_fname ) }">",
	"address_lname":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_lname ) }">",
	"address_email":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_email ) }">",
	"address_comp":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_comp ) }">",
	"address_phone":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_phone ) }">",
	"address_fax":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_fax ) }">",

	<MvIF EXPR = "{ ISNULL Subscriptions.d.address_addr2 }">
		"address_addr":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_addr ) }">",
	<MvELSE>
		"address_addr":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_addr $ ' ' $ Subscriptions.d.address_addr2 ) }">",
	</MvIF>

	"address_addr1":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_addr ) }">",
	"address_addr2":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_addr2 ) }">",
	"address_city":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_city ) }">",
	"address_state":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_state ) }">",
	"address_zip":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_zip ) }">",
	"address_cntry":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.address_cntry ) }">",
	"address_resdntl":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Subscriptions.d.address_resdntl ) }">,

	"customer_id":				<MvEVAL EXPR = "{ int( Subscriptions.d.customer_id ) }">,
	"customer_login":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.customer_login ) }">",
	"customer_pw_email":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.customer_pw_email ) }">",
	"customer_business_title":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Subscriptions.d.customer_business_title ) }">",

	"options":
	[
		<MvASSIGN NAME = "l.subscriptionoption_count" VALUE = 0>
		<MvFOREACH ITERATOR = "l.subscriptionoption" ARRAY = "l.subscriptionoptions" COUNT = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( Subscriptions.d.id, l.subscriptionoptions ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.subscriptionoption_count ) }">
				"subscrp_id":		<MvEVAL EXPR = "{ int( l.subscriptionoption:subscrp_id ) }">,
				"templ_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscriptionoption:templ_code ) }">",
				"attr_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscriptionoption:attr_code ) }">",
				"value":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscriptionoption:value ) }">"
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseSubscriptionList_Filters" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.available_filters" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sub.id',			'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sub.order_id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sub.quantity',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sub.termrem',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sub.termproc',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'sub.firstdate',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'sub.lastdate',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'sub.nextdate',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sub.status',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MEMO(		l.available_filters, 'sub.message',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'sub.cncldate',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'sub.tax',			'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'sub.shipping',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'sub.subtotal',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'sub.total',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sub.authfails',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'sub.lastafail',	'' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pst.frequency',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.term',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pst.descrip',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.n',			'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.fixed_dow',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.fixed_dom',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pst.sub_count',	'' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'cust.id',			'customer_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.login',		'customer_login' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'cust.pw_email',	'customer_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'ba.title',		'customer_business_title' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'prod.code',		'product_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'prod.name',		'product_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'prod.sku',		'product_sku' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'prod.price',		'product_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'prod.cost',		'product_cost' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'prod.weight',		'product_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MEMO(		l.available_filters, 'prod.descrip',	'product_descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'prod.taxable',	'product_taxable' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'prod.thumbnail',	'product_thumbnail' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'prod.image',		'product_image' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'prod.active',		'product_active' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'prod.page_title',	'product_page_title' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'cat.code',		'product_cancat_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pbv.code',		'product_page_code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.descrip',	'address_descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.fname',		'address_fname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.lname',		'address_lname' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.email',		'address_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.phone',		'address_phone' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.fax',		'address_fax' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.comp',		'address_comp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.addr',		'address_addr1' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.addr2',		'address_addr2' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.city',		'address_city' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.state',		'address_state' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.zip',		'address_zip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'addr.cntry',		'address_cntry' ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.available_filters }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseSubscriptionList_OrderBy" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "sub.id, sub.order_id, custpc_id:pct.type/paymentcard_type/null_char;cpc.lastfour/paymentcard_lastfour/null_char;sub.custpc_id, sub.quantity, sub.termrem, sub.termproc, sub.firstdate,
							   sub.lastdate, sub.nextdate, sub.status, sub.message, sub.cncldate, sub.tax, sub.shipping, sub.subtotal, sub.total, sub.authfails, sub.lastafail,
							   pst.frequency, pst.term, pst.descrip, n:pst.n;pst.frequency, pst.fixed_dow, pst.fixed_dom, pst.sub_count,
							   customer_id:cust.id, customer_login:cust.login, customer_pw_email:cust.pw_email, customer_business_title:ba.title:null_char,
							   product_code:prod.code, product_name:prod.name, product_sku:prod.sku, product_cancat_code:cat.code:null_char, product_page_code:pbv.code:null_char, product_price:prod.price,product_cost:prod.cost,
							   product_weight:prod.weight, product_descrip:prod.descrip, product_taxable:prod.taxable, product_thumbnail:prod.thumbnail, product_image:prod.image, product_active:prod.active, product_page_title:prod.page_title,
							   address_descrip:addr.descrip, address_fname:addr.fname, address_lname:addr.lname, address_email:addr.email, address_phone:addr.phone, address_fax:addr.fax, address_comp:addr.comp, address_addr1:addr.addr,
							   address_addr2:addr.addr2, address_city:addr.city, address_state:addr.state, address_zip:addr.zip, address_cntry:addr.cntry">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.inventory_column"	VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'sub.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pst.frequency,
																				 pst.term,
																				 pst.descrip,
																				 pst.n,
																				 pst.fixed_dow,
																				 pst.fixed_dom,
																				 pst.sub_count' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'prod.code 			AS product_code,
																				 prod.name 			AS product_name,
																				 prod.sku 			AS product_sku,
																				 prod.price 		AS product_price,
																				 prod.cost 			AS product_cost,
																				 prod.weight 		AS product_weight,
																				 prod.descrip 		AS product_descrip,
																				 prod.taxable 		AS product_taxable,
																				 prod.thumbnail 	AS product_thumbnail,
																				 prod.image 		AS product_image,
																				 prod.active 		AS product_active,
																				 prod.dt_created	AS product_dt_created,
																				 prod.dt_updated	AS product_dt_updated,
																				 prod.page_code 	AS product_page_code,
																				 prod.page_title	AS product_page_title,
																				 prod.cancat_id 	AS product_cancat_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query,	'pbv.page_id',	'product_page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR(	 l.search_query,	'cat.code',		'product_cancat_code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cpc.lastfour',		'paymentcard_lastfour' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'pct.type',			'paymentcard_type' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'cust.id			AS customer_id,
																				 cust.login			AS customer_login,
																				 cust.pw_email		AS customer_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',			'customer_business_title' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'addr.descrip		AS address_descrip,
																				 addr.fname			AS address_fname,
																				 addr.lname			AS address_lname,
																				 addr.email			AS address_email,
																				 addr.comp			AS address_comp,
																				 addr.phone			AS address_phone,
																				 addr.fax			AS address_fax,
																				 addr.addr			AS address_addr,
																				 addr.addr2			AS address_addr2,
																				 addr.city			AS address_city,
																				 addr.state			AS address_state,
																				 addr.zip			AS address_zip,
																				 addr.cntry			AS address_cntry,
																				 addr.resdntl		AS address_resdntl' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Subscriptions',			'sub' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Products',				'prod' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Customers',				'cust' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'ProductSubscriptionTerms',	'pst',	'sub.subterm_id = pst.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerPaymentCards',		'cpc',	'sub.custpc_id = cpc.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'PaymentCardTypes',			'pct',	'cpc.type_id = pct.id',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerAddresses',			'addr',	'sub.addr_id = addr.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'PageBranchVersions',		'pbv',	'prod.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'prod.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'Categories',				'cat',	'prod.cancat_id = cat.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust',	g.Store_Table_Prefix $ 'BusinessAccounts',			'ba',	'cust.account_id = ba.id',	'' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'sub.cust_id		= cust.id	AND
																				sub.product_id	= prod.id', '' ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
					[ g.Module_Feature_INV_DB ].InventorySettings_Load( l.inventory_settings ) AND
					l.inventory_settings:active }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER(	l.search_query, 'ipc.inventory',	'product_inventory' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_BOOL(		l.search_query, 'ips.active',		'product_inventory_active' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'prod.id = ips.product_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'prod.id = ipc.product_id', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER( l.available_filters, 'ips.active;ipc.inventory', 'product_inventory' ) }">

		<MvASSIGN NAME = "l.available_filters"		VALUE = "{ ',' $ l.available_filters }">
		<MvASSIGN NAME = "l.inventory_column"		VALUE = ", product_inventory:ips.active/product_inventory_active/null_bool;ipc.inventory/product_inventory/null_integer">
	</MvIF>

	<MvASSIGN NAME = "l.filters" VALUE = "{ JSON_BaseSubscriptionList_Filters() $ l.available_filters }">
	<MvASSIGN NAME = "l.orderby" VALUE = "{ JSON_BaseSubscriptionList_OrderBy() $ l.inventory_column }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filters, g.Module_Feature_SUB_JSON, 'JSON_SubscriptionList_Load_Query_Filter', 'JSON_SubscriptionList_Load_Query_Search_Filter', 'JSON_SubscriptionList_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:imagetype_count }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			<MvASSIGN NAME = "l.imagetype_id" VALUE = "{ int( l.imagetype:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pi_' $ l.imagetype_id $ '.image_id', 'product_image_' $ l.imagetype_id ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'ProductImages', 'pi_' $ l.imagetype_id, 'pi_' $ l.imagetype_id $ '.product_id = prod.id AND pi_' $ l.imagetype_id $ '.type_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.imagetype:id ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Product_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby, 'sub.id', g.Module_JSON, 'JSON_Product_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Subscriptions', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00039', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.subscription_count LT l.count ) ) AND ( NOT Subscriptions.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.subscription_count ) }">
			<MvEVAL EXPR = "{ JSON_BaseSubscription_With_Query( l.search_query, l.ondemandcolumns, l.customfield_state ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Subscriptions" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Subscriptions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomerSubscriptionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.inventory_column"	VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'sub.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pst.frequency,
																				 pst.term,
																				 pst.descrip,
																				 pst.n,
																				 pst.fixed_dow,
																				 pst.fixed_dom,
																				 pst.sub_count' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'prod.code 			AS product_code,
																				 prod.name 			AS product_name,
																				 prod.sku 			AS product_sku,
																				 prod.price 		AS product_price,
																				 prod.cost 			AS product_cost,
																				 prod.weight 		AS product_weight,
																				 prod.descrip 		AS product_descrip,
																				 prod.taxable 		AS product_taxable,
																				 prod.thumbnail 	AS product_thumbnail,
																				 prod.image 		AS product_image,
																				 prod.active 		AS product_active,
																				 prod.dt_created	AS product_dt_created,
																				 prod.dt_updated	AS product_dt_updated,
																				 prod.page_code 	AS product_page_code,
																				 prod.page_title	AS product_page_title,
																				 prod.cancat_id 	AS product_cancat_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id',	'product_page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query,	 'cat.code',	'product_cancat_code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cpc.lastfour',	'paymentcard_lastfour' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'pct.type',		'paymentcard_type' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'cust.id			AS customer_id,
																				 cust.login			AS customer_login,
																				 cust.pw_email		AS customer_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',		'customer_business_title' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'addr.descrip		AS address_descrip,
																				 addr.fname			AS address_fname,
																				 addr.lname			AS address_lname,
																				 addr.email			AS address_email,
																				 addr.comp			AS address_comp,
																				 addr.phone			AS address_phone,
																				 addr.fax			AS address_fax,
																				 addr.addr			AS address_addr,
																				 addr.addr2			AS address_addr2,
																				 addr.city			AS address_city,
																				 addr.state			AS address_state,
																				 addr.zip			AS address_zip,
																				 addr.cntry			AS address_cntry,
																				 addr.resdntl		AS address_resdntl' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Subscriptions',			'sub' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Products',				'prod' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Customers',				'cust' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'ProductSubscriptionTerms',	'pst',	'sub.subterm_id = pst.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerPaymentCards',		'cpc',	'sub.custpc_id = cpc.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'PaymentCardTypes',			'pct',	'cpc.type_id = pct.id',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerAddresses',			'addr',	'sub.addr_id = addr.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'PageBranchVersions',		'pbv',	'prod.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'prod.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'Categories',				'cat',	'prod.cancat_id = cat.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust',	g.Store_Table_Prefix $ 'BusinessAccounts',			'ba',	'cust.account_id = ba.id',	'' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'sub.cust_id		= ?			AND
																				sub.cust_id		= cust.id	AND
																				sub.product_id	= prod.id',
																				[ g.Module_Library_DB ].SQL_Query_Field( l.customer:id ) ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
					[ g.Module_Feature_INV_DB ].InventorySettings_Load( l.inventory_settings ) AND
					l.inventory_settings:active }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER(	l.search_query, 'ipc.inventory',	'product_inventory' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_BOOL(		l.search_query, 'ips.active',		'product_inventory_active' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'prod.id = ips.product_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'prod.id = ipc.product_id', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER( l.available_filters, 'ips.active;ipc.inventory', 'product_inventory' ) }">

		<MvASSIGN NAME = "l.available_filters"		VALUE = "{ ',' $ l.available_filters }">
		<MvASSIGN NAME = "l.inventory_column"		VALUE = ", product_inventory:ips.active/product_inventory_active/null_bool;ipc.inventory/product_inventory/null_integer">
	</MvIF>

	<MvASSIGN NAME = "l.filters" VALUE = "{ JSON_BaseSubscriptionList_Filters() $ l.available_filters }">
	<MvASSIGN NAME = "l.orderby" VALUE = "{ JSON_BaseSubscriptionList_OrderBy() $ l.inventory_column }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filters, g.Module_Feature_SUB_JSON, 'JSON_SubscriptionList_Load_Query_Filter', 'JSON_SubscriptionList_Load_Query_Search_Filter', 'JSON_SubscriptionList_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:imagetype_count }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			<MvASSIGN NAME = "l.imagetype_id" VALUE = "{ int( l.imagetype:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pi_' $ l.imagetype_id $ '.image_id', 'product_image_' $ l.imagetype_id ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'ProductImages', 'pi_' $ l.imagetype_id, 'pi_' $ l.imagetype_id $ '.product_id = prod.id AND pi_' $ l.imagetype_id $ '.type_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.imagetype:id ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Product_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby, 'sub.id', g.Module_JSON, 'JSON_Product_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Subscriptions', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00008', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.subscription_count LT l.count ) ) AND ( NOT Subscriptions.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.subscription_count ) }">
			<MvEVAL EXPR = "{ JSON_BaseSubscription_With_Query( l.search_query, l.ondemandcolumns, l.customfield_state ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Subscriptions" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Subscriptions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductCustomerSubscriptionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.inventory_column"	VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'sub.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pst.frequency,
																				 pst.term,
																				 pst.descrip,
																				 pst.n,
																				 pst.fixed_dow,
																				 pst.fixed_dom,
																				 pst.sub_count' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'prod.code 			AS product_code,
																				 prod.name 			AS product_name,
																				 prod.sku 			AS product_sku,
																				 prod.price 		AS product_price,
																				 prod.cost 			AS product_cost,
																				 prod.weight 		AS product_weight,
																				 prod.descrip 		AS product_descrip,
																				 prod.taxable 		AS product_taxable,
																				 prod.thumbnail 	AS product_thumbnail,
																				 prod.image 		AS product_image,
																				 prod.active 		AS product_active,
																				 prod.dt_created	AS product_dt_created,
																				 prod.dt_updated	AS product_dt_updated,
																				 prod.page_code 	AS product_page_code,
																				 prod.page_title	AS product_page_title,
																				 prod.cancat_id 	AS product_cancat_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id',	'product_page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query,	 'cat.code',	'product_cancat_code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cpc.lastfour',	'paymentcard_lastfour' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'pct.type',		'paymentcard_type' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'cust.id			AS customer_id,
																				 cust.login			AS customer_login,
																				 cust.pw_email		AS customer_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',		'customer_business_title' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'addr.descrip		AS address_descrip,
																				 addr.fname			AS address_fname,
																				 addr.lname			AS address_lname,
																				 addr.email			AS address_email,
																				 addr.comp			AS address_comp,
																				 addr.phone			AS address_phone,
																				 addr.fax			AS address_fax,
																				 addr.addr			AS address_addr,
																				 addr.addr2			AS address_addr2,
																				 addr.city			AS address_city,
																				 addr.state			AS address_state,
																				 addr.zip			AS address_zip,
																				 addr.cntry			AS address_cntry,
																				 addr.resdntl		AS address_resdntl' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Subscriptions',			'sub' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Products',				'prod' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Customers',				'cust' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'ProductSubscriptionTerms',	'pst',	'sub.subterm_id = pst.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerPaymentCards',		'cpc',	'sub.custpc_id = cpc.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'PaymentCardTypes',			'pct',	'cpc.type_id = pct.id',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerAddresses',			'addr',	'sub.addr_id = addr.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'PageBranchVersions',		'pbv',	'prod.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'prod.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'Categories',				'cat',	'prod.cancat_id = cat.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust',	g.Store_Table_Prefix $ 'BusinessAccounts',			'ba',	'cust.account_id = ba.id',	'' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'sub.cust_id		= cust.id	AND
																				sub.product_id	= prod.id	AND
																				sub.product_id	= ?',
															   [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
					[ g.Module_Feature_INV_DB ].InventorySettings_Load( l.inventory_settings ) AND
					l.inventory_settings:active }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER(	l.search_query, 'ipc.inventory',	'product_inventory' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_BOOL(		l.search_query, 'ips.active',		'product_inventory_active' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'prod.id = ips.product_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'prod.id = ipc.product_id', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER( l.available_filters, 'ips.active;ipc.inventory', 'product_inventory' ) }">

		<MvASSIGN NAME = "l.available_filters"		VALUE = "{ ',' $ l.available_filters }">
		<MvASSIGN NAME = "l.inventory_column"		VALUE = ", product_inventory:ips.active/product_inventory_active/null_bool;ipc.inventory/product_inventory/null_integer">
	</MvIF>

	<MvASSIGN NAME = "l.filters" VALUE = "{ JSON_BaseSubscriptionList_Filters() $ l.available_filters }">
	<MvASSIGN NAME = "l.orderby" VALUE = "{ JSON_BaseSubscriptionList_OrderBy() $ l.inventory_column }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.search_query, l.filter, l.filters, g.Module_Feature_SUB_JSON, 'JSON_SubscriptionList_Load_Query_Filter', '', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:imagetype_count }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			<MvASSIGN NAME = "l.imagetype_id" VALUE = "{ int( l.imagetype:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pi_' $ l.imagetype_id $ '.image_id', 'product_image_' $ l.imagetype_id ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'ProductImages', 'pi_' $ l.imagetype_id, 'pi_' $ l.imagetype_id $ '.product_id = prod.id AND pi_' $ l.imagetype_id $ '.type_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.imagetype:id ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort, l.orderby, 'sub.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Subscriptions', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00028', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.subscription_count LT l.count ) ) AND ( NOT Subscriptions.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.subscription_count ) }">
			<MvEVAL EXPR = "{ JSON_BaseSubscription_With_Query( l.search_query, l.ondemandcolumns, l.customfield_state ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Subscriptions" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Subscriptions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductSubscriptionTermSubscriptionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.inventory_column"	VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'sub.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pst.frequency,
																				 pst.term,
																				 pst.descrip,
																				 pst.n,
																				 pst.fixed_dow,
																				 pst.fixed_dom,
																				 pst.sub_count' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'prod.code 			AS product_code,
																				 prod.name 			AS product_name,
																				 prod.sku 			AS product_sku,
																				 prod.price 		AS product_price,
																				 prod.cost 			AS product_cost,
																				 prod.weight 		AS product_weight,
																				 prod.descrip 		AS product_descrip,
																				 prod.taxable 		AS product_taxable,
																				 prod.thumbnail 	AS product_thumbnail,
																				 prod.image 		AS product_image,
																				 prod.active 		AS product_active,
																				 prod.dt_created	AS product_dt_created,
																				 prod.dt_updated	AS product_dt_updated,
																				 prod.page_code 	AS product_page_code,
																				 prod.page_title	AS product_page_title,
																				 prod.cancat_id 	AS product_cancat_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id',	'product_page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query,	 'cat.code',	'product_cancat_code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cpc.lastfour',	'paymentcard_lastfour' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'pct.type',		'paymentcard_type' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'cust.id			AS customer_id,
																				 cust.login			AS customer_login,
																				 cust.pw_email		AS customer_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',		'customer_business_title' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'addr.descrip		AS address_descrip,
																				 addr.fname			AS address_fname,
																				 addr.lname			AS address_lname,
																				 addr.email			AS address_email,
																				 addr.comp			AS address_comp,
																				 addr.phone			AS address_phone,
																				 addr.fax			AS address_fax,
																				 addr.addr			AS address_addr,
																				 addr.addr2			AS address_addr2,
																				 addr.city			AS address_city,
																				 addr.state			AS address_state,
																				 addr.zip			AS address_zip,
																				 addr.cntry			AS address_cntry,
																				 addr.resdntl		AS address_resdntl' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Subscriptions',			'sub' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Products',				'prod' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Customers',				'cust' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'ProductSubscriptionTerms',	'pst',	'sub.subterm_id = pst.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerPaymentCards',		'cpc',	'sub.custpc_id = cpc.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'PaymentCardTypes',			'pct',	'cpc.type_id = pct.id',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sub',		g.Store_Table_Prefix $ 'CustomerAddresses',			'addr',	'sub.addr_id = addr.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'PageBranchVersions',		'pbv',	'prod.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'prod.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod',	g.Store_Table_Prefix $ 'Categories',				'cat',	'prod.cancat_id = cat.id',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust',	g.Store_Table_Prefix $ 'BusinessAccounts',			'ba',	'cust.account_id = ba.id',	'' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'sub.cust_id		= cust.id	AND
																				sub.product_id	= prod.id	AND
																				sub.product_id	= ?			AND
																				sub.subterm_id	= ?', [ g.Module_Library_DB ].SQL_Query_Field( l.productsubscriptionterm:product_id ) $ ',' $ [ g.Module_Library_DB ].SQL_Query_Field( l.productsubscriptionterm:id ) ) }">

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
					[ g.Module_Feature_INV_DB ].InventorySettings_Load( l.inventory_settings ) AND
					l.inventory_settings:active }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER(	l.search_query, 'ipc.inventory',	'product_inventory' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_BOOL(		l.search_query, 'ips.active',		'product_inventory_active' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'prod.id = ips.product_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts',	'ipc', 'prod.id = ipc.product_id', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER( l.available_filters, 'ips.active;ipc.inventory', 'product_inventory' ) }">

		<MvASSIGN NAME = "l.available_filters"		VALUE = "{ ',' $ l.available_filters }">
		<MvASSIGN NAME = "l.inventory_column"		VALUE = ", product_inventory:ips.active/product_inventory_active/null_bool;ipc.inventory/product_inventory/null_integer">
	</MvIF>

	<MvASSIGN NAME = "l.filters" VALUE = "{ JSON_BaseSubscriptionList_Filters() $ l.inventory_column }">
	<MvASSIGN NAME = "l.orderby" VALUE = "{ JSON_BaseSubscriptionList_OrderBy() $ l.inventory_column }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.search_query, l.filter, l.filters, g.Module_Feature_SUB_JSON, 'JSON_SubscriptionList_Load_Query_Filter', '', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:imagetype_count }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			<MvASSIGN NAME = "l.imagetype_id" VALUE = "{ int( l.imagetype:id ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pi_' $ l.imagetype_id $ '.image_id', 'product_image_' $ l.imagetype_id ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'ProductImages', 'pi_' $ l.imagetype_id, 'pi_' $ l.imagetype_id $ '.product_id = prod.id AND pi_' $ l.imagetype_id $ '.type_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.imagetype:id ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort, l.orderby, 'sub.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Subscriptions', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00029', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.subscription_count LT l.count ) ) AND ( NOT Subscriptions.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.subscription_count ) }">
			<MvEVAL EXPR = "{ JSON_BaseSubscription_With_Query( l.search_query, l.ondemandcolumns, l.customfield_state ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Subscriptions" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Subscriptions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_Load_Query_Filter" PARAMETERS = "query var, field_count var, filter_name, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'ondemandcolumns' }">
		<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter_value">
			<MvIF EXPR = "{ ISNULL l.column_code }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ ( 'imagetype:' CIN l.column_code ) NE 1 }">
				<MvASSIGN NAME = "l.data" MEMBER = "{ l.column_code }"	VALUE = 1>
			<MvELSEIF EXPR = "{ [ g.Module_Admin ].CanI( 'IMGS', 1, 0, 0, 0 ) }">
				<MvASSIGN NAME = "l.imagetype_code"						VALUE = "{ substring_var( l.column_code, 11, len_var( l.column_code ) - 10 ) }">

				<MvIF EXPR = "{ NOT miva_array_search( l.data:imagetypes, 1, l.search_imagetype, 'strcasecmp( l.search_imagetype:code, l.imagetype_code ) EQ 0' ) }">
					<MvIF EXPR = "{ [ g.Module_Library_DB ].ImageType_Load_Code( l.imagetype_code, l.imagetype ) }">
						<MvASSIGN NAME = "l.data:imagetype_count"		VALUE = "{ miva_array_insert_var( l.data:imagetypes, l.imagetype, -1 ) }">
					</MvIF>
				</MvIF>
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_Load_Query_Search_Filter" PARAMETERS = "query var, field_count var, search_field, search_operator, search_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.search_field EQ 'product_inventory' }">
		<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
						[ g.Module_Feature_INV_DB ].InventorySettings_Load_Cached( l.inventory_settings ) AND
						l.inventory_settings:active }">
			<MvIF EXPR = "{ l.search_operator EQ 'NA' }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ips.active = 0 OR ips.active IS NULL )', '' ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'ips.active = 1', '' ) }">

				<MvIF EXPR = "{ l.search_operator EQ 'IN' OR
								l.search_operator EQ 'NOT_IN' }">		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Search_Filter_CommaSeparatedList_With_Type( l.query, 'INTEGER', 'ipc.inventory', l.search_field, l.search_operator, l.search_value ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'EQ' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_EQ(			'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'GT' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_GT( 		'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'GE' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_GE( 		'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'LIKE' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_LIKE(		'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'NOTLIKE' }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_NOTLIKE(	'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'NE' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_NE(			'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'LT' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_LT(			'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				<MvELSEIF EXPR = "{ l.search_operator EQ 'LE' }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, [ g.Module_Library_Native_DBAPI ].DB_Filter_LE(			'INTEGER', 'ipc.inventory', l.search_value ), [ g.Module_Library_DB ].SQL_Query_Field( l.search_value ) ) }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END_Clause( l.query, 'OR', 'AND' ) }">
			</MvIF>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_CustomFields_Query_Filter" PARAMETERS = "query var, field_count var, module var, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Query_Filter( l.query, l.field_count, l.module, l.filter_name, l.filter_operator, l.filter_value, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_Validate_Insert" PARAMETERS = "subscription_withoptions var, customer var, customeraddress var, paymentcard var, product var, productsubscriptionterm var, shipping_module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.subscription_withoptions:id"				VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:ship_id"			VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:ship_data"			VALUE = "">
	<MvASSIGN NAME = "l.subscription_withoptions:custpc_id"			VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:tax"				VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:shipping"			VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:subtotal"			VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:total"				VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:options"			VALUE = "">
	<MvASSIGN NAME = "l.subscription_withoptions:option_count"		VALUE = 0>
	<MvASSIGN NAME = "l.customer"									VALUE = "">
	<MvASSIGN NAME = "l.customeraddress"							VALUE = "">
	<MvASSIGN NAME = "l.paymentcard"								VALUE = "">
	<MvASSIGN NAME = "l.product"									VALUE = "">
	<MvASSIGN NAME = "l.productsubscriptionterm"					VALUE = "">
	<MvASSIGN NAME = "l.shipping_module"							VALUE = "">
	<MvASSIGN NAME = "l.attributes"									VALUE = "">
	<MvASSIGN NAME = "l.attribute_count"							VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_withoptions:cust_id"			VALUE = "{ l.customer:id }">
	
	<MvIF EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_CustomerAddress_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_CustomerAddress_Load( l.customeraddress ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.customer:ship_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID( l.customer:ship_id, l.customeraddress ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.customeraddress }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00084', 'The specified customer does not have a default address, so one of Address_ID or CustomerAddress_ID must be specified' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.customeraddress:cust_id NE l.subscription_withoptions:cust_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00065', 'Customer Address not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_withoptions:addr_id"			VALUE = "{ l.customeraddress:id }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load_WithRuntimeInventory( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_withoptions:product_id"		VALUE = "{ l.product:id }">

	<MvIF EXPR = "{ NOT JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.productsubscriptionterm:product_id NE l.subscription_withoptions:product_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00066', 'Product subscription term not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_withoptions:subterm_id"		VALUE = "{ l.productsubscriptionterm:id }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer(	'R:positive',	'Quantity',			l.subscription_withoptions:quantity )	OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'R',			'NextDate',			l.subscription_withoptions:nextdate )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O',			'PaymentCard_ID',	l.subscription_withoptions:custpc_id )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O',			'Ship_ID',			l.subscription_withoptions:ship_id )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',			'Ship_Data',		l.subscription_withoptions:ship_data ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Attributes' ) }">
		<MvFOREACH ITERATOR = "l.input_attribute" ARRAY = "l.input_attributes" COUNT = "{ [ g.Module_JSON ].JSON_Input_Array( 'Attributes', l.input_attributes ) }">
			<MvASSIGN NAME = "l.attribute"							VALUE = "">
			<MvASSIGN NAME = "l.attribute:code"						VALUE = "">
			<MvASSIGN NAME = "l.attribute:template_code"			VALUE = "">
			<MvASSIGN NAME = "l.attribute:value"					VALUE = "">

			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_attribute, 'o', 'code',			l.attribute:code )			OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_attribute, 'o', 'template_code',	l.attribute:template_code )	OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_attribute, 'o', 'value',			l.attribute:value ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.attribute_count"					VALUE = "{ miva_array_insert_var( l.attributes, l.attribute, -1 ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Attribute_Codes',	l.attribute_codes ) OR
						[ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Template_Codes',	l.template_codes )	OR
						[ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Values',			l.values ) }">
		<MvASSIGN NAME = "l.attribute_count"						VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String( l.attribute_codes,	l.attributes, 'code' ) }">
		<MvASSIGN NAME = "l.null"									VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String( l.template_codes,	l.attributes, 'template_code' ) }">
		<MvASSIGN NAME = "l.null"									VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String( l.values,			l.attributes, 'value' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Subscription_Validate_LowLevel( l.subscription_withoptions, l.attributes, l.attribute_count, l.customer, l.customeraddress, l.paymentcard, l.product, l.productsubscriptionterm, l.shipping_module ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_Validate_Update" PARAMETERS = "subscription_withoptions var, customer var, customeraddress var, paymentcard var, product var, productsubscriptionterm var, shipping_module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.subscription_withoptions:tax"				VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:shipping"			VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:subtotal"			VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:total"				VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:options"			VALUE = "">
	<MvASSIGN NAME = "l.subscription_withoptions:option_count"		VALUE = 0>
	<MvASSIGN NAME = "l.customer"									VALUE = "">
	<MvASSIGN NAME = "l.customeraddress"							VALUE = "">
	<MvASSIGN NAME = "l.paymentcard"								VALUE = "">
	<MvASSIGN NAME = "l.product"									VALUE = "">
	<MvASSIGN NAME = "l.productsubscriptionterm"					VALUE = "">
	<MvASSIGN NAME = "l.shipping_module"							VALUE = "">
	<MvASSIGN NAME = "l.attributes"									VALUE = "">
	<MvASSIGN NAME = "l.attribute_count"							VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.subscription_withoptions:cust_id, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00067', 'Customer not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_CustomerAddress_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_CustomerAddress_Load( l.customeraddress ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.customeraddress:cust_id NE l.subscription_withoptions:cust_id }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00068', 'Customer Address not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.subscription_withoptions:addr_id"		VALUE = "{ l.customeraddress:id }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID( l.subscription_withoptions:addr_id, l.customeraddress ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00069', 'Customer Address not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Product_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load_WithRuntimeInventory( l.product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.subscription_withoptions:product_id"	VALUE = "{ l.product:id }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID_WithRuntimeInventory( l.subscription_withoptions:product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00070', 'Product not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_ProductSubscriptionTerm_Loaders_Present() }">
		<MvIF EXPR = "{ NOT JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.subscription_withoptions:subterm_id"	VALUE = "{ l.productsubscriptionterm:id }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID( l.subscription_withoptions:subterm_id, l.productsubscriptionterm ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00071', 'Product subscription term not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.productsubscriptionterm:product_id NE l.subscription_withoptions:product_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'MER-SUB-JSN-00072', 'Product subscription term not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer(	'O:positive',	'Quantity',			l.subscription_withoptions:quantity )	OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'O',			'NextDate',			l.subscription_withoptions:nextdate )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O',			'PaymentCard_ID',	l.subscription_withoptions:custpc_id )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O',			'Ship_ID',			l.subscription_withoptions:ship_id )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',			'Ship_Data',		l.subscription_withoptions:ship_data ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Attributes' ) }">
		<MvFOREACH ITERATOR = "l.input_attribute" ARRAY = "l.input_attributes" COUNT = "{ [ g.Module_JSON ].JSON_Input_Array( 'Attributes', l.input_attributes ) }">
			<MvASSIGN NAME = "l.attribute"							VALUE = "">
			<MvASSIGN NAME = "l.attribute:code"						VALUE = "">
			<MvASSIGN NAME = "l.attribute:template_code"			VALUE = "">
			<MvASSIGN NAME = "l.attribute:value"					VALUE = "">

			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_attribute, 'o', 'code',			l.attribute:code )			OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_attribute, 'o', 'template_code',	l.attribute:template_code )	OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_attribute, 'o', 'value',			l.attribute:value ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.attribute_count"					VALUE = "{ miva_array_insert_var( l.attributes, l.attribute, -1 ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Attribute_Codes',	l.attribute_codes ) OR
						[ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Template_Codes',	l.template_codes )	OR
						[ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Values',			l.values ) }">
		<MvASSIGN NAME = "l.attribute_count"						VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String( l.attribute_codes,	l.attributes, 'code' ) }">
		<MvASSIGN NAME = "l.null"									VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String( l.template_codes,	l.attributes, 'template_code' ) }">
		<MvASSIGN NAME = "l.null"									VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String( l.values,			l.attributes, 'value' ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.option_count"							VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription_withoptions:id, l.options ) }">
		<MvASSIGN NAME = "l.attribute_count"						VALUE = "{ [ g.Module_Feature_SUB_UT ].SubscriptionOptions_BuildAttributes( l.options, l.option_count, l.attributes ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Subscription_Validate_LowLevel( l.subscription_withoptions, l.attributes, l.attribute_count, l.customer, l.customeraddress, l.paymentcard, l.product, l.productsubscriptionterm, l.shipping_module ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_Validate_LowLevel" PARAMETERS = "subscription_withoptions var, attributes var, attribute_count, customer var, customeraddress var, paymentcard var, product var, productsubscriptionterm var, shipping_module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'NextDate' ) }">
		<MvIF EXPR = "{ l.subscription_withoptions:nextdate LT mktime_t( s.tm_year, s.tm_mon, s.tm_mday, 0, 0, 0, g.Merchant_Local_Timezone ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'NextDate', 'Invalid Next Order Date' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.productsubscriptionterm:frequency EQ 'dates' }">
		<MvASSIGN NAME = "l.productsubscriptionterm:productsubscriptiontermdate_count"	VALUE = "{ [ g.Module_Feature_SUB_DB ].ProductSubscriptionTermDateList_Load_ProductSubscriptionTerm( l.productsubscriptionterm:id, l.productsubscriptionterm:productsubscriptiontermdates ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.productsubscriptionterm:productsubscriptiontermdates"		VALUE = "">
		<MvASSIGN NAME = "l.productsubscriptionterm:productsubscriptiontermdate_count"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.subscription_withoptions:custpc_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID( l.subscription_withoptions:custpc_id, l.customer:id, l.paymentcard ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00073', 'Payment Card not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.product, 0, l.attributes, l.attribute_count, l.basketoptions, l.basketoption_count, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00031', 'Invalid product attributes' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.variant_id EQ -1 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00032', 'Invalid variant' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.attribute_count }">
		<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ l.attribute_count }">
			<MvASSIGN NAME = "l.option"									VALUE = "">
			<MvASSIGN NAME = "l.option:templ_code"						VALUE = "{ l.attribute:template_code }">
			<MvASSIGN NAME = "l.option:attr_code"						VALUE = "{ l.attribute:code }">
			<MvASSIGN NAME = "l.option:value"							VALUE = "{ l.attribute:value }">

			<MvASSIGN NAME = "l.subscription_withoptions:option_count"	VALUE = "{ miva_array_insert_var( l.subscription_withoptions:options, l.option, -1 ) }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ l.subscription_withoptions:ship_id NE 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( l.subscription_withoptions:ship_id, l.shipping_module ) OR
						NOT [ g.Module_Library_DB ].StoreModule_Load_Cached( l.shipping_module:id, 'shipping', l.storemodule ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Ship_ID', 'The specified shipping module does not exist or is not installed in the store' ) }">
		<MvELSEIF EXPR = "{ NOT l.shipping_module:active }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Ship_ID', 'The specified shipping module is inactive' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].Subscription_CreateBasket_LowLevel( l.customer, l.customeraddress, l.paymentcard, l.product, l.basketoptions, l.basketoption_count, l.variant_id, l.attr_price_override, l.subscription_withoptions:id, l.productsubscriptionterm:id, l.subscription_withoptions:quantity, g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Basket( g.Basket ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SUB_UT ].Subscription_Basket_Reset( g.Basket ) }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ShippingRules_Load( l.shippingrules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SUB_UT ].Subscription_Basket_Reset( g.Basket ) }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.shipping_module:id }">
		<MvIF EXPR = "{ NOT l.shippingrules:subignruls }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_UT ].ShippingMethod_Valid_ForBasket( l.shipping_module, l.subscription_withoptions:ship_data ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Basket_Reset( g.Basket ) }">

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Ship_Data', 'Invalid shipping method' ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].Subscription_Calculate_Basket( l.shipping_module, l.subscription_withoptions:ship_data, l.subscription_withoptions:tax, l.subscription_withoptions:shipping, l.subscription_withoptions:subtotal, l.subscription_withoptions:total ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SUB_UT ].Subscription_Basket_Reset( g.Basket ) }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Basket_Reset( g.Basket ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_Load" PARAMETERS = "subscription var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Subscription_ID', l.subscription_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_SUB_DB ].Subscription_Load_ID( l.subscription_id, l.subscription ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-JSN-00060', 'Subscription not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SUB-JSN-00061', 'Unable to load subscription: Subscription_ID must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Subscription_ID" VALUE = "{ int( g.Subscription_ID ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( g.Subscription_ID, l.subscription ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00043', 'Subscription does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscriptionoption_count" VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription:id, l.subscriptionoptions ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Subscription( l.subscription ) }">,
		"options":
		[
			<MvASSIGN NAME = "l.outputoption_count" VALUE = 0>
			<MvFOREACH ITERATOR = "l.subscriptionoption" ARRAY = "l.subscriptionoptions" COUNT = "{ l.subscriptionoption_count }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.outputoption_count ) }">
					"subscrp_id":		<MvEVAL EXPR = "{ int( l.subscriptionoption:subscrp_id ) }">,
					"templ_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscriptionoption:templ_code ) }">",
					"attr_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscriptionoption:attr_code ) }">",
					"value":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.subscriptionoption:value ) }">"
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Subscription_Validate_Insert( l.subscription_withoptions, l.customer, l.customeraddress, l.paymentcard, l.product, l.productsubscriptionterm, l.shipping_module ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.subscription_withoptions:order_id"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:line_id"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:termrem"	VALUE = "{ l.productsubscriptionterm:term }">
	<MvASSIGN NAME = "l.subscription_withoptions:termproc"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:firstdate"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:lastdate"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:status"	VALUE = "A">
	<MvASSIGN NAME = "l.subscription_withoptions:message"	VALUE = "">
	<MvASSIGN NAME = "l.subscription_withoptions:cncldate"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:authfails"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:lastafail"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].SubscriptionWithOptions_Insert( l.subscription_withoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00025', 'Subscription \'' $ l.subscription_withoptions:id $ '\' inserted' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Subscription( l.subscription_withoptions ) }">,
		"options":
		[
			<MvASSIGN NAME = "l.outputoption_count" VALUE = 0>
			<MvFOREACH ITERATOR = "l.option" ARRAY = "l.subscription_withoptions:options" COUNT = "{ l.subscription_withoptions:option_count }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.outputoption_count ) }">
					"subscrp_id":		<MvEVAL EXPR = "{ int( l.option:subscrp_id ) }">,
					"templ_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:templ_code ) }">",
					"attr_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:attr_code ) }">",
					"value":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:value ) }">"
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_Update" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Subscription_Load( l.subscription_withoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_subterm_id"					VALUE = "{ l.subscription_withoptions:subterm_id }">

	<MvIF EXPR = "{ NOT JSON_Subscription_Validate_Update( l.subscription_withoptions, l.customer, l.customeraddress, l.paymentcard, l.product, l.productsubscriptionterm, l.shipping_module ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.subscription_withoptions:subterm_id NE l.original_subterm_id }">
		<MvASSIGN NAME = "l.subscription_withoptions:termrem"	VALUE = "{ l.productsubscriptionterm:term }">
		<MvASSIGN NAME = "l.subscription_withoptions:termproc"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].SubscriptionWithOptions_Update( l.subscription_withoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00026', 'Subscription \'' $ l.subscription_withoptions:id $ '\' updated' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Subscription( l.subscription_withoptions ) }">,
		"options":
		[
			<MvASSIGN NAME = "l.outputoption_count" VALUE = 0>
			<MvFOREACH ITERATOR = "l.option" ARRAY = "l.subscription_withoptions:options" COUNT = "{ l.subscription_withoptions:option_count }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.outputoption_count ) }">
					"subscrp_id":		<MvEVAL EXPR = "{ int( l.option:subscrp_id ) }">,
					"templ_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:templ_code ) }">",
					"attr_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:attr_code ) }">",
					"value":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:value ) }">"
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Subscription_ResetTermRemaining" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Subscription_ID" VALUE = "{ int( g.Subscription_ID ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( g.Subscription_ID, l.subscription ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00034', 'Subscription does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID( l.subscription:subterm_id, l.productsubscriptionterm ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00035', 'Product Subscription Term does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription:termrem"	VALUE = "{ l.productsubscriptionterm:term }">
	<MvASSIGN NAME = "l.subscription:termproc"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update( l.subscription ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00036', 'Subscription \'' $ l.subscription:id $ '\' termrem reset to ' $ l.subscription:termrem $ '. termproc reset to 0' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_Activate" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.id" ARRAY = "l.ids" COUNT = "{ [ g.Module_JSON ].JSON_Array_Integer( g.Subscription_IDs, l.ids ) }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( l.id, l.subscription ) }">
			<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.id, g.Error_Code, g.Error_Message, l.errors ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_Status_Active( l.subscription, '' ) }">
			<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.id, g.Error_Code, g.Error_Message, l.errors ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00044', 'Subscription \'' $ l.id $ '\' activated' ) }">
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_Cancel" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.id" ARRAY = "l.ids" COUNT = "{ [ g.Module_JSON ].JSON_Array_Integer( g.Subscription_IDs, l.ids ) }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( l.id, l.subscription ) }">
			<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.id, g.Error_Code, g.Error_Message, l.errors ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_Status_Cancel_WithNotifications( l.subscription, '' ) }">
			<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.id, g.Error_Code, g.Error_Message, l.errors ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00045', 'Subscription \'' $ l.id $ '\' cancelled' ) }">
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_Delete" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">
	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'Subscription_IDs', l.subscription_ids, l.subscription_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.subscription_id" ARRAY = "l.subscription_ids" COUNT = "{ l.subscription_id_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( l.subscription_id, l.subscription ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Delete( l.subscription ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscription_id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00024', 'Subscription \'' $ l.subscription_id $ '\' deleted' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_ProcessOrder" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SUBS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvCOMMENT>
	|
	| Assumes the passed in Subscription_IDs are sorted by cust_id, addr_id, ship_id, custpc_id, and ship_data
	| so that we don't have to loop twice to group results together and then process, we can process as we go.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.processed"								VALUE = 0>
	<MvASSIGN NAME = "l.errors" 								VALUE = "">
	<MvASSIGN NAME = "l.error_count" 							VALUE = 0>
	<MvASSIGN NAME = "l.start_time" 							VALUE = "{ s.dyn_time_t }">

	<MvASSIGN NAME = "l.subscriptions"							VALUE = "">
	<MvASSIGN NAME = "l.subscription_count"						VALUE = 0>
	<MvASSIGN NAME = "l.override_outofstock"					VALUE = 0>
	<MvASSIGN NAME = "l.process_outofstock_notifications"		VALUE = 1>

	<MvASSIGN NAME = "l.last_cust_id"							VALUE = -1>
	<MvASSIGN NAME = "l.last_addr_id"							VALUE = -1>
	<MvASSIGN NAME = "l.last_ship_id"							VALUE = -1>
	<MvASSIGN NAME = "l.last_custpc_id"							VALUE = -1>
	<MvASSIGN NAME = "l.last_ship_data"							VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'Subscription_IDs',					l.subscription_ids, l.subscription_id_count )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(		'o', 'Override_OutOfStock',					l.override_outofstock )							OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(		'o', 'Process_OutOfStock_Notifications',	l.process_outofstock_notifications ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.subscription_id" ARRAY = "l.subscription_ids" COUNT = "{ l.subscription_id_count }">
		<MvASSIGN NAME = "l.subscription"						VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( l.subscription_id, l.subscription ) }">
			<MvASSIGN NAME = "l.error_count"					VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscription_id, g.Error_Code, g.Error_Message, l.errors ) }">
		<MvELSEIF EXPR = "{ l.subscription:status EQ 'C' }">
			<MvASSIGN NAME = "l.error_count"					VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscription_id, 'MER-SUB-JSN-00046', 'Subscription is not active', l.errors ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID_WithRuntimeInventory( l.subscription:product_id, l.subscription:product ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvASSIGN NAME = "l.error_count"				VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscription_id, 'MER-SUB-JSN-00074', 'Product record not found', l.errors ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.subscription:option_count"      VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription:id, l.subscription:options ) }">
			<MvASSIGN NAME = "l.subscription:attribute_count"   VALUE = "{ [ g.Module_Feature_SUB_UT ].SubscriptionOptions_BuildAttributes( l.subscription:options, l.subscription:option_count, l.subscription:attributes ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].Subscription_Validate_Attributes_DetermineVariant( l.subscription, l.subscription:product, l.subscription:attributes, l.subscription:attribute_count, l.subscription:basketoptions, l.subscription:basketoption_count ) }">
				<MvASSIGN NAME = "l.error_count"				VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscription_id, 'MER-SUB-JSN-00077', 'Unable to determine variant', l.errors ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.subscription:product, l.subscription:variant_id, l.subscription:attr_price_override ) }">
				<MvASSIGN NAME = "l.error_count"				VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscription_id, 'MER-SUB-JSN-00078', 'Unable to adjust variant pricing', l.errors ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID_Cached( l.subscription:subterm_id, l.subscription:term ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvASSIGN NAME = "l.error_count"				VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscription_id, 'MER-SUB-JSN-00079', 'Product Subscription Term not found', l.errors ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ ( l.subscription:cust_id NE l.last_cust_id ) OR
							( l.subscription:addr_id NE l.last_addr_id ) OR
							( l.subscription:ship_id NE l.last_ship_id ) OR
							( l.subscription:custpc_id NE l.last_custpc_id ) OR
							( l.subscription:ship_data NE l.last_ship_data ) }">
				<MvIF EXPR = "{ l.subscription_count }">
					<MvEVAL EXPR = "{ JSON_SubscriptionList_ProcessOrder_LowLevel( l.subscriptions, l.subscription_count, l.override_outofstock, l.process_outofstock_notifications, l.errors, l.error_count ) }">

					<MvASSIGN NAME = "l.subscriptions"			VALUE = "">
					<MvASSIGN NAME = "l.subscription_count"		VALUE = 0>

					<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
					<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
					</MvIF>
				</MvIF>

				<MvASSIGN NAME = "l.last_cust_id"				VALUE = "{ l.subscription:cust_id }">
				<MvASSIGN NAME = "l.last_addr_id"				VALUE = "{ l.subscription:addr_id }">
				<MvASSIGN NAME = "l.last_ship_id"				VALUE = "{ l.subscription:ship_id }">
				<MvASSIGN NAME = "l.last_custpc_id"				VALUE = "{ l.subscription:custpc_id }">
				<MvASSIGN NAME = "l.last_ship_data"				VALUE = "{ l.subscription:ship_data }">
			</MvIF>

			<MvASSIGN NAME = "l.subscription_count"				VALUE = "{ miva_array_insert_var( l.subscriptions, l.subscription, -1 ) }">
		</MvIF>

		<MvASSIGN NAME = "l.processed"							VALUE = "{ l.processed + 1 }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.subscription_count }">
		<MvEVAL EXPR = "{ JSON_SubscriptionList_ProcessOrder_LowLevel( l.subscriptions, l.subscription_count, l.override_outofstock, l.process_outofstock_notifications, l.errors, l.error_count ) }">
	</MvIF>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionList_ProcessOrder_LowLevel" PARAMETERS = "subscriptions var, subscription_count var, override_outofstock, process_outofstock_notifications, errors var, error_count var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.override_outofstock }">
		<MvASSIGN NAME = "l.process_subscriptions"		VALUE = "{ l.subscriptions }">
		<MvASSIGN NAME = "l.process_subscription_count"	VALUE = "{ l.subscription_count }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].SubscriptionList_CheckInventory( l.subscriptions, l.subscription_count, l.instock_subscriptions, l.instock_subscription_count, l.outofstock_subscriptions, l.outofstocksubscription_count ) }">
			<MvASSIGN NAME = "l.error_count"			VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.subscriptions[ 1 ]:id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvASSIGN NAME = "l.process_subscriptions"		VALUE = "{ l.instock_subscriptions }">
		<MvASSIGN NAME = "l.process_subscription_count"	VALUE = "{ l.instock_subscription_count }">

		<MvIF EXPR = "{ l.outofstocksubscription_count }">
			<MvFOREACH ITERATOR = "l.outofstock_subscription" ARRAY = "l.outofstock_subscriptions" COUNT = "{ l.outofstocksubscription_count }">
				<MvASSIGN NAME = "l.error_count"		VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.outofstock_subscription:id, 'MER-SUB-JSN-00076', 'Subscription ' $ l.outofstock_subscription:id $ ': ' $ l.outofstock_subscription:message, l.errors ) }">
			</MvFOREACH>

			<MvIF EXPR = "{ l.process_outofstock_notifications }">
				<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].ModuleList_Load_Features( 'not_subscript', l.modules ) }">
					<MvIF EXPR = "{ l.module:api_ver GE 10.05 }">
						<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Subscriptions_OutOfStock( l.module, l.outofstock_subscriptions, l.outofstocksubscription_count ) }">
					</MvIF>
				</MvFOREACH>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.process_subscription_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].SubscriptionList_ProcessOrder( l.process_subscriptions, l.process_subscription_count, l.order ) }">
			<MvFOREACH ITERATOR = "l.process_subscription" ARRAY = "l.process_subscriptions" COUNT = "{ l.process_subscription_count }">
				<MvASSIGN NAME = "l.error_count"			VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.process_subscription:id, g.Error_Code, g.Error_Message, l.errors ) }">
			</MvFOREACH>
		<MvELSE>
			<MvFOREACH ITERATOR = "l.process_subscription" ARRAY = "l.process_subscriptions" COUNT = "{ l.process_subscription_count }">
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SUB-JSN-00047', 'Order #' $ l.order:id $ ' created for subscription ' $ l.process_subscription:id ) }">
			</MvFOREACH>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionOrderIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.query_singlesource"		VALUE = "">
	<MvASSIGN NAME = "l.query_ordersources"		VALUE = "">
	<MvASSIGN NAME = "l.order_and_customer"		VALUE = "">

	<MvREFERENCE NAME = "l.order"				VARIABLE = "l.order_and_customer:ord">
	<MvREFERENCE NAME = "l.customer"			VARIABLE = "l.order_and_customer:cust">
	<MvREFERENCE NAME = "l.businessaccount"		VARIABLE = "l.order_and_customer:ba">
	<MvREFERENCE NAME = "l.orderpayment_module"	VARIABLE = "l.order_and_customer:opm">

	<MvIF EXPR = "{ NOT JSON_Subscription_Load( l.subscription ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns"			VALUE = "{ [ g.Module_JSON ].JSON_BaseOrderList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"		VALUE = "{ [ g.Module_JSON ].JSON_BaseOrderList_OrderBy() }">

	<MvCOMMENT>
	|
	| The output of Order_Load_ID sets xxx_addr to xxx_addr $ ' ' $ xxx_addr2 from the database.  SQL_Query_Index doesn't know this so we need
	| to explicitly reset those values to what it expects.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.order:ship_addr"		VALUE = "{ l.order:ship_addr1 }">
	<MvASSIGN NAME = "l.order:bill_addr"		VALUE = "{ l.order:bill_addr1 }">

	<MvIF EXPR = "{ l.order:cust_id }">
		<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.order:cust_id, l.customer ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_CUS_DB ].BusinessAccount_Load( l.customer:account_id, l.businessaccount ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.order:pay_id }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Library_DB ].Module_Load_ID( l.order:pay_id, l.orderpayment_module ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_singlesource, g.Store_Table_Prefix $ 'Orders', 'ord' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_singlesource, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_singlesource, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_singlesource, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query_singlesource, 'ord.source		= \'subscription\' AND
																					  ord.source_id		= ?', [ g.Module_Library_DB ].SQL_Query_Field( l.subscription:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query_singlesource, l.filter, l.filter_columns, g.Module_JSON, 'JSON_OrderList_Load_Query_Filter', 'JSON_OrderList_Load_Query_Advanced_Filter', 'JSON_Order_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query_singlesource, l.sort, l.orderby_columns, 'ord.id', g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">
	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query_singlesource, l.order_and_customer, l.singlesource_index, l.order:id, g.Module_JSON, 'JSON_Order_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_ordersources, g.Store_Table_Prefix $ 'Orders',		'ord' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_ordersources, g.Store_Table_Prefix $ 'OrderSources',	'os' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_ordersources, 'ord', g.Store_Table_Prefix $ 'Customers',			'cust',	'cust.id = ord.cust_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_ordersources, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts',	'ba',	'cust.account_id = ba.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_ordersources, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query_ordersources, 'ord.source	= \'subscription\'	AND
																					  ord.source_id	= 0					AND
																					  os.order_id	= ord.id			AND
																					  os.source		= \'subscription\'	AND
																					  os.source_id	= ?', [ g.Module_Library_DB ].SQL_Query_Field( l.subscription:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query_ordersources, l.filter, l.filter_columns, g.Module_JSON, 'JSON_OrderList_Load_Query_Filter', 'JSON_OrderList_Load_Query_Advanced_Filter', 'JSON_Order_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query_ordersources, l.sort, l.orderby_columns, 'ord.id', g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query_ordersources, l.order_and_customer, l.ordersources_index, l.order:id, g.Module_JSON, 'JSON_Order_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.index" VALUE = "{ l.singlesource_index + l.ordersources_index }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionOrderList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Subscription_Load( l.subscription ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"							VALUE = "">
	<MvASSIGN NAME = "l.sort"							VALUE = "">
	<MvASSIGN NAME = "l.count"							VALUE = 0>
	<MvASSIGN NAME = "l.offset"							VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.query_singlesource"				VALUE = "">
	<MvASSIGN NAME = "l.query_ordersources"				VALUE = "">
	<MvASSIGN NAME = "l.count_query_singlesource"		VALUE = "">
	<MvASSIGN NAME = "l.count_query_ordersources"		VALUE = "">
	<MvASSIGN NAME = "l.search_query"					VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns"				VALUE = "">
	<MvASSIGN NAME = "l.filter_joins"					VALUE = "">
	<MvASSIGN NAME = "l.sort_joins"						VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumn_joins"			VALUE = "">
	<MvASSIGN NAME = "l.filter_columns"					VALUE = "{ [ g.Module_JSON ].JSON_BaseOrderList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"				VALUE = "{ [ g.Module_JSON ].JSON_BaseOrderList_OrderBy_WithColumnAlias() }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query_singlesource, 'ord.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.query_ordersources, 'ord.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_singlesource, g.Store_Table_Prefix $ 'Orders',		'ord' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_singlesource, 'ord', g.Store_Table_Prefix $ 'OrderSources', 'os', 'os.order_id = ord.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_ordersources, g.Store_Table_Prefix $ 'Orders',		'ord' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query_ordersources, g.Store_Table_Prefix $ 'OrderSources',	'os' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query_singlesource, 'ord.source	= \'subscription\'	AND
																					  ord.source_id	= ?					AND
																					  os.order_id IS NULL', [ g.Module_Library_DB ].SQL_Query_Field( l.subscription:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query_ordersources, 'ord.source	= \'subscription\'	AND
																					  ord.source_id	= 0					AND
																					  os.order_id	= ord.id			AND
																					  os.source		= \'subscription\'	AND
																					  os.source_id	= ?', [ g.Module_Library_DB ].SQL_Query_Field( l.subscription:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query_singlesource, l.filter, l.filter_columns, g.Module_JSON, 'JSON_OrderList_Load_Query_Filter', 'JSON_OrderList_Load_Query_Advanced_Filter', 'JSON_Order_CustomFields_Query_Filter', l.ondemandcolumns ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query_ordersources, l.filter, l.filter_columns, g.Module_JSON, 'JSON_OrderList_Load_Query_Filter', 'JSON_OrderList_Load_Query_Advanced_Filter', 'JSON_Order_CustomFields_Query_Filter', l.null ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseOrderList_Joins_Filter( l.filter, l.filter_joins ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseOrderList_Joins_Sort( l.sort, l.sort_joins ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseOrderList_Joins_OnDemandColumns( l.ondemandcolumns, l.ondemandcolumn_joins ) }">

	<MvCOMMENT>
	|
	| Build the count query
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.count_query_singlesource"		VALUE = "{ l.query_singlesource }">
	<MvASSIGN NAME = "l.count_query_ordersources"		VALUE = "{ l.query_ordersources }">

	<MvIF EXPR = "{ l.filter_joins:customers }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query_singlesource, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query_ordersources, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.filter_joins:businessaccounts }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query_singlesource, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query_ordersources, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.filter_joins:orderpayments }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query_singlesource, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query_ordersources, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count_sql_singlesource"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build_Count( l.count_query_singlesource, l.count_fields_singlesource ) }">
	<MvASSIGN NAME = "l.count_sql_ordersources"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build_Count( l.count_query_ordersources, l.count_fields_ordersources ) }">
	<MvASSIGN NAME = "l.count_sql"						VALUE = "{ l.count_sql_singlesource $ ' UNION ALL ' $ l.count_sql_ordersources }">

	<MvIF EXPR = "{ NOT ISNULL l.count_fields_singlesource AND NOT ISNULL l.count_fields_ordersources }">	<MvASSIGN NAME = "l.count_fields" VALUE = "{ l.count_fields_singlesource $ ',' $ l.count_fields_ordersources }">
	<MvELSEIF EXPR = "{ NOT ISNULL l.count_fields_singlesource }">											<MvASSIGN NAME = "l.count_fields" VALUE = "{ l.count_fields_singlesource }">
	<MvELSEIF EXPR = "{ NOT ISNULL l.count_fields_ordersources }">											<MvASSIGN NAME = "l.count_fields" VALUE = "{ l.count_fields_ordersources }">
	<MvELSE>																								<MvASSIGN NAME = "l.count_fields" VALUE = "">
	</MvIF>

	<MvCOMMENT>
	|
	| Build the search query
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:customers OR l.filter_joins:customers OR l.sort_joins:customers }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_singlesource, 'cust.login',		'cust_login' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_ordersources, 'cust.login',		'cust_login' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_singlesource, 'cust.pw_email',	'cust_pw_email' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_ordersources, 'cust.pw_email',	'cust_pw_email' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_singlesource, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_ordersources, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:businessaccounts OR l.filter_joins:businessaccounts OR l.sort_joins:businessaccounts }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_singlesource, 'ba.title',			'business_title' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_ordersources, 'ba.title',			'business_title' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_singlesource, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_ordersources, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:orderpayments OR l.filter_joins:orderpayments OR l.sort_joins:orderpayments }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_singlesource, 'opm.name',			'payment_module' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.query_ordersources, 'opm.name',			'payment_module' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_singlesource, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_ordersources, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Count( l.count_sql, l.count_fields, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseOrderList_Load_Query_QueryCustomFields( l.query_singlesource, l.filter, l.count, l.total_count ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseOrderList_Load_Query_QueryCustomFields( l.query_ordersources, l.filter, l.count, l.total_count ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query_singlesource, l.sort, l.orderby_columns, 'id', g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query_ordersources, l.sort, l.orderby_columns, 'id', g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY_Clear( l.query_singlesource ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_ORDER_BY_Clear( l.query_ordersources ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.search_query, l.query_singlesource ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_UNION_ALL( l.search_query, l.query_ordersources ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Copy( l.search_query, l.query_ordersources ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'id', g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_Data_Copy( l.search_query, l.query_singlesource ) }">

	<MvASSIGN NAME = "l.search_sql"						VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Orders', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00049', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.order_count"					VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Order_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Orders.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.order_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseOrderList_Order_Read( l.order, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.order_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Order_OnDemandColumns( l.order, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Order_CustomFields_With_Query( l.search_query, l.customfield_state, Orders.d.id, 'Orders' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Orders" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Orders">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "SubscriptionShippingMethodList_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.desc" VALUE = "{ ( '-' IN l.data ) EQ 1 }">
	<MvASSIGN NAME = "l.sort" VALUE = "{ glosub( l.data, '-', '' ) }">

	<MvIF EXPR = "{ l.desc }">
		<MvIF EXPR = "{ l.sort EQ 'method' }">
			<MvIF EXPR = "{ 'x' $ toupper( l.left:module:name ) LT 'x' $ toupper( l.right:module:name ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:module:name ) GT 'x' $ toupper( l.right:module:name ) }">
				<MvFUNCTIONRETURN VALUE = -1>
			<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:name ) LT 'x' $ toupper( l.right:name ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:name ) GT 'x' $ toupper( l.right:name ) }">
				<MvFUNCTIONRETURN VALUE = -1>
			</MvIF>
		<MvELSEIF EXPR = "{ l.sort EQ 'price' }">
			<MvIF EXPR = "{ l.left:price LT l.right:price }">
				<MvFUNCTIONRETURN VALUE = 1>
			<MvELSEIF EXPR = "{ l.left:price GT l.right:price }">
				<MvFUNCTIONRETURN VALUE = -1>
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ l.sort EQ 'method' }">
			<MvIF EXPR = "{ 'x' $ toupper( l.left:module:name ) LT 'x' $ toupper( l.right:module:name ) }">
				<MvFUNCTIONRETURN VALUE = -1>
			<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:module:name ) GT 'x' $ toupper( l.right:module:name ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:name ) LT 'x' $ toupper( l.right:name ) }">
				<MvFUNCTIONRETURN VALUE = -1>
			<MvELSEIF EXPR = "{ 'x' $ toupper( l.left:name ) GT 'x' $ toupper( l.right:name ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
		<MvELSEIF EXPR = "{ l.sort EQ 'price' }">
			<MvIF EXPR = "{ l.left:price LT l.right:price }">
				<MvFUNCTIONRETURN VALUE = -1>
			<MvELSEIF EXPR = "{ l.left:price GT l.right:price }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionShippingMethodList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.product"					VALUE = "">
	<MvASSIGN NAME = "l.customer"					VALUE = "">
	<MvASSIGN NAME = "l.paymentcard"				VALUE = "">
	<MvASSIGN NAME = "l.customeraddress"			VALUE = "">
	<MvASSIGN NAME = "l.productsubscriptionterm"	VALUE = "">
	<MvASSIGN NAME = "l.available_filters"			VALUE = "">
	<MvASSIGN NAME = "l.filter"						VALUE = "">
	<MvASSIGN NAME = "l.sort"						VALUE = "">
	<MvASSIGN NAME = "l.quantity"					VALUE = 0>
	<MvASSIGN NAME = "l.product_attributes"			VALUE = "">
	<MvASSIGN NAME = "l.product_attribute_count"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_PAY_JSON ].JSON_CustomerAndPaymentCard_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_JSON ].JSON_CustomerAndPaymentCard_Load( l.customer, l.paymentcard ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_CustomerAddress_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_CustomerAddress_Load( l.customeraddress ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.customer:ship_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID( l.customer:ship_id, l.customeraddress ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.customeraddress }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00082', 'The specified customer does not have a default address, so one of Address_ID or CustomerAddress_ID must be specified' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.customer:id NE l.customeraddress:cust_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00063', 'Customer Address not found' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(		l.available_filters, 'method',	'l.method:search_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_INTEGER(	l.available_filters, 'price',	'l.method:price' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer(	'R', 'Quantity',	l.quantity )	OR
					NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Attributes' ) }">
		<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ [ g.Module_JSON ].JSON_Input_Array( 'Attributes', l.attributes ) }">
			<MvASSIGN NAME = "l.product_attribute"					VALUE = "">
			<MvASSIGN NAME = "l.product_attribute:code"				VALUE = "">
			<MvASSIGN NAME = "l.product_attribute:template_code"	VALUE = "">
			<MvASSIGN NAME = "l.product_attribute:value"			VALUE = "">

			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.attribute, 'o', 'code',			l.product_attribute:code )			OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.attribute, 'o', 'template_code',	l.product_attribute:template_code )	OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.attribute, 'o', 'value',			l.product_attribute:value ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.product_attribute_count"			VALUE = "{ miva_array_insert_var( l.product_attributes, l.product_attribute, -1 ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Attribute_Codes',	l.attribute_codes ) OR
						[ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Template_Codes',	l.template_codes )	OR
						[ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Values',			l.values ) }">
		<MvASSIGN NAME = "l.product_attribute_count"				VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String(	l.attribute_codes,	l.product_attributes, 'code' ) }">
		<MvASSIGN NAME = "l.null"									VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String(	l.template_codes,	l.product_attributes, 'template_code' ) }">
		<MvASSIGN NAME = "l.null"									VALUE = "{ [ g.Module_JSON ].JSON_Array_Coalesce_String(	l.values,			l.product_attributes, 'value' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:currncy_id, g.Store_Module_Currency )	OR
					NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:tax_id, g.Store_Module_Tax )			OR
					NOT [ g.Module_Library_DB ].Module_Load_ID( g.Store:ui_id, g.Store_Module_UI ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI:module }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.product, 0, l.product_attributes, l.product_attribute_count, l.basketoptions, l.basketoption_count, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00055', 'Invalid product attributes' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.variant_id EQ -1 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SUB-JSN-00056', 'Invalid variant' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_UT ].Subscription_CreateBasket_LowLevel( l.customer, l.customeraddress, l.paymentcard, l.product, l.basketoptions, l.basketoption_count, l.variant_id, l.attr_price_override, 0, l.productsubscriptionterm:id, l.quantity, g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].Discount_Basket( g.Basket ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total"							VALUE = "{ [ g.Module_Library_DB ].Basket_Total( g.Basket:basket_id ) }">
	<MvASSIGN NAME = "l.method_count"					VALUE = "{ [ g.Module_Feature_SUB_UT ].SubscriptionShippingMethodList_Load_Basket( l.methods ) }">

	<MvASSIGN NAME = "l.method"							VALUE = "">
	<MvASSIGN NAME = "l.method:code"					VALUE = "">
	<MvASSIGN NAME = "l.method:name"					VALUE = "<None>">
	<MvASSIGN NAME = "l.method:price"					VALUE = 0.00>
	<MvASSIGN NAME = "l.method:module"					VALUE = "">
	<MvASSIGN NAME = "l.method:module_id"				VALUE = 0>
	<MvASSIGN NAME = "l.method:module_api"				VALUE = 0>
	<MvASSIGN NAME = "l.method_count"					VALUE = "{ miva_array_insert( l.methods, l.method, -1 ) }">

	<MvFOREACH ITERATOR = "l.method" ARRAY = "l.methods" COUNT = "{ miva_array_sort( l.methods, 'SubscriptionShippingMethodList_Sort_Callback', l.sort ) }">
		<MvIF EXPR = "{ l.method:module:id }">
			<MvASSIGN NAME = "l.method:search_name"		VALUE = "{ l.method:module:name $ ': ' $ l.method:name }">
		<MvELSE>
			<MvASSIGN NAME = "l.method:search_name"		VALUE = "<None>">
		</MvIF>

		<MvCOMMENT>
		|
		| Round decimal columns to their final length so that LIKE/NOTLIKE operations in JSON_Filter_MivaScript operate on the
		| same data the user sees.
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.method:price"				VALUE = "{ l.method:price ROUND 2 }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.total_count"					VALUE = 0>
	<MvASSIGN NAME = "l.search_expression"				VALUE = "1 EQ 1">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
			<MvASSIGN NAME = "l.pos"					VALUE = "{ miva_array_search( l.methods, 1, l.method, l.search_expression ) }">

			<MvWHILE EXPR = "{ l.pos }">
				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				"module":
				{
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.method:module ) }">
				},
				"method_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:code ) }">",
				"method_name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.method:name ) }">",
				"price":			<MvEVAL EXPR = "{ l.method:price ROUND 2 }">,
				"formatted_price":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( [ g.Module_Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.method:price ) ) }">"
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

				<MvASSIGN NAME = "l.pos"				VALUE = "{ miva_array_search( l.methods, l.pos + 1, l.method, l.search_expression ) }">
			</MvWHILE>
		],
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	0
	}
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Basket_Reset( g.Basket ) }">

	<MvASSIGN NAME = "g.Store_Module_Currency"			VALUE = "{ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Store_Module_Tax"				VALUE = "{ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Store_Module_UI"				VALUE = "{ g.Store_Module_UI:module }">

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvINCLUDE FILE = "json/mivascript.mv">

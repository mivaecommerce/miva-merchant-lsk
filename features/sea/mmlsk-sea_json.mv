<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-SEA-JSON-
| Next Error Code: 12
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_SearchableField" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"field_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:field_code ) }">",
	"field_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:field_name ) }">",
	"enabled":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.field:enabled ) }">,
	"searchtype":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:searchtype ) }">",
	"relevance":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.field:relevance ) }">,
	"weight":		<MvEVAL EXPR = "{ l.field:weight ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchableCustomFieldModule_Capabilities" PARAMETERS = "capabilities var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"search_fulltext":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.capabilities:search_fulltext ) }">,
	"orderby_relevance":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.capabilities:orderby_relevance ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchableField_Load" PARAMETERS = "searchablefield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Raw( 'Field_Code', l.field_code ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_SEA_UT ].SearchableField_Load_Builtin( l.field_code, l.searchablefield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SEA-JSON-00001', 'Searchable field not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SEA-JSON-00002', 'Unable to load searchable field: Field_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchableCustomField_Load" PARAMETERS = "searchablecustomfield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer(	'Module_ID',	l.module_id ) AND
					[ g.Module_JSON ].JSON_Input_Retrieve_Raw(		'Field_Code',	l.field_code ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_SEA_UT ].SearchableField_Load_CustomField( l.module_id, l.field_code, l.searchablecustomfield ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SEA-JSON-00003', 'Searchable custom field not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-SEA-JSON-00004', 'Unable to load searchable custom field: Module_ID and Field_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchableFieldList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) AND
					NOT [ g.Module_Admin ].CanI( 'STOR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"				VALUE = "">
	<MvASSIGN NAME = "l.filter"							VALUE = "">
	<MvASSIGN NAME = "l.sort"							VALUE = "">
	<MvASSIGN NAME = "l.offset"							VALUE = 0>
	<MvASSIGN NAME = "l.count"							VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(	l.available_filters, 'field_code',	'l.filtered_field:field_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(	l.available_filters, 'field_name',	'l.filtered_field:field_name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_BOOL(	l.available_filters, 'enabled',		'l.filtered_field:enabled' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(	l.available_filters, 'searchtype',	'l.filtered_field:searchtype' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_BOOL(	l.available_filters, 'relevance',	'l.filtered_field:relevance' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_NUMBER(	l.available_filters, 'weight',		'l.filtered_field:weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR(	l.available_filters, 'module',		'l.filtered_field:module:code' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.filtered_fields"				VALUE = "">
	<MvASSIGN NAME = "l.filtered_field_count"			VALUE = 0>

	<MvASSIGN NAME = "l.searchablefield_count"			VALUE = "{ [ g.Feature_Filename_SEA_UT ].SearchableFieldList_Load_All_Builtins( l.searchablefields ) }">
	<MvASSIGN NAME = "l.searchablecustomfield_count"	VALUE = "{ [ g.Feature_Filename_SEA_UT ].SearchableFieldList_Load_All_CustomFields( l.searchablecustomfields ) }">

	<MvASSIGN NAME = "l.filtered_field_count"			VALUE = "{ miva_array_merge_ref( l.searchablefields, 1, l.searchablefield_count, l.filtered_fields, -1 ) }">
	<MvASSIGN NAME = "l.filtered_field_count"			VALUE = "{ miva_array_merge_ref( l.searchablecustomfields, 1, l.searchablecustomfield_count, l.filtered_fields, -1 ) }">

	<MvFOREACH ITERATOR = "l.filtered_field" ARRAY = "l.filtered_fields" COUNT = "{ l.filtered_field_count }">
		<MvCOMMENT>
		|
		| Round decimal columns to their final length so that LIKE/NOTLIKE operations in JSON_Filter_MivaScript operate on the
		| same data the user sees.
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.filtered_field:weight"		VALUE = "{ l.filtered_field:weight ROUND 2 }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.search_expression"				VALUE = "1 EQ 1">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">

	<MvASSIGN NAME = "l.total_count"					VALUE = "{ miva_array_filter_ref( l.filtered_fields, 1, l.filtered_field, l.search_expression, l.filtered_array ) }">
	<MvASSIGN NAME = "l.null"							VALUE = "{ miva_array_sort( l.filtered_array, 'JSON_SearchableFieldList_Sort_Callback', l.sort ) }">

	<MvASSIGN NAME = "l.output_count" 					VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
			<MvFOREACH ITERATOR = "l.filtered_field" ARRAY = "l.filtered_array" FIRST = "{ l.offset + 1 }" LAST = "{ l.total_count }">
				<MvIF EXPR = "{ ( l.output_count LT l.count ) OR ( l.count EQ 0 ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
						<MvEVAL EXPR = "{ JSON_SearchableField( l.filtered_field ) }">

						<MvIF EXPR = "{ l.filtered_field:module:id }">
							, "module":
							{
								<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.filtered_field:module ) }">
							},
							"capabilities":
							{
								<MvEVAL EXPR = "{ JSON_SearchableCustomFieldModule_Capabilities( l.filtered_field:capabilities ) }">
							}
						</MvIF>
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>
			</MvFOREACH>
		],
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchableFieldList_Sort_Callback" PARAMETERS = "left var, right var, sort" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.result" VALUE = 0>

	<MvIF EXPR = "{ l.sort EQ 'field_code' }">		<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.left:field_code, l.right:field_code ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-field_code' }">	<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.right:field_code, l.left:field_code ) }">
	<MvELSEIF EXPR = "{ l.sort EQ 'field_name' }">	<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.left:field_name, l.right:field_name ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-field_name' }">	<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.right:field_name, l.left:field_name ) }">
	<MvELSEIF EXPR = "{ l.sort EQ 'searchtype' }">	<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.left:searchtype, l.right:searchtype ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-searchtype' }">	<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.right:searchtype, l.left:searchtype ) }">
	<MvELSEIF EXPR = "{ l.sort EQ 'module' }">		<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.left:module:code, l.right:module:code ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-module' }">		<MvASSIGN NAME = "l.result"	VALUE = "{ strcasecmp( l.right:module:code, l.left:module:code ) }">
	<MvELSE>
		<MvIF EXPR = "{ l.sort EQ 'enabled' }">			<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.left:enabled }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.right:enabled }">
		<MvELSEIF EXPR = "{ l.sort EQ '-enabled' }">	<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.right:enabled }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.left:enabled }">
		<MvELSEIF EXPR = "{ l.sort EQ 'relevance' }">	<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.left:relevance }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.right:relevance }">
		<MvELSEIF EXPR = "{ l.sort EQ '-relevance' }">	<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.right:relevance }">	<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.left:relevance }">
		<MvELSEIF EXPR = "{ l.sort EQ 'weight' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.left:weight }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.right:weight }">
		<MvELSEIF EXPR = "{ l.sort EQ '-weight' }">		<MvASSIGN NAME = "l.left_data"	VALUE = "{ l.right:weight }">		<MvASSIGN NAME = "l.right_data"	VALUE = "{ l.left:weight }">
		</MvIF>

		<MvIF EXPR = "{ l.left_data LT l.right_data }">		<MvASSIGN NAME = "l.result" VALUE = -1>
		<MvELSEIF EXPR = "{ l.left_data GT l.right_data }">	<MvASSIGN NAME = "l.result" VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchableField_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) AND
					NOT [ g.Module_Admin ].CanI( 'STOR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_SearchableField_Load( l.searchablefield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'Enabled',			l.searchablefield:enabled )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'Relevance',		l.searchablefield:relevance )		OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'O', 'Weight',			l.searchablefield:weight,	10, 2 )	OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'SearchType',		l.searchablefield:searchtype,	'exact,contains,contains_term,fulltext',
																														'exact,contains,contains_term,fulltext' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.serchablefield:relevance OR ( l.searchablefield:searchtype EQ 'fulltext' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_FULLTEXT_Supported() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SEA-JSON-00005', 'The current database does not support fulltext searching or relevance' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_SEA_UT ].SearchableField_Update_Builtin( l.searchablefield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchableCustomField_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) AND
					NOT [ g.Module_Admin ].CanI( 'STOR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_SearchableCustomField_Load( l.searchablecustomfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'Enabled',			l.searchablecustomfield:enabled )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'Relevance',		l.searchablecustomfield:relevance )		OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'O', 'Weight',			l.searchablecustomfield:weight,	10, 2 )	OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'SearchType',		l.searchablecustomfield:searchtype,	'exact,contains,contains_term,fulltext',
																															'exact,contains,contains_term,fulltext' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.serchablecustomfield:relevance OR ( l.searchablecustomfield:searchtype EQ 'fulltext' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_FULLTEXT_Supported() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SEA-JSON-00006', 'The current database does not support fulltext searching or relevance' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ( l.searchablecustomfield:searchtype EQ 'fulltext' ) AND ( NOT l.searchablecustomfield:capabilities:search_fulltext ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SEA-JSON-00007', 'Field \'' $ l.searchablecustomfield:field_name $ '\' does not support full text searching' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.searchablecustomfield:relevance AND ( NOT l.searchablecustomfield:capabilities:orderby_relevance ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SEA-JSON-00008', 'Field \'' $ l.searchablecustomfield:field_name $ '\' does not support relevance sorting' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_SEA_UT ].SearchableField_Update_CustomField( l.searchablecustomfield ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchLogEntryList_Joins" PARAMETERS = "filter var, sort var, ondemandcolumns var, joins var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.sort_field"	VALUE = "{ [ g.Module_Library_DB ].SQL_Sort_Field( l.sort, l.null ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:cust_login }">																	<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	<MvELSEIF EXPR = "{ l.ondemandcolumns:cust_pw_email }">																<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	<MvELSEIF EXPR = "{ l.sort_field EQ 'cust_login' }">																<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	<MvELSEIF EXPR = "{ l.sort_field EQ 'cust_pw_email' }">																<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Filter_Contains_Search_Field( l.filter, 'cust_login', l.null ) }">		<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Filter_Contains_Search_Field( l.filter, 'cust_pw_email', l.null ) }">	<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	<MvELSE>																											<MvASSIGN NAME = "l.joins:customers"		VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:business_title }">																<MvASSIGN NAME = "l.joins:businessaccounts"	VALUE = 1>
	<MvELSEIF EXPR = "{ l.sort_field EQ 'business_title' }">															<MvASSIGN NAME = "l.joins:businessaccounts"	VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Filter_Contains_Search_Field( l.filter, 'business_title', l.null ) }">	<MvASSIGN NAME = "l.joins:businessaccounts"	VALUE = 1>
	<MvELSE>																											<MvASSIGN NAME = "l.joins:businessaccounts"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.joins:businessaccounts }">																		<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchLogEntryList_Load_Query_Filter" PARAMETERS = "query var, field_count var, filter_name, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'ondemandcolumns' }">
		<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter_value">
			<MvIF EXPR = "{ ISNULL l.column_code }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.data:ondemandcolumns" MEMBER = "{ l.column_code }" VALUE = 1>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchLogEntry" PARAMETERS = "searchlogentry var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.searchlogentry:id ) }">,
	"srchses_id":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.searchlogentry:srchses_id ) }">",
	"cust_id":		<MvEVAL EXPR = "{ int( l.searchlogentry:cust_id ) }">,
	"order_id":		<MvEVAL EXPR = "{ int( l.searchlogentry:order_id ) }">,
	"dtstamp":		<MvEVAL EXPR = "{ int( l.searchlogentry:dtstamp ) }">,
	"ip":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.searchlogentry:ip ) }">",
	"useragent":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.searchlogentry:useragent ) }">",
	"search":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.searchlogentry:search ) }">",
	"prodcount":	<MvEVAL EXPR = "{ int( l.searchlogentry:prodcount ) }">,
	"origin":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.searchlogentry:origin ) }">"
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchLogEntryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'STOR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.offset"					VALUE = 0>
	<MvASSIGN NAME = "l.count"					VALUE = 0>
	<MvASSIGN NAME = "l.available_filters"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.id',			'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.dtstamp',		'dtstamp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.search',		'search' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.srchses_id',	'srchses_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.ip',			'ip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.useragent',	'useragent' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.order_id',	'order_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.prodcount',	'prodcount' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.origin',		'origin' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'cust.login',		'cust_login' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'cust.pw_email',	'cust_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'ba.title',		'business_title' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'SearchLogEntries', 'sle' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.search_query, l.filter, l.available_filters, g.Module_Feature_SEA_JSON, 'JSON_SearchLogEntryList_Load_Query_Filter', '', l.data ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'sle.id,sle.srchses_id,sle.order_id,sle.dtstamp,sle.ip,sle.useragent,sle.search,sle.prodcount,sle.origin,cust_login:cust.login:null_char,cust_pw_email:cust.pw_email:null_char,business_title:ba.title:null_char', 'sle.id' ) }">

	<MvEVAL EXPR = "{ JSON_SearchLogEntryList_Joins( l.filter, l.sort, l.data:ondemandcolumns, l.joins ) }">

	<MvIF EXPR = "{ l.joins:customers }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cust.login',		'cust_login' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cust.pw_email',	'cust_pw_email' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sle', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = sle.cust_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.joins:businessaccounts }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',		'business_title' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'sle', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql"				VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'SearchLogEntries', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SEA-JSON-00009', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.searchlogentry_count"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT SearchLogEntries.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.searchlogentry_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_SEA_DB ].SearchLogEntry_Read( l.searchlogentry ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.searchlogentry_count ) }">
				<MvEVAL EXPR = "{ JSON_SearchLogEntry( l.searchlogentry ) }">

				<MvIF EXPR = "{ l.data:ondemandcolumns:cust_login }">
					, "cust_login":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( SearchLogEntries.d.cust_login ) }">"
				</MvIF>

				<MvIF EXPR = "{ l.data:ondemandcolumns:cust_pw_email }">
					, "cust_pw_email":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( SearchLogEntries.d.cust_pw_email ) }">"
				</MvIF>

				<MvIF EXPR = "{ l.data:ondemandcolumns:business_title }">
					, "business_title":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( SearchLogEntries.d.business_title ) }">"
				</MvIF>
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "SearchLogEntries" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SearchLogEntries">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomerSearchLogEntryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'STOR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.offset"					VALUE = 0>
	<MvASSIGN NAME = "l.count"					VALUE = 0>
	<MvASSIGN NAME = "l.available_filters"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.id',			'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.dtstamp',		'dtstamp' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.search',		'search' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.srchses_id',	'srchses_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.ip',			'ip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.useragent',	'useragent' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.order_id',	'order_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'sle.prodcount',	'prodcount' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'sle.origin',		'origin' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'SearchLogEntries', 'sle' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'sle.cust_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.customer:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'sle.id,sle.srchses_id,sle.order_id,sle.dtstamp,sle.ip,sle.useragent,sle.search,sle.prodcount,sle.origin', 'sle.id' ) }"> 

	<MvASSIGN NAME = "l.search_sql"				VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'SearchLogEntries', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-SEA-JSON-00010', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.searchlogentry_count"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT SearchLogEntries.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.searchlogentry_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_SEA_DB ].SearchLogEntry_Read( l.searchlogentry ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.searchlogentry_count ) }">
				<MvEVAL EXPR = "{ JSON_SearchLogEntry( l.searchlogentry ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "SearchLogEntries" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "SearchLogEntries">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SearchLogEntryList_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'STOR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.searchlogentry_id" ARRAY = "l.searchlogentry_ids" COUNT = "{ [ g.Module_JSON ].JSON_Array_Integer( g.SearchLogEntry_IDs, l.searchlogentry_ids ) }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SEA_DB ].SearchLogEntry_Load_ID( l.searchlogentry_id, l.searchlogentry ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SEA_DB ].SearchLogEntry_Delete( l.searchlogentry ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.searchlogentry_id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-SEA-JSON-00011', 'Search Log Entry ' $ l.searchlogentry:id $ ' deleted' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvINCLUDE FILE = "json/mivascript.mv">

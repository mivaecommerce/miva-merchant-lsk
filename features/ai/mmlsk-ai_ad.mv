<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-AI-AD-
| Next Error Code: 2   
|
</MvCOMMENT>

<MvFUNCTION NAME = "AI_StoreSettings_Validate" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.AISettings:enabled"					VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.AISettings:enabled ) }">
	<MvASSIGN NAME = "g.AISettings:engine"					VALUE = "{ trim( g.AISettings:engine ) }">
	<MvASSIGN NAME = "g.AISettings:token"					VALUE = "{ trim( g.AISettings:token ) }">
	<MvASSIGN NAME = "g.AISettings:mars_url"				VALUE = "{ trim( g.AISettings:mars_url ) }">
	<MvASSIGN NAME = "g.AISettings:vector_db"				VALUE = "{ trim( g.AISettings:vector_db ) }">
	<MvASSIGN NAME = "g.AISettings:redishost"				VALUE = "{ trim( g.AISettings:redishost ) }">
	<MvASSIGN NAME = "g.AISettings:redisport"				VALUE = "{ trim( g.AISettings:redisport ) }">
	<MvASSIGN NAME = "g.AISettings:redisto"					VALUE = "{ trim( g.AISettings:redisto ) }">
	<MvASSIGN NAME = "g.AISettings:redis_pfx"				VALUE = "{ trim( g.AISettings:redis_pfx ) }">

	<MvASSIGN NAME = "g.AISettings_Redis_UsePassword"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.AISettings_Redis_UsePassword ) }">
	<MvASSIGN NAME = "g.AISettings_Redis_Password"			VALUE = "{ trim( g.AISettings_Redis_Password ) }">
	<MvASSIGN NAME = "g.AISettings_Redis_VerifyPassword"	VALUE = "{ trim( g.AISettings_Redis_VerifyPassword ) }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_AI_DB ].AISettings_Load( l.aisettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ len_var( g.AISettings:engine ) GT 50 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:engine', 'AI Engine must be 50 characters or less' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.AISettings:enabled AND ( ( ISNULL l.aisettings:token ) AND ( ISNULL g.AISettings:token ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:token', 'Please specify your AI Token' ) }">
	</MvIF>

	<MvIF EXPR = "{ len_var( g.AISettings:mars_url ) GT 254 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:mars_url', 'Miva AI REST Services URL must be 254 characters or less' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( substring_var( g.AISettings:mars_url, len_var( g.AISettings:mars_url ), 1 ) EQ '/' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:mars_url', 'Miva AI REST Services URL must not end with \'/\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code_NonBlank_Optional( g.AISettings:redis_pfx ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:redis_pfx', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Value_In_List( g.AISettings:vector_db, 'store_redis,redis' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:vector_db', 'Please select a vector database' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.AISettings:redishost }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:redishost', 'Please enter a Redis host' ) }">
	</MvIF>

	<MvIF EXPR = "{ len_var( g.AISettings:redishost ) GT 254 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:redishost', 'Redis host length cannot exceed 254 characters' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Range_Required( g.AISettings:redisport, 1, 65535 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:redisport', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( g.AISettings:redisto ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings:redisto', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT g.AISettings_Redis_UsePassword }">
		<MvASSIGN NAME = "g.AISettings_RedisPassword" VALUE = "">
	<MvELSE>
		<MvIF EXPR = "{ ISNULL l.aisettings:redispwd AND ISNULL g.AISettings_Redis_Password }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings_Redis_Password', 'Please enter a Redis password' ) }">
		<MvELSEIF EXPR = "{ NOT ISNULL g.AISettings_Redis_Password }">
			<MvIF EXPR = "{ g.AISettings_Redis_Password NE g.AISettings_Redis_VerifyPassword }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( 'AIST', 'AISettings_Redis_Password', 'Redis passwords do not match' ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AI_StoreSettings_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_AI_DB ].AISettings_Load( l.aisettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.aisettings:enabled"		VALUE = "{ g.AISettings:enabled }">
	<MvASSIGN NAME = "l.aisettings:engine"		VALUE = "{ g.AISettings:engine }">
	<MvASSIGN NAME = "l.aisettings:mars_url"	VALUE = "{ g.AISettings:mars_url }">
	<MvASSIGN NAME = "l.aisettings:vector_db"	VALUE = "{ g.AISettings:vector_db }">
	<MvASSIGN NAME = "l.aisettings:redishost"	VALUE = "{ g.AISettings:redishost }">
	<MvASSIGN NAME = "l.aisettings:redisport"	VALUE = "{ g.AISettings:redisport }">
	<MvASSIGN NAME = "l.aisettings:redisto"		VALUE = "{ g.AISettings:redisto }">
	<MvASSIGN NAME = "l.aisettings:redis_pfx"	VALUE = "{ g.AISettings:redis_pfx }">

	<MvIF EXPR = "{ NOT ISNULL g.AISettings:token }">
		<MvASSIGN NAME = "l.aisettings:token"	VALUE = "{ [ g.Module_Library_Crypto ].Encrypt_Payment_Password( g.AISettings:token ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT g.AISettings_Redis_UsePassword }">
		<MvASSIGN NAME = "l.aisettings:redispwd"	VALUE = "">
	<MvELSEIF EXPR = "{ NOT ISNULL g.AISettings_Redis_Password }">
		<MvASSIGN NAME = "l.aisettings:redispwd"	VALUE = "{ [ g.Module_Library_Crypto ].Encrypt_Payment_Password( g.AISettings_Redis_Password ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_AI_DB ].AISettings_Update( l.aisettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-AI-AD-00001', 'AI Settings updated' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AI_StoreSettings_Tabs" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "AIST:AI Settings,AIST/GEN:Generative AI (Experimental),AIST/MARS:AI Product Search,AISI:AI Search Indexes">
</MvFUNCTION>

<MvFUNCTION NAME = "AI_StoreSettings_Head" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Tab EQ 'AISI' }">
		<MvEVAL EXPR = "{ Element_AISearchIndexList_CSS() }">
		<MvEVAL EXPR = "{ Element_AISearchIndexList_JavaScript() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AI_StoreSettings_Content" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_AI_DB ].AISettings_Load( l.aisettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ g.Load_Fields }">
		<MvASSIGN NAME = "g.AISettings"							VALUE = "">
		<MvASSIGN NAME = "g.AISettings:enabled"					VALUE = "{ l.aisettings:enabled }">
		<MvASSIGN NAME = "g.AISettings:engine"					VALUE = "{ l.aisettings:engine }">
		<MvASSIGN NAME = "g.AISettings:token"					VALUE = "">
		<MvASSIGN NAME = "g.AISettings:mars_url"				VALUE = "{ l.aisettings:mars_url }">
		<MvASSIGN NAME = "g.AISettings:vector_db"				VALUE = "{ l.aisettings:vector_db }">
		<MvASSIGN NAME = "g.AISettings:redishost"				VALUE = "{ l.aisettings:redishost }">
		<MvASSIGN NAME = "g.AISettings:redisport"				VALUE = "{ l.aisettings:redisport }">
		<MvASSIGN NAME = "g.AISettings:redisto"					VALUE = "{ l.aisettings:redisto }">
		<MvASSIGN NAME = "g.AISettings:redispwd"				VALUE = "">
		<MvASSIGN NAME = "g.AISettings:redis_pfx"				VALUE = "{ l.aisettings:redis_pfx }">

		<MvASSIGN NAME = "g.AISettings_Redis_UsePassword"		VALUE = "{ NOT ISNULL l.aisettings:redispwd }">
		<MvASSIGN NAME = "g.AISettings_Redis_Password"			VALUE = "">
		<MvASSIGN NAME = "g.AISettings_Redis_VerifyPassword"	VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Tab_Visible( g.Tab, 'AIST' ) }">
		<MvHIDE FIELDS = "g.AISettings, g.AISettings_Redis_UsePassword, g.AISettings_Redis_Password, g.AISettings_Redis_VerifyPassword">
	<MvELSE>
		<MvIF EXPR = "{ g.AISettings:vector_db EQ 'redis' }">
			<MvASSIGN NAME = "l.redis_connected" 				VALUE = 0>
			<MvASSIGN NAME = "l.redis_auth" 					VALUE = 0>
			<MvASSIGN NAME = "l.redis_ping" 					VALUE = 0>

			<MvIF EXPR = "{ substring_var( g.AISettings:redishost, 1, 1 ) EQ '/' }">	<MvASSIGN NAME = "l.redis_connected" VALUE = "{ redis_connect_unix( g.AISettings:redishost, l.conn_id ) }">
			<MvELSE>																	<MvASSIGN NAME = "l.redis_connected" VALUE = "{ redis_connect_with_timeout( g.AISettings:redishost, g.AISettings:redisport, 5000, l.conn_id ) }">
			</MvIF>

			<MvIF EXPR = "{ l.redis_connected }">
				<MvIF EXPR = "{ NOT ISNULL l.aisettings:redispwd }">	<MvASSIGN NAME = "l.redis_auth" VALUE = "{ redis_auth( l.conn_id, [ g.Module_Library_Crypto ].Decrypt_Payment_Password( l.aisettings:redispwd ) ) }">
				<MvELSE>												<MvASSIGN NAME = "l.redis_auth" VALUE = 1>
				</MvIF>

				<MvASSIGN NAME = "l.redis_ping"					VALUE = "{ redis_ping( l.conn_id ) EQ 'PONG' }">
			</MvIF>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'AIST', 'GEN' ) }">
		<table width="100%">
			<tr><td nowrap>
				&nbsp;
			</td><td width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox_With_Label( g.AISettings:enabled, 'AISettings:enabled', 'Yes', 'Enabled' ) }">
			</td></tr>
			<tr><td nowrap>
				<b>OpenAI Engine:</b>
			</td><td width="100%">
				<input type="text" size="40" name="AISettings:engine" value="{ encodeentities( g.AISettings:engine ) }" />
			</td></tr>
			<tr><td nowrap>
				<MvIF EXPR = "{ ISNULL l.aisettings:token }">
					<b>OpenAI Token:</b>
				<MvELSE>
					OpenAI Token:
				</MvIF>
			</td><td width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCredentialInput( 'AISettings:token', 'password', g.AISettings:token, '', '', '', 80 ) }">
			</td></tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'AIST', 'MARS' ) }">
		<table width="100%" cellpadding="2" cellspacing="0">
			<tr><td nowrap>
				<b>Miva AI REST Services URL:</b>
			</td><td width="100%">
				<input type="text" size="40" name="AISettings:mars_url" value="{ encodeentities( g.AISettings:mars_url ) }" />
			</td></tr>

			<tr><td nowrap>
				<b>Vector Database:</b>
			</td><td width="100%">
				<select name="AISettings:vector_db">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'store_redis', g.AISettings:vector_db, 'Redis (Store)' ) }">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'redis', g.AISettings:vector_db, 'Redis (Separate)' ) }">
				</select>
			</td></tr>

			<tr>
				<td nowrap><b>Redis Host:</b></td>
				<td width="100%">
					<input type="text" size="25" name="AISettings:redishost" value="{ encodeentities( g.AISettings:redishost ) }" /> IPv4, IPv6, or UNIX socket (when using a UNIX socket port and timeout values are ignored)
				</td>
			</tr>
			<tr>
				<td nowrap><b>Redis Port:</b></td>
				<td width="100%">
					<input type="text" size="25" name="AISettings:redisport" value="{ encodeentities( g.AISettings:redisport ) }" />
				</td>
			</tr>
			<tr>
				<td nowrap><b>Redis Timeout:</b></td>
				<td width="100%">
					<input type="text" size="5" name="AISettings:redisto" value="{ encodeentities( g.AISettings:redisto ) }" /> millisecond(s)
				</td>
			</tr>
			<tr>
				<td nowrap>&nbsp;</td>
				<td width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio_With_Label( 'AISettings_Redis_UsePassword', 0,	g.AISettings_Redis_UsePassword, '' ) }"> No Password<br />
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio_With_Label( 'AISettings_Redis_UsePassword', 1,	g.AISettings_Redis_UsePassword, '' ) }"> Use Password
				</td>
			</tr>
			<tr>
				<td nowrap>Redis Password:</td>
				<td width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCredentialInput( 'AISettings_Redis_Password', 'password', g.AISettings_Redis_Password, '', '', '', 25 ) }">
				</td>
			</tr>
			<tr>
				<td nowrap>Verify Redis Password:</td>
				<td width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCredentialInput( 'AISettings_Redis_VerifyPassword', 'password', g.AISettings_Redis_VerifyPassword, '', '', '', 25 ) }">
				</td>
			</tr>
			<tr><td nowrap>
				Redis Key Prefix:
			</td><td width="100%">
				<input type="text" size="40" name="AISettings:redis_pfx" value="{ encodeentities( g.AISettings:redis_pfx ) }" />
			</td></tr>

			<tr>
				<td valign="top" nowrap>Status:</td>
				<td width="100%">
				<MvIF EXPR = "{ g.AISettings:vector_db EQ 'redis' }">
					<MvIF EXPR = "{ NOT l.redis_connected }">
						<b><font color="red">Not Connected</font></b>
					<MvELSE>
						<MvIF EXPR = "{ NOT l.redis_auth AND l.redis_ping }">			<b><font color="red">Connected, Auth Failed: Password Not Required</font></b>
						<MvELSEIF EXPR = "{ l.redis_auth AND NOT l.redis_ping }">		<b><font color="red">Connected, Auth Failed: Password Required</font></b>
						<MvELSEIF EXPR = "{ NOT l.redis_auth AND NOT l.redis_ping }">	<b><font color="red">Connected, Auth Failed: Password Incorrect</font></b>
						<MvELSE>														<b><font color="green">Connected</font></b>
						</MvIF>
					</MvIF>
				<MvELSE>
					<b>N/A</b>
				</MvIF>
				</td>
			</tr>
		</table>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].Tab_Visible( g.Tab, 'AISI' ) }">
		<script type="text/javascript">
			MMScreen_LoadFinished( () => { new AISearchIndexList(); } );
		</script>

		<MvEVAL EXPR = "{ Element_AISearchIndexList_HTML() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvINCLUDE FILE = "features/ai/functions.mv">
<MvINCLUDE FILE = "features/ai/aidialog.mv">
<MvINCLUDE FILE = "features/ai/aisavefavoritedialog.mv">
<MvINCLUDE FILE = "features/ai/aisearchindexaddeditdialog.mv">
<MvINCLUDE FILE = "features/ai/aisearchindexlist.mv">

<MvINCLUDE FILE = "features/ai/combined.mv">

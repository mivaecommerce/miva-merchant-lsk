<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-AI-DB-
| Next Error Code: 58
|
</MvCOMMENT>

<MvFUNCTION NAME = "AI_Store_Create" PARAMETERS = "store var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| sNN_AISettings
	|
	</MvCOMMENT>

	<MvQUERY NAME   = "Merchant"
			 QUERY  = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'AISettings
						  (
							enabled		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							token		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()		$ ',
							engine		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							mars_url	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							vector_db	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )	$ ',
							redishost	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							redisport	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							redisto		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							redispwd	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							redis_pfx	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.aisettings:enabled"		VALUE = 0>
	<MvASSIGN NAME = "l.aisettings:token"		VALUE = "">
	<MvASSIGN NAME = "l.aisettings:engine"		VALUE = "gpt-3.5-turbo">
	<MvASSIGN NAME = "l.aisettings:mars_url"	VALUE = "https://vexture.mivacdn.com">
	<MvASSIGN NAME = "l.aisettings:vector_db"	VALUE = "store_redis">
	<MvASSIGN NAME = "l.aisettings:redishost"	VALUE = "127.0.0.1">
	<MvASSIGN NAME = "l.aisettings:redisport"	VALUE = 6379>
	<MvASSIGN NAME = "l.aisettings:redisto"		VALUE = 1000>
	<MvASSIGN NAME = "l.aisettings:redispwd"	VALUE = "">
	<MvASSIGN NAME = "l.aisettings:redis_pfx"	VALUE = "{ l.store:code }">

	<MvIF EXPR = "{ NOT AISettings_Insert( l.aisettings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_AISearchIndexes
	|
	</MvCOMMENT>

	<MvQUERY NAME   = "Merchant"
			 QUERY  = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexes
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							active		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							source		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							max_res		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							specific_t	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 7, 4 )	$ ',
							specific_e	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 7, 4 )	$ ',
							broad_e		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 7, 4 )	$ ',
							sparse_n	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							blend_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							idx_templ	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'AISearchIndexes_1 ON ' $ g.Store_Table_Prefix $ 'AISearchIndexes ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'AISearchIndexes_2 ON ' $ g.Store_Table_Prefix $ 'AISearchIndexes ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'AISearchIndexes', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_AISearchIndexRelationalFields
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields
						  (
						  	index_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_Integer()			$ ',
							code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							code_st		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							code_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							code_wt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							name_st		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							name_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							name_wt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							sku			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							sku_st		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							sku_rel		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							sku_wt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							descrip		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							desc_st		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							desc_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							desc_wt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							atr_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							acode_st	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							acode_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							acode_wt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							atr_prompt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							aprom_st	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							aprom_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							aprom_wt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							opt_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							ocode_st	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							ocode_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							ocode_wt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							opt_prompt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							oprom_st	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							oprom_rel	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							oprom_wt	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00040', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields_1  ON ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields ( index_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00041', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_AISearchIndexRelationalCustomFields
	|
	</MvCOMMENT>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields
						  (
						  	index_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							module_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							field_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							enabled		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							searchtype	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )		$ ',
							relevance	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							weight		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00042', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields_1 ON ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields ( index_id, module_id, field_code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00043', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_AISearchIndexXProduct
	|
	</MvCOMMENT>

	<MvQUERY NAME   = "Merchant"
			 QUERY  = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
						  (
							index_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							status		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 )		$ ',
							last_hash	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 32 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct_1 ON ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct ( index_id, product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct_2 ON ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct ( index_id, status )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00035', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create the template directory for search indexes
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.null" VALUE = "{ smkdir( g.Module_Root $ 'templates/aisearchindexes' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AI_Store_Delete" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'AISettings' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexes' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_AISettings
|
</MvCOMMENT>

<MvFUNCTION NAME = "AISettings_Read" PARAMETERS = "aisettings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.aisettings:enabled"		VALUE = "{ AISettings.d.enabled }">
	<MvASSIGN NAME = "l.aisettings:token"		VALUE = "{ AISettings.d.token }">
	<MvASSIGN NAME = "l.aisettings:engine"		VALUE = "{ AISettings.d.engine }">
	<MvASSIGN NAME = "l.aisettings:mars_url"	VALUE = "{ AISettings.d.mars_url }">
	<MvASSIGN NAME = "l.aisettings:vector_db"	VALUE = "{ AISettings.d.vector_db }">
	<MvASSIGN NAME = "l.aisettings:redishost"	VALUE = "{ AISettings.d.redishost }">
	<MvASSIGN NAME = "l.aisettings:redisport"	VALUE = "{ AISettings.d.redisport }">
	<MvASSIGN NAME = "l.aisettings:redisto"		VALUE = "{ AISettings.d.redisto }">
	<MvASSIGN NAME = "l.aisettings:redispwd"	VALUE = "{ AISettings.d.redispwd }">
	<MvASSIGN NAME = "l.aisettings:redis_pfx"	VALUE = "{ AISettings.d.redis_pfx }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISettings_Load" PARAMETERS = "aisettings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "AISettings"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISettings' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ AISettings_Read( l.aisettings ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISettings">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISettings_Load_Cached" PARAMETERS = "aisettings var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference( 'aisettings_load_cached', 'aisettings', l.ref ) }">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Requires_Load( l.ref ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ AISettings_Load( l.aisettings ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Store_Result( l.ref, l.result, l.aisettings ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].DB_Cache_Data_Result( l.ref, l.aisettings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISettings_Insert" PARAMETERS = "aisettings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISettings
						  ( enabled, token, engine, mars_url, vector_db, redishost, redisport, redisto, redispwd, redis_pfx )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.aisettings:enabled, l.aisettings:token, l.aisettings:engine, l.aisettings:mars_url, l.aisettings:vector_db,
			 		   l.aisettings:redishost, l.aisettings:redisport, l.aisettings:redisto, l.aisettings:redispwd, l.aisettings:redis_pfx">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISettings_Update" PARAMETERS = "aisettings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISettings
						  SET
							enabled		= ?,
							token		= ?,
							engine		= ?,
							mars_url	= ?,
							vector_db	= ?,
							redishost	= ?,
							redisport	= ?,
							redisto		= ?,
							redispwd	= ?,
							redis_pfx	= ?' }"
			 FIELDS	= "l.aisettings:enabled, l.aisettings:token, l.aisettings:engine, l.aisettings:mars_url, l.aisettings:vector_db,
			 		   l.aisettings:redishost, l.aisettings:redisport, l.aisettings:redisto, l.aisettings:redispwd, l.aisettings:redis_pfx">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_AISearchIndexes
|
</MvCOMMENT>

<MvFUNCTION NAME = "AISearchIndex_Read" PARAMETERS = "index var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.index:id"			VALUE = "{ AISearchIndexes.d.id }">
	<MvASSIGN NAME = "l.index:active"		VALUE = "{ AISearchIndexes.d.active }">
	<MvASSIGN NAME = "l.index:code"			VALUE = "{ AISearchIndexes.d.code }">
	<MvASSIGN NAME = "l.index:source"		VALUE = "{ AISearchIndexes.d.source }">
	<MvASSIGN NAME = "l.index:max_res"		VALUE = "{ AISearchIndexes.d.max_res }">
	<MvASSIGN NAME = "l.index:specific_t"	VALUE = "{ AISearchIndexes.d.specific_t }">
	<MvASSIGN NAME = "l.index:specific_e"	VALUE = "{ AISearchIndexes.d.specific_e }">
	<MvASSIGN NAME = "l.index:broad_e"		VALUE = "{ AISearchIndexes.d.broad_e }">
	<MvASSIGN NAME = "l.index:sparse_n"		VALUE = "{ AISearchIndexes.d.sparse_n }">
	<MvASSIGN NAME = "l.index:blend_rel"	VALUE = "{ AISearchIndexes.d.blend_rel }">
	<MvASSIGN NAME = "l.index:idx_templ"	VALUE = "{ AISearchIndexes.d.idx_templ }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Defaults" PARAMETERS = "index var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.index:active"		VALUE = 1>
	<MvASSIGN NAME = "l.index:code"			VALUE = "">
	<MvASSIGN NAME = "l.index:source"		VALUE = "">
	<MvASSIGN NAME = "l.index:max_res"		VALUE = 1000>
	<MvASSIGN NAME = "l.index:specific_t"	VALUE = 82.0000>
	<MvASSIGN NAME = "l.index:specific_e"	VALUE = 77.0000>
	<MvASSIGN NAME = "l.index:broad_e"		VALUE = 68.0000>
	<MvASSIGN NAME = "l.index:sparse_n"		VALUE = 60>
	<MvASSIGN NAME = "l.index:blend_rel"	VALUE = 0>
	<MvASSIGN NAME = "l.index:idx_templ" 	VALUE = "{ [ g.Module_Feature_AI_UT ].AISearchIndex_Default_Template() }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Insert" PARAMETERS = "index var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.index:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'AISearchIndexes' ) }">

	<MvIF EXPR = "{ NOT AISearchIndex_Insert_LowLevel( l.index ) OR
					NOT AISearchIndexXProduct_Insert_All_Products_Queued( l.index ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference_Delete( 'aisearchindexlist_load_all_cached', 'indexes' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Insert_LowLevel" PARAMETERS = "index var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexes
						  ( id, active, code, source, max_res, specific_t, specific_e, broad_e, sparse_n, blend_rel, idx_templ )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.index:id, l.index:active, l.index:code, l.index:source, l.index:max_res,
			 		   l.index:specific_t, l.index:specific_e, l.index:broad_e, l.index:sparse_n,
					   l.index:blend_rel, l.index:idx_templ">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Update" PARAMETERS = "index var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
		<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISearchIndexes
						  SET
							active		= ?,
							code		= ?,
							source		= ?,
							max_res		= ?,
							specific_t	= ?,
							specific_e	= ?,
							broad_e		= ?,
							sparse_n	= ?,
							blend_rel	= ?,
							idx_templ	= ?
						  WHERE
							id = ?' }"
			 FIELDS	= "l.index:active, l.index:code, l.index:source, l.index:max_res,
			 		   l.index:specific_t, l.index:specific_e, l.index:broad_e, l.index:sparse_n,
					   l.index:blend_rel, l.index:idx_templ,
			 		   l.index:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Delete" PARAMETERS = "index var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT AISearchIndexXProduct_Delete_All_Index( l.index:id )				OR
					NOT AISearchIndexRelationalFields_Delete_Index( l.index:id )			OR
					NOT AISearchIndexRelationalCustomField_Delete_All_Index( l.index:id )	OR
					NOT AISearchIndex_Delete_LowLevel( l.index:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference_Delete( 'aisearchindexlist_load_all_cached', 'indexes' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexes WHERE id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Load_ID" PARAMETERS = "id, index var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "AISearchIndexes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexes WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ AISearchIndexes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-AI-DB-00033' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ AISearchIndex_Read( l.index ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndex_Load_Code" PARAMETERS = "code, index var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "AISearchIndexes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexes WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ AISearchIndexes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-AI-DB-00034' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ AISearchIndex_Read( l.index ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexes">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexList_Load_All_Cached" PARAMETERS = "indexes var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference( 'aisearchindexlist_load_all_cached', 'indexes', l.ref ) }">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Requires_Load( l.ref ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ AISearchIndexList_Load_All( l.indexes ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Store_Result( l.ref, l.result, l.indexes ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].DB_Cache_Data_Result( l.ref, l.indexes ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexList_Load_All" PARAMETERS = "indexes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "AISearchIndexes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexes ORDER BY id ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00015', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.index_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT AISearchIndexes.d.EOF }">
		<MvEVAL EXPR = "{ AISearchIndex_Read( l.indexes[ ++l.index_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "AISearchIndexes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-AI-DB-00016', l.index_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexList_Load_Active_Cached" PARAMETERS = "indexes var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference( 'aisearchindexlist_load_all_active_cached', 'indexes', l.ref ) }">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Requires_Load( l.ref ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ AISearchIndexList_Load_Active( l.indexes ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Store_Result( l.ref, l.result, l.indexes ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].DB_Cache_Data_Result( l.ref, l.indexes ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexList_Load_Active" PARAMETERS = "indexes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "AISearchIndexes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexes WHERE active = 1 ORDER BY id ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00017', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.index_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT AISearchIndexes.d.EOF }">
		<MvEVAL EXPR = "{ AISearchIndex_Read( l.indexes[ ++l.index_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "AISearchIndexes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-AI-DB-00018', l.index_count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_AISearchIndexRelationalFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "AISearchIndexRelationalFields_Read" PARAMETERS = "aisearchindexrelationalfields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:index_id"		VALUE = "{ AISearchIndexRelationalFields.d.index_id }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code"			VALUE = "{ AISearchIndexRelationalFields.d.code }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code_st"		VALUE = "{ AISearchIndexRelationalFields.d.code_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code_rel"		VALUE = "{ AISearchIndexRelationalFields.d.code_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code_wt"		VALUE = "{ AISearchIndexRelationalFields.d.code_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name"			VALUE = "{ AISearchIndexRelationalFields.d.name }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name_st"		VALUE = "{ AISearchIndexRelationalFields.d.name_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name_rel"		VALUE = "{ AISearchIndexRelationalFields.d.name_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name_wt"		VALUE = "{ AISearchIndexRelationalFields.d.name_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku"			VALUE = "{ AISearchIndexRelationalFields.d.sku }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku_st"		VALUE = "{ AISearchIndexRelationalFields.d.sku_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku_rel"		VALUE = "{ AISearchIndexRelationalFields.d.sku_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku_wt"		VALUE = "{ AISearchIndexRelationalFields.d.sku_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:descrip"		VALUE = "{ AISearchIndexRelationalFields.d.descrip }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:desc_st"		VALUE = "{ AISearchIndexRelationalFields.d.desc_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:desc_rel"		VALUE = "{ AISearchIndexRelationalFields.d.desc_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:desc_wt"		VALUE = "{ AISearchIndexRelationalFields.d.desc_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:atr_code"		VALUE = "{ AISearchIndexRelationalFields.d.atr_code }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:acode_st"		VALUE = "{ AISearchIndexRelationalFields.d.acode_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:acode_rel"	VALUE = "{ AISearchIndexRelationalFields.d.acode_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:acode_wt"		VALUE = "{ AISearchIndexRelationalFields.d.acode_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:atr_prompt"	VALUE = "{ AISearchIndexRelationalFields.d.atr_prompt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:aprom_st"		VALUE = "{ AISearchIndexRelationalFields.d.aprom_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:aprom_rel"	VALUE = "{ AISearchIndexRelationalFields.d.aprom_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:aprom_wt"		VALUE = "{ AISearchIndexRelationalFields.d.aprom_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:opt_code"		VALUE = "{ AISearchIndexRelationalFields.d.opt_code }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:ocode_st"		VALUE = "{ AISearchIndexRelationalFields.d.ocode_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:ocode_rel"	VALUE = "{ AISearchIndexRelationalFields.d.ocode_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:ocode_wt"		VALUE = "{ AISearchIndexRelationalFields.d.ocode_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:opt_prompt"	VALUE = "{ AISearchIndexRelationalFields.d.opt_prompt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:oprom_st"		VALUE = "{ AISearchIndexRelationalFields.d.oprom_st }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:oprom_rel"	VALUE = "{ AISearchIndexRelationalFields.d.oprom_rel }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:oprom_wt"		VALUE = "{ AISearchIndexRelationalFields.d.oprom_wt }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:max_terms"	VALUE = "{ AISearchIndexRelationalFields.d.max_terms }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:max_res"		VALUE = "{ AISearchIndexRelationalFields.d.max_res }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:index_id"		VALUE = "{ AISearchIndexRelationalFields.d.index_id }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:logrtanon"	VALUE = "{ AISearchIndexRelationalFields.d.logrtanon }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:logrtcust"	VALUE = "{ AISearchIndexRelationalFields.d.logrtcust }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:logrtorder"	VALUE = "{ AISearchIndexRelationalFields.d.logrtorder }">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:logexua"		VALUE = "{ AISearchIndexRelationalFields.d.logexua }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalFields_Default" PARAMETERS = "aisearchindexrelationalfields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code"			VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code_rel"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:code_wt"		VALUE = 1.00>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name"			VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name_rel"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:name_wt"		VALUE = 1.00>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku"			VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku_rel"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:sku_wt"		VALUE = 1.00>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:descrip"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:desc_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:desc_rel"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:desc_wt"		VALUE = 1.00>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:atr_code"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:acode_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:acode_rel"	VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:acode_wt"		VALUE = 1.00>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:atr_prompt"	VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:aprom_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:aprom_rel"	VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:aprom_wt"		VALUE = 1.00>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:opt_code"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:ocode_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:ocode_rel"	VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:ocode_wt"		VALUE = 1.00>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:opt_prompt"	VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:oprom_st"		VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:oprom_rel"	VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalfields:oprom_wt"		VALUE = 1.00>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalFields_Insert" PARAMETERS = "aisearchindexrelationalfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields
						  ( index_id, code, code_st, code_rel, code_wt, name, name_st, name_rel, name_wt, sku, sku_st, sku_rel, sku_wt,
						    descrip, desc_st, desc_rel, desc_wt, atr_code, acode_st, acode_rel, acode_wt, atr_prompt, aprom_st,
						    aprom_rel, aprom_wt, opt_code, ocode_st, ocode_rel, ocode_wt, opt_prompt, oprom_st, oprom_rel, oprom_wt )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.aisearchindexrelationalfields:index_id,
			 		   l.aisearchindexrelationalfields:code, l.aisearchindexrelationalfields:code_st, l.aisearchindexrelationalfields:code_rel, l.aisearchindexrelationalfields:code_wt,
			 		   l.aisearchindexrelationalfields:name, l.aisearchindexrelationalfields:name_st, l.aisearchindexrelationalfields:name_rel, l.aisearchindexrelationalfields:name_wt,
			 		   l.aisearchindexrelationalfields:sku, l.aisearchindexrelationalfields:sku_st, l.aisearchindexrelationalfields:sku_rel, l.aisearchindexrelationalfields:sku_wt,
			 		   l.aisearchindexrelationalfields:descrip, l.aisearchindexrelationalfields:desc_st, l.aisearchindexrelationalfields:desc_rel, l.aisearchindexrelationalfields:desc_wt,
			 		   l.aisearchindexrelationalfields:atr_code, l.aisearchindexrelationalfields:acode_st, l.aisearchindexrelationalfields:acode_rel, l.aisearchindexrelationalfields:acode_wt,
			 		   l.aisearchindexrelationalfields:atr_prompt, l.aisearchindexrelationalfields:aprom_st, l.aisearchindexrelationalfields:aprom_rel, l.aisearchindexrelationalfields:aprom_wt,
			 		   l.aisearchindexrelationalfields:opt_code, l.aisearchindexrelationalfields:ocode_st, l.aisearchindexrelationalfields:ocode_rel, l.aisearchindexrelationalfields:ocode_wt,
			 		   l.aisearchindexrelationalfields:opt_prompt, l.aisearchindexrelationalfields:oprom_st, l.aisearchindexrelationalfields:oprom_rel, l.aisearchindexrelationalfields:oprom_wt">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00044', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalFields_Delete_Index" PARAMETERS = "index_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields WHERE index_id = ?' }"
			 FIELDS = "l.index_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00045', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference_Delete( 'aisearchindexrelationalfields_load_index_cached', l.index_id ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalFields_Update" PARAMETERS = "aisearchindexrelationalfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields
			 			  SET
			 			  	code		= ?,
							code_st		= ?,
							code_rel	= ?,
							code_wt		= ?,
							name		= ?,
							name_st		= ?,
							name_rel	= ?,
							name_wt		= ?,
							sku			= ?,
							sku_st		= ?,
							sku_rel		= ?,
							sku_wt		= ?,
							descrip		= ?,
							desc_st		= ?,
							desc_rel	= ?,
							desc_wt		= ?,
							atr_code	= ?,
							acode_st	= ?,
							acode_rel	= ?,
							acode_wt	= ?,
							atr_prompt	= ?,
							aprom_st	= ?,
							aprom_rel	= ?,
							aprom_wt	= ?,
							opt_code	= ?,
							ocode_st	= ?,
							ocode_rel	= ?,
							ocode_wt	= ?,
							opt_prompt	= ?,
							oprom_st	= ?,
							oprom_rel	= ?,
							oprom_wt	= ?
						  WHERE
						  	index_id	= ?' }"
			 FIELDS = "l.aisearchindexrelationalfields:code, l.aisearchindexrelationalfields:code_st, l.aisearchindexrelationalfields:code_rel, l.aisearchindexrelationalfields:code_wt,
			 		   l.aisearchindexrelationalfields:name, l.aisearchindexrelationalfields:name_st, l.aisearchindexrelationalfields:name_rel, l.aisearchindexrelationalfields:name_wt,
			 		   l.aisearchindexrelationalfields:sku, l.aisearchindexrelationalfields:sku_st, l.aisearchindexrelationalfields:sku_rel, l.aisearchindexrelationalfields:sku_wt,
			 		   l.aisearchindexrelationalfields:descrip, l.aisearchindexrelationalfields:desc_st, l.aisearchindexrelationalfields:desc_rel, l.aisearchindexrelationalfields:desc_wt,
			 		   l.aisearchindexrelationalfields:atr_code, l.aisearchindexrelationalfields:acode_st, l.aisearchindexrelationalfields:acode_rel, l.aisearchindexrelationalfields:acode_wt,
			 		   l.aisearchindexrelationalfields:atr_prompt, l.aisearchindexrelationalfields:aprom_st, l.aisearchindexrelationalfields:aprom_rel, l.aisearchindexrelationalfields:aprom_wt,
			 		   l.aisearchindexrelationalfields:opt_code, l.aisearchindexrelationalfields:ocode_st, l.aisearchindexrelationalfields:ocode_rel, l.aisearchindexrelationalfields:ocode_wt,
			 		   l.aisearchindexrelationalfields:opt_prompt, l.aisearchindexrelationalfields:oprom_st, l.aisearchindexrelationalfields:oprom_rel, l.aisearchindexrelationalfields:oprom_wt,
					   l.aisearchindexrelationalfields:index_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00046', g.MvQUERY_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference_Delete( 'aisearchindexrelationalfields_load_index_cached', l.index_id ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalFields_Load_Index_Cached" PARAMETERS = "index_id, aisearchindexrelationalfields var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Reference( 'aisearchindexrelationalfields_load_index_cached', l.index_id, l.ref ) }">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Requires_Load( l.ref ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ AISearchIndexRelationalFields_Load_Index( l.index_id, l.aisearchindexrelationalfields ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].DB_Cache_Data_Store_Result( l.ref, l.result, l.aisearchindexrelationalfields ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].DB_Cache_Data_Result( l.ref, l.aisearchindexrelationalfields ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalFields_Load_Index" PARAMETERS = "index_id, aisearchindexrelationalfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "AISearchIndexRelationalFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalFields WHERE index_id = ?' }"
				FIELDS	= "l.index_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00047', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ AISearchIndexRelationalFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexRelationalFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-AI-DB-00048' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ AISearchIndexRelationalFields_Read( l.aisearchindexrelationalfields ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexRelationalFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_AISearchIndexRelationalCustomFields
|
</MvCOMMENT>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Default" PARAMETERS = "index_id, module_id, field_code, aisearchindexrelationalcustomfield var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:index_id"	VALUE = "{ l.index_id }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:module_id"	VALUE = "{ l.module_id }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:field_code"	VALUE = "{ l.field_code }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:enabled"		VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:searchtype"	VALUE = "contains_term">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:relevance"	VALUE = 0>
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:weight"		VALUE = 1.00>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Read" PARAMETERS = "aisearchindexrelationalcustomfield var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:index_id"	VALUE = "{ AISearchIndexRelationalCustomFields.d.index_id }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:module_id"	VALUE = "{ AISearchIndexRelationalCustomFields.d.module_id }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:field_code"	VALUE = "{ AISearchIndexRelationalCustomFields.d.field_code }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:enabled"		VALUE = "{ AISearchIndexRelationalCustomFields.d.enabled }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:searchtype"	VALUE = "{ AISearchIndexRelationalCustomFields.d.searchtype }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:relevance"	VALUE = "{ AISearchIndexRelationalCustomFields.d.relevance }">
	<MvASSIGN NAME = "l.aisearchindexrelationalcustomfield:weight"		VALUE = "{ AISearchIndexRelationalCustomFields.d.weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomFields_Equal_Default" PARAMETERS = "aisearchindexrelationalcustomfield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.aisearchindexrelationalcustomfield:enabled }">						<MvFUNCTIONRETURN VALUE = 0>	</MvIF>
	<MvIF EXPR = "{ l.aisearchindexrelationalcustomfield:searchtype NE 'contains_term' }">	<MvFUNCTIONRETURN VALUE = 0>	</MvIF>
	<MvIF EXPR = "{ l.aisearchindexrelationalcustomfield:relevance }">						<MvFUNCTIONRETURN VALUE = 0>	</MvIF>
	<MvIF EXPR = "{ l.aisearchindexrelationalcustomfield:weight NE 1.00 }">					<MvFUNCTIONRETURN VALUE = 0>	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Insert" PARAMETERS = "aisearchindexrelationalcustomfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields
						  ( index_id, module_id, field_code, enabled, searchtype, relevance, weight )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.aisearchindexrelationalcustomfield:index_id, l.aisearchindexrelationalcustomfield:module_id, l.aisearchindexrelationalcustomfield:field_code,
			 		   l.aisearchindexrelationalcustomfield:enabled, l.aisearchindexrelationalcustomfield:searchtype, l.aisearchindexrelationalcustomfield:relevance,
					   l.aisearchindexrelationalcustomfield:weight">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00049', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Update" PARAMETERS = "aisearchindexrelationalcustomfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields
			 			  SET
			 			  	enabled		= ?,
							searchtype	= ?,
							relevance	= ?,
			 			  	weight		= ?
			 			  WHERE
						  	index_id	= ? AND
			 			  	module_id 	= ? AND
			 			  	field_code	= ?' }"
			 FIELDS	= "l.aisearchindexrelationalcustomfield:enabled, l.aisearchindexrelationalcustomfield:searchtype, l.aisearchindexrelationalcustomfield:relevance,
					   l.aisearchindexrelationalcustomfield:weight,
					   l.aisearchindexrelationalcustomfield:index_id, l.aisearchindexrelationalcustomfield:module_id, l.aisearchindexrelationalcustomfield:field_code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00050', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Delete_Field" PARAMETERS = "index_id, module_id, field_code" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields WHERE index_id = ? AND module_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'field_code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
			 FIELDS	= "l.index_id, l.module_id, l.field_code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00051', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Delete_All_Index" PARAMETERS = "index_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields WHERE index_id = ?' }"
			 FIELDS	= "l.index_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00052', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Disable_All_Index" PARAMETERS = "index_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields SET enabled = 0 WHERE index_id = ?' }"
			 FIELDS	 = "l.index_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00053', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Load_FieldOrDefault" PARAMETERS = "index_id, module_id, field_code, aisearchindexrelationalcustomfield var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ AISearchIndexRelationalCustomField_Load( l.index_id, l.module_id, l.field_code, l.aisearchindexrelationalcustomfield ) }">	<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">																			<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ AISearchIndexRelationalCustomField_Default( l.index_id, l.module_id, l.field_code, l.aisearchindexrelationalcustomfield ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomField_Load" PARAMETERS = "index_id, module_id, field_code, aisearchindexrelationalcustomfield var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "AISearchIndexRelationalCustomFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields WHERE index_id = ? AND module_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'field_code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.index_id, l.module_id, l.field_code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00054', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ AISearchIndexRelationalCustomFields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexRelationalCustomFields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-AI-DB-00055' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ AISearchIndexRelationalCustomField_Read( l.aisearchindexrelationalcustomfield ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexRelationalCustomFields">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexRelationalCustomFieldList_Load_Index" PARAMETERS = "index_id, aisearchindexrelationalcustomfields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "AISearchIndexRelationalCustomFields"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexRelationalCustomFields WHERE index_id = ? ORDER BY module_id, field_code' }"
				FIELDS	= "l.index_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00056', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT AISearchIndexRelationalCustomFields.d.EOF }">
		<MvEVAL EXPR = "{ AISearchIndexRelationalCustomField_Read( l.aisearchindexrelationalcustomfields[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "AISearchIndexRelationalCustomFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexRelationalCustomFields">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-AI-DB-00057', l.count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_AISearchIndexXProduct
|
</MvCOMMENT>

<MvFUNCTION NAME = "AISearchIndexXProduct_Read" PARAMETERS = "aisearchindexxproduct var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.aisearchindexxproduct:index_id"		VALUE = "{ AISearchIndexXProduct.d.index_id }">
	<MvASSIGN NAME = "l.aisearchindexxproduct:product_id"	VALUE = "{ AISearchIndexXProduct.d.product_id }">
	<MvASSIGN NAME = "l.aisearchindexxproduct:status"		VALUE = "{ AISearchIndexXProduct.d.status }">
	<MvASSIGN NAME = "l.aisearchindexxproduct:last_hash"	VALUE = "{ AISearchIndexXProduct.d.last_hash }">
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Insert" PARAMETERS = "aisearchindexxproduct var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
						  ( index_id, product_id, status, last_hash )
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.aisearchindexxproduct:index_id, l.aisearchindexxproduct:product_id, l.aisearchindexxproduct:status, l.aisearchindexxproduct:last_hash">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00022', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Update" PARAMETERS = "aisearchindexxproduct var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
		 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
					  SET
						status		= ?,
						last_hash	= ?
					  WHERE
						index_id	= ? AND
						product_id	= ?' }"
		 FIELDS	= "l.aisearchindexxproduct:status, l.aisearchindexxproduct:last_hash,
				   l.aisearchindexxproduct:index_id, l.aisearchindexxproduct:product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00023', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Update_Indexed" PARAMETERS = "aisearchindexxproduct var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
		 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
					  SET
						last_hash	= ?,
						status		= CASE
									  WHEN status = \'P\' THEN \'I\'
									  ELSE status
									  END
					  WHERE
						index_id	= ? AND
						product_id	= ?' }"
		 FIELDS	= "l.aisearchindexxproduct:last_hash,
				   l.aisearchindexxproduct:index_id, l.aisearchindexxproduct:product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00036', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Delete" PARAMETERS = "index_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct WHERE index_id = ? AND product_id = ?' }"
			 FIELDS	= "l.index_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00024', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Delete_Processing" PARAMETERS = "index_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct WHERE index_id = ? AND product_id = ? AND status = \'P\'' }"
			 FIELDS	= "l.index_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00039', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Delete_All_Index" PARAMETERS = "index_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct WHERE index_id = ?' }"
			 FIELDS	= "l.index_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00025', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct WHERE product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00026', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Insert_All_Products_Queued" PARAMETERS = "index var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
			 			  ( index_id, product_id, status, last_hash )
			 			  SELECT
			 				?, id, \'Q\', \'\'
			 			  FROM ' $ 
			 				g.Store_Table_Prefix $ 'Products
			 			  WHERE
			 				active = 1' }"
			 FIELDS = "l.index:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00029', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Queue" PARAMETERS = "index_id, product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME   = "Merchant"
				 QUERY  = "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
								( index_id, product_id, status, last_hash )
			 			      VALUES
								( ?, ?, \'Q\', \'\' )
			 			      ON DUPLICATE KEY UPDATE
			 					status = \'Q\'' }"
				 FIELDS = "l.index_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00019', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME   = "Merchant"
				 QUERY  = "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
								( index_id, product_id, status, last_hash )
			 			      VALUES
								( ?, ?, \'Q\', \'\' )
			 			   ON CONFLICT ( index_id, product_id ) DO UPDATE
			 			   SET
			 			   	status = \'Q\'' }"
				 FIELDS = "l.index_id, l.product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00020', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00021', 'Unsupported DBAPI' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Queue_Active" PARAMETERS = "index_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Native_DBAPI EQ 'mysql' }">
		<MvQUERY NAME   = "Merchant"
				 QUERY  = "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
			 				  ( index_id, product_id, status, last_hash )
							  SELECT
								?, id, \'Q\', \'\'
							  FROM ' $ 
								g.Store_Table_Prefix $ 'Products
							  WHERE
								active = 1
			 			      ON DUPLICATE KEY UPDATE
			 			   		status		= \'Q\',
			 			   		last_hash	= \'\'' }"
				 FIELDS = "l.index_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00030', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Native_DBAPI EQ 'postgresql' }">
		<MvQUERY NAME   = "Merchant"
				 QUERY  = "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct
			 				  ( index_id, product_id, status, last_hash )
							  SELECT
								?, id, \'Q\', \'\'
							  FROM ' $ 
								g.Store_Table_Prefix $ 'Products
							  WHERE
								active = 1
							  ON CONFLICT ( index_id, product_id ) DO UPDATE
							  SET
							 	status		= \'Q\',
			 			   		last_hash	= \'\'' }"
				FIELDS = "l.index_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00031', g.MvQUERY_Error ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00032', 'Unsupported DBAPI' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Count_Indexed" PARAMETERS = "index_id, count var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "AISearchIndexXProduct"
				QUERY	= "{ 'SELECT COUNT( * ) AS indexed_count FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct WHERE index_id = ? AND status = \'I\'' }"
				FIELDS	= "l.index_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00037', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "{ AISearchIndexXProduct.d.indexed_count }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexXProduct">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AISearchIndexXProduct_Count_Queued" PARAMETERS = "index_id, count var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "AISearchIndexXProduct"
				QUERY	= "{ 'SELECT COUNT( * ) AS queued_count FROM ' $ g.Store_Table_Prefix $ 'AISearchIndexXProduct WHERE index_id = ? AND status <> \'I\'' }"
				FIELDS	= "l.index_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-AI-DB-00038', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "{ AISearchIndexXProduct.d.queued_count }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AISearchIndexXProduct">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

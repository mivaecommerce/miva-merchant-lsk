<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-PGB-JSN-
| Next Error Code: 34
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_PageBuilderPage_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_JSON ].JSON_Page_Load( l.page ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Template_Current( l.page:templ_id, l.managedtemplateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGB-JSN-00001', 'Failed to load current template' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pagebuilder_seq_modules"				VALUE = "">
	<MvASSIGN NAME = "l.pagebuilder_seq_module_count"			VALUE = 0>

	<MvASSIGN NAME = "l.pagebuilder_cmp_modules"				VALUE = "">
	<MvASSIGN NAME = "l.pagebuilder_cmp_module_count"			VALUE = 0>

	<MvASSIGN NAME = "l.component_item_lookup"					VALUE = "">
	<MvASSIGN NAME = "l.component_module_processed_lookup"		VALUE = "">

	<MvASSIGN NAME = "l.can_view_product"						VALUE = "{ [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">
	<MvASSIGN NAME = "l.can_view_category"						VALUE = "{ [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">
	<MvASSIGN NAME = "l.can_view_order"							VALUE = "{ [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">
	<MvASSIGN NAME = "l.can_view_payment"						VALUE = "{ [ g.Module_Admin ].CanI( 'PMNT', 1, 0, 0, 0 ) }">

	<MvASSIGN NAME = "l.item_product_exists"					VALUE = 0>
	<MvASSIGN NAME = "l.item_product_code"						VALUE = "">

	<MvASSIGN NAME = "l.item_category_exists"					VALUE = 0>
	<MvASSIGN NAME = "l.item_category_code"						VALUE = "">

	<MvASSIGN NAME = "l.item_order_exists"						VALUE = 0>
	<MvASSIGN NAME = "l.item_order_id"							VALUE = "">

	<MvASSIGN NAME = "l.item_payment_exists"					VALUE = 0>
	<MvASSIGN NAME = "l.item_payment_method"					VALUE = "">

	<MvASSIGN NAME = "l.item_search_exists"						VALUE = 0>
	<MvASSIGN NAME = "l.item_search_value"						VALUE = "">

	<MvCOMMENT>
	|
	| Sample Data Loading: Product
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.product"								VALUE = "">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].UserPreference_Load_Key( g.Store:id, g.User:id, 'PageBuilderUI.default_product_code', l.loaded_preference ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.loaded_preference:value, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.product }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilder_Preview_Product_Load_First( l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.item_product_code"						VALUE = "{ l.product:code }">

	<MvCOMMENT>
	|
	| Sample Data Loading: Category
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.category"								VALUE = "">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].UserPreference_Load_Key( g.Store:id, g.User:id, 'PageBuilderUI.default_category_code', l.loaded_preference ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.loaded_preference:value, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.category }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilder_Preview_Category_Load_First( l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.item_category_code"						VALUE = "{ l.category:code }">

	<MvCOMMENT>
	|
	| Sample Data Loading: Order
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.order"									VALUE = "">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].UserPreference_Load_Key( g.Store:id, g.User:id, 'PageBuilderUI.default_order_id', l.loaded_preference ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.loaded_preference:value, l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.order }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilder_Preview_Order_Load_First( l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.item_order_id"							VALUE = "{ l.order:id }">

	<MvCOMMENT>
	|
	| Sample Data Loading: Payment Method
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.paymentmethods"							VALUE = "">
	<MvASSIGN NAME = "l.paymentmethod_count"					VALUE = 0>

	<MvFOREACH ITERATOR = "l.method" ARRAY = "l.methods" COUNT = "{ [ g.Module_Feature_PAY_UT ].PaymentMethodList_Load_Basket( l.methods ) }">
		<MvASSIGN NAME = "l.paymentmethod"						VALUE = "">

		<MvIF EXPR = "{ l.method:paymentcard:id }">
			<MvASSIGN NAME = "l.paymentmethod:value"			VALUE = "{ 'paymentcard:' $ l.method:paymentcard:id }">
			<MvASSIGN NAME = "l.paymentmethod:name"				VALUE = "{ l.method:name }">
		<MvELSEIF EXPR = "{ l.method:paymentcardtype:id }">
			<MvASSIGN NAME = "l.paymentmethod:value"			VALUE = "{ 'paymentcardtype:' $ l.method:paymentcardtype:id }">
			<MvASSIGN NAME = "l.paymentmethod:name"				VALUE = "{ l.method:name }">
		<MvELSE>
			<MvASSIGN NAME = "l.paymentmethod:value"			VALUE = "{ l.method:module:code $ ':' $ l.method:code }">
			<MvASSIGN NAME = "l.paymentmethod:name"				VALUE = "{ l.method:name }">
		</MvIF>

		<MvASSIGN NAME = "l.paymentmethod_count" 				VALUE = "{ miva_array_insert_var( l.paymentmethods, l.paymentmethod, -1 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].UserPreference_Load_Key( g.Store:id, g.User:id, 'PageBuilderUI.default_payment_method', l.loaded_preference ) }">
		<MvIF EXPR = "{ miva_array_search( l.paymentmethods, 1, l.paymentmethod, 'l.paymentmethod:value EQ l.loaded_preference:value' ) }">
			<MvASSIGN NAME = "l.item_payment_method"			VALUE = "{ l.paymentmethod:value }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.item_payment_method }">
		<MvIF EXPR = "{ l.paymentmethod_count }">
			<MvASSIGN NAME = "l.item_payment_method"			VALUE = "{ l.paymentmethods[ 1 ]:value }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Sample Data Loading: Search
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].UserPreference_Load_Key( g.Store:id, g.User:id, 'PageBuilderUI.default_search', l.loaded_preference ) }">
		<MvASSIGN NAME = "l.item_search_value" VALUE = "{ l.loaded_preference:value }">
	</MvIF>

	<MvCOMMENT>
	|
	| Iterate items to find sequence, component, and sample data items
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Feature_TUI_DB ].ItemModuleList_Load_Page_Active( l.page:id, l.modules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Features( l.module ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGNARRAY NAME = "l.component_item_lookup"			VALUE = 1>
			<MvMEMBER NAME = "{ l.module:item_code }">
		</MvASSIGNARRAY>

		<MvIF EXPR = "{ l.module:feature_hash:pagebuilder_seq }">	<MvASSIGN NAME = "l.pagebuilder_seq_module_count" VALUE = "{ miva_array_insert_var( l.pagebuilder_seq_modules, l.module, -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.module:feature_hash:pagebuilder_cmp }">	<MvASSIGN NAME = "l.pagebuilder_cmp_module_count" VALUE = "{ miva_array_insert_var( l.pagebuilder_cmp_modules, l.module, -1 ) }"> </MvIF>

		<MvIF EXPR = "{ l.can_view_product AND ( l.module:code EQ 'cmp-mv-stdprodfields' ) }">													<MvASSIGN NAME = "l.item_product_exists"	VALUE = 1>
		<MvELSEIF EXPR = "{ l.can_view_category AND ( l.module:code EQ 'cmp-mv-stdcatfields' ) }">												<MvASSIGN NAME = "l.item_category_exists"	VALUE = 1>
		<MvELSEIF EXPR = "{ l.can_view_order AND ( l.module:code EQ 'cmp-mv-stdorderfields' ) }">												<MvASSIGN NAME = "l.item_order_exists"		VALUE = 1>
		<MvELSEIF EXPR = "{ l.can_view_payment AND ( l.module:code EQ 'cmp-mv-paymentfields' OR l.module:code EQ 'cmp-mv-paymentmethod' ) }">	<MvASSIGN NAME = "l.item_payment_exists"	VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ g.Secure }">	<MvASSIGN NAME = "l.flags"	VALUE = "{ [ g.Module_Feature_URI_UT ].URL_Build_Flags( 'secure,nosession' ) }">
	<MvELSE> 						<MvASSIGN NAME = "l.flags"	VALUE = "{ [ g.Module_Feature_URI_UT ].URL_Build_Flags( 'nosession' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.page_url" VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Page_URL( l.page, l.flags ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"components":
		[
			<MvCOMMENT>
			|
			| Output only components that already have their item_code (which
			| correlates to a page item) assigned to the page.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.component_count" VALUE = 0>

			<MvFOREACH ITERATOR = "l.module" ARRAY = "l.pagebuilder_cmp_modules" COUNT = "{ l.pagebuilder_cmp_module_count }">
				<MvREFERENCEARRAY NAME = "l.component_module_processed" VARIABLE = "l.component_module_processed_lookup">
					<MvMEMBER NAME = "{ l.module:code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ l.component_module_processed }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.component_module_processed" VALUE = 1>

				<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components" COUNT = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Components( l.module, l.components ) }">
					<MvREFERENCEARRAY NAME = "l.component_item_on_page" VARIABLE = "l.component_item_lookup">
						<MvMEMBER NAME = "{ l.component:item_code }">
					</MvREFERENCEARRAY>

					<MvIF EXPR = "{ NOT l.component_item_on_page }">
						<MvFOREACHCONTINUE>
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.component_count ) }">
						"code":							"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.component:code ) }">",
						"name":							"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.component:name ) }">",
						"version":						"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.component:version ) }">",
						"category":						"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.component:category ) }">",
						"preview_component_selector":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.component:preview_component_selector ) }">",
						"item_code":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.component:item_code ) }">",
						"module_code":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.module:code ) }">",
						"description":					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.component:description ) }">",

						<MvIF EXPR = "{ NOT ISNULL l.component:preview }">	"preview": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( 'data:image/svg+xml;base64,' $ crypto_base64_encode( l.component:preview ) ) }">",
						<MvELSE>											"preview": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( 'data:image/svg+xml;base64,' $ crypto_base64_encode( '<svg xmlns="http://www.w3.org/2000/svg" width="1604" height="580" viewBox="0 0 1604 580"><rect x="40" y="40" width="1524" height="500" fill="#cfd2d6" /></svg>' ) ) }">",
						</MvIF>

						<MvIF EXPR = "{ NOT ISNULL l.component:detailed_preview }">	"detailed_preview": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( 'data:image/svg+xml;base64,' $ crypto_base64_encode( l.component:detailed_preview ) ) }">",
						<MvELSE>													"detailed_preview": "",
						</MvIF>

						<MvIF EXPR = "{ miva_variable_type( l.component:properties ) NE 'ARRAY' }">
							"properties":				[],
						<MvELSE>
							"properties":				<MvEVAL EXPR = "{ miva_json_encode( l.component:properties, 'pretty' ) }">,
						</MvIF>

						<MvIF EXPR = "{ miva_variable_type( l.component:advanced_properties ) NE 'ARRAY' }">
							"advanced_properties":		[],
						<MvELSE>
							"advanced_properties":		<MvEVAL EXPR = "{ miva_json_encode( l.component:advanced_properties, 'pretty' ) }">,
						</MvIF>

						<MvIF EXPR = "{ miva_variable_type( l.component:defaults ) NE 'STRUCTURE' }">
							"defaults":					{},
						<MvELSE>
							"defaults":					<MvEVAL EXPR = "{ miva_json_encode( l.component:defaults, 'pretty' ) }">,
						</MvIF>

						<MvIF EXPR = "{ miva_variable_type( l.component:sample_data_types ) NE 'ARRAY' }">
							"sample_data_types":		[]
						<MvELSE>
							"sample_data_types":		<MvEVAL EXPR = "{ miva_json_encode( l.component:sample_data_types, 'pretty' ) }">
						</MvIF>
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvFOREACH>
			</MvFOREACH>
		],
		"sequences":
		[
			<MvASSIGN NAME = "l.sequence_count" VALUE = 0>

			<MvFOREACH ITERATOR = "l.module" ARRAY = "l.pagebuilder_seq_modules" COUNT = "{ l.pagebuilder_seq_module_count }">
				<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
					<MvMEMBER NAME = "settings">
					<MvMEMBER NAME = "{ l.module:item_code }">
				</MvREFERENCEARRAY>

				<MvASSIGN NAME = "l.sequences" VALUE = "">

				<MvFOREACH ITERATOR = "l.sequence" ARRAY = "l.sequences" COUNT = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Sequences( l.module, l.module:item_code, l.item_settings, l.sequences ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.sequence_count ) }">
						"item_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.module:item_code ) }">",
						"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.sequence:code ) }">",
						"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.sequence:name ) }">",
						"elements":
						[
							<MvASSIGN NAME = "l.sequence_element_count" VALUE = 0>

							<MvFOREACH ITERATOR = "l.sequence_element" ARRAY = "l.sequence:elements">
								<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.sequence_element_count ) }">
									"item_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.sequence_element:item_code ) }">",
									"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.sequence_element:code ) }">",
									"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.sequence_element:name ) }">",
									"enabled":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.sequence_element:enabled ) }">,
									"dt_start":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.sequence_element:dt_start ) }">,
									"dt_end":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.sequence_element:dt_end ) }">
								<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
							</MvFOREACH>
						]
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvFOREACH>
			</MvFOREACH>
		],
		"elements":
		[
			<MvASSIGN NAME = "l.element_count" VALUE = 0>

			<MvFOREACH ITERATOR = "l.module" ARRAY = "l.pagebuilder_cmp_modules" COUNT = "{ l.pagebuilder_cmp_module_count }">
				<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
					<MvMEMBER NAME = "settings">
					<MvMEMBER NAME = "{ l.module:item_code }">
				</MvREFERENCEARRAY>

				<MvFOREACH ITERATOR = "l.element" ARRAY = "l.elements" COUNT = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Elements( l.module, l.module:item_code, l.item_settings, l.elements ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.element_count ) }">
						"item_code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.module:item_code ) }">",
						"component_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.element:component_code ) }">",
						"code":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.element:code ) }">",

						<MvIF EXPR = "{ ISNULL l.element:settings OR miva_variable_type( l.element:settings ) NE 'STRUCTURE' }">
							"settings":		{}
						<MvELSE>
							"settings":		<MvEVAL EXPR = "{ miva_json_encode( l.element:settings, 'pretty' ) }">
						</MvIF>
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvFOREACH>
			</MvFOREACH>
		],
		"sample_data":
		{
			"product":
			{
				"available":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.item_product_exists ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.item_product_code ) }">"
			},
			"category":
			{
				"available":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.item_category_exists ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.item_category_code ) }">"
			},
			"order":
			{
				"available":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.item_order_exists ) }">,
				"id":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.item_order_id ) }">"
			},
			"payment":
			{
				"available":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.item_payment_exists ) }">,
				"method":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.item_payment_method ) }">",
				"methods":
				[
					<MvASSIGN NAME = "l.paymentmethod_output_count" VALUE = 0>

					<MvFOREACH ITERATOR = "l.paymentmethod" ARRAY = "l.paymentmethods" COUNT = "{ l.paymentmethod_count }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.paymentmethod_output_count ) }">
							"value":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.paymentmethod:value ) }">",
							"name":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.paymentmethod:name ) }">"
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					</MvFOREACH>
		 		]
			},
			"search":
			{
				"available":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.item_search_exists ) }">,
				"value":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.item_search_value ) }">"
			}
		}
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPageComponentPreviewImageList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_JSON ].JSON_Page_Load( l.page ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pagebuilder_seq_modules"		VALUE = "">
	<MvASSIGN NAME = "l.pagebuilder_seq_module_count"	VALUE = 0>

	<MvASSIGN NAME = "l.pagebuilder_cmp_modules"		VALUE = "">
	<MvASSIGN NAME = "l.pagebuilder_cmp_module_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Feature_TUI_DB ].ItemModuleList_Load_Page_Active( l.page:id, l.modules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Features( l.module ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.module:feature_hash:pagebuilder_seq }">	<MvASSIGN NAME = "l.pagebuilder_seq_module_count" VALUE = "{ miva_array_insert_var( l.pagebuilder_seq_modules, l.module, -1 ) }"> </MvIF>
		<MvIF EXPR = "{ l.module:feature_hash:pagebuilder_cmp }">	<MvASSIGN NAME = "l.pagebuilder_cmp_module_count" VALUE = "{ miva_array_insert_var( l.pagebuilder_cmp_modules, l.module, -1 ) }"> </MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Build Component Lookup
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.component_lookup" VALUE = "">

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features( 'pagebuilder_cmp', l.modules ) }">
		<MvASSIGN NAME = "l.components"					VALUE = "">

		<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components" COUNT = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Components( l.module, l.components ) }">
			<MvASSIGNARRAY NAME = "l.component_lookup" VALUE = "{ l.component }">
				<MvMEMBER NAME = "{ l.component:item_code }">
				<MvMEMBER NAME = "{ l.component:code }">
			</MvASSIGNARRAY>
		</MvFOREACH>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Build Element Lookup
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.element_lookup" VALUE = "">

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.pagebuilder_cmp_modules" COUNT = "{ l.pagebuilder_cmp_module_count }">
		<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
			<MvMEMBER NAME = "settings">
			<MvMEMBER NAME = "{ l.module:item_code }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.elements" VALUE = "">

		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.elements" COUNT = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Elements( l.module, l.module:item_code, l.item_settings, l.elements ) }">
			<MvASSIGN NAME = "l.element:item_code"		VALUE = "{ l.module:item_code }">
			<MvASSIGNARRAY NAME = "l.element_lookup"	VALUE = "{ l.element }">
				<MvMEMBER NAME = "{ l.element:item_code }">
				<MvMEMBER NAME = "{ l.element:code }">
			</MvASSIGNARRAY>
		</MvFOREACH>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Output Sequence Element Component Previews
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.output_pos" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.pagebuilder_seq_modules" COUNT = "{ l.pagebuilder_seq_module_count }">
			<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
				<MvMEMBER NAME = "settings">
				<MvMEMBER NAME = "{ l.module:item_code }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.sequences" VALUE = "">

			<MvFOREACH ITERATOR = "l.sequence" ARRAY = "l.sequences" COUNT = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Sequences( l.module, l.module:item_code, l.item_settings, l.sequences ) }">
				<MvFOREACH ITERATOR = "l.sequence_element" ARRAY = "l.sequence:elements">
					<MvREFERENCEARRAY NAME = "l.element" VARIABLE = "l.element_lookup">
						<MvMEMBER NAME = "{ l.sequence_element:item_code }">
						<MvMEMBER NAME = "{ l.sequence_element:code }">
					</MvREFERENCEARRAY>

					<MvIF EXPR = "{ ISNULL l.element }">
						<MvFOREACHCONTINUE>
					</MvIF>

					<MvREFERENCEARRAY NAME = "l.component" VARIABLE = "l.component_lookup">
						<MvMEMBER NAME = "{ l.element:item_code }">
						<MvMEMBER NAME = "{ l.element:component_code }">
					</MvREFERENCEARRAY>

					<MvIF EXPR = "{ ISNULL l.component }">
						<MvFOREACHCONTINUE>
					</MvIF>

					<MvIF EXPR = "{ ++l.output_pos GT 1 }">
						,
					</MvIF>

					<MvIF EXPR = "{ NOT ISNULL l.component:preview }">	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( 'data:image/svg+xml;base64,' $ crypto_base64_encode( l.component:preview ) ) }">"
					<MvELSE>											"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( 'data:image/svg+xml;base64,' $ crypto_base64_encode( '<svg xmlns="http://www.w3.org/2000/svg" width="1604" height="580" viewBox="0 0 1604 580"><rect x="40" y="40" width="1524" height="500" fill="#cfd2d6" /></svg>' ) ) }">"
					</MvIF>
				</MvFOREACH>
			</MvFOREACH>
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPage_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_JSON ].JSON_Page_Load( l.page ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Module_Feature_PGB_UT ].PageBuilder_Lockfile_Path( l.page:id ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ JSON_PageBuilderPage_Update_LowLevel( l.page:id ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPage_Update_LowLevel" PARAMETERS = "page_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.data"							VALUE = "">
	<MvASSIGN NAME = "l.data:page_id"					VALUE = "{ l.page_id }">
	<MvASSIGN NAME = "l.data:deleted_element_count"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Deleted_Elements',	l.data:deleted_elements ) }">
	<MvASSIGN NAME = "l.data:added_element_count"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Added_Elements',	l.data:added_elements ) }">
	<MvASSIGN NAME = "l.data:updated_element_count"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Updated_Elements',	l.data:updated_elements ) }">
	<MvASSIGN NAME = "l.data:sequence_count"			VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Updated_Sequences',	l.data:sequences ) }">
	<MvASSIGN NAME = "l.data:global_component_count"	VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Global_Components',	l.data:global_components ) }">

	<MvIF EXPR = "{ NOT JSON_PageBuilderPage_GeneratePageSettings( l.data, l.page, l.managedtemplate, l.managedtemplateversion, l.global_components, l.global_component_count ) }">
		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Have_Input_Errors() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update Page Settings
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.page_type" VALUE = "{ ternary( l.page:layout, 'Layout', 'Page' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( l.page_type $ ' \'' $ l.page:code $ '\' updated' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Update_Settings( l.page, l.page_type $ ' Update' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGB-JSN-00002', l.page_type $ ' \'' $ l.page:code $ '\' settings updated' ) }">

	<MvIF EXPR = "{ NOT l.page:layout }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_URI_UT ].URI_Generate_Page_Update( l.page ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.global_component" ARRAY = "l.global_components" COUNT = "{ l.global_component_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Page_Update_Settings( l.global_component:page, 'Global Component Update' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGB-JSN-00025', 'Global Component \'' $ l.global_component:page:code $ '\' settings updated' ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPreviewSessionFragmentKey_Generate" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_PreviewSession_Load( l.previewsession ) }">
		<MvCOMMENT>
		|
		| JSON errors are handled by JSON_PreviewSession_Load
		|
		</MvCOMMENT>

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].PageBuilderPreviewSessionFragmentKey_Generate( l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"preview_session_fragment_key": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.pagebuilderpreviewsessionfragmentkey:fragkey ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPreviewSessionFragmentKey_KeepAlive" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_PreviewSession_Load( l.previewsession ) }">
		<MvCOMMENT>
		|
		| JSON errors are handled by JSON_PreviewSession_Load
		|
		</MvCOMMENT>

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'R', 'PageBuilderPreviewSession_FragmentKey', l.fragment_key ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilderPreviewSessionFragmentKey_Load( l.previewsession:session_id, l.fragment_key, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGB-JSN-00026', 'Preview session fragment key not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilderPreviewSessionFragmentKey_Update_LastUsed( l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPreviewSessionFragmentKey_Cleanup" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PAGE', 0, 0, 1, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_PreviewSession_Load( l.previewsession ) }">
		<MvCOMMENT>
		|
		| JSON errors are handled by JSON_PreviewSession_Load
		|
		</MvCOMMENT>

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'R', 'PageBuilderPreviewSession_FragmentKey', l.fragment_key ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGB_DB ].PageBuilderPreviewSessionFragmentKey_Load( l.previewsession:session_id, l.fragment_key, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilderPreviewSessionFragmentKey_Delete( l.pagebuilderpreviewsessionfragmentkey ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_MaintenanceMode_Bypass_PageBuilderPage_Preview" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilderPage_Preview_ValidatePreviewSession( l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPage_Preview" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_PageBuilderPage_Preview_ValidatePreviewSession( l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_JSON ].JSON_Page_Load( l.page ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilderPage_Preview_Response_Error() }">
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Module_Feature_PGB_UT ].PageBuilder_Lockfile_Path( l.page:id ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ JSON_PageBuilderPage_Preview_LowLevel( l.page:id, l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvIF EXPR = "{ g.TemplateManager_Exception }">
			<MvIF EXPR = "{ g.TemplateManager_Exception_Code EQ 'product_not_found' }">				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00021', 'The selected product either does not exist, is inactive, or otherwise unavailable and cannot be displayed in the preview. Please select another product.' ) }">
			<MvELSEIF EXPR = "{ g.TemplateManager_Exception_Code EQ 'category_not_found' }">		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00022', 'The selected category either does not exist, is inactive, or otherwise unavailable and cannot be displayed in the preview. Please select another category.' ) }">
			<MvELSEIF EXPR = "{ g.TemplateManager_Exception_Code EQ 'invalid_payment_method' }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00023', 'The selected payment method is unavailable and cannot be displayed in the preview. Please select another payment method.' ) }">
			<MvELSE>																				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00024', 'UI Exception \'' $ g.TemplateManager_Exception_Code $ '\' has prevented the preview from displayed the requested page' ) }">
			</MvIF>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilderPage_Preview_Response_Error() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPage_Preview_ValidatePreviewSession" PARAMETERS = "previewsession var, pagebuilderpreviewsessionfragmentkey var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.PageBuilderPreviewSession_FragmentKey"	VALUE = "{ trim( g.PageBuilderPreviewSession_FragmentKey ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_ValidatePreviewSession( l.previewsession, l.user ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilderPreviewSessionFragmentKey_Load( l.previewsession:session_id, g.PageBuilderPreviewSession_FragmentKey, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].CanI( l.user:admin, l.user:id, 'PAGE', 0, 0, 1, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPage_Preview_LowLevel" PARAMETERS = "page_id, previewsession var, pagebuilderpreviewsessionfragmentkey var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Deleted_Elements"				VALUE = "{ trim( g.Deleted_Elements ) }">
	<MvASSIGN NAME = "g.Added_Elements"					VALUE = "{ trim( g.Added_Elements ) }">
	<MvASSIGN NAME = "g.Updated_Elements"				VALUE = "{ trim( g.Updated_Elements ) }">
	<MvASSIGN NAME = "g.Updated_Sequences"				VALUE = "{ trim( g.Updated_Sequences ) }">
	<MvASSIGN NAME = "g.Global_Component"				VALUE = "{ trim( g.Global_Component ) }">

	<MvASSIGN NAME = "l.data"							VALUE = "">
	<MvASSIGN NAME = "l.data:page_id"					VALUE = "{ l.page_id }">

	<MvIF EXPR = "{ NOT JSON_PGB_Form_Input_Array( 'Deleted_Elements',	l.data:deleted_elements,	l.data:deleted_element_count )	OR
					NOT JSON_PGB_Form_Input_Array( 'Added_Elements',	l.data:added_elements,		l.data:added_element_count )	OR
					NOT JSON_PGB_Form_Input_Array( 'Updated_Elements',	l.data:updated_elements,	l.data:updated_element_count )	OR
					NOT JSON_PGB_Form_Input_Array( 'Updated_Sequences',	l.data:sequences,			l.data:sequence_count )			OR
					NOT JSON_PGB_Form_Input_Array( 'Global_Components',	l.data:global_components,	l.data:global_component_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Order_ID' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer( 'R', 'Order_ID', l.order_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Order_Load_ID( l.order_id, g.Order ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PageBuilderPage_GeneratePageSettings( l.data, l.page, l.managedtemplate, l.managedtemplateversion, l.global_components, l.global_component_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].PageBuilderPreview_Start( l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.global_component" ARRAY = "l.global_components" COUNT = "{ l.global_component_count }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].PageBuilderPreview_StoreFragmentSettings( l.global_component:page:code, l.global_component:page:settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Feature_Filename_PGB_UT ].PageBuilderPreview_RenderPage( l.page, l.page_rendered ) }">
	<MvEVAL EXPR = "{ [ g.Feature_Filename_PGB_UT ].PageBuilderPreview_End() }">

	<MvIF EXPR = "{ NOT l.page_rendered }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPage_Preview_Response_Error" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Content-Type',		'text/html; charset=utf-8' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'X-XSS-Protection',	'1; mode=block' ) }">

	<!DOCTYPE html>
	<html xmlns="http://www.w3.org/1999/xhtml">
		<head>
			<title>Miva Merchant: Page Builder Preview Error</title>
			<script type="text/javascript">
				var post_data;

				if ( window.parent )
				{
					post_data			= new Object();
					post_data.command	= 'window_load_error';
					post_data.data		= new Object();

					<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Have_Input_Errors() }">	post_data.data = <MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">;
					<MvELSE>														post_data.data = <MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">;
					</MvIF>

					window.parent.postMessage( JSON.stringify( post_data ), '*' );
				}
			</script>
		</head>
		<body></body>
	</html>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilderPage_GeneratePageSettings" PARAMETERS = "data var, page var, managedtemplate var, managedtemplateversion var, global_components var, global_component_count var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_ID( l.data:page_id, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00005', 'Page not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.page:templ_id, l.managedtemplate ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00006', 'Failed to load template' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.managedtemplate:current_id, l.managedtemplateversion ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00007', 'Failed to load template' ) }">
	</MvIF>

	<MvREFERENCE NAME = "l.page:settings" VARIABLE = "l.managedtemplateversion:settings">

	<MvFOREACH ITERATOR = "l.input_element" ARRAY = "l.data:deleted_elements" COUNT = "{ l.data:deleted_element_count }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element, 'R', 'item_code',	l.item_code ) OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element, 'R', 'code',		l.element_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( l.item_code, l.item ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'item_code', 'Item not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.item:mod_code, l.module ) }">	<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00008', 'Module is not installed in the store' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">																		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00009', 'Module not active' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:pagebuilder_cmp }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00010', 'Module does not implement the \'pagebuilder_cmp\' feature' ) }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
			<MvMEMBER NAME = "settings">
			<MvMEMBER NAME = "{ l.item:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element( l.module, l.item:code, l.item_settings, l.element_code, l.element ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'code', g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element_Delete( l.module, l.item_settings, l.element:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_element" ARRAY = "l.data:added_elements" COUNT = "{ l.data:added_element_count }">
		<MvASSIGN NAME = "l.element" VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element,			'R', 'item_code',		l.item_code )				OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element,			'R', 'component_code',	l.element:component_code )	OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element,			'R', 'code',			l.element:code )			OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_element,	'R', 'settings',		l.input_settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( l.item_code, l.item ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'item_code', 'Item not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.item:mod_code, l.module ) }">	<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00011', 'Module is not installed in the store' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">																		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00012', 'Module not active' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:pagebuilder_cmp }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00013', 'Module does not implement the \'pagebuilder_cmp\' feature' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Component( l.module, l.element:component_code, l.component ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'component_code', g.Error_Message ) }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
			<MvMEMBER NAME = "settings">
			<MvMEMBER NAME = "{ l.item:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element( l.module, l.item:code, l.item_settings, l.element:code, l.existing_element ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'code', 'Element \'' $ l.existing_element:code $ '\' already exists' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Properties( l.input_settings, l.component:properties, l.element:settings ) }">
			<MvCOMMENT>
			|
			| JSON response errors handled in validation function
			|
			</MvCOMMENT>

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_settings, 'advanced' ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, 'R', 'advanced', l.input_advanced_settings ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Properties( l.input_advanced_settings, l.component:advanced_properties, l.element:settings:advanced ) }">
				<MvCOMMENT>
				|
				| JSON response errors handled in validation function
				|
				</MvCOMMENT>

				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.module:api_ver GE 10.10 }">
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element_Insert( l.module, l.item_settings, l.component, l.element ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element_Insert( l.module, l.item_settings, l.element ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_element" ARRAY = "l.data:updated_elements" COUNT = "{ l.data:updated_element_count }">
		<MvASSIGN NAME = "l.element" VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element, 'R', 'item_code',		l.item_code ) OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element, 'R', 'original_code',	l.element_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( l.item_code, l.item ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'item_code', 'Item not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.item:mod_code, l.module ) }">	<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00014', 'Module is not installed in the store' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">																		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00015', 'Module not active' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:pagebuilder_cmp }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00016', 'Module does not implement the \'pagebuilder_cmp\' feature' ) }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
			<MvMEMBER NAME = "settings">
			<MvMEMBER NAME = "{ l.item:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element( l.module, l.item:code, l.item_settings, l.element_code, l.element ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'original_code', g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.original_element" VALUE = "{ l.element }">

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Component( l.module, l.original_element:component_code, l.original_component ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'component_code', g.Error_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element, 'O', 'code',			l.element:code ) OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_element, 'O', 'component_code',	l.element:component_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ strcasecmp( l.element:code, l.original_element:code ) NE 0 }">
			<MvIF EXPR = "{ [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element( l.module, l.item:code, l.item_settings, l.element:code, l.existing_element ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'code', 'Element \'' $ l.existing_element:code $ '\' already exists' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ strcasecmp( l.element:component_code, l.original_element:component_code ) EQ 0 }">
			<MvASSIGN NAME = "l.component" VALUE = "{ l.original_component }">
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Component( l.module, l.element:component_code, l.component ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'component_code', g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_element, 'settings' ) }">
			<MvIF EXPR = "{ l.original_element:component_code NE l.element:component_code }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_element, 'settings', 'Settings must be specified when changing component' ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_element, 'R', 'settings', l.input_settings ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Properties( l.input_settings, l.component:properties, l.element:settings ) }">
				<MvCOMMENT>
				|
				| JSON response errors handled in validation function
				|
				</MvCOMMENT>

				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_settings, 'advanced' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, 'R', 'advanced', l.input_advanced_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Properties( l.input_advanced_settings, l.component:advanced_properties, l.element:settings:advanced ) }">
					<MvCOMMENT>
					|
					| JSON response errors handled in validation function
					|
					</MvCOMMENT>

					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.module:api_ver GE 10.10 }">
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element_Update( l.module, l.item_settings, l.original_component, l.original_element, l.component, l.element ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Element_Update( l.module, l.item_settings, l.original_element, l.element ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_sequence" ARRAY = "l.data:sequences" COUNT = "{ l.data:sequence_count }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_sequence, 'R', 'item_code',	l.item_code ) OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_sequence, 'R', 'code',		l.sequence_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( l.item_code, l.item ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_sequence, 'item_code', 'Item not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.item:mod_code, l.module ) }">	<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00017', 'Module is not installed in the store' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">																		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00018', 'Module not active' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:pagebuilder_seq }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00019', 'Module does not implement the \'pagebuilder_seq\' feature' ) }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.item_settings" VARIABLE = "l.page">
			<MvMEMBER NAME = "settings">
			<MvMEMBER NAME = "{ l.item:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Sequence( l.module, l.item:code, l.item_settings, l.sequence_code, l.sequence ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_sequence, 'code', g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.original_sequence"	VALUE = "{ l.sequence }">
		<MvASSIGN NAME = "l.sequence:elements"	VALUE = "">

		<MvFOREACH ITERATOR = "l.input_sequence_element" ARRAY = "l.input_sequence_elements" COUNT = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_sequence, 'elements', l.input_sequence_elements ) }">
			<MvASSIGN NAME = "l.sequence_element"			VALUE = "">
			<MvASSIGN NAME = "l.sequence_element:enabled"	VALUE = 1>
			<MvASSIGN NAME = "l.sequence_element:dt_start"	VALUE = 0>
			<MvASSIGN NAME = "l.sequence_element:dt_end"	VALUE = 0>

			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code(		l.input_sequence_element, 'R', 'item_code',		l.sequence_element:item_code )	OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text(		l.input_sequence_element, 'R', 'name',			l.sequence_element:name )		OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text(		l.input_sequence_element, 'o', 'code',			l.sequence_element:code )		OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Boolean(	l.input_sequence_element, 'O', 'enabled',		l.sequence_element:enabled )	OR
							NOT [ g.Module_JSON ].JSON_Input_Element_DateTime(	l.input_sequence_element, 'O', 'dt_start',		l.sequence_element:dt_start )	OR
							NOT [ g.Module_JSON ].JSON_Input_Element_DateTime(	l.input_sequence_element, 'O', 'dt_end',		l.sequence_element:dt_end ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.sequence:elements, l.sequence_element, -1 ) }">
		</MvFOREACH>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ComponentModule_PageBuilder_Sequence_Update( l.module, l.item_settings, l.original_sequence, l.sequence ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_global_component" ARRAY = "l.data:global_components" COUNT = "{ l.data:global_component_count }">
		<MvASSIGN NAME = "l.global_component" VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_global_component, 'R', 'code', l.fragment_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_Code( l.fragment_code, l.global_component:page ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_global_component, 'code', 'Global Component not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.global_component_data"							VALUE = "">
		<MvASSIGN NAME = "l.global_component_data:page_id"					VALUE = "{ l.global_component:page:id }">
		<MvASSIGN NAME = "l.global_component_data:deleted_element_count"	VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_global_component, 'deleted_elements',	l.global_component_data:deleted_elements ) }">
		<MvASSIGN NAME = "l.global_component_data:added_element_count"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_global_component, 'added_elements',		l.global_component_data:added_elements ) }">
		<MvASSIGN NAME = "l.global_component_data:updated_element_count"	VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_global_component, 'updated_elements',	l.global_component_data:updated_elements ) }">
		<MvASSIGN NAME = "l.global_component_data:sequence_count"			VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_global_component, 'updated_sequences',	l.global_component_data:sequences ) }">
		<MvASSIGN NAME = "l.global_component_data:global_component_count"	VALUE = 0>

		<MvIF EXPR = "{ NOT JSON_PageBuilderPage_GeneratePageSettings( l.global_component_data, l.global_component:page, l.global_component:managedtemplate, l.global_component:managedtemplateversion, l.null, l.null ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.global_component_count" VALUE = "{ miva_array_insert_var( l.global_components, l.global_component, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| JSON Page Builder Element Validation
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Properties" PARAMETERS = "input_settings var, properties var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output_settings" VALUE = "">

	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Properties_LowLevel( l.input_settings, l.properties, l.output_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Properties_LowLevel" PARAMETERS = "input_settings var, properties var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.processed_properties" VALUE = "">

	<MvFOREACH ITERATOR = "l.property" ARRAY = "l.properties">
		<MvIF EXPR = "{ ISNULL l.property:code }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Property_WithVisibilityConditions( l.input_settings, l.properties, l.property, l.processed_properties, l.output_settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_WithVisibilityConditions" PARAMETERS = "input_settings var, properties var, property var, processed_properties var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.property_processed" VARIABLE = "l.processed_properties">
		<MvMEMBER NAME = "{ l.property:code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.property_processed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.property_processed" VALUE = 1>

	<MvREFERENCEARRAY NAME = "l.output_property_settings" VARIABLE = "l.output_settings">
		<MvMEMBER NAME = "{ l.property:code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ NOT ISNULL l.property:visibility_conditions }">
		<MvFOREACH ITERATOR = "l.property_code" ARRAY = "l.property_codes" COUNT = "{ miva_struct_members( l.property:visibility_conditions, l.property_codes ) }">
			<MvIF EXPR = "{ strcasecmp( l.property_code, l.property:code ) EQ 0 }">
				<MvASSIGN NAME = "l.output_property_settings:visible" VALUE = 0>

				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvREFERENCEARRAY NAME = "l.visibility_condition_property" VARIABLE = "l.property:visibility_conditions">
				<MvMEMBER NAME = "{ l.property_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT miva_array_search( l.properties, 1, l.search_property, 'strcasecmp( l.search_property:code, l.property_code ) EQ 0' ) }">
				<MvASSIGN NAME = "l.output_property_settings:visible" VALUE = 0>

				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Property_WithVisibilityConditions( l.input_settings, l.properties, l.search_property, l.processed_properties, l.output_settings ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvREFERENCEARRAY NAME = "l.search_output_property_settings" VARIABLE = "l.output_settings">
				<MvMEMBER NAME = "{ l.search_property:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT ISNULL l.search_property:visibility_conditions AND NOT l.search_output_property_settings:visible }">
				<MvASSIGN NAME = "l.output_property_settings:visible" VALUE = 0>

				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvFOREACH ITERATOR = "l.value_member_name" ARRAY = "l.value_member_names" COUNT = "{ miva_struct_members( l.visibility_condition_property, l.value_member_names ) }">
				<MvREFERENCEARRAY NAME = "l.values" VARIABLE = "l.visibility_condition_property">
					<MvMEMBER NAME = "{ l.value_member_name }">
				</MvREFERENCEARRAY>

				<MvREFERENCEARRAY NAME = "l.property_value" VARIABLE = "l.search_output_property_settings">
					<MvMEMBER NAME = "{ l.value_member_name }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ NOT miva_array_search( l.values, 1, l.search_value, 'l.search_value EQ l.property_value' ) }">
					<MvASSIGN NAME = "l.output_property_settings:visible" VALUE = 0>

					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>
			</MvFOREACH>
		</MvFOREACH>

		<MvASSIGN NAME = "l.output_property_settings:visible" VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, ternary( l.property:required, 'R', 'O' ), l.property:code, l.input_property_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Property( l.input_property_settings, l.property, l.output_property_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property" PARAMETERS = "input_property_settings var, property var, output_property_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.property:type EQ 'merchandisingprompt' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_MerchandisingPrompt( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'borderthickness' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_BorderThickness( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'breakpoint' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Breakpoint( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'button' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Button( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'category' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Category( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'categorycustomfieldlookup' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_CategoryCustomFieldLookup( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'checkbox' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Checkbox( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'color' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Color( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'cornerradius' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_CornerRadius( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'customlookup' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_CustomLookup( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'date' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Date( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'datetime' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_DateTime( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'distributedslider' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_DistributedSlider( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'dropshadow' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_DropShadow( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'font' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Font( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'fragment' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Fragment( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'breakpointgroup' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_BreakpointGroup( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'group' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Group( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'image' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Image( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'imagetype' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_ImageType( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'lengthunit' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_LengthUnit( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'link' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Link( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'list' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_List( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'padding' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Padding( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'product' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Product( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'productcustomfieldlookup' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_ProductCustomFieldLookup( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'radio' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Radio( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'select' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Select( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'selector' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Selector( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'slider' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Slider( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'text' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Text( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'textarea' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_TextArea( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'texteditor' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_TextEditor( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSEIF EXPR = "{ l.property:type EQ 'typography' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_Typography( l.input_property_settings, l.property, l.output_property_settings ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_MerchandisingPrompt" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'code', l.output_settings:code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_BorderThickness" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_top_width',	l.output_settings:border_top_width )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_right_width',	l.output_settings:border_right_width )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_bottom_width',	l.output_settings:border_bottom_width )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_left_width',	l.output_settings:border_left_width ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Breakpoint" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'code', l.output_settings:code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.output_settings:code }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Load_Theme( l.theme ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT miva_array_search( l.theme:layout:breakpoints, 1, l.breakpoint, 'strcasecmp( l.breakpoint:code, l.output_settings:code ) EQ 0' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_settings, 'code', 'Breakpoint not found' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Button" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Button( l.property, l.input_settings, ternary( l.property:required, 'R', 'o' ), l.output_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Radio" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Select" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Selector" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Slider" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_DistributedSlider" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_DropShadow" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_settings, ternary( l.property:required, 'r', 'o' ), 'box_shadow_enabled', l.input_box_shadow_enabled ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.input_box_shadow_enabled, 'o', 'value', l.output_settings:box_shadow_enabled:value ) }">						<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.output_settings:box_shadow_enabled:value }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'box_shadow_offset_x',		l.output_settings:box_shadow_offset_x )	OR
						NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'box_shadow_offset_y',		l.output_settings:box_shadow_offset_y )	OR
						NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'box_shadow_blur',			l.output_settings:box_shadow_blur )		OR
						NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'box_shadow_spread',		l.output_settings:box_shadow_spread ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_settings, ternary( l.property:required, 'r', 'o' ), 'box_shadow_inset', l.input_box_shadow_inset ) }">	<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.input_box_shadow_inset, 'o', 'value', l.output_settings:box_shadow_inset:value,	',inset',
																																								',inset' ) }">				<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_settings, ternary( l.property:required, 'r', 'o' ), 'box_shadow_color', l.input_box_shadow_color ) }">	<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_box_shadow_color, 'o', 'value', l.output_settings:box_shadow_color:value ) }">							<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Checkbox" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Text" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_TextSettings( l.input_settings, l.property, l.output_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_TextSettings" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.processed_fields" VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, 'o', 'textsettings', l.input_settings_textsettings ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings_textsettings, 'o', 'fields', l.input_settings_fields ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.property:textsettings:fields">
		<MvIF EXPR = "{ ISNULL l.field:code }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvFOREACH ITERATOR = "l.pseudoclass" ARRAY = "l.field:pseudoclasses">
			<MvIF EXPR = "{ ISNULL l.pseudoclass }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvREFERENCEARRAY NAME = "l.output_pseudoclass_settings" VARIABLE = "l.output_settings:textsettings:fields">
				<MvMEMBER NAME = "{ l.pseudoclass }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_TextSettings_Field_WithVisibilityConditions( l.input_settings_fields, l.property, l.field, l.pseudoclass, l.processed_fields, l.output_pseudoclass_settings ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_TextSettings_Field_WithVisibilityConditions" PARAMETERS = "input_settings var, property var, field var, pseudoclass var, processed_fields var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.field_processed" VARIABLE = "l.processed_fields">
		<MvMEMBER NAME = "{ l.pseudoclass }">
		<MvMEMBER NAME = "{ l.field:code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.field_processed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.field_processed" VALUE = 1>

	<MvREFERENCEARRAY NAME = "l.output_field_settings" VARIABLE = "l.output_settings">
		<MvMEMBER NAME = "{ l.field:code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ NOT ISNULL l.field:visibility_conditions }">
		<MvREFERENCEARRAY NAME = "l.pseudoclass_visibility_conditions" VARIABLE = "l.field:visibility_conditions">
			<MvMEMBER NAME = "{ l.pseudoclass }">
		</MvREFERENCEARRAY>

		<MvFOREACH ITERATOR = "l.field_code" ARRAY = "l.field_codes" COUNT = "{ miva_struct_members( l.pseudoclass_visibility_conditions, l.field_codes ) }">
			<MvIF EXPR = "{ strcasecmp( l.field_code, l.field:code ) EQ 0 }">
				<MvASSIGN NAME = "l.output_field_settings:visible" VALUE = 0>

				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvIF EXPR = "{ NOT miva_array_search( l.property:textsettings:fields, 1, l.search_field, 'strcasecmp( l.search_field:code, l.field_code ) EQ 0' ) OR
							NOT miva_array_search( l.search_field:pseudoclasses, 1, l.search_pseudoclass, 'strcasecmp( l.search_pseudoclass, l.pseudoclass ) EQ 0' ) }">
				<MvASSIGN NAME = "l.output_field_settings:visible" VALUE = 0>

				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_TextSettings_Field_WithVisibilityConditions( l.input_settings, l.property, l.search_field, l.pseudoclass, l.processed_fields, l.output_settings ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvREFERENCEARRAY NAME = "l.search_output_field_settings" VARIABLE = "l.output_settings">
				<MvMEMBER NAME = "{ l.search_field:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT ISNULL l.search_field:visibility_conditions AND NOT l.search_output_field_settings:visible }">
				<MvASSIGN NAME = "l.output_field_settings:visible" VALUE = 0>

				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvREFERENCEARRAY NAME = "l.visibility_condition_field" VARIABLE = "l.pseudoclass_visibility_conditions">
				<MvMEMBER NAME = "{ l.field_code }">
			</MvREFERENCEARRAY>

			<MvFOREACH ITERATOR = "l.value_member_name" ARRAY = "l.value_member_names" COUNT = "{ miva_struct_members( l.visibility_condition_field, l.value_member_names ) }">
				<MvREFERENCEARRAY NAME = "l.values" VARIABLE = "l.visibility_condition_field">
					<MvMEMBER NAME = "{ l.value_member_name }">
				</MvREFERENCEARRAY>

				<MvREFERENCEARRAY NAME = "l.field_value" VARIABLE = "l.search_output_field_settings">
					<MvMEMBER NAME = "{ l.value_member_name }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ NOT miva_array_search( l.values, 1, l.search_value, 'l.search_value EQ l.field_value' ) }">
					<MvASSIGN NAME = "l.output_field_settings:visible" VALUE = 0>

					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>
			</MvFOREACH>
		</MvFOREACH>

		<MvASSIGN NAME = "l.output_field_settings:visible" VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, 'o', l.pseudoclass, l.input_settings_pseudoclass ) }">
		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings_pseudoclass, 'o', l.field:code, l.input_settings_field ) }">
			<MvIF EXPR = "{ l.field:type EQ 'color'		OR
							l.field:type EQ 'select'	OR
							l.field:type EQ 'selector'	OR
							l.field:type EQ 'text' }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_field, 'o', 'value', l.output_field_settings:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'borderthickness' }">
				<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_top_width',		l.output_field_settings:border_top_width )		OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_right_width',		l.output_field_settings:border_right_width )	OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_bottom_width',	l.output_field_settings:border_bottom_width )	OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_left_width',		l.output_field_settings:border_left_width ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'breakpoint' }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_field, 'o', 'code', l.output_field_settings:code ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT ISNULL l.output_field_settings:code }">
					<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Load_Theme( l.theme ) }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					</MvIF>

					<MvIF EXPR = "{ NOT miva_array_search( l.theme:layout:breakpoints, 1, l.breakpoint, 'strcasecmp( l.breakpoint:code, l.output_field_settings:code ) EQ 0' ) }">
						<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_settings_field, 'code', 'Breakpoint not found' ) }">
					</MvIF>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'button' }">
				<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Button( l.field, l.input_settings_field, 'o', l.output_field_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'cornerradius' }">
				<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_top_left_radius',		l.output_field_settings:border_top_left_radius )		OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_top_right_radius',	l.output_field_settings:border_top_right_radius )		OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_bottom_right_radius',	l.output_field_settings:border_bottom_right_radius )	OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'border_bottom_left_radius',	l.output_field_settings:border_bottom_left_radius ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'dropshadow' }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_settings_field, 'o', 'box_shadow_enabled', l.input_box_shadow_enabled ) }">						<MvFUNCTIONRETURN VALUE = 0>
				<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.input_box_shadow_enabled, 'o', 'value', l.output_field_settings:box_shadow_enabled:value ) }">		<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ l.output_field_settings:box_shadow_enabled:value }">
					<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'box_shadow_offset_x',		l.output_field_settings:box_shadow_offset_x )	OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'box_shadow_offset_y',		l.output_field_settings:box_shadow_offset_y )	OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'box_shadow_blur',			l.output_field_settings:box_shadow_blur )		OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'box_shadow_spread',			l.output_field_settings:box_shadow_spread ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_settings_field, 'o', 'box_shadow_inset', l.input_box_shadow_inset ) }">							<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.input_box_shadow_inset, 'o', 'value', l.output_field_settings:box_shadow_inset:value,	',inset',
																																												',inset' ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_settings_field, 'o', 'box_shadow_color', l.input_box_shadow_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_box_shadow_color, 'o', 'value', l.output_field_settings:box_shadow_color:value ) }">				<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'lengthunit' }">
				<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit_LowLevel( l.input_settings_field, l.output_field_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'padding' }">
				<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'padding_top',	l.output_field_settings:padding_top )		OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'padding_right',	l.output_field_settings:padding_right )		OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'padding_bottom',	l.output_field_settings:padding_bottom )	OR
								NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings_field, 'o', 'padding_left',	l.output_field_settings:padding_left ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'font' }">
				<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Font_LowLevel( l.input_settings_field, 'o', l.output_field_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.field:type EQ 'typography' }">
				<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Typography( l.field, l.input_settings_field, 'o', l.output_field_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_TextArea" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ),	'value',	l.output_settings:value ) OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, 'o',										'source',	l.output_settings:source ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Property_TextSettings( l.input_settings, l.property, l.output_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_TextEditor" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, 'o', 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Image" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'image',	l.output_settings:image ) OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, 'o',										'alt',	l.output_settings:alt ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, 'o', 'responsive_images', l.input_settings_responsive_images ) }">
		<MvFOREACH ITERATOR = "l.responsive_image" ARRAY = "l.property:responsive_images">
			<MvREFERENCEARRAY NAME = "l.output_settings_responsive_image" VARIABLE = "l.output_settings:responsive_images">
				<MvMEMBER NAME = "{ l.responsive_image:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_responsive_images, 'o', l.responsive_image:code, l.output_settings_responsive_image ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Padding" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'padding_top',		l.output_settings:padding_top )		OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'padding_right',	l.output_settings:padding_right )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'padding_bottom',	l.output_settings:padding_bottom )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'padding_left',	l.output_settings:padding_left ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Product" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'product_code', l.output_settings:product_code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_ProductCustomFieldLookup" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Category" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'category_code', l.output_settings:category_code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_CategoryCustomFieldLookup" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_CustomLookup" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Font" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Font_LowLevel( l.input_settings, ternary( l.property:required, 'r', 'o' ), l.output_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Typography" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Typography( l.property, l.input_settings, ternary( l.property:required, 'R', 'o' ), l.output_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Fragment" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_ImageType" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_LengthUnit" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit_LowLevel( l.input_settings, l.output_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Link" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.input_settings, 'R',										'type',		l.output_settings:type, 'url,product,category,page,screen', 'url,product,category,page,screen' )	OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ),	'value',	l.output_settings:value )																			OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.input_settings, 'o',									'new_tab',	l.output_settings:new_tab ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Color" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_CornerRadius" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_top_left_radius',		l.output_settings:border_top_left_radius )		OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_top_right_radius',		l.output_settings:border_top_right_radius )		OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_bottom_right_radius',	l.output_settings:border_bottom_right_radius )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'border_bottom_left_radius',	l.output_settings:border_bottom_left_radius ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Date" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_DateTime( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.value OR l.value EQ 0 OR NOT l.property:serverdate }">
		<MvASSIGN NAME = "l.output_settings:value"			VALUE = "{ l.value }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_settings:value"			VALUE = "">
		<MvASSIGN NAME = "l.output_settings:value:time_t"	VALUE = "{ int( l.value ) }">
		<MvASSIGN NAME = "l.output_settings:value:year"		VALUE = "{ time_t_year( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:month"	VALUE = "{ time_t_month( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:day"		VALUE = "{ time_t_dayofmonth( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:hour"		VALUE = "{ time_t_hour( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:minute"	VALUE = "{ time_t_min( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:second"	VALUE = "{ time_t_sec( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:timezone"	VALUE = "{ timezone() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_DateTime" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_DateTime( l.input_settings, ternary( l.property:required, 'R', 'o' ), 'value', l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.value OR l.value EQ 0 OR NOT l.property:serverdate }">
		<MvASSIGN NAME = "l.output_settings:value"			VALUE = "{ l.value }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_settings:value"			VALUE = "">
		<MvASSIGN NAME = "l.output_settings:value:time_t"	VALUE = "{ int( l.value ) }">
		<MvASSIGN NAME = "l.output_settings:value:year"		VALUE = "{ time_t_year( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:month"	VALUE = "{ time_t_month( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:day"		VALUE = "{ time_t_dayofmonth( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:hour"		VALUE = "{ time_t_hour( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:minute"	VALUE = "{ time_t_min( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:second"	VALUE = "{ time_t_sec( l.value, g.Merchant_Local_Timezone ) }">
		<MvASSIGN NAME = "l.output_settings:value:timezone"	VALUE = "{ timezone() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_BreakpointGroup" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.property:include_default }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, ternary( l.property:required, 'r', 'o' ), 'default', l.input_default_settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Properties_LowLevel( l.input_default_settings, l.property:properties, l.output_settings:default ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Load_Theme( l.theme ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
		<MvREFERENCEARRAY NAME = "l.output_breakpoint_settings" VARIABLE = "l.output_settings">
			<MvMEMBER NAME = "{ l.breakpoint:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, ternary( l.property:required, 'r', 'o' ), l.breakpoint:code, l.input_breakpoint_settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Properties_LowLevel( l.input_breakpoint_settings, l.property:properties, l.output_breakpoint_settings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_Group" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.property:can_disable }">
		<MvASSIGN NAME = "l.output_settings:settings:enabled" VALUE = 1>

		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings, 'o', 'settings', l.input_settings_settings ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.input_settings_settings, 'o', 'enabled', l.output_settings:settings:enabled ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT l.output_settings:settings:enabled }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Element_Validate_Properties_LowLevel( l.input_settings, l.property:properties, l.output_settings ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Element_Validate_Property_List" PARAMETERS = "input_settings var, property var, output_settings var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.input_settings_item" ARRAY = "l.input_settings_items" COUNT = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_settings, 'children', l.input_settings_items ) }">
		<MvREFERENCEARRAY NAME = "l.output_settings_item" VARIABLE = "l.output_settings:children">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ l.property:list_type EQ 'text' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings_item:value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'product' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'product_code', l.output_settings_item:product_code ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'productcustomfieldlookup' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings_item:value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'category' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'category_code', l.output_settings_item:category_code ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'categorycustomfieldlookup' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings_item:value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'color' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'value', l.output_settings_item:value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'date' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_DateTime( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'value', l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ ISNULL l.value OR l.value EQ 0 OR NOT l.property:serverdate }">
				<MvASSIGN NAME = "l.output_settings_item:value"				VALUE = "{ l.value }">
			<MvELSE>
				<MvASSIGN NAME = "l.output_settings_item:value"				VALUE = "">
				<MvASSIGN NAME = "l.output_settings_item:value:time_t"		VALUE = "{ int( l.value ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:year"		VALUE = "{ time_t_year( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:month"		VALUE = "{ time_t_month( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:day"			VALUE = "{ time_t_dayofmonth( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:hour"		VALUE = "{ time_t_hour( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:minute"		VALUE = "{ time_t_min( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:second"		VALUE = "{ time_t_sec( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:timezone"	VALUE = "{ timezone() }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'datetime' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_DateTime( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'value', l.value ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ ISNULL l.value OR l.value EQ 0 OR NOT l.property:serverdate }">
				<MvASSIGN NAME = "l.output_settings_item:value"				VALUE = "{ l.value }">
			<MvELSE>
				<MvASSIGN NAME = "l.output_settings_item:value"				VALUE = "">
				<MvASSIGN NAME = "l.output_settings_item:value:time_t"		VALUE = "{ int( l.value ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:year"		VALUE = "{ time_t_year( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:month"		VALUE = "{ time_t_month( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:day"			VALUE = "{ time_t_dayofmonth( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:hour"		VALUE = "{ time_t_hour( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:minute"		VALUE = "{ time_t_min( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:second"		VALUE = "{ time_t_sec( l.value, g.Merchant_Local_Timezone ) }">
				<MvASSIGN NAME = "l.output_settings_item:value:timezone"	VALUE = "{ timezone() }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'link' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.input_settings_item, 'R',										'type',				l.output_settings_item:type, 'url,product,category,page,screen', 'url,product,category,page,screen' )	OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ),	'value',			l.output_settings_item:value )																			OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.input_settings_item, 'o',									'new_tab',			l.output_settings_item:new_tab ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'image' }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, ternary( l.property:required, 'R', 'o' ), 'image',	l.output_settings_item:image ) OR
							NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_item, 'o',										'alt',		l.output_settings_item:alt ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Structure( l.input_settings_item, 'o', 'responsive_images', l.input_settings_responsive_images ) }">
				<MvFOREACH ITERATOR = "l.responsive_image" ARRAY = "l.property:responsive_images">
					<MvREFERENCEARRAY NAME = "l.output_settings_responsive_image" VARIABLE = "l.output_settings_item:responsive_images">
						<MvMEMBER NAME = "{ l.responsive_image:code }">
					</MvREFERENCEARRAY>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_settings_responsive_images, 'o', l.responsive_image:code, l.output_settings_responsive_image ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvFOREACH>
			</MvIF>
		<MvELSEIF EXPR = "{ l.property:list_type EQ 'group' }">
			<MvIF EXPR = "{ NOT JSON_PageBuilder_Element_Validate_Properties_LowLevel( l.input_settings_item, l.property:properties, l.output_settings_item ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Input_Element_Button" PARAMETERS = "property_or_field var, element_button var, required, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.property_or_field:supports_legacy }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_button, 'theme_mode' ) }">
			<MvASSIGN NAME = "l.output:theme_mode" VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_button, 'R', 'theme_mode', l.output:theme_mode ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.property_or_field:supports_legacy AND NOT l.output:theme_mode }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Load_Theme( l.theme ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_button, l.required, 'code', l.output:code ) OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_button, l.required, 'size', l.output:size ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.output:code AND ISNULL l.output:size }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.button_index" VALUE = "{ miva_array_search( l.theme:buttons, 1, l.button, 'strcasecmp( l.button:code, l.output:code ) EQ 0' ) }">

	<MvIF EXPR = "{ l.property_or_field:supports_customization }">
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_corner_radius"			VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_fill_color"				VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_border"					VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_drop_shadow"				VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_padding"					VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_font"					VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_text_color"				VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_text_settings"			VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:hover_styles:overwrite_fill_color"		VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:hover_styles:overwrite_border"			VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:hover_styles:overwrite_drop_shadow"		VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:hover_styles:overwrite_text_color"		VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:hover_styles:overwrite_text_settings"		VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:disabled_styles:overwrite_fill_color"		VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:disabled_styles:overwrite_border"			VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:disabled_styles:overwrite_drop_shadow"	VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:disabled_styles:overwrite_text_color"		VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:disabled_styles:overwrite_text_settings"	VALUE = 0>

		<MvFOREACH ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
			<MvREFERENCEARRAY NAME = "l.output_breakpoint_styles" VARIABLE = "l.output:customizations:breakpoint_styles">
				<MvMEMBER NAME = "{ l.breakpoint:code }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.output_breakpoint_styles:overwrite_size_settings"			VALUE = 0>
		</MvFOREACH>

		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_button, 'customizations' ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_button, 'R', 'customizations', l.element_customizations ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvCOMMENT>
			|
			| Styles
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_customizations, 'styles' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_customizations, 'R', 'styles', l.element_styles ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_corner_radius',	l.output:customizations:styles:overwrite_corner_radius )	OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_fill_color',	l.output:customizations:styles:overwrite_fill_color )		OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_border',		l.output:customizations:styles:overwrite_border )			OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_drop_shadow',	l.output:customizations:styles:overwrite_drop_shadow )		OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_padding',		l.output:customizations:styles:overwrite_padding )			OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_font',			l.output:customizations:styles:overwrite_font )				OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_text_color',	l.output:customizations:styles:overwrite_text_color )		OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_text_settings',	l.output:customizations:styles:overwrite_text_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_corner_radius }">
					<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_top_left_radius',		l.output:customizations:styles:border_top_left_radius )		OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_top_right_radius',		l.output:customizations:styles:border_top_right_radius )	OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_bottom_right_radius',	l.output:customizations:styles:border_bottom_right_radius )	OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_bottom_left_radius',	l.output:customizations:styles:border_bottom_left_radius ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_fill_color }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'background_color', l.element_background_color ) }">								<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_background_color, 'r', 'value', l.output:customizations:styles:background_color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_border }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'border_enabled', l.element_border_enabled ) }">									<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_border_enabled, 'r', 'value', l.output:customizations:styles:border_enabled:value ) }">		<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.output:customizations:styles:border_enabled:value }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_top_width',		l.output:customizations:styles:border_top_width )		OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_right_width',	l.output:customizations:styles:border_right_width )		OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_bottom_width',	l.output:customizations:styles:border_bottom_width )	OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'border_left_width',	l.output:customizations:styles:border_left_width ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'border_style', l.element_border_style ) }">													<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_border_style, 'r', 'value', l.output:customizations:styles:border_style:value,	'dotted,dashed,solid',
																																													'dotted,dashed,solid' ) }">	<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'border_color', l.element_border_color ) }">								<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_border_color, 'r', 'value', l.output:customizations:styles:border_color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_drop_shadow }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'box_shadow_enabled', l.element_box_shadow_enabled ) }">									<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_box_shadow_enabled, 'r', 'value', l.output:customizations:styles:box_shadow_enabled:value ) }">		<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.output:customizations:styles:box_shadow_enabled:value }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'box_shadow_offset_x',	l.output:customizations:styles:box_shadow_offset_x )	OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'box_shadow_offset_y',	l.output:customizations:styles:box_shadow_offset_y )	OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'box_shadow_blur',		l.output:customizations:styles:box_shadow_blur )		OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'box_shadow_spread',	l.output:customizations:styles:box_shadow_spread ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'box_shadow_inset', l.element_box_shadow_inset ) }">										<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_box_shadow_inset, 'r', 'value', l.output:customizations:styles:box_shadow_inset:value,	',inset',
																																															',inset' ) }">	<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'box_shadow_color', l.element_box_shadow_color ) }">										<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_box_shadow_color, 'r', 'value', l.output:customizations:styles:box_shadow_color:value ) }">			<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_padding }">
					<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_top',		l.output:customizations:styles:padding_top )	OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_right',	l.output:customizations:styles:padding_right )	OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_bottom',	l.output:customizations:styles:padding_bottom )	OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_left',		l.output:customizations:styles:padding_left ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_font }">
					<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Font( l.element_styles, 'r', 'font',			l.output:customizations:styles:font ) OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'font_size',	l.output:customizations:styles:font_size ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_text_color }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'color', l.element_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_color, 'r', 'value', l.output:customizations:styles:color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_text_settings }">
					<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'line_height',		l.output:customizations:styles:line_height ) OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'letter_spacing',	l.output:customizations:styles:letter_spacing ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'text_transform', l.element_text_transform ) }">																	<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_text_transform, 'r', 'value', l.output:customizations:styles:text_transform:value,	'none,uppercase,lowercase,capitalize',
																																													'none,uppercase,lowercase,capitalize' ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'overflow_wrap', l.element_overflow_wrap ) }">															<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_overflow_wrap, 'r', 'value', l.output:customizations:styles:overflow_wrap:value,	'normal,break-word,anywhere',
																																													'normal,break-word,anywhere' ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'text_underline_enabled', l.element_text_underline_enabled ) }">								<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_text_underline_enabled, 'r', 'value', l.output:customizations:styles:text_underline_enabled:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.output:customizations:styles:text_underline_enabled:value }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'text_underline_thickness',	l.output:customizations:styles:text_underline_thickness ) OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'text_underline_offset',	l.output:customizations:styles:text_underline_offset ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvCOMMENT>
			|
			| Hover Styles
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_customizations, 'hover_styles' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_customizations, 'R', 'hover_styles', l.element_hover_styles ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_hover_styles, 'O', 'overwrite_fill_color',		l.output:customizations:hover_styles:overwrite_fill_color )		OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_hover_styles, 'O', 'overwrite_border',			l.output:customizations:hover_styles:overwrite_border )			OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_hover_styles, 'O', 'overwrite_drop_shadow',		l.output:customizations:hover_styles:overwrite_drop_shadow )	OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_hover_styles, 'O', 'overwrite_text_color',		l.output:customizations:hover_styles:overwrite_text_color )		OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_hover_styles, 'O', 'overwrite_text_settings',	l.output:customizations:hover_styles:overwrite_text_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:hover_styles:overwrite_fill_color }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_hover_styles, 'R', 'background_color', l.element_background_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_background_color, 'r', 'value', l.output:customizations:hover_styles:background_color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:hover_styles:overwrite_border }">
					<MvIF EXPR = "{ ( l.output:customizations:styles:overwrite_border AND l.output:customizations:styles:border_enabled:value )					OR
									( NOT l.output:customizations:styles:overwrite_border AND l.button_index GT 0 AND l.button:styles:border_enabled:value )	OR
									( NOT l.output:customizations:styles:overwrite_border AND l.button_index EQ 0 ) }">
						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_hover_styles, 'R', 'border_color', l.element_border_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_border_color, 'r', 'value', l.output:customizations:hover_styles:border_color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:hover_styles:overwrite_drop_shadow }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_hover_styles, 'R', 'box_shadow_enabled', l.element_box_shadow_enabled ) }">									<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_box_shadow_enabled, 'r', 'value', l.output:customizations:hover_styles:box_shadow_enabled:value ) }">		<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.output:customizations:hover_styles:box_shadow_enabled:value }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_hover_styles, 'r', 'box_shadow_offset_x',	l.output:customizations:hover_styles:box_shadow_offset_x )	OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_hover_styles, 'r', 'box_shadow_offset_y',	l.output:customizations:hover_styles:box_shadow_offset_y )	OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_hover_styles, 'r', 'box_shadow_blur',		l.output:customizations:hover_styles:box_shadow_blur )		OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_hover_styles, 'r', 'box_shadow_spread',		l.output:customizations:hover_styles:box_shadow_spread ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_hover_styles, 'R', 'box_shadow_inset', l.element_box_shadow_inset ) }">										<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_box_shadow_inset, 'r', 'value', l.output:customizations:hover_styles:box_shadow_inset:value,	',inset',
																																																	',inset' ) }">	<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_hover_styles, 'R', 'box_shadow_color', l.element_box_shadow_color ) }">										<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_box_shadow_color, 'r', 'value', l.output:customizations:hover_styles:box_shadow_color:value ) }">				<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:hover_styles:overwrite_text_color }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_hover_styles, 'R', 'color', l.element_color ) }">								<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_color, 'r', 'value', l.output:customizations:hover_styles:color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:hover_styles:overwrite_text_settings }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_hover_styles, 'R', 'text_underline_enabled', l.element_text_underline_enabled ) }">								<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_text_underline_enabled, 'r', 'value', l.output:customizations:hover_styles:text_underline_enabled:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.output:customizations:hover_styles:text_underline_enabled:value }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_hover_styles, 'r', 'text_underline_thickness',	l.output:customizations:hover_styles:text_underline_thickness ) OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_hover_styles, 'r', 'text_underline_offset',		l.output:customizations:hover_styles:text_underline_offset ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvCOMMENT>
			|
			| Disabled Styles
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_customizations, 'disabled_styles' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_customizations, 'R', 'disabled_styles', l.element_disabled_styles ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_disabled_styles, 'O', 'overwrite_fill_color',		l.output:customizations:disabled_styles:overwrite_fill_color )	OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_disabled_styles, 'O', 'overwrite_border',			l.output:customizations:disabled_styles:overwrite_border )		OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_disabled_styles, 'O', 'overwrite_drop_shadow',		l.output:customizations:disabled_styles:overwrite_drop_shadow )	OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_disabled_styles, 'O', 'overwrite_text_color',		l.output:customizations:disabled_styles:overwrite_text_color )	OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_disabled_styles, 'O', 'overwrite_text_settings',	l.output:customizations:disabled_styles:overwrite_text_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:disabled_styles:overwrite_fill_color }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_disabled_styles, 'R', 'background_color', l.element_background_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_background_color, 'r', 'value', l.output:customizations:disabled_styles:background_color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:disabled_styles:overwrite_border }">
					<MvIF EXPR = "{ ( l.output:customizations:styles:overwrite_border AND l.output:customizations:styles:border_enabled:value )					OR
									( NOT l.output:customizations:styles:overwrite_border AND l.button_index GT 0 AND l.button:styles:border_enabled:value )	OR
									( NOT l.output:customizations:styles:overwrite_border AND l.button_index EQ 0 ) }">
						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_disabled_styles, 'R', 'border_color', l.element_border_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_border_color, 'r', 'value', l.output:customizations:disabled_styles:border_color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:disabled_styles:overwrite_drop_shadow }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_disabled_styles, 'R', 'box_shadow_enabled', l.element_box_shadow_enabled ) }">									<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_box_shadow_enabled, 'r', 'value', l.output:customizations:disabled_styles:box_shadow_enabled:value ) }">		<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.output:customizations:disabled_styles:box_shadow_enabled:value }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_disabled_styles, 'r', 'box_shadow_offset_x',	l.output:customizations:disabled_styles:box_shadow_offset_x )	OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_disabled_styles, 'r', 'box_shadow_offset_y',	l.output:customizations:disabled_styles:box_shadow_offset_y )	OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_disabled_styles, 'r', 'box_shadow_blur',		l.output:customizations:disabled_styles:box_shadow_blur )		OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_disabled_styles, 'r', 'box_shadow_spread',	l.output:customizations:disabled_styles:box_shadow_spread ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_disabled_styles, 'R', 'box_shadow_inset', l.element_box_shadow_inset ) }">										<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_box_shadow_inset, 'r', 'value', l.output:customizations:disabled_styles:box_shadow_inset:value,	',inset',
																																																		',inset' ) }">	<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_disabled_styles, 'R', 'box_shadow_color', l.element_box_shadow_color ) }">										<MvFUNCTIONRETURN VALUE = 0>
						<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_box_shadow_color, 'r', 'value', l.output:customizations:disabled_styles:box_shadow_color:value ) }">				<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:disabled_styles:overwrite_text_color }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_disabled_styles, 'R', 'color', l.element_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_color, 'r', 'value', l.output:customizations:disabled_styles:color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:disabled_styles:overwrite_text_settings }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_disabled_styles, 'R', 'text_underline_enabled', l.element_text_underline_enabled ) }">								<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_text_underline_enabled, 'r', 'value', l.output:customizations:disabled_styles:text_underline_enabled:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.output:customizations:disabled_styles:text_underline_enabled:value }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_disabled_styles, 'r', 'text_underline_thickness',	l.output:customizations:disabled_styles:text_underline_thickness ) OR
										NOT JSON_Theme_Input_Element_LengthUnit( l.element_disabled_styles, 'r', 'text_underline_offset',		l.output:customizations:disabled_styles:text_underline_offset ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvCOMMENT>
			|
			| Breakpoint Styles
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_customizations, 'breakpoint_styles' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_customizations, 'R', 'breakpoint_styles', l.element_breakpoint_styles ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvFOREACH ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
					<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_breakpoint_styles, l.breakpoint:code ) }">
						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_breakpoint_styles, 'R', l.breakpoint:code, l.element_styles ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvREFERENCEARRAY NAME = "l.output_breakpoint_styles" VARIABLE = "l.output:customizations:breakpoint_styles">
							<MvMEMBER NAME = "{ l.breakpoint:code }">
						</MvREFERENCEARRAY>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_size_settings', l.output_breakpoint_styles:overwrite_size_settings ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ l.output_breakpoint_styles:overwrite_size_settings }">
							<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'font_size',		l.output_breakpoint_styles:font_size )		OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'line_height',		l.output_breakpoint_styles:line_height )	OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'letter_spacing',	l.output_breakpoint_styles:letter_spacing )	OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_top',		l.output_breakpoint_styles:padding_top )	OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_right',	l.output_breakpoint_styles:padding_right )	OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_bottom',	l.output_breakpoint_styles:padding_bottom )	OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'padding_left',		l.output_breakpoint_styles:padding_left ) }">
								<MvFUNCTIONRETURN VALUE = 0>
							</MvIF>
						</MvIF>
					</MvIF>
				</MvFOREACH>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Input_Element_Typography" PARAMETERS = "property_or_field var, element_typography var, required, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.property_or_field:supports_legacy }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_typography, 'theme_mode' ) }">
			<MvASSIGN NAME = "l.output:theme_mode" VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_typography, 'R', 'theme_mode', l.output:theme_mode ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.property_or_field:supports_legacy AND NOT l.output:theme_mode }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Load_Theme( l.theme ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_typography, l.required, 'code', l.output:code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.output:code }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.typography_index" VALUE = "{ miva_array_search( l.theme:typographies, 1, l.typography, 'strcasecmp( l.typography:code, l.output:code ) EQ 0' ) }">

	<MvIF EXPR = "{ l.property_or_field:supports_customization }">
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_font"			VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_color"			VALUE = 0>
		<MvASSIGN NAME = "l.output:customizations:styles:overwrite_text_settings"	VALUE = 0>

		<MvFOREACH ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
			<MvREFERENCEARRAY NAME = "l.output_breakpoint_styles" VARIABLE = "l.output:customizations:breakpoint_styles">
				<MvMEMBER NAME = "{ l.breakpoint:code }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.output_breakpoint_styles:overwrite_text_settings"	VALUE = 0>
		</MvFOREACH>

		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_typography, 'customizations' ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_typography, 'R', 'customizations', l.element_customizations ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_customizations, 'styles' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_customizations, 'R', 'styles', l.element_styles ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_font',				l.output:customizations:styles:overwrite_font )		OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_color',				l.output:customizations:styles:overwrite_color )	OR
								NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_text_settings',		l.output:customizations:styles:overwrite_text_settings ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_font }">
					<MvIF EXPR = "{ NOT JSON_PageBuilder_Input_Element_Font( l.element_styles, 'r', 'font',			l.output:customizations:styles:font ) OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'font_size',	l.output:customizations:styles:font_size ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_color }">
					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'color', l.element_color ) }">							<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_color, 'r', 'value', l.output:customizations:styles:color:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.output:customizations:styles:overwrite_text_settings }">
					<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'line_height',		l.output:customizations:styles:line_height ) OR
									NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'letter_spacing',	l.output:customizations:styles:letter_spacing ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'text_transform', l.element_text_transform ) }">																	<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_text_transform, 'r', 'value', l.output:customizations:styles:text_transform:value,	'none,uppercase,lowercase,capitalize',
																																													'none,uppercase,lowercase,capitalize' ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'overflow_wrap', l.element_overflow_wrap ) }">																	<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_overflow_wrap, 'r', 'value', l.output:customizations:styles:overflow_wrap:value,	'normal,break-word,anywhere',
																																													'normal,break-word,anywhere' ) }">			<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_styles, 'R', 'white_space', l.element_white_space ) }">																		<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_white_space, 'r', 'value', l.output:customizations:styles:white_space:value,		'normal,nowrap,pre,prewrap,preline',
																																													'normal,nowrap,pre,prewrap,preline' ) }">	<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvIF EXPR = "{ l.typography_index GT 0 AND l.typography:type EQ 'paragraph' }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'paragraph_spacing', l.output:customizations:styles:paragraph_spacing ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					<MvELSEIF EXPR = "{ l.typography_index EQ 0 }">
						<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, '0', 'paragraph_spacing', l.output:customizations:styles:paragraph_spacing ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_customizations, 'breakpoint_styles' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_customizations, 'R', 'breakpoint_styles', l.element_breakpoint_styles ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvFOREACH ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
					<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_breakpoint_styles, l.breakpoint:code ) }">
						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element_breakpoint_styles, 'R', l.breakpoint:code, l.element_styles ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvREFERENCEARRAY NAME = "l.output_breakpoint_styles" VARIABLE = "l.output:customizations:breakpoint_styles">
							<MvMEMBER NAME = "{ l.breakpoint:code }">
						</MvREFERENCEARRAY>

						<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_styles, 'O', 'overwrite_text_settings', l.output_breakpoint_styles:overwrite_text_settings ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>

						<MvIF EXPR = "{ l.output_breakpoint_styles:overwrite_text_settings }">
							<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'font_size',		l.output_breakpoint_styles:font_size )		OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'line_height',		l.output_breakpoint_styles:line_height )	OR
											NOT JSON_Theme_Input_Element_LengthUnit( l.element_styles, 'r', 'letter_spacing',	l.output_breakpoint_styles:letter_spacing ) }">
								<MvFUNCTIONRETURN VALUE = 0>
							</MvIF>
						</MvIF>
					</MvIF>
				</MvFOREACH>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Input_Element_Font" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element, l.required, l.param, l.element_font ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ISNULL l.element_font }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_PageBuilder_Input_Element_Font_LowLevel( l.element_font, l.required, l.output ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PageBuilder_Input_Element_Font_LowLevel" PARAMETERS = "element_font var, required, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_font, l.required, 'code', l.output:code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_font, 'weight' ) }">
		<MvASSIGN NAME = "l.output:weight" VALUE = "">
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_font, 'R', 'weight', l.output:weight, ',100,200,300,400,500,600,700,800,900', ',100,200,300,400,500,600,700,800,900' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_font, 'style' ) }">
		<MvASSIGN NAME = "l.output:style" VALUE = "">
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_font, 'R', 'style', l.output:style, ',normal,italic', ',normal,italic' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.output:code }"> 
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Font_Load_Code( l.output:code, l.loaded_font ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.element_font, 'code', 'Font not found' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Theme
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Theme" PARAMETERS = "theme var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"layout":
	{
		"breakpoints":
		[
			<MvASSIGN NAME = "l.breakpoint_output_count" VALUE = 0>

			<MvFOREACH ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.breakpoint_output_count ) }">
					"code":		"<MvEVAL EXPR = "{ encodejavascriptstring( l.breakpoint:code ) }">",
					"name":		"<MvEVAL EXPR = "{ encodejavascriptstring( l.breakpoint:name ) }">",
					"start":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint:start ) }">,
					"end":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint:end ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	},
	"typographies":
	[
		<MvASSIGN NAME = "l.typography_output_count" VALUE = 0>

		<MvFOREACH ITERATOR = "l.typography" ARRAY = "l.theme:typographies" COUNT = "{ l.theme:typography_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.typography_output_count ) }">
				"code":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.typography:code ) }">",
				"name":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.typography:name ) }">",
				"type":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.typography:type ) }">",
				"classname":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.typography:classname ) }">",
				"styles":
				{
					"color":	<MvEVAL EXPR = "{ JSON_Theme_Value( l.typography:styles:color ) }">,
					"font":
					{
						"code":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.typography:styles:font:code ) }">",
						"weight":		"<MvEVAL EXPR = "{ encodejavascriptstring( l.typography:styles:font:weight ) }">",
						"style":		"<MvEVAL EXPR = "{ encodejavascriptstring( l.typography:styles:font:style ) }">"
					},
					"font_size":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.typography:styles:font_size ) }">,
					"line_height":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.typography:styles:line_height ) }">,
					"letter_spacing":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.typography:styles:letter_spacing ) }">,
					"text_transform":	<MvEVAL EXPR = "{ JSON_Theme_Value( l.typography:styles:text_transform ) }">,
					"overflow_wrap":	<MvEVAL EXPR = "{ JSON_Theme_Value( l.typography:styles:overflow_wrap ) }">,
					"white_space":		<MvEVAL EXPR = "{ JSON_Theme_Value( l.typography:styles:white_space ) }">

					<MvIF EXPR = "{ l.typography:type EQ 'paragraph' }">
						, "paragraph_spacing":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.typography:styles:paragraph_spacing ) }">
					</MvIF>
				},
				"breakpoint_styles":
				{
					<MvFOREACH INDEX = "l.breakpoint_pos" ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
						<MvREFERENCEARRAY NAME = "l.breakpoint_styles" VARIABLE = "l.typography:breakpoint_styles">
							<MvMEMBER NAME = "{ l.breakpoint:code }">
						</MvREFERENCEARRAY>

						<MvIF EXPR = "{ l.breakpoint_pos GT 1 }">
							,
						</MvIF>

						"<MvEVAL EXPR = "{ encodejavascriptstring( l.breakpoint:code ) }">":
						{
							"font_size":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:font_size ) }">,
							"line_height":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:line_height ) }">,
							"letter_spacing":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:letter_spacing ) }">
						}
					</MvFOREACH>
				}
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	],
	"buttons":
	[
		<MvASSIGN NAME = "l.button_output_count" VALUE = 0>

		<MvFOREACH ITERATOR = "l.button" ARRAY = "l.theme:buttons" COUNT = "{ l.theme:button_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.button_output_count ) }">
				"code":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.button:code ) }">",
				"name":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.button:name ) }">",
				"classname":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.button:classname ) }">",
				"styles":
				{
					"color":							<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:color ) }">,
					"background_color":					<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:background_color ) }">,
					"font":
					{
						"code":							"<MvEVAL EXPR = "{ encodejavascriptstring( l.button:styles:font:code ) }">",
						"weight":						"<MvEVAL EXPR = "{ encodejavascriptstring( l.button:styles:font:weight ) }">",
						"style":						"<MvEVAL EXPR = "{ encodejavascriptstring( l.button:styles:font:style ) }">"
					},
					"text_transform":					<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:text_transform ) }">,
					"overflow_wrap":					<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:overflow_wrap ) }">,
					"border_top_left_radius":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_top_left_radius ) }">,
					"border_top_right_radius":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_top_right_radius ) }">,
					"border_bottom_right_radius":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_bottom_right_radius ) }">,
					"border_bottom_left_radius":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_bottom_left_radius ) }">,
					"border_enabled":					<MvEVAL EXPR = "{ JSON_Theme_Boolean( l.button:styles:border_enabled ) }">,
					"box_shadow_enabled":				<MvEVAL EXPR = "{ JSON_Theme_Boolean( l.button:styles:box_shadow_enabled ) }">,
					"text_underline_enabled":			<MvEVAL EXPR = "{ JSON_Theme_Boolean( l.button:styles:text_underline_enabled ) }">

					<MvIF EXPR = "{ l.button:styles:border_enabled:value }">
						, "border_top_width":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_top_width ) }">,
						"border_right_width":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_right_width ) }">,
						"border_bottom_width":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_bottom_width ) }">,
						"border_left_width":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:border_left_width ) }">,
						"border_style":					<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:border_style ) }">,
						"border_color":					<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:border_color ) }">
					</MvIF>

					<MvIF EXPR = "{ l.button:styles:box_shadow_enabled:value }">
						, "box_shadow_inset":			<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:box_shadow_inset ) }">,
						"box_shadow_offset_x":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:box_shadow_offset_x ) }">,
						"box_shadow_offset_y":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:box_shadow_offset_y ) }">,
						"box_shadow_blur":				<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:box_shadow_blur ) }">,
						"box_shadow_spread":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:box_shadow_spread ) }">,
						"box_shadow_color":				<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:styles:box_shadow_color ) }">
					</MvIF>

					<MvIF EXPR = "{ l.button:styles:text_underline_enabled:value }">
						, "text_underline_thickness":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:text_underline_thickness ) }">,
						"text_underline_offset":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:styles:text_underline_offset ) }">
					</MvIF>
				},
				"hover_styles":
				{
					"color":							<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:hover_styles:color ) }">,
					"background_color":					<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:hover_styles:background_color ) }">,
					"box_shadow_enabled":				<MvEVAL EXPR = "{ JSON_Theme_Boolean( l.button:hover_styles:box_shadow_enabled ) }">,
					"text_underline_enabled":			<MvEVAL EXPR = "{ JSON_Theme_Boolean( l.button:hover_styles:text_underline_enabled ) }">

					<MvIF EXPR = "{ l.button:styles:border_enabled:value }">
						, "border_color":				<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:hover_styles:border_color ) }">
					</MvIF>

					<MvIF EXPR = "{ l.button:hover_styles:box_shadow_enabled:value }">
						, "box_shadow_inset":			<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:hover_styles:box_shadow_inset ) }">,
						"box_shadow_offset_x":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:hover_styles:box_shadow_offset_x ) }">,
						"box_shadow_offset_y":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:hover_styles:box_shadow_offset_y ) }">,
						"box_shadow_blur":				<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:hover_styles:box_shadow_blur ) }">,
						"box_shadow_spread":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:hover_styles:box_shadow_spread ) }">,
						"box_shadow_color":				<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:hover_styles:box_shadow_color ) }">
					</MvIF>

					<MvIF EXPR = "{ l.button:hover_styles:text_underline_enabled:value }">
						, "text_underline_thickness":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:hover_styles:text_underline_thickness ) }">,
						"text_underline_offset":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:hover_styles:text_underline_offset ) }">
					</MvIF>
				},
				"disabled_styles":
				{
					"color":							<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:disabled_styles:color ) }">,
					"background_color":					<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:disabled_styles:background_color ) }">,
					"box_shadow_enabled":				<MvEVAL EXPR = "{ JSON_Theme_Boolean( l.button:disabled_styles:box_shadow_enabled ) }">,
					"text_underline_enabled":			<MvEVAL EXPR = "{ JSON_Theme_Boolean( l.button:disabled_styles:text_underline_enabled ) }">

					<MvIF EXPR = "{ l.button:styles:border_enabled:value }">
						, "border_color":				<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:disabled_styles:border_color ) }">
					</MvIF>

					<MvIF EXPR = "{ l.button:disabled_styles:box_shadow_enabled:value }">
						, "box_shadow_inset":			<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:disabled_styles:box_shadow_inset ) }">,
						"box_shadow_offset_x":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:disabled_styles:box_shadow_offset_x ) }">,
						"box_shadow_offset_y":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:disabled_styles:box_shadow_offset_y ) }">,
						"box_shadow_blur":				<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:disabled_styles:box_shadow_blur ) }">,
						"box_shadow_spread":			<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:disabled_styles:box_shadow_spread ) }">,
						"box_shadow_color":				<MvEVAL EXPR = "{ JSON_Theme_Value( l.button:disabled_styles:box_shadow_color ) }">
					</MvIF>

					<MvIF EXPR = "{ l.button:disabled_styles:text_underline_enabled:value }">
						, "text_underline_thickness":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:disabled_styles:text_underline_thickness ) }">,
						"text_underline_offset":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.button:disabled_styles:text_underline_offset ) }">
					</MvIF>
				},
				"sizes":
				[
					<MvASSIGN NAME = "l.size_output_count" VALUE = 0>

					<MvFOREACH ITERATOR = "l.size" ARRAY = "l.button:sizes" COUNT = "{ l.button:size_count }">
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.size_output_count ) }">
							"code":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.size:code ) }">",
							"name":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.size:name ) }">",
							"default":		<MvEVAL EXPR = "{ encodejavascriptboolean( l.size:default ) }">,
							"classname":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.size:classname ) }">",
							"styles":
							{
								"font_size":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.size:styles:font_size ) }">,
								"line_height":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.size:styles:line_height ) }">,
								"letter_spacing":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.size:styles:letter_spacing ) }">,
								"padding_top":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.size:styles:padding_top ) }">,
								"padding_right":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.size:styles:padding_right ) }">,
								"padding_bottom":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.size:styles:padding_bottom ) }">,
								"padding_left":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.size:styles:padding_left ) }">
							},
							"breakpoint_styles":
							{
								<MvFOREACH INDEX = "l.breakpoint_pos" ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
									<MvREFERENCEARRAY NAME = "l.breakpoint_styles" VARIABLE = "l.size:breakpoint_styles">
										<MvMEMBER NAME = "{ l.breakpoint:code }">
									</MvREFERENCEARRAY>

									<MvIF EXPR = "{ l.breakpoint_pos GT 1 }">
										,
									</MvIF>

									"<MvEVAL EXPR = "{ encodejavascriptstring( l.breakpoint:code ) }">":
									{
										"font_size":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:font_size ) }">,
										"line_height":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:line_height ) }">,
										"letter_spacing":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:letter_spacing ) }">,
										"padding_top":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:padding_top ) }">,
										"padding_right":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:padding_right ) }">,
										"padding_bottom":	<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:padding_bottom ) }">,
										"padding_left":		<MvEVAL EXPR = "{ JSON_Theme_LengthUnit( l.breakpoint_styles:padding_left ) }">
									}
								</MvFOREACH>
							}
						<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					</MvFOREACH>
				]
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_LengthUnit" PARAMETERS = "style var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"unit": "<MvEVAL EXPR = "{ encodejavascriptstring( l.style:unit ) }">",
		"value": "<MvEVAL EXPR = "{ encodejavascriptstring( l.style:value ) }">"
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Boolean" PARAMETERS = "style var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"value": <MvEVAL EXPR = "{ encodejavascriptboolean( l.style:value ) }">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Value" PARAMETERS = "style var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"value": "<MvEVAL EXPR = "{ encodejavascriptstring( l.style:value ) }">"
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'THME', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_JSON ].JSON_Branch_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_JSON ].JSON_Branch_Load( l.branch ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Set_Working_Branch( l.branch ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Load_Theme( l.theme ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Theme( l.theme ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'THME', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_JSON ].JSON_Branch_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_JSON ].JSON_Branch_Load( l.branch ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Set_Working_Branch( l.branch ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Module_Feature_PGB_UT ].Theme_Lockfile_Path() }">
		<MvASSIGN NAME = "l.result" VALUE = "{ JSON_Theme_Update_LowLevel() }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Update_LowLevel" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.data"								VALUE = "">
	<MvASSIGN NAME = "l.data:deleted_typography_count"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Deleted_Typographies',	l.data:deleted_typographies ) }">
	<MvASSIGN NAME = "l.data:added_typography_count"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Added_Typographies',	l.data:added_typographies ) }">
	<MvASSIGN NAME = "l.data:updated_typography_count"		VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Updated_Typographies',	l.data:updated_typographies ) }">
	<MvASSIGN NAME = "l.data:deleted_button_count"			VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Deleted_Buttons',		l.data:deleted_buttons ) }">
	<MvASSIGN NAME = "l.data:added_button_count"			VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Added_Buttons',			l.data:added_buttons ) }">
	<MvASSIGN NAME = "l.data:updated_button_count"			VALUE = "{ [ g.Module_JSON ].JSON_Input_Array( 'Updated_Buttons',		l.data:updated_buttons ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text_Array( 'O', 'TypographyOrder',	l.data:typography_order,	l.data:typography_order_count ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text_Array( 'O', 'ButtonOrder',		l.data:button_order,		l.data:button_order_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Structure( 'O', 'Layout', l.data:layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Theme_Parse( l.data, l.theme ) }">
		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Have_Input_Errors() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update Theme Settings
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Theme updated' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Update_Theme( l.theme ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGB-JSN-00027', 'Theme updated on branch \'' $ g.Store:branch:name $ '\'' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Preview" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Preview_ValidatePreviewSession( l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_JSON ].JSON_Page_Load( l.page ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Theme_Preview_Response_Error() }">
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Module_Feature_PGB_UT ].PageBuilder_Lockfile_Path( l.page:id ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ JSON_Theme_Preview_LowLevel( l.page:id, l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvIF EXPR = "{ g.TemplateManager_Exception }">
			<MvIF EXPR = "{ g.TemplateManager_Exception_Code EQ 'product_not_found' }">				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00029', 'The selected product either does not exist, is inactive, or otherwise unavailable and cannot be displayed in the preview. Please select another product.' ) }">
			<MvELSEIF EXPR = "{ g.TemplateManager_Exception_Code EQ 'category_not_found' }">		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00030', 'The selected category either does not exist, is inactive, or otherwise unavailable and cannot be displayed in the preview. Please select another category.' ) }">
			<MvELSEIF EXPR = "{ g.TemplateManager_Exception_Code EQ 'invalid_payment_method' }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00031', 'The selected payment method is unavailable and cannot be displayed in the preview. Please select another payment method.' ) }">
			<MvELSE>																				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00032', 'UI Exception \'' $ g.TemplateManager_Exception_Code $ '\' has prevented the preview from displayed the requested page' ) }">
			</MvIF>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Theme_Preview_Response_Error() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Preview_ValidatePreviewSession" PARAMETERS = "previewsession var, pagebuilderpreviewsessionfragmentkey var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.PageBuilderPreviewSession_FragmentKey"	VALUE = "{ trim( g.PageBuilderPreviewSession_FragmentKey ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_ValidatePreviewSession( l.previewsession, l.user ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_DB ].PageBuilderPreviewSessionFragmentKey_Load( l.previewsession:session_id, g.PageBuilderPreviewSession_FragmentKey, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].CanI( l.user:admin, l.user:id, 'THME', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_MaintenanceMode_Bypass_Theme_Preview" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Theme_Preview_ValidatePreviewSession( l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Preview_LowLevel" PARAMETERS = "page_id, previewsession var, pagebuilderpreviewsessionfragmentkey var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Deleted_Buttons"				VALUE = "{ trim( g.Deleted_Buttons ) }">
	<MvASSIGN NAME = "g.Added_Buttons"					VALUE = "{ trim( g.Added_Buttons ) }">
	<MvASSIGN NAME = "g.Updated_Buttons"				VALUE = "{ trim( g.Updated_Buttons ) }">
	<MvASSIGN NAME = "g.Deleted_Typographies"			VALUE = "{ trim( g.Deleted_Typographies ) }">
	<MvASSIGN NAME = "g.Added_Typographies"				VALUE = "{ trim( g.Added_Typographies ) }">
	<MvASSIGN NAME = "g.Updated_Typographies"			VALUE = "{ trim( g.Updated_Typographies ) }">
	<MvASSIGN NAME = "g.TypographyOrder"				VALUE = "{ trim( g.TypographyOrder ) }">
	<MvASSIGN NAME = "g.ButtonOrder"					VALUE = "{ trim( g.ButtonOrder ) }">
	<MvASSIGN NAME = "g.Layout"							VALUE = "{ trim( g.Layout ) }">
	<MvASSIGN NAME = "g.Product_Code"					VALUE = "{ trim( g.Product_Code ) }">
	<MvASSIGN NAME = "g.Category_Code"					VALUE = "{ trim( g.Category_Code ) }">
	<MvASSIGN NAME = "g.Order_ID"						VALUE = "{ trim( g.Order_ID ) }">
	<MvASSIGN NAME = "g.PaymentMethod"					VALUE = "{ trim( g.PaymentMethod ) }">
	<MvASSIGN NAME = "g.Search"							VALUE = "{ trim( g.Search ) }">

	<MvASSIGN NAME = "l.data"							VALUE = "">

	<MvIF EXPR = "{ NOT JSON_PGB_Form_Input_Array(		'Deleted_Typographies',		l.data:deleted_typographies,	l.data:deleted_typography_count )	OR
					NOT JSON_PGB_Form_Input_Array(		'Added_Typographies',		l.data:added_typographies,		l.data:added_typography_count )		OR
					NOT JSON_PGB_Form_Input_Array(		'Updated_Typographies',		l.data:updated_typographies,	l.data:updated_typography_count )	OR
					NOT JSON_PGB_Form_Input_Array(		'Deleted_Buttons',			l.data:deleted_buttons,			l.data:deleted_button_count )		OR
					NOT JSON_PGB_Form_Input_Array(		'Added_Buttons',			l.data:added_buttons,			l.data:added_button_count )			OR
					NOT JSON_PGB_Form_Input_Array(		'Updated_Buttons',			l.data:updated_buttons,			l.data:updated_button_count )		OR
					NOT JSON_PGB_Form_Input_Array(		'TypographyOrder',			l.data:typography_order,		l.data:typography_order_count )		OR
					NOT JSON_PGB_Form_Input_Array(		'ButtonOrder',				l.data:button_order,			l.data:button_order_count )			OR
					NOT JSON_PGB_Form_Input_Structure(	'Layout',					l.data:layout ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Order_ID }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Order_Load_ID( g.Order_ID, g.Order ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Page_Load_ID( l.page_id, l.page ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00033', 'Page not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Theme_Parse( l.data, l.theme ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].PageBuilderPreview_Start( l.previewsession, l.pagebuilderpreviewsessionfragmentkey ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Preview_Theme( l.theme ) }">
	<MvEVAL EXPR = "{ [ g.Feature_Filename_PGB_UT ].PageBuilderPreview_RenderPage( l.page, l.page_rendered ) }">
	<MvEVAL EXPR = "{ [ g.Feature_Filename_PGB_UT ].PageBuilderPreview_End() }">

	<MvIF EXPR = "{ NOT l.page_rendered }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Preview_Response_Error" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Content-Type',		'text/html; charset=utf-8' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'X-XSS-Protection',	'1; mode=block' ) }">

	<!DOCTYPE html>
	<html xmlns="http://www.w3.org/1999/xhtml">
		<head>
			<title>Miva Merchant: Page Builder Preview Error</title>
			<script type="text/javascript">
				var post_data;

				if ( window.parent )
				{
					post_data			= new Object();
					post_data.command	= 'window_load_error';
					post_data.data		= new Object();

					<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Have_Input_Errors() }">	post_data.data = <MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">;
					<MvELSE>														post_data.data = <MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">;
					</MvIF>

					window.parent.postMessage( JSON.stringify( post_data ), '*' );
				}
			</script>
		</head>
		<body></body>
	</html>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse" PARAMETERS = "data var, theme var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Load_Theme( l.theme ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGB-JSN-00028', 'Theme settings not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Theme_Parse_Layout( l.data, l.theme ) }">				<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT JSON_Theme_Parse_Buttons( l.data, l.theme ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT JSON_Theme_Parse_Typographies( l.data, l.theme ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Layout" PARAMETERS = "data var, theme var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.data:layout, 'breakpoints' ) }">
		<MvASSIGN NAME = "l.theme:layout:breakpoints"		VALUE = "">
		<MvASSIGN NAME = "l.theme:layout:breakpoint_count"	VALUE = 0>

		<MvFOREACH ITERATOR = "l.input_breakpoint" ARRAY = "l.input_breakpoints" COUNT = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.data:layout, 'breakpoints', l.input_breakpoints ) }">
			<MvIF EXPR = "{ NOT JSON_Theme_Parse_Layout_Breakpoint( l.theme, l.input_breakpoint ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Layout_Breakpoint" PARAMETERS = "theme var, input_breakpoint var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.breakpoint"				VALUE = "">
	<MvASSIGN NAME = "l.breakpoint:start:unit"	VALUE = "px">
	<MvASSIGN NAME = "l.breakpoint:start:value"	VALUE = "">
	<MvASSIGN NAME = "l.breakpoint:end:unit"	VALUE = "px">
	<MvASSIGN NAME = "l.breakpoint:end:value"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_breakpoint, 'R',		'code',	l.breakpoint:code ) OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_breakpoint, 'R:100',	'name',	l.breakpoint:name ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ miva_array_search( l.theme:layout:breakpoints, 1, l.existing_breakpoint, 'strcasecmp( l.existing_breakpoint:code, l.breakpoint:code ) EQ 0' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_breakpoint, 'code', 'Breakpoint \'' $ l.existing_breakpoint:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_breakpoint, 'start' ) AND
					NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_breakpoint, 'end' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_breakpoint, '', 'At least one of start or end must be specified' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_breakpoint, 'O', 'start',	l.breakpoint:start ) OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_breakpoint, 'O', 'end',	l.breakpoint:end ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.theme:layout:breakpoint_count" VALUE = "{ miva_array_insert_var( l.theme:layout:breakpoints, l.breakpoint, -1 ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Buttons" PARAMETERS = "data var, theme var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Order of operations:
	|
	| 1. Delete buttons
	| 2. Update any existing buttons (allows unique fields to be changed prior to adding so validation doesn't fail)
	| 3. Add new buttons
	| 4. Update any added buttons
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.input_button" ARRAY = "l.data:deleted_buttons" COUNT = "{ l.data:deleted_button_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Button_Delete( l.theme, l.input_button ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_button" ARRAY = "l.data:updated_buttons" COUNT = "{ l.data:updated_button_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Button_Update( l.theme, l.input_button, 1 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_button" ARRAY = "l.data:added_buttons" COUNT = "{ l.data:added_button_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Button_Add( l.theme, l.input_button ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_button" ARRAY = "l.data:updated_buttons" COUNT = "{ l.data:updated_button_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Button_Update( l.theme, l.input_button, 0 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT JSON_Theme_Parse_Button_Update_Order( l.data, l.theme ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Button_Delete" PARAMETERS = "theme var, input_button var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_button, 'R', 'code', l.button_code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.button_index" VALUE = "{ miva_array_search( l.theme:buttons, 1, l.existing_button, 'strcasecmp( l.existing_button:code, l.button_code ) EQ 0' ) }">

	<MvIF EXPR = "{ l.button_index GT 0 }">
		<MvASSIGN NAME = "l.theme:button_count" VALUE = "{ miva_array_delete( l.theme:buttons, l.button_index, 1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Button_Add" PARAMETERS = "theme var, input_button var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.button" VARIABLE = "l.theme:buttons">
		<MvDIMENSION INDEX = "{ ++l.theme:button_count }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_button, 'R',		'code', l.button:code ) OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_button, 'R:100',	'name', l.button:name ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.existing_index" VALUE = "{ miva_array_search( l.theme:buttons, 1, l.existing_button, 'strcasecmp( l.existing_button:code, l.button:code ) EQ 0' ) }">

	<MvIF EXPR = "{ l.existing_index GT 0 AND l.existing_index NE l.theme:button_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, 'code', 'Button \'' $ l.existing_button:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'classname' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGB_UT ].Theme_Generate_Button_Classname( l.theme, l.button, l.button:classname ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, 'classname', g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_button, 'O', 'classname', l.button:classname ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].Theme_Validate_Button_ClassName( l.theme, l.button:code, l.button:classname ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, 'classname', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_button,	'R', 'styles', l.input_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_Styles( l.theme, l.input_styles, l.button:styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'hover_styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_button,	'R', 'hover_styles', l.input_hover_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_StateStyles( l.theme, l.button:styles, l.input_hover_styles, l.button:hover_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'disabled_styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_button,	'R', 'disabled_styles', l.input_disabled_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_StateStyles( l.theme, l.button:styles, l.input_disabled_styles, l.button:disabled_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'sizes' ) }">
		<MvASSIGN NAME = "l.input_size_count" VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_button, 'sizes', l.input_sizes ) }">

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_Sizes( l.theme, l.input_sizes, l.input_size_count, l.button, l.button:sizes, l.button:size_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.button:size_count EQ 0 }">
		<MvASSIGN NAME = "l.default_size"					VALUE = "">
		<MvASSIGN NAME = "l.default_size:code"				VALUE = "default">
		<MvASSIGN NAME = "l.default_size:name"				VALUE = "Default">
		<MvASSIGN NAME = "l.default_size:default"			VALUE = 1>
		<MvASSIGN NAME = "l.default_size:styles"			VALUE = "">
		<MvASSIGN NAME = "l.default_size:breakpoint_styles"	VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGB_UT ].Theme_Generate_Button_Size_Classname( l.theme, l.button, l.default_size, l.default_size:classname ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, '', g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.button:size_count" VALUE = "{ miva_array_insert_var( l.button:sizes, l.default_size, -1 ) }">
	<MvELSEIF EXPR = "{ NOT miva_array_search( l.button:sizes, 1, l.search_size, 'l.search_size:default' ) }">
		<MvREFERENCEARRAY NAME = "l.first_size" VARIABLE = "l.button:sizes">
			<MvDIMENSION INDEX = 1>
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.first_size:default" VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Button_Update" PARAMETERS = "theme var, input_button var, existing_only" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.input_button:_processed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_button, 'R', 'edit_code', l.button_code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.button_index" VALUE = "{ miva_array_search( l.theme:buttons, 1, l.search_button, 'strcasecmp( l.search_button:code, l.button_code ) EQ 0' ) }">

	<MvIF EXPR = "{ l.button_index EQ 0 }">
		<MvIF EXPR = "{ l.existing_only }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, 'edit_code', 'Button not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.input_button:_processed" VALUE = 1>

	<MvREFERENCEARRAY NAME = "l.button" VARIABLE = "l.theme:buttons">
		<MvDIMENSION INDEX = "{ l.button_index }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'code' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_button, 'O', 'code', l.new_button_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ strcasecmp( l.button:code, l.new_button_code ) NE 0 }">
			<MvIF EXPR = "{ miva_array_search( l.theme:buttons, 1, l.existing_button, 'strcasecmp( l.existing_button:code, l.new_button_code ) EQ 0' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, 'code', 'Button \'' $ l.existing_button:code $ '\' already exists' ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.button:code" VALUE = "{ l.new_button_code }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_button, 'O:100', 'name', l.button:name ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'classname' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_button, 'O', 'classname', l.button:classname ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].Theme_Validate_Button_ClassName( l.theme, l.button:code, l.button:classname ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, 'classname', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_button,	'R', 'styles', l.input_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_Styles( l.theme, l.input_styles, l.button:styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'hover_styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_button,	'R', 'hover_styles', l.input_hover_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_StateStyles( l.theme, l.button:styles, l.input_hover_styles, l.button:hover_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'disabled_styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_button,	'R', 'disabled_styles', l.input_disabled_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_StateStyles( l.theme, l.button:styles, l.input_disabled_styles, l.button:disabled_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_button, 'sizes' ) }">
		<MvASSIGN NAME = "l.input_size_count"	VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Array( l.input_button, 'sizes', l.input_sizes ) }">

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_Sizes( l.theme, l.input_sizes, l.input_size_count, l.button, l.button:sizes, l.button:size_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.button:size_count EQ 0 }">
			<MvASSIGN NAME = "l.default_size"					VALUE = "">
			<MvASSIGN NAME = "l.default_size:code"				VALUE = "default">
			<MvASSIGN NAME = "l.default_size:name"				VALUE = "Default">
			<MvASSIGN NAME = "l.default_size:default"			VALUE = 1>
			<MvASSIGN NAME = "l.default_size:styles"			VALUE = "">
			<MvASSIGN NAME = "l.default_size:breakpoint_styles"	VALUE = "">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGB_UT ].Theme_Generate_Button_Size_Classname( l.theme, l.button, l.default_size, l.default_size:classname ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_button, '', g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.button:size_count" VALUE = "{ miva_array_insert_var( l.button:sizes, l.default_size, -1 ) }">
		<MvELSEIF EXPR = "{ NOT miva_array_search( l.button:sizes, 1, l.search_size, 'l.search_size:default' ) }">
			<MvREFERENCEARRAY NAME = "l.first_size" VARIABLE = "l.button:sizes">
				<MvDIMENSION INDEX = 1>
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.first_size:default" VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Button_Update_Order" PARAMETERS = "data var, theme var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data:button_order_count }">
		<MvASSIGN NAME = "l.temp_buttons" VALUE = "">

		<MvFOREACH ITERATOR = "l.button_code" ARRAY = "l.data:button_order" COUNT = "{ l.data:button_order_count }">
			<MvASSIGN NAME = "l.index" VALUE = "{ miva_array_search( l.theme:buttons, 1, l.existing_button, 'strcasecmp( l.existing_button:code, l.button_code ) EQ 0' ) }">

			<MvIF EXPR = "{ l.index }">
				<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.temp_buttons, l.existing_button, -1 ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_delete( l.theme:buttons, l.index, 1 ) }">
			</MvIF>
		</MvFOREACH>

		<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_merge_ref( l.theme:buttons, 1, miva_array_elements( l.theme:buttons ), l.temp_buttons, -1 ) }">
		<MvASSIGN NAME = "l.theme:buttons"	VALUE = "{ l.temp_buttons }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Typographies" PARAMETERS = "data var, theme var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Order of operations:
	|
	| 1. Delete typographies
	| 2. Update any existing typographies (allows unique fields to be changed prior to adding so validation doesn't fail)
	| 3. Add new typographies
	| 4. Update any added typographies
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.input_typography" ARRAY = "l.data:deleted_typographies" COUNT = "{ l.data:deleted_typography_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Typography_Delete( l.theme, l.input_typography ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_typography" ARRAY = "l.data:updated_typographies" COUNT = "{ l.data:updated_typography_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Typography_Update( l.theme, l.input_typography, 1 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_typography" ARRAY = "l.data:added_typographies" COUNT = "{ l.data:added_typography_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Typography_Add( l.theme, l.input_typography ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.input_typography" ARRAY = "l.data:updated_typographies" COUNT = "{ l.data:updated_typography_count }">
		<MvIF EXPR = "{ NOT JSON_Theme_Parse_Typography_Update( l.theme, l.input_typography, 0 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT JSON_Theme_Parse_Typography_Update_Order( l.data, l.theme ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Typography_Delete" PARAMETERS = "theme var, input_typography var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_typography, 'R', 'code', l.typography_code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.typography_index" VALUE = "{ miva_array_search( l.theme:typographies, 1, l.existing_typography, 'strcasecmp( l.existing_typography:code, l.typography_code ) EQ 0' ) }">

	<MvIF EXPR = "{ l.typography_index GT 0 }">
		<MvASSIGN NAME = "l.theme:typography_count" VALUE = "{ miva_array_delete( l.theme:typographies, l.typography_index, 1 ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Typography_Add" PARAMETERS = "theme var, input_typography var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.typography" VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_typography, 'R',		'code', l.typography:code )	OR
					NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_typography, 'R:100',	'name', l.typography:name )	OR
					NOT [ g.Module_JSON ].JSON_Input_Element_List( l.input_typography, 'R',		'type', l.typography:type, 'heading,paragraph', 'heading,paragraph' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ miva_array_search( l.theme:typographies, 1, l.existing_typography, 'strcasecmp( l.existing_typography:code, l.typography:code ) EQ 0' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_typography, 'code', 'Typography \'' $ l.existing_typography:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_typography, 'classname' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGB_UT ].Theme_Generate_Typography_Classname( l.theme, l.typography, l.typography:classname ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_typography, 'classname', g.Error_Message ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_typography, 'O', 'classname', l.typography:classname ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].Theme_Validate_Typography_ClassName( l.theme, l.typography:code, l.typography:classname ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_typography, 'classname', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_typography, 'styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_typography,	'R', 'styles', l.input_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeTypography_Styles( l.theme, l.input_styles, l.typography:type, l.typography:styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_typography, 'breakpoint_styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_typography,	'R', 'breakpoint_styles', l.input_breakpoint_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeTypography_BreakpointStyles( l.theme, l.input_breakpoint_styles, l.typography:breakpoint_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.theme:typography_count" VALUE = "{ miva_array_insert_var( l.theme:typographies, l.typography, -1 ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Typography_Update" PARAMETERS = "theme var, input_typography var, existing_only" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.input_typography:_processed }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_typography, 'R', 'edit_code', l.typography_code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.typography_index" VALUE = "{ miva_array_search( l.theme:typographies, 1, l.search_typography, 'strcasecmp( l.search_typography:code, l.typography_code ) EQ 0' ) }">

	<MvIF EXPR = "{ l.typography_index EQ 0 }">
		<MvIF EXPR = "{ l.existing_only }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_typography, 'edit_code', 'Typography not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.input_typography:_processed" VALUE = 1>

	<MvREFERENCEARRAY NAME = "l.typography" VARIABLE = "l.theme:typographies">
		<MvDIMENSION INDEX = "{ l.typography_index }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_typography, 'code' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code( l.input_typography, 'O', 'code', l.new_typography_code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ strcasecmp( l.typography:code, l.new_typography_code ) NE 0 }">
			<MvIF EXPR = "{ miva_array_search( l.theme:typographies, 1, l.existing_typography, 'strcasecmp( l.existing_typography:code, l.new_typography_code ) EQ 0' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_typography, 'code', 'Typography \'' $ l.existing_typography:code $ '\' already exists' ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.typography:code" VALUE = "{ l.new_typography_code }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_typography, 'O:100',	'name', l.typography:name )	OR
					NOT [ g.Module_JSON ].JSON_Input_Element_List( l.input_typography, 'O',		'type', l.typography:type, 'heading,paragraph', 'heading,paragraph' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_typography, 'classname' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_typography, 'O', 'classname', l.typography:classname ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].Theme_Validate_Typography_ClassName( l.theme, l.typography:code, l.typography:classname ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_typography, 'classname', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_typography, 'styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_typography,	'R', 'styles', l.input_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeTypography_Styles( l.theme, l.input_styles, l.typography:type, l.typography:styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_typography, 'breakpoint_styles' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_typography,	'R', 'breakpoint_styles', l.input_breakpoint_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeTypography_BreakpointStyles( l.theme, l.input_breakpoint_styles, l.typography:breakpoint_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_Typography_Update_Order" PARAMETERS = "data var, theme var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data:typography_order_count }">
		<MvASSIGN NAME = "l.temp_typographies" VALUE = "">

		<MvFOREACH ITERATOR = "l.typography_code" ARRAY = "l.data:typography_order" COUNT = "{ l.data:typography_order_count }">
			<MvASSIGN NAME = "l.index" VALUE = "{ miva_array_search( l.theme:typographies, 1, l.existing_typography, 'strcasecmp( l.existing_typography:code, l.typography_code ) EQ 0' ) }">

			<MvIF EXPR = "{ l.index GT 0 }">
				<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_insert_var( l.temp_typographies, l.existing_typography, -1 ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ miva_array_delete( l.theme:typographies, l.index, 1 ) }">
			</MvIF>
		</MvFOREACH>

		<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_merge_ref( l.theme:typographies, 1, miva_array_elements( l.theme:typographies ), l.temp_typographies, -1 ) }">
		<MvASSIGN NAME = "l.theme:typographies"	VALUE = "{ l.temp_typographies }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeButton_Styles" PARAMETERS = "theme var, input_styles var, styles var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Grouped Styles
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_styles, 'border_width' ) }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'R', 'border_width', l.border_width ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.styles:border_top_width"			VALUE = "{ l.border_width }">
		<MvASSIGN NAME = "l.styles:border_right_width"			VALUE = "{ l.border_width }">
		<MvASSIGN NAME = "l.styles:border_bottom_width"			VALUE = "{ l.border_width }">
		<MvASSIGN NAME = "l.styles:border_left_width"			VALUE = "{ l.border_width }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_styles, 'border_radius' ) }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'R', 'border_radius', l.border_radius ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.styles:border_top_left_radius"		VALUE = "{ l.border_radius }">
		<MvASSIGN NAME = "l.styles:border_top_right_radius"		VALUE = "{ l.border_radius }">
		<MvASSIGN NAME = "l.styles:border_bottom_right_radius"	VALUE = "{ l.border_radius }">
		<MvASSIGN NAME = "l.styles:border_bottom_left_radius"	VALUE = "{ l.border_radius }">
	</MvIF>

	<MvCOMMENT>
	|
	| Individual Styles
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_Text(			l.input_styles, 'o', 'color',						l.styles:color )													OR
					NOT JSON_Theme_Input_Element_Text(			l.input_styles, 'o', 'background_color',			l.styles:background_color )											OR
					NOT JSON_Theme_Input_Element_Font(			l.input_styles, 'o', 'font',						l.styles:font )														OR
					NOT JSON_Theme_Input_Element_List(			l.input_styles, 'o', 'text_transform',				l.styles:text_transform,	'none,uppercase,lowercase,capitalize',
																																				'none,uppercase,lowercase,capitalize' )	OR
					NOT JSON_Theme_Input_Element_List(			l.input_styles, 'o', 'overflow_wrap',				l.styles:overflow_wrap,		'normal,break-word,anywhere',
																																				'normal,break-word,anywhere' )			OR
					NOT JSON_Theme_Input_Element_Boolean(		l.input_styles, 'o', 'border_enabled',				l.styles:border_enabled )											OR
					NOT JSON_Theme_Input_Element_Boolean(		l.input_styles, 'o', 'box_shadow_enabled',			l.styles:box_shadow_enabled )										OR
					NOT JSON_Theme_Input_Element_Boolean(		l.input_styles, 'o', 'text_underline_enabled',		l.styles:text_underline_enabled )									OR
					NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_top_left_radius',		l.styles:border_top_left_radius )									OR
					NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_top_right_radius',		l.styles:border_top_right_radius )									OR
					NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_bottom_right_radius',	l.styles:border_bottom_right_radius )								OR
					NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_bottom_left_radius',	l.styles:border_bottom_left_radius ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.styles:border_enabled:value }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_List(			l.input_styles, 'o', 'border_style',				l.styles:border_style,		'dotted,dashed,solid',
																																					'dotted,dashed,solid' )	OR
						NOT JSON_Theme_Input_Element_Text(			l.input_styles, 'o', 'border_color',				l.styles:border_color )								OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_top_width',			l.styles:border_top_width )							OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_right_width',			l.styles:border_right_width )						OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_bottom_width',			l.styles:border_bottom_width )						OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'border_left_width',			l.styles:border_left_width ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.styles:box_shadow_enabled:value }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_List(			l.input_styles, 'o', 'box_shadow_inset',			l.styles:box_shadow_inset,	',inset',
																																					',inset' )	OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'box_shadow_offset_x',			l.styles:box_shadow_offset_x )			OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'box_shadow_offset_y',			l.styles:box_shadow_offset_y )			OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'box_shadow_blur',				l.styles:box_shadow_blur )				OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'box_shadow_spread',			l.styles:box_shadow_spread )			OR
						NOT JSON_Theme_Input_Element_Text(			l.input_styles, 'o', 'box_shadow_color',			l.styles:box_shadow_color ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.styles:text_underline_enabled:value }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'text_underline_thickness',	l.styles:text_underline_thickness ) OR
						NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'text_underline_offset',		l.styles:text_underline_offset ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeButton_StateStyles" PARAMETERS = "theme var, styles var, input_state_styles var, state_styles var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_Text(		l.input_state_styles, 'o', 'color',						l.state_styles:color )				OR
					NOT JSON_Theme_Input_Element_Text(		l.input_state_styles, 'o', 'background_color',			l.state_styles:background_color )	OR
					NOT JSON_Theme_Input_Element_Boolean(	l.input_state_styles, 'o', 'box_shadow_enabled',		l.state_styles:box_shadow_enabled )	OR
					NOT JSON_Theme_Input_Element_Boolean(	l.input_state_styles, 'o', 'text_underline_enabled',	l.state_styles:text_underline_enabled ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.styles:border_enabled:value }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_Text( l.input_state_styles, 'o', 'border_color', l.state_styles:border_color ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.state_styles:box_shadow_enabled:value }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_List(			l.input_state_styles, 'o', 'box_shadow_inset',		l.state_styles:box_shadow_inset,	',inset',
																																							',inset' )	OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_state_styles, 'o', 'box_shadow_offset_x',	l.state_styles:box_shadow_offset_x )			OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_state_styles, 'o', 'box_shadow_offset_y',	l.state_styles:box_shadow_offset_y )			OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_state_styles, 'o', 'box_shadow_blur',		l.state_styles:box_shadow_blur )				OR
						NOT JSON_Theme_Input_Element_LengthUnit(	l.input_state_styles, 'o', 'box_shadow_spread',		l.state_styles:box_shadow_spread )				OR
						NOT JSON_Theme_Input_Element_Text(			l.input_state_styles, 'o', 'box_shadow_color',		l.state_styles:box_shadow_color ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.state_styles:text_underline_enabled:value }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_state_styles, 'o', 'text_underline_thickness',	l.state_styles:text_underline_thickness ) OR
						NOT JSON_Theme_Input_Element_LengthUnit( l.input_state_styles, 'o', 'text_underline_offset',	l.state_styles:text_underline_offset ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeButton_Sizes" PARAMETERS = "theme var, input_sizes var, input_size_count, button var, sizes var, size_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.sizes"		VALUE = "">
	<MvASSIGN NAME = "l.size_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.input_size" ARRAY = "l.input_sizes" COUNT = "{ l.input_size_count }">
		<MvASSIGN NAME = "l.size"			VALUE = "">
		<MvASSIGN NAME = "l.size:default"	VALUE = 0>
		<MvASSIGN NAME = "l.size:classname"	VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Code(		l.input_size, 'R',		'code',		l.size:code ) OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Text(		l.input_size, 'R:100',	'name',		l.size:name ) OR
						NOT [ g.Module_JSON ].JSON_Input_Element_Boolean(	l.input_size, 'O',		'default',	l.size:default ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ miva_array_search( l.sizes, 1, l.existing_size, 'strcasecmp( l.existing_size:code, l.size:code ) EQ 0' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_size, 'code', 'Size \'' $ l.existing_size:code $ '\' already exists' ) }">
		</MvIF>

		<MvIF EXPR = "{ l.size:default }">
			<MvIF EXPR = "{ miva_array_search( l.sizes, 1, l.existing_size, 'l.existing_size:default' ) }">
				<MvASSIGN NAME = "l.existing_size:default" VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_size, 'classname' ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGB_UT ].Theme_Generate_Button_Size_Classname( l.theme, l.button, l.size, l.size:classname ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_size, 'classname', g.Error_Message ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.input_size, 'O', 'classname', l.size:classname ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGB_UT ].Theme_Validate_Button_Size_ClassName( l.theme, l.button:code, l.size:code, l.size:classname ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.input_size, 'classname', g.Validation_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_size, 'styles' ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_size, 'R', 'styles', l.input_styles ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_Size_Styles( l.theme, l.input_styles, l.size:styles ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_size, 'breakpoint_styles' ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_size, 'R', 'breakpoint_styles', l.input_breakpoint_styles ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_Size_BreakpointStyles( l.theme, l.input_breakpoint_styles, l.size:breakpoint_styles ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.size_count" VALUE = "{ miva_array_insert_var( l.sizes, l.size, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeButton_Size_Styles" PARAMETERS = "theme var, input_styles var, styles var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Grouped Styles
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_styles, 'padding' ) }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'R', 'padding', l.padding ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.styles:padding_top"		VALUE = "{ l.padding }">
		<MvASSIGN NAME = "l.styles:padding_right"	VALUE = "{ l.padding }">
		<MvASSIGN NAME = "l.styles:padding_bottom"	VALUE = "{ l.padding }">
		<MvASSIGN NAME = "l.styles:padding_left"	VALUE = "{ l.padding }">
	</MvIF>

	<MvCOMMENT>
	|
	| Individual Styles
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'font_size',		l.styles:font_size )		OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'line_height',	l.styles:line_height )		OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'letter_spacing',	l.styles:letter_spacing )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'padding_top',	l.styles:padding_top )		OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'padding_right',	l.styles:padding_right )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'padding_bottom',	l.styles:padding_bottom )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'padding_left',	l.styles:padding_left ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeButton_Size_BreakpointStyles" PARAMETERS = "theme var, input_breakpoint_styles var, breakpoint_styles var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.breakpoint_pos" ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_breakpoint_styles, l.breakpoint:code ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_breakpoint_styles, 'R', l.breakpoint:code, l.input_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.styles" VARIABLE = "l.breakpoint_styles">
			<MvMEMBER NAME = "{ l.breakpoint:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeButton_Size_Styles( l.theme, l.input_styles, l.styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeTypography_Styles" PARAMETERS = "theme var, input_styles var, type, styles var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_Text(			l.input_styles, 'o', 'color',			l.styles:color )													OR
					NOT JSON_Theme_Input_Element_Font(			l.input_styles, 'o', 'font',			l.styles:font )														OR
					NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'font_size',		l.styles:font_size )												OR
					NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'line_height',		l.styles:line_height )												OR
					NOT JSON_Theme_Input_Element_LengthUnit(	l.input_styles, 'o', 'letter_spacing',	l.styles:letter_spacing )											OR
					NOT JSON_Theme_Input_Element_List(			l.input_styles, 'o', 'text_transform',	l.styles:text_transform,	'none,uppercase,lowercase,capitalize',
																																	'none,uppercase,lowercase,capitalize' )	OR
					NOT JSON_Theme_Input_Element_List(			l.input_styles, 'o', 'overflow_wrap',	l.styles:overflow_wrap,		'normal,break-word,anywhere',
																																	'normal,break-word,anywhere' )			OR
					NOT JSON_Theme_Input_Element_List(			l.input_styles, 'o', 'white_space',		l.styles:white_space,		'normal,nowrap,pre,prewrap,preline',
																																	'normal,nowrap,pre,prewrap,preline' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.type EQ 'paragraph' }">
		<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'paragraph_spacing',	l.styles:paragraph_spacing ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeTypography_BreakpointStyles" PARAMETERS = "theme var, input_breakpoint_styles var, breakpoint_styles var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.breakpoint_pos" ITERATOR = "l.breakpoint" ARRAY = "l.theme:layout:breakpoints" COUNT = "{ l.theme:layout:breakpoint_count }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.input_breakpoint_styles, l.breakpoint:code ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.input_breakpoint_styles, 'R', l.breakpoint:code, l.input_styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.styles" VARIABLE = "l.breakpoint_styles">
			<MvMEMBER NAME = "{ l.breakpoint:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT JSON_Theme_Parse_ThemeTypography_BreakpointStyles_Styles( l.theme, l.input_styles, l.styles ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Parse_ThemeTypography_BreakpointStyles_Styles" PARAMETERS = "theme var, input_styles var, styles var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'font_size',		l.styles:font_size )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'line_height',	l.styles:line_height )	OR
					NOT JSON_Theme_Input_Element_LengthUnit( l.input_styles, 'o', 'letter_spacing',	l.styles:letter_spacing ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Input_Element_Boolean" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element, l.param ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element, 'R', l.param, l.element_value ) }">					<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Boolean( l.element_value, l.required, 'value', l.output:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Input_Element_Text" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element, l.param ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element, 'R', l.param, l.element_value ) }">				<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_value, l.required, 'value', l.output:value ) }">	<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Input_Element_List" PARAMETERS = "element var, required, param, output var, param_values, result_values" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Element_Exists( l.element, l.param ) }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element, 'R', l.param, l.element_value ) }">												<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_value, l.required, 'value', l.output:value, l.param_values, l.result_values ) }">	<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Input_Element_LengthUnit" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element, l.required, l.param, l.element_lengthunit ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ISNULL l.element_lengthunit }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Theme_Input_Element_LengthUnit_LowLevel( l.element_lengthunit, l.output ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Input_Element_LengthUnit_LowLevel" PARAMETERS = "element_lengthunit var, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_lengthunit, 'unit' ) }">
		<MvASSIGN NAME = "l.output:unit" VALUE = "px">
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_lengthunit, 'R', 'unit', l.output:unit, 'px,pt,em,rem,vw,vh,%', 'px,pt,em,rem,vw,vh,%' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Retrieve( l.element_lengthunit, 'value', l.output:value ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.output:value AND miva_decimal_precision( l.output:value ) EQ -1 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.element_lengthunit, 'value', 'Please specify a number' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Input_Element_Font" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Structure(	l.element, l.required, l.param, l.element_font ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ISNULL l.element_font }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Theme_Input_Element_Font_LowLevel( l.element_font, l.required, l.output ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Theme_Input_Element_Font_LowLevel" PARAMETERS = "element_font var, required, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Text( l.element_font, l.required, 'code', l.output:code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_font, 'weight' ) }">
		<MvASSIGN NAME = "l.output:weight" VALUE = "400">
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_font, 'R', 'weight', l.output:weight, '100,200,300,400,500,600,700,800,900', '100,200,300,400,500,600,700,800,900' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Exists( l.element_font, 'style' ) }">
		<MvASSIGN NAME = "l.output:style" VALUE = "normal">
	<MvELSEIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_List( l.element_font, 'R', 'style', l.output:style, 'normal,italic', 'normal,italic' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.output:code }"> 
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Font_Load_Code( l.output:code, l.loaded_font ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.element_font, 'code', 'Font not found' ) }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.font_weight_available" VARIABLE = "l.loaded_font:weights">
			<MvMEMBER NAME = "{ l.output:weight }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.font_style_available" VARIABLE = "l.loaded_font:styles">
			<MvMEMBER NAME = "{ l.output:style }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT l.font_weight_available }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.element_font, 'weight', 'Weight not available for font \'' $ l.loaded_font:code $ '\'' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.font_style_available }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Element_Error( l.element_font, 'style', 'Style not available for font \'' $ l.loaded_font:code $ '\'' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_PGB_Form_Input_Array" PARAMETERS = "param, output var, output_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output"				VALUE = "">
	<MvASSIGN NAME = "l.output_count"		VALUE = 0>

	<MvIF EXPR = "{ NOT miva_array_search( g.Session:parameters, 1, l.existing_param, 'strcasecmp( l.existing_param, l.param ) EQ 0' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvREFERENCE NAME = "l.encoded_json"	VARIABLE = "{ 'g.' $ l.param }">

	<MvIF EXPR = "{ ISNULL l.encoded_json }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT miva_json_decode( l.encoded_json, l.array ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Error( l.param, miva_json_decode_last_error() ) }">
	</MvIF>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.array_element" ARRAY = "l.array">
		<MvREFERENCEARRAY NAME = "l.element" VARIABLE = "l.output">
			<MvDIMENSION INDEX = "{ ++l.output_count }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.element:prefix"	VALUE = "{ l.param $ '[' $ l.pos $ ']' }">

		<MvREFERENCEARRAY NAME = "l.element:var" VARIABLE = "l.array">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PGB_Form_Input_Structure" PARAMETERS = "param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT miva_array_search( g.Session:parameters, 1, l.existing_param, 'strcasecmp( l.existing_param, l.param ) EQ 0' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvREFERENCE NAME = "l.encoded_json" VARIABLE = "{ 'g.' $ l.param }">

	<MvIF EXPR = "{ ISNULL l.encoded_json }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT miva_json_decode( l.encoded_json, l.structure ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Input_Error( l.param, miva_json_decode_last_error() ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output"			VALUE = "">
	<MvASSIGN NAME = "l.output:prefix"	VALUE = "{ l.param }">
	<MvREFERENCE NAME = "l.output:var"	VARIABLE = "l.structure">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

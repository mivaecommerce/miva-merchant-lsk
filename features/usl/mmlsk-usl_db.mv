<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2019 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-USL-DTB-
| Next Error Code: 39   
|
</MvCOMMENT>

<MvFUNCTION NAME = "Store_Create" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'Upsell
						  (
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							dmode		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 )			$ ',
							req_amount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							rprdcount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							pmode		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 1 )			$ ',
							price		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							score		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'Upsell_1 ON ' $ g.Store_Table_Prefix $ 'Upsell ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'Upsell_2 ON ' $ g.Store_Table_Prefix $ 'Upsell ( score )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'UpsellXProduct
						  (
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
							req_prod	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'UpsellXProduct_1 ON ' $ g.Store_Table_Prefix $ 'UpsellXProduct ( product_id, req_prod )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $  g.Store_Table_Prefix $ 'UpsellOptions
						  (
							prod_shown	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
							prod_sell	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.upselloptions:prod_shown" 	VALUE = 1>
	<MvASSIGN NAME = "l.upselloptions:prod_sell" 	VALUE = 1>

	<MvIF EXPR = "{ NOT UpsellOptions_Insert( l.upselloptions ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "USL_Store_Delete" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'Upsell' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'UpsellXProduct' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'UpsellOptions' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Create_Data_Files" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].DomainPrivilege_Insert( 'UPSL', 'Upsold Products' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_Upsell
|
</MvCOMMENT>

<MvFUNCTION NAME = "Upsell_Read" PARAMETERS = "upsell var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.upsell:product_id"	VALUE = "{ Upsell.d.product_id }">
	<MvASSIGN NAME = "l.upsell:dmode"		VALUE = "{ Upsell.d.dmode }">
	<MvASSIGN NAME = "l.upsell:req_amount"	VALUE = "{ Upsell.d.req_amount }">
	<MvASSIGN NAME = "l.upsell:rprdcount"	VALUE = "{ Upsell.d.rprdcount }">
	<MvASSIGN NAME = "l.upsell:pmode"		VALUE = "{ Upsell.d.pmode }">
	<MvASSIGN NAME = "l.upsell:price"		VALUE = "{ Upsell.d.price }">
	<MvASSIGN NAME = "l.upsell:score"		VALUE = "{ Upsell.d.score }">
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Product_Read" PARAMETERS = "product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product:usl_dmode"			VALUE = "{ Products.d.usl_dmode }">
	<MvASSIGN NAME = "l.product:usl_req_amount"		VALUE = "{ Products.d.usl_req_amount }">
	<MvASSIGN NAME = "l.product:usl_rprdcount"		VALUE = "{ Products.d.usl_rprdcount }">
	<MvASSIGN NAME = "l.product:usl_pmode"			VALUE = "{ Products.d.usl_pmode }">
	<MvASSIGN NAME = "l.product:usl_price"			VALUE = "{ Products.d.usl_price }">
	<MvASSIGN NAME = "l.product:usl_score"			VALUE = "{ Products.d.usl_score }">

	<MvASSIGN NAME = "l.product:upsell:dmode"		VALUE = "{ Products.d.usl_dmode }">
	<MvASSIGN NAME = "l.product:upsell:req_amount"	VALUE = "{ Products.d.usl_req_amount }">
	<MvASSIGN NAME = "l.product:upsell:rprdcount"	VALUE = "{ Products.d.usl_rprdcount }">
	<MvASSIGN NAME = "l.product:upsell:pmode"		VALUE = "{ Products.d.usl_pmode }">
	<MvASSIGN NAME = "l.product:upsell:price" 		VALUE = "{ Products.d.usl_price }">
	<MvASSIGN NAME = "l.product:upsell:score" 		VALUE = "{ Products.d.usl_score }">
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Insert" PARAMETERS = "upsell var" STANDARDOUTPUTLEVEL = "">
	<MvTRANSACT NAME = "Merchant">

	<MvIF EXPR = "{ NOT Upsell_Insert_LowLevel( l.upsell ) OR
				    NOT Upsell_Reset_Score() }">
		<MvROLLBACK NAME = "Merchant">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMIT NAME = "Merchant">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Insert_LowLevel" PARAMETERS = "upsell var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.upsell:rprdcount }">
		<MvASSIGN NAME = "l.upsell:rprdcount"	VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'Upsell
					      ( product_id, dmode, req_amount, rprdcount, pmode, price, score )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.upsell:product_id, l.upsell:dmode, l.upsell:req_amount, l.upsell:rprdcount, l.upsell:pmode, l.upsell:price,
					   l.upsell:score">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Reset_Score" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'Upsell
					      SET
							score = 0' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Update_Product" PARAMETERS = "upsell var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'Upsell
					      SET
							dmode		= ?,
							req_amount	= ?,
							pmode		= ?,
							price		= ?,
							score		= ?
					      WHERE
						    product_id	= ?' }"
			 FIELDS	= "l.upsell:dmode, l.upsell:req_amount, l.upsell:pmode, l.upsell:price, l.upsell:score,
					   l.upsell:product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Increment_Score" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'Upsell
						  SET
							score		= score + 1
						  WHERE
							product_id	= ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Increment_RequiredProductCount" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'Upsell
						  SET
							rprdcount	= rprdcount + 1
						  WHERE
							product_id	= ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00037', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Decrement_RequiredProductCount" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $
							g.Store_Table_Prefix $ 'Upsell
						  SET
							rprdcount	= rprdcount - 1
						  WHERE
							product_id	= ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00038', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellProduct_Delete_ID" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant"
			QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'UpsellXProduct WHERE product_id = ?' }"
			FIELDS = "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00025', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'Upsell WHERE product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00026', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Delete_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant"
			QUERY = "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'UpsellXProduct WHERE product_id = ? OR req_prod = ?' }"
			FIELDS = "l.product_id, l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'Upsell WHERE product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Load_Product" PARAMETERS = "product_id, upsell var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Upsell"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'Upsell WHERE product_id = ?' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ Upsell.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Upsell">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-USL-DTB-00028' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Upsell_Read( l.upsell ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Upsell">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellList_Load" PARAMETERS = "upsell var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Upsell"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'Upsell' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00014', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.upsell_count"	VALUE = 0>
	<MvWHILE EXPR = "{ NOT Upsell.d.EOF }">
		<MvASSIGN NAME = "l.upsell_count" VALUE = "{ l.upsell_count + 1 }">
		<MvEVAL EXPR = "{ Upsell_Read( l.upsell[ l.upsell_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "Upsell">
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Upsell">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-USL-DTB-00029', l.upsell_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellList_Load_Offset" PARAMETERS = "offset, search, searchable_fields, max_rec, newoffset var, upsell var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN	NAME = "l.query"
				VALUE = "{ 'SELECT
								u.*
							FROM ' $
								g.Store_Table_Prefix $ 'Upsell u, ' $
								g.Store_Table_Prefix $ 'Products p
						    WHERE
								p.id = u.product_id' }">
	<MvIF EXPR = "{ len( l.search ) }">
		<MvASSIGN NAME = "l.query"	VALUE = "{ l.query $ ' AND ( ' $ [ g.Module_Library_DB ].SQL_Search_Clause( l.search, 'u', l.searchable_fields, l.fields ) $ ' OR ' $ 
																     [ g.Module_Library_DB ].SQL_Search_Clause( l.search, 'p', 'code', l.fields ) $ ' )' }">
	</MvIF>

	<MvASSIGN NAME = "l.query"	VALUE = "{ l.query $ ' ORDER BY u.product_id' }">

	<MvIF EXPR = "{ l.max_rec EQ 0 }">	<MvASSIGN NAME = "l.limit" VALUE = 0>
	<MvELSE>							<MvASSIGN NAME = "l.limit" VALUE = "{ l.max_rec + 1 }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Upsell',
																			 l.query, l.fields,
																			 l.offset, l.limit ) }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00015', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.upsell_count" VALUE = 0>
	<MvWHILE EXPR = "{ ( NOT Upsell.d.EOF ) AND ( ( l.max_rec EQ 0 ) OR ( l.upsell_count LT l.max_rec ) ) }">
		<MvASSIGN NAME = "l.upsell_count" VALUE = "{ l.upsell_count + 1 }">
		<MvEVAL EXPR = "{ Upsell_Read( l.upsell[ l.upsell_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "Upsell">
	</MvWHILE>

	<MvIF EXPR = "{ Upsell.d.EOF }">
		<MvASSIGN NAME = "l.newoffset"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.newoffset"	VALUE = "{ l.offset + l.upsell_count }">
	</MvIF>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Upsell">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-USL-DTB-00030', l.upsell_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Upsell_Load_Eligible_ProductList" PARAMETERS = "upselloptions var, eligible_product var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00036', 'Upsell_Load_Eligible_ProductList is deprecated.  Use Runtime_UpsoldProductList_Load_Basket_Eligible instead.' ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_UpsellXProduct
|
</MvCOMMENT>

<MvFUNCTION NAME = "UpsellXProduct_Read" PARAMETERS = "upsellxproduct var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.upsellxproduct:product_id" 	VALUE = "{ UpsellXProduct.d.product_id }">
	<MvASSIGN NAME = "l.upsellxproduct:req_prod" 	VALUE = "{ UpsellXProduct.d.req_prod }">
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellXProduct_Insert" PARAMETERS = "upsellxproduct var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT UpsellXProduct_Insert_LowLevel( l.upsellxproduct:product_id, l.upsellxproduct:req_prod ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Upsell_Increment_RequiredProductCount( l.upsellxproduct:product_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellXProduct_Insert_LowLevel" PARAMETERS = "product_id, req_prod" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'UpsellXProduct ( product_id, req_prod )
						  VALUES ( ?, ? )' }"
        	 FIELDS	= "l.product_id, l.req_prod">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00016', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellXProduct_Load_Basket" PARAMETERS = "basket_id, product_id, basketitem var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Library_DB ].Basket_ID_Is_Provisional( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-USL-DTB-00035', 0 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'BasketItems',
																			 'SELECT
																				*
																			  FROM
																				' $ g.Store_Table_Prefix $ 'UpsellXProduct usl_prod,
																				' $ g.Store_Table_Prefix $ 'BasketItems bask_itm
																			  WHERE
																				bask_itm.basket_id = ? AND
																				usl_prod.product_id = ? AND
																				usl_prod.req_prod = bask_itm.product_id',
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.basket_id ) $ ',' $
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.product_id ),
																			 0, 1 ) }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00017', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ BasketItems.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-USL-DTB-00031' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].BasketItem_Read( l.basketitem ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BasketItems">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellXProduct_Load" PARAMETERS = "product_id, req_prod, upsellxprod var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "UpsellXProduct"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'UpsellXProduct WHERE product_id = ? AND req_prod = ?' }"
				FIELDS	= "l.product_id, l.req_prod">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00018', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ UpsellXProduct.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "UpsellXProduct">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-USL-DTB-00032' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ UpsellXProduct_Read( l.upsellxprod ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "UpsellXProduct">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellXProduct_Delete" PARAMETERS = "product_id, req_prod" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT UpsellXProduct_Delete_LowLevel( l.product_id, l.req_prod ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Upsell_Decrement_RequiredProductCount( l.product_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellXProduct_Delete_LowLevel" PARAMETERS = "product_id, req_prod" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'UpsellXProduct WHERE product_id = ? AND req_prod = ?' }"
			FIELDS	= "l.product_id, l.req_prod">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00019', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellXProductList_Load_Product" PARAMETERS = "product_id, upsellxprod VAR" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "UpsellXProduct"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'UpsellXProduct WHERE product_id = ?' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{  [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00020', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count"	VALUE = 0>
	<MvWHILE EXPR = "{ NOT UpsellXProduct.d.EOF }">
		<MvASSIGN NAME = "l.product_count" VALUE = "{ l.product_count + 1 }">
		<MvEVAL EXPR = "{ UpsellXProduct_Read( l.upsellxprod[ l.product_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "UpsellXProduct">
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "UpsellXProduct">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-USL-DTB-00033', l.product_count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_UpsellOptions
|
</MvCOMMENT>

<MvFUNCTION NAME = "UpsellOptions_Read" PARAMETERS = "upselloptions var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.upselloptions:prod_shown"	VALUE = "{ UpsellOptions.d.prod_shown }">
	<MvASSIGN NAME = "l.upselloptions:prod_sell"	VALUE = "{ UpsellOptions.d.prod_sell }">
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellOptions_Insert" PARAMETERS = "upselloptions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'UpsellOptions
					      ( prod_shown, prod_sell )
						  VALUES
						  ( ?, ? )' }"
			 FIELDS	= "l.upselloptions:prod_shown, l.upselloptions:prod_sell">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00021', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellOptions_Update" PARAMETERS = "upselloptions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'UpsellOptions
					      SET
							prod_shown	= ?,
							prod_sell	= ?' }"
			 FIELDS	= "l.upselloptions:prod_shown, l.upselloptions:prod_sell">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00022', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellOptions_Load_Cached" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:upselloptions_load_cached">

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ UpsellOptions_Load( l.cache:settings ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
            <MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings"						VALUE = "{ l.cache:settings }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "UpsellOptions_Load" PARAMETERS = "upselloptions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "UpsellOptions"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'UpsellOptions' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00023', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ UpsellOptions_Read( l.upselloptions ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "UpsellOptions">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| Runtime functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Runtime_UpsoldProductList_Load" PARAMETERS = "products var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "Products"
				QUERY	= "{ 'SELECT
								prod.*,
								usl.dmode		AS usl_dmode,
								usl.req_amount	AS usl_req_amount,
								usl.rprdcount	AS usl_rprdcount,
								usl.pmode		AS usl_pmode,
								usl.price		AS usl_price,
								usl.score		AS usl_score,
								ipc.inventory	AS ipc_inventory,
								ips.active		AS ips_active,
								ips.in_long		AS ips_in_long,
								ips.in_short	AS ips_in_short,
								ips.low_level	AS ips_low_level,
								ips.low_long	AS ips_low_long,
								ips.low_lvl_d	AS ips_low_lvl_d,
								ips.low_short	AS ips_low_short,
								ips.low_track	AS ips_low_track,
								ips.out_level	AS ips_out_level,
								ips.out_long	AS ips_out_long,
								ips.out_lvl_d	AS ips_out_lvl_d,
								ips.out_short	AS ips_out_short,
								ips.out_track	AS ips_out_track,
								iset.active		AS iset_active,
								iset.in_long	AS iset_in_long,
								iset.in_short	AS iset_in_short,
								iset.low_level	AS iset_low_level,
								iset.low_long	AS iset_low_long,
								iset.low_short	AS iset_low_short,
								iset.low_track	AS iset_low_track,
								iset.out_level	AS iset_out_level,
								iset.out_long	AS iset_out_long,
								iset.out_short	AS iset_out_short,
								iset.out_track	AS iset_out_track
							  FROM ' $
								g.Store_Table_Prefix $ 'Upsell usl, ' $
								g.Store_Table_Prefix $ 'InventorySettings iset, ' $
								g.Store_Table_Prefix $ 'Products prod
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductSettings ips ON ips.product_id = prod.id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductCounts ipc ON ipc.product_id = prod.id
							  WHERE
								prod.id			= usl.product_id	AND
								prod.active		= 1					AND
								prod.agrpcount	= 0					AND
								(
									( ( iset.active = 0 ) OR ( ips.active IS NULL ) OR ( ips.active = 0 ) )	OR
									( ( ips.out_lvl_d = 1 ) AND ( ipc.inventory > iset.out_level ) )		OR
									( ( ips.out_lvl_d = 0 ) AND ( ipc.inventory > ips.out_level ) )
								)
							  UNION ALL
							  SELECT
								prod.*,
								usl.dmode		AS usl_dmode,
								usl.req_amount	AS usl_req_amount,
								usl.rprdcount	AS usl_rprdcount,
								usl.pmode		AS usl_pmode,
								usl.price		AS usl_price,
								usl.score		AS usl_score,
								ipc.inventory	AS ipc_inventory,
								ips.active		AS ips_active,
								ips.in_long		AS ips_in_long,
								ips.in_short	AS ips_in_short,
								ips.low_level	AS ips_low_level,
								ips.low_long	AS ips_low_long,
								ips.low_lvl_d	AS ips_low_lvl_d,
								ips.low_short	AS ips_low_short,
								ips.low_track	AS ips_low_track,
								ips.out_level	AS ips_out_level,
								ips.out_long	AS ips_out_long,
								ips.out_lvl_d	AS ips_out_lvl_d,
								ips.out_short	AS ips_out_short,
								ips.out_track	AS ips_out_track,
								iset.active		AS iset_active,
								iset.in_long	AS iset_in_long,
								iset.in_short	AS iset_in_short,
								iset.low_level	AS iset_low_level,
								iset.low_long	AS iset_low_long,
								iset.low_short	AS iset_low_short,
								iset.low_track	AS iset_low_track,
								iset.out_level	AS iset_out_level,
								iset.out_long	AS iset_out_long,
								iset.out_short	AS iset_out_short,
								iset.out_track	AS iset_out_track
							  FROM ' $
								g.Store_Table_Prefix $ 'Upsell usl, ' $
								g.Store_Table_Prefix $ 'InventorySettings iset, ' $
								g.Store_Table_Prefix $ 'Products prod
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductSettings ips ON ips.product_id = prod.id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductCounts ipc ON ipc.product_id = prod.id, ' $
								g.Store_Table_Prefix $ 'AvailGroupXProduct agxp, ' $
								g.Store_Table_Prefix $ 'AvailGroupXCustomer agxc
							  WHERE
								prod.id			= usl.product_id	AND
								prod.active		= 1					AND
								prod.agrpcount	<> 0				AND
								agxp.product_id	= prod.id			AND
								agxc.agrp_id	= agxp.agrp_id		AND
								agxc.cust_id	= ?					AND
								(
									( ( iset.active = 0 ) OR ( ips.active IS NULL ) OR ( ips.active = 0 ) )	OR
									( ( ips.out_lvl_d = 1 ) AND ( ipc.inventory > iset.out_level ) )		OR
									( ( ips.out_lvl_d = 0 ) AND ( ipc.inventory > ips.out_level ) )
								)
							  ORDER BY
								usl_score' }"
				FIELDS	= "g.Basket:cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-USL-DTB-00024', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count" VALUE = 0>
	<MvWHILE EXPR = "{ NOT Products.d.EOF }">
		<MvASSIGN NAME = "l.product_count" VALUE = "{ l.product_count + 1 }">

		<MvEVAL EXPR = "{ Upsell_Product_Read( l.products[ l.product_count ] ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Product_Read( l.products[ l.product_count ] ) }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_INV_RT ].Runtime_Product_InventoryFields_Read( l.products[ l.product_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-USL-DTB-00034', l.product_count ) }">
</MvFUNCTION>

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-PGR-UTL-
| Next Error Code: 2
|
</MvCOMMENT>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_Customer_Cached" PARAMETERS = "cust_id, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.cust_id LT 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cached_pricegrouplist"					VARIABLE = "g.Session">
		<MvMEMBER NAME = "cache">
		<MvMEMBER NAME = "resolvedpricegroupandmodulelist_load_customer">
		<MvDIMENSION INDEX = "{ l.cust_id + 1 }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cached_pricegrouplist:count }">
		<MvASSIGN NAME = "l.cached_pricegrouplist:count"				VALUE = "{ ResolvedPriceGroupAndModuleList_Load_Customer( l.cust_id, l.cached_pricegrouplist:cache ) }">
		<MvIF EXPR = "{ l.cached_pricegrouplist:count EQ 0 }">
			<MvASSIGN NAME = "l.cached_pricegrouplist:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cached_pricegrouplist:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cached_pricegrouplist:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.cached_pricegrouplist:count EQ 0 }">
		<MvIF EXPR = "{ l.cached_pricegrouplist:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cached_pricegrouplist:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cached_pricegrouplist:error_code, l.cached_pricegrouplist:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroups"									VALUE = "{ l.cached_pricegrouplist:cache }">

	<MvFUNCTIONRETURN VALUE = "{ l.cached_pricegrouplist:count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_BusinessAccount" PARAMETERS = "account_id, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ResolvedPriceGroupAndModuleList_Load_BusinessAccount_AsOf( l.account_id, [ g.Module_Feature_TUI_MGR ].TemplateManager_DateTime(), l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_BusinessAccount_AsOf" PARAMETERS = "account_id, asof, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.unresolved_pricegroup_count"	VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_BusinessAccount_AsOf( l.account_id, l.asof, l.unresolved_pricegroups ) }">
	<MvIF EXPR = "{ l.unresolved_pricegroup_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Discount_Resolve_PriceGroup_Exclusions( l.unresolved_pricegroups, l.unresolved_pricegroup_count, l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_Customer" PARAMETERS = "cust_id, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ResolvedPriceGroupAndModuleList_Load_Customer_AsOf( l.cust_id, [ g.Module_Feature_TUI_MGR ].TemplateManager_DateTime(), l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_Customer_AsOf" PARAMETERS = "cust_id, asof, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.unresolved_pricegroup_count"	VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Customer_AsOf( l.cust_id, l.asof, l.unresolved_pricegroups ) }">
	<MvIF EXPR = "{ l.unresolved_pricegroup_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Discount_Resolve_PriceGroup_Exclusions( l.unresolved_pricegroups, l.unresolved_pricegroup_count, l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_AllLoggedInCustomers" PARAMETERS = "pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ResolvedPriceGroupAndModuleList_Load_AllLoggedInCustomers_AsOf( [ g.Module_Feature_TUI_MGR ].TemplateManager_DateTime(), l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_AllLoggedInCustomers_AsOf" PARAMETERS = "asof, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.unresolved_pricegroup_count"	VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_AllLoggedInCustomers_AsOf( l.asof, l.unresolved_pricegroups ) }">
	<MvIF EXPR = "{ l.unresolved_pricegroup_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Discount_Resolve_PriceGroup_Exclusions( l.unresolved_pricegroups, l.unresolved_pricegroup_count, l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_DiscountSignature" PARAMETERS = "dscsig_id, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.unresolved_pricegroup_count"	VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_DiscountSignature( l.dscsig_id, l.unresolved_pricegroups ) }">
	<MvIF EXPR = "{ l.unresolved_pricegroup_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Discount_Resolve_PriceGroup_Exclusions( l.unresolved_pricegroups, l.unresolved_pricegroup_count, l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupAndModuleList_Load_Basket" PARAMETERS = "basket var, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pricegroup_count"			VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Customer( l.basket:cust_id, l.pricegroups ) }">

	<MvASSIGN NAME = "l.coupon_pricegroup_count"	VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Basket_Coupons( l.basket, l.coupon_pricegroups ) }">
	<MvIF EXPR = "{ l.coupon_pricegroup_count }">
		<MvEVAL EXPR = "{ Discount_Merge_PriceGroups( l.pricegroups, l.pricegroup_count, l.coupon_pricegroups, l.coupon_pricegroup_count, l.discarded_pricegroups, l.discarded_pricegroup_count ) }">
	</MvIF>

	<MvASSIGN NAME = "l.persistent_pricegroup_count" VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Basket_Persistent( l.basket, l.persistent_pricegroups ) }">
	<MvIF EXPR = "{ l.persistent_pricegroup_count }">
		<MvEVAL EXPR = "{ Discount_Merge_PriceGroups( l.pricegroups, l.pricegroup_count, l.persistent_pricegroups, l.persistent_pricegroup_count, l.discarded_pricegroups, l.discarded_pricegroup_count ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.pricegroup_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "ResolvedPriceGroupAndModuleList_Load_Basket" PARAMETERS = "basket var, pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.unresolved_pricegroup_count" VALUE = "{ PriceGroupAndModuleList_Load_Basket( l.basket, l.unresolved_pricegroups ) }">

	<MvFUNCTIONRETURN VALUE = "{ Discount_Resolve_PriceGroup_Exclusions( l.unresolved_pricegroups, l.unresolved_pricegroup_count, l.pricegroups ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupExclusionCache_Update" PARAMETERS = "primary_pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ PriceGroupExclusionCache_Update_WithPreviousExclusions( l.primary_pricegroup, l.null, 0 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupExclusionCache_Update_WithPreviousExclusions" PARAMETERS = "primary_pricegroup var, previous_exclusions var, previous_exclusion_count" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Calculate/update exclusions for the primary price group
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Calculate_Exclusions( l.primary_pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Update_Exclusions( l.primary_pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Create a map of price groups that were previously excluded or are currently excluded, so that their exclusions may be calculated
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.exclusion_map"									VALUE = "">

	<MvFOREACH ITERATOR = "l.exclusion" ARRAY = "l.previous_exclusions" COUNT = "{ l.previous_exclusion_count }">
		<MvIF EXPR = "{ l.exclusion:pgrp_id1 EQ l.primary_pricegroup:id }">	<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ l.exclusion:pgrp_id2 }">
		<MvELSE>															<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ l.exclusion:pgrp_id1 }">
		</MvIF>

		<MvIF EXPR = "{ l.pgrp_id GT 0 }">
			<MvASSIGN NAME = "l.exclusion_map" INDEX = "{ l.pgrp_id }"	VALUE = "{ l.pgrp_id }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.exclusion" ARRAY = "l.current_exclusions" COUNT = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupExclusionList_Load_PriceGroup( l.primary_pricegroup:id, l.current_exclusions ) }">
		<MvIF EXPR = "{ l.exclusion:pgrp_id1 EQ l.primary_pricegroup:id }">	<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ l.exclusion:pgrp_id2 }">
		<MvELSE>															<MvASSIGN NAME = "l.pgrp_id" VALUE = "{ l.exclusion:pgrp_id1 }">
		</MvIF>

		<MvIF EXPR = "{ l.pgrp_id GT 0 }">
			<MvASSIGN NAME = "l.exclusion_map" INDEX = "{ l.pgrp_id }"	VALUE = "{ l.pgrp_id }">
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Calculate and update exclusions for any impacted price groups
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.pgrp_id" ARRAY = "l.exclusion_map">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( l.pgrp_id, l.impacted_pricegroup ) }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Calculate_Exclusions( l.impacted_pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Update_Exclusions( l.impacted_pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Basket" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT DiscountState_CreateFromBasket( l.basket, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Load_PriceGroups_Basket( l.basket, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Disable_Unused_Item_PriceGroups( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Save the resulting discounts to the basket
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = "{ DiscountState_ApplyToBasket( l.discount_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_ShippingMethodList" PARAMETERS = "basket var, methods var, method_count" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT DiscountState_CreateFromBasket( l.basket, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Load_PriceGroups_Basket( l.basket, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Discount_ShippingMethodList( l.discount_state, l.methods, l.method_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Shipping" PARAMETERS = "basket var, shipping_module var, shipping_method_code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT DiscountState_CreateFromBasket( l.basket, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Load_PriceGroups_Basket( l.basket, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Shipping( l.discount_state, l.shipping_module, l.shipping_method_code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ DiscountState_ApplyToBasket( l.discount_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Order" PARAMETERS = "order var, prior_total" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.params"	VALUE = "">

	<MvEVAL EXPR = "{ Discount_Order_BuildParam_AdjustTotal( l.params, l.prior_total ) }">
	<MvEVAL EXPR = "{ Discount_Order_BuildParam_RecalculateShipping( l.params ) }">
	<MvEVAL EXPR = "{ Discount_Order_BuildParam_RecalculateTax( l.params ) }">

	<MvFUNCTIONRETURN VALUE = "{ Discount_Order_WithParams( l.order, l.params ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Order_BuildParam_AdjustTotal" PARAMETERS = "params var, prior_total" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.params:adjust_total"	VALUE = 1>
	<MvASSIGN NAME = "l.params:prior_total"		VALUE = "{ l.prior_total }">
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Order_BuildParam_RecalculateShipping" PARAMETERS = "params var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.params:recalculate_shipping"				VALUE = 1>
	<MvASSIGN NAME = "l.params:recalculate_shipping_if_discounted"	VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Order_BuildParam_RecalculateShippingIfDiscounted" PARAMETERS = "params var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.params:recalculate_shipping"				VALUE = 0>
	<MvASSIGN NAME = "l.params:recalculate_shipping_if_discounted"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Order_BuildParam_RecalculateTax" PARAMETERS = "params var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.params:recalculate_tax"	VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Order_WithParams" PARAMETERS = "order var, params var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.calculate_params"			VALUE = "">
	<MvASSIGN NAME = "l.recalculate_shipping"		VALUE = "{ l.params:recalculate_shipping }">
	<MvASSIGN NAME = "l.precalc_discount_total"		VALUE = 0.00>

	<MvCOMMENT>
	|
	| Initialize Discount State
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT DiscountState_CreateFromOrder( l.order, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.pricegroup_count" VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Order( l.order:id, l.pricegroups ) }">
	<MvEVAL EXPR = "{ DiscountState_Set_PriceGroups( l.discount_state, l.pricegroups, l.pricegroup_count ) }">

	<MvCOMMENT>
	|
	| Initialize data for calculations
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.params:recalculate_shipping_if_discounted }">
		<MvASSIGN NAME = "l.recalculate_shipping"	VALUE = "{ DiscountState_Discounts_Shipping( l.discount_state ) }">
	</MvIF>

	<MvIF EXPR = "{ l.params:adjust_total }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Total_Order( l.order:id, l.precalc_discount_total ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.recalculate_shipping AND l.order:ship_id }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( l.order:ship_id, l.shipping_module )			AND
						[ g.Module_Library_DB ].StoreModule_Load( l.shipping_module:id, 'shipping', l.null )	AND
						l.shipping_module:active }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateShipping_RetainOnFailure( l.calculate_params, l.shipping_module, l.order:ship_data ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.params:recalculate_tax }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateTax( l.calculate_params ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Discount Items
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| If calculating tax/shipping, apply a provisional item-level adjustment (if configured) so that tax and shipping
	| are calculated correctly.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.params:adjust_total AND ( NOT ISNULL l.calculate_params ) }">
		<MvIF EXPR = "{ NOT DiscountState_AdjustSubTotal( l.discount_state, l.params:prior_total ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_ApplyToOrder( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Recalculate Charges
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT ISNULL l.calculate_params }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Order_Calculate_Charges( l.order, l.calculate_params ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Calculate any final goodwill adjustment
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.params:adjust_total }">
		<MvIF EXPR = "{ NOT Order_AdjustTotal( l.order, l.params:prior_total, l.precalc_discount_total ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.order:total"	VALUE = "{ l.params:prior_total }">
	</MvIF>

	<MvASSIGN NAME = "l.order_total"		VALUE = "{ [ g.Module_Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].v56_Order_Update_Total( l.order, l.order_total ) OR
					NOT [ g.Module_Library_DB ].Order_Update_ShippingAndTaxTotals( l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.order:total"		VALUE = "{ l.order_total }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Merge_PriceGroups" PARAMETERS = "pricegroups var, pricegroup_count var, add_pricegroups var, add_pricegroup_count var, discarded_pricegroups var, discarded_pricegroup_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discarded_pricegroups"				VALUE = "">
	<MvASSIGN NAME = "l.discarded_pricegroup_count"			VALUE = 0>
	<MvASSIGN NAME = "l.original_pricegroup_count"			VALUE = "{ l.pricegroup_count }">

	<MvFOREACH ITERATOR = "l.add_pricegroup" ARRAY = "l.add_pricegroups" COUNT = "{ l.add_pricegroup_count }">
		<MvIF EXPR = "{ miva_array_search( l.pricegroups, 1, l.pricegroup, 'l.pricegroup:id EQ l.add_pricegroup:id' ) }">
			<MvASSIGN NAME = "l.discarded_pricegroup_count"	VALUE = "{ miva_array_insert( l.discarded_pricegroups, l.add_pricegroup, -1 ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.pricegroup_count"			VALUE = "{ miva_array_insert( l.pricegroups, l.add_pricegroup, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.pricegroup_count GT l.original_pricegroup_count }">
		<MvASSIGN NAME = "l.pricegroup_count"				VALUE = "{ miva_array_sort( l.pricegroups, 'Discount_PriceGroup_Compare', l.null ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_Resolve_PriceGroup_Exclusions" PARAMETERS = "pricegroups var, pricegroup_count, resolved_pricegroups var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.resolved_pricegroups"							VALUE = "{ l.pricegroups }">
	<MvASSIGN NAME = "l.resolved_pricegroup_count"						VALUE = "{ l.pricegroup_count }">

	<MvCOMMENT>
	|
	| Initialize exclusion processing flags
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.resolved_pricegroup" ARRAY = "l.resolved_pricegroups" COUNT = "{ l.resolved_pricegroup_count }">
		<MvASSIGN NAME = "l.resolved_pricegroup:exclusions_applied"		VALUE = 0>
		<MvASSIGN NAME = "l.resolved_pricegroup:exclusion_count"		VALUE = 0>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Perform an initial, pre-qualification check exclusion loop.  This is used for handling legacy price groups
	| and will have no impact on DiscountState_Discount_Basket, which will add or remove exclusions as necessary.
	|
	</MvCOMMENT>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.resolved_pricegroup" ARRAY = "l.resolved_pricegroups" COUNT = "{ l.resolved_pricegroup_count }">
		<MvIF EXPR = "{ l.resolved_pricegroup:exclusion_count GT 0 }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.resolved_pricegroup:exclusions_applied"			VALUE = 1>

		<MvFOREACH ITERATOR = "l.excluded_id" ARRAY = "l.resolved_pricegroup:baskexc">
			<MvIF EXPR = "{ miva_array_search( l.resolved_pricegroups, l.pos + 1, l.excluded_pricegroup, 'l.excluded_pricegroup:id EQ l.excluded_id' ) }">
				<MvASSIGN NAME = "l.excluded_pricegroup:exclusion_count"	VALUE = "{ l.excluded_pricegroup:exclusion_count + 1 }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.resolved_pricegroup_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_PriceGroup_ExcludedForItem" PARAMETERS = "discount_state var, pricegroup var, item var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Check for group level inter-price group exclusions
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.item:group_id GT 0 }">
		<MvREFERENCEARRAY NAME = "l.group_discount_map" VARIABLE = "l.discount_state">
			<MvMEMBER NAME = "group_discount_map">
			<MvDIMENSION INDEX = "{ l.item:group_id }">
		</MvREFERENCEARRAY>

		<MvFOREACH INDEX = "l.pgrp_id" ITERATOR = "l.group_discount" ARRAY = "l.group_discount_map">
			<MvIF EXPR = "{ l.pricegroup:itemexc[ l.pgrp_id ] EQ 'G' }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvCOMMENT>
	|
	| Check for item level inter-price group exclusions
	|
	</MvCOMMENT>

	<MvFOREACH INDEX = "l.pgrp_id" ITERATOR = "l.item_discount" ARRAY = "l.item:discount_map">
		<MvIF EXPR = "{ l.pricegroup:itemexc[ l.pgrp_id ] EQ 'I' }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Discount_PriceGroup_Compare" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:priority GT l.right:priority }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:priority LT l.right:priority }">	<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:id LT l.right:id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:id GT l.right:id }">				<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Load_PriceGroups_Basket" PARAMETERS = "basket var, discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pricegroup_count" VALUE = "{ ResolvedPriceGroupAndModuleList_Load_Basket( l.basket, l.pricegroups ) }">
	<MvIF EXPR = "{ l.pricegroup_count EQ 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ DiscountState_Set_PriceGroups( l.discount_state, l.pricegroups, l.pricegroup_count ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Set_PriceGroups" PARAMETERS = "discount_state var, pricegroups var, pricegroup_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups"					VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:all"				VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:all_count"		VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:pricegroups:legacy"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:legacy_count"	VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:pricegroups:item"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:item_count"		VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:pricegroups:basket"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:basket_count"	VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:pricegroups:shipping"		VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:shipping_count"	VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:pricegroups:lookup"			VALUE = "">

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ l.pricegroup_count }">
		<MvASSIGN NAME = "l.pricegroup:disabled"					VALUE = 0>

		<MvASSIGN NAME = "l.discount_state:pricegroups:all_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:pricegroups:all, l.pricegroup, -1 ) }">

		<MvIF EXPR = "{ NOT l.pricegroup:module:id }">				<MvASSIGN NAME = "l.discount_state:pricegroups:legacy_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:pricegroups:legacy,		l.pricegroup, -1 ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Capabilities( l.pricegroup:module, l.pricegroup:capabilities ) }">

			<MvIF EXPR = "{ l.pricegroup:capabilities:preitems }">	<MvASSIGN NAME = "l.discount_state:pricegroups:preitem_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:pricegroups:preitem,		l.pricegroup, -1 ) }">	</MvIF>
			<MvIF EXPR = "{ l.pricegroup:capabilities:items }">		<MvASSIGN NAME = "l.discount_state:pricegroups:item_count"		VALUE = "{ miva_array_insert_ref( l.discount_state:pricegroups:item,		l.pricegroup, -1 ) }">	</MvIF>
			<MvIF EXPR = "{ l.pricegroup:capabilities:basket }">	<MvASSIGN NAME = "l.discount_state:pricegroups:basket_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:pricegroups:basket,		l.pricegroup, -1 ) }">	</MvIF>
			<MvIF EXPR = "{ l.pricegroup:capabilities:shipping }">	<MvASSIGN NAME = "l.discount_state:pricegroups:shipping_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:pricegroups:shipping,	l.pricegroup, -1 ) }">	</MvIF>
		</MvIF>

		<MvREFERENCEARRAY NAME = "{ 'l.discount_state:pricegroups:lookup[' $ l.pricegroup:id $ ']' }" VARIABLE = "l.pricegroups">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Flag shipping-level coupons
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:shipping" COUNT = "{ l.discount_state:pricegroups:shipping_count }">
		<MvIF EXPR = "{ l.pricegroup:coupon_id }">
			<MvASSIGN NAME = "l.discount_state:coupon_lookup" INDEX = "{ l.pricegroup:coupon_id }" MEMBER = "shipping" VALUE = 1>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Apply_PriceGroup_Exclusions" PARAMETERS = "discount_state var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.pricegroup:exclusions_applied }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.pricegroup:exclusions_applied"			VALUE = 1>

	<MvFOREACH ITERATOR = "l.excluded_id" ARRAY = "l.pricegroup:baskexc">
		<MvREFERENCEARRAY NAME = "l.inner_pricegroup" VARIABLE = "l.discount_state:pricegroups:lookup">
			<MvDIMENSION INDEX = "{ l.excluded_id }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.inner_pricegroup:exclusion_count"	VALUE = "{ l.inner_pricegroup:exclusion_count + 1 }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Remove_PriceGroup_Exclusions" PARAMETERS = "discount_state var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.pricegroup:exclusions_applied }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.pricegroup:exclusions_applied"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.excluded_id" ARRAY = "l.pricegroup:baskexc">
		<MvREFERENCEARRAY NAME = "l.inner_pricegroup" VARIABLE = "l.discount_state:pricegroups:lookup">
			<MvDIMENSION INDEX = "{ l.excluded_id }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.inner_pricegroup:exclusion_count"	VALUE = "{ l.inner_pricegroup:exclusion_count - 1 }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Disable_Unused_Item_PriceGroups" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:item" COUNT = "{ l.discount_state:pricegroups:item_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled OR l.pricegroup:capabilities:basket OR l.pricegroup:capabilities:shipping OR ( l.pricegroup:capabilities:eligibility EQ 'module' ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.pricegroup:disabled"					VALUE = 1>

		<MvFOREACH INDEX = "l.product_id" ITERATOR = "l.product" ARRAY = "l.discount_state:products">
			<MvIF EXPR = "{ NOT DiscountState_PriceGroupProduct_Assigned( l.discount_state, l.pricegroup, l.product_id, l.assigned ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			<MvELSEIF EXPR = "{ l.assigned }">
				<MvASSIGN NAME = "l.pricegroup:disabled"			VALUE = 0>
				<MvFOREACHSTOP>
			<MvELSE>
				<MvFOREACH INDEX = "l.subterm_id" ITERATOR = "l.subterm" ARRAY = "l.product:subterms">
					<MvIF EXPR = "{ NOT DiscountState_PriceGroupProductSubscriptionTerm_Assigned( l.discount_state, l.pricegroup, l.product_id, l.subterm_id, l.assigned ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ l.assigned }">
						<MvASSIGN NAME = "l.pricegroup:disabled"	VALUE = 0>
						<MvFOREACHSTOP>
					</MvIF>
				</MvFOREACH>

				<MvIF EXPR = "{ NOT l.pricegroup:disabled }">
					<MvFOREACHSTOP>
				</MvIF>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Enable_Item_PriceGroups" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:item" COUNT = "{ l.discount_state:pricegroups:item_count }">
		<MvIF EXPR = "{ NOT l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvFOREACH INDEX = "l.product_id" ITERATOR = "l.product" ARRAY = "l.discount_state:products">
			<MvIF EXPR = "{ NOT DiscountState_PriceGroupProduct_Assigned( l.discount_state, l.pricegroup, l.product_id, l.assigned ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			<MvELSEIF EXPR = "{ l.assigned }">
				<MvASSIGN NAME = "l.pricegroup:disabled"			VALUE = 0>
				<MvFOREACHSTOP>
			<MvELSE>
				<MvFOREACH INDEX = "l.subterm_id" ITERATOR = "l.subterm" ARRAY = "l.product:subterms">
					<MvIF EXPR = "{ NOT DiscountState_PriceGroupProductSubscriptionTerm_Assigned( l.discount_state, l.pricegroup, l.product_id, l.subterm_id, l.assigned ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					<MvELSEIF EXPR = "{ l.assigned }">
						<MvASSIGN NAME = "l.pricegroup:disabled"	VALUE = 0>
						<MvFOREACHSTOP>
					</MvIF>
				</MvFOREACH>

				<MvIF EXPR = "{ NOT l.pricegroup:disabled }">
					<MvFOREACHSTOP>
				</MvIF>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ NOT l.pricegroup:disabled }">
			<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discounts_Basket" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:preitem" COUNT = "{ l.discount_state:pricegroups:preitem_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:item" COUNT = "{ l.discount_state:pricegroups:item_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:basket" COUNT = "{ l.discount_state:pricegroups:basket_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discounts_Shipping" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:shipping" COUNT = "{ l.discount_state:pricegroups:shipping_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Basket" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Stage 1: Apply pre-item discounts, processing all discounts in priority order and validating qualifications and exclusions as we go
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:all" COUNT = "{ l.discount_state:pricegroups:all_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:exclusion_count GT 0 }">
			<MvCOMMENT>
			|
			| Remove exclusions for excluded price groups
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		<MvELSEIF EXPR = "{ NOT l.pricegroup:capabilities:preitems }">
			<MvCOMMENT>
			|
			| Validate qualifications and process exclusions for non-item discounts
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_MarkQualifying_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| Process exclusions and trigger module pre-item behavior
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Discount_PreItems( l.pricegroup:module, l.pricegroup, l.discount_state ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Stage 2: Apply item discounts, processing all discounts in priority order and validating qualifications and exclusions as we go
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:all" COUNT = "{ l.discount_state:pricegroups:all_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:exclusion_count GT 0 }">
			<MvCOMMENT>
			|
			| Remove exclusions for excluded price groups
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		<MvELSEIF EXPR = "{ NOT l.pricegroup:capabilities:items }">
			<MvCOMMENT>
			|
			| Validate qualifications and process exclusions for non-item discounts
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_MarkQualifying_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| Process exclusions and apply qualifying item-level discounts
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Discount_Items( l.pricegroup:module, l.pricegroup, l.discount_state ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Stage 3: Apply basket-level discounts, revalidating qualifications and adding/removing exclusions as we go
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:basket" COUNT = "{ l.discount_state:pricegroups:basket_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:exclusion_count GT 0 }">
			<MvCOMMENT>
			|
			| Remove exclusions for excluded price groups
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Discount_Basket( l.pricegroup:module, l.pricegroup, l.discount_state ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Shipping discounts are processed in a variety of locations:
	|
	|	DiscountState_Coupon_Applies
	|	DiscountState_Discount_ShippingMethodList
	|	DiscountState_Discount_Shipping
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Predict_Baseline_Discounts" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ DiscountState_Copy( l.discount_state, l.calculating_state ) }">

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.calculating_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.discount_state:baseline_discounts"	VALUE = "{ l.calculating_state:discount_totals }">
	<MvASSIGN NAME = "l.discount_state:cache"				VALUE = "{ l.calculating_state:cache }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Predict_Product_Discounts" PARAMETERS = "discount_state var, product var, variant_id, quantity, predicted_price var, predicted_discounts var, predicted_discount_count var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Predict_Product_Discounts_WithProductSubscriptionTerm( l.discount_state, l.product, 0, l.variant_id, l.quantity, l.predicted_price, l.predicted_discounts, l.predicted_discount_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Predict_Product_Discounts_WithProductSubscriptionTerm" PARAMETERS = "discount_state var, product var, subterm_id, variant_id, quantity, predicted_price var, predicted_discounts var, predicted_discount_count var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Predict_Product_Discounts_WithProductSubscriptionTermAndOptions( l.discount_state, l.product, l.subterm_id, l.variant_id, l.quantity, l.null, 0, l.predicted_price, l.predicted_discounts, l.predicted_discount_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Predict_Product_Discounts_WithProductSubscriptionTermAndOptions" PARAMETERS = "discount_state var, product var, subterm_id, variant_id, quantity, options var, option_count, predicted_price var, predicted_discounts var, predicted_discount_count var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ DiscountState_Copy( l.discount_state, l.calculating_state ) }">

	<MvCOMMENT>
	|
	| Add a dummy item to the calculating state to simulate the addition of this product.
	|
	| The item is added with a high line_id to ensure that discounts are applied to it
	| over existing items.
	|
	|	See the tie breaking logic in DiscountState_Item_Sort_TotalPriceAscending/Descending.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.new_item:line_id"					VALUE = "2147483646">
	<MvASSIGN NAME = "l.new_item:group_id"					VALUE = "2147483646">
	<MvASSIGN NAME = "l.new_item:product_id"				VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.new_item:variant_id"				VALUE = "{ l.variant_id }">
	<MvASSIGN NAME = "l.new_item:subterm_id"				VALUE = "{ l.subterm_id }">
	<MvASSIGN NAME = "l.new_item:code"						VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.new_item:name"						VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.new_item:price"						VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.new_item:weight"					VALUE = "{ l.product:weight }">
	<MvASSIGN NAME = "l.new_item:taxable"					VALUE = "{ l.product:taxable }">
	<MvASSIGN NAME = "l.new_item:upsold"					VALUE = 0>
	<MvASSIGN NAME = "l.new_item:quantity"					VALUE = "{ l.quantity }">

	<MvASSIGN NAME = "l.new_item:base_price"				VALUE = "{ l.new_item:price }">
	<MvASSIGN NAME = "l.new_item:total_price"				VALUE = "{ l.new_item:price }">
	<MvASSIGN NAME = "l.new_item:total_weight"				VALUE = "{ l.new_item:weight }">

	<MvASSIGN NAME = "l.new_item:discount_count"			VALUE = 0>
	<MvASSIGN NAME = "l.new_item:option_count"				VALUE = "{ l.option_count }">
	<MvASSIGN NAME = "l.new_item:options"					VALUE = "{ l.options }">

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.new_item:options" COUNT = "{ l.new_item:option_count }">
		<MvASSIGN NAME = "l.option:discount_count"			VALUE = 0>
		<MvASSIGN NAME = "l.new_item:total_price"			VALUE = "{ l.new_item:total_price + l.option:price }">
		<MvASSIGN NAME = "l.new_item:total_weight"			VALUE = "{ l.new_item:total_weight + l.option:weight }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.new_item:total"						VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.new_item:total_price * l.new_item:quantity ) }">

	<MvASSIGN NAME = "l.calculating_state:item_count"		VALUE = "{ miva_array_insert_ref( l.calculating_state:items, l.new_item, -1 ) }">

	<MvASSIGN NAME = "l.calculating_state:item_quantity"	VALUE = "{ l.calculating_state:item_quantity + l.new_item:quantity }">
	<MvASSIGN NAME = "l.calculating_state:item_price"		VALUE = "{ l.calculating_state:item_price + ( l.new_item:total_price * l.new_item:quantity ) }">
	<MvASSIGN NAME = "l.calculating_state:item_weight"		VALUE = "{ l.calculating_state:item_weight + ( l.new_item:total_weight * l.new_item:quantity ) }">

	<MvASSIGN NAME = "l.calculating_state:total_price"		VALUE = "{ l.calculating_state:total_price + ( l.new_item:total_price * l.new_item:quantity ) }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Item_Product_Totals( l.calculating_state, l.new_item ) }">

	<MvIF EXPR = "{ NOT DiscountState_Enable_Item_PriceGroups( l.calculating_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Calculate discounts
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.calculating_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Report any newly added discounts or discounts that changed in value
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.calculated_discount" ARRAY = "l.calculating_state:discount_totals">
		<MvREFERENCEARRAY NAME = "l.baseline_discount" VARIABLE = "l.discount_state">
			<MvMEMBER NAME = "baseline_discounts">
			<MvDIMENSION INDEX = "{ l.calculated_discount:pgrp_id }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ l.baseline_discount:total NE l.calculated_discount:total }">
			<MvIF EXPR = "{ NOT miva_array_search( l.discount_state:pricegroups:item, 1, l.pricegroup, 'l.pricegroup:id EQ l.calculated_discount:pgrp_id' ) }">
				<MvIF EXPR = "{ NOT miva_array_search( l.discount_state:pricegroups:basket, 1, l.pricegroup, 'l.pricegroup:id EQ l.calculated_discount:pgrp_id' ) }">
					<MvIF EXPR = "{ NOT miva_array_search( l.discount_state:pricegroups:shipping, 1, l.pricegroup, 'l.pricegroup:id EQ l.calculated_discount:pgrp_id' ) }">
						<MvFOREACHCONTINUE>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.predicted_discount:pgrp_id"		VALUE = "{ l.pricegroup:id }">
			<MvASSIGN NAME = "l.predicted_discount:priority"	VALUE = "{ l.pricegroup:priority }">
			<MvASSIGN NAME = "l.predicted_discount:display"		VALUE = "{ l.pricegroup:display }">

			<MvIF EXPR = "{ ISNULL l.pricegroup:descrip }">
				<MvASSIGN NAME = "l.predicted_discount:descrip"	VALUE = "{ l.pricegroup:name }">
			<MvELSE>
				<MvASSIGN NAME = "l.predicted_discount:descrip"	VALUE = "{ l.pricegroup:descrip }">
			</MvIF>

			<MvASSIGN NAME = "l.predicted_discount:discount"	VALUE = "{ l.calculated_discount:total - l.baseline_discount:total }">
			<MvASSIGN NAME = "l.predicted_discount_count"		VALUE = "{ miva_array_insert( l.predicted_discounts, l.predicted_discount, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.predicted_price"		VALUE = "{ l.new_item:total_price }">
	<MvASSIGN NAME = "l.discount_state:cache"	VALUE = "{ l.calculating_state:cache }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Predict_Product_Price" PARAMETERS = "discount_state var, product var, predicted_base_price var, predicted_price var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ DiscountState_Copy( l.discount_state, l.calculating_state ) }">

	<MvCOMMENT>
	|
	| Add a dummy item to the calculating state to simulate the addition of this product.
	|
	| The item is added with a high line_id to ensure that discounts are applied to it
	| over existing items.
	|
	|	See the tie breaking logic in DiscountState_Item_Sort_TotalPriceAscending/Descending.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.predicted_base_price"				VALUE = "{ DiscountState_Adjusted_Price( l.discount_state, l.product, l.product:price, l.product:cost ) }">

	<MvASSIGN NAME = "l.new_item:line_id"					VALUE = "2147483646">
	<MvASSIGN NAME = "l.new_item:group_id"					VALUE = "2147483646">
	<MvASSIGN NAME = "l.new_item:product_id"				VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.new_item:variant_id"				VALUE = 0>
	<MvASSIGN NAME = "l.new_item:subterm_id"				VALUE = 0>
	<MvASSIGN NAME = "l.new_item:code"						VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.new_item:name"						VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.new_item:retail"					VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.new_item:base_price"				VALUE = "{ l.predicted_base_price }">
	<MvASSIGN NAME = "l.new_item:price"						VALUE = "{ l.new_item:base_price }">
	<MvASSIGN NAME = "l.new_item:weight"					VALUE = "{ l.product:weight }">
	<MvASSIGN NAME = "l.new_item:taxable"					VALUE = "{ l.product:taxable }">
	<MvASSIGN NAME = "l.new_item:upsold"					VALUE = 0>
	<MvASSIGN NAME = "l.new_item:quantity"					VALUE = 1>

	<MvASSIGN NAME = "l.new_item:total_price"				VALUE = "{ l.new_item:price }">
	<MvASSIGN NAME = "l.new_item:total_weight"				VALUE = "{ l.new_item:weight }">

	<MvASSIGN NAME = "l.new_item:option_count"				VALUE = 0>
	<MvASSIGN NAME = "l.new_item:discount_count"			VALUE = 0>

	<MvASSIGN NAME = "l.new_item:total"						VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.new_item:total_price * l.new_item:quantity ) }">

	<MvASSIGN NAME = "l.calculating_state:item_count"		VALUE = "{ miva_array_insert_ref( l.calculating_state:items, l.new_item, -1 ) }">

	<MvASSIGN NAME = "l.calculating_state:item_quantity"	VALUE = "{ l.calculating_state:item_quantity + l.new_item:quantity }">
	<MvASSIGN NAME = "l.calculating_state:item_price"		VALUE = "{ l.calculating_state:item_price + ( l.new_item:total_price * l.new_item:quantity ) }">
	<MvASSIGN NAME = "l.calculating_state:item_weight"		VALUE = "{ l.calculating_state:item_weight + ( l.new_item:total_weight * l.new_item:quantity ) }">

	<MvASSIGN NAME = "l.calculating_state:total_price"		VALUE = "{ l.calculating_state:total_price + ( l.new_item:total_price * l.new_item:quantity ) }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Item_Product_Totals( l.calculating_state, l.new_item ) }">

	<MvCOMMENT>
	|
	| Calculate discounts
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.calculating_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.predicted_price"					VALUE = "{ l.new_item:price }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Predict_Product_Price_WithProductSubscriptionTermAndOptions" PARAMETERS = "discount_state var, product var, subterm_id, variant_id, quantity, options var, option_count, predicted_total_base_price var, predicted_total_price var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ DiscountState_Copy( l.discount_state, l.calculating_state ) }">

	<MvCOMMENT>
	|
	| Add a dummy item to the calculating state to simulate the addition of this product.
	|
	| The item is added with a high line_id to ensure that discounts are applied to it
	| over existing items.
	|
	|	See the tie breaking logic in DiscountState_Item_Sort_TotalPriceAscending/Descending.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.new_item:line_id"					VALUE = "2147483646">
	<MvASSIGN NAME = "l.new_item:group_id"					VALUE = "2147483646">
	<MvASSIGN NAME = "l.new_item:product_id"				VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.new_item:variant_id"				VALUE = "{ l.variant_id }">
	<MvASSIGN NAME = "l.new_item:subterm_id"				VALUE = "{ l.subterm_id }">
	<MvASSIGN NAME = "l.new_item:code"						VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.new_item:name"						VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.new_item:retail"					VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.new_item:base_price"				VALUE = "{ DiscountState_Adjusted_Price( l.discount_state, l.product, l.product:price, l.product:cost ) }">
	<MvASSIGN NAME = "l.new_item:price"						VALUE = "{ l.new_item:base_price }">
	<MvASSIGN NAME = "l.new_item:weight"					VALUE = "{ l.product:weight }">
	<MvASSIGN NAME = "l.new_item:taxable"					VALUE = "{ l.product:taxable }">
	<MvASSIGN NAME = "l.new_item:upsold"					VALUE = 0>
	<MvASSIGN NAME = "l.new_item:quantity"					VALUE = "{ l.quantity }">

	<MvASSIGN NAME = "l.new_item:total_price"				VALUE = "{ l.new_item:price }">
	<MvASSIGN NAME = "l.new_item:total_weight"				VALUE = "{ l.new_item:weight }">

	<MvASSIGN NAME = "l.new_item:discount_count"			VALUE = 0>
	<MvASSIGN NAME = "l.new_item:option_count"				VALUE = "{ l.option_count }">
	<MvASSIGN NAME = "l.new_item:options"					VALUE = "{ l.options }">

	<MvASSIGN NAME = "l.predicted_total_base_price"			VALUE = "{ l.new_item:base_price }">

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.new_item:options" COUNT = "{ l.new_item:option_count }">
		<MvASSIGN NAME = "l.option:base_price"				VALUE = "{ DiscountState_Adjusted_Price( l.discount_state, l.product, l.option:price, l.option:cost ) }">
		<MvASSIGN NAME = "l.option:price"					VALUE = "{ l.option:base_price }">
		<MvASSIGN NAME = "l.option:discount_count"			VALUE = 0>

		<MvASSIGN NAME = "l.new_item:total_price"			VALUE = "{ l.new_item:total_price + l.option:price }">
		<MvASSIGN NAME = "l.new_item:total_weight"			VALUE = "{ l.new_item:total_weight + l.option:weight }">
		<MvASSIGN NAME = "l.predicted_total_base_price"		VALUE = "{ l.predicted_total_base_price + l.option:base_price }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.calculating_state:item_count"		VALUE = "{ miva_array_insert_ref( l.calculating_state:items, l.new_item, -1 ) }">

	<MvASSIGN NAME = "l.calculating_state:item_quantity"	VALUE = "{ l.calculating_state:item_quantity + l.new_item:quantity }">
	<MvASSIGN NAME = "l.calculating_state:item_price"		VALUE = "{ l.calculating_state:item_price + ( l.new_item:total_price * l.new_item:quantity ) }">
	<MvASSIGN NAME = "l.calculating_state:item_weight"		VALUE = "{ l.calculating_state:item_weight + ( l.new_item:total_weight * l.new_item:quantity ) }">

	<MvASSIGN NAME = "l.calculating_state:total_price"		VALUE = "{ l.calculating_state:total_price + ( l.new_item:total_price * l.new_item:quantity ) }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Item_Product_Totals( l.calculating_state, l.new_item ) }">

	<MvCOMMENT>
	|
	| Calculate discounts
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT DiscountState_Discount_Basket( l.calculating_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.predicted_total_price"				VALUE = "{ l.new_item:total_price }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Adjusted_Price" PARAMETERS = "discount_state var, product var, price, cost" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.product:pgrpcount EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ l.price }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_PriceGroups( l.product, l.price, l.cost, l.discount_state:pricegroups:legacy, l.discount_state:pricegroups:legacy_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_ShippingMethodList" PARAMETERS = "discount_state var, methods var, method_count" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.method" ARRAY = "l.methods" COUNT = "{ l.method_count }">
		<MvASSIGN NAME = "l.method:undiscounted_price"		VALUE = "{ l.method:price }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:shipping" COUNT = "{ l.discount_state:pricegroups:shipping_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:exclusion_count GT 0 }">
			<MvCOMMENT>
			|
			| Remove exclusions for excluded price groups
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Discount_ShippingMethodList( l.pricegroup:module, l.pricegroup, l.discount_state, l.methods, l.method_count ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Shipping" PARAMETERS = "discount_state var, shipping_module var, shipping_method_code" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:shipping" COUNT = "{ l.discount_state:pricegroups:shipping_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:exclusion_count GT 0 }">
			<MvCOMMENT>
			|
			| Remove exclusions for excluded price groups
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT DiscountState_MarkEligible_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvIF EXPR = "{ NOT [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Discount_Shipping( l.pricegroup:module, l.pricegroup, l.discount_state, l.shipping_module, l.shipping_method_code ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Copy" PARAMETERS = "source_state var, dest_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.dest_state"			VALUE = "{ l.source_state }">
	<MvASSIGN NAME = "l.copied_pricegroups"	VALUE = "{ l.source_state:pricegroups:all }">

	<MvEVAL EXPR = "{ DiscountState_Set_PriceGroups( l.dest_state, l.copied_pricegroups, l.source_state:pricegroups:all_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_CreateEmpty" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state"							VALUE = "">
	<MvASSIGN NAME = "l.discount_state:item_count"				VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:charge_count"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:charge_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:discount_charge_total"	VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:item_quantity"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:item_price"				VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:item_weight"				VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:excluded_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:cancelled_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:coupon_lookup"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state:coupon_count"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:discount_totals"			VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].DiscountOptions_Load_Cached( l.discount_state:options ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_CreateFromDiscountSignature" PARAMETERS = "dscsig_id, discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT DiscountState_CreateEmpty( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.pricegroup_count"							VALUE = "{ ResolvedPriceGroupAndModuleList_Load_DiscountSignature( l.dscsig_id, l.pricegroups ) }">

	<MvCOMMENT>
	|
	| Discount Signature price prediciton always operates on an "empty" basket, so Price Groups with qualifications
	| can be safely removed from the discount state.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.filtered_pricegroup_count"					VALUE = 0>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ l.pricegroup_count }">
		<MvIF EXPR = "{ l.pricegroup:module:id }">
			<MvEVAL EXPR = "{ [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Capabilities( l.pricegroup:module, l.pricegroup:capabilities ) }">

			<MvIF EXPR = "{ l.pricegroup:capabilities:qualifying }">
				<MvFOREACHCONTINUE>
			<MvELSEIF EXPR = "{ l.pricegroup:qmn_subtot OR l.pricegroup:qmx_subtot OR l.pricegroup:qmn_quan OR l.pricegroup:qmx_quan OR l.pricegroup:qmn_weight OR l.pricegroup:qmx_weight }">
				<MvFOREACHCONTINUE>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.filtered_pricegroup_count"				VALUE = "{ miva_array_insert_ref( l.filtered_pricegroups, l.pricegroup, -1 ) }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ DiscountState_Set_PriceGroups( l.discount_state, l.filtered_pricegroups, l.filtered_pricegroup_count ) }">

	<MvASSIGN NAME = "l.discount_state:pricegroups:basket"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:basket_count"	VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:pricegroups:shipping"		VALUE = "">
	<MvASSIGN NAME = "l.discount_state:pricegroups:shipping_count"	VALUE = 0>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_CreateFromBasket" PARAMETERS = "basket var, discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state"							VALUE = "">
	<MvASSIGN NAME = "l.discount_state:basket"					VALUE = "{ l.basket }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].DiscountOptions_Load_Cached( l.discount_state:options ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.discount_state:item_count"				VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:charge_count"			VALUE = "{ [ g.Module_Library_DB ].BasketChargeList_Load_Basket( l.basket:basket_id, l.discount_state:charges ) }">

	<MvASSIGN NAME = "l.discount_state:charge_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:discount_charge_total"	VALUE = 0.00>

	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.discount_state:charges" COUNT = "{ l.discount_state:charge_count }">
		<MvASSIGN NAME = "l.charge:undiscounted_amount"			VALUE = "{ l.charge:amount }">
		<MvASSIGN NAME = "l.charge:undiscounted_disp_amt"		VALUE = "{ l.charge:disp_amt }">

		<MvIF EXPR = "{ l.charge:type EQ 'DISCOUNT' }">
			<MvASSIGN NAME = "l.charge:deleted"					VALUE = 1>
		<MvELSE>
			<MvASSIGN NAME = "l.discount_state:charge_price"	VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.discount_state:item_quantity"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:item_price"				VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:item_weight"				VALUE = 0.00>

	<MvREFERENCE NAME = "l.items"		VARIABLE = "l.discount_state:items">
	<MvREFERENCE NAME = "l.item_count"	VARIABLE = "l.discount_state:item_count">

	<MvFOREACH ITERATOR = "l.basketitem" ARRAY = "l.basketitems" COUNT = "{ [ g.Module_Library_DB ].BasketItemList_Load_Basket( l.basket:basket_id, l.basketitems ) }">
		<MvASSIGN NAME = "l.basketitem:excluded"				VALUE = 0>

		<MvIF EXPR = "{ l.basketitem:price NE l.basketitem:base_price }">
			<MvCOMMENT>
			|
			| Any difference between price and base_price that is not recorded in sNN_BasketItemDiscounts
			| is retained for backwards compatibility with modules that directly modify price
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItemDiscount_Total_Line( l.basketitem:line_id, l.line_discount_total ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.basketitem:price"				VALUE = "{ l.basketitem:base_price - ( l.basketitem:base_price - l.basketitem:price - l.line_discount_total ) }">
		</MvIF>

		<MvASSIGN NAME = "l.basketitem:total_price"				VALUE = "{ l.basketitem:price }">
		<MvASSIGN NAME = "l.basketitem:total_weight"			VALUE = "{ l.basketitem:weight }">
		<MvASSIGN NAME = "l.basketitem:option_count"			VALUE = "{ [ g.Module_Library_DB ].BasketOptionList_Load_Line( l.basketitem:line_id, l.basketitem:options ) }">

		<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketitem:options" COUNT = "{ l.basketitem:option_count }">
			<MvIF EXPR = "{ l.basketoption:price NE l.basketoption:base_price }">
				<MvCOMMENT>
				|
				| Any difference between price and base_price that is not recorded in sNN_BasketOptionDiscounts
				| is retained for backwards compatibility with modules that directly modify price
				|
				</MvCOMMENT>

				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOptionDiscount_Total_LineOption_ID( l.basketoption:id, l.option_discount_total ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.basketoption:price"			VALUE = "{ l.basketoption:base_price - ( l.basketoption:base_price - l.basketoption:price - l.option_discount_total ) }">
			</MvIF>

			<MvASSIGN NAME = "l.basketoption:discount_count"	VALUE = 0>
			<MvASSIGN NAME = "l.basketitem:total_price"			VALUE = "{ l.basketitem:total_price + l.basketoption:price }">
			<MvASSIGN NAME = "l.basketitem:total_weight"		VALUE = "{ l.basketitem:total_weight + l.basketoption:weight }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.basketitem:total"					VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.basketitem:total_price * l.basketitem:quantity ) }">
		<MvASSIGN NAME = "l.basketitem:discount_count"			VALUE = 0>
		<MvASSIGN NAME = "l.item_count"							VALUE = "{ miva_array_insert_ref( l.items, l.basketitem, -1 ) }">

		<MvASSIGN NAME = "l.discount_state:item_quantity"		VALUE = "{ l.discount_state:item_quantity + l.basketitem:quantity }">
		<MvASSIGN NAME = "l.discount_state:item_price"			VALUE = "{ l.discount_state:item_price + l.basketitem:total }">
		<MvASSIGN NAME = "l.discount_state:item_weight"			VALUE = "{ l.discount_state:item_weight + ( l.basketitem:total_weight * l.basketitem:quantity ) }">

		<MvEVAL EXPR = "{ DiscountState_Increment_Item_Product_Totals( l.discount_state, l.basketitem ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:item_price + l.discount_state:charge_price }">
	<MvASSIGN NAME = "l.discount_state:excluded_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:cancelled_price"			VALUE = 0.00>

	<MvASSIGN NAME = "l.discount_state:coupon_lookup"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state:coupon_count"			VALUE = "{ [ g.Feature_Filename_PGR_DB ].CouponList_Load_Basket( l.basket:basket_id, l.discount_state:coupons ) }">

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.coupon" ARRAY = "l.discount_state:coupons" COUNT = "{ l.discount_state:coupon_count }">
		<MvASSIGN NAME = "l.coupon:total"						VALUE = 0>
		<MvASSIGN NAME = "l.coupon:shipping"					VALUE = 0>
		<MvASSIGN NAME = "l.coupon:quantity"					VALUE = 0>
		<MvASSIGN NAME = "l.null"								VALUE = "{ miva_array_copy_ref( l.discount_state:coupons, l.pos, 1, l.discount_state:coupon_lookup, l.coupon:id ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.discount_state:discount_totals"			VALUE = "">

	<MvFOREACH ITERATOR = "l.basketdiscounttotal" ARRAY = "l.basketdiscounttotals" COUNT = "{ [ g.Feature_Filename_PGR_DB ].BasketDiscountTotalList_Load_Basket_Persistent( l.basket:basket_id, l.basketdiscounttotals ) }">
		<MvASSIGN NAME = "l.basketdiscounttotal:coupon_id"		VALUE = 0>
		<MvASSIGN NAME = "l.basketdiscounttotal:total"			VALUE = 0.00>

		<MvASSIGN NAME = "l.discount_state:discount_totals" 	INDEX = "{ l.basketdiscounttotal:pgrp_id }" VALUE = "{ l.basketdiscounttotal }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_CreateFromOrder" PARAMETERS = "order var, discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state"							VALUE = "">
	<MvASSIGN NAME = "l.discount_state:order"					VALUE = "{ l.order }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].DiscountOptions_Load_Cached( l.discount_state:options ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.discount_state:item_count"				VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:charge_count"			VALUE = "{ [ g.Module_Library_DB ].OrderChargeList_Load_Order( l.order:id, l.discount_state:charges ) }">

	<MvASSIGN NAME = "l.discount_state:charge_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:discount_charge_total"	VALUE = 0.00>

	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.discount_state:charges" COUNT = "{ l.discount_state:charge_count }">
		<MvASSIGN NAME = "l.charge:undiscounted_amount"			VALUE = "{ l.charge:amount }">
		<MvASSIGN NAME = "l.charge:undiscounted_disp_amt"		VALUE = "{ l.charge:disp_amt }">

		<MvIF EXPR = "{ l.charge:type EQ 'DISCOUNT' }">
			<MvASSIGN NAME = "l.charge:deleted"					VALUE = 1>
		<MvELSE>
			<MvASSIGN NAME = "l.discount_state:charge_price"	VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.discount_state:item_quantity"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:item_price"				VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:item_weight"				VALUE = 0.00>

	<MvASSIGN NAME = "l.discount_state:excluded_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:cancelled_price"			VALUE = 0.00>

	<MvREFERENCE NAME = "l.items"		VARIABLE = "l.discount_state:items">
	<MvREFERENCE NAME = "l.item_count"	VARIABLE = "l.discount_state:item_count">

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ [ g.Module_Library_DB ].OrderItemList_Load_Order( l.order:id, l.orderitems ) }">
		<MvCOMMENT>
		|
		| Returned (or RMA Issued) items are included in total calculations, etc... but are not discounted
		| depending on the repricerma setting.
		|
		| Cancelled items are never included in total calculation.  If they are configured to be considered when
		| repricing the order (repricecan), their price is explicitly removed from the overall total when the
		| order total is calculated.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.orderitem:status EQ 300 }">
			<MvIF EXPR = "{ l.discount_state:options:repricecan }">		<MvFOREACHCONTINUE>
			<MvELSE>													<MvASSIGN NAME = "l.orderitem:excluded" VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.orderitem:status EQ 500 }">				<MvASSIGN NAME = "l.orderitem:excluded" VALUE = "{ l.discount_state:options:repricerma EQ 'authorized' }">
		<MvELSEIF EXPR = "{ l.orderitem:status EQ 600 }">				<MvASSIGN NAME = "l.orderitem:excluded" VALUE = "{ ( l.discount_state:options:repricerma EQ 'authorized' ) OR
																														   ( l.discount_state:options:repricerma EQ 'received' ) }">
		<MvELSE>														<MvASSIGN NAME = "l.orderitem:excluded" VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.orderitem:excluded }">
			<MvASSIGN NAME = "l.orderitem:discount_count"		VALUE = "{ [ g.Module_Library_DB ].OrderItemDiscountList_Load_Line( l.orderitem:line_id, l.orderitem:discounts ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.orderitem:discount_count"		VALUE = 0>

			<MvIF EXPR = "{ l.orderitem:price NE l.orderitem:base_price }">
				<MvCOMMENT>
				|
				| Any difference between price and base_price that is not recorded in sNN_OrderItemDiscounts
				| is retained for backwards compatibility with modules that directly modify price
				|
				</MvCOMMENT>

				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItemDiscount_Total_Line( l.orderitem:line_id, l.line_discount_total ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.orderitem:price"			VALUE = "{ l.orderitem:base_price - ( l.orderitem:base_price - l.orderitem:price - l.line_discount_total ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.orderitem:total_price"				VALUE = "{ l.orderitem:price }">
		<MvASSIGN NAME = "l.orderitem:total_weight"				VALUE = "{ l.orderitem:weight }">
		<MvASSIGN NAME = "l.orderitem:option_count"				VALUE = "{ [ g.Module_Library_DB ].OrderOptionList_Load_Line( l.orderitem:line_id, l.orderitem:options ) }">

		<MvFOREACH ITERATOR = "l.orderoption" ARRAY = "l.orderitem:options" COUNT = "{ l.orderitem:option_count }">
			<MvIF EXPR = "{ l.orderitem:excluded }">
				<MvASSIGN NAME = "l.orderoption:discount_count"	VALUE = "{ [ g.Module_Library_DB ].OrderOptionDiscountList_Load_LineOption_ID( l.orderoption:id, l.orderoption:discounts ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.orderoption:discount_count"	VALUE = 0>

				<MvIF EXPR = "{ l.orderoption:price NE l.orderoption:base_price }">
					<MvCOMMENT>
					|
					| Any difference between price and base_price that is not recorded in sNN_OrderOptionDiscounts
					| is retained for backwards compatibility with modules that directly modify price
					|
					</MvCOMMENT>

					<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOptionDiscount_Total_LineOption_ID( l.orderoption:id, l.option_discount_total ) }">
						<MvFUNCTIONRETURN VALUE = 0>
					</MvIF>

					<MvASSIGN NAME = "l.orderoption:price"		VALUE = "{ l.orderoption:base_price - ( l.orderoption:base_price - l.orderoption:price - l.option_discount_total ) }">
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.orderitem:total_price"			VALUE = "{ l.orderitem:total_price + l.orderoption:price }">
			<MvASSIGN NAME = "l.orderitem:total_weight"			VALUE = "{ l.orderitem:total_weight + l.orderoption:price }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.orderitem:total"					VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.orderitem:total_price * l.orderitem:quantity ) }">

		<MvASSIGN NAME = "l.item_count"							VALUE = "{ miva_array_insert_ref( l.items, l.orderitem, -1 ) }">

		<MvIF EXPR = "{ l.orderitem:status EQ 300 }">
			<MvASSIGN NAME = "l.discount_state:cancelled_price"	VALUE = "{ l.discount_state:cancelled_price + ( l.orderitem:total_price * l.orderitem:quantity ) }">
		</MvIF>

		<MvIF EXPR = "{ l.orderitem:excluded }">
			<MvASSIGN NAME = "l.discount_state:excluded_price"	VALUE = "{ l.discount_state:excluded_price + ( l.orderitem:total_price * l.orderitem:quantity ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.discount_state:item_quantity"	VALUE = "{ l.discount_state:item_quantity + l.orderitem:quantity }">
			<MvASSIGN NAME = "l.discount_state:item_price"		VALUE = "{ l.discount_state:item_price + l.orderitem:total }">
			<MvASSIGN NAME = "l.discount_state:item_weight"		VALUE = "{ l.discount_state:item_weight + ( l.orderitem:total_weight * l.orderitem:quantity ) }">

			<MvASSIGN NAME = "l.product"						VALUE = "">

			<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant_WithOptions( l.orderitem, l.orderitem:options, l.orderitem:option_count, l.product, l.orderitem:variant_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.orderitem:product_id"			VALUE = "{ l.product:id }">

			<MvEVAL EXPR = "{ DiscountState_Increment_Item_Product_Totals( l.discount_state, l.orderitem ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:item_price + l.discount_state:charge_price }">

	<MvASSIGN NAME = "l.discount_state:coupon_lookup"			VALUE = "">
	<MvASSIGN NAME = "l.discount_state:coupon_count"			VALUE = "{ [ g.Feature_Filename_PGR_DB ].CouponList_Load_Order( l.order:id, l.discount_state:coupons ) }">

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.coupon" ARRAY = "l.discount_state:coupons" COUNT = "{ l.discount_state:coupon_count }">
		<MvASSIGN NAME = "l.coupon:total"						VALUE = 0>
		<MvASSIGN NAME = "l.coupon:shipping"					VALUE = 0>
		<MvASSIGN NAME = "l.coupon:quantity"					VALUE = 0>
		<MvASSIGN NAME = "l.null"								VALUE = "{ miva_array_copy_ref( l.discount_state:coupons, l.pos, 1, l.discount_state:coupon_lookup, l.coupon:id ) }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.discount_state:discount_totals"			VALUE = "">

	<MvFOREACH ITERATOR = "l.orderdiscounttotal" ARRAY = "l.orderdiscounttotals" COUNT = "{ [ g.Feature_Filename_PGR_DB ].OrderDiscountTotalList_Load_Order( l.order:id, l.orderdiscounttotals ) }">
		<MvASSIGN NAME = "l.orderdiscounttotal:total"			VALUE = 0.00>

		<MvASSIGN NAME = "l.discount_state:discount_totals" 	INDEX = "{ l.orderdiscounttotal:pgrp_id }" VALUE = "{ l.orderdiscounttotal }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_SetCustomerInformationFromBasket" PARAMETERS = "basket var, discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state:basket" VALUE = "{ l.basket }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_CustomerInformation" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ISNULL l.discount_state:basket }">		<MvREFERENCE NAME = "l.info" VARIABLE = "l.discount_state:basket">
	<MvELSEIF EXPR = "{ NOT ISNULL l.discount_state:order }">	<MvREFERENCE NAME = "l.info" VARIABLE = "l.discount_state:order">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "">
	</MvIF>

	<MvASSIGN NAME = "l.custinfo:cust_id"		VALUE = "{ l.info:cust_id }">

	<MvASSIGN NAME = "l.custinfo:ship_fname"	VALUE = "{ l.info:ship_fname }">
	<MvASSIGN NAME = "l.custinfo:ship_lname"	VALUE = "{ l.info:ship_lname }">
	<MvASSIGN NAME = "l.custinfo:ship_email"	VALUE = "{ l.info:ship_email }">
	<MvASSIGN NAME = "l.custinfo:ship_comp"		VALUE = "{ l.info:ship_comp }">
	<MvASSIGN NAME = "l.custinfo:ship_phone"	VALUE = "{ l.info:ship_phone }">
	<MvASSIGN NAME = "l.custinfo:ship_fax"		VALUE = "{ l.info:ship_fax }">
	<MvASSIGN NAME = "l.custinfo:ship_addr1"	VALUE = "{ l.info:ship_addr }">
	<MvASSIGN NAME = "l.custinfo:ship_addr2"	VALUE = "{ l.info:ship_addr2 }">
	<MvASSIGN NAME = "l.custinfo:ship_city"		VALUE = "{ l.info:ship_city }">
	<MvASSIGN NAME = "l.custinfo:ship_state"	VALUE = "{ l.info:ship_state }">
	<MvASSIGN NAME = "l.custinfo:ship_zip"		VALUE = "{ l.info:ship_zip }">
	<MvASSIGN NAME = "l.custinfo:ship_cntry"	VALUE = "{ l.info:ship_cntry }">
	<MvASSIGN NAME = "l.custinfo:ship_res"		VALUE = "{ l.info:ship_res }">

	<MvASSIGN NAME = "l.custinfo:bill_fname"	VALUE = "{ l.info:bill_fname }">
	<MvASSIGN NAME = "l.custinfo:bill_lname"	VALUE = "{ l.info:bill_lname }">
	<MvASSIGN NAME = "l.custinfo:bill_email"	VALUE = "{ l.info:bill_email }">
	<MvASSIGN NAME = "l.custinfo:bill_comp"		VALUE = "{ l.info:bill_comp }">
	<MvASSIGN NAME = "l.custinfo:bill_phone"	VALUE = "{ l.info:bill_phone }">
	<MvASSIGN NAME = "l.custinfo:bill_fax"		VALUE = "{ l.info:bill_fax }">
	<MvASSIGN NAME = "l.custinfo:bill_addr1"	VALUE = "{ l.info:bill_addr }">
	<MvASSIGN NAME = "l.custinfo:bill_addr2"	VALUE = "{ l.info:bill_addr2 }">
	<MvASSIGN NAME = "l.custinfo:bill_city"		VALUE = "{ l.info:bill_city }">
	<MvASSIGN NAME = "l.custinfo:bill_state"	VALUE = "{ l.info:bill_state }">
	<MvASSIGN NAME = "l.custinfo:bill_zip"		VALUE = "{ l.info:bill_zip }">
	<MvASSIGN NAME = "l.custinfo:bill_cntry"	VALUE = "{ l.info:bill_cntry }">

	<MvFUNCTIONRETURN VALUE = "{ l.custinfo }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Increment_Item_Product_Totals" PARAMETERS = "discount_state var, item var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item:product_id LE 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ DiscountState_Increment_Product_Totals( l.discount_state, l.item:product_id, l.item:variant_id, l.item:subterm_id, l.item:quantity, l.item:total, l.item:total_weight * l.item:quantity ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ProductVariantPricing_Load_Variant( l.item:product_id, l.item:variant_id, l.item:productvariantpricing ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.item:part_product_count" VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.item:product_id, l.item:variant_id, l.item:part_products ) }">

	<MvFOREACH ITERATOR = "l.part_product" ARRAY = "l.item:part_products" COUNT = "{ l.item:part_product_count }">
		<MvEVAL EXPR = "{ DiscountState_Increment_Product_Totals( l.discount_state, l.part_product:id, 0, 0, l.item:quantity * l.part_product:quantity, 0.00, 0.00 ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Increment_Product_Totals" PARAMETERS = "discount_state var, product_id, variant_id, subterm_id, quantity, total_price, total_weight" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.discount_state:products">
		<MvDIMENSION INDEX = "{ l.product_id }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.product:product_id"				VALUE = "{ l.product_id }">
	<MvASSIGN NAME = "l.product:quantity"				VALUE = "{ l.product:quantity + l.quantity }">
	<MvASSIGN NAME = "l.product:total_price"			VALUE = "{ l.product:total_price + l.total_price }">
	<MvASSIGN NAME = "l.product:total_weight"			VALUE = "{ l.product:total_weight + l.total_weight }">

	<MvIF EXPR = "{ l.variant_id GE 0 }">
		<MvREFERENCEARRAY NAME = "l.variant" VARIABLE = "l.discount_state:products">
			<MvDIMENSION INDEX = "{ l.product_id }">
			<MvMEMBER NAME = "variants">
			<MvDIMENSION INDEX = "{ l.variant_id + 1 }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.variant:variant_id"			VALUE = "{ l.variant_id }">
		<MvASSIGN NAME = "l.variant:quantity"			VALUE = "{ l.variant:quantity + l.quantity }">
		<MvASSIGN NAME = "l.variant:total_price"		VALUE = "{ l.variant:total_price + l.total_price }">
		<MvASSIGN NAME = "l.variant:total_weight"		VALUE = "{ l.variant:total_weight + l.total_weight }">
	</MvIF>

	<MvIF EXPR = "{ l.subterm_id GT 0 }">
		<MvASSIGNARRAY NAME = "l.discount_state:products" VALUE = 1>
			<MvDIMENSION INDEX = "{ l.product_id }">
			<MvMEMBER NAME = "subterms">
			<MvDIMENSION INDEX = "{ l.subterm_id }">
		</MvASSIGNARRAY>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Increment_Discount_Total" PARAMETERS = "discount_state var, amount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.discount_state:discount:coupon_id GT 0 }">
		<MvREFERENCEARRAY NAME = "l.coupon" VARIABLE = "l.discount_state">
			<MvMEMBER NAME = "coupon_lookup">
			<MvDIMENSION INDEX = "{ l.discount_state:discount:coupon_id }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.coupon:total"		VALUE = "{ l.coupon:total + l.amount }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.discount_total" VARIABLE = "l.discount_state">
		<MvMEMBER NAME = "discount_totals">
		<MvDIMENSION INDEX = "{ l.discount_state:discount:pgrp_id }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.discount_total:total"	VALUE = "{ l.discount_total:total + l.amount }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Increment_Discount_Quantity" PARAMETERS = "discount_state var, quantity" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.discount_state:discount:coupon_id GT 0 }">
		<MvREFERENCEARRAY NAME = "l.coupon" VARIABLE = "l.discount_state">
			<MvMEMBER NAME = "coupon_lookup">
			<MvDIMENSION INDEX = "{ l.discount_state:discount:coupon_id }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.coupon:quantity"	VALUE = "{ l.coupon:quantity + l.quantity }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Decrement_Item_Total" PARAMETERS = "discount_state var, item var, total_price" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state:total_price"					VALUE = "{ l.discount_state:total_price - l.total_price }">

	<MvIF EXPR = "{ l.item:product_id GT 0 }">
		<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.discount_state:products">
			<MvDIMENSION INDEX = "{ l.item:product_id }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.product:total_price"					VALUE = "{ l.product:total_price - l.total_price }">

		<MvIF EXPR = "{ l.item:qualifying }">
			<MvASSIGN NAME = "l.discount_state:qualifying_price"	VALUE = "{ l.discount_state:qualifying_price - l.total_price }">

			<MvIF EXPR = "{ l.product:qualifying }">
				<MvASSIGN NAME = "l.product:qualifying_price"		VALUE = "{ l.product:qualifying_price - l.total_price }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:eligible }">
			<MvASSIGN NAME = "l.discount_state:eligible_price"		VALUE = "{ l.discount_state:eligible_price - l.total_price }">

			<MvIF EXPR = "{ l.product:eligible }">
				<MvASSIGN NAME = "l.product:eligible_price"			VALUE = "{ l.product:eligible_price - l.total_price }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:variant_id GE 0 }">
			<MvREFERENCEARRAY NAME = "l.variant" VARIABLE = "l.discount_state:products">
				<MvDIMENSION INDEX = "{ l.item:product_id }">
				<MvMEMBER NAME = "variants">
				<MvDIMENSION INDEX = "{ l.item:variant_id + 1 }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.variant:total_price"				VALUE = "{ l.variant:total_price - l.total_price }">

			<MvIF EXPR = "{ l.item:qualifying AND l.variant:qualifying }">
				<MvASSIGN NAME = "l.variant:qualifying_price"		VALUE = "{ l.variant:qualifying_price - l.total_price }">
			</MvIF>

			<MvIF EXPR = "{ l.item:eligible AND l.variant:eligible }">
				<MvASSIGN NAME = "l.variant:eligible_price"			VALUE = "{ l.variant:eligible_price - l.total_price }">
			</MvIF>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Add_Item_Discount" PARAMETERS = "discount_state var, item var, amount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_array_search( l.item:discounts, 1, l.existing_discount, 'l.existing_discount:pgrp_id EQ l.discount_state:discount:pgrp_id' ) }">
		<MvASSIGN NAME = "l.existing_discount:discount"	VALUE = "{ l.existing_discount:discount + l.amount }">
	<MvELSE>
		<MvASSIGN NAME = "l.discount"					VALUE = "{ l.discount_state:discount }">
		<MvASSIGN NAME = "l.discount:line_id"			VALUE = "{ l.item:line_id }">
		<MvASSIGN NAME = "l.discount:discount"			VALUE = "{ l.amount }">

		<MvASSIGN NAME = "l.item:discount_count"		VALUE = "{ miva_array_insert( l.item:discounts, l.discount, -1 ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pre_discount_total"				VALUE = "{ l.item:total }">

	<MvASSIGN NAME = "l.item:modified"					VALUE = 1>
	<MvASSIGN NAME = "l.item:price"						VALUE = "{ l.item:price - l.amount }">
	<MvASSIGN NAME = "l.item:eligible_price"			VALUE = "{ l.item:eligible_price - l.amount }">
	<MvASSIGN NAME = "l.item:total_price"				VALUE = "{ l.item:total_price - l.amount }">
	<MvASSIGN NAME = "l.item:total"						VALUE = "{ l.item:price }">

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvASSIGN NAME = "l.item:total"					VALUE = "{ l.item:total + l.option:price }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.item:total"						VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.item:total * l.item:quantity ) }">
	<MvASSIGN NAME = "l.discount_state:item_price"		VALUE = "{ l.discount_state:item_price - ( l.amount * l.item:quantity ) }">

	<MvIF EXPR = "{ l.item:group_id GT 0 }">
		<MvASSIGNARRAY NAME = "l.discount_state" VALUE = 1>
			<MvMEMBER NAME = "group_discount_map">
			<MvDIMENSION INDEX = "{ l.item:group_id }">
			<MvDIMENSION INDEX = "{ l.discount_state:discount:pgrp_id }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvASSIGNARRAY NAME = "l.item" VALUE = 1>
		<MvMEMBER NAME = "discount_map">
		<MvDIMENSION INDEX = "{ l.discount_state:discount:pgrp_id }">
	</MvASSIGNARRAY>

	<MvEVAL EXPR = "{ DiscountState_Decrement_Item_Total( l.discount_state, l.item, ( l.pre_discount_total - l.item:total ) ) }">
	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, l.amount * l.item:quantity ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Add_Option_Discount" PARAMETERS = "discount_state var, item var, option var, amount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_array_search( l.option:discounts, 1, l.existing_discount, 'l.existing_discount:pgrp_id EQ l.discount_state:discount:pgrp_id' ) }">
		<MvASSIGN NAME = "l.existing_discount:discount"	VALUE = "{ l.existing_discount:discount + l.amount }">
	<MvELSE>
		<MvASSIGN NAME = "l.discount"					VALUE = "{ l.discount_state:discount }">
		<MvASSIGN NAME = "l.discount:line_id"			VALUE = "{ l.item:line_id }">
		<MvASSIGN NAME = "l.discount:attr_id"			VALUE = "{ l.option:attr_id }">
		<MvASSIGN NAME = "l.discount:attmpat_id"		VALUE = "{ l.option:attmpat_id }">
		<MvASSIGN NAME = "l.discount:discount"			VALUE = "{ l.amount }">

		<MvASSIGN NAME = "l.option:discount_count"		VALUE = "{ miva_array_insert( l.option:discounts, l.discount, -1 ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pre_discount_total"				VALUE = "{ l.item:total }">

	<MvASSIGN NAME = "l.item:modified"					VALUE = 1>
	<MvASSIGN NAME = "l.item:total_price"				VALUE = "{ l.item:total_price - l.amount }">
	<MvASSIGN NAME = "l.item:total"						VALUE = "{ l.item:price }">

	<MvASSIGN NAME = "l.option:modified"				VALUE = 1>
	<MvASSIGN NAME = "l.option:price"					VALUE = "{ l.option:price - l.amount }">

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvASSIGN NAME = "l.item:total"					VALUE = "{ l.item:total + l.option:price }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.item:total"						VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.item:total * l.item:quantity ) }">
	<MvASSIGN NAME = "l.discount_state:item_price"		VALUE = "{ l.discount_state:item_price - ( l.amount * l.item:quantity ) }">

	<MvIF EXPR = "{ l.item:group_id GT 0 }">
		<MvASSIGNARRAY NAME = "l.discount_state" VALUE = 1>
			<MvMEMBER NAME = "group_discount_map">
			<MvDIMENSION INDEX = "{ l.item:group_id }">
			<MvDIMENSION INDEX = "{ l.discount_state:discount:pgrp_id }">
		</MvASSIGNARRAY>
	</MvIF>

	<MvASSIGNARRAY NAME = "l.item" VALUE = 1>
		<MvMEMBER NAME = "discount_map">
		<MvDIMENSION INDEX = "{ l.discount_state:discount:pgrp_id }">
	</MvASSIGNARRAY>

	<MvEVAL EXPR = "{ DiscountState_Decrement_Item_Total( l.discount_state, l.item, ( l.pre_discount_total - l.item:total ) ) }">
	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, l.amount * l.item:quantity ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_MarkEligible_PriceGroup" PARAMETERS = "discount_state var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state:charge:module_id"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:charge:tax_exempt"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:charge:type"					VALUE = "DISCOUNT">
	<MvASSIGN NAME = "l.discount_state:discount:pgrp_id"			VALUE = "{ l.pricegroup:id }">
	<MvASSIGN NAME = "l.discount_state:discount:priority"			VALUE = "{ l.pricegroup:priority }">
	<MvASSIGN NAME = "l.discount_state:discount:display"			VALUE = "{ l.pricegroup:display }">
	<MvASSIGN NAME = "l.discount_state:discount:coupon_id"			VALUE = "{ l.pricegroup:coupon_id }">

	<MvIF EXPR = "{ NOT miva_element_exists( l.discount_state:discount_totals, l.pricegroup:id ) }">
		<MvREFERENCEARRAY NAME = "l.discount_total" VARIABLE = "l.discount_state">
			<MvMEMBER NAME = "discount_totals">
			<MvDIMENSION INDEX = "{ l.pricegroup:id }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.discount_total:pgrp_id"					VALUE = "{ l.pricegroup:id }">

		<MvIF EXPR = "{ ISNULL l.pricegroup:coupon_id }">
			<MvASSIGN NAME = "l.discount_total:coupon_id"			VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.discount_total:coupon_id"			VALUE = "{ l.pricegroup:coupon_id }">
		</MvIF>

		<MvASSIGN NAME = "l.discount_total:name"					VALUE = "{ l.pricegroup:name }">
		<MvASSIGN NAME = "l.discount_total:priority"				VALUE = "{ l.pricegroup:priority }">
		<MvASSIGN NAME = "l.discount_total:descrip"					VALUE = "{ l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.discount_total:total"					VALUE = 0.00>
		<MvASSIGN NAME = "l.discount_total:persist" 				VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.discount_state:charge:descrip"			VALUE = "{ l.pricegroup:name }">
		<MvASSIGN NAME = "l.discount_state:discount:descrip"		VALUE = "{ l.pricegroup:name }">
	<MvELSE>
		<MvASSIGN NAME = "l.discount_state:charge:descrip"			VALUE = "{ l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.discount_state:discount:descrip"		VALUE = "{ l.pricegroup:descrip }">
	</MvIF>

	<MvASSIGN NAME = "l.discount_state:eligible_quantity"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:eligible_price"				VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:eligible_weight"				VALUE = 0.00>

	<MvASSIGN NAME = "l.discount_state:qualifying_quantity"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:qualifying_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:qualifying_weight"			VALUE = 0.00>

	<MvCOMMENT>
	|
	| Item eligibility and price group qualification are tied to price group product assignment,
	| with items eliminated based on inter-price group exclusions.
	|
	| Price Groups that do not implement the item capability consider all products to be eligible,
	| subject to inter-price group exclusions.  This allows item-level exclusions to apply to basket-level
	| calculations.
	|
	</MvCOMMENT>

	<MvFOREACH INDEX = "l.product_id" ITERATOR = "l.product" ARRAY = "l.discount_state:products">
		<MvIF EXPR = "{ ( l.pricegroup:capabilities:eligibility NE '' ) AND
						( l.pricegroup:capabilities:eligibility NE 'module' ) AND
						( l.pricegroup:capabilities:eligibility NE 'builtin' ) }">
			<MvASSIGN NAME = "l.product:eligible"					VALUE = 0>
		<MvELSEIF EXPR = "{ ( l.pricegroup:capabilities:eligibility EQ '' ) AND ( NOT l.pricegroup:capabilities:items ) }">
			<MvASSIGN NAME = "l.product:eligible"					VALUE = 1>
		<MvELSEIF EXPR = "{ l.pricegroup:capabilities:eligibility EQ 'module' }">
			<MvASSIGN NAME = "l.product:eligible"					VALUE = 1>
		<MvELSEIF EXPR = "{ NOT DiscountState_PriceGroupProduct_Assigned( l.discount_state, l.pricegroup, l.product_id, l.product:eligible ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.product:eligible_quantity"				VALUE = 0>
		<MvASSIGN NAME = "l.product:eligible_price"					VALUE = 0.00>
		<MvASSIGN NAME = "l.product:eligible_weight"				VALUE = 0.00>

		<MvIF EXPR = "{ NOT ( l.pricegroup:capabilities:qualifying OR l.pricegroup:qmn_subtot OR l.pricegroup:qmx_subtot OR l.pricegroup:qmn_quan OR l.pricegroup:qmx_quan OR l.pricegroup:qmn_weight OR l.pricegroup:qmx_weight ) }">
			<MvASSIGN NAME = "l.product:qualifying"					VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT DiscountState_PriceGroupQualifyingProduct_Assigned( l.discount_state, l.pricegroup, l.product_id, l.product:qualifying ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.product:qualifying_quantity"			VALUE = 0>
		<MvASSIGN NAME = "l.product:qualifying_price"				VALUE = 0.00>
		<MvASSIGN NAME = "l.product:qualifying_weight"				VALUE = 0.00>

		<MvASSIGN NAME = "l.product:qualifying_variants"			VALUE = "{ l.product:qualifying }">
		<MvASSIGN NAME = "l.product:eligible_variants"				VALUE = "{ l.product:eligible }">

		<MvFOREACH ITERATOR = "l.variant" ARRAY = "l.product:variants">
			<MvASSIGN NAME = "l.variant:qualifying"					VALUE = "{ l.product:qualifying }">
			<MvASSIGN NAME = "l.variant:eligible"					VALUE = "{ l.product:eligible }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvASSIGN NAME = "l.item:eligible"							VALUE = 0>
		<MvASSIGN NAME = "l.item:qualifying"						VALUE = 0>
		<MvASSIGN NAME = "l.item:eligible_price"					VALUE = 0.00>

		<MvIF EXPR = "{ l.item:product_id GT 0 }">
			<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.discount_state:products">
				<MvDIMENSION INDEX = "{ l.item:product_id }">
			</MvREFERENCEARRAY>
		<MvELSEIF EXPR = "{ l.pricegroup:capabilities:eligibility EQ 'module' }">
			<MvASSIGN NAME = "l.non_product"						VALUE = "">
			<MvASSIGN NAME = "l.non_product:eligible"				VALUE = 0>

			<MvREFERENCE NAME = "l.product" VARIABLE = "l.non_product">
		<MvELSEIF EXPR = "{ l.pricegroup:capabilities:items OR ( l.pricegroup:capabilities:eligibility EQ 'builtin' ) }">
			<MvFOREACHCONTINUE>
		<MvELSE>
			<MvASSIGN NAME = "l.non_product"						VALUE = "">
			<MvASSIGN NAME = "l.non_product:eligible"				VALUE = 1>

			<MvREFERENCE NAME = "l.product" VARIABLE = "l.non_product">
		</MvIF>

		<MvIF EXPR = "{ l.item:variant_id LT 0 }">
			<MvASSIGN NAME = "l.invalid_variant"					VALUE = "">
			<MvREFERENCE NAME = "l.variant" VARIABLE = "l.invalid_variant">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.variant" VARIABLE = "l.product:variants">
				<MvDIMENSION INDEX = "{ l.item:variant_id + 1 }">
			</MvREFERENCEARRAY>
		</MvIF>

		<MvCOMMENT>
		|
		| Inventory variants are considered qualifying if:
		|	Their master product is qualifying
		|				  - or -
		|	All of the part products are qualifying
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ( NOT l.variant:qualifying ) AND l.item:part_product_count }">
			<MvASSIGN NAME = "l.variant:qualifying"					VALUE = 1>

			<MvFOREACH ITERATOR = "l.item_part_product" ARRAY = "l.item:part_products" COUNT = "{ l.item:part_product_count }">
				<MvREFERENCEARRAY NAME = "l.part_product" VARIABLE = "l.discount_state:products">
					<MvDIMENSION INDEX = "{ l.item_part_product:id }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ NOT l.part_product:qualifying }">
					<MvASSIGN NAME = "l.variant:qualifying"			VALUE = 0>
					<MvFOREACHSTOP>
				</MvIF>
			</MvFOREACH>

			<MvIF EXPR = "{ l.variant:qualifying }">
				<MvASSIGN NAME = "l.product:qualifying_variants"	VALUE = 1>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:excluded }">
			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ DiscountState_PriceGroup_ExcludedForItem( l.discount_state, l.pricegroup, l.item ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.product:qualifying OR l.variant:qualifying }">
			<MvASSIGN NAME = "l.item:qualifying"					VALUE = 1>
		<MvELSEIF EXPR = "{ ( l.pricegroup:capabilities:qualifying OR l.pricegroup:qmn_subtot OR l.pricegroup:qmx_subtot OR l.pricegroup:qmn_quan OR l.pricegroup:qmx_quan OR l.pricegroup:qmn_weight OR l.pricegroup:qmx_weight ) AND
							( l.item:product_id GT 0 ) AND ( l.item:subterm_id GT 0 ) }">
			<MvIF EXPR = "{ NOT DiscountState_PriceGroupQualifyingProductSubscriptionTerm_Assigned( l.discount_state, l.pricegroup, l.item:product_id, l.item:subterm_id, l.item:qualifying ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:upsold }">
			<MvASSIGN NAME = "l.item:qualifying"					VALUE = "{ l.item:qualifying AND l.discount_state:options:usl_qual }">
		</MvIF>

		<MvASSIGN NAME = "l.item:eligible_price"					VALUE = "{ l.item:total_price }">

		<MvIF EXPR = "{ l.pricegroup:capabilities:eligibility EQ 'module' }">
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Item_Eligible( l.pricegroup:module, l.pricegroup, l.discount_state, l.item, l.item:eligible ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| Check subscription items only if they are not already covered by a product-level assignment, except in the
			| case of exclusion price groups, in which case a subscription-level exclusion could override a product-level
			| inclusion.
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ ( l.item:product_id GT 0 ) AND ( l.item:subterm_id GT 0 ) AND
							( ( l.product:eligible AND l.pricegroup:exclusion ) OR ( ( NOT l.product:eligible ) AND ( NOT l.pricegroup:exclusion ) ) ) }">
				<MvIF EXPR = "{ NOT DiscountState_PriceGroupProductSubscriptionTerm_Assigned( l.discount_state, l.pricegroup, l.item:product_id, l.item:subterm_id, l.item:master_eligible ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.item:eligible"					VALUE = "{ l.item:master_eligible }">
			<MvELSE>
				<MvASSIGN NAME = "l.item:master_eligible"			VALUE = "{ l.product:eligible }">
				<MvASSIGN NAME = "l.item:eligible"					VALUE = "{ l.product:eligible }">
			</MvIF>

			<MvCOMMENT>
			|
			| Inventory variants priced by sum-of-parts follow these rules for inclusion price groups:
			|
			|	If the master product is eligible, its eligible_price is the same as its current price
			|	Otherwise, if any part products are eligible, the master product is eligible, but its eligible_price reflects only the eligible parts
			|
			|	Inventory variants with pricing controlled by the master product or specified at the variant level may be promoted to be eligible
			|	if all of the part products are eligible.
			|
			| Exclusion price groups ignore part products entirely.
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.item:upsold }">
				<MvASSIGN NAME = "l.item:eligible"						VALUE = "{ l.item:eligible AND ( l.discount_state:options:usl_disc OR ( NOT l.pricegroup:capabilities:items ) ) }">
			<MvELSEIF EXPR = "{ NOT l.pricegroup:exclusion }">
				<MvIF EXPR = "{ l.item:productvariantpricing:method EQ 2 }">
					<MvASSIGN NAME = "l.have_eligible_part"				VALUE = 0>

					<MvFOREACH ITERATOR = "l.item_part_product" ARRAY = "l.item:part_products" COUNT = "{ l.item:part_product_count }">
						<MvREFERENCEARRAY NAME = "l.part_product" VARIABLE = "l.discount_state:products">
							<MvDIMENSION INDEX = "{ l.item_part_product:id }">
						</MvREFERENCEARRAY>

						<MvIF EXPR = "{ l.part_product:eligible }">
							<MvASSIGN NAME = "l.have_eligible_part"		VALUE = 1>
						<MvELSEIF EXPR = "{ NOT l.item:eligible }">
							<MvASSIGN NAME = "l.item:eligible_price"	VALUE = "{ l.item:eligible_price - ( l.item_part_product:price * l.item_part_product:quantity ) }">
						</MvIF>
					</MvFOREACH>

					<MvIF EXPR = "{ l.have_eligible_part }">
						<MvASSIGN NAME = "l.item:eligible"				VALUE = 1>
					</MvIF>

					<MvIF EXPR = "{ l.item:eligible_price LT 0 }">
						<MvASSIGN NAME = "l.item:eligible_price"		VALUE = 0.00>
					</MvIF>
				<MvELSEIF EXPR = "{ ( NOT l.item:eligible ) AND l.item:part_product_count }">
					<MvASSIGN NAME = "l.item:eligible"					VALUE = 1>

					<MvFOREACH ITERATOR = "l.item_part_product" ARRAY = "l.item:part_products" COUNT = "{ l.item:part_product_count }">
						<MvREFERENCEARRAY NAME = "l.part_product" VARIABLE = "l.discount_state:products">
							<MvDIMENSION INDEX = "{ l.item_part_product:id }">
						</MvREFERENCEARRAY>

						<MvIF EXPR = "{ NOT l.part_product:eligible }">
							<MvASSIGN NAME = "l.item:eligible"			VALUE = 0>
							<MvFOREACHSTOP>
						</MvIF>
					</MvFOREACH>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.variant:eligible"						VALUE = "{ l.item:eligible }">
		<MvIF EXPR = "{ l.variant:eligible }">
			<MvASSIGN NAME = "l.product:eligible_variants"			VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.item_total_price"						VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.item:total_price * l.item:quantity ) }">
		<MvASSIGN NAME = "l.item_eligible_price"					VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.item:eligible_price * l.item:quantity ) }">
		<MvASSIGN NAME = "l.item_total_weight"						VALUE = "{ l.item:total_weight * l.item:quantity }">

		<MvIF EXPR = "{ l.item:eligible }">
			<MvASSIGN NAME = "l.discount_state:eligible_quantity"	VALUE = "{ l.discount_state:eligible_quantity + l.item:quantity }">
			<MvASSIGN NAME = "l.discount_state:eligible_price"		VALUE = "{ l.discount_state:eligible_price + l.item_eligible_price }">
			<MvASSIGN NAME = "l.discount_state:eligible_weight"		VALUE = "{ l.discount_state:eligible_weight + l.item_total_weight }">

			<MvASSIGN NAME = "l.product:eligible_quantity"			VALUE = "{ l.product:eligible_quantity + l.item:quantity }">
			<MvASSIGN NAME = "l.product:eligible_price"				VALUE = "{ l.product:eligible_price + l.item_eligible_price }">
			<MvASSIGN NAME = "l.product:eligible_weight"			VALUE = "{ l.product:eligible_weight + l.item_total_weight }">

			<MvASSIGN NAME = "l.variant:eligible_quantity"			VALUE = "{ l.variant:eligible_quantity + l.item:quantity }">
			<MvASSIGN NAME = "l.variant:eligible_price"				VALUE = "{ l.variant:eligible_price + l.item_eligible_price }">
			<MvASSIGN NAME = "l.variant:eligible_weight"			VALUE = "{ l.variant:eligible_weight + l.item_total_weight }">
		</MvIF>

		<MvIF EXPR = "{ l.item:qualifying }">
			<MvASSIGN NAME = "l.discount_state:qualifying_quantity"	VALUE = "{ l.discount_state:qualifying_quantity + l.item:quantity }">
			<MvASSIGN NAME = "l.discount_state:qualifying_price"	VALUE = "{ l.discount_state:qualifying_price + l.item_total_price }">
			<MvASSIGN NAME = "l.discount_state:qualifying_weight"	VALUE = "{ l.discount_state:qualifying_weight + l.item_total_weight }">

			<MvIF EXPR = "{ l.product:qualifying }">
				<MvASSIGN NAME = "l.product:qualifying_quantity"	VALUE = "{ l.product:qualifying_quantity + l.item:quantity }">
				<MvASSIGN NAME = "l.product:qualifying_price"		VALUE = "{ l.product:qualifying_price + l.item_total_price }">
				<MvASSIGN NAME = "l.product:qualifying_weight"		VALUE = "{ l.product:qualifying_weight + l.item_total_weight }">
			</MvIF>

			<MvIF EXPR = "{ l.variant:qualifying }">
				<MvASSIGN NAME = "l.variant:qualifying_quantity"	VALUE = "{ l.variant:qualifying_quantity + l.item:quantity }">
				<MvASSIGN NAME = "l.variant:qualifying_price"		VALUE = "{ l.variant:qualifying_price + l.item_total_price }">
				<MvASSIGN NAME = "l.variant:qualifying_weight"		VALUE = "{ l.variant:qualifying_weight + l.item_total_weight }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_MarkQualifying_PriceGroup" PARAMETERS = "discount_state var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.discount_state:discount:pgrp_id"			VALUE = "{ l.pricegroup:id }">
	<MvASSIGN NAME = "l.discount_state:qualifying_quantity"			VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:qualifying_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:qualifying_weight"			VALUE = 0.00>

	<MvFOREACH INDEX = "l.product_id" ITERATOR = "l.product" ARRAY = "l.discount_state:products">
		<MvIF EXPR = "{ NOT ( l.pricegroup:capabilities:qualifying OR l.pricegroup:qmn_subtot OR l.pricegroup:qmx_subtot OR l.pricegroup:qmn_quan OR l.pricegroup:qmx_quan OR l.pricegroup:qmn_weight OR l.pricegroup:qmx_weight ) }">
			<MvASSIGN NAME = "l.product:qualifying"					VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ NOT DiscountState_PriceGroupQualifyingProduct_Assigned( l.discount_state, l.pricegroup, l.product_id, l.product:qualifying ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.product:qualifying_quantity"			VALUE = 0>
		<MvASSIGN NAME = "l.product:qualifying_price"				VALUE = 0.00>
		<MvASSIGN NAME = "l.product:qualifying_weight"				VALUE = 0.00>

		<MvASSIGN NAME = "l.product:qualifying_variants"			VALUE = "{ l.product:qualifying }">

		<MvFOREACH ITERATOR = "l.variant" ARRAY = "l.product:variants">
			<MvASSIGN NAME = "l.variant:qualifying"					VALUE = "{ l.product:qualifying }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvASSIGN NAME = "l.item:qualifying"						VALUE = 0>

		<MvIF EXPR = "{ l.item:product_id GT 0 }">
			<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.discount_state:products">
				<MvDIMENSION INDEX = "{ l.item:product_id }">
			</MvREFERENCEARRAY>
		</MvIF>

		<MvIF EXPR = "{ l.item:variant_id LT 0 }">
			<MvASSIGN NAME = "l.invalid_variant"					VALUE = "">
			<MvREFERENCE NAME = "l.variant" VARIABLE = "l.invalid_variant">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.variant" VARIABLE = "l.product:variants">
				<MvDIMENSION INDEX = "{ l.item:variant_id + 1 }">
			</MvREFERENCEARRAY>
		</MvIF>

		<MvCOMMENT>
		|
		| Inventory variants are considered qualifying if:
		|	Their master product is qualifying
		|				  - or -
		|	All of the part products are qualifying
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ( NOT l.variant:qualifying ) AND l.item:part_product_count }">
			<MvASSIGN NAME = "l.variant:qualifying"					VALUE = 1>

			<MvFOREACH ITERATOR = "l.item_part_product" ARRAY = "l.item:part_products" COUNT = "{ l.item:part_product_count }">
				<MvREFERENCEARRAY NAME = "l.part_product" VARIABLE = "l.discount_state:products">
					<MvDIMENSION INDEX = "{ l.item_part_product:id }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ NOT l.part_product:qualifying }">
					<MvASSIGN NAME = "l.variant:qualifying"			VALUE = 0>
					<MvFOREACHSTOP>
				</MvIF>
			</MvFOREACH>

			<MvIF EXPR = "{ l.variant:qualifying }">
				<MvASSIGN NAME = "l.product:qualifying_variants"	VALUE = 1>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:excluded }">
			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ DiscountState_PriceGroup_ExcludedForItem( l.discount_state, l.pricegroup, l.item ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.product:qualifying OR l.variant:qualifying }">
			<MvASSIGN NAME = "l.item:qualifying"					VALUE = 1>
		<MvELSEIF EXPR = "{ ( l.pricegroup:capabilities:qualifying OR l.pricegroup:qmn_subtot OR l.pricegroup:qmx_subtot OR l.pricegroup:qmn_quan OR l.pricegroup:qmx_quan OR l.pricegroup:qmn_weight OR l.pricegroup:qmx_weight ) AND
							( l.item:product_id GT 0 ) AND ( l.item:subterm_id GT 0 ) }">
			<MvIF EXPR = "{ NOT DiscountState_PriceGroupQualifyingProductSubscriptionTerm_Assigned( l.discount_state, l.pricegroup, l.item:product_id, l.item:subterm_id, l.item:qualifying ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:upsold }">
			<MvASSIGN NAME = "l.item:qualifying"					VALUE = "{ l.item:qualifying AND l.discount_state:options:usl_qual }">
		</MvIF>

		<MvASSIGN NAME = "l.item_total_price"						VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.item:total_price * l.item:quantity ) }">
		<MvASSIGN NAME = "l.item_total_weight"						VALUE = "{ l.item:total_weight * l.item:quantity }">

		<MvIF EXPR = "{ l.item:qualifying }">
			<MvASSIGN NAME = "l.discount_state:qualifying_quantity"	VALUE = "{ l.discount_state:qualifying_quantity + l.item:quantity }">
			<MvASSIGN NAME = "l.discount_state:qualifying_price"	VALUE = "{ l.discount_state:qualifying_price + l.item_total_price }">
			<MvASSIGN NAME = "l.discount_state:qualifying_weight"	VALUE = "{ l.discount_state:qualifying_weight + l.item_total_weight }">

			<MvIF EXPR = "{ l.product:qualifying }">
				<MvASSIGN NAME = "l.product:qualifying_quantity"	VALUE = "{ l.product:qualifying_quantity + l.item:quantity }">
				<MvASSIGN NAME = "l.product:qualifying_price"		VALUE = "{ l.product:qualifying_price + l.item_total_price }">
				<MvASSIGN NAME = "l.product:qualifying_weight"		VALUE = "{ l.product:qualifying_weight + l.item_total_weight }">
			</MvIF>

			<MvIF EXPR = "{ l.variant:qualifying }">
				<MvASSIGN NAME = "l.variant:qualifying_quantity"	VALUE = "{ l.variant:qualifying_quantity + l.item:quantity }">
				<MvASSIGN NAME = "l.variant:qualifying_price"		VALUE = "{ l.variant:qualifying_price + l.item_total_price }">
				<MvASSIGN NAME = "l.variant:qualifying_weight"		VALUE = "{ l.variant:qualifying_weight + l.item_total_weight }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_ApplyToBasket" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT DiscountState_UpdateBasketItems( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_UpdateBasketCharges( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_UpdateBasketCouponTotals( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_UpdateBasketDiscountTotals( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_AdjustSubTotal" PARAMETERS = "discount_state var, precalc_total" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.discount_state:options:repricetot NE 'item' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.shipping_total"					VALUE = "{ DiscountState_Charge_Total_Type( l.discount_state, 'SHIPPING' ) }">
	<MvASSIGN NAME = "l.tax_total"						VALUE = "{ DiscountState_Charge_Total_Type( l.discount_state, 'TAX' ) }">

	<MvASSIGN NAME = "l.new_subtotal"					VALUE = "{ DiscountState_Total( l.discount_state ) - l.shipping_total - l.tax_total }">
	<MvASSIGN NAME = "l.new_subtotal"					VALUE = "{ l.new_subtotal }">
	<MvASSIGN NAME = "l.precalc_subtotal"				VALUE = "{ l.precalc_total - l.shipping_total - l.tax_total }">

	<MvIF EXPR = "{ l.new_subtotal LE l.precalc_subtotal }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.new_discount_total"				VALUE = 0.00>
	<MvASSIGN NAME = "l.precalc_discount_total"			VALUE = 0.00>

	<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.discount_state:discount_totals">
		<MvIF EXPR = "{ NOT miva_array_search( l.discount_state:pricegroups:shipping, 1, l.pricegroup, 'l.pricegroup:id EQ l.discount:pgrp_id' ) }">
			<MvASSIGN NAME = "l.new_discount_total"		VALUE = "{ l.new_discount_total + l.discount:total }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.precalc_discounts" COUNT = "{ [ g.Feature_Filename_PGR_DB ].OrderDiscountTotalList_Load_Order( l.discount_state:order:id, l.precalc_discounts ) }">
		<MvIF EXPR = "{ NOT miva_array_search( l.discount_state:pricegroups:shipping, 1, l.pricegroup, 'l.pricegroup:id EQ l.discount:pgrp_id' ) }">
			<MvASSIGN NAME = "l.precalc_discount_total"	VALUE = "{ l.precalc_discount_total + l.discount:total }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.new_discount_total"				VALUE = "{ l.new_discount_total }">
	<MvASSIGN NAME = "l.precalc_discount_total"			VALUE = "{ l.precalc_discount_total }">

	<MvIF EXPR = "{ l.new_discount_total GE l.precalc_discount_total }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.delta_subtotal"					VALUE = "{ l.new_subtotal - l.precalc_subtotal }">
	<MvASSIGN NAME = "l.delta_discount"					VALUE = "{ l.precalc_discount_total - l.new_discount_total }">

	<MvIF EXPR = "{ l.delta_subtotal LT l.delta_discount }">
		<MvASSIGN NAME = "l.adjustment"					VALUE = "{ l.delta_subtotal }">
	<MvELSE>
		<MvASSIGN NAME = "l.adjustment"					VALUE = "{ l.delta_discount }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Apply_Adjustment( l.discount_state, l.adjustment ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Apply_Adjustment" PARAMETERS = "discount_state var, adjustment" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.discount_state:options:repricetot EQ 'item' }">
		<MvIF EXPR = "{ miva_array_search( l.discount_state:items, 1, l.existing_item, '( l.existing_item:product_id EQ 0 ) AND ( tolower( l.existing_item:code ) EQ tolower( l.discount_state:options:adj_code ) ) AND l.existing_item:taxable AND ( l.existing_item:quantity EQ 1 )' ) }">
			<MvASSIGN NAME = "l.existing_item:base_price"		VALUE = "{ l.existing_item:base_price - l.adjustment }">
			<MvASSIGN NAME = "l.existing_item:price"			VALUE = "{ l.existing_item:price - l.adjustment }">
		<MvELSE>
			<MvASSIGN NAME = "l.new_item"						VALUE = "">
			<MvASSIGN NAME = "l.new_item:line_id"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:status"				VALUE = 999>
			<MvASSIGN NAME = "l.new_item:shpmnt_id"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:rma_id"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:product_id"			VALUE = 0>
			<MvASSIGN NAME = "l.new_item:code"					VALUE = "{ l.discount_state:options:adj_code }">
			<MvASSIGN NAME = "l.new_item:name"					VALUE = "{ l.discount_state:options:adj_name }">
			<MvASSIGN NAME = "l.new_item:quantity"				VALUE = 1>
			<MvASSIGN NAME = "l.new_item:base_price"			VALUE = "{ 0 - l.adjustment }">
			<MvASSIGN NAME = "l.new_item:price"					VALUE = "{ 0 - l.adjustment }">
			<MvASSIGN NAME = "l.new_item:weight"				VALUE = 0.00>
			<MvASSIGN NAME = "l.new_item:taxable"				VALUE = 1>
			<MvASSIGN NAME = "l.new_item:upsold"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:option_count"			VALUE = 0>
			<MvASSIGN NAME = "l.new_item:discount_count"		VALUE = 0>

			<MvASSIGN NAME = "l.discount_state:item_count"		VALUE = "{ miva_array_insert( l.discount_state:items, l.new_item, -1 ) }">
			<MvASSIGN NAME = "l.discount_state:item_quantity"	VALUE = "{ l.discount_state:item_quantity + 1 }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.discount_state:options:repricetot EQ 'charge' }">
		<MvIF EXPR = "{ miva_array_search( l.discount_state:charges, 1, l.existing_charge, '( l.existing_charge:module_id EQ 0 ) AND ( l.existing_charge:type EQ \'GOODWILL\' )' ) }">
			<MvASSIGN NAME = "l.existing_charge:amount"			VALUE = "{ l.existing_charge:amount - l.adjustment }">
			<MvASSIGN NAME = "l.existing_charge:disp_amt"		VALUE = "{ l.existing_charge:amount }">
			<MvASSIGN NAME = "l.existing_charge:modified"		VALUE = 1>
		<MvELSE>
			<MvASSIGN NAME = "l.new_charge"						VALUE = "">
			<MvASSIGN NAME = "l.new_charge:module_id"			VALUE = 0>
			<MvASSIGN NAME = "l.new_charge:type"				VALUE = "GOODWILL">
			<MvASSIGN NAME = "l.new_charge:descrip"				VALUE = "{ l.discount_state:options:adj_charge }">
			<MvASSIGN NAME = "l.new_charge:amount"				VALUE = "{ 0 - l.adjustment }">
			<MvASSIGN NAME = "l.new_charge:disp_amt"			VALUE = "{ l.new_charge:amount }">
			<MvASSIGN NAME = "l.new_charge:tax_exempt"			VALUE = 0>

			<MvASSIGN NAME = "l.discount_state:charge_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:charges, l.new_charge, -1 ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.discount_state:item_price"				VALUE = "{ l.discount_state:item_price - l.adjustment }">
	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:total_price - l.adjustment }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_ApplyToOrder" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT DiscountState_UpdateOrderItems( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_UpdateOrderCharges( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_UpdateOrderCouponTotals( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT DiscountState_UpdateOrderDiscountTotals( l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_PriceGroupProduct_Assigned" PARAMETERS = "discount_state var, pricegroup var, product_id, assigned var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "l.discount_state">
		<MvMEMBER NAME = "cache">
		<MvMEMBER NAME = "assigned">
		<MvDIMENSION INDEX = "{ l.product_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.pricegroup:exclusion }">
		<MvIF EXPR = "{ NOT l.cache:exclusions_loaded }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupLookup_Load_Product_Exclusion( l.product_id, l.cache:exclusions ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.cache:exclusions_loaded"	VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.assigned"						VALUE = "{ NOT l.cache:exclusions[ l.pricegroup:id ] }">
	<MvELSE>
		<MvIF EXPR = "{ NOT l.cache:inclusions_loaded }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupLookup_Load_Product_Inclusion( l.product_id, l.cache:inclusions ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.cache:inclusions_loaded"	VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.assigned"						VALUE = "{ l.cache:inclusions[ l.pricegroup:id ] }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_PriceGroupProductSubscriptionTerm_Assigned" PARAMETERS = "discount_state var, pricegroup var, product_id, subterm_id, assigned var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cached_value" VARIABLE = "l.discount_state">
		<MvMEMBER NAME = "cache">
		<MvMEMBER NAME = "subscription_assigned">
		<MvDIMENSION INDEX = "{ l.pricegroup:id }">
		<MvDIMENSION INDEX = "{ l.product_id }">
		<MvDIMENSION INDEX = "{ l.subterm_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cached_value }">
		<MvIF EXPR = "{ l.pricegroup:exclusion }">
			<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXExcludedProductSubscription_Load( l.pricegroup:id, l.product_id, l.subterm_id, l.pricegroupxproductsubscription ) }">
				<MvASSIGN NAME = "l.cached_value"	VALUE = 0>
			<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvASSIGN NAME = "l.cached_value"	VALUE = 1>
			<MvELSE>
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXProductSubscription_Load( l.pricegroup:id, l.product_id, l.subterm_id, l.pricegroupxproductsubscription ) }">
				<MvASSIGN NAME = "l.cached_value"	VALUE = 1>
			<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvASSIGN NAME = "l.cached_value"	VALUE = 0>
			<MvELSE>
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.assigned"					VALUE = "{ l.cached_value }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_PriceGroupQualifyingProduct_Assigned" PARAMETERS = "discount_state var, pricegroup var, product_id, assigned var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cached_value" VARIABLE = "l.discount_state">
		<MvMEMBER NAME = "cache">
		<MvMEMBER NAME = "qualifying">
		<MvDIMENSION INDEX = "{ l.pricegroup:id }">
		<MvDIMENSION INDEX = "{ l.product_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cached_value }">
		<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXQualifyingProduct_Load( l.pricegroup:id, l.product_id, l.pricegroupxqualifyingproduct ) }">
			<MvASSIGN NAME = "l.cached_value"	VALUE = 1>
		<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvASSIGN NAME = "l.cached_value"	VALUE = 0>
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.assigned"				VALUE = "{ l.cached_value }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_PriceGroupQualifyingProductSubscriptionTerm_Assigned" PARAMETERS = "discount_state var, pricegroup var, product_id, subterm_id, assigned var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cached_value" VARIABLE = "l.discount_state">
		<MvMEMBER NAME = "cache">
		<MvMEMBER NAME = "subscription_qualifying">
		<MvDIMENSION INDEX = "{ l.pricegroup:id }">
		<MvDIMENSION INDEX = "{ l.product_id }">
		<MvDIMENSION INDEX = "{ l.subterm_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cached_value }">
		<MvIF EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXQualifyingProductSubscription_Load( l.pricegroup:id, l.product_id, l.subterm_id, l.pricegroupxqualifyingproductsubscription ) }">
			<MvASSIGN NAME = "l.cached_value"	VALUE = 1>
		<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvASSIGN NAME = "l.cached_value"	VALUE = 0>
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.assigned"				VALUE = "{ l.cached_value }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_PriceGroup_Qualifies" PARAMETERS = "discount_state var, pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.basket_subtotal"	VALUE = "{ l.discount_state:item_price - l.discount_state:discount_charge_total }">

	<MvIF EXPR = "{ ( l.pricegroup:qmn_subtot NE 0 ) AND ( l.discount_state:qualifying_price LT l.pricegroup:qmn_subtot ) }">		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:qmx_subtot NE 0 ) AND ( l.discount_state:qualifying_price GT l.pricegroup:qmx_subtot ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:qmn_quan NE 0 ) AND ( l.discount_state:qualifying_quantity LT l.pricegroup:qmn_quan ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:qmx_quan NE 0 ) AND ( l.discount_state:qualifying_quantity GT l.pricegroup:qmx_quan ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:qmn_weight NE 0 ) AND ( l.discount_state:qualifying_weight LT l.pricegroup:qmn_weight ) }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:qmx_weight NE 0 ) AND ( l.discount_state:qualifying_weight GT l.pricegroup:qmx_weight ) }">	<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( l.pricegroup:bmn_subtot NE 0 ) AND ( l.basket_subtotal LT l.pricegroup:bmn_subtot ) }">						<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:bmx_subtot NE 0 ) AND ( l.basket_subtotal GT l.pricegroup:bmx_subtot ) }">					<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:bmn_quan NE 0 ) AND ( l.discount_state:item_quantity LT l.pricegroup:bmn_quan ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:bmx_quan NE 0 ) AND ( l.discount_state:item_quantity GT l.pricegroup:bmx_quan ) }">			<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:bmn_weight NE 0 ) AND ( l.discount_state:item_weight LT l.pricegroup:bmn_weight ) }">		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( l.pricegroup:bmx_weight NE 0 ) AND ( l.discount_state:item_weight GT l.pricegroup:bmx_weight ) }">		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Coupon_Applies" PARAMETERS = "discount_state var, coupon_id" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| If a coupon-associated price group has applied a discount, the coupon applies.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.discount_state:coupon_lookup[ l.coupon_id ]:total		OR
					l.discount_state:coupon_lookup[ l.coupon_id ]:quantity }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| If the coupon has not applied a discount, and does not discount shipping, it does not apply
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT l.discount_state:coupon_lookup[ l.coupon_id ]:shipping }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Search for at least one qualifying shipping price group from this coupon.  We must look at shipping price groups
	| regardless of their source so that we can process exclusions as we go.
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:shipping" COUNT = "{ l.discount_state:pricegroups:shipping_count }">
		<MvIF EXPR = "{ l.pricegroup:disabled }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:exclusion_count GT 0 }">
			<MvCOMMENT>
			|
			| Remove exclusions for excluded price groups
			|
			</MvCOMMENT>

			<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT DiscountState_MarkQualifying_PriceGroup( l.discount_state, l.pricegroup ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT DiscountState_PriceGroup_Qualifies( l.discount_state, l.pricegroup ) }">
				<MvEVAL EXPR = "{ DiscountState_Remove_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ DiscountState_Apply_PriceGroup_Exclusions( l.discount_state, l.pricegroup ) }">

				<MvIF EXPR = "{ l.pricegroup:coupon_id EQ l.coupon_id }">
					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| If we reach this point, there are no qualifying, unexcluded shipping price groups, and the coupon does not apply.
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Coupon_Total" PARAMETERS = "discount_state var, coupon_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.discount_state:coupon_lookup[ l.coupon_id ]:total }">
		<MvFUNCTIONRETURN VALUE = 0.00>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:coupon_lookup[ l.coupon_id ]:total }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateBasketItems" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"			VALUE = "{ DiscountState_Sort_Items( l.discount_state ) }">
	<MvASSIGN NAME = "l.items"				VALUE = "{ l.discount_state:items }">

	<MvASSIGN NAME = "l.notify_items"		VALUE = "">
	<MvASSIGN NAME = "l.notify_item_count"	VALUE = 0>

	<MvCOMMENT>
	|
	| Process top-level items
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ l.item_count GT 0 }">
		<MvIF EXPR = "{ l.items[ 1 ]:parent_id NE 0 OR NOT ISNULL l.items[ 1 ]:parent_item_key }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.item_count" VALUE = "{ miva_array_shift_ref( l.items, l.item ) }">

		<MvIF EXPR = "{ l.item_count }">
			<MvREFERENCEARRAY NAME = "l.next_item" VARIABLE = "l.items">
				<MvDIMENSION INDEX = 1>
			</MvREFERENCEARRAY>

			<MvCOMMENT>
			|
			| If this item and the next item are identical, combine them, deleting the previous record if
			| necessary
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.next_item:parent_id EQ 0 AND ISNULL l.next_item:parent_item_key }">
				<MvIF EXPR = "{ DiscountState_Item_Compare( l.item, l.next_item, l.null ) EQ 0 AND
								DiscountState_Item_Children_Compare( l.item, l.next_item, l.null ) EQ 0 }">
					<MvASSIGN NAME = "l.next_item:modified"			VALUE = 1>
					<MvASSIGN NAME = "l.next_item:quantity"			VALUE = "{ l.next_item:quantity + l.item:quantity }">
					<MvASSIGN NAME = "l.next_item:inventory_delta"	VALUE = "{ l.next_item:inventory_delta + l.item:inventory_delta }">

					<MvIF EXPR = "{ l.item:line_id }">
						<MvIF EXPR = "{ NOT miva_array_search( l.items, 1, l.element, 'l.element:line_id EQ l.item:line_id' ) }">
							<MvIF EXPR = "{	NOT [ g.Module_Library_DB ].BasketItem_Delete( l.item:line_id ) }">
								<MvFUNCTIONRETURN VALUE = 0>
							</MvIF>
						</MvIF>
					</MvIF>

					<MvCOMMENT>
					|
					| If "item" has a line_id or split_item_key, look for children referencing
					| the parent via either one and move the child to "next_item".
					|
					</MvCOMMENT>

					<MvIF EXPR = "{ ( l.item:line_id OR ( NOT ISNULL l.item:split_item_key ) ) AND ( l.next_item:line_id OR ( NOT ISNULL l.next_item:split_item_key ) ) }">
						<MvFOREACH ITERATOR = "l.looped_item" ARRAY = "l.items" COUNT = "{ l.item_count }">
							<MvIF EXPR = "{ l.item:line_id AND ( l.item:line_id EQ l.looped_item:parent_id ) }">
								<MvASSIGN NAME = "l.looped_item:parent_id"			VALUE = "{ l.next_item:line_id }">
								<MvASSIGN NAME = "l.looped_item:parent_item_key"	VALUE = "{ l.next_item:split_item_key }">
							<MvELSEIF EXPR = "{ ( NOT ISNULL l.item:split_item_key ) AND ( strcmp( l.item:split_item_key, l.looped_item:parent_item_key ) EQ 0 ) }">
								<MvASSIGN NAME = "l.looped_item:parent_id"			VALUE = "{ l.next_item:line_id }">
								<MvASSIGN NAME = "l.looped_item:parent_item_key"	VALUE = "{ l.next_item:split_item_key }">
							</MvIF>
						</MvFOREACH>
					</MvIF>

					<MvWHILECONTINUE>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:line_id EQ 0 }">
			<MvCOMMENT>
			|
			| This item was either split off of a previous line, or injected by the
			| discounting system. Insert a new item with any attached options.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.item:basket_id" VALUE = "{ l.discount_state:basket:basket_id }">

			<MvIF EXPR = "{ NOT DiscountState_BasketItem_Insert( l.item, l.notify_items, l.notify_item_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvCOMMENT>
			|
			| If the item is a split item and has children, update the parent_id reference
			| of the children now that we have a non-zero line_id on the inserted parent.
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT ISNULL l.item:split_item_key }">
				<MvFOREACH ITERATOR = "l.looped_item" ARRAY = "l.items" COUNT = "{ l.item_count }">
					<MvIF EXPR = "{ strcmp( l.looped_item:parent_item_key, l.item:split_item_key ) EQ 0 }">
						<MvASSIGN NAME = "l.looped_item:parent_id" VALUE = "{ l.item:line_id }">
					</MvIF>
				</MvFOREACH>
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| This item is unique, so update the values we have here and ensure that no other items
			| use the same line_id
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_BasketItem_Update( l.item, l.notify_items, l.notify_item_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| Sort items again now that parent_ids should all be populated with real data
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.item_count" VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Compare_Sort', l.null ) }">

	<MvCOMMENT>
	|
	| Process Children
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ l.item_count GT 0 }">
		<MvASSIGN NAME = "l.item_count" VALUE = "{ miva_array_shift_ref( l.items, l.item ) }">

		<MvIF EXPR = "{ l.item_count }">
			<MvREFERENCEARRAY NAME = "l.next_item" VARIABLE = "l.items">
				<MvDIMENSION INDEX = 1>
			</MvREFERENCEARRAY>

			<MvCOMMENT>
			|
			| If this item and the next item are identical, combine them, deleting the previous record if
			| necessary
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ DiscountState_Item_Compare( l.item, l.next_item, l.null ) EQ 0 }">
				<MvASSIGN NAME = "l.next_item:modified"			VALUE = 1>
				<MvASSIGN NAME = "l.next_item:quantity"			VALUE = "{ l.next_item:quantity + l.item:quantity }">
				<MvASSIGN NAME = "l.next_item:inventory_delta"	VALUE = "{ l.next_item:inventory_delta + l.item:inventory_delta }">

				<MvIF EXPR = "{ l.item:line_id }">
					<MvIF EXPR = "{ NOT miva_array_search( l.items, 1, l.element, 'l.element:line_id EQ l.item:line_id' ) }">
						<MvIF EXPR = "{	NOT [ g.Module_Library_DB ].BasketItem_Delete( l.item:line_id ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvWHILECONTINUE>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:line_id EQ 0 }">
			<MvCOMMENT>
			|
			| This item was split off of a previous line, so insert a new item with the same
			| options.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.item:basket_id" VALUE = "{ l.discount_state:basket:basket_id }">

			<MvIF EXPR = "{ NOT DiscountState_BasketItem_Insert( l.item, l.notify_items, l.notify_item_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| This item is unique, so update the values we have here and ensure that no other items
			| use the same line_id
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_BasketItem_Update( l.item, l.notify_items, l.notify_item_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| Trigger notifications
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.module_count" VALUE = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_basketitem', l.modules ) }">

	<MvIF EXPR = "{ l.module_count }">
		<MvFOREACH ITERATOR = "l.notify_item" ARRAY = "l.notify_items" COUNT = "{ l.notify_item_count }">
			<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ l.module_count }">
				<MvIF EXPR = "{ l.notify_item:insert }">		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Insert( l.module, l.notify_item:basketitem ) }">
				<MvELSEIF EXPR = "{ l.notify_item:update }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_BasketItem_Update( l.module, l.notify_item:original_basketitem, l.notify_item:basketitem ) }">
				</MvIF>
			</MvFOREACH>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateBasketCharges" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.discount_state:charges" COUNT = "{ l.discount_state:charge_count }">
		<MvIF EXPR = "{ l.charge:deleted }">
			<MvIF EXPR = "{ l.charge:charge_id }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Delete_Charge( l.charge:charge_id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		<MvELSEIF EXPR = "{ l.charge:charge_id EQ 0 }">
			<MvASSIGN NAME = "l.charge:basket_id"	VALUE = "{ l.discount_state:basket:basket_id }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Insert( l.charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.charge:modified }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Update( l.charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateShippingBasketCharges" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.shipping_charges" COUNT = "{ miva_array_filter_ref( l.discount_state:charges, 1, l.charge, 'l.charge:type EQ \'SHIPPING\'', l.shipping_charges ) }">
		<MvIF EXPR = "{ l.charge:deleted }">
			<MvIF EXPR = "{ l.charge:charge_id }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Delete_Charge( l.charge:charge_id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		<MvELSEIF EXPR = "{ l.charge:charge_id EQ 0 }">
			<MvASSIGN NAME = "l.charge:basket_id"	VALUE = "{ l.discount_state:basket:basket_id }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Insert( l.charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.charge:modified }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Update( l.charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateBasketCouponTotals" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.coupon" ARRAY = "l.discount_state:coupons" COUNT = "{ l.discount_state:coupon_count }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketCoupon_Update_Total( l.discount_state:basket:basket_id, l.coupon:id, l.coupon:total ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateBasketDiscountTotals" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Delete_All_Basket( l.discount_state:basket:basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.basketdiscounttotal" ARRAY = "l.discount_state:discount_totals">
		<MvIF EXPR = "{ ( l.basketdiscounttotal:total EQ 0.00 ) AND ( NOT l.basketdiscounttotal:persist ) }">
			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ l.basketdiscounttotal:coupon_id }">
			<MvIF EXPR = "{ NOT DiscountState_Coupon_Applies( l.discount_state, l.basketdiscounttotal:coupon_id ) }">
				<MvFOREACHCONTINUE>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.basketdiscounttotal:basket_id"	VALUE = "{ l.discount_state:basket:basket_id }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Insert( l.basketdiscounttotal ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateShippingBasketDiscountTotals" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.discount_state:pricegroups:shipping" COUNT = "{ l.discount_state:pricegroups:shipping_count }">
		<MvIF EXPR = "{ NOT miva_element_exists( l.discount_state:discount_totals, l.pricegroup:id ) }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Delete_Basket_PriceGroup( l.discount_state:basket:basket_id, l.pricegroup:id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.basketdiscounttotal" VARIABLE = "l.discount_state:discount_totals">
				<MvDIMENSION INDEX = "{ l.pricegroup:id }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.basketdiscounttotal:basket_id"	VALUE = "{ l.discount_state:basket:basket_id }">

			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Insert( l.basketdiscounttotal ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Update_Total( l.basketdiscounttotal ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_RemoveUnusedCoupons" PARAMETERS = "discount_state var, deleted_coupons var, deleted_coupon_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.deleted_coupons"				VALUE = "">
	<MvASSIGN NAME = "l.deleted_coupon_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.coupon" ARRAY = "l.discount_state:coupons" COUNT = "{ l.discount_state:coupon_count }">
		<MvIF EXPR = "{ NOT DiscountState_Coupon_Applies( l.discount_state, l.coupon:id ) }">
			<MvASSIGN NAME = "l.deleted_coupon_count"	VALUE = "{ miva_array_insert( l.deleted_coupons, l.coupon, -1 ) }">

			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketCoupon_Delete( l.discount_state:basket:basket_id, l.coupon:id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Calculate_Item_Total" PARAMETERS = "item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.price"		VALUE = "{ l.item:price }">

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvASSIGN NAME = "l.price"	VALUE = "{ l.price + l.option:price }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.price * l.item:quantity ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_BasketItem_Insert" PARAMETERS = "item var, notify_items var, notify_item_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item:line_id"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'BasketItems' ) }">
	<MvASSIGN NAME = "l.item:total"					VALUE = "{ DiscountState_Calculate_Item_Total( l.item ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItem_Insert_LowLevel( l.item ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.item:discounts" COUNT = "{ l.item:discount_count }">
		<MvASSIGN NAME = "l.discount:basket_id"		VALUE = "{ l.item:basket_id }">
		<MvASSIGN NAME = "l.discount:line_id"		VALUE = "{ l.item:line_id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItemDiscount_Insert( l.discount ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvASSIGN NAME = "l.option:line_id"			VALUE = "{ l.item:line_id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOption_Insert_LowLevel( l.option ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.option:discounts" COUNT = "{ l.option:discount_count }">
			<MvASSIGN NAME = "l.discount:basket_id"		VALUE = "{ l.option:basket_id }">
			<MvASSIGN NAME = "l.discount:line_id"		VALUE = "{ l.option:line_id }">
			<MvASSIGN NAME = "l.discount:lineopt_id"	VALUE = "{ l.option:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOptionDiscount_Insert( l.discount ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].BasketItem_NotifyList_Append_Insert( l.item, l.notify_items, l.notify_item_count ) }">

	<MvIF EXPR = "{ l.item:inventory_delta }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventorySettings_Load_Cached( l.inventorysettings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.inventorysettings:mode EQ 'basket' }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_ID_WithRuntimeInventory( l.item:product_id, l.product ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.item:variant_id, l.item:inventory_delta ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_BasketItem_Update" PARAMETERS = "item var, notify_items var, notify_item_count var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItem_Load_Line( l.item:basket_id, l.item:line_id, l.original_item ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItemDiscount_Delete_All_Line( l.item:line_id ) OR
					NOT [ g.Module_Library_DB ].BasketOptionDiscount_Delete_All_Line( l.item:line_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.item:total" VALUE = "{ DiscountState_Calculate_Item_Total( l.item ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItem_Update_Pricing_LowLevel( l.item ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.item:discounts" COUNT = "{ l.item:discount_count }">
		<MvASSIGN NAME = "l.discount:basket_id" VALUE = "{ l.item:basket_id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketItemDiscount_Insert( l.discount ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOption_Update_Pricing_LowLevel( l.option ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.option:discounts" COUNT = "{ l.option:discount_count }">
			<MvASSIGN NAME = "l.discount:basket_id"		VALUE = "{ l.option:basket_id }">
			<MvASSIGN NAME = "l.discount:lineopt_id"	VALUE = "{ l.option:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketOptionDiscount_Insert( l.discount ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ l.original_item:group_id	NE l.item:group_id		OR
					l.original_item:parent_id	NE l.item:parent_id		OR
					l.original_item:quantity	NE l.item:quantity		OR
					l.original_item:retail		NE l.item:retail		OR
					l.original_item:base_price	NE l.item:base_price	OR
					l.original_item:price		NE l.item:price			OR
					l.original_item:total		NE l.item:total }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].BasketItem_NotifyList_Append_Update( l.original_item, l.item, l.notify_items, l.notify_item_count ) }">
	</MvIF>

	<MvIF EXPR = "{ l.item:inventory_delta }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventorySettings_Load_Cached( l.inventorysettings ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.inventorysettings:mode EQ 'basket' }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_ID_WithRuntimeInventory( l.item:product_id, l.product ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.item:variant_id, l.item:inventory_delta ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateOrderItems" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Sort_Items( l.discount_state ) }">
	<MvASSIGN NAME = "l.items"		VALUE = "{ l.discount_state:items }">

	<MvCOMMENT>
	|
	| Process top-level items
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ l.item_count GT 0 }">
		<MvIF EXPR = "{ l.items[ 1 ]:parent_id NE 0 OR NOT ISNULL l.items[ 1 ]:parent_item_key }">
			<MvWHILESTOP>
		</MvIF>

		<MvASSIGN NAME = "l.item_count" VALUE = "{ miva_array_shift_ref( l.items, l.item ) }">

		<MvIF EXPR = "{ l.item_count }">
			<MvREFERENCEARRAY NAME = "l.next_item" VARIABLE = "l.items">
				<MvDIMENSION INDEX = 1>
			</MvREFERENCEARRAY>

			<MvCOMMENT>
			|
			| If this item and the next item are identical, combine them, deleting the previous record if
			| necessary
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ l.next_item:parent_id EQ 0 AND ISNULL l.next_item:parent_item_key }">
				<MvIF EXPR = "{ DiscountState_Item_Compare( l.item, l.next_item, l.null ) EQ 0 AND
								DiscountState_Item_Children_Compare( l.item, l.next_item, l.null ) EQ 0 }">
					<MvASSIGN NAME = "l.next_item:modified"			VALUE = 1>
					<MvASSIGN NAME = "l.next_item:quantity"			VALUE = "{ l.next_item:quantity + l.item:quantity }">
					<MvASSIGN NAME = "l.next_item:inventory_delta"	VALUE = "{ l.next_item:inventory_delta + l.item:inventory_delta }">

					<MvIF EXPR = "{ l.item:line_id }">
						<MvIF EXPR = "{ NOT miva_array_search( l.items, 1, l.element, 'l.element:line_id EQ l.item:line_id' ) }">
							<MvIF EXPR = "{	NOT [ g.Module_Library_DB ].OrderItem_Delete( l.item:order_id, l.item:line_id ) }">
								<MvFUNCTIONRETURN VALUE = 0>
							</MvIF>
						</MvIF>
					</MvIF>

					<MvCOMMENT>
					|
					| If "item" has a line_id or split_item_key, look for children referencing
					| the parent via either one and move the child to "next_item".
					|
					</MvCOMMENT>

					<MvIF EXPR = "{ ( l.item:line_id OR ( NOT ISNULL l.item:split_item_key ) ) AND ( l.next_item:line_id OR ( NOT ISNULL l.next_item:split_item_key ) ) }">
						<MvFOREACH ITERATOR = "l.looped_item" ARRAY = "l.items" COUNT = "{ l.item_count }">
							<MvIF EXPR = "{ l.item:line_id AND ( l.item:line_id EQ l.looped_item:parent_id ) }">
								<MvASSIGN NAME = "l.looped_item:parent_id"			VALUE = "{ l.next_item:line_id }">
								<MvASSIGN NAME = "l.looped_item:parent_item_key"	VALUE = "{ l.next_item:split_item_key }">
							<MvELSEIF EXPR = "{ ( NOT ISNULL l.item:split_item_key ) AND ( strcmp( l.item:split_item_key, l.looped_item:parent_item_key ) EQ 0 ) }">
								<MvASSIGN NAME = "l.looped_item:parent_id"			VALUE = "{ l.next_item:line_id }">
								<MvASSIGN NAME = "l.looped_item:parent_item_key"	VALUE = "{ l.next_item:split_item_key }">
							</MvIF>
						</MvFOREACH>
					</MvIF>

					<MvWHILECONTINUE>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:line_id EQ 0 }">
			<MvCOMMENT>
			|
			| This item was either split off of a previous line, or injected by the
			| discounting system. Insert a new item with any attached options.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.item:order_id" VALUE = "{ l.discount_state:order:id }">

			<MvIF EXPR = "{ NOT DiscountState_OrderItem_Insert( l.item ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvCOMMENT>
			|
			| If the item is a split item and has children, update the parent_id reference
			| of the children now that we have a non-zero line_id on the inserted parent.
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT ISNULL l.item:split_item_key }">
				<MvFOREACH ITERATOR = "l.looped_item" ARRAY = "l.items" COUNT = "{ l.item_count }">
					<MvIF EXPR = "{ strcmp( l.looped_item:parent_item_key, l.item:split_item_key ) EQ 0 }">
						<MvASSIGN NAME = "l.looped_item:parent_id" VALUE = "{ l.item:line_id }">
					</MvIF>
				</MvFOREACH>
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| This item is unique, so update the values we have here and ensure that no other items
			| use the same line_id
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_OrderItem_Update( l.item ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| Sort items again now that parent_ids should all be populated with real data
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.item_count" VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Compare_Sort', l.null ) }">

	<MvCOMMENT>
	|
	| Process Children
	|
	</MvCOMMENT>

	<MvWHILE EXPR = "{ l.item_count GT 0 }">
		<MvASSIGN NAME = "l.item_count" VALUE = "{ miva_array_shift_ref( l.items, l.item ) }">

		<MvIF EXPR = "{ l.item_count }">
			<MvREFERENCEARRAY NAME = "l.next_item" VARIABLE = "l.items">
				<MvDIMENSION INDEX = 1>
			</MvREFERENCEARRAY>

			<MvCOMMENT>
			|
			| If this item and the next item are identical, combine them, deleting the previous record if
			| necessary
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ DiscountState_Item_Compare( l.item, l.next_item, l.null ) EQ 0 }">
				<MvASSIGN NAME = "l.next_item:modified"			VALUE = 1>
				<MvASSIGN NAME = "l.next_item:quantity"			VALUE = "{ l.next_item:quantity + l.item:quantity }">
				<MvASSIGN NAME = "l.next_item:inventory_delta"	VALUE = "{ l.next_item:inventory_delta + l.item:inventory_delta }">

				<MvIF EXPR = "{ l.item:line_id }">
					<MvIF EXPR = "{ NOT miva_array_search( l.items, 1, l.element, 'l.element:line_id EQ l.item:line_id' ) }">
						<MvIF EXPR = "{	NOT [ g.Module_Library_DB ].OrderItem_Delete( l.item:order_id, l.item:line_id ) }">
							<MvFUNCTIONRETURN VALUE = 0>
						</MvIF>
					</MvIF>
				</MvIF>

				<MvWHILECONTINUE>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.item:line_id EQ 0 }">
			<MvCOMMENT>
			|
			| This item was split off of a previous line, so insert a new item with the same
			| options.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.item:order_id" VALUE = "{ l.discount_state:order:id }">

			<MvIF EXPR = "{ NOT DiscountState_OrderItem_Insert( l.item ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvCOMMENT>
			|
			| This item is unique, so update the values we have here and ensure that no other items
			| use the same line_id
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ NOT DiscountState_OrderItem_Update( l.item ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateOrderCharges" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.discount_state:charges" COUNT = "{ l.discount_state:charge_count }">
		<MvIF EXPR = "{ l.charge:deleted }">
			<MvIF EXPR = "{ l.charge:charge_id }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderCharge_Delete_Charge( l.charge:charge_id ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		<MvELSEIF EXPR = "{ l.charge:charge_id EQ 0 }">
			<MvASSIGN NAME = "l.charge:order_id"	VALUE = "{ l.discount_state:order:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderCharge_Insert( l.charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.charge:modified }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderCharge_Update( l.charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateOrderCouponTotals" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.coupon" ARRAY = "l.discount_state:coupons" COUNT = "{ l.discount_state:coupon_count }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderCoupon_Update_Total( l.discount_state:order:id, l.coupon:id, l.coupon:total ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_UpdateOrderDiscountTotals" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Delete_All_Order( l.discount_state:order:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.orderdiscounttotal" ARRAY = "l.discount_state:discount_totals">
		<MvASSIGN NAME = "l.orderdiscounttotal:order_id"	VALUE = "{ l.discount_state:order:id }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Insert( l.orderdiscounttotal ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_OrderItem_Insert" PARAMETERS = "item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item:line_id"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'BasketItems' ) }">
	<MvASSIGN NAME = "l.item:total"					VALUE = "{ DiscountState_Calculate_Item_Total( l.item ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Insert_LowLevel( l.item ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.item:discounts" COUNT = "{ l.item:discount_count }">
		<MvASSIGN NAME = "l.discount:order_id"		VALUE = "{ l.item:order_id }">
		<MvASSIGN NAME = "l.discount:line_id"		VALUE = "{ l.item:line_id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItemDiscount_Insert( l.discount ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvASSIGN NAME = "l.option:line_id"			VALUE = "{ l.item:line_id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOption_Insert_LowLevel( l.option ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.option:discounts" COUNT = "{ l.option:discount_count }">
			<MvASSIGN NAME = "l.discount:order_id"		VALUE = "{ l.option:order_id }">
			<MvASSIGN NAME = "l.discount:line_id"		VALUE = "{ l.option:line_id }">
			<MvASSIGN NAME = "l.discount:lineopt_id"	VALUE = "{ l.option:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOptionDiscount_Insert( l.discount ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ l.item:inventory_delta }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_ID_WithRuntimeInventory( l.item:product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.item:variant_id, l.item:inventory_delta ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_OrderItem_Update" PARAMETERS = "item var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItemDiscount_Delete_All_Line( l.item:line_id ) OR
					NOT [ g.Module_Library_DB ].OrderOptionDiscount_Delete_All_Line( l.item:line_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.item:total"					VALUE = "{ DiscountState_Calculate_Item_Total( l.item ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Update_Pricing_LowLevel( l.item ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.item:discounts" COUNT = "{ l.item:discount_count }">
		<MvASSIGN NAME = "l.discount:order_id"		VALUE = "{ l.item:order_id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItemDiscount_Insert( l.discount ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOption_Update_Pricing_LowLevel( l.option ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.option:discounts" COUNT = "{ l.option:discount_count }">
			<MvASSIGN NAME = "l.discount:order_id"		VALUE = "{ l.option:order_id }">
			<MvASSIGN NAME = "l.discount:lineopt_id"	VALUE = "{ l.option:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOptionDiscount_Insert( l.discount ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ l.item:inventory_delta }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_ID_WithRuntimeInventory( l.item:product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.product, l.item:variant_id, l.item:inventory_delta ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Compare_Common" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:excluded LT l.right:excluded }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:excluded GT l.right:excluded }">					<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:product_id LT l.right:product_id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:product_id GT l.right:product_id }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:variant_id LT l.right:variant_id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:variant_id GT l.right:variant_id }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:retail LT l.right:retail }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:retail GT l.right:retail }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:base_price LT l.right:base_price }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:base_price GT l.right:base_price }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:price LT l.right:price }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:price GT l.right:price }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:weight LT l.right:weight }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:weight GT l.right:weight }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:option_count LT l.right:option_count }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:option_count GT l.right:option_count }">			<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:discount_count LT l.right:discount_count }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:discount_count GT l.right:discount_count }">		<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:status LT l.right:status }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:status GT l.right:status }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:shpmnt_id LT l.right:shpmnt_id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:shpmnt_id GT l.right:shpmnt_id }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:rma_id LT l.right:rma_id }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:rma_id GT l.right:rma_id }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:dt_instock LT l.right:dt_instock }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:dt_instock GT l.right:dt_instock }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:type LT l.right:type }">							<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:type GT l.right:type }">							<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:code LT l.right:code }">							<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:code GT l.right:code }">							<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:name LT l.right:name }">							<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:name GT l.right:name }">							<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:wish_id LT l.right:wish_id }">					<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:wish_id GT l.right:wish_id }">					<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:subscrp_id LT l.right:subscrp_id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:subscrp_id GT l.right:subscrp_id }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:subterm_id LT l.right:subterm_id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:subterm_id GT l.right:subterm_id }">				<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.left_option" ARRAY = "l.left:options" COUNT = "{ l.left:option_count }">
		<MvASSIGN NAME = "l.option_compare"			VALUE = "{ DiscountState_Option_Compare( l.left_option, l.right:options[ l.pos ], l.data ) }">
		<MvIF EXPR = "{ l.option_compare NE 0 }">
			<MvFUNCTIONRETURN VALUE = "{ l.option_compare }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.left_discount" ARRAY = "l.left:discounts" COUNT = "{ l.left:discount_count }">
		<MvASSIGN NAME = "l.discount_compare"		VALUE = "{ DiscountState_Discount_Compare( l.left_discount, l.right:discounts[ l.pos ], l.data ) }">
		<MvIF EXPR = "{ l.discount_compare NE 0 }">
			<MvFUNCTIONRETURN VALUE = "{ l.discount_compare }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Compare" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:parent_id LT l.right:parent_id }">					<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:parent_id GT l.right:parent_id }">				<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:parent_item_key LT l.right:parent_item_key }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:parent_item_key GT l.right:parent_item_key }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Item_Compare_Common( l.left, l.right, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Child_Compare" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Item_Compare_Common( l.left, l.right, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Children_Compare" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:child_count LT l.right:child_count }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:child_count GT l.right:child_count }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Iterate children and build group quantity lookup
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.left_group_lookup"	VALUE = "">
	<MvASSIGN NAME = "l.right_group_lookup"	VALUE = "">

	<MvFOR INDEX = "l.index" COUNT = "{ l.left:child_count }">
		<MvREFERENCEARRAY NAME = "l.left_child" VARIABLE = "l.left:children">
			<MvDIMENSION INDEX = "{ l.index }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.right_child" VARIABLE = "l.right:children">
			<MvDIMENSION INDEX = "{ l.index }">
		</MvREFERENCEARRAY>

		<MvCOMMENT>
		|
		| Build left group quantity lookup
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT ISNULL l.left_child:group_id }">
			<MvASSIGN NAME = "l.left_group_id"				VALUE = "{ l.left_child:group_id }">
		<MvELSE>
			<MvASSIGN NAME = "l.left_group_id"				VALUE = "{ MakeSessionID() }">
			<MvASSIGN NAME = "l.left_child:new_group_id"	VALUE = "{ l.left_group_id }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.left_group" VARIABLE = "l.left_group_lookup">
			<MvMEMBER NAME = "{ l.left_group_id }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ISNULL l.left_group }">	<MvASSIGN NAME = "l.left_group:quantity" VALUE = "{ l.left_child:quantity }">
		<MvELSE>								<MvASSIGN NAME = "l.left_group:quantity" VALUE = "{ l.left_group:quantity + l.left_child:quantity }">
		</MvIF>

		<MvCOMMENT>
		|
		| Build right group quantity lookup
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT ISNULL l.right_child:group_id }">
			<MvASSIGN NAME = "l.right_group_id"				VALUE = "{ l.right_child:group_id }">
		<MvELSE>
			<MvASSIGN NAME = "l.right_group_id"				VALUE = "{ MakeSessionID() }">
			<MvASSIGN NAME = "l.right_child:new_group_id"	VALUE = "{ l.right_group_id }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.right_group" VARIABLE = "l.right_group_lookup">
			<MvMEMBER NAME = "{ l.right_group_id }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ISNULL l.right_group }">	<MvASSIGN NAME = "l.right_group:quantity" VALUE = "{ l.right_child:quantity }">
		<MvELSE>									<MvASSIGN NAME = "l.right_group:quantity" VALUE = "{ l.right_group:quantity + l.right_child:quantity }">
		</MvIF>
	</MvFOR>

	<MvFOR INDEX = "l.index" COUNT = "{ l.left:child_count }">
		<MvREFERENCEARRAY NAME = "l.left_child" VARIABLE = "l.left:children">
			<MvDIMENSION INDEX = "{ l.index }">
		</MvREFERENCEARRAY>

		<MvREFERENCEARRAY NAME = "l.right_child" VARIABLE = "l.right:children">
			<MvDIMENSION INDEX = "{ l.index }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.left_child:group_id }">	<MvASSIGN NAME = "l.left_group_id" VALUE = "{ l.left_child:group_id }">
		<MvELSE>												<MvASSIGN NAME = "l.left_group_id" VALUE = "{ l.left_child:new_group_id }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.left_group" VARIABLE = "l.left_group_lookup">
			<MvMEMBER NAME = "{ l.left_group_id }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT ISNULL l.right_child:group_id }">	<MvASSIGN NAME = "l.right_group_id" VALUE = "{ l.right_child:group_id }">
		<MvELSE>												<MvASSIGN NAME = "l.right_group_id" VALUE = "{ l.right_child:new_group_id }">
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.right_group" VARIABLE = "l.right_group_lookup">
			<MvMEMBER NAME = "{ l.right_group_id }">
		</MvREFERENCEARRAY>

		<MvCOMMENT>
		|
		| Note that this comparison will count as different two items that were split from one source, where the
		| source parent item had a child group containing two different child items such that one child item was
		| moved to the split parent and the other was left on the original parent.
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.result"	VALUE = "{ DiscountState_Item_Child_Compare( l.left_child, l.right_child, l.data ) }">

		<MvIF EXPR = "{ l.result NE 0 }">
			<MvFUNCTIONRETURN VALUE = "{ l.result }">
		</MvIF>

		<MvCOMMENT>
		|
		| Compare child quantity ratio
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ( l.left_group:quantity / l.left:quantity ) LT ( l.right_group:quantity / l.right:quantity ) }">		<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ ( l.left_group:quantity / l.left:quantity ) GT ( l.right_group:quantity / l.right:quantity ) }">	<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOR>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Option_Compare" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:attr_id LT l.right:attr_id }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:attr_id GT l.right:attr_id }">					<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:attmpat_id LT l.right:attmpat_id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:attmpat_id GT l.right:attmpat_id }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:option_id LT l.right:option_id }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:option_id GT l.right:option_id }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:retail LT l.right:retail }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:retail GT l.right:retail }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:base_price LT l.right:base_price }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:base_price GT l.right:base_price }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:price LT l.right:price }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:price GT l.right:price }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:weight LT l.right:weight }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:weight GT l.right:weight }">						<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:attr_code LT l.right:attr_code }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:attr_code GT l.right:attr_code }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:opt_code LT l.right:opt_code }">					<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:opt_code GT l.right:opt_code }">					<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:data LT l.right:data }">							<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:data GT l.right:data }">							<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:data_long LT l.right:data_long }">				<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:data_long GT l.right:data_long }">				<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:discount_count LT l.right:discount_count }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:discount_count GT l.right:discount_count }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.left_discount" ARRAY = "l.left:discounts" COUNT = "{ l.left:discount_count }">
		<MvASSIGN NAME = "l.discount_compare"		VALUE = "{ DiscountState_Discount_Compare( l.left_discount, l.right:discounts[ l.pos ], l.data ) }">
		<MvIF EXPR = "{ l.discount_compare NE 0 }">
			<MvFUNCTIONRETURN VALUE = "{ l.discount_compare }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Compare" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.left:display LT l.right:display }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:display GT l.right:display }">		<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:discount LT l.right:discount }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:discount GT l.right:discount }">		<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:descrip LT l.right:descrip }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:descrip GT l.right:descrip }">		<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:pgrp_id GT l.right:pgrp_id }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:pgrp_id LT l.right:pgrp_id }">		<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:pgrp_id LT l.right:pgrp_id }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:pgrp_id GT l.right:pgrp_id }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Compare_Sort" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.result"	VALUE = "{ DiscountState_Item_Compare( l.left, l.right, l.data ) }">
	<MvIF EXPR = "{ l.result NE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ l.result }">
	</MvIF>

	<MvCOMMENT>
	|
	| Put items with line_ids last to avoid deleting and recreating existing lines
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:line_id LT l.right:line_id }">						<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:line_id GT l.right:line_id }">					<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Sort_Items" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvASSIGN NAME = "l.item:option_count"	VALUE = "{ miva_array_sort( l.item:options, 'DiscountState_Option_Compare', l.null ) }">
		<MvASSIGN NAME = "l.item:child_count"	VALUE = "{ miva_array_sort( l.item:children, 'DiscountState_Item_Compare_Sort', l.null ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ miva_array_sort( l.discount_state:items, 'DiscountState_Item_Compare_Sort', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Total" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:total_price + l.discount_state:excluded_price - l.discount_state:cancelled_price }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Quantity" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:item_quantity }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Total" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:item_price }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Weight" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:item_weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Quantity" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:eligible_quantity }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Total" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:eligible_price }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Weight" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:eligible_weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Products" PARAMETERS = "discount_state var, products var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.products"				VALUE = "">
	<MvASSIGN NAME = "l.product_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.product" ARRAY = "l.discount_state:products">
		<MvIF EXPR = "{ l.product:eligible OR l.product:eligible_variants }">
			<MvASSIGN NAME = "l.product_count"	VALUE = "{ miva_array_insert_ref( l.products, l.discount_state:products[ l.pos ], -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.product_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Product_Items" PARAMETERS = "discount_state var, product_id, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.items"				VALUE = "">
	<MvASSIGN NAME = "l.item_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvIF EXPR = "{ ( l.item:product_id EQ l.product_id ) AND ( NOT l.item:excluded ) }">
			<MvASSIGN NAME = "l.item_count"	VALUE = "{ miva_array_insert_ref( l.items, l.discount_state:items[ l.pos ], -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.item_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Items" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.items"				VALUE = "">
	<MvASSIGN NAME = "l.item_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvIF EXPR = "{ l.item:eligible AND ( NOT l.item:excluded ) }">
			<MvASSIGN NAME = "l.item_count"	VALUE = "{ miva_array_insert_ref( l.items, l.discount_state:items[ l.pos ], -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.item_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Ineligible_Items" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.items"				VALUE = "">
	<MvASSIGN NAME = "l.item_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvIF EXPR = "{ ( NOT l.item:eligible ) AND ( NOT l.item:excluded ) }">
			<MvASSIGN NAME = "l.item_count"	VALUE = "{ miva_array_insert_ref( l.items, l.discount_state:items[ l.pos ], -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.item_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Qualifying_Quantity" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:qualifying_quantity }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Qualifying_Quantity" PARAMETERS = "discount_state var, item var, quantity" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.item:product_id LE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.qualifying_quantity"			VALUE = 0>

	<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.discount_state:products">
		<MvDIMENSION INDEX = "{ l.item:product_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ l.product:qualifying }">
		<MvASSIGN NAME = "l.qualifying_quantity"		VALUE = "{ l.qualifying_quantity + l.quantity }">
	</MvIF>

	<MvIF EXPR = "{ l.item:variant_id GE 0 }">
		<MvREFERENCEARRAY NAME = "l.variant" VARIABLE = "l.product:variants">
			<MvDIMENSION INDEX = "{ l.item:variant_id + 1 }">
		</MvREFERENCEARRAY>

		<MvFOREACH ITERATOR = "l.part_product" ARRAY = "l.item:part_products" COUNT = "{ l.item:part_product_count }">
			<MvIF EXPR = "{ NOT l.discount_state:products[ l.part_product:id ]:qualifying }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.qualifying_quantity"	VALUE = "{ l.qualifying_quantity + ( l.quantity * l.part_product:quantity ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.qualifying_quantity }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Qualifying_Total" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:qualifying_price }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Qualifying_Weight" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:qualifying_weight }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Qualifying_Products" PARAMETERS = "discount_state var, products var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.products"				VALUE = "">
	<MvASSIGN NAME = "l.product_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.product" ARRAY = "l.discount_state:products">
		<MvIF EXPR = "{ l.product:qualifying OR l.product:qualifying_variants }">
			<MvASSIGN NAME = "l.product_count"	VALUE = "{ miva_array_insert_ref( l.products, l.discount_state:products[ l.pos ], -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.product_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Qualifying_Items" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.items"				VALUE = "">
	<MvASSIGN NAME = "l.item_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvIF EXPR = "{ l.item:qualifying AND ( NOT l.item:excluded ) }">
			<MvASSIGN NAME = "l.item_count"	VALUE = "{ miva_array_insert_ref( l.items, l.discount_state:items[ l.pos ], -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.item_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Sort_TotalPriceDescending" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This sort breaks ties by line_id descending to ensure visual consistency--items with the highest
	| line_ids will receive the discounts first.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:total_price GT l.right:total_price }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:total_price LT l.right:total_price }">	<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:line_id GT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:line_id LT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Items_Sorted_TotalPriceDescending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Eligible_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_TotalPriceDescending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Qualifying_Items_Sorted_TotalPriceDescending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Qualifying_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_TotalPriceDescending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Sort_Items_TotalPriceDescending" PARAMETERS = "items var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Sort_TotalPriceDescending', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Sort_TotalPriceAscending" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This sort breaks ties by line_id descending to ensure visual consistency--items with the highest
	| line_ids will receive the discounts first.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:total_price LT l.right:total_price }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:total_price GT l.right:total_price }">	<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:line_id GT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:line_id LT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Items_Sorted_TotalPriceAscending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Eligible_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_TotalPriceAscending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Qualifying_Items_Sorted_TotalPriceAscending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Qualifying_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_TotalPriceAscending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Sort_Items_TotalPriceAscending" PARAMETERS = "items var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Sort_TotalPriceAscending', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Sort_Product_TotalPriceDescending" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This sort breaks ties by line_id descending to ensure visual consistency--items with the highest
	| line_ids will receive the discounts first.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:product_id LT l.right:product_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:product_id GT l.right:product_id }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:total_price GT l.right:total_price }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:total_price LT l.right:total_price }">	<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:line_id GT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:line_id LT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Items_Sorted_Product_TotalPriceDescending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Eligible_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_Product_TotalPriceDescending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Sort_Items_Product_TotalPriceDescending" PARAMETERS = "items var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Sort_Product_TotalPriceDescending', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Sort_Product_TotalPriceAscending" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This sort breaks ties by line_id descending to ensure visual consistency--items with the highest
	| line_ids will receive the discounts first.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:product_id LT l.right:product_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:product_id GT l.right:product_id }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:total_price LT l.right:total_price }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:total_price GT l.right:total_price }">	<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:line_id GT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:line_id LT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Items_Sorted_Product_TotalPriceAscending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Eligible_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_Product_TotalPriceAscending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Sort_Items_Product_TotalPriceAscending" PARAMETERS = "items var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Sort_Product_TotalPriceAscending', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Sort_Variant_TotalPriceDescending" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This sort breaks ties by line_id descending to ensure visual consistency--items with the highest
	| line_ids will receive the discounts first.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:product_id LT l.right:product_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:product_id GT l.right:product_id }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:variant_id LT l.right:variant_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:variant_id GT l.right:variant_id }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:total_price GT l.right:total_price }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:total_price LT l.right:total_price }">	<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:line_id GT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:line_id LT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Items_Sorted_Variant_TotalPriceDescending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Eligible_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_Variant_TotalPriceDescending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Sort_Items_Variant_TotalPriceDescending" PARAMETERS = "items var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Sort_Variant_TotalPriceDescending', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Item_Sort_Variant_TotalPriceAscending" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This sort breaks ties by line_id descending to ensure visual consistency--items with the highest
	| line_ids will receive the discounts first.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.left:product_id LT l.right:product_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:product_id GT l.right:product_id }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:variant_id LT l.right:variant_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:variant_id GT l.right:variant_id }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.left:total_price LT l.right:total_price }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:total_price GT l.right:total_price }">	<MvFUNCTIONRETURN VALUE = 1>

	<MvELSEIF EXPR = "{ l.left:line_id GT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left:line_id LT l.right:line_id }">			<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Eligible_Items_Sorted_Variant_TotalPriceAscending" PARAMETERS = "discount_state var, items var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item_count"	VALUE = "{ DiscountState_Eligible_Items( l.discount_state, l.items ) }">
	<MvFUNCTIONRETURN VALUE = "{ DiscountState_Sort_Items_Variant_TotalPriceAscending( l.items ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Sort_Items_Variant_TotalPriceAscending" PARAMETERS = "items var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_array_sort( l.items, 'DiscountState_Item_Sort_Variant_TotalPriceAscending', l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Item_Fixed" PARAMETERS = "discount_state var, item var, quantity, amount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.amount GT l.discount_state:total_price }">
		<MvASSIGN NAME = "l.amount" VALUE = "{ l.discount_state:total_price }">
	</MvIF>

	<MvIF EXPR = "{ l.amount EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ l.quantity LE 0 }">
		<MvFUNCTIONRETURN>
	<MvELSEIF EXPR = "{ l.item:quantity LE l.quantity }">
		<MvREFERENCE NAME = "l.discount_item" VARIABLE = "l.item">
	<MvELSE>
		<MvEVAL EXPR = "{ DiscountState_Split_Item( l.discount_state, l.item, l.quantity, l.ref ) }">
		<MvREFERENCE NAME = "l.discount_item" VARIABLE = "l.ref:item">
	</MvIF>

	<MvCOMMENT>
	|
	| Apply as much of the discount to the item first and apply any remainder
	| to the options until we run out of discount or options, whichever comes
	| first.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.amount GT l.discount_item:price }">	<MvASSIGN NAME = "l.item_discount"	VALUE = "{ l.discount_item:price }">
	<MvELSE>												<MvASSIGN NAME = "l.item_discount"	VALUE = "{ l.amount }">
	</MvIF>

	<MvIF EXPR = "{ l.item_discount GT l.discount_item:eligible_price }">
		<MvASSIGN NAME = "l.item_discount"					VALUE = "{ l.discount_item:eligible_price }">
	</MvIF>

	<MvIF EXPR = "{ l.item_discount }">
		<MvEVAL EXPR = "{ DiscountState_Add_Item_Discount( l.discount_state, l.discount_item, l.item_discount ) }">
	</MvIF>

	<MvASSIGN NAME = "l.amount"								VALUE = "{ l.amount - l.item_discount }">

	<MvIF EXPR = "{ l.amount GT 0 }">
		<MvFOREACH ITERATOR = "l.option" ARRAY = "l.discount_item:options" COUNT = "{ l.discount_item:option_count }">
			<MvIF EXPR = "{ l.option:price LE 0 }">				<MvFOREACHCONTINUE>
			<MvELSEIF EXPR = "{ l.amount GT l.option:price }">	<MvASSIGN NAME = "l.option_discount" VALUE = "{ l.option:price }">
			<MvELSE>											<MvASSIGN NAME = "l.option_discount" VALUE = "{ l.amount }">
			</MvIF>

			<MvIF EXPR = "{ l.option_discount GT l.discount_item:eligible_price }">
				<MvASSIGN NAME = "l.option_discount"		VALUE = "{ l.discount_item:eligible_price }">
			</MvIF>

			<MvIF EXPR = "{ l.option_discount EQ 0 }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvEVAL EXPR = "{ DiscountState_Add_Option_Discount( l.discount_state, l.discount_item, l.option, l.option_discount ) }">

			<MvASSIGN NAME = "l.amount"						VALUE = "{ l.amount - l.option_discount }">
			<MvIF EXPR = "{ l.amount LE 0 }">
				<MvFOREACHSTOP>
			</MvIF>
		</MvFOREACH>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Item_Percent" PARAMETERS = "discount_state var, item var, quantity, percent" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.quantity LE 0 }">
		<MvFUNCTIONRETURN>
	<MvELSEIF EXPR = "{ l.item:quantity LE l.quantity }">
		<MvREFERENCE NAME = "l.discount_item"			VARIABLE = "l.item">
	<MvELSE>
		<MvEVAL EXPR = "{ DiscountState_Split_Item( l.discount_state, l.item, l.quantity, l.ref ) }">
		<MvREFERENCE NAME = "l.discount_item" VARIABLE = "l.ref:item">
	</MvIF>

	<MvIF EXPR = "{ l.discount_item:price GT l.discount_item:eligible_price }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Price_IsHighPrecision( l.discount_item:eligible_price ) }">	<MvASSIGN NAME = "l.scale" VALUE = 2>
		<MvELSE>																										<MvASSIGN NAME = "l.scale" VALUE = 8>
		</MvIF>

		<MvASSIGN NAME = "l.item_discount"				VALUE = "{ ( l.discount_item:eligible_price * ( l.percent / 100 ) ) ROUND l.scale }">

		<MvIF EXPR = "{ l.item_discount GT l.discount_item:eligible_price }">
			<MvASSIGN NAME = "l.item_discount"			VALUE = "{ l.discount_item:eligible_price }">
		</MvIF>

		<MvIF EXPR = "{ l.item_discount }">
			<MvEVAL EXPR = "{ DiscountState_Add_Item_Discount( l.discount_state, l.discount_item, l.item_discount ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Price_IsHighPrecision( l.discount_item:price ) }">	<MvASSIGN NAME = "l.scale" VALUE = 2>
		<MvELSE>																								<MvASSIGN NAME = "l.scale" VALUE = 8>
		</MvIF>

		<MvASSIGN NAME = "l.item_discount"				VALUE = "{ ( l.discount_item:price * ( l.percent / 100 ) ) ROUND l.scale }">

		<MvIF EXPR = "{ l.item_discount GT l.discount_item:eligible_price }">
			<MvASSIGN NAME = "l.item_discount"			VALUE = "{ l.discount_item:eligible_price }">
		</MvIF>

		<MvIF EXPR = "{ l.item_discount }">
			<MvEVAL EXPR = "{ DiscountState_Add_Item_Discount( l.discount_state, l.discount_item, l.item_discount ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.option" ARRAY = "l.discount_item:options" COUNT = "{ l.discount_item:option_count }">
			<MvIF EXPR = "{ l.discount_item:eligible_price EQ 0 }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Price_IsHighPrecision( l.option:price ) }">	<MvASSIGN NAME = "l.scale" VALUE = 2>
			<MvELSE>																						<MvASSIGN NAME = "l.scale" VALUE = 8>
			</MvIF>

			<MvASSIGN NAME = "l.option_discount"		VALUE = "{ ( l.option:price * ( l.percent / 100 ) ) ROUND l.scale }">

			<MvIF EXPR = "{ l.option_discount GT l.discount_item:eligible_price }">
				<MvASSIGN NAME = "l.option_discount"	VALUE = "{ l.discount_item:eligible_price }">
			</MvIF>

			<MvIF EXPR = "{ l.option_discount }">
				<MvEVAL EXPR = "{ DiscountState_Add_Option_Discount( l.discount_state, l.discount_item, l.option, l.option_discount ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Split_Item" PARAMETERS = "discount_state var, item var, quantity, ref var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Split Top-Level Item
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.item:modified"				VALUE = 1>
	<MvASSIGN NAME = "l.item:quantity"				VALUE = "{ l.item:quantity - l.quantity }">

	<MvASSIGN NAME = "l.ref:item"					VALUE = "{ l.item }">
	<MvASSIGN NAME = "l.ref:item:quantity"			VALUE = "{ l.quantity }">
	<MvASSIGN NAME = "l.ref:item:line_id"			VALUE = 0>
	<MvASSIGN NAME = "l.ref:item:split_item_key"	VALUE = "{ MakeSessionID() }">
	<MvASSIGN NAME = "l.ref:item:children"			VALUE = "">
	<MvASSIGN NAME = "l.ref:item:child_count"		VALUE = 0>
	<MvASSIGN NAME = "l.discount_state:item_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:items, l.ref:item, -1 ) }">

	<MvCOMMENT>
	|
	| Split Children
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.original_quantity"	VALUE = "{ l.item:quantity + l.ref:item:quantity }">
	<MvASSIGN NAME = "l.group_lookup"		VALUE = "">

	<MvFOREACH ITERATOR = "l.child_item" ARRAY = "l.item:children" COUNT = "{ l.item:child_count }">
		<MvREFERENCEARRAY NAME = "l.group" VARIABLE = "l.group_lookup">
			<MvMEMBER NAME = "{ l.child_item:group_id }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ISNULL l.group }">
			<MvASSIGN NAME = "l.group:items"		VALUE = "">
			<MvASSIGN NAME = "l.group:item_count"	VALUE = 0>
			<MvASSIGN NAME = "l.group:quantity"		VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.group:item_count"		VALUE = "{ miva_array_insert_ref( l.group:items, l.child_item, -1 ) }">
		<MvASSIGN NAME = "l.group:quantity"			VALUE = "{ l.group:quantity + l.child_item:quantity }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.group_id" ARRAY = "l.group_ids" COUNT = "{ miva_struct_members( l.group_lookup, l.group_ids ) }">
		<MvREFERENCEARRAY NAME = "l.group" VARIABLE = "l.group_lookup">
			<MvMEMBER NAME = "{ l.group_id }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ ( l.group:quantity LT l.original_quantity ) OR ( fmod( l.group:quantity, l.original_quantity ) NE 0 ) }">
			<MvCOMMENT>
			|
			| Leave children in this group with the original item
			|
			</MvCOMMENT>

			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.group_quantity_original"	VALUE = "{ l.item:quantity * ( l.group:quantity / l.original_quantity ) }">
		<MvASSIGN NAME = "l.group_quantity_new"			VALUE = "{ l.group:quantity - l.group_quantity_original }">

		<MvCOMMENT>
		|
		| Sort items in quantity ascending order to avoid splitting child items when possible
		|
		</MvCOMMENT>

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].QuickSortArray( l.group:items, ':quantity', 1 ) }">

		<MvASSIGN NAME = "l.quantity_delta" VALUE = "{ l.group_quantity_new }">

		<MvFOREACH ITERATOR = "l.child_item" ARRAY = "l.group:items" COUNT = "{ l.group:item_count }">
			<MvIF EXPR = "{ l.child_item:quantity GT l.quantity_delta }">
				<MvCOMMENT>
				|
				| Split child item
				|
				</MvCOMMENT>

				<MvASSIGN NAME = "l.child_item:modified"				VALUE = 1>
				<MvASSIGN NAME = "l.child_item:quantity"				VALUE = "{ l.child_item:quantity - l.quantity_delta }">

				<MvASSIGN NAME = "l.child_item_split"					VALUE = "{ l.child_item }">
				<MvASSIGN NAME = "l.child_item_split:quantity"			VALUE = "{ l.quantity_delta }">
				<MvASSIGN NAME = "l.child_item_split:line_id"			VALUE = 0>
				<MvASSIGN NAME = "l.child_item_split:parent_id"			VALUE = 0>
				<MvASSIGN NAME = "l.child_item_split:parent_item_key"	VALUE = "{ l.ref:item:split_item_key }">

				<MvASSIGN NAME = "l.discount_state:item_count"			VALUE = "{ miva_array_insert_var( l.discount_state:items, l.child_item_split, -1 ) }">
				<MvASSIGN NAME = "l.ref:item:child_count"				VALUE = "{ miva_array_insert_ref( l.ref:item:children, l.discount_state:items[ l.discount_state:item_count ], -1 ) }">

				<MvFOREACHSTOP>
			</MvIF>

			<MvCOMMENT>
			|
			| Move child from current parent to new split item
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.found_position"					VALUE = "{ miva_array_search( l.discount_state:items, 1, l.search_item, 'l.search_item:line_id EQ l.child_item:line_id' ) }">

			<MvIF EXPR = "{ l.found_position GT 0 }">
				<MvASSIGN NAME = "l.discount_state:item_count"	VALUE = "{ miva_array_delete( l.discount_state:items, l.found_position, 1 ) }">
			</MvIF>

			<MvASSIGN NAME = "l.found_position"					VALUE = "{ miva_array_search( l.item:children, 1, l.search_item, 'l.search_item:line_id EQ l.child_item:line_id' ) }">

			<MvIF EXPR = "{ l.found_position GT 0 }">
				<MvASSIGN NAME = "l.item:child_count"			VALUE = "{ miva_array_delete( l.item:children, l.found_position, 1 ) }">
			</MvIF>

			<MvASSIGN NAME = "l.child_item:modified"			VALUE = 1>
			<MvASSIGN NAME = "l.child_item:parent_id"			VALUE = 0>
			<MvASSIGN NAME = "l.child_item:parent_item_key"		VALUE = "{ l.ref:item:split_item_key }">
			<MvASSIGN NAME = "l.discount_state:item_count"		VALUE = "{ miva_array_insert_ref( l.discount_state:items, l.child_item, -1 ) }">
			<MvASSIGN NAME = "l.ref:item:child_count"			VALUE = "{ miva_array_insert_ref( l.ref:item:children, l.child_item, -1 ) }">

			<MvASSIGN NAME = "l.quantity_delta"					VALUE = "{ l.quantity_delta - l.child_item:quantity }">

			<MvIF EXPR = "{ l.quantity_delta EQ 0 }">
				<MvFOREACHSTOP>
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Reset discount state pricing
	| Reset product and variant pricing
	| Re-calculate from items, products, and variants
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.discount_state:item_price"					VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:total_price"					VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:excluded_price"				VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:cancelled_price" 			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:qualifying_price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.discount_state:eligible_price"				VALUE = 0.00>

	<MvFOREACH ITERATOR = "l.product" ARRAY = "l.discount_state:products">
		<MvASSIGN NAME = "l.product:total_price"				VALUE = 0.00>
		<MvASSIGN NAME = "l.product:qualifying_price"			VALUE = 0.00>
		<MvASSIGN NAME = "l.product:eligible_price"				VALUE = 0.00>
		
		<MvFOREACH ITERATOR = "l.variant" ARRAY = "l.product:variants">
			<MvASSIGN NAME = "l.variant:total_price"			VALUE = 0.00>
			<MvASSIGN NAME = "l.variant:qualifying_price"		VALUE = 0.00>
			<MvASSIGN NAME = "l.variant:eligible_price"			VALUE = 0.00>
		</MvFOREACH>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.discount_state:items" COUNT = "{ l.discount_state:item_count }">
		<MvASSIGN NAME = "l.item:total"								VALUE = "{ l.item:price }">
		<MvASSIGN NAME = "l.item:total_price"						VALUE = "{ l.item:price }">

		<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
			<MvASSIGN NAME = "l.item:total"							VALUE = "{ l.item:total + l.option:price }">
			<MvASSIGN NAME = "l.item:total_price"					VALUE = "{ l.item:total_price + l.option:price }">
		</MvFOREACH>

		<MvASSIGN NAME = "l.item:total"								VALUE = "{ [ g.Module_Library_Utilities ].Round_Item_Total( l.item:total * l.item:quantity ) }">

		<MvASSIGN NAME = "l.discount_state:item_price"				VALUE = "{ l.discount_state:item_price + l.item:total }">
		<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:total_price + l.item:total }">

		<MvIF EXPR = "{ l.item:qualifying }">
			<MvASSIGN NAME = "l.discount_state:qualifying_price"	VALUE = "{ l.discount_state:qualifying_price + l.item:total }">		
		</MvIF>

		<MvIF EXPR = "{ l.item:excluded }">
			<MvASSIGN NAME = "l.discount_state:excluded_price"		VALUE = "{ l.discount_state:excluded_price + l.item:total }">		
		</MvIF>

		<MvIF EXPR = "{ l.item:eligible }">
			<MvASSIGN NAME = "l.discount_state:eligible_price"		VALUE = "{ l.discount_state:eligible_price + l.item:total }">		
		</MvIF>

		<MvIF EXPR = "{ l.item:status EQ 300 }">
			<MvASSIGN NAME = "l.discount_state:cancelled_price"		VALUE = "{ l.discount_state:cancelled_price + l.item:total }">		
		</MvIF>

		<MvIF EXPR = "{ l.item:product_id GT 0 }">
			<MvREFERENCEARRAY NAME = "l.product" VARIABLE = "l.discount_state:products">
				<MvDIMENSION INDEX = "{ l.item:product_id }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT ISNULL l.product }">
				<MvASSIGN NAME = "l.product:total_price"				VALUE = "{ l.product:total_price + l.item:total }">
				
				<MvIF EXPR = "{ l.product:qualifying }">
					<MvASSIGN NAME = "l.product:qualifying_price"		VALUE = "{ l.product:qualifying_price + l.item:total }">
				</MvIF>

				<MvIF EXPR = "{ l.product:eligible }">
					<MvASSIGN NAME = "l.product:eligible_price"			VALUE = "{ l.product:eligible_price + l.item:total }">
				</MvIF>

				<MvIF EXPR = "{ l.item:variant_id GE 0 }">
					<MvREFERENCEARRAY NAME = "l.variant" VARIABLE = "l.product:variants">
						<MvDIMENSION INDEX = "{ l.item:variant_id + 1 }">
					</MvREFERENCEARRAY>

					<MvIF EXPR = "{ NOT ISNULL l.variant }">
						<MvASSIGN NAME = "l.variant:total_price"			VALUE = "{ l.variant:total_price + l.item:total }">
						
						<MvIF EXPR = "{ l.variant:qualifying }">
							<MvASSIGN NAME = "l.variant:qualifying_price"	VALUE = "{ l.variant:qualifying_price + l.item:total }">
						</MvIF>

						<MvIF EXPR = "{ l.variant:eligible }">
							<MvASSIGN NAME = "l.variant:eligible_price"		VALUE = "{ l.variant:eligible_price + l.item:total }">
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_SubTotal_Fixed" PARAMETERS = "discount_state var, amount" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.charge"									VALUE = "{ l.discount_state:charge }">
	<MvASSIGN NAME = "l.charge:module_id"						VALUE = 0>

	<MvIF EXPR = "{ l.amount GT l.discount_state:item_price }">
		<MvASSIGN NAME = "l.amount"								VALUE = "{ l.discount_state:item_price }">
	<MvELSEIF EXPR = "{ l.amount GT l.discount_state:total_price }">
		<MvASSIGN NAME = "l.amount"								VALUE = "{ l.discount_state:total_price }">
	</MvIF>

	<MvIF EXPR = "{ l.amount EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.charge:amount"							VALUE = "{ ( 0 - l.amount ) ROUND 2 }">
	<MvASSIGN NAME = "l.charge:disp_amt"						VALUE = "{ l.charge:amount }">

	<MvASSIGN NAME = "l.discount_state:charge_count"			VALUE = "{ miva_array_insert( l.discount_state:charges, l.charge, -1 ) }">
	<MvASSIGN NAME = "l.discount_state:charge_price"			VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:discount_charge_total"	VALUE = "{ l.discount_state:discount_charge_total + ( l.amount ROUND 2 ) }">

	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:total_price + l.charge:amount }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, l.amount ROUND 2 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_SubTotal_Percent" PARAMETERS = "discount_state var, percent" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.charge"									VALUE = "{ l.discount_state:charge }">
	<MvASSIGN NAME = "l.charge:module_id"						VALUE = 0>

	<MvASSIGN NAME = "l.discount"								VALUE = "{ ( l.discount_state:item_price * ( l.percent / 100 ) ) ROUND 2 }">

	<MvIF EXPR = "{ l.discount GT l.discount_state:total_price }">
		<MvASSIGN NAME = "l.discount"							VALUE = "{ l.discount_state:total_price }">
	</MvIF>

	<MvIF EXPR = "{ l.discount EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.charge:amount"							VALUE = "{ 0 - l.discount }">
	<MvASSIGN NAME = "l.charge:disp_amt"						VALUE = "{ l.charge:amount }">

	<MvASSIGN NAME = "l.discount_state:charge_count"			VALUE = "{ miva_array_insert( l.discount_state:charges, l.charge, -1 ) }">
	<MvASSIGN NAME = "l.discount_state:charge_price"			VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:discount_charge_total"	VALUE = "{ l.discount_state:discount_charge_total + l.discount }">

	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:total_price + l.charge:amount }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, l.discount ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Eligible_Fixed" PARAMETERS = "discount_state var, discount" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.charge"									VALUE = "{ l.discount_state:charge }">
	<MvASSIGN NAME = "l.charge:module_id"						VALUE = 0>

	<MvIF EXPR = "{ l.discount GT l.discount_state:eligible_price }">
		<MvASSIGN NAME = "l.discount"							VALUE = "{ l.discount_state:eligible_price }">
	<MvELSEIF EXPR = "{ l.discount GT l.discount_state:total_price }">
		<MvASSIGN NAME = "l.discount"							VALUE = "{ l.discount_state:total_price }">
	</MvIF>

	<MvIF EXPR = "{ l.discount EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.charge:amount"							VALUE = "{ ( 0 - l.discount ) ROUND 2 }">
	<MvASSIGN NAME = "l.charge:disp_amt"						VALUE = "{ l.charge:amount }">

	<MvASSIGN NAME = "l.discount_state:charge_count"			VALUE = "{ miva_array_insert( l.discount_state:charges, l.charge, -1 ) }">
	<MvASSIGN NAME = "l.discount_state:charge_price"			VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:discount_charge_total"	VALUE = "{ l.discount_state:discount_charge_total + ( l.discount ROUND 2 ) }">

	<MvASSIGN NAME = "l.discount_state:eligible_price"			VALUE = "{ l.discount_state:eligible_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:total_price + l.charge:amount }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, l.discount ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Eligible_Percent" PARAMETERS = "discount_state var, percent" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.charge"									VALUE = "{ l.discount_state:charge }">
	<MvASSIGN NAME = "l.charge:module_id"						VALUE = 0>

	<MvASSIGN NAME = "l.discount"								VALUE = "{ ( l.discount_state:eligible_price * ( l.percent / 100 ) ) ROUND 2 }">

	<MvIF EXPR = "{ l.discount GT l.discount_state:total_price }">
		<MvASSIGN NAME = "l.discount"							VALUE = "{ l.discount_state:total_price }">
	</MvIF>

	<MvIF EXPR = "{ l.discount EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.charge:amount"							VALUE = "{ 0 - l.discount }">
	<MvASSIGN NAME = "l.charge:disp_amt"						VALUE = "{ l.charge:amount }">

	<MvASSIGN NAME = "l.discount_state:charge_count"			VALUE = "{ miva_array_insert( l.discount_state:charges, l.charge, -1 ) }">
	<MvASSIGN NAME = "l.discount_state:charge_price"			VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:discount_charge_total"	VALUE = "{ l.discount_state:discount_charge_total + l.discount }">

	<MvASSIGN NAME = "l.discount_state:eligible_price"			VALUE = "{ l.discount_state:eligible_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:total_price"				VALUE = "{ l.discount_state:total_price + l.charge:amount }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, l.discount ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Item_Add" PARAMETERS = "discount_state var, item var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.item:inventory_delta"			VALUE = "{ 0 - l.item:quantity }">

	<MvIF EXPR = "{ ISNULL l.item:retail }">
		<MvASSIGN NAME = "l.item:retail"				VALUE = "{ l.item:price }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.item:base_price }">
		<MvASSIGN NAME = "l.item:base_price"			VALUE = "{ l.item:price }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.item:eligible_price }">
		<MvASSIGN NAME = "l.item:eligible_price"		VALUE = "{ l.item:price }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.discount_state:basket }">
		<MvASSIGN NAME = "l.item:basket_id"				VALUE = "{ l.discount_state:basket:basket_id }">
	<MvELSEIF EXPR = "{ NOT ISNULL l.discount_state:order }">
		<MvASSIGN NAME = "l.item:order_id"				VALUE = "{ l.discount_state:order:id }">
		<MvASSIGN NAME = "l.item:status"				VALUE = 0>
		<MvASSIGN NAME = "l.item:shpmnt_id"				VALUE = 0>
		<MvASSIGN NAME = "l.item:rma_id"				VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.item:line_id"					VALUE = 0>
	<MvASSIGN NAME = "l.item:total_price"				VALUE = "{ l.item:base_price }">
	<MvASSIGN NAME = "l.item:total_weight"				VALUE = "{ l.item:weight }">

	<MvFOREACH ITERATOR = "l.option" ARRAY = "l.item:options" COUNT = "{ l.item:option_count }">
		<MvIF EXPR = "{ ISNULL l.option:base_price }">
			<MvASSIGN NAME = "l.option:base_price"		VALUE = "{ l.option:price }">
		</MvIF>

		<MvASSIGN NAME = "l.option:discount_count"		VALUE = 0>
		<MvASSIGN NAME = "l.item:total_price"			VALUE = "{ l.item:total_price + l.option:price }">
		<MvASSIGN NAME = "l.item:total_weight"			VALUE = "{ l.item:total_weight + l.option:price }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.item:discount_count"			VALUE = 0>
	<MvASSIGN NAME = "l.item_total_price"				VALUE = "{ l.item:total_price * l.item:quantity }">
	<MvASSIGN NAME = "l.item_total_weight"				VALUE = "{ l.item:total_weight * l.item:quantity }">
	<MvASSIGN NAME = "l.discount_state:item_count"		VALUE = "{ miva_array_insert_ref( l.discount_state:items, l.item, -1 ) }">

	<MvASSIGN NAME = "l.discount_state:item_quantity"	VALUE = "{ l.discount_state:item_quantity + l.item:quantity }">
	<MvASSIGN NAME = "l.discount_state:item_price"		VALUE = "{ l.discount_state:item_price + l.item_total_price }">
	<MvASSIGN NAME = "l.discount_state:item_weight"		VALUE = "{ l.discount_state:item_weight + l.item_total_weight }">

	<MvASSIGN NAME = "l.discount_state:total_price"		VALUE = "{ l.discount_state:total_price + l.item_total_price }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Item_Product_Totals( l.discount_state, l.item ) }">
	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Quantity( l.discount_state, l.item:quantity ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Charge_Total" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.discount_state:charge_price }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Charge_Total_Type" PARAMETERS = "discount_state var, type" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.total"			VALUE = 0.00>

	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.discount_state:charges" COUNT = "{ l.discount_state:charge_count }">
		<MvIF EXPR = "{ ( NOT l.charge:deleted ) AND ( l.charge:type EQ l.type ) }">
			<MvASSIGN NAME = "l.total"	VALUE = "{ l.total + l.charge:amount }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.total }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Charges" PARAMETERS = "discount_state var, type, charges var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.charges"				VALUE = "">
	<MvASSIGN NAME = "l.charge_count"			VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.charge" ARRAY = "l.discount_state:charges" COUNT = "{ l.discount_state:charge_count }">
		<MvIF EXPR = "{ ( NOT l.charge:deleted ) AND ( l.charge:type EQ l.type ) }">
			<MvASSIGN NAME = "l.charge_count"	VALUE = "{ miva_array_insert_ref( l.charges, l.discount_state:charges[ l.pos ], -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.charge_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Merge_Charge" PARAMETERS = "discount_state var, charge var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.charge:charge_id"				VALUE = 0>
	<MvASSIGN NAME = "l.charge:undiscounted_amount"		VALUE = "{ l.charge:amount }">
	<MvASSIGN NAME = "l.charge:undiscounted_disp_amt"	VALUE = "{ l.charge:disp_amt }">

	<MvASSIGN NAME = "l.discount_state:charge_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:charges, l.charge, -1 ) }">
	<MvASSIGN NAME = "l.discount_state:charge_price"	VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:total_price"		VALUE = "{ l.discount_state:total_price + l.charge:amount }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Delete_Charge_All_Type" PARAMETERS = "discount_state var, type" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.discount_state:charges" COUNT = "{ l.discount_state:charge_count }">
		<MvIF EXPR = "{ ( NOT l.charge:deleted ) AND ( l.charge:type EQ l.type ) }">
			<MvASSIGN NAME = "l.charge:deleted"					VALUE = 1>
			<MvASSIGN NAME = "l.discount_state:charge_price"	VALUE = "{ l.discount_state:charge_price - l.charge:amount }">
			<MvASSIGN NAME = "l.discount_state:total_price"		VALUE = "{ l.discount_state:total_price - l.charge:amount }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Charge_Fixed" PARAMETERS = "discount_state var, charge var, amount, disp_amt" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.amount"							VALUE = "{ l.amount ROUND 2 }">
	<MvASSIGN NAME = "l.disp_amt"						VALUE = "{ l.disp_amt ROUND 2 }">

	<MvIF EXPR = "{ l.amount GT l.discount_state:total_price }">
		<MvASSIGN NAME = "l.amount"						VALUE = "{ l.discount_state:total_price }">
	</MvIF>

	<MvIF EXPR = "{ l.amount EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.charge:modified"				VALUE = 1>
	<MvASSIGN NAME = "l.charge:amount"					VALUE = "{ l.charge:amount - l.amount }">
	<MvASSIGN NAME = "l.charge:disp_amt"				VALUE = "{ l.charge:disp_amt - l.disp_amt }">

	<MvASSIGN NAME = "l.discount_state:charge_price"	VALUE = "{ l.discount_state:charge_price - l.amount }">
	<MvASSIGN NAME = "l.discount_state:total_price"		VALUE = "{ l.discount_state:total_price - l.amount }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, l.amount ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_Discount_Charge_Add" PARAMETERS = "discount_state var, charge var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.charge:charge_id"				VALUE = 0>

	<MvASSIGN NAME = "l.charge:undiscounted_amount"		VALUE = 0.00>
	<MvASSIGN NAME = "l.charge:undiscounted_disp_amt"	VALUE = 0.00>

	<MvASSIGN NAME = "l.discount_state:charge_count"	VALUE = "{ miva_array_insert_ref( l.discount_state:charges, l.charge, -1 ) }">
	<MvASSIGN NAME = "l.discount_state:charge_price"	VALUE = "{ l.discount_state:charge_price + l.charge:amount }">
	<MvASSIGN NAME = "l.discount_state:total_price"		VALUE = "{ l.discount_state:total_price + l.charge:amount }">

	<MvEVAL EXPR = "{ DiscountState_Increment_Discount_Total( l.discount_state, 0 - l.charge:amount ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_BasketOrOrderInfo_Load" PARAMETERS = "discount_state var, module_id, type, info var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ISNULL l.discount_state:basket }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].BasketInfo_Load( l.discount_state:basket:basket_id, l.module_id, l.type, l.info ) }">
	<MvELSEIF EXPR = "{ NOT ISNULL l.discount_state:order }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].OrderInfo_Load( l.discount_state:order:id, l.module_id, l.type, l.info ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-UTL-00001', 'Unknown discount state origin' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountState_IEEE754_Normalize" PARAMETERS = "discount_state var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| This function has been deprecated
	|
	</MvCOMMENT>
</MvFUNCTION>

<MvFUNCTION NAME = "Coupon_Generate_Code" PARAMETERS = "prefix" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Randomly generated coupon codes consist of 8 base-32 characters, using a total of 40bits of
	| random data.
	|
	| Input Byte:		11111111 22222222 33333333 44444444 55555555
	| Output Character:	11111222 22333334 44445555 56666677 77788888
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.base32chars"	VALUE = "0123456789ABCDEFGHJKLMNPQRSTUVWX">
	<MvASSIGN NAME = "l.data_1"			VALUE = "{ asciivalue( crypto_rand_bytes( 1 ) ) }">
	<MvASSIGN NAME = "l.data_2"			VALUE = "{ asciivalue( crypto_rand_bytes( 1 ) ) }">
	<MvASSIGN NAME = "l.data_3"			VALUE = "{ asciivalue( crypto_rand_bytes( 1 ) ) }">
	<MvASSIGN NAME = "l.data_4"			VALUE = "{ asciivalue( crypto_rand_bytes( 1 ) ) }">
	<MvASSIGN NAME = "l.data_5"			VALUE = "{ asciivalue( crypto_rand_bytes( 1 ) ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.prefix																							$
								 substring_var( l.base32chars, 1 + ( l.data_1 BITSR 3 ),										1 )	$
								 substring_var( l.base32chars, 1 + ( ( l.data_1 BITAND 7 ) BITSL 2 ) + ( l.data_2 BITSR 6 ),	1 )	$
								 substring_var( l.base32chars, 1 + ( ( l.data_2 BITAND 62 ) BITSR 1 ),							1 )	$
								 substring_var( l.base32chars, 1 + ( ( l.data_2 BITAND 1 ) BITSL 4 ) + ( l.data_3 BITSR 4 ),	1 )	$
								 substring_var( l.base32chars, 1 + ( ( l.data_3 BITAND 15 ) BITSL 1 ) + ( l.data_4 BITSR 7 ),	1 )	$
								 substring_var( l.base32chars, 1 + ( ( l.data_4 BITAND 124 ) BITSR 2 ),							1 )	$
								 substring_var( l.base32chars, 1 + ( ( l.data_4 BITAND 3 ) BITSL 3 ) + ( l.data_5 BITSR 5 ),	1 )	$
								 substring_var( l.base32chars, 1 + ( l.data_5 BITAND 31 ),										1 )	}">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountSignature_Calculate_Cached" PARAMETERS = "cust_id, signature var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.cust_id LT 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cached_discountsignature"				VARIABLE = "g.Session">
		<MvMEMBER NAME = "cache">
		<MvMEMBER NAME = "discountsignature_calculate_cached">
		<MvDIMENSION INDEX = "{ l.cust_id + 1 }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cached_discountsignature:result }">
		<MvASSIGN NAME = "l.cached_discountsignature:result"			VALUE = "{ DiscountSignature_Calculate( l.cust_id, l.cached_discountsignature:signature ) }">
		<MvIF EXPR = "{ NOT l.cached_discountsignature:result }">
			<MvASSIGN NAME = "l.cached_discountsignature:error_code"	VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cached_discountsignature:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cached_discountsignature:error_db_eof"	VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cached_discountsignature:result }">
		<MvIF EXPR = "{ l.cached_discountsignature:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cached_discountsignature:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cached_discountsignature:error_code, l.cached_discountsignature:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.signature"										VALUE = "{ l.cached_discountsignature:signature }">

	<MvFUNCTIONRETURN VALUE = "{ l.cached_discountsignature:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "DiscountSignature_Calculate" PARAMETERS = "cust_id, signature var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pricegroup_count"	VALUE = "{ ResolvedPriceGroupAndModuleList_Load_Customer_Cached( l.cust_id, l.pricegroups ) }">
	<MvASSIGN NAME = "l.signature"			VALUE = "{ PriceGroupList_Signature( l.pricegroups, l.pricegroup_count ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupList_Signature" PARAMETERS = "pricegroups var, pricegroup_count" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ l.pricegroup_count }">
		<MvASSIGN NAME = "l.ids" INDEX = "{ l.pos }" VALUE = "{ l.pricegroup:id }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ crypto_md5( l.ids ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PriceGroupList_Register_Signature" PARAMETERS = "pricegroups var, pricegroup_count, discountsignature var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.signature"						VALUE = "{ PriceGroupList_Signature( l.pricegroups, l.pricegroup_count ) }">

	<MvCOMMENT>
	|
	| If this signature has been previously registered, make sure it is marked as in use so it will not be deleted.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].DiscountSignature_Load_Signature( l.signature, l.discountsignature ) }">
		<MvIF EXPR = "{ l.discountsignature:inuse }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.discountsignature:inuse"	VALUE = 1>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_Filename_PGR_DB ].DiscountSignature_Update( l.discountsignature ) }">
	</MvIF>

	<MvASSIGN NAME = "l.discountsignature:id"			VALUE = 0>
	<MvASSIGN NAME = "l.discountsignature:signature"	VALUE = "{ l.signature }">
	<MvASSIGN NAME = "l.discountsignature:inuse"		VALUE = 1>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].DiscountSignature_Insert( l.discountsignature ) }">
		<MvIF EXPR = "{ [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_Filename_PGR_DB ].DiscountSignature_Load_Signature( l.signature, l.discountsignature ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ l.pricegroup_count }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].DiscountSignatureXPriceGroup_Insert( l.discountsignature:id, l.pricegroup:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Discount_LockFile" PARAMETERS = "basket var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ g.MerchantPath $ crypto_md5( l.basket:session_id $ ' rediscounting lock file' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Assign_Persistent_PriceGroup" PARAMETERS = "basket_id, pricegroup_name" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_Name( l.pricegroup_name, l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_ID_Register( l.basket_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.basketdiscounttotal" 			VALUE = "">
	<MvASSIGN NAME = "l.basketdiscounttotal:basket_id" 	VALUE = "{ l.basket_id }">
	<MvASSIGN NAME = "l.basketdiscounttotal:pgrp_id" 	VALUE = "{ l.pricegroup:id }">
	<MvASSIGN NAME = "l.basketdiscounttotal:coupon_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.basketdiscounttotal:total" 		VALUE = 0.00>
	<MvASSIGN NAME = "l.basketdiscounttotal:persist" 	VALUE = 1>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Insert( l.basketdiscounttotal ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Update_Persistent( l.basketdiscounttotal:basket_id, l.basketdiscounttotal:pgrp_id, 1 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Basket_Remove_Persistent_PriceGroup" PARAMETERS = "basket_id, pricegroup_name" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_Name( l.pricegroup_name, l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].BasketDiscountTotal_Delete_Basket_Persistent( l.basket_id, l.pricegroup:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Discount_LockFile" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ g.MerchantPath $ crypto_md5( l.order:id $ ' rediscounting lock file' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_AdjustTotal" PARAMETERS = "order var, precalc_total, precalc_discount_total" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].DiscountOptions_Load_Cached( l.discountoptions ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.discountoptions:repricetot EQ 'increase' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| If order total went up AND the total discounts went down after rediscounting the order, add an
	| adjustment to prevent the order total from increasing, but do not ever allow the overall total
	| to go down as a result of the adjustment.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.new_total"					VALUE = "{ [ g.Module_Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ l.new_total LE l.precalc_total }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Total_Order( l.order:id, l.new_discount_total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.new_discount_total GE l.precalc_discount_total }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.delta_order"				VALUE = "{ l.new_total - l.precalc_total }">
	<MvASSIGN NAME = "l.delta_discount"				VALUE = "{ l.precalc_discount_total - l.new_discount_total }">

	<MvIF EXPR = "{ l.delta_order LT l.delta_discount }">
		<MvASSIGN NAME = "l.adjustment"				VALUE = "{ l.delta_order }">
	<MvELSE>
		<MvASSIGN NAME = "l.adjustment"				VALUE = "{ l.delta_discount }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Order_Apply_Adjustment( l.order, l.discountoptions, l.adjustment ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Apply_Adjustment" PARAMETERS = "order var, discountoptions var, adjustment" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.discountoptions:repricetot EQ 'item' }">
		<MvASSIGN NAME = "l.orderitem_count"					VALUE = "{ [ g.Module_Library_DB ].OrderItemList_Load_Order( l.order:id, l.orderitems ) }">

		<MvIF EXPR = "{ miva_array_search( l.orderitems, 1, l.existing_item, '( l.existing_item:product_id EQ 0 ) AND ( strcasecmp( l.existing_item:code, l.discountoptions:adj_code ) EQ 0 ) AND l.existing_item:taxable AND ( l.existing_item:quantity EQ 1 )' ) }">
			<MvASSIGN NAME = "l.existing_item:base_price"		VALUE = "{ l.existing_item:base_price - l.adjustment }">
			<MvASSIGN NAME = "l.existing_item:price"			VALUE = "{ l.existing_item:price - l.adjustment }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Update( l.existing_item ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvASSIGN NAME = "l.new_item"						VALUE = "">
			<MvASSIGN NAME = "l.new_item:order_id"				VALUE = "{ l.order:id }">
			<MvASSIGN NAME = "l.new_item:line_id"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:status"				VALUE = 999>
			<MvASSIGN NAME = "l.new_item:shpmnt_id"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:rma_id"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:product_id"			VALUE = 0>
			<MvASSIGN NAME = "l.new_item:code"					VALUE = "{ l.discountoptions:adj_code }">
			<MvASSIGN NAME = "l.new_item:name"					VALUE = "{ l.discountoptions:adj_name }">
			<MvASSIGN NAME = "l.new_item:quantity"				VALUE = 1>
			<MvASSIGN NAME = "l.new_item:base_price"			VALUE = "{ 0 - l.adjustment }">
			<MvASSIGN NAME = "l.new_item:price"					VALUE = "{ 0 - l.adjustment }">
			<MvASSIGN NAME = "l.new_item:weight"				VALUE = 0.00>
			<MvASSIGN NAME = "l.new_item:taxable"				VALUE = 1>
			<MvASSIGN NAME = "l.new_item:upsold"				VALUE = 0>
			<MvASSIGN NAME = "l.new_item:tax"					VALUE = 0.00>
			<MvASSIGN NAME = "l.new_item:option_count"			VALUE = 0>
			<MvASSIGN NAME = "l.new_item:discount_count"		VALUE = 0>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Insert( l.new_item ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	<MvELSEIF EXPR = "{ l.discountoptions:repricetot EQ 'charge' }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].OrderCharge_Load( l.order:id, 0, 'GOODWILL', l.existing_charge ) }">
			<MvASSIGN NAME = "l.existing_charge:amount"			VALUE = "{ l.existing_charge:amount - l.adjustment }">
			<MvASSIGN NAME = "l.existing_charge:disp_amt"		VALUE = "{ l.existing_charge:amount }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderCharge_Update( l.existing_charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.new_charge"						VALUE = "">
			<MvASSIGN NAME = "l.new_charge:order_id"			VALUE = "{ l.order:id }">
			<MvASSIGN NAME = "l.new_charge:module_id"			VALUE = 0>
			<MvASSIGN NAME = "l.new_charge:type"				VALUE = "GOODWILL">
			<MvASSIGN NAME = "l.new_charge:descrip"				VALUE = "{ l.discountoptions:adj_charge }">
			<MvASSIGN NAME = "l.new_charge:amount"				VALUE = "{ 0 - l.adjustment }">
			<MvASSIGN NAME = "l.new_charge:disp_amt"			VALUE = "{ l.new_charge:amount }">
			<MvASSIGN NAME = "l.new_charge:tax_exempt"			VALUE = 0>
			<MvASSIGN NAME = "l.new_charge:tax"					VALUE = 0.00>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderCharge_Insert( l.new_charge ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Assign_Coupon" PARAMETERS = "order var, coupon var" STANDARDOUTPUTLEVEL = "">
	<MvLOCKFILE FILE = "{ Order_Discount_LockFile( l.order ) }">
		<MvASSIGN NAME = "l.result"	VALUE = "{ Order_Assign_Coupon_LowLevel( l.order, l.coupon ) }">
	</MvLOCKFILE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Assign_Coupon_LowLevel" PARAMETERS = "order var, coupon var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order:id, l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Do nothing if the coupon is already assigned
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].OrderCoupon_Load( l.order:id, l.coupon:id, l.null ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Merge coupon price groups into the set of price groups already assigned to the order, preferring manually
	| assigned price groups over those from the coupon, then replace all of the OrderDiscountTotal records with
	| placeholders that will be populated by the Discount_Order call below.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.pricegroup_count"			VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Order( l.order:id, l.pricegroups ) }">
	<MvASSIGN NAME = "l.coupon_pricegroup_count"	VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Coupon( l.coupon:id, l.coupon_pricegroups ) }">

	<MvEVAL EXPR = "{ Discount_Merge_PriceGroups( l.pricegroups, l.pricegroup_count, l.coupon_pricegroups, l.coupon_pricegroup_count, l.null, l.null ) }">

	<MvASSIGN NAME = "l.resolved_pricegroup_count"	VALUE = "{ Discount_Resolve_PriceGroup_Exclusions( l.pricegroups, l.pricegroup_count, l.resolved_pricegroups ) }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Delete_All_Order( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.resolved_pricegroups" COUNT = "{ l.resolved_pricegroup_count }">
		<MvASSIGN NAME = "l.orderdiscounttotal:order_id"	VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:pgrp_id"		VALUE = "{ l.pricegroup:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:coupon_id"	VALUE = "{ l.pricegroup:coupon_id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:name"		VALUE = "{ l.pricegroup:name }">
		<MvASSIGN NAME = "l.orderdiscounttotal:priority"	VALUE = "{ l.pricegroup:priority }">
		<MvASSIGN NAME = "l.orderdiscounttotal:descrip"		VALUE = "{ l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.orderdiscounttotal:total"		VALUE = 0.00>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Insert( l.orderdiscounttotal ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Insert OrderCoupon entry so it can be updated by Discount_Order_WithParams
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.ordercoupon:order_id"				VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "l.ordercoupon:coupon_id"				VALUE = "{ l.coupon:id }">
	<MvASSIGN NAME = "l.ordercoupon:code"					VALUE = "{ l.coupon:code }">
	<MvASSIGN NAME = "l.ordercoupon:descrip"				VALUE = "{ l.coupon:descrip }">
	<MvASSIGN NAME = "l.ordercoupon:total"					VALUE = 0.00>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderCoupon_Insert( l.ordercoupon ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Rediscount order
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.discount_params" VALUE = "">

	<MvEVAL EXPR = "{ Discount_Order_BuildParam_RecalculateShippingIfDiscounted( l.discount_params ) }">
	<MvEVAL EXPR = "{ Discount_Order_BuildParam_RecalculateTax( l.discount_params ) }">

	<MvIF EXPR = "{ NOT Discount_Order_WithParams( l.order, l.discount_params ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Adjust coupon use counts
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Increment_UseCount( l.coupon:id, 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.order:bill_email }">
		<MvASSIGN NAME = "l.couponxanonymousshopper:coupon_id"	VALUE = "{ l.coupon:id }">
		<MvASSIGN NAME = "l.couponxanonymousshopper:bill_email"	VALUE = "{ l.order:bill_email }">
		<MvASSIGN NAME = "l.couponxanonymousshopper:use_count"	VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXAnonymousShopper_Insert( l.couponxanonymousshopper ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXAnonymousShopper_Increment_UseCount( l.coupon:id, l.order:bill_email, 1 ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.order:cust_id }">
		<MvASSIGN NAME = "l.couponxshopper:coupon_id"	VALUE = "{ l.coupon:id }">
		<MvASSIGN NAME = "l.couponxshopper:cust_id"		VALUE = "{ l.order:cust_id }">
		<MvASSIGN NAME = "l.couponxshopper:use_count"	VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXShopper_Insert( l.couponxshopper ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXShopper_Increment_UseCount( l.coupon:id, l.order:cust_id, 1 ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Unassign_Coupon" PARAMETERS = "order var, coupon var" STANDARDOUTPUTLEVEL = "">
	<MvLOCKFILE FILE = "{ Order_Discount_LockFile( l.order ) }">
		<MvASSIGN NAME = "l.result"	VALUE = "{ Order_Unassign_Coupon_LowLevel( l.order, l.coupon ) }">
	</MvLOCKFILE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "Order_Unassign_Coupon_LowLevel" PARAMETERS = "order var, coupon var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order:id, l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Do nothing if the coupon is already unassigned
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderCoupon_Load( l.order:id, l.coupon:id, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Determine if any existing discounts impacted shipping, so that we can force recalculation after the discounts for this coupon are removed
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT DiscountState_CreateFromOrder( l.order, l.discount_state ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.pricegroup_count"				VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Order( l.order:id, l.pricegroups ) }">

	<MvEVAL EXPR = "{ DiscountState_Set_PriceGroups( l.discount_state, l.pricegroups, l.pricegroup_count ) }">

	<MvASSIGN NAME = "l.force_shipping_recalculation"	VALUE = "{ DiscountState_Discounts_Shipping( l.discount_state ) }">

	<MvCOMMENT>
	|
	| Clear coupon assignment and all associated price groups
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderCoupon_Delete( l.order:id, l.coupon:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Delete_All_Order_Coupon( l.order:id, l.coupon:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Rediscount order
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.discount_params" VALUE = "">

	<MvIF EXPR = "{ l.force_shipping_recalculation }">
		<MvEVAL EXPR = "{ Discount_Order_BuildParam_RecalculateShipping( l.discount_params ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ Discount_Order_BuildParam_RecalculateShippingIfDiscounted( l.discount_params ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Discount_Order_BuildParam_RecalculateTax( l.discount_params ) }">

	<MvIF EXPR = "{ NOT Discount_Order_WithParams( l.order, l.discount_params ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Adjust coupon use counts
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.coupon:use_count GT 0 }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Decrement_UseCount( l.coupon:id, 1 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.order:bill_email }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXAnonymousShopper_Load( l.coupon:id, l.order:bill_email, l.couponxanonymousshopper ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ l.couponxanonymousshopper:use_count GT 0 }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXAnonymousShopper_Decrement_UseCount( l.coupon:id, l.order:bill_email, 1 ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.order:cust_id }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXShopper_Load( l.coupon:id, l.order:cust_id, l.couponxshopper ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ l.couponxshopper:use_count GT 0 }">
			<MvIF EXPR = "{  NOT [ g.Feature_Filename_PGR_DB ].CouponXShopper_Decrement_UseCount( l.coupon:id, l.order:cust_id, 1 ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

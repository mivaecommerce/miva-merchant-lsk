<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-PGR-JSN-
| Next Error Code: 128   
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_DiscountModule_Capabilities" PARAMETERS = "capabilities var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"preitems":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.capabilities:preitems ) }">,
	"items":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.capabilities:items ) }">,
	"eligibility":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.capabilities:eligibility ) }">",
	"basket":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.capabilities:basket ) }">,
	"shipping":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.capabilities:shipping ) }">,
	"qualifying":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.capabilities:qualifying ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_DiscountModuleFieldList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Module_ID"		VALUE = "{ int( g.Module_ID ) }">
	<MvASSIGN NAME = "g.PriceGroup_ID"	VALUE = "{ int( g.PriceGroup_ID ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID( g.Module_ID, l.module ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00001', 'Discount module not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Features( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.module:feature_hash:discount }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00002', 'Module \'' $ l.module:name $ '\' does not implement the discount feature' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.module:active }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00003', 'Module \'' $ l.module:name $ '\' has been deactivated' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.PriceGroup_ID EQ 0 }">
		<MvASSIGN NAME = "l.pricegroup"			VALUE = "">
		<MvASSIGN NAME = "l.pricegroup:id"		VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( g.PriceGroup_ID, l.pricegroup ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00004', 'Price group not found' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].DiscountModule_Capabilities( l.module, l.capabilities ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"capabilities":
		{
			<MvEVAL EXPR = "{ JSON_DiscountModule_Capabilities( l.capabilities ) }">
		},
		"fields":
		[
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.fields" VALUE = "{ DiscountModule_Fields( l.module, l.pricegroup ) }">

			<MvASSIGN NAME = "l.field_pos"		VALUE = 1>
			<MvASSIGN NAME = "l.field_code"		VALUE = "{ trim( gettoken( l.fields, ',', l.field_pos ) ) }">

			<MvWHILE EXPR = "{ len( l.field_code ) }">
				<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.prompt" VALUE = "{ DiscountModule_Prompt( l.module, l.field_code ) }">
				<MvCAPTURE VARIABLE = "l.field"><MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.ok" VALUE = "{ DiscountModule_Field( l.module, l.field_code ) }"></MvCAPTURE>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.field_count ) }">
				"code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field_code ) }">",
				"prompt":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.prompt ) }">",
				"field":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field ) }">"
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

				<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
				<MvASSIGN NAME = "l.field_code"	VALUE = "{ trim( gettoken( l.fields, ',', l.field_pos ) ) }">
			</MvWHILE>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BasePriceGroupList_Filters" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.available_filters" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.id',			'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.name',			'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.custscope',	'custscope' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.rate',			'rate' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.discount',		'discount' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.markup',		'markup' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'pg.dt_start',		'dt_start' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'pg.dt_end',		'dt_end' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.module_id',	'module_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pg.exclusion',	'exclusion' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.descrip',		'descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pg.display',		'display' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmn_subtot',	'qmn_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmx_subtot',	'qmx_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.qmn_quan',		'qmn_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.qmx_quan',		'qmx_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmn_weight',	'qmn_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmx_weight',	'qmx_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmn_subtot',	'bmn_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmx_subtot',	'bmx_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.bmn_quan',		'bmn_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.bmx_quan',		'bmx_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmn_weight',	'bmn_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmx_weight',	'bmx_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.priority',		'priority' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'm.name',			'type' ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.available_filters }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup" PARAMETERS = "pricegroup var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.pricegroup:id ) }">,
	"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.pricegroup:name ) }">",
	"custscope":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.pricegroup:custscope ) }">",
	"rate":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.pricegroup:rate ) }">",
	"discount":		<MvEVAL EXPR = "{ l.pricegroup:discount ROUND 2 }">,
	"markup":		<MvEVAL EXPR = "{ l.pricegroup:markup ROUND 2 }">,
	"dt_start":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.pricegroup:dt_start ) }">,
	"dt_end":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.pricegroup:dt_end ) }">,
	"qmn_subtot":	<MvEVAL EXPR = "{ l.pricegroup:qmn_subtot ROUND 2 }">,
	"qmx_subtot":	<MvEVAL EXPR = "{ l.pricegroup:qmx_subtot ROUND 2 }">,
	"qmn_quan":		<MvEVAL EXPR = "{ int( l.pricegroup:qmn_quan ) }">,
	"qmx_quan":		<MvEVAL EXPR = "{ int( l.pricegroup:qmx_quan ) }">,
	"qmn_weight":	<MvEVAL EXPR = "{ l.pricegroup:qmn_weight ROUND 2 }">,
	"qmx_weight":	<MvEVAL EXPR = "{ l.pricegroup:qmx_weight ROUND 2 }">,
	"bmn_subtot":	<MvEVAL EXPR = "{ l.pricegroup:bmn_subtot ROUND 2 }">,
	"bmx_subtot":	<MvEVAL EXPR = "{ l.pricegroup:bmx_subtot ROUND 2 }">,
	"bmn_quan":		<MvEVAL EXPR = "{ int( l.pricegroup:bmn_quan ) }">,
	"bmx_quan":		<MvEVAL EXPR = "{ int( l.pricegroup:bmx_quan ) }">,
	"bmn_weight":	<MvEVAL EXPR = "{ l.pricegroup:bmn_weight ROUND 2 }">,
	"bmx_weight":	<MvEVAL EXPR = "{ l.pricegroup:bmx_weight ROUND 2 }">,
	"priority":		<MvEVAL EXPR = "{ int( l.pricegroup:priority ) }">,

	<MvIF EXPR = "{ NOT ISNULL l.pricegroup:module:module }">
		"module":
		{
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.pricegroup:module ) }">
		},

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.pricegroup:module:module ].DiscountModule_Capabilities( l.pricegroup:module, l.capabilities ) }">
		"capabilities":
		{
			<MvEVAL EXPR = "{ JSON_DiscountModule_Capabilities( l.capabilities ) }">
		},
	</MvIF>

	"exclusion":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.pricegroup:exclusion ) }">,
	"descrip":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.pricegroup:descrip ) }">",
	"display":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.pricegroup:display ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pg.*, 
																				 m.id		AS module_id, 
																				 m.code		AS module_code, 
																				 m.name		AS module_name, 
																				 m.provider	AS module_provider, 
																				 m.api_ver	AS module_api_ver, 
																				 m.version	AS module_version, 
																				 m.module	AS module_module, 
																				 m.refcount	AS module_refcount, 
																				 m.active	AS module_active, 
																				 m.priority	AS module_priority' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'm.name', 'type' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroups', 'pg' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pg', 'Modules', 'm', 'pg.module_id = m.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, [ g.Module_Feature_PGR_JSON ].JSON_BasePriceGroupList_Filters() ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'id:pg.id,name:pg.name,type:m.name:null_char,custscope:pg.custscope,rate:pg.rate,discount:pg.discount,markup:pg.markup,
																		 dt_start:pg.dt_start,dt_end:pg.dt_end,priority:pg.priority;-pg.id,exclusion:pg.exclusion,descrip:pg.descrip,display:pg.display,
																		 qualifying_subtotal:pg.qmn_subtot,qualifying_quantity:pg.qmn_quan,qualifying_weight:pg.qmn_weight,
																		 basket_quantity:pg.bmn_quan,basket_subtotal:pg.bmn_subtot,basket_weight:pg.bmn_weight',
																		'-pg.priority;pg.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'PriceGroups', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00005', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.pricegroup_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT PriceGroups.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.pricegroup_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModule_Read( l.pricegroup ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.pricegroup_count ) }">
				<MvEVAL EXPR = "{ JSON_PriceGroup( l.pricegroup ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Loaders_Present" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'PriceGroup_ID' ) }">			<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Edit_PriceGroup' ) }">	<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'PriceGroup_Name' ) }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Load" PARAMETERS = "pricegroup var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'PriceGroup_ID', l.pricegroup_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( l.pricegroup_id, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00006', 'Price group not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_PriceGroup', l.pricegroup_name ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_Name( l.pricegroup_name, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00106', 'Price group not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'PriceGroup_Name', l.pricegroup_name ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_Name( l.pricegroup_name, l.pricegroup ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00101', 'Price group not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00102', 'Unable to load price group: One of PriceGroup_ID, Edit_PriceGroup or PriceGroup_Name must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExclusions_Validate" PARAMETERS = "pricegroup var, pricegroupexclusions var, pricegroupexclusion_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pricegroupexclusions" 		VALUE = "">
	<MvASSIGN NAME = "l.pricegroupexclusion_count" 	VALUE = 0>

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Exclusions' ) }">
		<MvFOREACH ITERATOR = "l.input_exclusion" ARRAY = "l.input_exclusions" COUNT = "{ [ g.Module_JSON ].JSON_Input_Array( 'Exclusions', l.input_exclusions ) }">
			<MvASSIGN NAME = "l.pricegroupexclusion:pgrp_id1"	VALUE = "{ l.pricegroup:id }"> <MvCOMMENT> This value is 0 when a price group is being inserted and will be updated once the price group has been created </MvCOMMENT>
			<MvASSIGN NAME = "l.pricegroupexclusion:pgrp_id2"	VALUE = 0>
			<MvASSIGN NAME = "l.pricegroupexclusion:scope"		VALUE = "">

			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Element_Integer( 	l.input_exclusion, 'R', 'id', 		l.pricegroupexclusion:pgrp_id2 ) OR
							NOT [ g.Module_JSON ].JSON_Input_Element_List( 		l.input_exclusion, 'R', 'scope',	l.pricegroupexclusion:scope, 'basket,group,item,none', 'B,G,I,' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ l.pricegroup:id AND l.pricegroupexclusion:pgrp_id2 EQ l.pricegroup:id }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00126', 'Price group cannot exclude itself' ) }">
			<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( l.pricegroupexclusion:pgrp_id2, l.null ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00122', 'Price group not found' ) }">
			<MvELSEIF EXPR = "{ miva_array_search( l.pricegroupexclusions, 1, l.exclusion, 'l.exclusion:pgrp_id2 EQ l.pricegroupexclusion:pgrp_id2' ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00123', 'An exclusion for price group \'' $ l.pricegroupexclusion:pgrp_id2 $ '\' has already been specified' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT ISNULL l.pricegroupexclusion:scope }">
				<MvASSIGN NAME = "l.pricegroupexclusion_count" VALUE = "{ miva_array_insert_var( l.pricegroupexclusions, l.pricegroupexclusion, -1 ) }">
			</MvIF>
		</MvFOREACH>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer_Array(	'o', 'Exclusion_PriceGroup_IDs', 	l.pricegroup_ids,	l.exclusion_count )	OR
						NOT [ g.Module_JSON ].JSON_Input_Text_Array(	'o', 'Exclusion_Scopes', 			l.scopes,			l.scope_count ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvFOR FIRST = 1 LAST = "{ l.exclusion_count }" INDEX = "l.pos">
			<MvASSIGN NAME = "l.pricegroupexclusion" 			VALUE = "">
			<MvASSIGN NAME = "l.pricegroupexclusion:pgrp_id1"	VALUE = "{ l.pricegroup:id }"> <MvCOMMENT> This value is 0 when a price group is being inserted and will be updated once the price group has been created </MvCOMMENT>
			<MvASSIGN NAME = "l.pricegroupexclusion:pgrp_id2"	VALUE = "{ l.pricegroup_ids[ l.pos ] }">

			<MvIF EXPR = "{ l.pricegroup:id AND l.pricegroupexclusion:pgrp_id2 EQ l.pricegroup:id }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00127', 'Price group cannot exclude itself' ) }">
			<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( l.pricegroupexclusion:pgrp_id2, l.null ) }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00124', 'Price group not found' ) }">
			<MvELSEIF EXPR = "{ miva_array_search( l.pricegroupexclusions, 1, l.exclusion, 'l.exclusion:pgrp_id2 EQ l.pricegroupexclusion:pgrp_id2' ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00125', 'An exclusion for price group \'' $ l.pricegroupexclusion:pgrp_id2 $ '\' has already been specified' ) }">
			</MvIF>
			
			<MvIF EXPR = "{ l.scopes[ l.pos ] EQ 'basket' }">		<MvASSIGN NAME = "l.pricegroupexclusion:scope" VALUE = "B">
			<MvELSEIF EXPR = "{ l.scopes[ l.pos ] EQ 'group' }">	<MvASSIGN NAME = "l.pricegroupexclusion:scope" VALUE = "G">
			<MvELSEIF EXPR = "{ l.scopes[ l.pos ] EQ 'item' }">		<MvASSIGN NAME = "l.pricegroupexclusion:scope" VALUE = "I">
			<MvELSE>												<MvFORCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.pricegroupexclusion_count" VALUE = "{ miva_array_insert_var( l.pricegroupexclusions, l.pricegroupexclusion, -1 ) }">
		</MvFOR>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExclusions_Insert" PARAMETERS = "pricegroup var, pricegroupexclusions var, pricegroupexclusion_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.previous_exclusion_count"				VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupExclusionList_Load_PriceGroup( l.pricegroup:id, l.previous_exclusions ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupExclusion_Delete_All_PriceGroup( l.pricegroup:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.pricegroupexclusion" ARRAY = "l.pricegroupexclusions" COUNT = "{ l.pricegroupexclusion_count }">
		<MvCOMMENT>
		|
		| Assign l.pricegroupexclusion:pgrp_id1 to the value of the base price group id
		| For new price groups, this id needs to be set here as it did not exist during validation
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.pricegroupexclusion:pgrp_id1"	VALUE = "{ l.pricegroup:id }">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupExclusion_Insert( l.pricegroupexclusion ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].PriceGroupExclusionCache_Update_WithPreviousExclusions( l.pricegroup, l.previous_exclusions, l.previous_exclusion_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00054', 'Exclusions for price group \'' $ l.pricegroup:name $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupList_Load_Exclusions" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].DiscountOptions_Load( l.discountoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Loaders_Present() }">
		<MvASSIGN NAME = "l.master_pricegroup:id"	VALUE = 0>
	<MvELSEIF EXPR = "{ NOT JSON_PriceGroup_Load( l.master_pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroup_count"			VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupAndModuleList_Load_All( l.pricegroups ) }">
	<MvIF EXPR = "{ l.pricegroup_count EQ 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.master_pricegroup:id EQ 0 }">
		<MvASSIGN NAME = "l.exclusion_count"		VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.exclusion_count"		VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupExclusionList_Load_PriceGroup( l.master_pricegroup:id, l.exclusions ) }">
		<MvIF EXPR = "{ l.exclusion_count EQ 0 }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ l.pricegroup_count }">
			<MvIF EXPR = "{ l.pricegroup:id EQ l.master_pricegroup:id }">
				<MvFOREACHCONTINUE>
			</MvIF>

            <MvIF EXPR = "{ l.master_pricegroup:id }">					<MvASSIGN NAME = "l.type" VALUE = "none">
			<MvELSEIF EXPR = "{ l.discountoptions:exdefault EQ 'B' }">	<MvASSIGN NAME = "l.type" VALUE = "basket">
			<MvELSEIF EXPR = "{ l.discountoptions:exdefault EQ 'G' }">	<MvASSIGN NAME = "l.type" VALUE = "group">
			<MvELSEIF EXPR = "{ l.discountoptions:exdefault EQ 'I' }">	<MvASSIGN NAME = "l.type" VALUE = "item">
			<MvELSE>													<MvASSIGN NAME = "l.type" VALUE = "none">
			</MvIF>

			<MvIF EXPR = "{ miva_array_search( l.exclusions, 1, l.exclusion, '( l.exclusion:pgrp_id1 EQ l.pricegroup:id ) OR ( l.exclusion:pgrp_id2 EQ l.pricegroup:id )' ) }">
				<MvIF EXPR = "{ l.exclusion:scope EQ 'B' }">			<MvASSIGN NAME = "l.type" VALUE = "basket">
				<MvELSEIF EXPR = "{ l.exclusion:scope EQ 'G' }">		<MvASSIGN NAME = "l.type" VALUE = "group">
				<MvELSEIF EXPR = "{ l.exclusion:scope EQ 'I' }">		<MvASSIGN NAME = "l.type" VALUE = "item">
				</MvIF>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
			"id":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.pricegroup:id ) }">",
			"name":				"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.pricegroup:name ) }">",
			"exclusion_type":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.type ) }">",
			"pricegroup":
			{
				<MvEVAL EXPR = "{ JSON_PriceGroup( l.pricegroup ) }">
			}
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.pricegroup"					VALUE = "">
	<MvASSIGN NAME = "l.pricegroup:id"				VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:exclusion"		VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:display"			VALUE = 1>
	<MvASSIGN NAME = "l.pricegroup:dt_start"		VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:dt_end"			VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:qmn_subtot"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:qmx_subtot"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:qmn_quan"		VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:qmx_quan"		VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:qmn_weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:qmx_weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:bmn_subtot"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:bmx_subtot"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:bmn_quan"		VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:bmx_quan"		VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup:bmn_weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:bmx_weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.pricegroup:priority"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Name',						l.pricegroup:name )								OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Discount',					l.pricegroup:discount )							OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Markup',						l.pricegroup:markup )							OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Exclusion',					l.pricegroup:exclusion )						OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Description',					l.pricegroup:descrip )							OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Display',						l.pricegroup:display )							OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'o', 'DateTime_Start',				l.pricegroup:dt_start )							OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'o', 'DateTime_End',				l.pricegroup:dt_end )							OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Qualifying_Min_Subtotal',		l.pricegroup:qmn_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Qualifying_Max_Subtotal',		l.pricegroup:qmx_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Qualifying_Min_Quantity',		l.pricegroup:qmn_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Qualifying_Max_Quantity',		l.pricegroup:qmx_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Qualifying_Min_Weight',		l.pricegroup:qmn_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Qualifying_Max_Weight',		l.pricegroup:qmx_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Basket_Min_Subtotal',			l.pricegroup:bmn_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Basket_Max_Subtotal',			l.pricegroup:bmx_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Basket_Min_Quantity',			l.pricegroup:bmn_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Basket_Max_Quantity',			l.pricegroup:bmx_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Basket_Min_Weight',			l.pricegroup:bmn_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Basket_Max_Weight',			l.pricegroup:bmx_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'0', 'Priority',					l.pricegroup:priority )							OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'R', 'CustomerScope',				l.pricegroup:custscope, 'C,X,L,A',	'C,X,L,A' ) OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'Rate',						l.pricegroup:rate, 		'R,C,D,M',	'R,C,D,M' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.module"	VALUE = "">

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Module_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Module_Load( l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Retrieve( 'Module_ID', l.module_id ) OR l.module_id NE 0 }">
				<MvFUNCTIONRETURN VALUE = "{ [  g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Validate( l.pricegroup, l.module ) OR
					NOT JSON_PriceGroupExclusions_Validate( l.pricegroup, l.pricegroupexclusions, l.pricegroupexclusion_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.module:id }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].StoreModule_Load( l.module:id, 'discount', l.storemodule ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Increment_ReferenceCount( l.module:id, 'discount' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Insert_Feature_ReferenceCount( l.module, 'discount', 1 ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Insert( l.pricegroup ) }">
		<MvIF EXPR = "{ l.module:id }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreModule_Decrement_ReferenceCount( l.module:id, 'discount' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00024', 'Price group \'' $ l.pricegroup:name $ '\' created' ) }">

	<MvIF EXPR = "{ NOT JSON_PriceGroupExclusions_Insert( l.pricegroup, l.pricegroupexclusions, l.pricegroupexclusion_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">

	<MvIF EXPR = "{ l.pricegroup:module_id }">
		<MvASSIGN NAME = "l.pricegroup:module" VALUE = "{ l.module }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_PriceGroup( l.pricegroup ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'O', 'Name',						l.pricegroup:name )								OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Discount',					l.pricegroup:discount )							OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Markup',						l.pricegroup:markup )							OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Exclusion',					l.pricegroup:exclusion )						OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Description',					l.pricegroup:descrip )							OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Display',						l.pricegroup:display )							OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'o', 'DateTime_Start',				l.pricegroup:dt_start )							OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'o', 'DateTime_End',				l.pricegroup:dt_end )							OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Qualifying_Min_Subtotal',		l.pricegroup:qmn_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Qualifying_Max_Subtotal',		l.pricegroup:qmx_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Qualifying_Min_Quantity',		l.pricegroup:qmn_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Qualifying_Max_Quantity',		l.pricegroup:qmx_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Qualifying_Min_Weight',		l.pricegroup:qmn_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Qualifying_Max_Weight',		l.pricegroup:qmx_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Basket_Min_Subtotal',			l.pricegroup:bmn_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 'Basket_Max_Subtotal',			l.pricegroup:bmx_subtot )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Basket_Min_Quantity',			l.pricegroup:bmn_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Basket_Max_Quantity',			l.pricegroup:bmx_quan )							OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Basket_Min_Weight',			l.pricegroup:bmn_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Basket_Max_Weight',			l.pricegroup:bmx_weight, 10, 2 )				OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Priority',					l.pricegroup:priority )							OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'CustomerScope',				l.pricegroup:custscope, 'C,X,L,A',	'C,X,L,A' ) OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'Rate',						l.pricegroup:rate, 		'R,C,D,M',	'R,C,D,M' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.original_module_id"				VALUE = "{ l.pricegroup:module_id }">
	<MvASSIGN NAME = "l.module"							VALUE = "">

	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Module_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Module_Load( l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Retrieve( 'Module_ID', l.module_id ) OR l.module_id NE 0 }">
				<MvFUNCTIONRETURN VALUE = "{ [  g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Validate( l.pricegroup, l.module ) OR
					NOT JSON_PriceGroupExclusions_Validate( l.pricegroup, l.pricegroupexclusions, l.pricegroupexclusion_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Increment/install the new module before updating the price group.  The old module
	| will be decremented later if the update succeeds
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.module:id AND ( l.module:id NE l.original_module_id ) }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].StoreModule_Load( l.module:id, 'discount', l.storemodule ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Increment_ReferenceCount( l.module:id, 'discount' ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Insert_Feature_ReferenceCount( l.module, 'discount', 1 ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Update( l.pricegroup ) }">
		<MvIF EXPR = "{ l.module:id AND ( l.module:id NE l.original_module_id ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreModule_Decrement_ReferenceCount( l.module:id, 'discount' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.original_module_id AND ( l.original_module_id NE l.module:id ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreModule_Decrement_ReferenceCount( l.original_module_id, 'discount' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00025', 'Price group \'' $ l.pricegroup:name $ '\' updated' ) }">

	<MvIF EXPR = "{ NOT JSON_PriceGroupExclusions_Insert( l.pricegroup, l.pricegroupexclusions, l.pricegroupexclusion_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Validate" PARAMETERS = "pricegroup var, module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_Name( l.pricegroup:name, l.existing_pricegroup ) AND
					l.pricegroup:id NE l.existing_pricegroup:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Name', 'A price group with the name \'' $ l.existing_pricegroup:name $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.pricegroup:dt_start AND l.pricegroup:dt_end AND ( l.pricegroup:dt_start GT l.pricegroup:dt_end ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'DateTime_Start', 'When specified, the start date must not be later than the end date' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.module:id }">
		<MvASSIGN NAME = "l.pricegroup:module_id"		VALUE = 0>
		<MvASSIGN NAME = "l.pricegroup:exclusion"		VALUE = 0>
		<MvASSIGN NAME = "l.pricegroup:qmn_subtot"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:qmx_subtot"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:qmn_quan"		VALUE = 0>
		<MvASSIGN NAME = "l.pricegroup:qmx_quan"		VALUE = 0>
		<MvASSIGN NAME = "l.pricegroup:qmn_weight"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:qmx_weight"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:bmn_subtot"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:bmx_subtot"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:bmn_quan"		VALUE = 0>
		<MvASSIGN NAME = "l.pricegroup:bmx_quan"		VALUE = 0>
		<MvASSIGN NAME = "l.pricegroup:bmn_weight"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:bmx_weight"		VALUE = 0.00>
		
		<MvIF EXPR = "{ ( l.pricegroup:rate EQ 'R' ) OR
						( l.pricegroup:rate EQ 'C' ) }">
			<MvASSIGN NAME = "l.pricegroup:discount"	VALUE = 0.00>
			<MvASSIGN NAME = "l.pricegroup:markup"		VALUE = 0.00>
		<MvELSEIF EXPR = "{ l.pricegroup:rate EQ 'D' }">
			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_FloatingPoint_Optional( l.pricegroup:discount ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Discount', g.Validation_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.pricegroup:markup"		VALUE = 0.00>
		<MvELSEIF EXPR = "{ l.pricegroup:rate EQ 'M' }">
			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_FloatingPoint_Optional( l.pricegroup:markup ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Markup', g.Validation_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.pricegroup:discount"	VALUE = 0.00>
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Rate', 'Invalid price group pricing method' ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ g.Session_Type EQ 'api' }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Input_Copy_Parameters() }">
		</MvIF>

		<MvASSIGN NAME = "l.pricegroup:module_id"		VALUE = "{ l.module:id }">
		<MvASSIGN NAME = "l.pricegroup:rate"			VALUE = "R">
		<MvASSIGN NAME = "l.pricegroup:discount"		VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:markup"			VALUE = 0.00>
		<MvASSIGN NAME = "l.pricegroup:config"			VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Features( l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00007', 'Discount module not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.module:active }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00008', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.module:feature_hash:discount }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00009', 'Module \'' $ l.module:code $ '\' does not implement the \'discount\' feature' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].DiscountModule_Capabilities( l.module, l.capabilities ) }">

		<MvIF EXPR = "{ ( l.capabilities:items AND ( ( ISNULL l.capabilities:eligibility ) OR ( l.capabilities:eligibility EQ 'builtin' ) ) ) }">	<MvASSIGN NAME = "l.exclusion" VALUE = "{ l.pricegroup:exclusion }">
		<MvELSEIF EXPR = "{ l.capabilities:eligibility EQ 'builtin' }">																				<MvASSIGN NAME = "l.exclusion" VALUE = "{ l.pricegroup:exclusion }">
		<MvELSE>																																	<MvASSIGN NAME = "l.exclusion" VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.pricegroup:exclusion" VALUE = "{ l.exclusion }">

		<MvIF EXPR = "{ l.pricegroup:qmn_subtot LT 0 }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Min_Subtotal',	'Please specify a positive qualifying product subtotal lower limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmnx_subtot LT 0 }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Max_Subtotal',	'Please specify a positive qualifying product subtotal upper limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmnx_subtot AND ( l.pricegroup:qmn_subtot GT l.pricegroup:qmnx_subtot ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Max_Subtotal',	'Please specify a subtotal qualifying product upper limit that is higher than the lower limit, or 0' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmn_quan LT 0 }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Min_Quantity',	'Please specify a positive qualifying product quantity lower limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmx_quan LT 0 }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Max_Quantity',	'Please specify a positive qualifying product quantity upper limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmx_quan AND ( l.pricegroup:qmn_quan GT l.pricegroup:qmx_quan ) }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Max_Quantity',	'Please specify a qualifying product quantity upper limit that is higher than the lower limit, or 0' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmn_weight LT 0 }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Min_Weight',	'Please specify a positive qualifying product weight lower limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmx_weight LT 0 }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Max_Weight',	'Please specify a positive qualifying product weight upper limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:qmx_weight AND ( l.pricegroup:qmn_weight GT l.pricegroup:qmx_weight ) }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Qualifying_Max_Weight',	'Please specify a qualifying product weight upper limit that is higher than the lower limit, or 0' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmn_subtot LT 0 }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Min_Subtotal',		'Please specify a positive basket subtotal lower limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmx_subtot LT 0 }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Max_Subtotal',		'Please specify a positive basket subtotal upper limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmx_subtot AND ( l.pricegroup:bmn_subtot GT l.pricegroup:bmx_subtot ) }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Max_Subtotal',		'Please specify a basket subtotal upper limit that is higher than the lower limit, or 0' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmn_quan LT 0 }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Min_Quantity',		'Please specify a positive basket quantity lower limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmx_quan LT 0 }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Max_Quantity',		'Please specify a positive basket quantity upper limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmx_quan AND ( l.pricegroup:bmn_quan GT l.pricegroup:bmx_quan ) }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Max_Quantity',		'Please specify a basket quantity upper limit that is higher than the lower limit, or 0' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmn_weight LT 0 }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Min_Weight',		'Please specify a positive basket weight lower limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmx_weight LT 0 }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Max_Weight',		'Please specify a positive basket weight upper limit' ) }">
		<MvELSEIF EXPR = "{ l.pricegroup:bmx_weight AND ( l.pricegroup:bmn_weight GT l.pricegroup:bmx_weight ) }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Basket_Max_Weight',		'Please specify a basket weight upper limit that is higher than the lower limit, or 0' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].FieldError_Clear() }">
		
		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].DiscountModule_Validate( l.module, l.pricegroup ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_FieldErrorWithList_Start( g.Error_Field, g.Error_Field_Message ) }">

			<MvASSIGN NAME = "l.invalid_count"	VALUE = 0>
			<MvASSIGN NAME = "l.fields"			VALUE = "{ [ g.Module_Root $ l.module:module ].DiscountModule_Fields( l.module, l.pricegroup ) }">
			<MvASSIGN NAME = "l.field_pos"		VALUE = 1>
			<MvASSIGN NAME = "l.field"			VALUE = "{ trim( gettoken( l.fields, ',', l.field_pos ) ) }">

			<MvWHILE EXPR = "{ len( l.field ) }">
				<MvIF EXPR = "{ [ g.Module_Root $ l.module:module ].DiscountModule_Invalid( l.module, l.field ) }">
					<MvIF EXPR = "{ l.invalid_count++ }">
						,
					</MvIF>

					"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field ) }">"
				</MvIF>

				<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
				<MvASSIGN NAME = "l.field"		VALUE = "{ trim( gettoken( l.fields, ',', l.field_pos ) ) }">
			</MvWHILE>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldErrorWithList_End() }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].DiscountModule_Update( l.module, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ g.Session_Type EQ 'api' }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Input_Clear_Fields() }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Delete( l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.pricegroup:module_id }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreModule_Decrement_ReferenceCount( l.pricegroup:module_id, 'discount' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00026', 'Price group \'' $ l.pricegroup:name $ '\' deleted' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Copy" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].DiscountOptions_Load( l.discountoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.source_pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'R', 'PriceGroup_Name', l.pricegroup_name ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_Name( l.pricegroup_name, l.existing_pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'PriceGroup_Name', 'A price group with the name \'' $ l.existing_pricegroup:name $ '\' already exists' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroup"				VALUE = "{ l.source_pricegroup }">
	<MvASSIGN NAME = "l.pricegroup:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'PriceGroups' ) }">
	<MvASSIGN NAME = "l.pricegroup:name"		VALUE = "{ l.pricegroup_name }">
	<MvASSIGN NAME = "l.pricegroup:baskexc"		VALUE = "">
	<MvASSIGN NAME = "l.pricegroup:itemexc"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroup_Insert_LowLevel( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Copy_LowLevel( l.module, l.discountoptions, l.source_pricegroup, l.pricegroup ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroup_Delete( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_pricegroup', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_PriceGroup_Copy( l.module, l.source_pricegroup, l.pricegroup ) }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"id":	<MvEVAL EXPR = "{ int( l.pricegroup:id ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroup_Copy_LowLevel" PARAMETERS = "module var, discountoptions var, source_pricegroup var, pricegroup var" STANDARDOUTPUTLEVEL = "">		
	<MvCOMMENT>
	|
	| If this is a module-based price group that uses a module which implements the data_store feature,
	| the module must have API version 10.00, so that it supports the DiscountModule_PriceGroup_Copy function.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pricegroup:module_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_ID( l.pricegroup:module_id, l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00109', 'Module not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ l.module:api_ver LT 10.00 }">
			<MvIF EXPR = "{ l.module:feature_hash:data_store }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00107', 'Discount module \'' $ l.module:code $ '\' does not support copy functionality' ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].DiscountModule_PriceGroup_Copy( l.module, l.source_pricegroup, l.pricegroup ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Copy standard tables
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupExclusion_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )						OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCustomer_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )						OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXProduct_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )							OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedProduct_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )					OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingProduct_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )				OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXProductSubscription_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )				OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedProductSubscription_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )		OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingProductSubscription_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )	OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXBusinessAccount_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )					OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCategory_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id )						OR
					NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCategory_Copy_All_PriceGroup( l.source_pricegroup:id, l.pricegroup:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Insert an exclusion between the copied price group and the destination if we have a default exclusion type
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.discountoptions:exdefault NE '' }">
		<MvASSIGN NAME = "l.pricegroupexclusion:pgrp_id1"	VALUE = "{ l.source_pricegroup:id }">
		<MvASSIGN NAME = "l.pricegroupexclusion:pgrp_id2"	VALUE = "{ l.pricegroup:id }">
		<MvASSIGN NAME = "l.pricegroupexclusion:scope"		VALUE = "{ l.discountoptions:exdefault }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupExclusion_Insert( l.pricegroupexclusion ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_UT ].PriceGroupExclusionCache_Update( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Increment module reference count, if needed
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pricegroup:module_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Increment_ReferenceCount( l.module:id, 'discount' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCollectionIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionIndex_Load_ID( l.filter, l.sort, 'col.id', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXCollection_Load( l.pricegroup:id, l.record:col:id, l.record:pgxc ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'PriceGroupXCollection', 'pgxc' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pgxc.pgrp_id = ? AND col.id = pgxc.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index": <MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCollectionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Load_Query( l.filter, l.sort, 'col.id', l.search_query, l.data ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXCollection', 'pgxc' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxc.pgrp_id = ? AND col.id = pgxc.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Collections', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00113', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.collection_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Collections.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.collection_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Collection_Read( l.collection, l.data:ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.collection_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_Collection_OnDemandColumns( l.collection, l.data:ondemandcolumns ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Collections" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCollection_Add" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXCollection_Load( l.pricegroup:id, l.collection:id, l.null ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroupxcollection"			VALUE = "">
	<MvASSIGN NAME = "l.pricegroupxcollection:pgrp_id"	VALUE = "{ l.pricegroup:id }">
	<MvASSIGN NAME = "l.pricegroupxcollection:col_id"	VALUE = "{ l.collection:id }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCollection_Insert( l.pricegroupxcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_UT ].PriceGroup_Add_Collection_Products( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00115', 'Collection \'' $ l.collection:code $ '\' assigned to price group \'' $ l.pricegroup:name $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCollection_Remove" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCollection_Load( l.pricegroup:id, l.collection:id, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCollection_Delete( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_UT ].PriceGroup_Remove_Collection_Products( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin].Admin_Log_Action( 'MER-PGR-JSN-00114', 'Collection \'' $ l.collection:code $ '\' unassigned from price group \'' $ l.pricegroup:name $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedCollectionIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionIndex_Load_ID( l.filter, l.sort, 'col.id', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCollection_Load( l.pricegroup:id, l.record:col:id, l.record:pgxec ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'PriceGroupXExcludedCollection', 'pgxec' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pgxec.pgrp_id = ? AND col.id = pgxec.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedCollectionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Load_Query( l.filter, l.sort, 'col.id', l.search_query, l.data ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXExcludedCollection', 'pgxec' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxec.pgrp_id = ? AND col.id = pgxec.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Collections', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00116', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.collection_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Collections.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.collection_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Collection_Read( l.collection, l.data:ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.collection_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_Collection_OnDemandColumns( l.collection, l.data:ondemandcolumns ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Collections" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedCollection_Add" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCollection_Load( l.pricegroup:id, l.collection:id, l.null ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroupxexcludedcollection"			VALUE = "">
	<MvASSIGN NAME = "l.pricegroupxexcludedcollection:pgrp_id"	VALUE = "{ l.pricegroup:id }">
	<MvASSIGN NAME = "l.pricegroupxexcludedcollection:col_id"	VALUE = "{ l.collection:id }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCollection_Insert( l.pricegroupxexcludedcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_UT ].PriceGroup_Add_Collection_ExcludedProducts( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00118', 'Excluded collection \'' $ l.collection:code $ '\' assigned to price group \'' $ l.pricegroup:name $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedCollection_Remove" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCollection_Load( l.pricegroup:id, l.collection:id, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCollection_Delete( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_UT ].PriceGroup_Remove_Collection_ExcludedProducts( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin].Admin_Log_Action( 'MER-PGR-JSN-00117', 'Excluded collection \'' $ l.collection:code $ '\' unassigned from price group \'' $ l.pricegroup:name $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingCollectionIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionIndex_Load_ID( l.filter, l.sort, 'col.id', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingCollection_Load( l.pricegroup:id, l.record:col:id, l.record:pgxqc ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'PriceGroupXQualifyingCollection', 'pgxqc' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pgxqc.pgrp_id = ? AND col.id = pgxqc.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingCollectionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Load_Query( l.filter, l.sort, 'col.id', l.search_query, l.data ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXQualifyingCollection', 'pgxqc' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxqc.pgrp_id = ? AND col.id = pgxqc.col_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Collections', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00119', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.collection_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Collections.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.collection_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_BaseCollectionList_Collection_Read( l.collection, l.data:ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.collection_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_COL_JSON ].JSON_Collection_OnDemandColumns( l.collection, l.data:ondemandcolumns ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Collections" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingCollection_Add" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingCollection_Load( l.pricegroup:id, l.collection:id, l.null ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">																	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.pricegroupxqualifyingcollection"			VALUE = "">
	<MvASSIGN NAME = "l.pricegroupxqualifyingcollection:pgrp_id"	VALUE = "{ l.pricegroup:id }">
	<MvASSIGN NAME = "l.pricegroupxqualifyingcollection:col_id"		VALUE = "{ l.collection:id }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingCollection_Insert( l.pricegroupxqualifyingcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_UT ].PriceGroup_Add_Collection_QualifyingProducts( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00121', 'Qualifying collection \'' $ l.collection:code $ '\' assigned to price group \'' $ l.pricegroup:name $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingCollection_Remove" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingCollection_Load( l.pricegroup:id, l.collection:id, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingCollection_Delete( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_COL_UT ].PriceGroup_Remove_Collection_QualifyingProducts( l.pricegroup:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin].Admin_Log_Action( 'MER-PGR-JSN-00120', 'Qualifying collection \'' $ l.collection:code $ '\' unassigned from price group \'' $ l.pricegroup:name $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupProductIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_BaseProductIndex_Load_ID( l.filter, l.sort, 'prod.disp_order', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXProduct_Load( l.pricegroup:id, l.record:prod:id, l.record:pgxp ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'PriceGroupXProduct',	'pgxp' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxp.pgrp_id = ? AND prod.id = pgxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXProduct', 'pgxp', 'pgxp.pgrp_id = ? AND prod.id = pgxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxp.product_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupProductList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query( l.filter, l.sort, 'prod.disp_order', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'pgxp.product_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroupXProduct',	'pgxp' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxp.pgrp_id = ? AND prod.id = pgxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query,	g.Store_Table_Prefix $ 'PriceGroupXProduct',	'pgxp' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,	'pgxp.pgrp_id = ? AND prod.id = pgxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXProduct', 'pgxp', 'pgxp.pgrp_id = ? AND prod.id = pgxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxp.product_id IS NULL', '' ) }">
			
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXProduct', 'pgxp', 'pgxp.pgrp_id = ? AND prod.id = pgxp.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,	'pgxp.product_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00010', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.product_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.product_count ) }">
				"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupProduct_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXProduct_Load( l.pricegroup:id, l.product:id, l.pricegroupxproduct ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].v10_PriceGroupXProduct_Delete( l.pricegroupxproduct ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00028', 'Product \'' $ l.product:code $ '\' removed as a discounted product from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXProduct_Insert( l.pricegroup:id, l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00029', 'Product \'' $ l.product:code $ '\' assigned as a discounted product to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedProductIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_BaseProductIndex_Load_ID( l.filter, l.sort, 'prod.disp_order', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXExcludedProduct_Load( l.pricegroup:id, l.record:prod:id, l.record:pgxep ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct',	'pgxep' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxep.pgrp_id = ? AND prod.id = pgxep.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct', 'pgxep', 'pgxep.pgrp_id = ? AND prod.id = pgxep.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxep.product_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedProductList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query( l.filter, l.sort, 'prod.disp_order', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'pgxep.product_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct',	'pgxep' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxep.pgrp_id = ? AND prod.id = pgxep.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query,	g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct',	'pgxep' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,	'pgxep.pgrp_id = ? AND prod.id = pgxep.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct', 'pgxep', 'pgxep.pgrp_id = ? AND prod.id = pgxep.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxep.product_id IS NULL', '' ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXExcludedProduct', 'pgxep', 'pgxep.pgrp_id = ? AND prod.id = pgxep.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,	'pgxep.product_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00081', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.product_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.product_count ) }">
				"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedProduct_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedProduct_Load( l.pricegroup:id, l.product:id, l.pricegroupxexcludedproduct ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].v10_PriceGroupXExcludedProduct_Delete( l.pricegroupxexcludedproduct ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00083', 'Product \'' $ l.product:code $ '\' removed as an excluded product from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedProduct_Insert( l.pricegroup:id, l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00084', 'Product \'' $ l.product:code $ '\' assigned as an excluded product to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupProductSubscriptionTermIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermIndex_Load_ID( l.filter, l.sort, l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXProductSubscription_Load( l.pricegroup:id, l.record:pst:product_id, l.record:pst:id, l.record:pgxpst ) }">
	
	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'PriceGroupXProductSubscription', 'pgxpst' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxpst.pgrp_id		= ? AND
																			 prod.id			= pgxpst.product_id AND
																			 pst.id				= pgxpst.subterm_id',
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXProductSubscription', 'pgxpst', 'pgxpst.pgrp_id = ? AND pgxpst.product_id = pst.product_id AND pgxpst.subterm_id = pst.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxpst.subterm_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupProductSubscriptionTermList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermList_Load_Query( l.filter, l.sort, l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pgxpst.subterm_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXProductSubscription', 'pgxpst' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxpst.pgrp_id	= ?					AND
																					 prod.id		= pgxpst.product_id AND
																					 pst.id			= pgxpst.subterm_id',
																					[ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'PriceGroupXProductSubscription', 'pgxpst' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,	'pgxpst.pgrp_id	= ?					AND
																					 prod.id		= pgxpst.product_id AND
																					 pst.id			= pgxpst.subterm_id',
																					[ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXProductSubscription', 'pgxpst', 'pgxpst.pgrp_id = ? AND pgxpst.product_id = pst.product_id AND pgxpst.subterm_id = pst.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxpst.subterm_id IS NULL', '' ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXProductSubscription', 'pgxpst', 'pgxpst.pgrp_id = ? AND pgxpst.product_id = pst.product_id AND pgxpst.subterm_id = pst.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'pgxpst.subterm_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00070', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productsubscriptionterm_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.productsubscriptionterm_count LT l.count ) ) AND ( NOT Products.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productsubscriptionterm_count ) }">
				"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_ProducSubscriptionTermList_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupProductSubscriptionTerm_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXProductSubscription_Load( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id, l.pricegroupxproductsubscription ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXProductSubscription_Delete( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00072', 'Product Subscription Term \'' $ l.productsubscriptionterm:id $ '\' removed as a discounted subscription from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXProductSubscription_Insert( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00073', 'Product Subscription Term \'' $ l.productsubscriptionterm:id $ '\' assigned as a discounted subscription to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedProductSubscriptionTermIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermIndex_Load_ID( l.filter, l.sort, l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXExcludedProductSubscription_Load( l.pricegroup:id, l.record:pst:product_id, l.record:pst:id, l.record:pgxepst ) }">
	
	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'PriceGroupXExcludedProductSubscription', 'pgxepst' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxepst.pgrp_id	= ? AND
																			 prod.id			= pgxepst.product_id AND
																			 pst.id				= pgxepst.subterm_id',
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXExcludedProductSubscription', 'pgxepst', 'pgxepst.pgrp_id = ? AND pst.id = pgxepst.subterm_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxepst.subterm_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedProductSubscriptionTermList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermList_Load_Query( l.filter, l.sort, l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pgxepst.subterm_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXExcludedProductSubscription', 'pgxepst' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxepst.pgrp_id	= ? AND
																					 prod.id			= pgxepst.product_id AND
																					 pst.id				= pgxepst.subterm_id',
																					[ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'PriceGroupXExcludedProductSubscription', 'pgxepst' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,	'pgxepst.pgrp_id	= ? AND
																					 prod.id			= pgxepst.product_id AND
																					 pst.id				= pgxepst.subterm_id',
																					[ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXExcludedProductSubscription', 'pgxepst', 'pgxepst.pgrp_id = ? AND pst.id = pgxepst.subterm_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxepst.subterm_id IS NULL', '' ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXExcludedProductSubscription', 'pgxepst', 'pgxepst.pgrp_id = ? AND pst.id = pgxepst.subterm_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'pgxepst.subterm_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00087', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productsubscriptionterm_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.productsubscriptionterm_count LT l.count ) ) AND ( NOT Products.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productsubscriptionterm_count ) }">
				"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_ProducSubscriptionTermList_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedProductSubscriptionTerm_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedProductSubscription_Load( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id, l.pricegroupxexcludedproductsubscription ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedProductSubscription_Delete( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00089', 'Product Subscription Term \'' $ l.productsubscriptionterm:id $ '\' removed as an excluded subscription from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedProductSubscription_Insert( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00090', 'Product Subscription Term \'' $ l.productsubscriptionterm:id $ '\' assigned as an excluded subscription to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingProductIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_BaseProductIndex_Load_ID( l.filter, l.sort, 'prod.disp_order', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXQualifyingProduct_Load( l.pricegroup:id, l.record:prod:id, l.record:pgxq ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'PriceGroupXQualifyingProduct',	'pgxq' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxq.pgrp_id = ? AND prod.id = pgxq.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXQualifyingProduct', 'pgxq', 'pgxq.pgrp_id = ? AND prod.id = pgxq.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxq.product_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingProductList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }"> 	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query( l.filter, l.sort, 'prod.disp_order', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'pgxq.product_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXQualifyingProduct', 'pgxq' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxq.pgrp_id = ? AND prod.id = pgxq.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'PriceGroupXQualifyingProduct', 'pgxq' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'pgxq.pgrp_id = ? AND prod.id = pgxq.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXQualifyingProduct', 'pgxq', 'pgxq.pgrp_id = ? AND prod.id = pgxq.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxq.product_id IS NULL', '' ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'PriceGroupXQualifyingProduct', 'pgxq', 'pgxq.pgrp_id = ? AND prod.id = pgxq.product_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'pgxq.product_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00030', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.product_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.product_count ) }">
				"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingProduct_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.pricegroup:module_id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00108', 'Legacy price groups do not support qualifying products' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingProduct_Load( l.pricegroup:id, l.product:id, l.pricegroupxproduct ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].v10_PriceGroupXQualifyingProduct_Delete( l.pricegroupxproduct ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00032', 'Product \'' $ l.product:code $ '\' removed as a qualifying product from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingProduct_Insert( l.pricegroup:id, l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00033', 'Product \'' $ l.product:code $ '\' assigned as a qualifying product to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingProductSubscriptionTermIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermIndex_Load_ID( l.filter, l.sort, l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXQualifyingProductSubscription_Load( l.pricegroup:id, l.record:pst:product_id, l.record:pst:id, l.record:pgxpst ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'PriceGroupXQualifyingProductSubscription', 'pgxpst' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxpst.pgrp_id		= ? AND
																			 prod.id			= pgxpst.product_id AND
																			 pst.id				= pgxpst.subterm_id',
																			 [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXQualifyingProductSubscription', 'pgxpst', 'pgxpst.pgrp_id = ? AND pgxpst.product_id = pst.product_id AND pgxpst.subterm_id = pst.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxpst.subterm_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingProductSubscriptionTermList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermList_Load_Query( l.filter, l.sort, l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'pgxpst.subterm_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroupXQualifyingProductSubscription',	'pgxpst' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxpst.pgrp_id		= ?					AND
																					 prod.id			= pgxpst.product_id AND
																					 pst.id				= pgxpst.subterm_id',
																					[ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query,	g.Store_Table_Prefix $ 'PriceGroupXQualifyingProductSubscription',	'pgxpst' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query,	'pgxpst.pgrp_id		= ?					AND
																					 prod.id			= pgxpst.product_id AND
																					 pst.id				= pgxpst.subterm_id',
																					[ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXQualifyingProductSubscription', 'pgxpst', 'pgxpst.pgrp_id = ? AND pgxpst.product_id = pst.product_id AND pgxpst.subterm_id = pst.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxpst.subterm_id IS NULL', '' ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'pst', g.Store_Table_Prefix $ 'PriceGroupXQualifyingProductSubscription', 'pgxpst', 'pgxpst.pgrp_id = ? AND pgxpst.product_id = pst.product_id AND pgxpst.subterm_id = pst.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'pgxpst.subterm_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00076', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productsubscriptionterm_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.productsubscriptionterm_count LT l.count ) ) AND ( NOT Products.d.EOF ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_BaseProducSubscriptionTermList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.productsubscriptionterm_count ) }">
				"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_ProducSubscriptionTermList_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupQualifyingProductSubscriptionTerm_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Load( l.productsubscriptionterm ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingProductSubscription_Load( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id, l.pricegroupxproductsubscription ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingProductSubscription_Delete( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00078', 'Product Subscription Term \'' $ l.productsubscriptionterm:id $ '\' removed as a qualifying subscription from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXQualifyingProductSubscription_Insert( l.pricegroup:id, l.productsubscriptionterm:product_id, l.productsubscriptionterm:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00079', 'Product Subscription Term \'' $ l.productsubscriptionterm:id $ '\' assigned as a qualifying subscription to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCustomerList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'cust.*,
																				 pgxc.cust_id	AS assigned' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',	'business_title' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Customers', 'cust' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroupXCustomer',	'pgxc' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxc.pgrp_id = ? AND cust.id = pgxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust', g.Store_Table_Prefix $ 'PriceGroupXCustomer', 'pgxc', 'pgxc.pgrp_id = ? AND cust.id = pgxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxc.cust_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_Feature_CUS_JSON, '', '', 'JSON_Customer_CustomFields_Query_Filter', l.null ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cust.login', g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Customers', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00012', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.customer_count" 	VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Customers.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.customer_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_DB ].Customer_Read( l.customer ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.customer_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer( l.customer ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer_CustomFields_With_Query( l.search_query, l.customfield_state, Customers.d.id, 'Customers' ) }">
				
				, "business_title": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Customers.d.business_title ) }">",
				"assigned": 		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Customers.d.assigned ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Customers" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Customers">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCustomerIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query" 					VALUE = "">
	<MvASSIGN NAME = "l.record" 				VALUE = "">

	<MvREFERENCE NAME = "l.customer" 			VARIABLE = "l.record:cust">
	<MvREFERENCE NAME = "l.businessaccount" 	VARIABLE = "l.record:ba">
	<MvREFERENCE NAME = "l.pricegroupxcustomer"	VARIABLE = "l.record:pgxc">

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.assigned"				VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"				VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvCOMMENT>
	|
	| The output of Customer_Load_ID sets xxx_addr to xxx_addr $ ' ' $ xxx_addr2 from the database.  SQL_Query_Index doesn't know this so we need
	| to explicitly reset those values to what it expects.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customer:ship_addr"		VALUE = "{ l.customer:ship_addr1 }">
	<MvASSIGN NAME = "l.customer:bill_addr"		VALUE = "{ l.customer:bill_addr1 }">

	<MvIF EXPR = "{ l.customer:account_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].BusinessAccount_Load( l.customer:account_id, l.businessaccount ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupXCustomer_Load( l.pricegroup:id, l.customer:id, l.pricegroupxcustomer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Customers', 'cust' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cust', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'PriceGroupXCustomer', 'pgxc' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pgxc.pgrp_id = ? AND cust.id = pgxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cust', g.Store_Table_Prefix $ 'PriceGroupXCustomer', 'pgxc', 'pgxc.pgrp_id = ? AND cust.id = pgxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxc.cust_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_Feature_CUS_JSON, '', '', 'JSON_Customer_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, 'cust.login', g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query_OrderBy' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.customer:id, g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCustomer_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXCustomer_Load( l.pricegroup:id, l.customer:id, l.pricegroupxcustomer ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCustomer_Delete( l.pricegroup:id, l.customer:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00034', 'Customer \'' $ l.customer:login $ '\' removed from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCustomer_Insert( l.pricegroup:id, l.customer:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00035', 'Customer \'' $ l.customer:login $ '\' assigned to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon" PARAMETERS = "coupon var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.coupon:id ) }">,
	"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.coupon:code ) }">",
	"descrip":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.coupon:descrip ) }">",
	"custscope":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.coupon:custscope ) }">",
	"dt_start":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.coupon:dt_start ) }">,
	"dt_end":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_DateTime( l.coupon:dt_end ) }">,
	"max_use":		<MvEVAL EXPR = "{ int( l.coupon:max_use ) }">,
	"max_per":		<MvEVAL EXPR = "{ int( l.coupon:max_per ) }">,
	"active":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.coupon:active ) }">,
	"use_count":	<MvEVAL EXPR = "{ int( l.coupon:use_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'id',			'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'code',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'descrip',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'custscope',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'dt_start',	'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'dt_end',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'max_use',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'max_per',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'active',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'use_count',	'' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Coupons', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort, 'id,code,descrip,custscope,dt_start,dt_end,max_use,max_per,active,use_count', 'id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Coupons', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00023', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.coupon_count" VALUE = 0>
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Coupons.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.coupon_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_DB ].Coupon_Read( l.coupon ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.coupon_count ) }">
			<MvEVAL EXPR = "{ JSON_Coupon( l.coupon ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Coupons" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Coupons">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Load" PARAMETERS = "coupon var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Coupon_ID', l.coupon_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Load_ID( l.coupon_id, l.coupon ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00015', 'Coupon not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_Coupon', l.coupon_code ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Load_Code( l.coupon_code, l.coupon ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00103', 'Coupon not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Coupon_Code', l.coupon_code ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Load_Code( l.coupon_code, l.coupon ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00104', 'Coupon not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PGR-JSN-00105', 'Unable to load coupon: One of Coupon_ID, Edit_Coupon or Coupon_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.coupon"				VALUE = "">
	<MvASSIGN NAME = "l.coupon:custscope"	VALUE = "A">
	<MvASSIGN NAME = "l.coupon:dt_start"	VALUE = 0>
	<MvASSIGN NAME = "l.coupon:dt_end"		VALUE = 0>
	<MvASSIGN NAME = "l.coupon:max_use"		VALUE = 0>
	<MvASSIGN NAME = "l.coupon:max_per"		VALUE = 0>
	<MvASSIGN NAME = "l.coupon:active"		VALUE = 1>
	<MvASSIGN NAME = "l.coupon:use_count"	VALUE = 0>
	<MvASSIGN NAME = "l.pricegroup_id"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 'Code',			l.coupon:code )							OR 
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Description',		l.coupon:descrip )						OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'CustomerScope',	l.coupon:custscope,	'A,X,L', 'A,X,L' )	OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'O', 'DateTime_Start',	l.coupon:dt_start )						OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'O', 'DateTime_End',	l.coupon:dt_end )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O', 'Max_Use',			l.coupon:max_use )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O', 'Max_Per',			l.coupon:max_per )						OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Active',			l.coupon:active )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'PriceGroup_ID',	l.pricegroup_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].Coupon_Load_Code( l.coupon:code, l.existing_coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A coupon with the code \'' $ l.existing_coupon:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.coupon:dt_start AND l.coupon:dt_end AND ( l.coupon:dt_start GT l.coupon:dt_end ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'DateTime_Start', 'When specified, the start date must not be later than the end date' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.coupon:max_use ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Max_Use', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.coupon:max_per ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Max_Per', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.pricegroup_id LE 0 }">
		<MvASSIGN NAME = "l.pricegroup:id"	VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( l.pricegroup_id, l.pricegroup ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00019', 'Price group not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Insert( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00036', 'Coupon \'' $ l.coupon:code $ '\' created' ) }">

	<MvIF EXPR = "{ l.pricegroup:id }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXPriceGroup_Insert( l.coupon:id, l.pricegroup:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00055', 'Price group \'' $ l.pricegroup:name $ '\' assigned to coupon \'' $ l.coupon:code $ '\'' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Coupon( l.coupon ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_code"	VALUE = "{ l.coupon:code }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O', 'Code',			l.coupon:code )							OR 
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Description',		l.coupon:descrip )						OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O', 'CustomerScope',	l.coupon:custscope,	'A,X,L', 'A,X,L' )	OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'O', 'DateTime_Start',	l.coupon:dt_start )						OR
					NOT [ g.Module_JSON ].JSON_Input_DateTime(	'O', 'DateTime_End',	l.coupon:dt_end )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O', 'Max_Use',			l.coupon:max_use )						OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'O', 'Max_Per',			l.coupon:max_per )						OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Active',			l.coupon:active ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ tolower( l.coupon:code ) NE tolower( l.original_code ) }">
		<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].Coupon_Load_Code( l.coupon:code, l.existing_coupon ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'A coupon with the code \'' $ l.existing_coupon:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.coupon:dt_start AND l.coupon:dt_end AND ( l.coupon:dt_start GT l.coupon:dt_end ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'DateTime_Start', 'When specified, the start date must not be later than the end date' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.coupon:max_use ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Max_Use', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.coupon:max_per ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Max_Per', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Update( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00037', 'Coupon \'' $ l.coupon:code $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ JSON_Coupon_Load( l.coupon ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Delete( l.coupon ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00038', 'Coupon \'' $ l.coupon:code $ '\' deleted' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponList_Delete" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">
	
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'Coupon_IDs', l.coupon_ids, l.coupon_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.coupon_id" ARRAY = "l.coupon_ids" COUNT = "{ l.coupon_id_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Load_ID( l.coupon_id, l.coupon ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Delete( l.coupon ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.coupon_id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00061', 'Coupon \'' $ l.coupon:code $ '\' deleted' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Reset_Usage" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.coupon:use_count"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].Coupon_Update_UseCount( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXShopper_Delete_All_Coupon( l.coupon:id ) OR
					NOT [ g.Feature_Filename_PGR_DB ].CouponXAnonymousShopper_Delete_All_Coupon( l.coupon:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00039', 'Usage data for coupon \'' $ l.coupon:code $ '\' reset' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponPriceGroupList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.assigned"			VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"			VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.id',			'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.name',			'name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.module_id',	'module_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.custscope',	'custscope' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.rate',			'rate' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.discount',		'discount' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.markup',		'markup' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'pg.dt_start',		'dt_start' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'pg.dt_end',		'dt_end' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.priority',		'priority' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pg.exclusion',	'exclusion' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'pg.descrip',		'descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'pg.display',		'display' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmn_subtot',	'qmn_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmx_subtot',	'qmx_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.qmn_quan',		'qmn_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.qmx_quan',		'qmx_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmn_weight',	'qmn_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.qmx_weight',	'qmx_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmn_subtot',	'bmn_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmx_subtot',	'bmx_subtot' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.bmn_quan',		'bmn_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'pg.bmx_quan',		'bmx_quan' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmn_weight',	'bmn_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_NUMBER(	l.available_filters, 'pg.bmx_weight',	'bmx_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'm.name',			'type' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'pg.*,
																				 m.id			AS module_id,
																				 m.code			AS module_code,
																				 m.name			AS module_name,
																				 m.provider		AS module_provider,
																				 m.api_ver		AS module_api_ver,
																				 m.version		AS module_version,
																				 m.module		AS module_module,
																				 m.refcount		AS module_refcount,
																				 m.active		AS module_active,
																				 m.priority		AS module_priority,
																				 cxpg.pgrp_id	AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'CouponXPriceGroup',		'cxpg' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'cxpg.coupon_id = ? AND pg.id = cxpg.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pg', g.Store_Table_Prefix $ 'CouponXPriceGroup', 'cxpg', 'cxpg.coupon_id = ? AND pg.id = cxpg.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'cxpg.pgrp_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	'Modules', 'm' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pg.module_id <> 0 AND m.id = pg.module_id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'id:pg.id,name:pg.name,type:m.name,custscope:pg.custscope,rate:pg.rate,discount:pg.discount,markup:pg.markup,
																		 dt_start:pg.dt_start,dt_end:pg.dt_end,priority:pg.priority;-pg.id,exclusion:pg.exclusion,descrip:pg.descrip,display:pg.display,
																		 qualifying_subtotal:pg.qmn_subtot,qualifying_quantity:pg.qmn_quan,qualifying_weight:pg.qmn_weight,
																		 basket_quantity:pg.bmn_quan,basket_subtotal:pg.bmn_subtot,basket_weight:pg.bmn_weight',
																		'-pg.priority;pg.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'PriceGroups', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00016', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.customer_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT PriceGroups.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.pricegroup_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModule_Read( l.pricegroup ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.pricegroup_count ) }">
				<MvEVAL EXPR = "{ JSON_PriceGroup( l.pricegroup ) }">
				, "assigned":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( PriceGroups.d.assigned ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponPriceGroup_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].CouponXPriceGroup_Load( l.coupon:id, l.pricegroup:id, l.couponxpricegroup ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXPriceGroup_Delete( l.coupon:id, l.pricegroup:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00040', 'Price group \'' $ l.pricegroup:name $ '\' removed from coupon \'' $ l.coupon:code $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXPriceGroup_Insert( l.coupon:id, l.pricegroup:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00041', 'Price group \'' $ l.pricegroup:name $ '\' assigned to coupon \'' $ l.coupon:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponCustomerList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'cust.*,
																				 cxc.cust_id	AS assigned' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title', 'business_title' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Customers', 'cust' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CouponXCustomer', 'cxc' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'cxc.coupon_id = ? AND cust.id = cxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cust', g.Store_Table_Prefix $ 'CouponXCustomer', 'cxc', 'cxc.coupon_id = ? AND cust.id = cxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'cxc.cust_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_Feature_CUS_JSON, '', '', 'JSON_Customer_CustomFields_Query_Filter', l.null ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cust.login', g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Customers', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00017', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.customer_count" 	VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Customers.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.customer_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_DB ].Customer_Read( l.customer ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.customer_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer( l.customer ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer_CustomFields_With_Query( l.search_query, l.customfield_state, Customers.d.id, 'Customers' ) }">

				, "business_title": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Customers.d.business_title ) }">",
				"assigned": 		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Customers.d.assigned ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Customers" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Customers">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponCustomerIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query" 					VALUE = "">
	<MvASSIGN NAME = "l.record" 				VALUE = "">

	<MvREFERENCE NAME = "l.customer" 			VARIABLE = "l.record:cust">
	<MvREFERENCE NAME = "l.businessaccount" 	VARIABLE = "l.record:ba">
	<MvREFERENCE NAME = "l.couponxcustomer" 	VARIABLE = "l.record:cxc">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.assigned"				VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"				VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvCOMMENT>
	|
	| The output of Customer_Load_ID sets xxx_addr to xxx_addr $ ' ' $ xxx_addr2 from the database.  SQL_Query_Index doesn't know this so we need
	| to explicitly reset those values to what it expects.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customer:ship_addr"		VALUE = "{ l.customer:ship_addr1 }">
	<MvASSIGN NAME = "l.customer:bill_addr"		VALUE = "{ l.customer:bill_addr1 }">

	<MvIF EXPR = "{ l.customer:account_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].BusinessAccount_Load( l.customer:account_id, l.businessaccount ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].CouponXCustomer_Load( l.coupon:id, l.customer:id, l.couponxcustomer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Customers', 'cust' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cust', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CouponXCustomer', 'cxc' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'cxc.coupon_id = ? AND cust.id = cxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cust', g.Store_Table_Prefix $ 'CouponXCustomer', 'cxc', 'cxc.coupon_id = ? AND cust.id = cxc.cust_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'cxc.cust_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_Feature_CUS_JSON ].JSON_BaseCustomerList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_Feature_CUS_JSON, '', '', 'JSON_Customer_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, 'cust.login', g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query_OrderBy' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.customer:id, g.Module_Feature_CUS_JSON, 'JSON_Customer_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponCustomer_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].CouponXCustomer_Load( l.coupon:id, l.customer:id, l.couponxcustomer ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXCustomer_Delete( l.coupon:id, l.customer:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00042', 'Customer \'' $ l.customer:login $ '\' removed from coupon \'' $ l.coupon:code $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXCustomer_Insert( l.coupon:id, l.customer:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00043', 'Customer \'' $ l.customer:login $ '\' assigned to coupon \'' $ l.coupon:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponBusinessAccountList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'ba.*,
																				 cxb.account_id	AS assigned' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'BusinessAccounts', 'ba' ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ba', g.Store_Table_Prefix $ 'CouponXBusinessAccount', 'cxb', 'cxb.coupon_id = ? AND ba.id = cxb.account_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ba', g.Store_Table_Prefix $ 'CouponXBusinessAccount', 'cxb', 'cxb.coupon_id = ? AND ba.id = cxb.account_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'cxb.account_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CouponXBusinessAccount', 'cxb' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'cxb.coupon_id = ? AND ba.id = cxb.account_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_Filters() ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_OrderBy(), 'ba.id' ) }">

	<MvASSIGN NAME = "l.search_sql"		VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'BusinessAccounts', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00110', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.businessaccount_count" 	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT BusinessAccounts.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.businessaccount_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_DB ].BusinessAccount_Read( l.business_account ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.businessaccount_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_BusinessAccount( l.business_account ) }">
				,"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( BusinessAccounts.d.assigned ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "BusinessAccounts" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BusinessAccounts">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponBusinessAccount_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_BusinessAccount_Load( l.account ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].CouponXBusinessAccount_Load( l.coupon:id, l.account:id, l.couponxbusinessaccount ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXBusinessAccount_Delete( l.coupon:id, l.account:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00111', 'Business Account \'' $ l.account:title $ '\' removed from coupon \'' $ l.coupon:code $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXBusinessAccount_Insert( l.coupon:id, l.account:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00112', 'Business Account \'' $ l.account:title $ '\' assigned to coupon \'' $ l.coupon:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CouponBusinessAccountIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query" 					VALUE = "">
	<MvASSIGN NAME = "l.record" 				VALUE = "">

	<MvREFERENCE NAME = "l.account" 				VARIABLE = "l.record:ba">
	<MvREFERENCE NAME = "l.couponxbusinessaccount" 	VARIABLE = "l.record:cxb">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_BusinessAccount_Load( l.account ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.assigned"				VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"				VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].CouponXBusinessAccount_Load( l.coupon:id, l.account:id, l.couponxbusinessaccount ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'BusinessAccounts', 'ba' ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'ba', g.Store_Table_Prefix $ 'CouponXBusinessAccount', 'cxb', 'cxb.coupon_id = ? AND cxb.account_id = ba.id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'ba', g.Store_Table_Prefix $ 'CouponXBusinessAccount', 'cxb', 'cxb.coupon_id = ? AND cxb.account_id = ba.id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pgxba.account_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CouponXBusinessAccount', 'cxb' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'cxb.coupon_id = ? AND ba.id = cxb.account_id', [ g.Module_Library_DB ].SQL_Query_Field( l.coupon:id ) ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query, l.filter, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_Filters() ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_OrderBy(), 'ba.id' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Generate_Validate" PARAMETERS = "coupon var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.coupon:code_prefix"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code_Prefix ) }">
	<MvASSIGN NAME = "l.coupon:descrip"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Description ) }">
	<MvASSIGN NAME = "l.coupon:custscope"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.CustomerScope ) }">
	<MvASSIGN NAME = "l.coupon:dt_start"	VALUE = "{ int( g.DateTime_Start ) }">
	<MvASSIGN NAME = "l.coupon:dt_end"		VALUE = "{ int( g.DateTime_End ) }">
	<MvASSIGN NAME = "l.coupon:max_use"		VALUE = "{ int( g.Max_Use ) }">
	<MvASSIGN NAME = "l.coupon:max_per"		VALUE = "{ int( g.Max_Per ) }">
	<MvASSIGN NAME = "l.coupon:active"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Active ) }">

	<MvIF EXPR = "{ NOT ISNULL l.coupon:code_prefix }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.coupon:code_prefix ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code_Prefix', g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ( l.coupon:custscope NE 'X' ) AND
					( l.coupon:custscope NE 'L' ) AND
					( l.coupon:custscope NE 'A' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'CustomerScope', 'Invalid customer scope' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.DateTime_Start AND g.DateTime_End AND ( g.DateTime_Start GT g.DateTime_End ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'DateTime_Start', 'When specified, the start date must not be later than the end date' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.coupon:max_use ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Max_Use', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.coupon:max_per ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Max_Per', g.Validation_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Generate" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 1, 0, 0 ) OR
					NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Generate_Validate( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.coupon:use_count"		VALUE = 0>

	<MvASSIGN NAME = "g.Max_Quantity"			VALUE = "{ int( g.Max_Quantity ) }">
	<MvASSIGN NAME = "g.PriceGroup_ID"			VALUE = "{ int( g.PriceGroup_ID ) }">

	<MvIF EXPR = "{ g.PriceGroup_ID LE 0 }">
		<MvASSIGN NAME = "l.pricegroup:id"		VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( g.PriceGroup_ID, l.pricegroup ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00056', 'Price group not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.recycle_time_t"			VALUE = "{ s.dyn_time_t + 5 }">
	<MvASSIGN NAME = "l.coupon_count"			VALUE = 0>

	<MvWHILE EXPR = "{ l.coupon_count LT g.Max_Quantity }">
		<MvFOR INDEX = "l.attempt" COUNT = "{ 100 }">
			<MvASSIGN NAME = "l.coupon:code"	VALUE = "{ [ g.Feature_Filename_PGR_UT ].Coupon_Generate_Code( l.coupon:code_prefix ) }">

			<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].Coupon_Insert( l.coupon ) }">
				<MvFORSTOP>
			<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOR>

		<MvIF EXPR = "{ l.attempt GT 100 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00020', 'Unable to generate unique coupon code after 100 attempts') }">
		</MvIF>

		<MvASSIGN NAME = "l.coupon_count"		VALUE = "{ l.coupon_count + 1 }">

		<MvIF EXPR = "{ l.pricegroup:id }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXPriceGroup_Insert( l.coupon:id, l.pricegroup:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t GE l.recycle_time_t ) OR ( ( s.dyn_time_remaining NE -1 ) AND ( s.dyn_time_remaining LE 3 ) ) }">
			<MvWHILESTOP>
		</MvIF>
	</MvWHILE>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00044', l.coupon_count $ ' ' $ [ g.Module_Library_Utilities ].Plural( l.coupon_count, 'coupon', 'coupons' ) $ ' with prefix \'' $ l.coupon:code_prefix $ '\' generated' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"count":	<MvEVAL EXPR = "{ l.coupon_count }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Coupon_Generate_Customers" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 0, 1, 0, 0 ) OR
					NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) OR
					NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Generate_Validate( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.coupon:use_count"		VALUE = 0>

	<MvASSIGN NAME = "g.PriceGroup_ID"			VALUE = "{ int( g.PriceGroup_ID ) }">
	<MvASSIGN NAME = "l.customer_count"			VALUE = "{ [ g.Module_JSON ].JSON_Array_Integer( g.Customer_IDs, l.customer_ids ) }">

	<MvIF EXPR = "{ g.PriceGroup_ID LE 0 }">
		<MvASSIGN NAME = "l.pricegroup:id"		VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroup_Load_ID( g.PriceGroup_ID, l.pricegroup ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00021', 'Price group not found' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.recycle_time_t"			VALUE = "{ s.dyn_time_t + 5 }">
	<MvASSIGN NAME = "l.coupon_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.customer_id" ARRAY = "l.customer_ids" COUNT = "{ l.customer_count }">
		<MvFOR INDEX = "l.attempt" COUNT = "{ 100 }">
			<MvASSIGN NAME = "l.coupon:code"	VALUE = "{ [ g.Feature_Filename_PGR_UT ].Coupon_Generate_Code( l.coupon:code_prefix ) }">

			<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].Coupon_Insert( l.coupon ) }">
				<MvFORSTOP>
			<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOR>

		<MvIF EXPR = "{ l.attempt GT 100 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00022', 'Unable to generate unique coupon code after 100 attempts') }">
		</MvIF>

		<MvASSIGN NAME = "l.coupon_count"		VALUE = "{ l.coupon_count + 1 }">

		<MvIF EXPR = "{ l.pricegroup:id }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXPriceGroup_Insert( l.coupon:id, l.pricegroup:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].CouponXCustomer_Insert( l.coupon:id, l.customer_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t GE l.recycle_time_t ) OR ( ( s.dyn_time_remaining NE -1 ) AND ( s.dyn_time_remaining LE 3 ) ) }">
			<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00045', l.coupon_count $ ' customer specific ' $ [ g.Module_Library_Utilities ].Plural( l.coupon_count, 'coupon', 'coupons' ) $ ' with prefix \'' $ l.coupon:code_prefix $ '\' generated' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"count":	<MvEVAL EXPR = "{ l.coupon_count }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderCoupon" PARAMETERS = "ordercoupon var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"order_id":		<MvEVAL EXPR = "{ encodejavascriptnumber( l.ordercoupon:order_id ) }">,
	"coupon_id":	<MvEVAL EXPR = "{ encodejavascriptnumber( l.ordercoupon:coupon_id ) }">,
	"code":			"<MvEVAL EXPR = "{ encodejavascriptstring( l.ordercoupon:code ) }">",
	"descrip":		"<MvEVAL EXPR = "{ encodejavascriptstring( l.ordercoupon:descrip ) }">",
	"total":		<MvEVAL EXPR = "{ encodejavascriptnumber( l.ordercoupon:total ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderCouponList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "g.Order_ID"		VALUE = "{ int( g.Order_ID ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.ordercoupon" ARRAY = "l.ordercoupons" COUNT = "{ [ g.Feature_Filename_PGR_DB ].OrderCouponList_Load_Order( g.Order_ID, l.ordercoupons ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
			<MvEVAL EXPR = "{ JSON_OrderCoupon( l.ordercoupon ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderDiscountTotal" PARAMETERS = "orderdiscounttotal var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"order_id":	<MvEVAL EXPR = "{ int( l.orderdiscounttotal:order_id ) }">,
	"pgrp_id":	<MvEVAL EXPR = "{ int( l.orderdiscounttotal:pgrp_id ) }">,
	"name":		"<MvEVAL EXPR = "{ encodejavascriptstring( l.orderdiscounttotal:name ) }">",
	"descrip":	"<MvEVAL EXPR = "{ encodejavascriptstring( l.orderdiscounttotal:descrip ) }">",
	"total":	<MvEVAL EXPR = "{ encodejavascriptnumber( l.orderdiscounttotal:total ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderDiscountTotalList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Order_ID"		VALUE = "{ int( g.Order_ID ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.orderdiscounttotal" ARRAY = "l.orderdiscounttotals" COUNT = "{ [ g.Feature_Filename_PGR_DB ].OrderDiscountTotalList_Load_Order( g.Order_ID, l.orderdiscounttotals ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
			<MvEVAL EXPR = "{ JSON_OrderDiscountTotal( l.orderdiscounttotal ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderPriceGroupList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 )	OR
					NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'pg.*,
																				 m.id			AS module_id,
																				 m.code			AS module_code,
																				 m.name			AS module_name,
																				 m.provider		AS module_provider,
																				 m.api_ver		AS module_api_ver,
																				 m.version		AS module_version,
																				 m.module		AS module_module,
																				 m.refcount		AS module_refcount,
																				 m.active		AS module_active,
																				 m.priority		AS module_priority,
																				 odt.pgrp_id	AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'OrderDiscountTotals',	'odt' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'odt.order_id = ? AND pg.id = odt.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.order:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pg', g.Store_Table_Prefix $ 'OrderDiscountTotals', 'odt', 'odt.order_id = ? AND pg.id = odt.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.order:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'odt.pgrp_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	'Modules', 'm' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pg.module_id <> 0 AND m.id = pg.module_id AND m.active = 1', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, [ g.Module_Feature_PGR_JSON ].JSON_BasePriceGroupList_Filters() ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'id:pg.id,name:pg.name,type:m.name,custscope:pg.custscope,rate:pg.rate,discount:pg.discount,markup:pg.markup,
																		 dt_start:pg.dt_start,dt_end:pg.dt_end,priority:pg.priority;-pg.id,exclusion:pg.exclusion,descrip:pg.descrip,display:pg.display,
																		 qualifying_subtotal:pg.qmn_subtot,qualifying_quantity:pg.qmn_quan,qualifying_weight:pg.qmn_weight,
																		 basket_quantity:pg.bmn_quan,basket_subtotal:pg.bmn_subtot,basket_weight:pg.bmn_weight',
																		'-pg.priority;pg.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'PriceGroups', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00046', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.pricegroup_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT PriceGroups.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.pricegroup_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModule_Read( l.pricegroup ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.pricegroup_count ) }">
				<MvEVAL EXPR = "{ JSON_PriceGroup( l.pricegroup ) }">
				, "assigned":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( PriceGroups.d.assigned ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderPriceGroup_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) OR
					NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.pricegroup:module_id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00048', 'Price Group \'' $ l.pricegroup:name $ '\' cannot be applied to orders' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID( l.pricegroup:module_id, l.pricegroup:module ) }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00049', 'Unable to load discount module' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.assigned AND ( NOT l.pricegroup:module:active ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00052', 'Discount module \'' $ l.pricegroup:module:name $ '\' is deactivated' ) }">
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Feature_Filename_PGR_UT ].Order_Discount_LockFile( l.order ) }">
		<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_OrderPriceGroup_Update_Assigned_LowLevel( l.order, l.pricegroup, l.assigned ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderPriceGroup_Update_Assigned_LowLevel" PARAMETERS = "order var, pricegroup var, assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order:id, l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.force_shipping_recalculation" VALUE = 0>

	<MvIF EXPR = "{ NOT l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_UT ].DiscountState_CreateFromOrder( l.order, l.discount_state ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.pricegroup_count"				VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupAndModuleList_Load_Order( l.order:id, l.pricegroups ) }">

		<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Set_PriceGroups( l.discount_state, l.pricegroups, l.pricegroup_count ) }">

		<MvASSIGN NAME = "l.force_shipping_recalculation"	VALUE = "{ [ g.Module_Feature_PGR_UT ].DiscountState_Discounts_Shipping( l.discount_state ) }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Delete_Order_PriceGroup( l.order:id, l.pricegroup:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.orderdiscounttotal:order_id"	VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:pgrp_id"		VALUE = "{ l.pricegroup:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:coupon_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderdiscounttotal:name"		VALUE = "{ l.pricegroup:name }">
		<MvASSIGN NAME = "l.orderdiscounttotal:priority"	VALUE = "{ l.pricegroup:priority }">
		<MvASSIGN NAME = "l.orderdiscounttotal:descrip"		VALUE = "{ l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.orderdiscounttotal:total"		VALUE = 0.00>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Insert( l.orderdiscounttotal ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.discount_params" VALUE = "">

	<MvIF EXPR = "{ l.force_shipping_recalculation }">
		<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_UT ].Discount_Order_BuildParam_RecalculateShipping( l.discount_params ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_UT ].Discount_Order_BuildParam_RecalculateShippingIfDiscounted( l.discount_params ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_UT ].Discount_Order_BuildParam_RecalculateTax( l.discount_params ) }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_UT ].Discount_Order_WithParams( l.order, l.discount_params ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderCouponList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 1, 0, 0, 0 )	OR
					NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.assigned"			VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"			VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'c.id',		'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'c.code',		'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'c.descrip',	'descrip' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters, 'c.custscope',	'custscope' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'c.dt_start',	'dt_start' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_RFC3339(	l.available_filters, 'c.dt_end',	'dt_end' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'c.max_use',	'max_use' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'c.max_per',	'max_per' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters, 'c.active',	'active' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'c.use_count',	'use_count' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'c.*,
																				 oc.coupon_id	AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'OrderCoupons',	'oc' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'Coupons',		'c' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'oc.order_id = ? AND c.id = oc.coupon_id', [ g.Module_Library_DB ].SQL_Query_Field( l.order:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'Coupons',		'c' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'c', g.Store_Table_Prefix $ 'OrderCoupons', 'oc', 'oc.order_id = ? AND c.id = oc.coupon_id', [ g.Module_Library_DB ].SQL_Query_Field( l.order:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'oc.coupon_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'code:c.code,descrip:c.descrip,custscope:c.custscope,dt_start:c.dt_start,dt_end:c.dt_end,max_use:c.max_use,
																			   max_per:c.max_per,active:c.active,use_count:c.use_count', 'c.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Coupons', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00050', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.coupon_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Coupons.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.coupon_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_DB ].Coupon_Read( l.coupon ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.coupon_count ) }">
			<MvEVAL EXPR = "{ JSON_Coupon( l.coupon ) }">
			, "assigned":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Coupons.d.assigned ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Coupons" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Coupons">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderCoupon_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'COUP', 1, 0, 0, 0 ) OR
					NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Coupon_Load( l.coupon ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_UT ].Order_Assign_Coupon( l.order, l.coupon ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_UT ].Order_Unassign_Coupon( l.order, l.coupon ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Rediscount" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Feature_Filename_PGR_UT ].Order_Discount_LockFile( l.order ) }">
		<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Order_Rediscount_LowLevel( l.order ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }"> 
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Rediscount_LowLevel" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order:id, l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Replace all price groups on the order with those for the assigned customer
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.pricegroup_count" VALUE = "{ [ g.Module_Feature_PGR_UT ].ResolvedPriceGroupAndModuleList_Load_Customer( l.order:cust_id, l.pricegroups ) }">
	<MvIF EXPR = "{ l.pricegroup_count EQ 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Delete_All_Order( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.pricegroup" ARRAY = "l.pricegroups" COUNT = "{ l.pricegroup_count }">
		<MvASSIGN NAME = "l.orderdiscounttotal:order_id"	VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:pgrp_id"		VALUE = "{ l.pricegroup:id }">
		<MvASSIGN NAME = "l.orderdiscounttotal:coupon_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderdiscounttotal:name"		VALUE = "{ l.pricegroup:name }">
		<MvASSIGN NAME = "l.orderdiscounttotal:priority"	VALUE = "{ l.pricegroup:priority }">
		<MvASSIGN NAME = "l.orderdiscounttotal:descrip"		VALUE = "{ l.pricegroup:descrip }">
		<MvASSIGN NAME = "l.orderdiscounttotal:total"		VALUE = 0.00>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].OrderDiscountTotal_Insert( l.orderdiscounttotal ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Recalculate discounts, shipping and tax
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.discount_params" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_UT ].Discount_Order_BuildParam_RecalculateShipping( l.discount_params ) }">
	<MvEVAL EXPR = "{ [ g.Feature_Filename_PGR_UT ].Discount_Order_BuildParam_RecalculateTax( l.discount_params ) }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_UT ].Discount_Order_WithParams( l.order, l.discount_params ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupBusinessAccountList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> 																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.assigned"			VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'ba.*,
																				 pgxba.account_id AS assigned' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'BusinessAccounts', 'ba' ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ba', g.Store_Table_Prefix $ 'PriceGroupXBusinessAccount', 'pgxba', 'pgxba.pgrp_id = ? AND pgxba.account_id = ba.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ba', g.Store_Table_Prefix $ 'PriceGroupXBusinessAccount', 'pgxba', 'pgxba.pgrp_id = ? AND pgxba.account_id = ba.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxba.account_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXBusinessAccount', 'pgxba' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxba.pgrp_id = ? AND ba.id = pgxba.account_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_Filters() ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_OrderBy(), 'ba.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'BusinessAccounts', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00062', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.businessaccount_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT BusinessAccounts.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.businessaccount_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_DB ].BusinessAccount_Read( l.businessaccount ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.businessaccount_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_BusinessAccount( l.businessaccount ) }">
				,"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( BusinessAccounts.d.assigned ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "BusinessAccounts" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "BusinessAccounts">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupBusinessAccountIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"							VALUE = "">
	<MvASSIGN NAME = "l.record"							VALUE = "">

	<MvREFERENCE NAME = "l.businessaccount" 			VARIABLE = "l.record:ba">
	<MvREFERENCE NAME = "l.pricegroupxbusinessaccount" 	VARIABLE = "l.record:pgxba">

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_BusinessAccount_Load( l.businessaccount ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"							VALUE = "">
	<MvASSIGN NAME = "l.sort"							VALUE = "">
	<MvASSIGN NAME = "l.assigned"						VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"						VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PGR_DB ].PriceGroupXBusinessAccount_Load( l.pricegroup:id, l.businessaccount:id, l.pricegroupxbusinessaccount ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'BusinessAccounts', 'ba' ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'ba', g.Store_Table_Prefix $ 'PriceGroupXBusinessAccount', 'pgxba', 'pgxba.pgrp_id = ? AND pgxba.account_id = ba.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'ba', g.Store_Table_Prefix $ 'PriceGroupXBusinessAccount', 'pgxba', 'pgxba.pgrp_id = ? AND pgxba.account_id = ba.id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pgxba.account_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'PriceGroupXBusinessAccount', 'pgxba' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'pgxba.pgrp_id = ? AND ba.id = pgxba.account_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.query, l.filter, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_Filters() ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.query, l.sort, [ g.Module_Feature_CUS_JSON ].JSON_BaseBusinessAccountList_OrderBy(), 'ba.id' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupBusinessAccount_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CUST', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_BusinessAccount_Load( l.businessaccount ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXBusinessAccount_Load( l.pricegroup:id, l.businessaccount:id, l.pricegroupxbusinessaccount ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXBusinessAccount_Delete( l.pricegroup:id, l.businessaccount:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00067', 'BusinessAccount \'' $ l.businessaccount:login $ '\' removed from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXBusinessAccount_Insert( l.pricegroup:id, l.businessaccount:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00066', 'BusinessAccount \'' $ l.businessaccount:login $ '\' assigned to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCategoryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }"> 	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }"> 	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'cat.*,
																				 pgxc.cat_id AS assigned' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id',		'page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR(	 l.search_query, 'parent_cat.code',	'parent_category' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions',	'pbv',			'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'Categories',			'parent_cat',	'cat.parent_id = parent_cat.id', '' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXCategory',	'pgxc' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxc.pgrp_id = ? AND cat.id = pgxc.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PriceGroupXCategory', 'pgxc', 'pgxc.pgrp_id = ? AND cat.id = pgxc.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxc.cat_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Category_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Categories', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00091', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.category_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.category_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Category_Read( l.category, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.category_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_OnDemandColumns( l.category, l.ondemandcolumns ) }">
				, "parent_category":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.parent_category ) }">",
				"assigned":				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Categories.d.assigned ) }">

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_CustomFields_With_Query( l.search_query, l.customfield_state, Categories.d.id, 'Categories' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCategoryIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"							VALUE = "">
	<MvASSIGN NAME = "l.record"							VALUE = "">

	<MvREFERENCE NAME = "l.category"					VARIABLE = "l.record:cat">
	<MvREFERENCE NAME = "l.pricegroupxcategory"			VARIABLE = "l.record:pgxec">
	<MvREFERENCE NAME = "l.pbv"							VARIABLE = "l.record:pbv">
	<MvREFERENCE NAME = "l.parentcategory"				VARIABLE = "l.record:parent_cat">

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"							VALUE = "">
	<MvASSIGN NAME = "l.sort"							VALUE = "">
	<MvASSIGN NAME = "l.assigned"						VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"						VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.category:page_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].PageBranchVersion_Load_Code_Branch_Head( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID(), l.category:page_code, l.pbv ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.category:parent_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( l.category:parent_id, l.parentcategory ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXCategory_Load( l.pricegroup:id, l.category:id, l.pricegroupxcategory ) }">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions',	'pbv',			'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'Categories',			'parent_cat',	'cat.parent_id = parent_cat.id',	'' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'PriceGroupXCategory', 'pgxc' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxc.pgrp_id = ? AND cat.id = pgxc.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PriceGroupXCategory', 'pgxc', 'pgxc.pgrp_id = ? AND cat.id = pgxc.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxc.cat_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>
	
	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.category:id, g.Module_JSON, 'JSON_Category_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupCategory_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }"> 	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }"> 	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXCategory_Load( l.pricegroup:id, l.category:id, l.null ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCategory_Delete( l.pricegroup:id, l.category:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00094', 'Category \'' $ l.category:code $ '\' removed as a category from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXCategory_Insert( l.pricegroup:id, l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00095', 'Category \'' $ l.category:code $ '\' assigned as a category to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedCategoryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }"> 	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }"> 	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'cat.*,
																				 pgxec.cat_id AS assigned' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id',		'page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR(	 l.search_query, 'parent_cat.code',	'parent_category' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions',	'pbv',			'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'Categories',			'parent_cat',	'cat.parent_id = parent_cat.id', '' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory',	'pgxec' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxec.pgrp_id = ? AND cat.id = pgxec.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory', 'pgxec', 'pgxec.pgrp_id = ? AND cat.id = pgxec.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'pgxec.cat_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Category_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Categories', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-PGR-JSN-00096', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.category_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.category_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Category_Read( l.category, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.category_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_OnDemandColumns( l.category, l.ondemandcolumns ) }">
				, "parent_category":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( Categories.d.parent_category ) }">",
				"assigned":				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Categories.d.assigned ) }">

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Category_CustomFields_With_Query( l.search_query, l.customfield_state, Categories.d.id, 'Categories' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedCategoryIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"							VALUE = "">
	<MvASSIGN NAME = "l.record"							VALUE = "">

	<MvREFERENCE NAME = "l.category"					VARIABLE = "l.record:cat">
	<MvREFERENCE NAME = "l.pricegroupxexcludedcategory"	VARIABLE = "l.record:pgxec">
	<MvREFERENCE NAME = "l.pbv"							VARIABLE = "l.record:pbv">
	<MvREFERENCE NAME = "l.parentcategory"				VARIABLE = "l.record:parent_cat">

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"							VALUE = "">
	<MvASSIGN NAME = "l.sort"							VALUE = "">
	<MvASSIGN NAME = "l.assigned"						VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"						VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )				OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.category:page_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].PageBranchVersion_Load_Code_Branch_Head( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID(), l.category:page_code, l.pbv ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.category:parent_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( l.category:parent_id, l.parentcategory ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Module_Feature_PGR_DB ].PriceGroupXExcludedCategory_Load( l.pricegroup:id, l.category:id, l.pricegroupxexcludedcategory ) }">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions',	'pbv',			'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'Categories',			'parent_cat',	'cat.parent_id = parent_cat.id',	'' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query,	g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory', 'pgxec' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxec.pgrp_id = ? AND cat.id = pgxec.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PriceGroupXExcludedCategory', 'pgxec', 'pgxec.pgrp_id = ? AND cat.id = pgxec.cat_id', [ g.Module_Library_DB ].SQL_Query_Field( l.pricegroup:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query,	'pgxec.cat_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>
	
	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"	VALUE = "{ [ g.Module_JSON ].JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.category:id, g.Module_JSON, 'JSON_Category_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PriceGroupExcludedCategory_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_PriceGroup_Load( l.pricegroup ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCategory_Load( l.pricegroup:id, l.category:id, l.null ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCategory_Delete( l.pricegroup:id, l.category:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00099', 'Category \'' $ l.category:code $ '\' removed as an excluded category from price group \'' $ l.pricegroup:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_PGR_DB ].PriceGroupXExcludedCategory_Insert( l.pricegroup:id, l.category:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-PGR-JSN-00100', 'Category \'' $ l.category:code $ '\' assigned as an excluded category to price group \'' $ l.pricegroup:name $ '\'' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_UT ].ScheduledTask_Trigger( 'precalcprices' ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-PAY-DTB-
| Next Error Code: 152  
|
</MvCOMMENT>

<MvFUNCTION NAME = "PAY_Store_Create" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| sNN_PaymentRules
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'PaymentRules
						  (
							req_page	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							auth_delay	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							max_fails	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							use_token	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							bl_auto		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							bl_fails	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							bl_time		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							bl_dur		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							rc_mode		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							rc_theme	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							rc_type		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							rc_size		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							rc_lang		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 10 )	$ ',
							rc_pub_key	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							rc_prv_key	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							rc_qty		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							rc_thresh	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							rc_ignzero	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							rc_t_end	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentrules:req_page"		VALUE = "OCST">
	<MvASSIGN NAME = "l.paymentrules:auth_delay"	VALUE = 5000>
	<MvASSIGN NAME = "l.paymentrules:max_fails"		VALUE = 0>
	<MvASSIGN NAME = "l.paymentrules:use_token"		VALUE = 1>
	<MvASSIGN NAME = "l.paymentrules:bl_auto"		VALUE = 0>
	<MvASSIGN NAME = "l.paymentrules:bl_fails"		VALUE = 10>
	<MvASSIGN NAME = "l.paymentrules:bl_time"		VALUE = 1800>
	<MvASSIGN NAME = "l.paymentrules:bl_dur"		VALUE = 3600>
	<MvASSIGN NAME = "l.paymentrules:rc_mode"		VALUE = "off">
	<MvASSIGN NAME = "l.paymentrules:rc_theme"		VALUE = "light">
	<MvASSIGN NAME = "l.paymentrules:rc_type"		VALUE = "image">
	<MvASSIGN NAME = "l.paymentrules:rc_size"		VALUE = "normal">
	<MvASSIGN NAME = "l.paymentrules:rc_lang"		VALUE = "en">
	<MvASSIGN NAME = "l.paymentrules:rc_pub_key"	VALUE = "">
	<MvASSIGN NAME = "l.paymentrules:rc_prv_key"	VALUE = "">
	<MvASSIGN NAME = "l.paymentrules:rc_qty"		VALUE = 10>
	<MvASSIGN NAME = "l.paymentrules:rc_thresh"		VALUE = 3600>
	<MvASSIGN NAME = "l.paymentrules:rc_ignzero"	VALUE = 1>
	<MvASSIGN NAME = "l.paymentrules:rc_t_end"		VALUE = 0>

	<MvIF EXPR = "{ NOT PaymentRules_Insert( l.paymentrules ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_PaymentMethodRules
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'PaymentMethodRules
						  (
							mod_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							meth_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
							pctype_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							agrpcount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							priority	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							descrip		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
							min_total	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							max_total	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 10, 2 )	$ ',
							disable_rc	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
							states		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ ',
							zips		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ ',
							countries	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ ',
							exclude_df	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() 			$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'PaymentMethodRules_1 ON ' $ g.Store_Table_Prefix $ 'PaymentMethodRules ( mod_code, meth_code, pctype_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'PaymentMethodRules_2 ON ' $ g.Store_Table_Prefix $ 'PaymentMethodRules ( priority DESC )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_PaymentMethodExclusions
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions
						  (
							excludermo	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							excluderme	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							excluderti	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							excludedmo	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							excludedme	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							excludedti	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions_1 ON ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions ( excludermo, excluderme, excluderti, excludedmo, excludedme, excludedti )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00014', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions_2 ON ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions ( excludedmo, excludedme, excludedti )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00015', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_ProductPaymentRules
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductPaymentRules
						  (
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()	$ ',
							limitmeths	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00016', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductPaymentRules_1 ON ' $ g.Store_Table_Prefix $ 'ProductPaymentRules ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00017', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_ProductPaymentMethods
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods
						  (
							product_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							mod_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							meth_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							pctype_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00018', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods_1 ON ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods ( product_id, mod_code, meth_code, pctype_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00019', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods_2 ON ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods ( product_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00106', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_MivaPaySettings
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'MivaPaySettings
						  (
						  	enabled			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							base_url		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							merchant		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							secret			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							signkey			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							pct_group		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ ',
							pct_desc		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							cvv_co_pct		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )	$ ',
							cvv_co_pc		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )	$ ',
							cvv_ad_pct		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 20 )	$ ',
							ordr_cards		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() 		$ ',
							ordr_days		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() 	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00086', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.mivapay_settings:enabled"		VALUE = 0>
	<MvASSIGN NAME = "l.mivapay_settings:base_url"		VALUE = "https://gateway.mivapay.net">
	<MvASSIGN NAME = "l.mivapay_settings:merchant"		VALUE = "">
	<MvASSIGN NAME = "l.mivapay_settings:secret"		VALUE = "">
	<MvASSIGN NAME = "l.mivapay_settings:signkey"		VALUE = "">
	<MvASSIGN NAME = "l.mivapay_settings:pct_group"		VALUE = 0>
	<MvASSIGN NAME = "l.mivapay_settings:pct_desc"		VALUE = "Credit Card">
	<MvASSIGN NAME = "l.mivapay_settings:cvv_co_pct"	VALUE = "required">
	<MvASSIGN NAME = "l.mivapay_settings:cvv_co_pc"		VALUE = "hidden">
	<MvASSIGN NAME = "l.mivapay_settings:cvv_ad_pct"	VALUE = "optional">
	<MvASSIGN NAME = "l.mivapay_settings:ordr_cards"	VALUE = 0>
	<MvASSIGN NAME = "l.mivapay_settings:ordr_days"		VALUE = 30>

	<MvIF EXPR = "{ NOT MivaPaySettings_Insert( l.mivapay_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_MivaPayDeletedTokens
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'MivaPayDeletedTokens
						  (
						  	token ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00144', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'MivaPayDeletedTokens_1 ON ' $ g.Store_Table_Prefix $ 'MivaPayDeletedTokens ( token )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00145', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_PaymentCardTypes
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'PaymentCardTypes
						  (
						  	id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()		$ ',
							type		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							mod_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )	$ ',
							meth_code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )	$ ',
							prefixes	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							lengths		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )	$ ',
							cvv			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()		$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00087', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'PaymentCardTypes_1 ON ' $ g.Store_Table_Prefix $ 'PaymentCardTypes ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00088', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'PaymentCardTypes_2 ON ' $ g.Store_Table_Prefix $ 'PaymentCardTypes ( type )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00109', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'PaymentCardTypes_3 ON ' $ g.Store_Table_Prefix $ 'PaymentCardTypes ( mod_code, meth_code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00110', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'PaymentCardTypes', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.paymentcardtype_count"															VALUE = 0>

	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ ++l.paymentcardtype_count }"	MEMBER = "type"		VALUE = "Visa">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "lengths"	VALUE = "13, 16">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "prefixes"	VALUE = "4">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "cvv"		VALUE = 1>

	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ ++l.paymentcardtype_count }"	MEMBER = "type"		VALUE = "MasterCard">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "lengths"	VALUE = "16">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "prefixes"	VALUE = "510000-559999, 222100-272099">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "cvv"		VALUE = 1>

	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ ++l.paymentcardtype_count }"	MEMBER = "type" 	VALUE = "American Express">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "lengths"	VALUE = "15">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "prefixes"	VALUE = "34, 37">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "cvv"		VALUE = 1>

	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ ++l.paymentcardtype_count }"	MEMBER = "type" 	VALUE = "Discover">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "lengths"	VALUE = "16, 17, 18, 19">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "prefixes"	VALUE = "6011, 622126-622925, 624000-626999, 628200-628899, 64, 65">
	<MvASSIGN NAME = "l.paymentcardtypes" INDEX = "{ l.paymentcardtype_count }"		MEMBER = "cvv"		VALUE = 1>

	<MvFOREACH ITERATOR = "l.paymentcardtype" ARRAY = "l.paymentcardtypes" COUNT = "{ l.paymentcardtype_count }">
		<MvIF EXPR = "{ NOT PaymentCardType_Insert( l.paymentcardtype ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| sNN_CustomerPaymentCards
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							cust_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							fname		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							lname		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							exp_month	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 2, 0 )	$ ',
							exp_year	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 4, 0 )	$ ',
							lastfour	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 4 )			$ ',
							addr1		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
							addr2		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
							city		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							state		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							zip			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							cntry		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							lastused	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							token		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
							type_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							refcount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00092', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards_1 ON ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00093', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards_2 ON ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards ( cust_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00094', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards_3 ON ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards ( exp_year, exp_month )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00121', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'CustomerPaymentCards', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_OrderPaymentCards
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'OrderPaymentCards
						  (
							id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							fname		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							lname		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							exp_month	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 2, 0 )	$ ',
							exp_year	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 4, 0 )	$ ',
							lastfour	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 4 )			$ ',
							addr1		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
							addr2		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 100 )		$ ',
							city		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							state		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							zip			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							cntry		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
							token		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
							type_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							expires		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ ',
							refcount	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER()			$ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00122', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'OrderPaymentCards_1 ON ' $ g.Store_Table_Prefix $ 'OrderPaymentCards ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00123', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'OrderPaymentCards', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| sNN_OrderPaymentCardXOrder
	|
	</MvCOMMENT>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder
						  (
							card_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ ',
							order_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_INTEGER() $ '
						  )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00124', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder_1 ON ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder ( card_id, order_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00125', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder_2 ON ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder ( order_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00126', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PAY_Store_Delete" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'PaymentRules' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'PaymentMethodRules' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'PaymentMethodExclusions' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'ProductPaymentRules' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'ProductPaymentMethods' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'PaymentCardTypes' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'MivaPayDeletedTokens' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'MivaPaySettings' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'CustomerPaymentCards' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'OrderPaymentCards' }">
	<MvQUERY NAME = "Merchant"	QUERY = "{ 'DROP TABLE ' $  g.Store_Table_Prefix $ 'OrderPaymentCardXOrder' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_PaymentRules
|
</MvCOMMENT>

<MvFUNCTION NAME = "PaymentRules_Read" PARAMETERS = "paymentrules var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentrules:req_page"		VALUE = "{ PaymentRules.d.req_page }">
	<MvASSIGN NAME = "l.paymentrules:auth_delay"	VALUE = "{ PaymentRules.d.auth_delay }">
	<MvASSIGN NAME = "l.paymentrules:max_fails"		VALUE = "{ PaymentRules.d.max_fails }">
	<MvASSIGN NAME = "l.paymentrules:use_token"		VALUE = "{ PaymentRules.d.use_token }">
	<MvASSIGN NAME = "l.paymentrules:bl_auto"		VALUE = "{ PaymentRules.d.bl_auto }">
	<MvASSIGN NAME = "l.paymentrules:bl_fails"		VALUE = "{ PaymentRules.d.bl_fails }">
	<MvASSIGN NAME = "l.paymentrules:bl_time"		VALUE = "{ PaymentRules.d.bl_time }">
	<MvASSIGN NAME = "l.paymentrules:bl_dur"		VALUE = "{ PaymentRules.d.bl_dur }">
	<MvASSIGN NAME = "l.paymentrules:rc_mode"		VALUE = "{ PaymentRules.d.rc_mode }">
	<MvASSIGN NAME = "l.paymentrules:rc_theme"		VALUE = "{ PaymentRules.d.rc_theme }">
	<MvASSIGN NAME = "l.paymentrules:rc_type"		VALUE = "{ PaymentRules.d.rc_type }">
	<MvASSIGN NAME = "l.paymentrules:rc_size"		VALUE = "{ PaymentRules.d.rc_size }">
	<MvASSIGN NAME = "l.paymentrules:rc_lang"		VALUE = "{ PaymentRules.d.rc_lang }">
	<MvASSIGN NAME = "l.paymentrules:rc_pub_key"	VALUE = "{ PaymentRules.d.rc_pub_key }">
	<MvASSIGN NAME = "l.paymentrules:rc_prv_key"	VALUE = "{ PaymentRules.d.rc_prv_key }">
	<MvASSIGN NAME = "l.paymentrules:rc_qty"		VALUE = "{ PaymentRules.d.rc_qty }">
	<MvASSIGN NAME = "l.paymentrules:rc_thresh"		VALUE = "{ PaymentRules.d.rc_thresh }">
	<MvASSIGN NAME = "l.paymentrules:rc_ignzero"	VALUE = "{ PaymentRules.d.rc_ignzero }">
	<MvASSIGN NAME = "l.paymentrules:rc_t_end"		VALUE = "{ PaymentRules.d.rc_t_end }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentRules_Insert" PARAMETERS = "paymentrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'PaymentRules
						  ( req_page, auth_delay, max_fails, use_token,
						  	bl_auto, bl_fails, bl_time, bl_dur,
						  	rc_mode, rc_theme, rc_type, rc_size, rc_lang, rc_pub_key, rc_prv_key, rc_qty, rc_thresh, rc_ignzero, rc_t_end )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.paymentrules:req_page, l.paymentrules:auth_delay, l.paymentrules:max_fails, l.paymentrules:use_token,
					   l.paymentrules:bl_auto, l.paymentrules:bl_fails, l.paymentrules:bl_time, l.paymentrules:bl_dur,
					   l.paymentrules:rc_mode, l.paymentrules:rc_theme, l.paymentrules:rc_type, l.paymentrules:rc_size, l.paymentrules:rc_lang, l.paymentrules:rc_pub_key, l.paymentrules:rc_prv_key, l.paymentrules:rc_qty, l.paymentrules:rc_thresh, l.paymentrules:rc_ignzero, l.paymentrules:rc_t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00020', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentRules_Update" PARAMETERS = "paymentrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PaymentRules
						  SET
							req_page	= ?,
							auth_delay	= ?,
							max_fails	= ?,
							use_token	= ?,
							bl_auto		= ?,
							bl_fails	= ?,
							bl_time		= ?,
							bl_dur		= ?,
							rc_mode		= ?,
							rc_theme	= ?,
							rc_type		= ?,
							rc_size		= ?,
							rc_lang		= ?,
							rc_pub_key	= ?,
							rc_prv_key	= ?,
							rc_qty		= ?,
							rc_thresh	= ?,
							rc_ignzero	= ?' }"
			 FIELDS	= "l.paymentrules:req_page, l.paymentrules:auth_delay, l.paymentrules:max_fails, l.paymentrules:use_token,
			 		   l.paymentrules:bl_auto, l.paymentrules:bl_fails, l.paymentrules:bl_time, l.paymentrules:bl_dur,
			 		   l.paymentrules:rc_mode, l.paymentrules:rc_theme, l.paymentrules:rc_type, l.paymentrules:rc_size, l.paymentrules:rc_lang, l.paymentrules:rc_pub_key, l.paymentrules:rc_prv_key, l.paymentrules:rc_qty, l.paymentrules:rc_thresh, l.paymentrules:rc_ignzero">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00021', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentRules_Update_reCAPTCHA_TimeEnd" PARAMETERS = "t_end" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PaymentRules
						 SET
						 	rc_t_end = ?' }"
			 FIELDS = "l.t_end">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00111', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentRules_Load" PARAMETERS = "paymentrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentRules"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentRules' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00022', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PaymentRules.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentRules">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00023' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PaymentRules_Read( l.paymentrules ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentRules">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentRules_Load_Cached" PARAMETERS = "paymentrules var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:paymentrules_load_cached">

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ PaymentRules_Load( l.cache:paymentrules ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code" 		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message" 	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof" 	VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ NOT l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentrules"					VALUE = "{ l.cache:paymentrules }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_MivaPaySettings
|
</MvCOMMENT>

<MvFUNCTION NAME = "MivaPaySettings_Load" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "MivaPaySettings"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'MivaPaySettings' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00098', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings:enabled"				VALUE = "{ MivaPaySettings.d.enabled }">
	<MvASSIGN NAME = "l.settings:merchant"				VALUE = "{ MivaPaySettings.d.merchant }">
	<MvASSIGN NAME = "l.settings:secret"				VALUE = "{ MivaPaySettings.d.secret }">
	<MvASSIGN NAME = "l.settings:signkey"				VALUE = "{ MivaPaySettings.d.signkey }">
	<MvASSIGN NAME = "l.settings:base_url"				VALUE = "{ MivaPaySettings.d.base_url }">
	<MvASSIGN NAME = "l.settings:pct_group"				VALUE = "{ MivaPaySettings.d.pct_group }">
	<MvASSIGN NAME = "l.settings:pct_desc"				VALUE = "{ MivaPaySettings.d.pct_desc }">
	<MvASSIGN NAME = "l.settings:cvv_co_pct"			VALUE = "{ MivaPaySettings.d.cvv_co_pct }">
	<MvASSIGN NAME = "l.settings:cvv_co_pc"				VALUE = "{ MivaPaySettings.d.cvv_co_pc }">
	<MvASSIGN NAME = "l.settings:cvv_ad_pct"			VALUE = "{ MivaPaySettings.d.cvv_ad_pct }">
	<MvASSIGN NAME = "l.settings:ordr_cards"			VALUE = "{ MivaPaySettings.d.ordr_cards }">
	<MvASSIGN NAME = "l.settings:ordr_days"				VALUE = "{ MivaPaySettings.d.ordr_days }">

	<MvASSIGN NAME = "l.settings:payment_url"			VALUE = "{ l.settings:base_url $ '/payment.mvc' }">
	<MvASSIGN NAME = "l.settings:delete_url"			VALUE = "{ l.settings:base_url $ '/delete.mvc' }">
	<MvASSIGN NAME = "l.settings:transact_url"			VALUE = "{ l.settings:base_url $ '/transact.mvc' }">
	<MvASSIGN NAME = "l.settings:applepay_url"			VALUE = "{ l.settings:base_url $ '/applepay.mvc' }">

	<MvASSIGN NAME = "l.settings:payment_url_sep"		VALUE = "{ l.settings:payment_url $ '?' }">
	<MvASSIGN NAME = "l.settings:delete_url_sep"		VALUE = "{ l.settings:delete_url $ '?' }">
	<MvASSIGN NAME = "l.settings:transact_url_sep"		VALUE = "{ l.settings:transact_url $ '?' }">
	<MvASSIGN NAME = "l.settings:applepay_url_sep"		VALUE = "{ l.settings:applepay_url $ '?' }">
	
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "MivaPaySettings">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MivaPaySettings_Load_Cached" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache"						VARIABLE = "g.Session:cache:mivapaysettings_load_cached">

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ MivaPaySettings_Load( l.cache:settings ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
            <MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.settings"						VALUE = "{ l.cache:settings }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "MivaPaySettings_Insert" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:cache:mivapaysettings_load_cached" VALUE = "">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'MivaPaySettings
							( enabled, base_url, merchant, secret, signkey, pct_group, pct_desc,
							  cvv_co_pct, cvv_co_pc, cvv_ad_pct, ordr_cards, ordr_days )
							VALUES
							( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.settings:enabled, l.settings:base_url, l.settings:merchant, l.settings:secret, l.settings:signkey,
					   l.settings:pct_group, l.settings:pct_desc, l.settings:cvv_co_pct, l.settings:cvv_co_pc,
					   l.settings:cvv_ad_pct, l.settings:ordr_cards, l.settings:ordr_days">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00099', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MivaPaySettings_Update" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:cache:mivapaysettings_load_cached" VALUE = "">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'MivaPaySettings
							SET
							enabled		= ?,
							base_url	= ?,
							merchant	= ?,
							secret		= ?,
							signkey		= ?,
							pct_group	= ?,
							pct_desc	= ?,
							cvv_co_pct	= ?,
							cvv_co_pc	= ?,
							cvv_ad_pct	= ?,
							ordr_cards	= ?,
							ordr_days	= ?' }"
			 FIELDS = "l.settings:enabled, l.settings:base_url, l.settings:merchant, l.settings:secret, l.settings:signkey,
					   l.settings:pct_group, l.settings:pct_desc, l.settings:cvv_co_pct, l.settings:cvv_co_pc,
					   l.settings:cvv_ad_pct, l.settings:ordr_cards, l.settings:ordr_days">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00100', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_MivaPayDeletedTokens
|
</MvCOMMENT>

<MvFUNCTION NAME = "MivaPayDeletedToken_Insert" PARAMETERS = "token var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'MivaPayDeletedTokens
							( token )
							VALUES
							( ? )' }"
			 FIELDS = "l.token">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00148', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "MivaPayDeletedToken_Delete" PARAMETERS = "token" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'MivaPayDeletedTokens
						  WHERE
							token = ?' }"
			 FIELDS	= "l.token">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00149', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_PaymentCardTypes
|
</MvCOMMENT>

<MvFUNCTION NAME = "PaymentCardType_Read" PARAMETERS = "paymentcardtype var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcardtype:id"			VALUE = "{ PaymentCardTypes.d.id }">
	<MvASSIGN NAME = "l.paymentcardtype:type"		VALUE = "{ PaymentCardTypes.d.type }">
	<MvASSIGN NAME = "l.paymentcardtype:mod_code"	VALUE = "{ PaymentCardTypes.d.mod_code }">
	<MvASSIGN NAME = "l.paymentcardtype:meth_code"	VALUE = "{ PaymentCardTypes.d.meth_code }">
	<MvASSIGN NAME = "l.paymentcardtype:prefixes"	VALUE = "{ PaymentCardTypes.d.prefixes }">
	<MvASSIGN NAME = "l.paymentcardtype:lengths"	VALUE = "{ PaymentCardTypes.d.lengths }">
	<MvASSIGN NAME = "l.paymentcardtype:cvv"		VALUE = "{ PaymentCardTypes.d.cvv }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardType_Insert" PARAMETERS = "paymentcardtype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcardtype:id" 			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'PaymentCardTypes' ) }">

	<MvIF EXPR = "{ ISNULL l.paymentcardtype:cvv }">
		<MvASSIGN NAME = "l.paymentcardtype:cvv"		VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'PaymentCardTypes
						  ( id, type, mod_code, meth_code, prefixes, lengths, cvv )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.paymentcardtype:id, l.paymentcardtype:type, l.paymentcardtype:mod_code, l.paymentcardtype:meth_code,
					   l.paymentcardtype:prefixes, l.paymentcardtype:lengths, l.paymentcardtype:cvv">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00024', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardType_Update" PARAMETERS = "paymentcardtype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PaymentCardTypes
						  SET
							type		= ?,
							mod_code	= ?,
							meth_code	= ?,
							prefixes	= ?,
							lengths		= ?,
							cvv			= ?
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.paymentcardtype:type, l.paymentcardtype:mod_code, l.paymentcardtype:meth_code,
					   l.paymentcardtype:prefixes, l.paymentcardtype:lengths, l.paymentcardtype:cvv,
					   l.paymentcardtype:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00025', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardType_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'PaymentCardTypes
						  WHERE
							id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00026', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardType_Load_ID" PARAMETERS = "id, paymentcardtype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentCardTypes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentCardTypes WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00027', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PaymentCardTypes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentCardTypes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00028' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PaymentCardType_Read( l.paymentcardtype ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentCardTypes">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardType_Load_ID_Cached" PARAMETERS = "id, paymentcardtype var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id"								VALUE = "{ int( l.id ) }">

	<MvIF EXPR = "{ l.id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00105' ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache"					VARIABLE = "g.Session:cache:paymentcardtype_load_id">
		<MvDIMENSION INDEX = "{ l.id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result" 				VALUE = "{ PaymentCardType_Load_ID( l.id, l.cache:paymentcardtype ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE =  "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcardtype"				VALUE = "{ l.cache:paymentcardtype }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardType_Load_Type" PARAMETERS = "type, paymentcardtype var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentCardTypes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentCardTypes WHERE type = ?' }"
				FIELDS	= "l.type">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00029', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PaymentCardTypes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentCardTypes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00030' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PaymentCardType_Read( l.paymentcardtype ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentCardTypes">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardType_Load_Type_Cached" PARAMETERS = "type, paymentcardtype var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.type }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00112' ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache"					VARIABLE = "g.Session:cache:paymentcardtype_load_type">
		<MvMEMBER NAME = "{ l.type }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result" 				VALUE = "{ PaymentCardType_Load_Type( l.type, l.cache:paymentcardtype ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE =  "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcardtype"				VALUE = "{ l.cache:paymentcardtype }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardTypeList_Load_All" PARAMETERS = "paymentcardtype_list var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentCardTypes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentCardTypes ORDER BY type ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00031', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcardtype_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT PaymentCardTypes.d.EOF }">
		<MvASSIGN NAME = "l.paymentcardtype_count"	VALUE = "{ l.paymentcardtype_count + 1 }">
		<MvEVAL EXPR = "{ PaymentCardType_Read( l.paymentcardtype_list[ l.paymentcardtype_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "PaymentCardTypes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentCardTypes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00032', l.paymentcardtype_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardTypeList_Load_Linked" PARAMETERS = "paymentcardtype_list var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentCardTypes"
				QUERY	= "{ 'SELECT
								*
							  FROM ' $
							  	g.Store_Table_Prefix $ 'PaymentCardTypes pct
							  WHERE
							  	mod_code	<> \'\' AND
							  	meth_code	<> \'\'
							  ORDER BY type ASC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00107', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcardtype_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT PaymentCardTypes.d.EOF }">
		<MvASSIGN NAME = "l.paymentcardtype_count"	VALUE = "{ l.paymentcardtype_count + 1 }">
		<MvEVAL EXPR = "{ PaymentCardType_Read( l.paymentcardtype_list[ l.paymentcardtype_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "PaymentCardTypes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentCardTypes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00108', l.paymentcardtype_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardTypeList_Load_PaymentMethod" PARAMETERS = "mod_code, meth_code, paymentcardtypes var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentCardTypes"
				QUERY	= "{ 'SELECT 
								*
							  FROM ' $ 
							  	g.Store_Table_Prefix $ 'PaymentCardTypes
							  WHERE 
							  	mod_code 	= ? AND
							  	meth_code 	= ?
							  ORDER BY type ASC' }"
				FIELDS	= "l.mod_code, l.meth_code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00041', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcardtype_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT PaymentCardTypes.d.EOF }">
		<MvASSIGN NAME = "l.paymentcardtype_count"	VALUE = "{ l.paymentcardtype_count + 1 }">
		<MvEVAL EXPR = "{ PaymentCardType_Read( l.paymentcardtypes[ l.paymentcardtype_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "PaymentCardTypes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentCardTypes">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00042', l.paymentcardtype_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentCardTypeList_Load_PaymentMethod_Cached" PARAMETERS = "mod_code, meth_code, paymentcardtypes var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.mod_code OR ISNULL l.meth_code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00043', 'Invalid Payment Method' ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:paymentcardtypelist_load_paymentmethod_cached">
		<MvMEMBER NAME = "{ l.mod_code }">
		<MvMEMBER NAME = "{ l.meth_code }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result" VALUE = "{ PaymentCardTypeList_Load_PaymentMethod( l.mod_code, l.meth_code, l.cache:paymentcardtypes ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code" 		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message" 	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof" 	VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ NOT l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00044', l.cache:result ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcardtypes" VALUE = "{ l.cache:paymentcardtypes }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_PaymentMethodRules
|
</MvCOMMENT>

<MvFUNCTION NAME = "PaymentMethodRules_Read" PARAMETERS = "paymentmethodrules var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentmethodrules:mod_code"	VALUE = "{ PaymentMethodRules.d.mod_code }">
	<MvASSIGN NAME = "l.paymentmethodrules:meth_code"	VALUE = "{ PaymentMethodRules.d.meth_code }">
	<MvASSIGN NAME = "l.paymentmethodrules:pctype_id"	VALUE = "{ PaymentMethodRules.d.pctype_id }">
	<MvASSIGN NAME = "l.paymentmethodrules:agrpcount"	VALUE = "{ PaymentMethodRules.d.agrpcount }">
	<MvASSIGN NAME = "l.paymentmethodrules:priority"	VALUE = "{ PaymentMethodRules.d.priority }">
	<MvASSIGN NAME = "l.paymentmethodrules:descrip"		VALUE = "{ PaymentMethodRules.d.descrip }">
	<MvASSIGN NAME = "l.paymentmethodrules:min_total"	VALUE = "{ PaymentMethodRules.d.min_total }">
	<MvASSIGN NAME = "l.paymentmethodrules:max_total"	VALUE = "{ PaymentMethodRules.d.max_total }">
	<MvASSIGN NAME = "l.paymentmethodrules:disable_rc"	VALUE = "{ PaymentMethodRules.d.disable_rc }">

	<MvIF EXPR = "{ len( PaymentMethodRules.d.states ) EQ 0 }">		<MvASSIGN NAME = "l.paymentmethodrules:states"		VALUE = "">
	<MvELSE>														<MvASSIGN NAME = "l.paymentmethodrules:states"		VALUE = "{ miva_array_deserialize( PaymentMethodRules.d.states ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentmethodrules:zips"		VALUE = "{ PaymentMethodRules.d.zips }">

	<MvIF EXPR = "{ len( PaymentMethodRules.d.countries ) EQ 0 }">	<MvASSIGN NAME = "l.paymentmethodrules:countries"	VALUE = "">
	<MvELSE>														<MvASSIGN NAME = "l.paymentmethodrules:countries"	VALUE = "{ miva_array_deserialize( PaymentMethodRules.d.countries ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentmethodrules:exclude_df"	VALUE = "{ PaymentMethodRules.d.exclude_df }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Default" PARAMETERS = "module_code, method_code, pctype_id, paymentmethodrules var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentmethodrules:mod_code"	VALUE = "{ l.module_code }">
	<MvASSIGN NAME = "l.paymentmethodrules:meth_code"	VALUE = "{ l.method_code }">
	<MvASSIGN NAME = "l.paymentmethodrules:pctype_id"	VALUE = "{ l.pctype_id }">
	<MvASSIGN NAME = "l.paymentmethodrules:agrpcount"	VALUE = 0>
	<MvASSIGN NAME = "l.paymentmethodrules:priority"	VALUE = 0>
	<MvASSIGN NAME = "l.paymentmethodrules:descrip"		VALUE = "">
	<MvASSIGN NAME = "l.paymentmethodrules:min_total"	VALUE = 0> 
	<MvASSIGN NAME = "l.paymentmethodrules:max_total"	VALUE = 0>
	<MvASSIGN NAME = "l.paymentmethodrules:disable_rc"	VALUE = 0>
	<MvASSIGN NAME = "l.paymentmethodrules:states"		VALUE = "">
	<MvASSIGN NAME = "l.paymentmethodrules:zips"		VALUE = "">
	<MvASSIGN NAME = "l.paymentmethodrules:countries"	VALUE = "">
	<MvASSIGN NAME = "l.paymentmethodrules:exclude_df"	VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Insert" PARAMETERS = "paymentmethodrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.states"		VALUE = "{ miva_array_serialize( l.paymentmethodrules:states ) }">
	<MvASSIGN NAME = "l.countries"	VALUE = "{ miva_array_serialize( l.paymentmethodrules:countries ) }">

	<MvIF EXPR = "{ ISNULL l.paymentmethodrules:pctype_id }">
		<MvASSIGN NAME = "l.paymentmethodrules:pctype_id"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.paymentmethodrules:disable_rc }">
		<MvASSIGN NAME = "l.paymentmethodrules:disable_rc"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.paymentmethodrules:agrpcount }">
		<MvASSIGN NAME = "l.paymentmethodrules:agrpcount"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.paymentmethodrules:exclude_df }">
		<MvASSIGN NAME = "l.paymentmethodrules:exclude_df"	VALUE = 0>
	</MvIF>
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'PaymentMethodRules
						  ( mod_code, meth_code, pctype_id, agrpcount, priority, descrip,
						  	min_total, max_total, disable_rc, states, zips, countries, exclude_df )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.paymentmethodrules:mod_code, l.paymentmethodrules:meth_code, l.paymentmethodrules:pctype_id, l.paymentmethodrules:agrpcount,
			 		   l.paymentmethodrules:priority, l.paymentmethodrules:descrip, l.paymentmethodrules:min_total, l.paymentmethodrules:max_total,
			 		   l.paymentmethodrules:disable_rc, l.states, l.paymentmethodrules:zips, l.countries, l.paymentmethodrules:exclude_df">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00045', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Update" PARAMETERS = "paymentmethodrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.states"		VALUE = "{ miva_array_serialize( l.paymentmethodrules:states ) }">
	<MvASSIGN NAME = "l.countries"	VALUE = "{ miva_array_serialize( l.paymentmethodrules:countries ) }">

	<MvIF EXPR = "{ ISNULL l.paymentmethodrules:pctype_id }">
		<MvASSIGN NAME = "l.paymentmethodrules:pctype_id" 	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.paymentmethodrules:disable_rc }">
		<MvASSIGN NAME = "l.paymentmethodrules:disable_rc"	VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PaymentMethodRules
						  SET
							priority	= ?,
							descrip		= ?,
							min_total	= ?,
							max_total	= ?,
							disable_rc	= ?,
							states		= ?,
							zips		= ?,
							countries	= ?,
							exclude_df	= ?
						  WHERE
							mod_code	= ? AND
							meth_code	= ? AND
							pctype_id	= ?' }"
			 FIELDS	= "l.paymentmethodrules:priority, l.paymentmethodrules:descrip, l.paymentmethodrules:min_total,
			 		   l.paymentmethodrules:max_total, l.paymentmethodrules:disable_rc, l.states, l.paymentmethodrules:zips, l.countries, 
			 		   l.paymentmethodrules:exclude_df,
					   l.paymentmethodrules:mod_code, l.paymentmethodrules:meth_code, l.paymentmethodrules:pctype_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00046', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Session:cache:paymentmethodrules_load_methodordefault_cached" VALUE = "">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Delete" PARAMETERS = "mod_code, meth_code, pctype_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodRules
						  WHERE
							mod_code	= ? AND
							meth_code	= ? AND
							pctype_id	= ?' }"
			 FIELDS	= "l.mod_code, l.meth_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00047', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Session:cache:paymentmethodrules_load_methodordefault_cached" VALUE = "">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Load_Method" PARAMETERS = "module_code, method_code, pctype_id, paymentmethodrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentMethodRules"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodRules WHERE mod_code = ? AND meth_code = ? AND pctype_id = ?' }"
				FIELDS	= "l.module_code, l.method_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00048', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PaymentMethodRules.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodRules">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00049' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PaymentMethodRules_Read( l.paymentmethodrules ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodRules">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Load_MethodOrDefault" PARAMETERS = "module_code, method_code, pctype_id, paymentmethodrules var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ PaymentMethodRules_Load_Method( l.module_code, l.method_code, l.pctype_id, l.paymentmethodrules ) }">	<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">														<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ PaymentMethodRules_Default( l.module_code, l.method_code, l.pctype_id, l.paymentmethodrules ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Load_MethodOrDefault_Cached" PARAMETERS = "module_code, method_code, pctype_id, paymentmethodrules var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pctype_id" 						VALUE = "{ int( l.pctype_id ) }">

	<MvIF EXPR = "{ l.pctype_id GT 0 }">
		<MvREFERENCEARRAY NAME = "l.cache" 				VARIABLE = "g.Session:cache:paymentmethodrules_load_methodordefault_cached:pctype_ids">
			<MvDIMENSION INDEX = "{ l.pctype_id }">
		</MvREFERENCEARRAY>
	<MvELSE>
		<MvREFERENCEARRAY NAME = "l.cache" 				VARIABLE = "g.Session:cache:paymentmethodrules_load_methodordefault_cached:methods">
			<MvMEMBER NAME = "{ l.module_code }">
			<MvMEMBER NAME = "{ l.method_code }">
		</MvREFERENCEARRAY>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result"				VALUE = "{ PaymentMethodRules_Load_MethodOrDefault( l.module_code, l.method_code, l.pctype_id, l.cache:paymentmethodrules ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentmethodrules"				VALUE = "{ l.cache:paymentmethodrules }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRulesList_Load_All" PARAMETERS = "paymentmethodrules_list var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentMethodRules"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodRules ORDER BY priority DESC' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00050', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentmethodrules_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT PaymentMethodRules.d.EOF }">
		<MvASSIGN NAME = "l.paymentmethodrules_count"	VALUE = "{ l.paymentmethodrules_count + 1 }">
		<MvEVAL EXPR = "{ PaymentMethodRules_Read( l.paymentmethodrules_list[ l.paymentmethodrules_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "PaymentMethodRules" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodRules">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00051', l.paymentmethodrules_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Increment_AvailabilityGroupCount" PARAMETERS = "mod_code, meth_code, pctype_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PaymentMethodRules
			 			  SET
			 			  	agrpcount	= agrpcount + 1
			 			  WHERE
			 			  	mod_code	= ? AND
			 			  	meth_code	= ? AND
			 			  	pctype_id	= ?' }"
			 FIELDS = "l.mod_code, l.meth_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00052', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Decrement_AvailabilityGroupCount" PARAMETERS = "mod_code, meth_code, pctype_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'PaymentMethodRules
			 			  SET
			 			  	agrpcount	= agrpcount - 1
			 			  WHERE
			 			  	mod_code	= ? AND
			 			  	meth_code	= ? AND
			 			  	pctype_id	= ?' }"
			 FIELDS = "l.mod_code, l.meth_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00053', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodRules_Decrement_AvailabilityGroupCount_All" PARAMETERS = "availabilitygroup_id" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.availgroupxpaymentmethod" ARRAY = "l.availgroupxpaymentmethods" COUNT = "{ [ g.Module_Feature_AGR_DB ].AvailGroupXPaymentMethodList_Load( l.availabilitygroup_id, l.availgroupxpaymentmethods ) }">
		<MvIF EXPR = "{ NOT PaymentMethodRules_Decrement_AvailabilityGroupCount( l.availgroupxpaymentmethod:mod_code, l.availgroupxpaymentmethod:meth_code, l.availgroupxpaymentmethod:pctype_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_PaymentMethodExclusions
|
</MvCOMMENT>

<MvFUNCTION NAME = "PaymentMethodExclusion_Read" PARAMETERS = "paymentmethodexclusion var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentmethodexclusion:excludermo"	VALUE = "{ PaymentMethodExclusions.d.excludermo }">
	<MvASSIGN NAME = "l.paymentmethodexclusion:excluderme"	VALUE = "{ PaymentMethodExclusions.d.excluderme }">
	<MvASSIGN NAME = "l.paymentmethodexclusion:excluderti"	VALUE = "{ PaymentMethodExclusions.d.excluderti }">
	<MvASSIGN NAME = "l.paymentmethodexclusion:excludedmo"	VALUE = "{ PaymentMethodExclusions.d.excludedmo }">
	<MvASSIGN NAME = "l.paymentmethodexclusion:excludedme"	VALUE = "{ PaymentMethodExclusions.d.excludedme }">
	<MvASSIGN NAME = "l.paymentmethodexclusion:excludedti"	VALUE = "{ PaymentMethodExclusions.d.excludedti }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusion_Insert" PARAMETERS = "paymentmethodexclusion var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.paymentmethodexclusion:excluderti }">
		<MvASSIGN NAME = "l.paymentmethodexclusion:excluderti" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.paymentmethodexclusion:excludedti }">
		<MvASSIGN NAME = "l.paymentmethodexclusion:excludedti" VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions
						  ( excludermo, excluderme, excluderti, excludedmo, excludedme, excludedti )
						  VALUES
						  ( ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.paymentmethodexclusion:excludermo, l.paymentmethodexclusion:excluderme, l.paymentmethodexclusion:excluderti,
					   l.paymentmethodexclusion:excludedmo, l.paymentmethodexclusion:excludedme, l.paymentmethodexclusion:excludedti">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00054', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusion_Delete" PARAMETERS = "paymentmethodexclusion var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.paymentmethodexclusion:excluderti }">
		<MvASSIGN NAME = "l.paymentmethodexclusion:excluderti" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.paymentmethodexclusion:excludedti }">
		<MvASSIGN NAME = "l.paymentmethodexclusion:excludedti" VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions
						  WHERE
							excludermo	= ? AND
							excluderme	= ? AND
							excluderti	= ? AND
							excludedmo	= ? AND
							excludedme	= ? AND
							excludedti	= ?' }"
			 FIELDS	= "l.paymentmethodexclusion:excludermo, l.paymentmethodexclusion:excluderme, l.paymentmethodexclusion:excluderti,
					   l.paymentmethodexclusion:excludedmo, l.paymentmethodexclusion:excludedme, l.paymentmethodexclusion:excludedti">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00055', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusion_Delete_All_Module" PARAMETERS = "module_code" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions
						  WHERE
							excludermo	= ? OR
							excludedmo	= ?' }"
			 FIELDS	= "l.module_code, l.module_code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00056', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusion_Delete_Method" PARAMETERS = "module_code, method_code, pctype_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions
						  WHERE
							( excludermo = ? AND excluderme = ? AND excluderti = ? ) OR
							( excludedmo = ? AND excludedme = ? AND excludedti = ? )' }"
			 FIELDS	= "l.module_code, l.method_code, l.pctype_id,
					   l.module_code, l.method_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00057', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusionList_Load_Method" PARAMETERS = "module_code, method_code, pctype_id, paymentmethodexclusions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentMethodExclusions"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions
							  WHERE
								( excludermo = ? AND excluderme = ? AND excluderti = ? ) OR
								( excludedmo = ? AND excludedme = ? AND excludedti = ? )' }"
				FIELDS	= "l.module_code, l.method_code, l.pctype_id, l.module_code, l.method_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00058', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentmethodexclusion_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT PaymentMethodExclusions.d.EOF }">
		<MvASSIGN NAME = "l.paymentmethodexclusion_count"	VALUE = "{ l.paymentmethodexclusion_count + 1 }">
		<MvEVAL EXPR = "{ PaymentMethodExclusion_Read( l.paymentmethodexclusions[ l.paymentmethodexclusion_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "PaymentMethodExclusions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodExclusions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00059', l.paymentmethodexclusion_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusion_Load" PARAMETERS = "excludermo, excluderme, excluderti, excludedmo, excludedme, excludedti, paymentmethodexclusion var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentMethodExclusions"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions
							  WHERE
								excludermo	= ? AND
								excluderme	= ? AND
								excluderti	= ? AND
								excludedmo	= ? AND
								excludedme	= ? AND
								excludedti	= ?' }"
				FIELDS	= "l.excludermo, l.excluderme, l.excluderti,
						   l.excludedmo, l.excludedme, l.excludedti">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00060', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ PaymentMethodExclusions.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodExclusions">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00061' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ PaymentMethodExclusion_Read( l.paymentmethodexclusion ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodExclusions">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusionList_Load_Excluder" PARAMETERS = "module_code, method_code, pctype_id, paymentmethodexclusions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentMethodExclusions"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions WHERE excludermo = ? AND excluderme = ? AND excluderti = ?' }"
				FIELDS	= "l.module_code, l.method_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00062', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentmethodexclusion_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT PaymentMethodExclusions.d.EOF }">
		<MvASSIGN NAME = "l.paymentmethodexclusion_count"	VALUE = "{ l.paymentmethodexclusion_count + 1 }">
		<MvEVAL EXPR = "{ PaymentMethodExclusion_Read( l.paymentmethodexclusions[ l.paymentmethodexclusion_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "PaymentMethodExclusions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodExclusions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00063', l.paymentmethodexclusion_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "PaymentMethodExclusionList_Load_Excluded" PARAMETERS = "module_code, method_code, pctype_id, paymentmethodexclusions var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "PaymentMethodExclusions"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'PaymentMethodExclusions WHERE excludedmo = ? AND excludedme = ? AND excludedti = ?' }"
				FIELDS	= "l.module_code, l.method_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00064', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentmethodexclusion_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT PaymentMethodExclusions.d.EOF }">
		<MvASSIGN NAME = "l.paymentmethodexclusion_count"	VALUE = "{ l.paymentmethodexclusion_count + 1 }">
		<MvEVAL EXPR = "{ PaymentMethodExclusion_Read( l.paymentmethodexclusions[ l.paymentmethodexclusion_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "PaymentMethodExclusions" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PaymentMethodExclusions">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00065', l.paymentmethodexclusion_count ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductPaymentRules
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductPaymentRules_Read" PARAMETERS = "productpaymentrules var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productpaymentrules:product_id"	VALUE = "{ ProductPaymentRules.d.product_id }">
	<MvASSIGN NAME = "l.productpaymentrules:limitmeths"	VALUE = "{ ProductPaymentRules.d.limitmeths }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentRules_Default" PARAMETERS = "product_id, productpaymentrules var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productpaymentrules:product_id"	VALUE = "{ l.product_id }">
	<MvASSIGN NAME = "l.productpaymentrules:limitmeths"	VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentRules_Equal_Default" PARAMETERS = "productpaymentrules var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.productpaymentrules:limitmeths NE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentRules_Insert" PARAMETERS = "productpaymentrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductPaymentRules
						  ( product_id, limitmeths )
						  VALUES
						  ( ?, ? )' }"
			 FIELDS	= "l.productpaymentrules:product_id, l.productpaymentrules:limitmeths">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00066', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentRules_Update" PARAMETERS = "productpaymentrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'ProductPaymentRules
						  SET
							limitmeths	= ?
						  WHERE
							product_id = ?' }"
			 FIELDS	= "l.productpaymentrules:limitmeths,
					   l.productpaymentrules:product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00067', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentRules_Delete_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductPaymentRules
						  WHERE
							product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00068', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentRules_Load_Product" PARAMETERS = "product_id, productpaymentrules var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductPaymentRules"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductPaymentRules WHERE product_id = ?' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00069', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductPaymentRules.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductPaymentRules">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00070' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductPaymentRules_Read( l.productpaymentrules ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductPaymentRules">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentRules_Load_ProductOrDefault" PARAMETERS = "product_id, productpaymentrules var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ProductPaymentRules_Load_Product( l.product_id, l.productpaymentrules ) }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">								<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ ProductPaymentRules_Default( l.product_id, l.productpaymentrules ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_ProductPaymentMethods
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductPaymentMethod_Read" PARAMETERS = "productpaymentmethod var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.productpaymentmethod:product_id"	VALUE = "{ ProductPaymentMethods.d.product_id }">
	<MvASSIGN NAME = "l.productpaymentmethod:mod_code"		VALUE = "{ ProductPaymentMethods.d.mod_code }">
	<MvASSIGN NAME = "l.productpaymentmethod:meth_code"		VALUE = "{ ProductPaymentMethods.d.meth_code }">
	<MvASSIGN NAME = "l.productpaymentmethod:pctype_id"		VALUE = "{ ProductPaymentMethods.d.pctype_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentMethod_Insert" PARAMETERS = "productpaymentmethod var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods
						  ( product_id, mod_code, meth_code, pctype_id )
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.productpaymentmethod:product_id, l.productpaymentmethod:mod_code, l.productpaymentmethod:meth_code, l.productpaymentmethod:pctype_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00071', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentMethod_Delete" PARAMETERS = "productpaymentmethod var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.productpaymentmethod:pctype_id }">
		<MvASSIGN NAME = "l.productpaymentmethod:pctype_id" VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods
						  WHERE
							product_id	= ? AND
							mod_code	= ? AND
							meth_code	= ? AND
							pctype_id	= ?' }"
			 FIELDS	= "l.productpaymentmethod:product_id, l.productpaymentmethod:mod_code, l.productpaymentmethod:meth_code, l.productpaymentmethod:pctype_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00072', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentMethod_Delete_All_Product" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods
						  WHERE
							product_id = ?' }"
			 FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00073', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentMethod_Load" PARAMETERS = "product_id, mod_code, meth_code, pctype_id, productpaymentmethod var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductPaymentMethods"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods
							  WHERE
								product_id	= ?	AND
								mod_code	= ?	AND
								meth_code	= ?	AND
								pctype_id	= ?' }"
				FIELDS	= "l.product_id, l.mod_code, l.meth_code, l.pctype_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00150', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ProductPaymentMethods.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductPaymentMethods">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00151' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ProductPaymentMethod_Read( l.productpaymentmethod ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductPaymentMethods">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentMethodList_Load_Product" PARAMETERS = "product_id, productpaymentmethods var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductPaymentMethods"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'ProductPaymentMethods WHERE product_id = ? ORDER BY mod_code, meth_code, pctype_id' }"
				FIELDS	= "l.product_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00074', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productpaymentmethod_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT ProductPaymentMethods.d.EOF }">
		<MvASSIGN NAME = "l.productpaymentmethod_count"	VALUE = "{ l.productpaymentmethod_count + 1 }">
		<MvEVAL EXPR = "{ ProductPaymentMethod_Read( l.productpaymentmethods[ l.productpaymentmethod_count ] ) }">
		
		<MvSKIP NAME = "Merchant" VIEW = "ProductPaymentMethods" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductPaymentMethods">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00075', l.productpaymentmethod_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ProductPaymentMethodList_Load_Product_Cached" PARAMETERS = "product_id, productpaymentmethods var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.product_id" VALUE = "{ int( l.product_id ) }">

	<MvIF EXPR = "{ l.product_id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00076', 'Invalid Product ID' ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:product_payment_methods">
		<MvDIMENSION INDEX = "{ l.product_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result" VALUE = "{ ProductPaymentMethodList_Load_Product( l.product_id, l.cache:productpaymentmethods ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code" 		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message" 	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof" 	VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ NOT l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00077', l.cache:result ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productpaymentmethods" VALUE = "{ l.cache:productpaymentmethods }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_CustomerPaymentCards
|
</MvCOMMENT>

<MvFUNCTION NAME = "CustomerPaymentCard_Read" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcard:id"			VALUE = "{ CustomerPaymentCards.d.id }">
	<MvASSIGN NAME = "l.paymentcard:cust_id"	VALUE = "{ CustomerPaymentCards.d.cust_id }">
	<MvASSIGN NAME = "l.paymentcard:fname"		VALUE = "{ CustomerPaymentCards.d.fname }">
	<MvASSIGN NAME = "l.paymentcard:lname"		VALUE = "{ CustomerPaymentCards.d.lname }">
	<MvASSIGN NAME = "l.paymentcard:exp_month"	VALUE = "{ CustomerPaymentCards.d.exp_month }">
	<MvASSIGN NAME = "l.paymentcard:exp_year"	VALUE = "{ CustomerPaymentCards.d.exp_year }">
	<MvASSIGN NAME = "l.paymentcard:lastfour"	VALUE = "{ CustomerPaymentCards.d.lastfour }">
	<MvASSIGN NAME = "l.paymentcard:addr1"		VALUE = "{ CustomerPaymentCards.d.addr1 }">
	<MvASSIGN NAME = "l.paymentcard:addr2"		VALUE = "{ CustomerPaymentCards.d.addr2 }">
	<MvASSIGN NAME = "l.paymentcard:city"		VALUE = "{ CustomerPaymentCards.d.city }">
	<MvASSIGN NAME = "l.paymentcard:state"		VALUE = "{ CustomerPaymentCards.d.state }">
	<MvASSIGN NAME = "l.paymentcard:zip"		VALUE = "{ CustomerPaymentCards.d.zip }">
	<MvASSIGN NAME = "l.paymentcard:cntry"		VALUE = "{ CustomerPaymentCards.d.cntry }">
	<MvASSIGN NAME = "l.paymentcard:lastused"	VALUE = "{ CustomerPaymentCards.d.lastused }">
	<MvASSIGN NAME = "l.paymentcard:token"		VALUE = "{ CustomerPaymentCards.d.token }">
	<MvASSIGN NAME = "l.paymentcard:type_id"	VALUE = "{ CustomerPaymentCards.d.type_id }">
	<MvASSIGN NAME = "l.paymentcard:refcount"	VALUE = "{ CustomerPaymentCards.d.refcount }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Insert" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerPaymentCard_Insert_LowLevel( l.paymentcard ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.not_paymentcard_module" ARRAY = "l.not_paymentcard_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_paymentcard', l.not_paymentcard_modules ) }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.not_paymentcard_module:module ].Module_Notify_CustomerPaymentCard_Insert( l.not_paymentcard_module, l.paymentcard ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Insert_LowLevel" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcard:id" 			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'CustomerPaymentCards' ) }">

	<MvIF EXPR = "{ ISNULL l.paymentcard:lastused }">
		<MvASSIGN NAME = "l.paymentcard:lastused" 	VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards
						  ( id, cust_id, fname, lname, exp_month, exp_year, lastfour, addr1, addr2, city, state, zip, cntry, lastused, token, type_id, refcount )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.paymentcard:id, l.paymentcard:cust_id, l.paymentcard:fname, l.paymentcard:lname, l.paymentcard:exp_month, l.paymentcard:exp_year, l.paymentcard:lastfour,
			 		   l.paymentcard:addr1, l.paymentcard:addr2, l.paymentcard:city, l.paymentcard:state, l.paymentcard:zip, l.paymentcard:cntry,
			 		   l.paymentcard:lastused, l.paymentcard:token, l.paymentcard:type_id, l.paymentcard:refcount">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00078', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Update_LastUsed" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerPaymentCard_Update_LastUsed_LowLevel( l.paymentcard ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.not_paymentcard_module" ARRAY = "l.not_paymentcard_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_paymentcard', l.not_paymentcard_modules ) }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.not_paymentcard_module:module ].Module_Notify_CustomerPaymentCard_Update( l.not_paymentcard_module, l.paymentcard ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Update_LastUsed_LowLevel" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcard:lastused" VALUE = "{ s.dyn_time_t }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards
						  SET
							lastused	= ?
						  WHERE
							id 			= ?' }"
			 FIELDS	= "l.paymentcard:lastused,
					   l.paymentcard:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00101', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Update" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT CustomerPaymentCard_Update_LowLevel( l.paymentcard ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.not_paymentcard_module" ARRAY = "l.not_paymentcard_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_paymentcard', l.not_paymentcard_modules ) }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.not_paymentcard_module:module ].Module_Notify_CustomerPaymentCard_Update( l.not_paymentcard_module, l.paymentcard ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Update_LowLevel" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards
						  SET
							fname		= ?,
							lname		= ?,
							lastfour	= ?,
							exp_month	= ?,
							exp_year	= ?,
							addr1		= ?,
							addr2		= ?,
							city		= ?,
							state		= ?,
							zip			= ?,
							cntry		= ?,
							type_id		= ?
						  WHERE
							id 			= ?' }"
			 FIELDS	= "l.paymentcard:fname, l.paymentcard:lname, l.paymentcard:lastfour, l.paymentcard:exp_month, l.paymentcard:exp_year, l.paymentcard:addr1,
			 		   l.paymentcard:addr2, l.paymentcard:city, l.paymentcard:state, l.paymentcard:zip, l.paymentcard:cntry, l.paymentcard:type_id,
					   l.paymentcard:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00079', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Increment_ReferenceCount" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards
						  SET
							refcount	= refcount + 1
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00115', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Decrement_ReferenceCount" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards
						  SET
							refcount	= refcount - 1
						  WHERE
							id			= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00116', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.load_return_status"	VALUE = "{ CustomerPaymentCard_Load_LowLevel( l.id, l.paymentcard ) }">

	<MvIF EXPR = "{ NOT CustomerPaymentCard_Delete_LowLevel( l.id ) }"> 
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.load_return_status }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" 				VALUE = "{ MivaPayDeletedToken_Insert( l.paymentcard:token ) }">

	<MvFOREACH ITERATOR = "l.not_paymentcard_module" ARRAY = "l.not_paymentcard_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_paymentcard', l.not_paymentcard_modules ) }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.not_paymentcard_module:module ].Module_Notify_CustomerPaymentCard_Delete( l.not_paymentcard_module, l.paymentcard ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards WHERE id	= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00080', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Delete_All_Customer" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcard_count" VALUE = "{ CustomerPaymentCardList_Load_Customer( l.cust_id, l.paymentcards ) }"> 

	<MvIF EXPR = "{ NOT CustomerPaymentCard_Delete_All_Customer_LowLevel( l.cust_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.paymentcard" ARRAY = "l.paymentcards" COUNT = "{ l.paymentcard_count }">
		<MvASSIGN NAME = "l.null" VALUE = "{ MivaPayDeletedToken_Insert( l.paymentcard:token ) }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.not_paymentcard_module" ARRAY = "l.not_paymentcard_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_paymentcard', l.not_paymentcard_modules ) }">
		<MvFOREACH ITERATOR = "l.paymentcard" ARRAY = "l.paymentcards" COUNT = "{ l.paymentcard_count }"> 
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.not_paymentcard_module:module ].Module_Notify_CustomerPaymentCard_Delete( l.not_paymentcard_module, l.paymentcard ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Delete_All_Customer_LowLevel" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'CustomerPaymentCards
						  WHERE
							cust_id = ?' }"
			 FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00081', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Load_LowLevel" PARAMETERS = "id, paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerPaymentCards"
				QUERY	= "{ 'SELECT 
								cpc.*,
								pct.type,
								pct.mod_code,
								pct.meth_code,
								pct.prefixes,
								pct.lengths,
								pct.cvv
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CustomerPaymentCards cpc, ' $
							  	g.Store_Table_Prefix $ 'PaymentCardTypes pct 
							  WHERE
							  	cpc.id = ? AND
							  	pct.id = cpc.type_id' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00119', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CustomerPaymentCards.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerPaymentCards">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00120' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CustomerPaymentCard_Read( l.paymentcard ) }">

	<MvASSIGN NAME = "l.paymentcard:type" 		VALUE = "{ CustomerPaymentCards.d.type }">
	<MvASSIGN NAME = "l.paymentcard:mod_code" 	VALUE = "{ CustomerPaymentCards.d.mod_code }">
	<MvASSIGN NAME = "l.paymentcard:meth_code" 	VALUE = "{ CustomerPaymentCards.d.meth_code }">
	<MvASSIGN NAME = "l.paymentcard:prefixes" 	VALUE = "{ CustomerPaymentCards.d.prefixes }">
	<MvASSIGN NAME = "l.paymentcard:lengths" 	VALUE = "{ CustomerPaymentCards.d.lengths }">
	<MvASSIGN NAME = "l.paymentcard:cvv"	 	VALUE = "{ CustomerPaymentCards.d.cvv }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerPaymentCards">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Load_ID" PARAMETERS = "id, cust_id, paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerPaymentCards"
				QUERY	= "{ 'SELECT
								cpc.*,
								pct.type,
								pct.mod_code,
								pct.meth_code,
								pct.prefixes,
								pct.lengths,
								pct.cvv
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CustomerPaymentCards cpc, ' $
							  	g.Store_Table_Prefix $ 'PaymentCardTypes pct 
							  WHERE
							  	cpc.id = ? AND
							  	cpc.cust_id = ? AND
							  	pct.id = cpc.type_id' }"
				FIELDS	= "l.id, l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00102', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CustomerPaymentCards.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerPaymentCards">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00103' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CustomerPaymentCard_Read( l.paymentcard ) }">

	<MvASSIGN NAME = "l.paymentcard:type" 		VALUE = "{ CustomerPaymentCards.d.type }">
	<MvASSIGN NAME = "l.paymentcard:mod_code" 	VALUE = "{ CustomerPaymentCards.d.mod_code }">
	<MvASSIGN NAME = "l.paymentcard:meth_code" 	VALUE = "{ CustomerPaymentCards.d.meth_code }">
	<MvASSIGN NAME = "l.paymentcard:prefixes" 	VALUE = "{ CustomerPaymentCards.d.prefixes }">
	<MvASSIGN NAME = "l.paymentcard:lengths" 	VALUE = "{ CustomerPaymentCards.d.lengths }">
	<MvASSIGN NAME = "l.paymentcard:cvv"	 	VALUE = "{ CustomerPaymentCards.d.cvv }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerPaymentCards">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Load_ID_Cached" PARAMETERS = "id, cust_id, paymentcard var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id"								VALUE = "{ int( l.id ) }">

	<MvIF EXPR = "{ l.id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00104' ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache"					VARIABLE = "g.Session:cache:customerpaymentcard_load_id">
		<MvDIMENSION INDEX = "{ l.id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result" 				VALUE = "{ CustomerPaymentCard_Load_ID( l.id, l.cust_id, l.cache:paymentcard ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code"		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message"	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof"		VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE =  "{ [ g.Module_Library_DB ].Error_Load_EOF( l.cache:error_code ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcard"			VALUE = "{ l.cache:paymentcard }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCard_Load_Customer_Token" PARAMETERS = "cust_id, token, paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerPaymentCards"
				QUERY	= "{ 'SELECT
								cpc.*,
								pct.type,
								pct.mod_code,
								pct.meth_code,
								pct.prefixes,
								pct.lengths,
								pct.cvv
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CustomerPaymentCards cpc, ' $
							  	g.Store_Table_Prefix $ 'PaymentCardTypes pct 
							  WHERE
							  	cpc.cust_id	= ?	AND
								cpc.token	= ?' }"
				FIELDS	= "l.cust_id, l.token">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00117', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ CustomerPaymentCards.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerPaymentCards">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00118' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ CustomerPaymentCard_Read( l.paymentcard ) }">

	<MvASSIGN NAME = "l.paymentcard:type" 		VALUE = "{ CustomerPaymentCards.d.type }">
	<MvASSIGN NAME = "l.paymentcard:mod_code" 	VALUE = "{ CustomerPaymentCards.d.mod_code }">
	<MvASSIGN NAME = "l.paymentcard:meth_code" 	VALUE = "{ CustomerPaymentCards.d.meth_code }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerPaymentCards">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCardList_Load_Customer" PARAMETERS = "cust_id, paymentcards var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "CustomerPaymentCards"
				QUERY	= "{ 'SELECT
								cpc.*,
								pct.type,
								pct.mod_code,
								pct.meth_code
							  FROM ' $
							  	g.Store_Table_Prefix $ 'CustomerPaymentCards cpc, ' $
							  	g.Store_Table_Prefix $ 'PaymentCardTypes pct 
							  WHERE
							  	cpc.cust_id		= ? AND
							  	pct.id			= cpc.type_id AND
							  	pct.mod_code	<> \'\' AND
							  	pct.meth_code	<> \'\'
							  ORDER BY cpc.lastused DESC, cpc.id DESC' }"
				FIELDS	= "l.cust_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00082', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcard_count"		VALUE = 0>
	<MvWHILE EXPR = "{ NOT CustomerPaymentCards.d.EOF }">
		<MvASSIGN NAME = "l.paymentcard_count"	VALUE = "{ l.paymentcard_count + 1 }">
		<MvEVAL EXPR = "{ CustomerPaymentCard_Read( l.paymentcards[ l.paymentcard_count ] ) }">

		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "type" 		VALUE = "{ CustomerPaymentCards.d.type }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "mod_code" 	VALUE = "{ CustomerPaymentCards.d.mod_code }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "meth_code" 	VALUE = "{ CustomerPaymentCards.d.meth_code }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "prefixes" 	VALUE = "{ CustomerPaymentCards.d.prefixes }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "lengths"	 	VALUE = "{ CustomerPaymentCards.d.lengths }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "cvv"		 	VALUE = "{ CustomerPaymentCards.d.cvv }">
		
		<MvSKIP NAME = "Merchant" VIEW = "CustomerPaymentCards" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CustomerPaymentCards">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00083', l.paymentcard_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerPaymentCardList_Load_Customer_Cached" PARAMETERS = "cust_id, paymentcards var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.cust_id" VALUE = "{ int( l.cust_id ) }">

	<MvIF EXPR = "{ l.cust_id LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00084', 'Invalid Customer ID' ) }">
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.cache" VARIABLE = "g.Session:cache:product_payment_methods">
		<MvDIMENSION INDEX = "{ l.cust_id }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cache:result }">
		<MvASSIGN NAME = "l.cache:result" VALUE = "{ CustomerPaymentCardList_Load_Customer( l.cust_id, l.cache:paymentcards ) }">

		<MvIF EXPR = "{ NOT l.cache:result }">
			<MvASSIGN NAME = "l.cache:error_code" 		VALUE = "{ g.Error_Code }">
			<MvASSIGN NAME = "l.cache:error_message" 	VALUE = "{ g.Error_Message }">
			<MvASSIGN NAME = "l.cache:error_db_eof" 	VALUE = "{ g.Error_DB_EOF }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.cache:result }">
		<MvIF EXPR = "{ NOT l.cache:error_db_eof }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( l.cache:error_code, l.cache:error_message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00085', l.cache:result ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcards" VALUE = "{ l.cache:paymentcards }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_OrderPaymentCards
|
</MvCOMMENT>

<MvFUNCTION NAME = "OrderPaymentCard_Read" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcard:id"			VALUE = "{ OrderPaymentCards.d.id }">
	<MvASSIGN NAME = "l.paymentcard:fname"		VALUE = "{ OrderPaymentCards.d.fname }">
	<MvASSIGN NAME = "l.paymentcard:lname"		VALUE = "{ OrderPaymentCards.d.lname }">
	<MvASSIGN NAME = "l.paymentcard:exp_month"	VALUE = "{ OrderPaymentCards.d.exp_month }">
	<MvASSIGN NAME = "l.paymentcard:exp_year"	VALUE = "{ OrderPaymentCards.d.exp_year }">
	<MvASSIGN NAME = "l.paymentcard:lastfour"	VALUE = "{ OrderPaymentCards.d.lastfour }">
	<MvASSIGN NAME = "l.paymentcard:addr1"		VALUE = "{ OrderPaymentCards.d.addr1 }">
	<MvASSIGN NAME = "l.paymentcard:addr2"		VALUE = "{ OrderPaymentCards.d.addr2 }">
	<MvASSIGN NAME = "l.paymentcard:city"		VALUE = "{ OrderPaymentCards.d.city }">
	<MvASSIGN NAME = "l.paymentcard:state"		VALUE = "{ OrderPaymentCards.d.state }">
	<MvASSIGN NAME = "l.paymentcard:zip"		VALUE = "{ OrderPaymentCards.d.zip }">
	<MvASSIGN NAME = "l.paymentcard:cntry"		VALUE = "{ OrderPaymentCards.d.cntry }">
	<MvASSIGN NAME = "l.paymentcard:token"		VALUE = "{ OrderPaymentCards.d.token }">
	<MvASSIGN NAME = "l.paymentcard:type_id"	VALUE = "{ OrderPaymentCards.d.type_id }">
	<MvASSIGN NAME = "l.paymentcard:expires"	VALUE = "{ OrderPaymentCards.d.expires }">
	<MvASSIGN NAME = "l.paymentcard:refcount"	VALUE = "{ OrderPaymentCards.d.refcount }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Load_ID" PARAMETERS = "id, order_id, paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderPaymentCards"
				QUERY	= "{ 'SELECT
								opc.*,
								pct.type,
								pct.mod_code,
								pct.meth_code,
								pct.prefixes,
								pct.lengths,
								pct.cvv
							  FROM ' $
							  	g.Store_Table_Prefix $ 'OrderPaymentCards opc, ' $
							  	g.Store_Table_Prefix $ 'OrderPaymentCardXOrder opcxo, ' $
							  	g.Store_Table_Prefix $ 'PaymentCardTypes pct
							  WHERE
								opcxo.card_id	= ?				AND
								opcxo.order_id	= ?				AND
								opc.id			= opcxo.card_id	AND
							  	pct.id			= opc.type_id	AND
							  	opc.expires		> ?' }"
				FIELDS	= "l.id, l.order_id, s.time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00127', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ OrderPaymentCards.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderPaymentCards">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-PAY-DTB-00128' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ OrderPaymentCard_Read( l.paymentcard ) }">

	<MvASSIGN NAME = "l.paymentcard:type"		VALUE = "{ OrderPaymentCards.d.type }">
	<MvASSIGN NAME = "l.paymentcard:mod_code"	VALUE = "{ OrderPaymentCards.d.mod_code }">
	<MvASSIGN NAME = "l.paymentcard:meth_code"	VALUE = "{ OrderPaymentCards.d.meth_code }">
	<MvASSIGN NAME = "l.paymentcard:prefixes"	VALUE = "{ OrderPaymentCards.d.prefixes }">
	<MvASSIGN NAME = "l.paymentcard:lengths"	VALUE = "{ OrderPaymentCards.d.lengths }">
	<MvASSIGN NAME = "l.paymentcard:cvv"		VALUE = "{ OrderPaymentCards.d.cvv }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderPaymentCards">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCardList_Load_Order" PARAMETERS = "order_id, paymentcards var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderPaymentCards"
				QUERY	= "{ 'SELECT
								opc.*,
								pct.type,
								pct.mod_code,
								pct.meth_code
							  FROM ' $
							  	g.Store_Table_Prefix $ 'OrderPaymentCards opc, ' $
							  	g.Store_Table_Prefix $ 'PaymentCardTypes pct,  ' $
							  	g.Store_Table_Prefix $ 'OrderPaymentCardXOrder opcxo 
							  WHERE
							  	opcxo.order_id 	= ?				AND
							  	opc.id			= opcxo.card_id	AND
							  	pct.id			= opc.type_id	AND
							  	opc.expires		> ?' }"
				FIELDS	= "l.order_id, s.time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00129', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcard_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT OrderPaymentCards.d.EOF }">
		<MvEVAL EXPR = "{ OrderPaymentCard_Read( l.paymentcards[ ++l.paymentcard_count ] ) }">

		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "type" 		VALUE = "{ OrderPaymentCards.d.type }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "mod_code" 	VALUE = "{ OrderPaymentCards.d.mod_code }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "meth_code" 	VALUE = "{ OrderPaymentCards.d.meth_code }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "prefixes" 	VALUE = "{ OrderPaymentCards.d.prefixes }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "lengths"	 	VALUE = "{ OrderPaymentCards.d.lengths }">
		<MvASSIGN NAME = "l.paymentcards" INDEX = "{ l.paymentcard_count }" MEMBER = "cvv"		 	VALUE = "{ OrderPaymentCards.d.cvv }">
		
		<MvSKIP NAME = "Merchant" VIEW = "OrderPaymentCards" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderPaymentCards">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00130', l.paymentcard_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCardList_Load_Expired" PARAMETERS = "paymentcards var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderPaymentCards"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'OrderPaymentCards WHERE expires <= ?' }"
				FIELDS	= "s.time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00131', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcard_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT OrderPaymentCards.d.EOF }">
		<MvEVAL EXPR = "{ OrderPaymentCard_Read( l.paymentcards[ ++l.paymentcard_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "OrderPaymentCards" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderPaymentCards">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00132', l.paymentcard_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCardList_Load_Unreferenced" PARAMETERS = "paymentcards var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderPaymentCards"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'OrderPaymentCards WHERE refcount <= 0' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00141', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcard_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT OrderPaymentCards.d.EOF }">
		<MvEVAL EXPR = "{ OrderPaymentCard_Read( l.paymentcards[ ++l.paymentcard_count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "OrderPaymentCards" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderPaymentCards">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'MER-PAY-DTB-00142', l.paymentcard_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Insert" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.paymentcard:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'OrderPaymentCards' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderPaymentCards
							( id, fname, lname, exp_month, exp_year, lastfour, addr1, addr2,
							  city, state, zip, cntry, token, type_id, expires, refcount )
						  VALUES
							( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS = "l.paymentcard:id, l.paymentcard:fname, l.paymentcard:lname, l.paymentcard:exp_month, l.paymentcard:exp_year, l.paymentcard:lastfour,
			 		   l.paymentcard:addr1, l.paymentcard:addr2, l.paymentcard:city, l.paymentcard:state, l.paymentcard:zip, l.paymentcard:cntry,
			 		   l.paymentcard:token, l.paymentcard:type_id, l.paymentcard:expires, l.paymentcard:refcount">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00133', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Delete" PARAMETERS = "paymentcard var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderPaymentCard_Delete_LowLevel( l.paymentcard:id ) OR
					NOT OrderPaymentCardXOrder_Delete_All_PaymentCard( l.paymentcard:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ MivaPayDeletedToken_Insert( l.paymentcard:token ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'OrderPaymentCards WHERE id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00134', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Delete_All_ExpiredOrUnreferenced" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.paymentcard" ARRAY = "l.paymentcards" COUNT = "{ OrderPaymentCardList_Load_Expired( l.paymentcards ) }">
		<MvIF EXPR = "{ NOT OrderPaymentCardXOrder_Delete_All_PaymentCard( l.paymentcard:id ) OR
						NOT OrderPaymentCard_Delete( l.paymentcard ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT OrderPaymentCard_Delete_All_Unreferenced() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Delete_All_Unreferenced" PARAMETERS = "" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'OrderPaymentCards WHERE refcount <= 0' }"
			 FIELDS	= "">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00135', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Detach_All_Order" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.paymentcard" ARRAY = "l.paymentcards" COUNT = "{ OrderPaymentCardList_Load_Order( l.order:id, l.paymentcards ) }">
		<MvIF EXPR = "{ NOT OrderPaymentCardXOrder_Delete( l.paymentcard, l.order ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Detatch_All_Order" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00143', 'Function OrderPaymentCard_Detatch_All_Order has been deprecated' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Increment_RefCount" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'OrderPaymentCards
						  SET
							refcount	= refcount + 1
						  WHERE
						  	id			= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00136', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCard_Decrement_RefCount" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'OrderPaymentCards
						  SET
							refcount	= refcount - 1
						  WHERE
						  	id			= ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00137', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| sNN_OrderPaymentCardXOrder
|
</MvCOMMENT>

<MvFUNCTION NAME = "OrderPaymentCardXOrder_Insert" PARAMETERS = "paymentcard var, order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderPaymentCardXOrder_Insert_LowLevel( l.paymentcard:id, l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT OrderPaymentCard_Increment_RefCount( l.paymentcard:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCardXOrder_Insert_LowLevel" PARAMETERS = "card_id, order_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder
							( card_id, order_id )
						  VALUES
							( ?, ? )' }"
			 FIELDS = "l.card_id, l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00138', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCardXOrder_Delete" PARAMETERS = "paymentcard var, order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT OrderPaymentCardXOrder_Delete_LowLevel( l.paymentcard:id, l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ l.paymentcard:refcount GT 1 }">
		<MvIF EXPR = "{ NOT OrderPaymentCard_Decrement_RefCount( l.paymentcard:id ) }">
		 	<MvFUNCTIONRETURN VALUE = 0>
		 </MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT OrderPaymentCard_Delete_LowLevel( l.paymentcard:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ MivaPayDeletedToken_Insert( l.paymentcard:token ) }">
	</MvIF>	

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCardXOrder_Delete_LowLevel" PARAMETERS = "card_id, order_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder WHERE card_id = ? AND order_id = ?' }"
			 FIELDS	= "l.card_id, l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00139', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "OrderPaymentCardXOrder_Delete_All_PaymentCard" PARAMETERS = "card_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'OrderPaymentCardXOrder WHERE card_id = ?' }"
			 FIELDS	= "l.card_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-PAY-DTB-00140', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

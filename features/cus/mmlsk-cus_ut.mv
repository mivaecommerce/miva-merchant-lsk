<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2022 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CUS-UTL-
| Next Error Code: 13    
|
</MvCOMMENT>

<MvFUNCTION NAME = "Customer_Password_Encrypted" PARAMETERS = "password" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Crypto ].Runtime_Password_Encrypted( l.password ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Customer_Password_Verify" PARAMETERS = "plaintext, encrypted" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Crypto ].Runtime_Password_Verify( l.plaintext, l.encrypted ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Customer_Password_Verify_PBKDF2" PARAMETERS = "plaintext var, encrypted var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Crypto ].Runtime_Password_Verify_PBKDF2( l.plaintext, l.encrypted ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Customer_Password_Verify_PBKDF1" PARAMETERS = "plaintext var, encrypted var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Crypto ].Runtime_Password_Verify_PBKDF1( l.plaintext, l.encrypted ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Customer_Password_Verify_SHA1" PARAMETERS = "plaintext var, encrypted var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Crypto ].Runtime_Password_Verify_SHA1( l.plaintext, l.encrypted ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Customer_Password_Encrypt" PARAMETERS = "plaintext, encrypted var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Crypto ].Runtime_Password_Encrypt( l.plaintext, l.encrypted ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerLogin_Generate_Email" PARAMETERS = "email, login var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.login_prefix"	VALUE = "{ substring( [ g.Module_Library_Utilities ].AlphaNumericOnly( gettoken( l.email, '@', 1 ) ), 1, 10 ) }">
	<MvASSIGN NAME = "l.login"			VALUE = "{ l.login_prefix }">

	<MvFOR COUNT = "100">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_CUS_DB ].Customer_Load_Login( l.login, l.null ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.login"		VALUE = "{ l.login_prefix $ random( 9 ) $ random( 9 ) $ random( 9 ) $ random( 9 ) $ random( 9 ) }">
	</MvFOR>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CUS-UTL-00002', 'Unable to generate unique login after 100 attempts' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerAddress_Compare_Same" PARAMETERS = "customeraddress_1 var, customeraddress_2 var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ tolower( l.customeraddress_1:fname ) NE tolower( l.customeraddress_2:fname )	OR
					tolower( l.customeraddress_1:lname ) NE tolower( l.customeraddress_2:lname )	OR
					tolower( l.customeraddress_1:email ) NE tolower( l.customeraddress_2:email )	OR
					tolower( l.customeraddress_1:comp ) NE tolower( l.customeraddress_2:comp )		OR
					tolower( l.customeraddress_1:phone ) NE tolower( l.customeraddress_2:phone )	OR
					tolower( l.customeraddress_1:fax ) NE tolower( l.customeraddress_2:fax )	 	OR
					tolower( l.customeraddress_1:addr1 ) NE tolower( l.customeraddress_2:addr1 )	OR
					tolower( l.customeraddress_1:addr2 ) NE tolower( l.customeraddress_2:addr2 )	OR
					tolower( l.customeraddress_1:city ) NE tolower( l.customeraddress_2:city )		OR
					tolower( l.customeraddress_1:state ) NE tolower( l.customeraddress_2:state )	OR
					tolower( l.customeraddress_1:zip ) NE tolower( l.customeraddress_2:zip )		OR
					tolower( l.customeraddress_1:cntry ) NE tolower( l.customeraddress_2:cntry ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerAddress_CustomerShipping_Compare_Same" PARAMETERS = "customer var, address var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ tolower( l.customer:ship_fname ) NE tolower( l.address:fname )	OR
					tolower( l.customer:ship_lname ) NE tolower( l.address:lname )	OR
					tolower( l.customer:ship_email ) NE tolower( l.address:email )	OR
					tolower( l.customer:ship_comp ) NE tolower( l.address:comp )	OR
					tolower( l.customer:ship_phone ) NE tolower( l.address:phone )	OR
					tolower( l.customer:ship_fax ) NE tolower( l.address:fax )	 	OR
					tolower( l.customer:ship_addr1 ) NE tolower( l.address:addr1 )	OR
					tolower( l.customer:ship_addr2 ) NE tolower( l.address:addr2 )	OR
					tolower( l.customer:ship_city ) NE tolower( l.address:city )	OR
					tolower( l.customer:ship_state ) NE tolower( l.address:state )	OR
					tolower( l.customer:ship_zip ) NE tolower( l.address:zip )		OR
					tolower( l.customer:ship_cntry ) NE tolower( l.address:cntry ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CustomerAddress_CustomerBilling_Compare_Same" PARAMETERS = "customer var, address var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ tolower( l.customer:bill_fname ) NE tolower( l.address:fname )	OR
					tolower( l.customer:bill_lname ) NE tolower( l.address:lname )	OR
					tolower( l.customer:bill_email ) NE tolower( l.address:email )	OR
					tolower( l.customer:bill_comp ) NE tolower( l.address:comp )	OR
					tolower( l.customer:bill_phone ) NE tolower( l.address:phone )	OR
					tolower( l.customer:bill_fax ) NE tolower( l.address:fax )	 	OR
					tolower( l.customer:bill_addr1 ) NE tolower( l.address:addr1 )	OR
					tolower( l.customer:bill_addr2 ) NE tolower( l.address:addr2 )	OR
					tolower( l.customer:bill_city ) NE tolower( l.address:city )	OR
					tolower( l.customer:bill_state ) NE tolower( l.address:state )	OR
					tolower( l.customer:bill_zip ) NE tolower( l.address:zip )		OR
					tolower( l.customer:bill_cntry ) NE tolower( l.address:cntry ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Customer_Verify_CSRF_Token" PARAMETERS = "token" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_CUS_DB ].CustomerSettings_Load_Cached( l.customersettings ) OR ( NOT l.customersettings:req_token ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.token EQ g.Basket:csrf_token }">
</MvFUNCTION>

<MvCOMMENT>
|
| Shop As Customer
|
</MvCOMMENT>

<MvFUNCTION NAME = "ShopAsCustomer_SetCookies" PARAMETERS = "basket var, shopascustomersession var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Domain:mmcexp }">		<MvASSIGN NAME = "l.expires"		VALUE = "{ s.dyn_time_t + ( g.Domain:mmcexp * 60 ) }">
	<MvELSE>								<MvASSIGN NAME = "l.expires"		VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ g.Domain:mmcsexp }">	<MvASSIGN NAME = "l.secure_expires"	VALUE = "{ s.dyn_time_t + ( g.Domain:mmcsexp * 60 ) }">
	<MvELSE>								<MvASSIGN NAME = "l.secure_expires"	VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Domain:mm_surl }">
		<MvASSIGN NAME = "l.cookie_domain"	VALUE = "{ g.Domain:mmc_sdomn }">
		<MvASSIGN NAME = "l.cookie_path"	VALUE = "{ g.Domain:mmc_spath }">
	<MvELSE>
		<MvASSIGN NAME = "l.cookie_domain"	VALUE = "{ g.Domain:mmc_domn }">
		<MvASSIGN NAME = "l.cookie_path"	VALUE = "{ g.Domain:mmc_path }">
	</MvIF>

	<MvASSIGN NAME = "l.cookie_prefix"		VALUE = "{ 'mm5-' $ [ g.Module_Library_Utilities ].AlphaNumericOnly( g.Store:code ) $ '-' }">
	
	<MvIF EXPR = "{ g.Domain:mmc_output EQ 'https' }">
		<MvIF EXPR = "{ NOT ISNULL g.Domain:mm_surl }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie( g.Output_Cookies,	l.cookie_prefix $ 'basket-id',				l.basket:session_id,					l.cookie_domain, l.expires,	l.cookie_path, 1, g.Domain:mmc_site ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie( g.Output_Cookies,	l.cookie_prefix $ 'shopascustomer-session',	l.shopascustomersession:session_id,		l.cookie_domain, l.expires,	l.cookie_path, 1, g.Domain:mmc_site ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Domain:mmc_output EQ 'http' OR g.Domain:mmc_output EQ 'http_https' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie(		g.Output_Cookies,	l.cookie_prefix $ 'basket-id',				l.basket:session_id,					l.cookie_domain, l.expires,	l.cookie_path, 0, g.Domain:mmc_site ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie(		g.Output_Cookies,	l.cookie_prefix $ 'shopascustomer-session',	l.shopascustomersession:session_id,		l.cookie_domain, l.expires,	l.cookie_path, 0, g.Domain:mmc_site ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].v10_SetCookie(			g.Output_Cookies,	l.cookie_prefix $ 'customer-session',		l.basket:cussess_id,					l.cookie_domain, l.secure_expires,	l.cookie_path, NOT ISNULL g.Domain:mm_surl, g.Domain:mmc_ssite ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].OutputCookies( g.Output_Cookies ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ShopAsCustomer_ClearCookies" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ISNULL g.Domain:mm_surl }">
		<MvASSIGN NAME = "l.cookie_domain"	VALUE = "{ g.Domain:mmc_sdomn }">
		<MvASSIGN NAME = "l.cookie_path"	VALUE = "{ g.Domain:mmc_spath }">
	<MvELSE>
		<MvASSIGN NAME = "l.cookie_domain"	VALUE = "{ g.Domain:mmc_domn }">
		<MvASSIGN NAME = "l.cookie_path"	VALUE = "{ g.Domain:mmc_path }">
	</MvIF>

	<MvASSIGN NAME = "l.cookie_prefix"		VALUE = "{ 'mm5-' $ [ g.Module_Library_Utilities ].AlphaNumericOnly( g.Store:code ) $ '-' }">

	<MvREFERENCEARRAY NAME = "l.shopascustomer_session_id" VARIABLE = "g.Request_Cookies">
		<MvMEMBER NAME = "{ l.cookie_prefix $ 'shopascustomer-session' }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.shopascustomer_session_id }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Clear g.Customer_Session_ID to prevent SetRuntimeCookies from
	| overriding the "deleted" cookie that is set below
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "g.Customer_Session_ID" VALUE = "">

	<MvIF EXPR = "{ g.Domain:mmc_output EQ 'https' }">
		<MvIF EXPR = "{ NOT ISNULL g.Domain:mm_surl }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ClearCookie(	g.Output_Cookies,	l.cookie_prefix $ 'basket-id',				l.cookie_domain, l.cookie_path, 1 ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ClearCookie(	g.Output_Cookies,	l.cookie_prefix $ 'shopascustomer-session',	l.cookie_domain, l.cookie_path, 1 ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Domain:mmc_output EQ 'http' OR g.Domain:mmc_output EQ 'http_https' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ClearCookie(		g.Output_Cookies,	l.cookie_prefix $ 'basket-id',				l.cookie_domain, l.cookie_path, 0 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ClearCookie(		g.Output_Cookies,	l.cookie_prefix $ 'shopascustomer-session',	l.cookie_domain, l.cookie_path, 0 ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].ClearCookie(			g.Output_Cookies,	l.cookie_prefix $ 'customer-session',		l.cookie_domain, l.cookie_path, NOT ISNULL g.Domain:mm_surl ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].OutputCookies( g.Output_Cookies ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ShopAsCustomer_Admin_Session_Active" PARAMETERS = "shopascustomersession var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Feature_Filename_CUS_DB ].ShopAsCustomerSession_Load_AdminSession( g.Session_ID, l.shopascustomersession ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Delete the Shop As Customer session if the current Admin User ID does not
	| match the original Shop As Customer User ID.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.shopascustomersession:user_id NE g.Admin_User_ID }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Feature_Filename_CUS_DB ].ShopAsCustomerSession_Delete_Session( l.shopascustomersession:session_id ) }">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShopAsCustomer_Runtime_Session_Active" PARAMETERS = "shopascustomersession var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ShopAsCustomer_Session_Present( l.shopascustomer_session_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Feature_Filename_CUS_DB ].ShopAsCustomerSession_Load_Session( l.shopascustomer_session_id, l.shopascustomersession ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ ShopAsCustomer_ClearCookies() }">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| Delete the Shop As Customer session if the current basket ID does not
	| match the original Shop As Customer basket ID.  This would be caused
	| by deleting all baskets in the store.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.shopascustomersession:basket_id NE g.Basket:basket_id OR
					l.shopascustomersession:store_id NE g.Store:id }">
		<MvASSIGN NAME = "l.null" VALUE = "{ ShopAsCustomer_ClearCookies() }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Feature_Filename_CUS_DB ].ShopAsCustomerSession_Delete_Session( l.shopascustomersession:session_id ) }">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShopAsCustomer_Session_Present" PARAMETERS = "shopascustomer_session_id var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.cookie" VARIABLE = "g.Request_Cookies">
		<MvMEMBER NAME = "{ 'mm5-' $ [ g.Module_Library_Utilities ].AlphaNumericOnly( g.Store:code ) $ '-shopascustomer-session' }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ISNULL l.cookie }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.shopascustomer_session_id" VALUE = "{ l.cookie }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShopAsCustomer_SessionData_Load" PARAMETERS = "shopascustomersession var, shopascustomerdata var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].User_Load_ID( l.shopascustomersession:user_id, l.user ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CUS-UTL-00010', 'Basket not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Basket_Load_ID( l.shopascustomersession:basket_id, l.basket ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CUS-UTL-00011', 'Basket not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_CUS_DB ].Customer_Load_ID( l.basket:cust_id, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CUS-UTL-00012', 'Customer not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.customer:account_id }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Feature_Filename_CUS_DB ].BusinessAccount_Load( l.customer:account_id, l.businessaccount ) }">
	</MvIF>

	<MvASSIGN NAME = "l.shopascustomerdata"							VALUE = "">
	<MvASSIGN NAME = "l.shopascustomerdata:customer_login"			VALUE = "{ l.customer:login }">
	<MvASSIGN NAME = "l.shopascustomerdata:customer_pw_email"		VALUE = "{ l.customer:pw_email }">
	<MvASSIGN NAME = "l.shopascustomerdata:customer_bill_fname"		VALUE = "{ l.customer:bill_fname }">
	<MvASSIGN NAME = "l.shopascustomerdata:customer_bill_lname"		VALUE = "{ l.customer:bill_lname }">
	<MvASSIGN NAME = "l.shopascustomerdata:customer_bill_comp"		VALUE = "{ l.customer:bill_comp }">
	<MvASSIGN NAME = "l.shopascustomerdata:businessaccount_title"	VALUE = "{ l.businessaccount:title }">
	<MvASSIGN NAME = "l.shopascustomerdata:user_name"				VALUE = "{ l.user:name }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ShopAsCustomer_Render_CustomerPreview" PARAMETERS = "all_settings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT ShopAsCustomer_Runtime_Session_Active( l.shopascustomersession ) }">						<MvFUNCTIONRETURN>
	<MvELSEIF EXPR = "{ NOT ShopAsCustomer_SessionData_Load( l.shopascustomersession, l.shopascustomerdata ) }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminFonts_CSS() }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_JSON_Variables( l.all_settings ) }">

	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside( l.all_settings, 'ajax.js' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside( l.all_settings, 'admin/ui.js' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside( l.all_settings, 'admin/modal.js' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside( l.all_settings, 'admin/mmmenubutton.js' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_Render_Clientside( l.all_settings, 'features/cus/runtimeshopascustomer.js' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Output_Link_CSS( 'features/cus/runtimeshopascustomer.css' ) }">

	<script type="text/javascript">
		(function( obj, eventType, fn )
		{
			if ( obj.addEventListener )
			{
				obj.addEventListener( eventType, fn, false );
			}
			else if ( obj.attachEvent )
			{
				obj.attachEvent( 'on' + eventType, fn );
			}
		})( window, 'load', function()
		{
			var count, event_frame, timeout_id, event_message, shopascustomerdata;

			shopascustomerdata							= new Object();
			shopascustomerdata.customer_login			= "<MvEVAL EXPR = "{ encodejavascriptstring( l.shopascustomerdata:customer_login ) }">";
			shopascustomerdata.customer_pw_email		= "<MvEVAL EXPR = "{ encodejavascriptstring( l.shopascustomerdata:customer_pw_email ) }">";
			shopascustomerdata.customer_bill_fname		= "<MvEVAL EXPR = "{ encodejavascriptstring( l.shopascustomerdata:customer_bill_fname ) }">";
			shopascustomerdata.customer_bill_lname		= "<MvEVAL EXPR = "{ encodejavascriptstring( l.shopascustomerdata:customer_bill_lname ) }">";
			shopascustomerdata.customer_bill_comp		= "<MvEVAL EXPR = "{ encodejavascriptstring( l.shopascustomerdata:customer_bill_comp ) }">";
			shopascustomerdata.businessaccount_title	= "<MvEVAL EXPR = "{ encodejavascriptstring( l.shopascustomerdata:businessaccount_title ) }">";
			shopascustomerdata.user_name				= "<MvEVAL EXPR = "{ encodejavascriptstring( l.shopascustomerdata:user_name ) }">";

			if ( !window.parent )
			{
				new MMRuntimeShopAsCustomer( shopascustomerdata );
			}
			else
			{
				event_message = function( event )
				{
					if ( event.data === 'prevent_shop_as_customer' && event.source === window.parent )
					{
						clearTimeout( timeout_id );
						window.removeEventListener( 'message', event_message );
					}
				}

				window.addEventListener( 'message', event_message );

				//
				// Wait 3 frame cycles for a response.
				//
				// Window.postMessage is dispatched only after all pending execution contexts have
				// finished, so we must wait 1 cycle to send, 1 cycle to receive, and 1 cycle to process
				// once we know the postmessage did not happen in the previous two execution cycles.
				//

				count			= 0;
				event_frame		= function()
				{
					if ( ++count < 3 )
					{
						timeout_id = setTimeout( event_frame, 0 );
						return;
					}

					window.removeEventListener( 'message', event_message );
					new MMRuntimeShopAsCustomer( shopascustomerdata );
				};

				timeout_id = setTimeout( event_frame, 0 );
				window.parent.postMessage( 'showing_shop_as_customer', '*' );
			}
		} );
	</script>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "TaxExempt_Load_Customer_ID" PARAMETERS = "cust_id, tax_exempt var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID_Cached( l.cust_id, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CUS-UTL-00005', 'Customer not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT TaxExempt_Load_Customer( l.customer, l.tax_exempt ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "TaxExempt_Load_Customer" PARAMETERS = "customer var, tax_exempt var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tax_exempt" VALUE = "{ l.customer:tax_exempt }">

	<MvIF EXPR = "{ l.tax_exempt }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.customer:account_id NE 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].BusinessAccount_Load( l.customer:account_id, l.businessaccount ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CUS-UTL-00006', 'Business Account not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ l.businessaccount:tax_exempt }">
			<MvASSIGN NAME = "l.tax_exempt" VALUE = 1>
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.group" ARRAY = "l.groups" COUNT = "{ [ g.Module_Feature_AGR_DB ].AvailabilityGroupList_Load_Customer( l.customer:id, l.groups ) }">
		<MvIF EXPR = "{ l.group:tax_exempt }">
			<MvASSIGN NAME = "l.tax_exempt" VALUE = 1>
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

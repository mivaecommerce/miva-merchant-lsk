<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-CPD-JSON-
| Next Error Code: 31
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_CopyProductRules" PARAMETERS = "copyproductrules var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.copyproductrules:id ) }">,
	"name":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.copyproductrules:name ) }">",
	"product":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:product ) }">,
	"attributes":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:attributes ) }">,
	"categories":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:categories ) }">,
	"invset":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:invset ) }">,
	"invlevel":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:invlevel ) }">,
	"images":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:images ) }">,
	"relprod":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:relprod ) }">,
	"upsale":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:upsale ) }">,
	"availgroup":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:availgroup ) }">,
	"pricegroup":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:pricegroup ) }">,
	"ddownload":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:ddownload ) }">,
	"giftcert":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:giftcert ) }">,
	"subscrip":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:subscrip ) }">,
	"payment":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:payment ) }">,
	"shipping":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:shipping ) }">,
	"kit":			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:kit ) }">,
	"variants":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.copyproductrules:variants ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRules_Load" PARAMETERS = "copyproductrules var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'CopyProductRules_ID', l.copyproductrules_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRules_Load_ID( l.copyproductrules_id, l.copyproductrules ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00001', 'Unable to load copy product rules' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'CopyProductRules_Name', l.copyproductrules_name ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRules_Load_Name( l.copyproductrules_name, l.copyproductrules ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00002', 'Unable to load copy product rules' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00003', 'Unable to load copy product rules: One of CopyProductRules_ID or CopyProductRules_Name must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRulesList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( l.available_filters, 'name', '' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CopyProductRules', 'cpr' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'name', 'name' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'CopyProductRules', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.copyproductrules_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT CopyProductRules.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.copyproductrules_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRules_Read( l.copyproductrules ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.copyproductrules_count ) }">
				<MvEVAL EXPR = "{ JSON_CopyProductRules( l.copyproductrules ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "CopyProductRules" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "CopyProductRules">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRulesModuleList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CopyProductRules_Load( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.assigned"			VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.records"			VALUE = "">
	<MvASSIGN NAME = "l.search_expression"	VALUE = "1 EQ 1">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'module_name', 'l.record:module:name' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o',		'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',		'Sort',			l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o:nonneg', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o',		'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Assigned',		l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features( 'copy_prod', l.modules ) }">
		<MvASSIGN NAME = "l.record"				VALUE = "">
		<MvASSIGN NAME = "l.record:assigned"	VALUE = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRulesXModule_Load( l.copyproductrules:id, l.module:code, l.null ) }">
		<MvREFERENCE NAME = "l.record:module"	VARIABLE = "l.module">

		<MvIF EXPR = "{ ( l.assigned AND l.unassigned ) OR ( l.assigned AND l.record:assigned ) OR ( l.unassigned AND NOT l.record:assigned ) }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert_var( l.records, l.record, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">

	<MvASSIGN NAME = "l.total_count"	VALUE = "{ miva_array_filter_ref( l.records, 1, l.record, l.search_expression, l.filtered_records ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_sort( l.filtered_records, 'CopyProductRulesModule_Sort_Callback', l.sort ) }">
	<MvASSIGN NAME = "l.output_count"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvFOREACH ITERATOR = "l.record" ARRAY = "l.filtered_records" FIRST = "{ l.offset + 1 }" LAST = "{ l.total_count }">
			<MvIF EXPR = "{ ( l.output_count GE l.count ) AND ( l.count NE 0 ) }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				"rules_id":	<MvEVAL EXPR = "{ int( l.copyproductrules:id ) }">,
				"assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.record:assigned ) }">,
				"module":
				{
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.record:module ) }">
				}
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRulesModule_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CopyProductRules_Load( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Module_Code',	l.module_code ) OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'R', 'Assigned',	l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code( l.module_code, l.module ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00005', 'Module does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Features( l.module ) }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module( l.module:id ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00006', 'Module is not installed in the store' ) }">
	<MvELSEIF EXPR = "{ NOT l.module:active }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00007', 'Module not active' ) }">
	<MvELSEIF EXPR = "{ NOT l.module:feature_hash:copy_prod }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00008', 'Module does not implement the \'copy_prod\' feature' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRulesXModule_Load( l.copyproductrules:id, l.module:code, l.null ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRulesXModule_Delete( l.copyproductrules:id, l.module:code ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CPD-JSON-00009', 'Module \'' $ l.module:name $ '\' unassigned from Copy Product Rules \'' $ l.copyproductrules:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRulesXModule_Insert( l.copyproductrules:id, l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CPD-JSON-00010', 'Module \'' $ l.module:name $ '\' assigned to Copy Product Rules \'' $ l.copyproductrules:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRulesCustomFieldList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CopyProductRules_Load( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.assigned"			VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.records"			VALUE = "">
	<MvASSIGN NAME = "l.search_expression"	VALUE = "1 EQ 1">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'module_name',	'l.record:module:name' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'field_code',	'l.record:field_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'field_name',	'l.record:field_name' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o',		'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o',		'Sort',			l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o:nonneg', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o',		'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Assigned',		l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ [ g.Module_Library_Utilities ].ProductCustomFieldList_Load( l.customfields ) }">
		<MvASSIGN NAME = "l.record"				VALUE = "">
		<MvASSIGN NAME = "l.record:assigned"	VALUE = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRulesXCustomField_Load( l.copyproductrules:id, l.customfield:module:code, l.customfield:code, l.null ) }">
		<MvASSIGN NAME = "l.record:field_code"	VALUE = "{ l.customfield:code }">
		<MvASSIGN NAME = "l.record:field_name"	VALUE = "{ l.customfield:name }">
		<MvREFERENCE NAME = "l.record:module"	VARIABLE = "l.customfield:module">

		<MvIF EXPR = "{ ( l.assigned AND l.unassigned ) OR ( l.assigned AND l.record:assigned ) OR ( l.unassigned AND NOT l.record:assigned ) }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert_var( l.records, l.record, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">

	<MvASSIGN NAME = "l.total_count"	VALUE = "{ miva_array_filter_ref( l.records, 1, l.record, l.search_expression, l.filtered_records ) }">
	<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_sort( l.filtered_records, 'CopyProductRulesCustomField_Sort_Callback', l.sort ) }">
	<MvASSIGN NAME = "l.output_count"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvFOREACH ITERATOR = "l.record" ARRAY = "l.filtered_records" FIRST = "{ l.offset + 1 }" LAST = "{ l.total_count }">
			<MvIF EXPR = "{ ( l.output_count GE l.count ) AND ( l.count NE 0 ) }">
				<MvFOREACHSTOP>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.output_count ) }">
				"rules_id":		<MvEVAL EXPR = "{ int( l.copyproductrules:id ) }">,
				"assigned":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.record:assigned ) }">,
				"field_code":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.record:field_code ) }">",
				"field_name":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.record:field_name ) }">",
				"module":
				{
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Module( l.record:module ) }">
				}
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRulesCustomField_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CopyProductRules_Load( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Module_Code',	l.module_code )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 'Field_Code',	l.field_code )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'R', 'Assigned',	l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code( l.module_code, l.module ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00011', 'Module does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Features( l.module ) }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module( l.module:id ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00012', 'Module is not installed in the store' ) }">
	<MvELSEIF EXPR = "{ NOT l.module:active }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00013', 'Module not active' ) }">
	<MvELSEIF EXPR = "{ NOT l.module:feature_hash:fields_prod }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00014', 'Module does not implement the \'fields_prod\' feature' ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRulesXCustomField_Load( l.copyproductrules:id, l.module:code, l.field_code, l.null ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRulesXCustomField_Delete( l.copyproductrules:id, l.module:code, l.field_code ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CPD-JSON-00015', 'Module \'' $ l.module:name $ '\' custom field \'' $ l.field_code $ '\' unassigned from Copy Product Rules \'' $ l.copyproductrules:name $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRulesXCustomField_Insert( l.copyproductrules:id, l.module:code, l.field_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CPD-JSON-00016', 'Module \'' $ l.module:name $ '\' custom field \'' $ l.field_code $ '\' assigned to Copy Product Rules \'' $ l.copyproductrules:name $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRules_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.copyproductrules"				VALUE = "">
	<MvASSIGN NAME = "l.copyproductrules:product"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:attributes"	VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:categories"	VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:invset"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:invlevel"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:images"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:relprod"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:upsale"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:availgroup"	VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:pricegroup"	VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:ddownload"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:giftcert"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:subscrip"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:payment"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:shipping"		VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:kit"			VALUE = 0>
	<MvASSIGN NAME = "l.copyproductrules:variants"		VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'R:100',	'Name',							l.copyproductrules:name )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'CoreProductData',				l.copyproductrules:product )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'Attributes',					l.copyproductrules:attributes )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'CategoryAssignments',			l.copyproductrules:categories )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'InventorySettings',			l.copyproductrules:invset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'InventoryLevel',				l.copyproductrules:invlevel )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'Images',						l.copyproductrules:images )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'RelatedProducts',				l.copyproductrules:relprod )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'Upsale',						l.copyproductrules:upsale )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'AvailabilityGroupAssignments',	l.copyproductrules:availgroup )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'PriceGroupAssignments',		l.copyproductrules:pricegroup )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'DigitalDownloadSettings',		l.copyproductrules:ddownload )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'GiftCertificateSales',			l.copyproductrules:giftcert )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'SubscriptionSettings',			l.copyproductrules:subscrip )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'PaymentRules',					l.copyproductrules:payment )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'ShippingRules',				l.copyproductrules:shipping )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'ProductKits',					l.copyproductrules:kit )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'ProductVariants',				l.copyproductrules:variants ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_UT ].CopyProductRules_Validate( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRules_Load_Name( l.copyproductrules:name, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Name', 'A rule with the name \'' $ l.copyproductrules:name $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRule_Insert( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CPD-JSON-00017', 'Copy product rules for \'' $ l.copyproductrules:name $ '\' created' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_CopyProductRules( l.copyproductrules ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRules_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_CopyProductRules_Load( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text(		'O:100',	'Name',							l.copyproductrules:name )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'CoreProductData',				l.copyproductrules:product )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'Attributes',					l.copyproductrules:attributes )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'CategoryAssignments',			l.copyproductrules:categories )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'InventorySettings',			l.copyproductrules:invset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'InventoryLevel',				l.copyproductrules:invlevel )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'Images',						l.copyproductrules:images )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'RelatedProducts',				l.copyproductrules:relprod )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'Upsale',						l.copyproductrules:upsale )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'AvailabilityGroupAssignments',	l.copyproductrules:availgroup )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'PriceGroupAssignments',		l.copyproductrules:pricegroup )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'DigitalDownloadSettings',		l.copyproductrules:ddownload )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'GiftCertificateSales',			l.copyproductrules:giftcert )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'SubscriptionSettings',			l.copyproductrules:subscrip )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'PaymentRules',					l.copyproductrules:payment )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'ShippingRules',				l.copyproductrules:shipping )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'ProductKits',					l.copyproductrules:kit )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O',		'ProductVariants',				l.copyproductrules:variants ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_UT ].CopyProductRules_Validate( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRules_Load_Name( l.copyproductrules:name, l.existing_copyproductrules ) AND l.copyproductrules:id NE l.existing_copyproductrules:id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Name', 'A rule with the name \'' $ l.copyproductrules:name $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRule_Update( l.copyproductrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CPD-JSON-00019', 'Copy product rules for \'' $ l.copyproductrules:name $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CopyProductRulesList_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Integer_Array( 'R', 'CopyProductRules_IDs', l.copyproductrules_ids, l.copyproductrules_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.copyproductrules_id" ARRAY = "l.copyproductrules_ids" COUNT = "{ l.copyproductrules_id_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRules_Load_ID( l.copyproductrules_id, l.copyproductrules ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_CPD_DB ].CopyProductRules_Delete( l.copyproductrules ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Error( l.apitoken_id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-CPD-JSON-00021', 'Copy product rules for \'' $ l.copyproductrules:name $ '\' deleted' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Copy" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CPDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Text( 'o', 'Product_Copy_Session_ID', l.session_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.session_id }">
		<MvIF EXPR = "{ NOT JSON_Product_Copy_Session_Deserialize( l.session_id, l.session ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.session"					VALUE = "">
		<MvASSIGN NAME = "l.session:id"					VALUE = "{ MakeSessionID() }">
		<MvASSIGN NAME = "l.session:data"				VALUE = "">
		<MvASSIGN NAME = "l.session:copyproductrules"	VALUE = "">
		<MvASSIGN NAME = "l.session:source_product"		VALUE = "">
		<MvASSIGN NAME = "l.session:dest_product"		VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Exists( 'CopyProductRules_ID' ) AND NOT [ g.Module_JSON ].JSON_Input_Exists( 'CopyProductRules_Name' ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_CPD_DB ].CopyProductRules_Default( l.session:copyproductrules ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT JSON_CopyProductRules_Load( l.session:copyproductrules ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'Source_Product_ID', l.source_product_id ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.source_product_id, l.session:source_product ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00023', 'Source product not found' ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Source_Product_Code', l.source_product_code ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.source_product_code, l.session:source_product ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00024', 'Source product not found' ) }">
			</MvIF>
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-CPD-JSON-00025', 'Unable to load product: One of Source_Product_ID or Source_Product_Code must be specified' ) }">
		</MvIF>

		<MvREFERENCE NAME = "l.dest_product"		VARIABLE = "l.session:dest_product">
		<MvASSIGN NAME = "l.dest_product"			VALUE = "">
		<MvASSIGN NAME = "l.dest_product:price" 	VALUE = 0.00>
		<MvASSIGN NAME = "l.dest_product:cost" 		VALUE = 0.00>
		<MvASSIGN NAME = "l.dest_product:weight" 	VALUE = 0.00>
		<MvASSIGN NAME = "l.dest_product:taxable" 	VALUE = 1>
		<MvASSIGN NAME = "l.dest_product:active" 	VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code( 'R',		'Dest_Product_Code',	l.dest_product:code ) OR
						NOT [ g.Module_JSON ].JSON_Input_Text( 'R:100', 'Dest_Product_Name',	l.dest_product:name ) OR
						NOT [ g.Module_JSON ].JSON_Input_Text( 'o:50',	'Dest_Product_SKU',		l.dest_product:sku ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.dest_product:code, l.existing_product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Dest_Product_Code', 'A product with the code \'' $ l.existing_product:code $ '\' already exists' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Insert_LowLevel( l.dest_product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Store_Update_CacheVersion( g.Store ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_URI_UT ].URI_Generate_Product_New( l.dest_product ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Feature_Filename_CPD_UT ].CopyProduct_Copy( l.session:copyproductrules, l.session:source_product, l.session:dest_product, l.session:data ) }">

	<MvIF EXPR = "{ l.result EQ 0 }">
		<MvASSIGN NAME = "l.error_code"		VALUE = "{ g.Error_Code }">
		<MvASSIGN NAME = "l.error_message"	VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Library_DB ].Product_Delete( l.session:dest_product ) }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( l.error_code, l.error_message ) }">
	<MvELSEIF EXPR = "{ l.result EQ -1 }">
		<MvIF EXPR = "{ NOT JSON_Product_Copy_Session_Serialize( l.session ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		{
			"success":					1,
			"completed":				false,
			"product_copy_session_id":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.session:id ) }">"
		}
	<MvELSE>
		{
			"success":		1,
			"completed":	true,
			"data":
			{
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product( l.session:dest_product ) }">
			}
		}
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Product_Copy_Session_Filename" PARAMETERS = "session_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'productcopy_' $ l.session_id $ '.data' }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Copy_Session_Serialize" PARAMETERS = "session var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.filename" VALUE = "{ JSON_Product_Copy_Session_Filename( l.session:id ) }">

	<MvIF EXPR = "{ file_touch( l.filename, 'data' ) LT 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00026', 'Failed to create session: ' $ file_last_error() ) }">
	</MvIF>

	<MvIF EXPR = "{ file_overwrite( l.filename, 'data', miva_array_serialize( l.session ) ) LT 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00027', 'Failed to write to session: ' $ file_last_error() ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Copy_Session_Deserialize" PARAMETERS = "session_id, session var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( NOT isalnum( l.session_id ) ) OR ( len_var( l.session_id ) NE len_var( MakeSessionID() ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00028', 'Invalid session' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filename" VALUE = "{ JSON_Product_Copy_Session_Filename( l.session_id ) }">

	<MvIF EXPR = "{ file_read( l.filename, 'data', l.raw_session ) LT 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00029', 'Session does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ fdelete( l.filename ) }">
	<MvASSIGN NAME = "l.session"	VALUE = "{ miva_array_deserialize( l.raw_session ) }">

	<MvIF EXPR = "{ ( l.session:id NE l.session_id ) OR ( ISNULL l.session:copyproductrules ) OR ( ISNULL l.session:source_product ) OR ( ISNULL l.session:dest_product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-CPD-JSON-00030', 'Corrupted session' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "CopyProductRulesModule_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data EQ 'module_name' }">			<MvFUNCTIONRETURN VALUE = "{ strcasecmp( l.left:module:name, l.right:module:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-module_name' }">	<MvFUNCTIONRETURN VALUE = "{ strcasecmp( l.right:module:name, l.left:module:name ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "CopyProductRulesCustomField_Sort_Callback" PARAMETERS = "left var, right var, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.data EQ 'module_name' }">			<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:module:name, l.right:module:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-module_name' }">	<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:module:name, l.left:module:name ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'field_code' }">		<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:field_code, l.right:field_code ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-field_code' }">		<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:field_code, l.left:field_code ) }">
	<MvELSEIF EXPR = "{ l.data EQ 'field_name' }">		<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:field_name, l.right:field_name ) }">
	<MvELSEIF EXPR = "{ l.data EQ '-field_name' }">		<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:field_name, l.left:field_name ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result NE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ l.result }">
	</MvIF>

	<MvCOMMENT>
	|
	| Break ties using the module code, followed by the field code
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ substring_var( l.data, 1, 1 ) NE '-' }">
		<MvIF EXPR = "{ strcasecmp( l.left:module:code, l.right:module:code ) LT 0 }">		<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.left:module:code, l.right:module:code ) GT 0 }">	<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ strcasecmp( l.left:field_code, l.right:field_code ) LT 0 }">	<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.left:field_code, l.right:field_code ) GT 0 }">	<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ strcasecmp( l.right:module:code, l.left:module:code ) LT 0 }">		<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.right:module:code, l.left:module:code ) GT 0 }">	<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ strcasecmp( l.right:field_code, l.left:field_code ) LT 0 }">	<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.right:field_code, l.left:field_code ) GT 0 }">	<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvINCLUDE FILE = "json/mivascript.mv">

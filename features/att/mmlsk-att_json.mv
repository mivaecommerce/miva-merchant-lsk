<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-ATT-JSN-
| Next Error Code: 45   
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_AttributeTemplate" PARAMETERS = "attributetemplate var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":		<MvEVAL EXPR = "{ int( l.attributetemplate:id ) }">,
	"code":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.attributetemplate:code ) }">",
	"prompt":	"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.attributetemplate:prompt ) }">",
	"refcount":	<MvEVAL EXPR = "{ int( l.attributetemplate:refcount ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplate_Loaders_Present" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'AttributeTemplate_ID' ) }">			<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'Edit_AttributeTemplate' ) }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Exists( 'AttributeTemplate_Code' ) }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplate_Load" PARAMETERS = "attributetemplate var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'AttributeTemplate_ID', l.template_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_ID( l.template_id, l.attributetemplate ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00032', 'Attribute template not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_AttributeTemplate', l.template_code ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_Code( l.template_code, l.attributetemplate ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00044', 'Attribute template not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'AttributeTemplate_Code', l.template_code ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_Code( l.template_code, l.attributetemplate ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00033', 'Attribute template not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00034', 'Unable to load attribute template: One of AttributeTemplate_ID, Edit_AttributeTemplate, or AttributeTemplate_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttribute_Load" PARAMETERS = "attributetemplate var, attribute var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'AttributeTemplateAttribute_ID', l.attribute_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Load_ID( l.attribute_id, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00001', 'Attribute template attribute not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_ID( l.attribute:attemp_id, l.attributetemplate ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00038', 'Attribute template not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_AttributeTemplateAttribute', l.edit_attribute ) }">
		<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.attributetemplate ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Load_Code( l.attributetemplate:id, l.edit_attribute, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00043', 'Attribute template attribute not found' ) }">
		</MvIF>	
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'AttributeTemplateAttribute_Code', l.attribute_code ) }">
		<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.attributetemplate ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Load_Code( l.attributetemplate:id, l.attribute_code, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00035', 'Attribute template attribute not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00036', 'Unable to load attribute template attribute: One of AttributeTemplateAttribute_ID, Edit_AttributeTemplateAttribute or AttributeTemplateAttribute_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateOption_Load" PARAMETERS = "attributetemplate var, attribute var, option var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve_Integer( 'AttributeTemplateOption_ID', l.option_id ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Load_ID( l.option_id, l.option ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00003', 'Attribute template option not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Load_ID( l.option:attmpat_id, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00039', 'Attribute template attribute not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_ID( l.option:attemp_id, l.attributetemplate ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00040', 'Attribute template not found' ) }">
		</MvIF>	
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'Edit_AttributeTemplateOption', l.edit_option ) }">
		<MvIF EXPR = "{ NOT JSON_AttributeTemplateAttribute_Load( l.attributetemplate, l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Load_Code( l.attribute:id, l.edit_option, l.option ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00042', 'Attribute template option not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ [ g.Module_JSON ].JSON_Input_Retrieve( 'AttributeTemplateOption_Code', l.option_code ) }">
		<MvIF EXPR = "{ NOT JSON_AttributeTemplateAttribute_Load( l.attributetemplate, l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Load_Code( l.attribute:id, l.option_code, l.option ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00004', 'Attribute template option not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-ATT-JSN-00037', 'Unable to load attribute template option: One of AttributeTemplateOption_ID, Edit_AttributeTemplateOption or AttributeTemplateOption_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttribute" PARAMETERS = "attribute var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.attribute:id ) }">,
	"attemp_id":	<MvEVAL EXPR = "{ int( l.attribute:attemp_id ) }">,
	"default_id":	<MvEVAL EXPR = "{ int( l.attribute:default_id ) }">,
	"disporder":	<MvEVAL EXPR = "{ int( l.attribute:disporder ) }">,
	"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.attribute:code ) }">",
	"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.attribute:type ) }">",
	"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.attribute:prompt ) }">",
	"price":		<MvEVAL EXPR = "{ l.attribute:price ROUND 2 }">,
	"cost":			<MvEVAL EXPR = "{ l.attribute:cost ROUND 2 }">,
	"weight":		<MvEVAL EXPR = "{ l.attribute:weight ROUND 2 }">,
	"required":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.attribute:required ) }">,
	"inventory":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( l.attribute:inventory ) }">,
	"image":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.attribute:image ) }">"
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateOption" PARAMETERS = "option var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.option:id ) }">,
	"attemp_id":	<MvEVAL EXPR = "{ int( l.option:attemp_id ) }">,
	"attmpat_id":	<MvEVAL EXPR = "{ int( l.option:attmpat_id ) }">,
	"disporder":	<MvEVAL EXPR = "{ int( l.option:disporder ) }">,
	"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:code ) }">",
	"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:prompt ) }">",
	"price":		<MvEVAL EXPR = "{ l.option:price ROUND 2 }">,
	"cost":			<MvEVAL EXPR = "{ l.option:cost ROUND 2 }">,
	"weight":		<MvEVAL EXPR = "{ l.option:weight ROUND 2 }">,
	"image":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:image ) }">"
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.search_query"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'id',			'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( 		l.available_filters, 'code',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR( 		l.available_filters, 'prompt',		'' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters, 'refcount',	'' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'AttributeTemplates', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, l.filter, l.available_filters ) }"> 
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_OrderBy( l.search_query, l.sort, 'id,code,prompt,refcount', 'id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'AttributeTemplates', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-ATT-JSN-00016', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.attributetemplate_count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT AttributeTemplates.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.attributetemplate_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Read( l.attributetemplate ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.attributetemplate_count ) }">
				<MvEVAL EXPR = "{ JSON_AttributeTemplate( l.attributetemplate ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "AttributeTemplates" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AttributeTemplates">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplate_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.attributetemplate"			VALUE = "">
	<MvASSIGN NAME = "l.attributetemplate:refcount"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code( 'R', 	'Code',		l.attributetemplate:code ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text( 'R:50',	'Prompt',	l.attributetemplate:prompt ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_Code( l.attributetemplate:code, l.existing_attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'An Attribute Template with the code \'' $ l.existing_attributetemplate:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Insert( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-ATT-JSN-00041', 'Attribute Template \'' $ l.attributetemplate:code $ '\' created' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_AttributeTemplate( l.attributetemplate ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplate_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_attributetemplate" VALUE = "{ l.attributetemplate }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code( 'O', 	'Code',		l.attributetemplate:code ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text( 'O:50',	'Prompt',	l.attributetemplate:prompt ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ toupper( l.original_attributetemplate:code ) NE toupper( l.attributetemplate:code ) }">
		<MvIF EXPR = "{ [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_Code( l.attributetemplate:code, l.existing_attributetemplate ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'An Attribute Template with the code \'' $ l.existing_attributetemplate:code $ '\' already exists' ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ [ g.Feature_Filename_ATT_DB ].AttributeList_Load_Template( l.attributetemplate:id, l.attributes ) }">
			<MvASSIGN NAME = "l.attribute:code" VALUE = "{ l.attributetemplate:code }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Update( l.attribute ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-ATT-JSN-00018', 'Attributes for Attribute Template \'' $ l.original_attributetemplate:code $ '\' updated' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Update( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-ATT-JSN-00019', 'Attribute Template \'' $ l.original_attributetemplate:code $ '\' updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplate_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.attributetemplate:refcount GT 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-ATT-JSN-00021', 'Attribute Template \'' $ l.attributetemplate:code $ '\' cannot be deleted because it is in use by one or more products' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Delete( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-ATT-JSN-00022', 'Attribute Template \'' $ l.attributetemplate:code $ '\' deleted' ) }">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttributeList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">					<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.search_query"		VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_INTEGER(	l.available_filters,	'attmpat.id',						'id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpat.code',						'attr_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpat.prompt',					'attr_prompt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpat.price',					'attr_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpat.cost',						'attr_cost' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpat.weight',					'attr_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpat.image',					'attr_image' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpop.code',						'opt_code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpop.prompt',					'opt_prompt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpop.price',					'opt_price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpop.cost',						'opt_cost' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpop.weight',					'opt_weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpop.image',					'opt_image' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpat.type',						'type' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpat.code;attmpop.code',		'code' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpat.prompt;attmpop.prompt',	'prompt' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpat.price;attmpop.price',		'price' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpat.cost;attmpop.cost',		'cost' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_DOUBLE(	l.available_filters,	'attmpat.weight;attmpop.weight',	'weight' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_CHAR(		l.available_filters,	'attmpat.image;attmpop.image',		'image' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters,	'attmpat.required',					'required' ) }">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_AvailableFilter_BOOL(		l.available_filters,	'attmpat.inventory',				'inventory' ) }">

	<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT> MMList always sends Offset and Count, but this function does not use them </MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'attmpat.id				AS attmpat_id,
																				 attmpat.attemp_id		AS attmpat_attemp_id,
																				 attmpat.default_id		AS attmpat_default_id,
																				 attmpat.disporder		AS attmpat_disporder,
																				 attmpat.code			AS attmpat_code,
																				 attmpat.type			AS attmpat_type,
																				 attmpat.prompt			AS attmpat_prompt,
																				 attmpat.price			AS attmpat_price,
																				 attmpat.cost			AS attmpat_cost,
																				 attmpat.weight			AS attmpat_weight,
																				 attmpat.required		AS attmpat_required,
																				 attmpat.inventory		AS attmpat_inventory,
																				 attmpat.image			AS attmpat_image,
																				 attmpop.id				AS attmpop_id,
																				 attmpop.attemp_id		AS attmpop_attemp_id,
																				 attmpop.attmpat_id		AS attmpop_attmpat_id,
																				 attmpop.disporder		AS attmpop_disporder,
																				 attmpop.code			AS attmpop_code,
																				 attmpop.prompt			AS attmpop_prompt,
																				 attmpop.price			AS attmpop_price,
																				 attmpop.cost			AS attmpop_cost,
																				 attmpop.weight			AS attmpop_weight,
																				 attmpop.image			AS attmpop_image' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'AttributeTemplateAttrs', 'attmpat' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'attmpat', g.Store_Table_Prefix $ 'AttributeTemplateOptions', 'attmpop', 'attmpop.attmpat_id = attmpat.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'attmpat.attemp_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.attributetemplate:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter_Callback( l.search_query, l.filter, l.available_filters, g.Module_Feature_ATT_JSON, '', 'JSON_AttributeTemplateAttributeList_Load_Query_AdvancedSearchFilter', l.null ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'code:attmpat.code;attmpop.code,type:attmpat.type,prompt:attmpat.prompt;attmpop.prompt,
																		 price:attmpat.price;attmpop.price,cost:attmpat.cost;attmpop.cost,weight:attmpat.weight;attmpop.weight,
																		 image:attmpat.image;attmpop.image,required:attmpat.required,inventory:attmpat.inventory,
																		 attr_code:attmpat.code,attr_prompt:attmpat.prompt,attr_price:attmpat.price,attr_cost:attmpat.cost,attr_weight:attmpat.weight,attr_image:attmpat.image,
																		 opt_code:attmpop.code,opt_prompt:attmpop.prompt,opt_price:attmpop.price,opt_cost:attmpop.cost,opt_weight:attmpop.weight,opt_image:attmpop.image',
																		'attmpat.disporder;attmpop.disporder' ) }">
																			
	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'AttributeTemplateAttrs', l.search_sql, l.search_fields, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-ATT-JSN-00007', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total_count"		VALUE = 0>
	<MvASSIGN NAME = "l.attmpat_count"		VALUE = 0>
	<MvASSIGN NAME = "l.attmpop_count"		VALUE = 0>
	<MvASSIGN NAME = "l.last_attmpat_id"	VALUE = 0>
	<MvASSIGN NAME = "l.last_attmpop_id"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
		<MvWHILE EXPR = "{ NOT AttributeTemplateAttrs.d.EOF }">
			<MvIF EXPR = "{ l.last_attmpat_id NE AttributeTemplateAttrs.d.attmpat_id }">
				<MvIF EXPR = "{ l.attmpop_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					]
				</MvIF>

				<MvIF EXPR = "{ l.attmpat_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.attmpat_count ) }">
				"id":			<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpat_id ) }">,
				"attemp_id":	<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpat_attemp_id ) }">,
				"default_id":	<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpat_default_id ) }">,
				"disporder":	<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpat_disporder ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( AttributeTemplateAttrs.d.attmpat_code ) }">",
				"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( AttributeTemplateAttrs.d.attmpat_type ) }">",
				"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( AttributeTemplateAttrs.d.attmpat_prompt ) }">",
				"price":		<MvEVAL EXPR = "{ AttributeTemplateAttrs.d.attmpat_price ROUND 2 }">,
				"cost":			<MvEVAL EXPR = "{ AttributeTemplateAttrs.d.attmpat_cost ROUND 2 }">,
				"weight":		<MvEVAL EXPR = "{ AttributeTemplateAttrs.d.attmpat_weight ROUND 2 }">,
				"required":		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( AttributeTemplateAttrs.d.attmpat_required ) }">,
				"inventory":	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( AttributeTemplateAttrs.d.attmpat_inventory ) }">,
				"image":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( AttributeTemplateAttrs.d.attmpat_image ) }">"

				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_attmpat_id"	VALUE = "{ AttributeTemplateAttrs.d.attmpat_id }">
				<MvASSIGN NAME = "l.last_attmpop_id"	VALUE = 0>
				<MvASSIGN NAME = "l.attmpop_count"		VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ l.last_attmpop_id NE AttributeTemplateAttrs.d.attmpop_id AND NOT ISNULL AttributeTemplateAttrs.d.attmpop_id }">
				<MvIF EXPR = "{ l.attmpop_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvIF EXPR = "{ NOT l.attmpop_count }">
					, "options":
					[
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.attmpop_count ) }">
				"id":			<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpop_id ) }">,
				"attemp_id":	<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpop_attemp_id ) }">,
				"attmpat_id":	<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpop_attmpat_id ) }">,
				"disporder":	<MvEVAL EXPR = "{ int( AttributeTemplateAttrs.d.attmpop_disporder ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( AttributeTemplateAttrs.d.attmpop_code ) }">",
				"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( AttributeTemplateAttrs.d.attmpop_prompt ) }">",
				"price":		<MvEVAL EXPR = "{ AttributeTemplateAttrs.d.attmpop_price ROUND 2 }">,
				"cost":			<MvEVAL EXPR = "{ AttributeTemplateAttrs.d.attmpop_cost ROUND 2 }">,
				"weight":		<MvEVAL EXPR = "{ AttributeTemplateAttrs.d.attmpop_weight ROUND 2 }">,
				"image":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( AttributeTemplateAttrs.d.attmpop_image ) }">",

				<MvIF EXPR = "{ AttributeTemplateAttrs.d.attmpat_default_id EQ AttributeTemplateAttrs.d.attmpop_id }">
					"default_opt": true
				<MvELSE>
					"default_opt": false
				</MvIF>

				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_attmpop_id"	VALUE = "{ AttributeTemplateAttrs.d.attmpop_id }">
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "AttributeTemplateAttrs" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "AttributeTemplateAttrs">

		<MvIF EXPR = "{ l.attmpop_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			]
		</MvIF>

		<MvIF EXPR = "{ l.attmpat_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvIF>
		],
		"start_offset": 0,
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">
	}

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttributeList_Load_Query_AdvancedSearchFilter" PARAMETERS = "query var, field_count var, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'image' }">
		<MvIF EXPR = "{ l.filter_operator EQ 'NE' }">			<MvASSIGN NAME = "l.operator" 	VALUE = "<>">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'NC' }">		<MvASSIGN NAME = "l.operator" 	VALUE = "NOT LIKE">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'NOTLIKE' }">	<MvASSIGN NAME = "l.operator" 	VALUE = "NOT LIKE">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'NOT_IN' }">	<MvASSIGN NAME = "l.operator"	VALUE = "<>">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'NULL' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( attmpat.image IS NULL OR attmpat.image = \'\' ) AND
																				   ( attmpop.image IS NULL OR attmpop.image = \'\' ) )', l.fields $ '' ) }">

			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSE>
			<MvCOMMENT>
			|
			|	We only care about the negative cases in this override. If we don't match the
			|	above cases, return 0 so that JSON_Search_Filter handles there WHERE for us
			|
			</MvCOMMENT>

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.filter_operator EQ 'NOT_IN' }">
			<MvASSIGN NAME = "l.in_count"			VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.filter_value, ',', l.in_list ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.in_count"			VALUE = 1>
			<MvASSIGN NAME = "l.in_list" INDEX = 1	VALUE = "{ l.filter_value }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">

		<MvFOREACH ITERATOR = "l.in_value" ARRAY = "l.in_list" COUNT = "{ l.in_count }">
			<MvIF EXPR = "{ ISNULL l.in_value }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ l.filter_operator EQ 'NC' }">
				<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_filter_value" VALUE = "{ '%' $ trim( l.in_value ) $ '%' }">
					<MvDIMENSION INDEX = "{ ++l.field_count }">
				</MvASSIGNARRAY>
			<MvELSE>
				<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_filter_value" VALUE = "{ trim( l.in_value ) }">
					<MvDIMENSION INDEX = "{ ++l.field_count }">
				</MvASSIGNARRAY>
			</MvIF>

			<MvASSIGN NAME = "l.fields" VALUE = "">
			<MvASSIGN NAME = "l.null"	VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_filter_value[' $ l.field_count $ ']', -1 ) }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_filter_value[' $ l.field_count $ ']', -1 ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'attmpat.image' )	$ ' ' $ l.operator $ ' ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' OR attmpat.image IS NULL ) AND
																				   ( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'attmpop.image' )	$ ' ' $ l.operator $ ' ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' OR attmpop.image IS NULL ) )', l.fields $ '' ) }">
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'AND' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'price' OR l.filter_name EQ 'cost' OR l.filter_name EQ 'weight' }">
		<MvIF EXPR = "{ l.filter_name EQ 'price' }">			<MvASSIGN NAME = "l.name"		VALUE = "price">
		<MvELSEIF EXPR = "{ l.filter_name EQ 'cost' }">			<MvASSIGN NAME = "l.name"		VALUE = "cost">
		<MvELSE>												<MvASSIGN NAME = "l.name"		VALUE = "weight">
		</MvIF>

		<MvIF EXPR = "{ l.filter_operator EQ 'EQ' }">			<MvASSIGN NAME = "l.operator"	VALUE = "=">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'GT' }">		<MvASSIGN NAME = "l.operator" 	VALUE = ">">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'GE' }">		<MvASSIGN NAME = "l.operator" 	VALUE = ">=">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'LT' }">		<MvASSIGN NAME = "l.operator" 	VALUE = "<">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'LE' }">		<MvASSIGN NAME = "l.operator" 	VALUE = "<=">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'NE' }">		<MvASSIGN NAME = "l.operator" 	VALUE = "<>">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'IN' }">		<MvASSIGN NAME = "l.operator" 	VALUE = "=">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'NOT_IN' }">	<MvASSIGN NAME = "l.operator" 	VALUE = "<>">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'LIKE' }">		<MvASSIGN NAME = "l.operator"	VALUE = "LIKE">
		<MvELSEIF EXPR = "{ l.filter_operator EQ 'NOTLIKE' }">	<MvASSIGN NAME = "l.operator"	VALUE = "NOT LIKE">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ l.filter_operator NE 'IN' AND l.filter_operator NE 'NOT_IN' }">
			<MvASSIGN NAME = "l.in_count"			VALUE = 1>
			<MvASSIGN NAME = "l.in_list" INDEX = 1	VALUE = "{ l.filter_value }">
			<MvASSIGN NAME = "l.subwhere_operator"	VALUE = "AND">
		<MvELSE>
			<MvIF EXPR = "{ l.filter_operator EQ 'IN' }">	<MvASSIGN NAME = "l.subwhere_operator" VALUE = "OR">
			<MvELSE>										<MvASSIGN NAME = "l.subwhere_operator" VALUE = "AND">
			</MvIF>

			<MvASSIGN NAME = "l.in_count"			VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.filter_value, ',', l.in_list ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">

		<MvFOREACH ITERATOR = "l.in_value" ARRAY = "l.in_list" COUNT = "{ l.in_count }">
			<MvIF EXPR = "{ ISNULL l.in_value }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_filter_value" VALUE = "{ trim( l.in_value ) }">
				<MvDIMENSION INDEX = "{ ++l.field_count }">
			</MvASSIGNARRAY>

			<MvASSIGN NAME = "l.fields" VALUE = "">
			<MvASSIGN NAME = "l.null"	VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_filter_value[' $ l.field_count $ ']', -1 ) }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_filter_value[' $ l.field_count $ ']', -1 ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ( attmpat.type = \'checkbox\' OR attmpat.type = \'text\' OR attmpat.type = \'memo\' ) AND attmpat.' $ l.name $ ' ' $ l.operator $ ' ? AND attmpat.' $ l.name $ ' IS NOT NULL ) OR
																				   ( attmpop.' $ l.name $ ' ' $ l.operator $ ' ? AND attmpop.' $ l.name $ ' IS NOT NULL ) )', l.fields $ '' ) }">
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, l.subwhere_operator ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'type' }">
		<MvASSIGN NAME = "l.where"													VALUE = "">

		<MvFOREACH ITERATOR = "l.value" ARRAY = "l.filter_value_list" INDEX = "l.pos" COUNT = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.filter_value, '|', l.filter_value_list ) }">
			<MvASSIGN NAME = "l.value"												VALUE = "{ trim( decodeattribute( l.value ) ) }">

			<MvIF EXPR = "{ l.pos GT 1 }">
				<MvIF EXPR = "{ l.filter_operator EQ 'EQ' }">
					<MvASSIGN NAME = "l.where"										VALUE = "{ l.where $ 'OR ' }">
				<MvELSEIF EXPR = "{ l.filter_operator EQ 'NE' }">
					<MvASSIGN NAME = "l.where"										VALUE = "{ l.where $ 'AND ' }">
				</MvIF>
			</MvIF>

			<MvASSIGNARRAY NAME = "g.attmpatattributeandoptionlist_filter_value"	VALUE = "{ l.value }">
				<MvDIMENSION INDEX = "{ ++l.field_count }">
			</MvASSIGNARRAY>

			<MvIF EXPR = "{ l.filter_operator EQ 'EQ' }">
				<MvASSIGN NAME = "l.where"											VALUE = "{ l.where $ '( attmpat.type = ? ) ' }">
			<MvELSEIF EXPR = "{ l.filter_operator EQ 'NE' }">
				<MvASSIGN NAME = "l.where"											VALUE = "{ l.where $ '( attmpat.type <> ? ) ' }">
			</MvIF>

			<MvASSIGN NAME = "l.null"												VALUE = "{ miva_array_insert( l.fields, 'g.attmpatattributeandoptionlist_filter_value[' $ l.field_count $ ']', -1 ) }">
		</MvFOREACH>

		<MvIF EXPR = "{ NOT ISNULL l.where }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.where $ ' )', l.fields $ '' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttribute_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.template ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.attribute"				VALUE = "">
	<MvASSIGN NAME = "l.attribute:attemp_id"	VALUE = "{ l.template:id }">
	<MvASSIGN NAME = "l.attribute:price"		VALUE = 0.00>
	<MvASSIGN NAME = "l.attribute:cost"			VALUE = 0.00>
	<MvASSIGN NAME = "l.attribute:weight"		VALUE = 0.00>
	<MvASSIGN NAME = "l.attribute:price"		VALUE = 0.00>
	<MvASSIGN NAME = "l.attribute:required"		VALUE = 0>
	<MvASSIGN NAME = "l.attribute:inventory"	VALUE = 0>
	<MvASSIGN NAME = "l.attribute:default_id"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R',		'Code',			l.attribute:code )																										OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R',		'Prompt',		l.attribute:prompt )																									OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'R',		'Type',			l.attribute:type, 'checkbox,radio,text,select,memo,swatch-select', 'checkbox,radio,text,select,memo,swatch-select' )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:254',	'Image',		l.attribute:image )																										OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o',		'Price',		l.attribute:price )																										OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o',		'Cost',			l.attribute:cost )																										OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o',		'Weight',		l.attribute:weight, 10, 2 )																								OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Required',		l.attribute:required )																									OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Inventory',	l.attribute:inventory ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Load_Code( l.template:id, l.attribute:code, l.existing_attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'An attribute with the code \'' $ l.existing_attribute:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Insert( l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_AttributeTemplateAttribute( l.attribute ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttribute_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplateAttribute_Load( l.template, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_attribute" VALUE = "{ l.attribute }">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O', 		'Code',			l.attribute:code )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O', 		'Prompt',		l.attribute:prompt )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:254', 	'Image',		l.attribute:image )			OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o',		'Price',		l.attribute:price )			OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o',		'Cost',			l.attribute:cost )			OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o',		'Weight',		l.attribute:weight, 10, 2 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Required',		l.attribute:required )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Inventory',	l.attribute:inventory )		OR
					NOT [ g.Module_JSON ].JSON_Input_List(		'O',		'Type',			l.attribute:type, 'checkbox,radio,text,select,memo,swatch-select', 'checkbox,radio,text,select,memo,swatch-select' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ strcasecmp( l.original_attribute:code, l.attribute:code ) NE 0 }">
		<MvIF EXPR = "{ [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Load_Code( l.template:id, l.attribute:code, l.existing_attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'An attribute with the code \'' $ l.existing_attribute:code $ '\' already exists' ) }">
		</MvIF>	
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Update( l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.original_attribute:inventory NE l.attribute:inventory }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Update_Inventory( l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-ATT-JSN-00011', 'Attribute Template Attribute \'' $ l.attribute:code $ '\' Inventory updated for Attribute Template' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( ( l.original_attribute:type EQ 'radio' ) OR ( l.original_attribute:type EQ 'select' ) OR ( l.original_attribute:type EQ 'swatch-select' ) ) AND
					( ( l.attribute:type NE 'radio' ) AND ( l.attribute:type NE 'select' ) AND ( l.attribute:type NE 'swatch-select' ) ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Delete_All_Attribute( l.attribute:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttribute_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplateAttribute_Load( l.template, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Delete_Attr( l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">	
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateOption_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplateAttribute_Load( l.template, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.option"						VALUE = "">
	<MvASSIGN NAME = "l.option:attemp_id"			VALUE = "{ l.template:id }">
	<MvASSIGN NAME = "l.option:attmpat_id"			VALUE = "{ l.attribute:id }">
	<MvASSIGN NAME = "l.option:price"				VALUE = 0.00>
	<MvASSIGN NAME = "l.option:cost"				VALUE = 0.00>
	<MvASSIGN NAME = "l.option:weight"				VALUE = 0.00>
	<MvASSIGN NAME = "l.default"					VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 		'Code',		l.option:code )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'R', 		'Prompt',	l.option:prompt )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:254', 	'Image',	l.option:image )			OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o',		'Price',	l.option:price )			OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o',		'Cost',		l.option:cost )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o',		'Weight',	l.option:weight, 10, 2 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o',		'Default',	l.default ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Load_Code( l.attribute:id, l.option:code, l.existing_option ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'An option with the code \'' $ l.existing_option:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Insert( l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.default }">
		<MvASSIGN NAME = "l.attribute:default_id"	VALUE = "{ l.option:id }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Update( l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_AttributeTemplateOption( l.option ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateOption_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplateOption_Load( l.template, l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_option"	VALUE = "{ l.option }">
	<MvASSIGN NAME = "l.default"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'O',		'Code',		l.option:code )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'O',		'Prompt',	l.option:prompt )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o:254',	'Image',	l.option:image )			OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 		'Price',	l.option:price )			OR
					NOT [ g.Module_JSON ].JSON_Input_Currency(	'o', 		'Cost',		l.option:cost )				OR
					NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 		'Weight',	l.option:weight, 10, 2 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 		'Default',	l.default ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ strcasecmp( l.original_option:code, l.option:code ) NE 0 }">
		<MvIF EXPR = "{ [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Load_Code( l.option:attmpat_id, l.option:code, l.existing_option ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Code', 'An option with the code \'' $ l.existing_option:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Update( l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.default }">
		<MvASSIGN NAME = "l.attribute:default_id" VALUE = "{ l.option:id }">

		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Update( l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateOption_Set_Default" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplateOption_Load( l.template, l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'AttributeTemplateOption_Default', l.default ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.default }">
		<MvASSIGN NAME = "l.attribute:default_id" VALUE = "{ l.option:id }">
	<MvELSE>
		<MvASSIGN NAME = "l.attribute:default_id" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttr_Update( l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateOption_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplateOption_Load( l.template, l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateOption_Delete_ID( l.option:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateAttributeList_DisplayOrder_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.AttributeTemplate_ID"			VALUE = "{ int( g.AttributeTemplate_ID ) }">

	<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplate_Load_ID( g.AttributeTemplate_ID, l.template ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.AttributeTemplateAttribute_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.attribute_order:id"					VALUE = "{ int( l.attribute_order:id ) }">
		<MvASSIGN NAME = "l.attribute_order:offset"				VALUE = "{ int( l.attribute_order:offset ) }">
		<MvASSIGN NAME = "l.attribute_order:original_offset"	VALUE = "{ int( l.attribute_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.attribute_order:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'AttributeTemplateAttribute_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.AttributeTemplateOption_Order" INDEX = "l.attr_pos">
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attribute_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_order:id"				VALUE = "{ int( l.option_order:id ) }">
			<MvASSIGN NAME = "l.option_order:offset"			VALUE = "{ int( l.option_order:offset ) }">
			<MvASSIGN NAME = "l.option_order:original_offset"	VALUE = "{ int( l.option_order:original_offset ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.option_order:offset ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'AttributeTemplateOption_Order[' $ l.attr_pos $ '][ ' $ l.option_pos $ ' ]', g.Validation_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.attribute_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.AttributeTemplateAttribute_Order">
		<MvASSIGN NAME = "l.attribute_changes" INDEX = "{ ++l.attribute_count }" VALUE = "{ l.attribute_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.attribute_count }">
		<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttributeList_Update_Offsets( l.template:id, l.attribute_changes ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.AttributeTemplateOption_Order" INDEX = "l.attr_id">
		<MvASSIGN NAME = "l.option_count" VALUE = 0>
		
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attribute_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_changes" INDEX = "{ ++l.option_count }" VALUE = "{ l.option_order }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.option_count }">
			<MvIF EXPR = "{ NOT [ g.Feature_Filename_ATT_DB ].AttributeTemplateAttributeOptionList_Update_Offsets( l.template:id, l.attr_id, l.option_changes ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateProductIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.record:atmp ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_BaseProductIndex_Load_ID( l.filter, l.sort, 'prod.disp_order', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvCOMMENT>
		|
		| No need to join to sNN_Attributes as there are no filter values that would ever reference it
		|
		</MvCOMMENT>
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'Attributes', 'a', 'a.product_id = prod.id AND a.id IN ( SELECT id FROM ' $ g.Store_Table_Prefix $ 'Attributes WHERE attemp_id = ? )', [ g.Module_Library_DB ].SQL_Query_Field( l.record:atmp:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'a.id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_DISTINCT( l.query, 'prod.id' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, 'a.product_id = prod.id AND a.attemp_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.record:atmp:id ) ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateProductList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Sort',		l.sort )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT [ g.Module_JSON ].JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query( l.filter, l.sort, 'prod.disp_order', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'a.id AS assigned' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'Attributes', 'a', 'a.product_id = prod.id AND a.id IN ( SELECT id FROM ' $ g.Store_Table_Prefix $ 'Attributes WHERE attemp_id = ? )', [ g.Module_Library_DB ].SQL_Query_Field( l.attributetemplate:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '0 AS assigned' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'Attributes', 'a', 'a.product_id = prod.id AND a.id IN ( SELECT id FROM ' $ g.Store_Table_Prefix $ 'Attributes WHERE attemp_id = ? )', [ g.Module_Library_DB ].SQL_Query_Field( l.attributetemplate:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'a.id IS NULL', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'Attributes', 'a', 'a.product_id = prod.id AND a.id IN ( SELECT id FROM ' $ g.Store_Table_Prefix $ 'Attributes WHERE attemp_id = ? )', [ g.Module_Library_DB ].SQL_Query_Field( l.attributetemplate:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'a.id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_DISTINCT( l.search_query ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '1 AS assigned' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'a.product_id = prod.id AND a.attemp_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.attributetemplate:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_Clear( l.count_query ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_DISTINCT( l.count_query, 'prod.id' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.count_query, 'a.product_id = prod.id AND a.attemp_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.attributetemplate:id ) ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-ATT-JSN-00025', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count"				VALUE = 0>
	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.product_count ) }">
				 "assigned": <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateProduct_Update_Assigned" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">				<MvFUNCTIONRETURN>																	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ATMP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_AttributeTemplate_Load( l.attributetemplate ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Attribute_Load_Code( l.product:id, l.attributetemplate:code, l.existing_attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'MER-ATT-JSN-00028', 'An attribute with the code \'' $ l.existing_attribute:code $ '\' already exists' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.attribute:product_id" 	VALUE = "{ l.product:id }">
		<MvASSIGN NAME = "l.attribute:default_id" 	VALUE = 0>
		<MvASSIGN NAME = "l.attribute:code" 		VALUE = "{ l.attributetemplate:code }">
		<MvASSIGN NAME = "l.attribute:type" 		VALUE = "template">
		<MvASSIGN NAME = "l.attribute:attemp_id" 	VALUE = "{ l.attributetemplate:id }">
		<MvASSIGN NAME = "l.attribute:prompt" 		VALUE = "{ l.attributetemplate:prompt }">
		<MvASSIGN NAME = "l.attribute:price" 		VALUE = 0>
		<MvASSIGN NAME = "l.attribute:cost" 		VALUE = 0>
		<MvASSIGN NAME = "l.attribute:weight" 		VALUE = 0>
		<MvASSIGN NAME = "l.attribute:required" 	VALUE = 0>
		<MvASSIGN NAME = "l.attribute:inventory"	VALUE = 0>
		<MvASSIGN NAME = "l.attribute:image" 		VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Insert( l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-ATT-JSN-00029', 'Attribute template \'' $ l.attributetemplate:code $ '\' assigned to product \'' $ l.product:code $ '\'' ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.template_unassigned" 	VALUE = 0>

		<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ [ g.Module_Library_DB ].AttributeList_Load_Product( l.product:id, l.attributes ) }">
			<MvIF EXPR = "{ l.attribute:attemp_id EQ l.attributetemplate:id }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Delete( l.attribute ) }">
					<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">	
				</MvIF>

				<MvASSIGN NAME = "l.template_unassigned" VALUE = 1>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ l.template_unassigned }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-ATT-JSN-00030', 'Attribute template \'' $ l.attributetemplate:code $ '\' removed from product \'' $ l.product:code $ '\'' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

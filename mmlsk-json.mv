<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-JSN-
| Next Error Code: 47
|
</MvCOMMENT>

<MvDO FILE = "lib/config.mvc">

<MvCOMMENT>
|
| API requests are indicated by the presence of an X-Miva-API-Authorization: header with a MIVA type
|
</MvCOMMENT>

<MvIF EXPR = "{ NOT ISNULL s.HTTP_X_MIVA_API_AUTHORIZATION }">	<MvASSIGN NAME = "l.null" VALUE = "{ JSON_API() }">
<MvELSE>														<MvASSIGN NAME = "l.null" VALUE = "{ JSON() }">
</MvIF>

<MvEVAL EXPR = "{ [ g.Feature_SCH_UT ].ScheduledTasks_Spawn_AsynchronousTask() }">
<MvEVAL EXPR = "{ [ g.Feature_FEL_UT ].FeatureEngagement_Spawn_AsynchronousTask() }">
<MvEXIT>

<MvFUNCTION NAME = "JSON_Initialize_Session" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.response_content_type"		VALUE = "text/html">

	<MvCOMMENT>
	|
	| Process application/json requests
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ substring_var( s.content_type, 1, 16 ) EQ 'application/json' }">
		<MvEVAL EXPR = "{ JSON_Input_Copy_Parameters() }">

		<MvASSIGN NAME = "l.response_content_type"	VALUE = "application/json">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=utf-8' ) }">

	<MvCOMMENT>
	|
	| Support an alternative Session_Type variable name to avoid false positives
	| due to session identifiers in URLs for automated scanners.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ( ISNULL g.Session_Type ) AND ( NOT ISNULL g.ST ) }">
		<MvASSIGN NAME = "g.Session_Type"	VALUE = "{ g.ST }">
	</MvIF>

	<MvIF EXPR = "{ g.Session_Type EQ 'admin' }">		<MvASSIGN NAME = "l.source" VALUE = "admin">
	<MvELSE>											<MvASSIGN NAME = "l.source" VALUE = "runtime">
	</MvIF>

	<MvIF EXPR = "{ NOT g.Data_Opened }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].OpenDataFiles_Source( g.Merchant_Version, l.source, g.Domain ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "g.Data_Opened"							VALUE = 1>
	<MvASSIGN NAME = "g.UTF8"									VALUE = 1>

	<MvIF EXPR = "{ g.Session_Type EQ 'runtime' }">
		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Validate_RuntimeOrigin() }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].Screen_RejectOrigin() }">
			<MvEXIT>
		</MvIF>

		<MvASSIGN NAME = "g.Session_ID"							VALUE = "{ [ g.Library_Utilities ].DetermineSessionID() }">

		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].ValidatePaths() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL g.Store_Code }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Store_Open( g.Store_Code, g.Store ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "g.Session:json_store_open"		VALUE = 1>

			<MvASSIGN NAME = "g.Store_Module_Currency"			VALUE = "{ g.Store:currncy_mod }">
			<MvASSIGN NAME = "g.Store_Module_Tax"				VALUE = "{ g.Store:tax_mod }">
			<MvASSIGN NAME = "g.Store_Module_UI"				VALUE = "{ g.Store:ui_mod }">

			<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency:module }">
			<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax:module }">
			<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI:module }">

			<MvASSIGN NAME = "g.UTF8"							VALUE = "{ tolower( g.Store:charset ) EQ 'utf-8' }">
			<MvIF EXPR = "{ ISNULL g.Store:charset }">
				<MvASSIGN NAME = "s.miva_charset"				VALUE = "iso-8859-1">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=iso-8859-1' ) }">
			<MvELSE>
				<MvASSIGN NAME = "s.miva_charset"				VALUE = "{ g.Store:charset }">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=' $ g.Store:charset ) }">
			</MvIF>

			<MvIF EXPR = "{ l.response_content_type EQ 'application/json' }">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=utf-8' ) }">
			</MvIF>

			<MvIF EXPR = "{ [ g.Library_Utilities ].OpenBasket( g.Basket ) }">
				<MvIF EXPR = "{ JSON_MaintenanceMode_StoreClosed() }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'store_offline', 'The store is currently in maintenance mode' ) }">
				</MvIF>
			<MvELSE>
				<MvIF EXPR = "{ JSON_MaintenanceMode_DisallowNewBaskets() }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'store_offline', 'The store is currently in maintenance mode' ) }">
				<MvELSEIF EXPR = "{ JSON_MaintenanceMode_StoreClosed() }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'store_offline', 'The store is currently in maintenance mode' ) }">
				</MvIF>

				<MvIF EXPR = "{ g.Store:deferbask }">
					<MvEVAL EXPR = "{ [ g.Library_DB ].Basket_Create_Provisional( g.Basket ) }">
				<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Basket_Create( g.Basket ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>

				<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Feature_STA_DB ].Stats_Inc_Visits() }">
			</MvIF>

			<MvIF EXPR = "{ g.Basket:cust_id EQ 0 }">
				<MvASSIGN NAME = "g.Customer"					VALUE = "">
			<MvELSE>
				<MvIF EXPR = "{ NOT [ g.Feature_CUS_DB ].Customer_Load_ID( g.Basket:cust_id, g.Customer ) }">
					<MvASSIGN NAME = "g.Basket:cust_id"			VALUE = 0>
					<MvASSIGN NAME = "g.Customer"				VALUE = "">

					<MvDO FILE = "{ g.Library_DB }" NAME = "l.null"	VALUE = "{ Basket_Update_Customer_ID( g.Basket ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_URI_UT ].URI_Route_JSON() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ g.Session_Type EQ 'admin' }">
		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Validate_AdminOrigin() }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].Screen_RejectOrigin() }">
			<MvEXIT>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].AdminSession_Initiate( g.Admin_User_ID, g.User ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSEIF EXPR = "{ NOT g.Admin_User_ID }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'session_timeout', 'Your administrative session has timed out.  Please re-login to continue.' ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| The order of these checks is important and must match the corresponding code in admin.mv
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].UserException_ConcurrentSessionLimit_DeleteExpired() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvWHILE EXPR = "{ [ g.Filename_Admin ].SessionValidation_Has_Flags() }">
			<MvIF EXPR = "{ [ g.Filename_Admin ].SessionValidation_Has_Flag_TwoFactorAuthentication() }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'twofactor_required',	'Account requires two-factor authentication' ) }">
			<MvELSEIF EXPR = "{ [ g.Filename_Admin ].SessionValidation_Has_Flag_VerifyBrowser() }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'unauthorized_client',	'Unauthorized client device' ) }">
			<MvELSE>																						<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'access_denied',		'Access Denied' ) }">
			</MvIF>
		</MvWHILE>

		<MvWHILE EXPR = "{ [ g.Filename_Admin ].UserException_Has_Flags() }">
			<MvIF EXPR = "{ [ g.Filename_Admin ].UserException_Has_Flag_AcceptLicense() }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'accept_license',		'User must accept EULA' ) }">
			<MvELSEIF EXPR = "{ [ g.Filename_Admin ].UserException_Has_Flag_HandleSeatLicensing_InvalidUserLicense() }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'invalid_user_license',	'Invalid user license' ) }">
			<MvELSEIF EXPR = "{ [ g.Filename_Admin ].UserException_Has_Flag_HandleSeatLicensing_ReplaceUserLicense() }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'replace_license',		'User license must be replaced' ) }">
			<MvELSEIF EXPR = "{ [ g.Filename_Admin ].UserException_Has_Flag_ForcePasswordChange() }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'password_expired',		'Your password has expired and must be changed.' ) }">
			<MvELSEIF EXPR = "{ [ g.Filename_Admin ].UserException_Has_Flag_ForceTwoFactorAuthentication() }">
				<MvCOMMENT>
				|
				| These functions are used on the forced two-factor enablement screen and must be permitted in this case.
				|
				</MvCOMMENT>

				<MvIF EXPR = "{ ( g.Function EQ 'User_TOTP_Register' )					OR
								( g.Function EQ 'User_YubiCloud_Register' )				OR
								( g.Function EQ 'User_WebAuthn_Register' )				OR
								( g.Function EQ 'User_WebAuthn_Challenge_Generate' )	OR
								( g.Function EQ 'TOTPKey_Generate' )					OR
								( g.Function EQ 'User_TOTPKey_QR' ) }">
					<MvCOMMENT>
					|
					| Note: Breaking out of the loop here bypasses the checks below.  This is intentional because the JSON functions here are
					|		required to proceed to the screens where the other items can be resolved.
					|
					</MvCOMMENT>

					<MvWHILESTOP>
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'twofactor_mandatory', 'This account cannot be used until two-factor authentication is enabled.' ) }">
			<MvELSEIF EXPR = "{ [ g.Filename_Admin ].UserException_Has_Flag_ConcurrentSessionLimit() }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'too_many_sessions',	'Too many administrative sessions.' ) }">
			<MvELSE>																										<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'access_denied',		'Access Denied' ) }">
			</MvIF>
		</MvWHILE>

		<MvASSIGN NAME = "g.Admin_User_Administrator" 			VALUE = "{ g.User:admin }">

		<MvIF EXPR = "{ NOT g.Admin_User_PageLen }">
			<MvASSIGN NAME = "g.Admin_User_PageLen"				VALUE = "{ g.User:page_len }">
		</MvIF>

		<MvASSIGN NAME = "g.Admin_User_ListHover_Active" 		VALUE = "{ g.User:hover_on }">

		<MvIF EXPR = "{ NOT ISNULL g.Store_Code }">
			<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Admin_Open_Store( g.Store_Code, g.Store ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "g.Session:json_store_open"		VALUE = 1>

			<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
			<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
			<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

			<MvASSIGN NAME = "g.UTF8"							VALUE = "{ tolower( g.Store:charset ) EQ 'utf-8' }">
			<MvIF EXPR = "{ ISNULL g.Store:charset }">
				<MvASSIGN NAME = "s.miva_charset"				VALUE = "iso-8859-1">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=iso-8859-1' ) }">
			<MvELSE>
				<MvASSIGN NAME = "s.miva_charset"				VALUE = "{ g.Store:charset }">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=' $ g.Store:charset ) }">
			</MvIF>

			<MvIF EXPR = "{ l.response_content_type EQ 'application/json' }">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=utf-8' ) }">
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ g.Function EQ 'ValidateAdminSession' OR 
						g.Function EQ 'User_ForgotPassword' OR	
						g.Function EQ 'User_ResetPassword' }">
			<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Validate_AdminOrigin() }">
				<MvEVAL EXPR = "{ [ g.Library_Utilities ].Screen_RejectOrigin() }">
				<MvEXIT>
			</MvIF>
		<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Output'			OR
							g.Function EQ 'JavaScriptResource_Output'	OR
							g.Function EQ 'CSSCombinedResource_Output'	OR
							g.Function EQ 'JavaScriptCombinedResource_Output' }">
			<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Validate_RuntimeOrigin() }">
				<MvEVAL EXPR = "{ [ g.Library_Utilities ].Screen_RejectOrigin() }">
				<MvEXIT>
			</MvIF>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Library_Utilities ].ParseCookies( g.Request_Cookies ) }">

		<MvIF EXPR = "{ 'https://' IN s.documenturl }">	<MvASSIGN NAME = "g.Secure"						VALUE = 1>
		<MvELSE>										<MvASSIGN NAME = "g.Secure"						VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "g.baseurl"						VALUE = "{ g.Domain:base_url }">

		<MvIF EXPR = "{ NOT ISNULL g.Domain:base_surl }">
			<MvASSIGN NAME = "g.secure_baseurl"				VALUE = "{ g.Domain:base_surl }">
		<MvELSE>
			<MvASSIGN NAME = "g.secure_baseurl"				VALUE = "{ g.baseurl }">
		</MvIF>

		<MvIF EXPR = "{ g.Secure }">
			<MvASSIGN NAME = "g.Module_Root_Versionless"	VALUE = "{ g.Domain:mod_sroot }">
			<MvASSIGN NAME = "g.basehref"					VALUE = "{ g.secure_baseurl }">
			<MvASSIGN NAME = "g.cookiedomain"				VALUE = "{ g.Domain:mmc_sdomn }">
			<MvASSIGN NAME = "g.cookiepath"					VALUE = "{ g.Domain:mmc_spath }">
			<MvASSIGN NAME = "g.imageroot"					VALUE = "{ g.Domain:img_sroot }">
		<MvELSE>
			<MvASSIGN NAME = "g.Module_Root_Versionless"	VALUE = "{ g.Domain:mod_root }">
			<MvASSIGN NAME = "g.basehref"					VALUE = "{ g.baseurl }">
			<MvASSIGN NAME = "g.cookiedomain"				VALUE = "{ g.Domain:mmc_domn }">
			<MvASSIGN NAME = "g.cookiepath"					VALUE = "{ g.Domain:mmc_path }">
			<MvASSIGN NAME = "g.imageroot"					VALUE = "{ g.Domain:image_root }">
		</MvIF>

		<MvASSIGN NAME = "g.Module_Root"					VALUE = "{ g.Module_Root_Versionless $ g.Version_Path }">
		<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Library_Utilities ].SetPaths() }">

		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].ValidatePaths() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL g.Store_Code }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Store_Open( g.Store_Code, g.Store ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "g.Session:json_store_open"		VALUE = 1>

			<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
			<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
			<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

			<MvASSIGN NAME = "g.UTF8"							VALUE = "{ tolower( g.Store:charset ) EQ 'utf-8' }">
			<MvIF EXPR = "{ ISNULL g.Store:charset }">
				<MvASSIGN NAME = "s.miva_charset"				VALUE = "iso-8859-1">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=iso-8859-1' ) }">
			<MvELSE>
				<MvASSIGN NAME = "s.miva_charset"				VALUE = "{ g.Store:charset }">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=' $ g.Store:charset ) }">
			</MvIF>

			<MvIF EXPR = "{ l.response_content_type EQ 'application/json' }">
				<MvASSIGN NAME = "l.null"						VALUE = "{ miva_output_header( 'Content-Type', l.response_content_type $ '; charset=utf-8' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Feature_URI_UT ].URI_Route_JSON() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ISNULL g.Session:fileupload:error_code }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Session:fileupload:error_code, g.Session:fileupload:error_message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Initialize_Session() }">
		<MvIF EXPR = "{ g.Function EQ 'BranchList_Load_Runtime' }">															<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchList_Load_Runtime_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_Cookie_Clear' }">													<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_Cookie_Set' }">													<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_DateTime_Cookie_Clear' }">										<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_DateTime_Cookie_Set' }">											<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BranchPreviewSuppress_Cookie_Set' }">									<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ShopAsCustomer_Cookie_Set' }">											<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ShopAsCustomer_Cookie_Clear' }">											<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| These admin functions are called from a runtime context and require access
	| control headers to be output prior to Session_Type checking for browser
	| preflight checks.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ s.request_method EQ 'OPTIONS' }">
		<MvIF EXPR = "{ g.Function EQ 'BranchList_Load_Runtime' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchList_Load_Runtime_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_Cookie_Clear' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_Cookie_Set' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_DateTime_Cookie_Clear' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_DateTime_Cookie_Set' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BranchPreviewSuppress_Cookie_Set' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ShopAsCustomer_Cookie_Set' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ShopAsCustomer_Cookie_Clear' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CORS_Preflight_Headers() }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| These are functions that do not require (or care about) a session of any type
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ISNULL g.Session_Type }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">																			<MvFUNCTIONRETURN VALUE = "{ JSON_Module_JSON() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Output' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'CSSCombinedResource_Output' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSCombinedResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Output' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptCombinedResource_Output' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptCombinedResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'ValidateAdminSession' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_ValidateAdminSession() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'User_ForgotPassword' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_User_ForgotPassword() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'User_ResetPassword' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_User_ResetPassword() }">
		</MvIF>

	<MvCOMMENT>
	|
	| These are functions that require a shopping interface session
	|
	</MvCOMMENT>

	<MvELSEIF EXPR = "{ g.Session_Type EQ 'runtime' }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">																			<MvFUNCTIONRETURN VALUE = "{ JSON_Module_JSON() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Output' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'CSSCombinedResource_Output' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSCombinedResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Output' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptCombinedResource_Output' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptCombinedResource_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'PageBuilderPage_Preview' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_PageBuilderPage_Preview() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Theme_Preview' }">																<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_Theme_Preview() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_AttributeAndOptionList_Load_Product' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_AttributeAndOptionList_Load_Product() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_AttributeList_Load_ProductVariant_Possible' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_AttributeList_Load_ProductVariant_Possible() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ProductVariant_Load_Attributes' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_ProductVariant_Load_Attributes() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ProductImageList_Load_Product_Variant' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_ProductImageList_Load_Product_Variant() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BasketItem_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_BasketItem_Insert() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BasketItemList_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_BasketItemList_Insert() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BasketItem_Update' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_BasketItem_Update() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BasketItem_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_BasketItem_Delete() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ShippingMethodList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_ShippingMethodList_Load() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_CalculateCharges' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CalculateCharges() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_Cookie_Clear' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Runtime_Branch_Cookie_Clear() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_Cookie_Set' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Runtime_Branch_Cookie_Set() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_DateTime_Cookie_Clear' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Runtime_Branch_DateTime_Cookie_Clear() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Branch_DateTime_Cookie_Set' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Runtime_Branch_DateTime_Cookie_Set() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BranchPreviewSuppress_Cookie_Set' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Runtime_BranchPreviewSuppress_Cookie_Set() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ShopAsCustomer_Cookie_Set' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Runtime_ShopAsCustomer_Cookie_Set() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ShopAsCustomer_Cookie_Clear' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Runtime_ShopAsCustomer_Cookie_Clear() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_Customer_Login' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_Customer_Login() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_WishList_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_WishList_Insert() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_WishListList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_WishListList_Load_Query() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_WishListItemList_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_WishListItemList_Insert() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_WishListItemList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_WishListItemList_Load_Query() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_WishListItem_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_WishListItem_Delete() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_BasketItemList_MoveToWishlist' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_BasketItemList_MoveToWishlist() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_PaymentMethodList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_PaymentMethodList_Load() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_CategoryList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CategoryList_Load_Query() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ProductList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_ProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_CategoryProductList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_CategoryProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_RelatedProductList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_RelatedProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_InitiateCheckout' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_InitiateCheckout() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_UpdateShipping' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_UpdateShipping() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_UpdateBilling' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_UpdateBilling() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Runtime_ValidateAddress' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Runtime_ValidateAddress() }">
		</MvIF>

	<MvCOMMENT>
	|
	| These are functions that require an admin session
	|
	</MvCOMMENT>

	<MvELSEIF EXPR = "{ g.Session_Type EQ 'admin' }">
		<MvIF EXPR = "{ g.Function EQ 'BranchList_Load_Runtime' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchList_Load_Runtime() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentLabel_Output' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentLabel_Output() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'User_TOTPKey_QR' }">																<MvFUNCTIONRETURN VALUE = "{ JSON_User_TOTPKey_QR() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'ReportData_Graph_Line' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_ReportData_Graph_Line() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'ReportData_Graph_Pie' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_ReportData_Graph_Pie() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'ReportData_Graph_Donut' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_ReportData_Graph_Donut() }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Report_SVG_Line_Chart' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_SVG_Line_Chart() }">
		<MvELSEIF EXPR = "{ g.Session_ID_Verified }">
			<MvASSIGN NAME = "l.letter" VALUE = "{ substring_var( g.Function, 1, 1 ) }">

			<MvIF EXPR = "{ l.letter EQ 'A' }">
				<MvIF EXPR = "{ g.Function EQ 'Address_Validate' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Address_Validate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AdministrativeSessionList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_AdministrativeSessionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AdministrativeSession_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_AdministrativeSession_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AffiliateList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_AffiliateList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AffiliateList_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_AffiliateList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Affiliate_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_Affiliate_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AIGenerateText' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AIGenerateText() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndexList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndexList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndexEmbeddingList_Load' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndexEmbeddingList_Load() }">					
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndex_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndex_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndex_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndex_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndexList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndexList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndex_Rebuild' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndex_Rebuild() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndexRelationalFieldList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndexRelationalFieldList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndexRelationalField_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndexRelationalField_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AISearchIndexRelationalCustomField_Update' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_AISearchIndexRelationalCustomField_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AllOrderPaymentList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_AllOrderPaymentList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APITokenList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_APITokenList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APIToken_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_APIToken_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APIToken_Update' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_APIToken_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APIToken_Update_Enabled' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_APIToken_Update_Enabled() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APITokenList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_APITokenList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APIToken_Generate_SigningKey' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_APIToken_Generate_SigningKey() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APIToken_Generate_Token' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_APIToken_Generate_Token() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APITokenFunctionList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_APITokenFunctionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APITokenFunction_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_APITokenFunction_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APITokenFunction_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_APITokenFunction_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APITokenGroupList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_APITokenGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'APITokenGroup_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_APITokenGroup_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeAndOptionList_Load_Product' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeAndOptionList_Load_Product() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeList_DisplayOrder_Update' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeList_Load_CodeMatch' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeList_Load_CodeMatch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeList_Load_Inventory' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeList_Load_Inventory() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Attribute_Load_Code' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Load_Code() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Attribute_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Attribute_Update' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Attribute_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Attribute_CopyTemplate' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_CopyTemplate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Attribute_CopyLinkedTemplate' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_CopyLinkedTemplate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateAttributeList_DisplayOrder_Update' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttributeList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateAttributeList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttributeList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateAttribute_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateAttribute_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateAttribute_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateOptionList_Load_Attribute' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeTemplateOptionList_Load_Attribute() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateOption_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateOption_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateOption_Set_Default' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Set_Default() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateOption_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplate_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplate_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplate_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateProductIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateProductList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AttributeTemplateProduct_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AuthorizationFailureList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_AuthorizationFailureList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AuthorizationFailureList_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_AuthorizationFailureList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AuthorizationFailure_Blacklist_IPs' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_AuthorizationFailure_Blacklist_IPs() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AuthorizationBlacklistList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_AuthorizationBlacklistList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AuthorizationBlacklist_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_AuthorizationBlacklist_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AuthorizationBlacklist_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_AuthorizationBlacklist_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AuthorizationBlacklistList_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_AuthorizationBlacklistList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCollectionIndex_Load_ID' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCollectionIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCollectionList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCollectionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCollection_Add' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCollection_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCollection_Remove' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCollection_Remove() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCategoryIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCategoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCategoryList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCategoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCategory_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCategory_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCustomerList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCustomerList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCustomerIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCustomerIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupCustomer_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCustomer_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupBusinessAccountList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupBusinessAccountList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupBusinessAccountIndex_Load_ID' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupBusinessAccountIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupBusinessAccount_Update_Assigned' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupBusinessAccount_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupShippingMethodList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupShippingMethodList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupShippingMethod_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupShippingMethod_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupPaymentMethodList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupPaymentMethodList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupPaymentMethod_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupPaymentMethod_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupProductIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupProductList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroupProduct_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroup_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroup_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroup_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroup_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'AvailabilityGroup_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroup_Update() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'B' }">
				<MvIF EXPR = "{ g.Function EQ 'BatchList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_BatchList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BatchReportList_Load_Orders' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_BatchReportList_Load_Orders() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BatchReport_Run' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_BatchReport_Run() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Batch_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Batch_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BookmarkIndex_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_BookmarkIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BookmarkList_DisplayOrder_Update' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_BookmarkList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BookmarkList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_BookmarkList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Bookmark_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Bookmark_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BookmarkList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_BookmarkList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Bookmark_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Bookmark_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Bookmark_Update' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Bookmark_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BoxCustomFieldList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_BoxCustomFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BoxList_Load_Enabled' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_BoxList_Load_Enabled() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BoxList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_BoxList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BoxPackingModule_BoxFieldList_Load' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_BoxPackingModule_BoxFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Box_Delete' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_Box_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Box_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_Box_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Box_Update' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_Box_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_Cookie_Clear' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Cookie_Clear() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_Cookie_Set' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Cookie_Set() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_Copy' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Copy() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_Create' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Create() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_SetPrimary' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_SetPrimary() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Branch_Load_Active' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Load_Active() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchTag_Cookie_Get' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchTag_Cookie_Get() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchTag_Cookie_Set' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchTag_Cookie_Set() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchTemplateVersionList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchTemplateVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchCSSResourceVersionList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchCSSResourceVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchJavaScriptResourceVersionList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchJavaScriptResourceVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchPageVersionList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchPageVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchItemVersionList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchItemVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BranchPropertyVersionList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchPropertyVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccount_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccount_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccountList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccountIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccount_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccount_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccount_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccount_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccountList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccountCustomerList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountCustomerList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccountCustomerIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountCustomerIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'BusinessAccountCustomer_Update_Assigned' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountCustomer_Update_Assigned() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'C' }">
				<MvIF EXPR = "{ g.Function EQ 'CacheSettingList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_CacheSettingList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CacheSetting_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_CacheSetting_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CacheSetting_Update' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_CacheSetting_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CacheSetting_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_CacheSetting_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Cache_Flush' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_Cache_Flush() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CatalogDigitalDownloadList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_CatalogDigitalDownloadList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryAvailabilityGroupList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryAvailabilityGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryCustomFieldList_Load' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryCustomFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryIndex_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryList_BatchSort' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryList_BatchSort() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryList_DisplayOrder_Update' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryList_Load_Parent' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryList_Load_Parent() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryCollectionIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryCollectionIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryCollectionList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryCollectionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryCollection_Add' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryCollection_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryCollection_Remove' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryCollection_Remove() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryProductIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryProductList_BatchSort' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProductList_BatchSort() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryProductList_DisplayOrder_Update' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProductList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryProductList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryProduct_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryProductList_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProductList_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryPriceGroupList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryPriceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryURIList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURIList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryURI_Regenerate' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURI_Regenerate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryURI_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURI_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryURI_Update' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURI_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryURIList_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURIList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryURI_Redirect' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURI_Redirect() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChildCategoryIndex_Load_ID' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ChildCategoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChildCategoryList_DisplayOrder_Update' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ChildCategoryList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChildCategoryList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ChildCategoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChildCategory_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ChildCategory_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Category_Load_Code' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Category_Load_Code() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Category_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Category_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Category_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Category_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Category_Update' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Category_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CollectionList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_CollectionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CollectionIndex_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_CollectionIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Collection_Rebuild' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_Collection_Rebuild() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Collection_Metrics' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_Collection_Metrics() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Collection_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_Collection_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Collection_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_Collection_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CollectionProductIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_CollectionProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CollectionProductList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_CollectionProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CollectionProduct_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_CollectionProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CollectionProduct_Restore_Automatic' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_COL_JSON ].JSON_CollectionProduct_Restore_Automatic() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CountryList_Load' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_CountryList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponCustomerList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponCustomerList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponCustomerIndex_Load_ID' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponCustomerIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponCustomer_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponCustomer_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponBusinessAccountList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponBusinessAccountList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponBusinessAccountIndex_Load_ID' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponBusinessAccountIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponBusinessAccount_Update_Assigned' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponBusinessAccount_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponPriceGroupList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponPriceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponPriceGroup_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponPriceGroup_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Coupon_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CouponList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Coupon_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Coupon_Reset_Usage' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Reset_Usage() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Coupon_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Coupon_Generate' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Generate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Coupon_Generate_Customers' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Generate_Customers() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAvailabilityGroupList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAvailabilityGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerCustomFieldList_Load' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerCustomFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerIndex_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerLoginList_Load_Match' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerLoginList_Load_Match() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Customer_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Customer_Load_ID' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Customer_Load_Login' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Load_Login() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Customer_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Customer_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerCreditHistoryList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerCreditHistoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerCreditHistory_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerCreditHistory_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerCreditHistory_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerCreditHistory_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerPriceGroupList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerPriceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddressList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddressList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddressList_Load_Customer' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddressList_Load_Customer() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddress_Load_Address' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Load_Address() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddress_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddress_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddress_SetAsDefault' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_SetAsDefault() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddress_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddressList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddressList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerAddress_Update_Residential' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Update_Residential() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerPaymentCardList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCardList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerPaymentCard_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCard_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerPaymentCard_Register' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCard_Register() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerPaymentCard_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCard_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerPaymentCardList_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCardList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerPaymentCard_GenerateMivaPayRequest' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCard_GenerateMivaPayRequest() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerSearchLogEntryList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SEA_JSON ].JSON_CustomerSearchLogEntryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CustomerSubscriptionList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_CustomerSubscriptionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryFacetRulesList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_CategoryFacetRulesList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryFacetRules_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_CategoryFacetRules_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryFacetRulesList_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_CategoryFacetRulesList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryFacetList_Load_Priority' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_CategoryFacetList_Load_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CategoryFacetList_Update_Priority' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_CategoryFacetList_Update_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Changeset_Create' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Changeset_Create() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetList_Merge' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetList_Merge() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetChangeList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetChangeList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetItemVersionList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetItemVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetTemplateVersionList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetTemplateVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetCSSResourceVersionList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetCSSResourceVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetJavaScriptResourceVersionList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetJavaScriptResourceVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ChangesetPropertyVersionList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetPropertyVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResourceList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResourceList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Update' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Update_Global' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Update_Global() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Update_Active' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Update_Active() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Update_Attributes' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Update_Attributes() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Generate_SRI' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Generate_SRI() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Clear_SRI' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Clear_SRI() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResourceList_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResourceList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Upload' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Upload() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_File_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_File_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_File_Load' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_File_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_TemplateVersion_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_TemplateVersion_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_TemplateVersion_Load' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_TemplateVersion_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_TemplateVersionList_Load_Template' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_TemplateVersionList_Load_Template() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_LinkedPageList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_LinkedPageList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_LinkedPage_Update_Assigned' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_LinkedPage_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_LinkedResourceGroupList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_LinkedResourceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_LinkedResourceGroup_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_LinkedResourceGroup_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSCombinedResource_LinkedResourceList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSCombinedResource_LinkedResourceList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSCombinedResource_LinkedResource_Update_Assigned' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSCombinedResource_LinkedResource_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CSSCombinedResource_LinkedResourceList_DisplayOrder_Update' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSCombinedResource_LinkedResourceList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRulesList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRules_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRules_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRules_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRules_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRulesList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRulesModuleList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesModuleList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRulesModule_Update_Assigned' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesModule_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRulesCustomFieldList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesCustomFieldList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyProductRulesCustomField_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesCustomField_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyPageRulesList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyPageRules_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRules_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyPageRules_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRules_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyPageRulesList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyPageRulesSettingsList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesSettingsList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'CopyPageRulesSettings_Update_Assigned' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesSettings_Update_Assigned() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'D' }">
				<MvIF EXPR = "{ g.Function EQ 'DiscountModuleFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_DiscountModuleFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DomainCountryList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_DomainCountryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DomainCountry_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_DomainCountry_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DomainCountry_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_DomainCountry_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DomainCountry_Update' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_DomainCountry_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DigitalDownloadCDNList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_DigitalDownloadCDNList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DigitalDownloadCDNList_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_DigitalDownloadCDNList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DigitalDownloadCDN_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_DigitalDownloadCDN_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DigitalDownloadCDN_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_DigitalDownloadCDN_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'DigitalDownload_Load_Code' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_DigitalDownload_Load_Code() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'E' }">
				<MvIF EXPR = "{ g.Function EQ 'EarningList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_EarningList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Earning_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_Earning_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'EncryptionKeyList_Load_Batch' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_EncryptionKeyList_Load_Batch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'EncryptionKeyList_Load_Capture_Batch' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_EncryptionKeyList_Load_Capture_Batch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'EncryptionKeyList_Load_Capture_OrderList' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_EncryptionKeyList_Load_Capture_OrderList() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'EncryptionKeyList_Load_OrderList' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_EncryptionKeyList_Load_OrderList() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'EncryptionKeyList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_EncryptionKeyList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'EncryptionKey_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_EncryptionKey_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'EncryptionKey_Load' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_EncryptionKey_Load() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'F' }">
				<MvIF EXPR = "{ g.Function EQ 'FrameworkList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_FrameworkList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Framework_Upload' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Framework_Upload() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Framework_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Framework_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Feed_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_Feed_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Feed_Update' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_Feed_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_FeedList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedList_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_FeedList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedList_Process' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_FeedList_Process() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedModuleFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_FeedModuleFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Feed_DownloadFile' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_Feed_DownloadFile() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Feed_Process_CheckStatus' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FDS_JSON ].JSON_Feed_Process_CheckStatus() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedURIList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURIList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedURIList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURIList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedURI_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURI_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FeedURI_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURI_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FacetRulesList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_FacetRulesList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FacetRules_Update' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_FacetRules_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FacetList_Load_Priority' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_FacetList_Load_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FacetList_Update_Priority' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_FacetList_Update_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FacetCategoryRulesList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_FCT_JSON ].JSON_FacetCategoryRulesList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FontList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_FontList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Font_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Font_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Font_Update' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Font_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'FontList_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_FontList_Delete() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'G' }">
				<MvIF EXPR = "{ g.Function EQ 'GeneratedImageList_Load_Image' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_GeneratedImageList_Load_Image() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GeneratedImage_Load_NearestConstrained' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_GeneratedImage_Load_NearestConstrained() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificateList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificateList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificate_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificate_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificate_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificate_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificate_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificate_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificateList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificateList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificate_Generate' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificate_Generate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificate_GenerateUniqueCode' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificate_GenerateUniqueCode() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GiftCertificate_Load_Code' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_GFT_JSON ].JSON_GiftCertificate_Load_Code() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupAPITokenList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_GroupAPITokenList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupList_Load_All' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_GroupList_Load_All() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_GroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupPrivilegeList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_GroupPrivilegeList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupPrivilege_Update_Privileges' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_GroupPrivilege_Update_Privileges() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupUserList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_GroupUserList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupUser_Update_Assigned' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_GroupUser_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupImportList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_GroupImportList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupImport_Update_Assigned' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_GroupImport_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupImportModuleList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_GroupImportModuleList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupImportModule_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_GroupImportModule_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupExportModuleList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_GroupExportModuleList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupExportModule_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_GroupExportModule_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Group_Load_Name' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Group_Load_Name() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Group_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Group_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Group_Update' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Group_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Group_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Group_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'GroupList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_GroupList_Delete() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'H' }">
				<MvIF EXPR = "{ g.Function EQ 'HistoryList_Load' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_HistoryList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'HistoryList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_HistoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'HistoryList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_HistoryList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'History_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_History_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'History_Delete_Action' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_History_Delete_Action() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'History_Delete_All' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_History_Delete_All() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'History_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_History_Insert() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'I' }">
				<MvIF EXPR = "{ g.Function EQ 'ImageList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ImageList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImageListWithGeneratedImages_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ImageListWithGeneratedImages_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImageTypeList_Load_All' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ImageTypeList_Load_All() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImageTypeList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ImageTypeList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImageType_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ImageType_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImageType_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ImageType_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImageType_Update' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ImageType_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Image_Add' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_Image_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Image_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Image_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Image_AddGeneratedImage' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Image_AddGeneratedImage() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Image_Upload' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Image_Upload() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Image_Assign_OptionParts' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Image_Assign_OptionParts() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImportList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_ImportList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImportModuleFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_ImportModuleFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImportModuleList_Load_PersistentCapability' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_ImportModuleList_Load_PersistentCapability() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Delimited_Preview' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Delimited_Preview() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Session_Cancel' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Session_Cancel() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Session_Execute' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Session_Execute() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Session_Initialize' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Session_Initialize() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Template_CSV' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Template_CSV() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Template_XLS' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Template_XLS() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Import_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImportGroupList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_ImportGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ImportGroup_Update_Assigned' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_IMP_JSON ].JSON_ImportGroup_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'InventoryProductSettings_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_INV_JSON ].JSON_InventoryProductSettings_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ItemExtensionList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ItemExtensionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ItemExtension_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ItemExtension_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ItemExtension_InitializeOrder_Update' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ItemExtension_InitializeOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ItemExtension_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ItemExtension_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ItemList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ItemList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ItemPageList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ItemPageList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Item_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Item_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Item_Delete' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Item_Delete() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'J' }">
				<MvIF EXPR = "{ g.Function EQ 'JavaScriptResourceList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResourceList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Update_Global' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Update_Global() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Update_Active' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Update_Active() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Update_Attributes' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Update_Attributes() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Generate_SRI' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Generate_SRI() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Clear_SRI' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Clear_SRI() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResourceList_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResourceList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Upload' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Upload() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_File_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_File_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_File_Load' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_File_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_TemplateVersion_Update' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_TemplateVersion_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_TemplateVersion_Load' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_TemplateVersion_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_TemplateVersionList_Load_Template' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_TemplateVersionList_Load_Template() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_LinkedPageList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_LinkedPageList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_LinkedPage_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_LinkedPage_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_LinkedResourceGroupList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_LinkedResourceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_LinkedResourceGroup_Update_Assigned' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_LinkedResourceGroup_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptCombinedResource_LinkedResourceList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptCombinedResource_LinkedResourceList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptCombinedResource_LinkedResource_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptCombinedResource_LinkedResource_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptCombinedResource_LinkedResourceList_DisplayOrder_Update' }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptCombinedResource_LinkedResourceList_DisplayOrder_Update() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'L' }">
				<MvIF EXPR = "{ g.Function EQ 'Logout' }">																	<MvFUNCTIONRETURN VALUE = "{ JSON_Logout() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'M' }">
				<MvIF EXPR = "{ g.Function EQ 'Module' }">																	<MvFUNCTIONRETURN VALUE = "{ JSON_Module_JSON() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ModuleList_Load_Features' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ModuleList_Load_Features() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ModuleList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ModuleList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'MMScreen_Load_MMScreenContext' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_MMScreen_Load_MMScreenContext() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'MMTextEditor_FontSizeList_Load_All' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_MMTextEditor_FontSizeList_Load_All() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'N' }">
				<MvIF EXPR = "{ g.Function EQ 'NoteList_Load_Query' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_NoteList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Note_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_Note_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Note_Update' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_Note_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Note_Delete' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_Note_Delete() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'O' }">
				<MvIF EXPR = "{ g.Function EQ 'OptionList_Load_Attribute' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OptionList_Load_Attribute() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OptionList_Load_CodeMatch' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OptionList_Load_CodeMatch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Option_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Option_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Option_Load_Code' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Load_Code() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Option_Set_Default' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Set_Default() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Option_Update' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderCouponList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderCouponList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderCoupon_Update_Assigned' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderCoupon_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderChargeList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderChargeList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderChargeList_Load_Type' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderChargeList_Load_Type() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderCouponList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderCouponList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderDiscountTotalList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderDiscountTotalList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_BackOrder' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_BackOrder() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_Cancel' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Cancel() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_CreateReturn' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_CreateReturn() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_CreateShipment' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_CreateShipment() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_RemoveFromShipment' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_RemoveFromShipment() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_Load' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_Load_Return' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Load_Return() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_Load_Shipment' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Load_Shipment() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItemList_Load_Status' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Load_Status() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItem_Add' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItem_Split' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_Split() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItem_Update' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItem_DetermineSKU' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_DetermineSKU() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderItem_DetermineVariant' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_DetermineVariant() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_BackOrder_Status' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_BackOrder_Status() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Capture' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Capture() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Capture_Batch' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Capture_Batch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_CreateShipment_Status' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_CreateShipment_Status() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Delete_OrderPayments' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Delete_OrderPayments() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Load_EncryptionKey_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Load_EncryptionKey_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Archive' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Archive() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Update_Batch' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Update_Batch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderPaymentFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPaymentFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderPaymentList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPaymentList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderPayment_Capture' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPayment_Capture() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderPayment_Refund' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPayment_Refund() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderPayment_VOID' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPayment_VOID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderPriceGroupList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderPriceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderPriceGroup_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSon ].JSON_OrderPriceGroup_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderReturnList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_OrderReturnList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderReturnList_Load_Order' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderReturnList_Load_Order() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderReturnList_Received' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderReturnList_Received() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderReturn_Cancel' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderReturn_Cancel() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentLabelList_Load_Shipment' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentLabelList_Load_Shipment() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentLabel_Void_Shipment' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentLabel_Void_Shipment() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentIndex_Load_ID' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentList_Load_Order' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Load_Order() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentList_Load_ShipmentBatch' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Load_ShipmentBatch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentList_Return' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Return() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentList_Update' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipmentList_Update_Batch' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Update_Batch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderShipment_GenerateLabels' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipment_GenerateLabels() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderTabList_Load' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderTabList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Authorize' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Authorize() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Authorize_GenerateMivaPayRequest' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Authorize_GenerateMivaPayRequest() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Create' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Create() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Create_Empty' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Create_Empty() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Create_FromOrder' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Create_FromOrder() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_FulfillmentModule_Process' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Order_FulfillmentModule_Process() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Load_ID' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderIndex_Load_ID' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_OrderIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Recalculate_Tax' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Recalculate_Tax() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Recalculate_Charges' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Recalculate_Charges() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Rediscount' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Order_Rediscount() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Update_Charges' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Update_Charges() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_Update_Customer_Information' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Update_Customer_Information() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_UnlinkSubscriptions' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Order_UnlinkSubscriptions() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_CancelSubscriptions' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Order_CancelSubscriptions() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Order_TransferSubscriptions' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Order_TransferSubscriptions() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderCustomFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderCustomFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'OrderCustomFields_Update' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_OrderCustomFields_Update() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'P' }">
				<MvIF EXPR = "{ g.Function EQ 'PackingSolution_Load_OrderShipment' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_PackingSolution_Load_OrderShipment() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageCacheSettingList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageCacheSettingList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageCacheSetting_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageCacheSetting_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageCacheSetting_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageCacheSetting_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageCacheSetting_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageCacheSetting_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageItemList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageItemList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageItem_Update_Assigned' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageItem_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageIndex_Load_ID' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Page_Delete' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Page_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Page_Copy' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Copy() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Page_Copy_Branch' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Copy_Branch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Page_Update' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageCustomFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageCustomFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageURIList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURIList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageURI_Regenerate' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURI_Regenerate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageURI_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURI_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageURI_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURI_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageURIList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURIList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageURI_Redirect' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURI_Redirect() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageBuilderPage_Load' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_PageBuilderPage_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageBuilderPage_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_PageBuilderPage_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageBuilderPreviewSessionFragmentKey_Generate' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_PageBuilderPreviewSessionFragmentKey_Generate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageBuilderPreviewSessionFragmentKey_KeepAlive' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_PageBuilderPreviewSessionFragmentKey_KeepAlive() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageBuilderPreviewSessionFragmentKey_Cleanup' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_PageBuilderPreviewSessionFragmentKey_Cleanup() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PageBuilderPageComponentPreviewImageList_Load' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_PageBuilderPageComponentPreviewImageList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PartList_Load_ProductKit' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_PartList_Load_ProductKit() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_PaymentMethodFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_PaymentMethodList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodList_Load_OnSite' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_PaymentMethodList_Load_OnSite() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodExclusionList_Update_Method' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodExclusionList_Update_Method() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodList_Load_Enabled' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodList_Load_Enabled() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodList_Load_Exclusions' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodList_Load_Exclusions() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodList_Load_Priority' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodList_Load_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodList_Update_Priority' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodList_Update_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodRulesList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodRulesList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodRules_Update_Method' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodRules_Update_Method() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentMethodAvailabilityGroupList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentMethodAvailabilityGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentCardTypeList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentCardTypeList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentCardType_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentCardType_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentCardType_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentCardType_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PaymentCardType_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_PaymentCardType_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PayoutList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_PayoutList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Payout_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_Payout_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PayoutAffiliateList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AFF_JSON ].JSON_PayoutAffiliateList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCollectionIndex_Load_ID' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCollectionIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCollectionList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCollectionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCollection_Add' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCollection_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCollection_Remove' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCollection_Remove() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedCollectionIndex_Load_ID' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCollectionIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedCollectionList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCollectionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedCollection_Add' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCollection_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedCollection_Remove' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCollection_Remove() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingCollectionIndex_Load_ID' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingCollectionIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingCollectionList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingCollectionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingCollection_Add' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingCollection_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingCollection_Remove' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingCollection_Remove() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCustomerList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCustomerList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCustomerIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCustomerIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCustomer_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCustomer_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupList_Load_Exclusions' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupList_Load_Exclusions() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupProductIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupProductList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupProduct_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedProductIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedProductList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedProduct_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupProductSubscriptionTermIndex_Load_ID' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProductSubscriptionTermIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupProductSubscriptionTermList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProductSubscriptionTermList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupProductSubscriptionTerm_Update_Assigned' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProductSubscriptionTerm_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedProductSubscriptionTermIndex_Load_ID' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProductSubscriptionTermIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedProductSubscriptionTermList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProductSubscriptionTermList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedProductSubscriptionTerm_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProductSubscriptionTerm_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingProductIndex_Load_ID' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingProductList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingProduct_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingProductSubscriptionTermIndex_Load_ID' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProductSubscriptionTermIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingProductSubscriptionTermList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProductSubscriptionTermList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupQualifyingProductSubscriptionTerm_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProductSubscriptionTerm_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupBusinessAccountList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupBusinessAccountList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupBusinessAccountIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupBusinessAccountIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupBusinessAccount_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupBusinessAccount_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCategoryList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCategoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCategoryIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCategoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupCategory_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCategory_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedCategoryList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCategoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedCategoryIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCategoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroupExcludedCategory_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCategory_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroup_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroup_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroup_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroup_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroup_Update' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroup_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PriceGroup_Copy' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroup_Copy() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductAttributeAndOptionList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_ProductAttributeAndOptionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductAvailabilityGroupList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductAvailabilityGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductCategoryIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductCategoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductCategoryList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductCategoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductCategoryList_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductCategoryList_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductCustomFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductCustomFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductCustomFieldList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductCustomFieldList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImageIndex_Load_ID' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImageIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImageList_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImageList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImageList_DisplayOrder_Update' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImageList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImageList_Load_Product' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImageList_Load_Product() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImageList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImageList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImage_Add' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImage_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImage_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImage_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImage_Update_Type' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImage_Update_Type() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductImage_Upload' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImage_Upload() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductIndex_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductInventoryList_Load_ProductKit' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductInventoryList_Load_ProductKit() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductInventoryList_Load_ProductVariants' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_ProductInventoryList_Load_ProductVariants() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductInventoryList_Load_ProductVariants_Filter' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_ProductInventoryList_Load_ProductVariants_Filter() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductKitList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKitList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductKit_Generate_Variants' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKit_Generate_Variants() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductKit_Update_Parts' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKit_Update_Parts() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductKit_Variant_Count' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKit_Variant_Count() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_Adjust_Inventory' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Adjust_Inventory() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_BatchSort' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_BatchSort() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_DisplayOrder_Update' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_Load_CodeMatch' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Load_CodeMatch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_Load_SKUMatch' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Load_SKUMatch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_Load_AISearch' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AI_JSON ].JSON_ProductList_Load_AISearch() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_Update_SKU' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Update_SKU() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductPriceGroupList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductPriceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductUpsellIndex_Load_ID' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_ProductUpsellIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductUpsellList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_ProductUpsellList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantList_Load_Product' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantList_Load_Product() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantInventoryList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantInventoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantInventoryIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantInventoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductKitInventoryList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKitInventoryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductKitInventoryIndex_Load_ID' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKitInventoryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantPartList_Load_Variant' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantPartList_Load_Variant() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantPricing_Load' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantPricing_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariantPricing_Update' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantPricing_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariant_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariant_Update' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariant_Generate' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Generate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariant_Generate_Count' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Generate_Count() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariant_Generate_Delimiter' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Generate_Delimiter() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductVariant_Reprice' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Reprice() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Product_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Product_Load_Code' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Load_Code() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Product_Load_ID' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Product_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Product_Update' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Product_Copy' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_Product_Copy() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductURIList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURIList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductURI_Regenerate' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURI_Regenerate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductURI_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURI_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductURI_Update' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURI_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductURIList_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURIList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductURI_Redirect' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURI_Redirect() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductDigitalDownloadList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_ProductDigitalDownloadList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductDigitalDownload_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_ProductDigitalDownload_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductDigitalDownload_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_ProductDigitalDownload_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductDigitalDownloadList_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_DDL_JSON ].JSON_ProductDigitalDownloadList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductAndSubscriptionTermList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductAndSubscriptionTermList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductAndSubscriptionTermIndex_Load_ID' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductAndSubscriptionTermIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductCustomerSubscriptionList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductCustomerSubscriptionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductSubscriptionTermSubscriptionList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTermSubscriptionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductSubscriptionTermList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTermList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductSubscriptionTerm_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductSubscriptionTerm_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductSubscriptionTerm_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTerm_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ProductSubscriptionTermList_DisplayOrder_Update' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTermList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueueList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueue_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueue_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueue_Update' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueue_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueue_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueue_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueueJobList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJobList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueueJob_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJob_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueueJob_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJob_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'PrintQueueJob_Status' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJob_Status() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'R' }">
				<MvIF EXPR = "{ g.Function EQ 'RelatedProductIndex_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPD_JSON ].JSON_RelatedProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'RelatedProductList_DisplayOrder_Update' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPD_JSON ].JSON_RelatedProductList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'RelatedProductList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPD_JSON ].JSON_RelatedProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'RelatedProduct_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPD_JSON ].JSON_RelatedProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'RelatedProductList_Update_Assigned' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPD_JSON ].JSON_RelatedProductList_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ReportList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_ReportList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ReportModuleFieldList_Load' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_ReportModuleFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Report_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Report_Export_CSV' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_Export_CSV() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Report_Export_Custom' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_Export_Custom() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Report_Export_XLS' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_Export_XLS() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Report_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Report_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Report_Update_DisplayOnDashboard' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPT_JSON ].JSON_Report_Update_DisplayOnDashboard() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroupList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroup_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroup_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroup_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroup_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroup_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroup_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroupList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroupList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroup_LinkedCSSResourceList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroup_LinkedCSSResourceList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroup_LinkedCSSResourceList_DisplayOrder_Update' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroup_LinkedCSSResourceList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroup_LinkedJavaScriptResourceList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroup_LinkedJavaScriptResourceList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ResourceGroup_LinkedJavaScriptResourceList_DisplayOrder_Update' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroup_LinkedJavaScriptResourceList_DisplayOrder_Update() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'S' }">
				<MvIF EXPR = "{ g.Function EQ 'ScheduledTaskList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskOperationList_Load' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskOperationList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskModuleFieldList_Load' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskModuleFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTask_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTask_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTask_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTask_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTask_Update_Enabled' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTask_Update_Enabled() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskLogList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskLogList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskLogList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskLogList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskLog_Delete_All' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskLog_Delete_All() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskList_Execute' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskList_Execute() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScheduledTaskExecutionStatus_Load' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SCH_JSON ].JSON_ScheduledTaskExecutionStatus_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ScreenTabList_Load' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_ScreenTabList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SearchableFieldList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SEA_JSON ].JSON_SearchableFieldList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SearchableField_Update' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SEA_JSON ].JSON_SearchableField_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SearchableCustomField_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SEA_JSON ].JSON_SearchableCustomField_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SearchLogEntryList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SEA_JSON ].JSON_SearchLogEntryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SearchLogEntryList_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SEA_JSON ].JSON_SearchLogEntryList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentBatchList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentBatchList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentBatchReportList_Load' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentBatchReportList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentBatchReport_Run' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentBatchReport_Run() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentBatch_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentBatch_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentTrackingLinkList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentTrackingLinkList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentTrackingLink_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentTrackingLink_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentTrackingLink_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentTrackingLink_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShipmentTrackingLink_Update' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_ShipmentTrackingLink_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingLabelMethodList_Load' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ShippingLabelMethodList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingLabelModuleBoxList_Load' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ShippingLabelModuleBoxList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingLabelPackageFieldList_Load' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ShippingLabelPackageFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingLabelShipmentFieldList_Load' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ShippingLabelShipmentFieldList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodExclusionList_Update_Method' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodExclusionList_Update_Method() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodList_Load_Enabled' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodList_Load_Enabled() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodList_Load_Exclusions' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodList_Load_Exclusions() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodList_Load_Order' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_ShippingMethodList_Load_Order() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodList_Load_Priority' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodList_Load_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodList_Update_Priority' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodList_Update_Priority() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodRulesList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodRulesList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodRules_Update_Method' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodRules_Update_Method() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShippingMethodAvailabilityGroupList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SHP_JSON ].JSON_ShippingMethodAvailabilityGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShopAsCustomer_MostRecentBasket_Load_Customer' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_ShopAsCustomer_MostRecentBasket_Load_Customer() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShopAsCustomer_CreateOrShareSession' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_ShopAsCustomer_CreateOrShareSession() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'ShopAsCustomer_DeleteSession' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_ShopAsCustomer_DeleteSession() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StateList_Load' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_StateList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreCountryList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_StoreCountryList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreCountryIndex_Load_ID' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_StoreCountryIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreCountry_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_StoreCountry_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreCountryList_DisplayOrder_Update' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_StoreCountryList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreIcon_Upload' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_StoreIcon_Upload() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_StoreList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreList_Load_All' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_StoreList_Load_All() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Store_Load' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_Store_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StandardFields_Load' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_StandardFields_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StateList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_StateList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StateIndex_Load_Code' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_StateIndex_Load_Code() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StateList_DisplayOrder_Update' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_StateList_DisplayOrder_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'State_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_State_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'State_Insert' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_State_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'State_Update' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_State_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'StoreModuleList_Load_Feature' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_StoreModuleList_Load_Feature() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionAndOrderItem_Add' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_SubscriptionAndOrderItem_Add() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionAndOrderItem_Update' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_SubscriptionAndOrderItem_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Subscription_Load_ID' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_Subscription_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Subscription_Insert' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_Subscription_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Subscription_Update' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_Subscription_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Subscription_ResetTermRemaining' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_Subscription_ResetTermRemaining() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionList_Activate' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionList_Activate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionList_Cancel' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionList_Cancel() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionList_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionList_ProcessOrder' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionList_ProcessOrder() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionOrderIndex_Load_ID' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionOrderIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionOrderList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionOrderList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'SubscriptionShippingMethodList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionShippingMethodList_Load_Query() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'T' }">
				<MvIF EXPR = "{ g.Function EQ 'TOTPKey_Generate' }">														<MvFUNCTIONRETURN VALUE = "{ JSON_TOTPKey_Generate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'TrackingLinkList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_TrackingLinkList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'TemplateVersion_Load' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_TemplateVersion_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'TemplateVersionList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_TemplateVersionList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'TemplateVersionList_Load_Template' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_TemplateVersionList_Load_Template() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Theme_Load' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_Theme_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Theme_Update' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_Theme_Update() }">
				</MvIF>
			<MvELSEIF EXPR = "{ l.letter EQ 'U' }">
				<MvIF EXPR = "{ g.Function EQ 'UniversalSearchList_Load_Context' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_UniversalSearchList_Load_Context() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UniversalSearch_Initialize' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_UniversalSearch_Initialize() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UpsellIndex_Load_ID' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_UpsellIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UpsellList_Load_Query' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_UpsellList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UpsellProductIndex_Load_ID' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_UpsellProductIndex_Load_ID() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UpsellProductList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_UpsellProductList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UpsellProduct_Update_Assigned' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_UpsellProduct_Update_Assigned() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'Upsell_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_Upsell_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UpsellList_Delete' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_USL_JSON ].JSON_UpsellList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URIList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URIList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Update' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Delete' }">															<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URIList_Delete' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URIList_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Generate_Screens' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Generate_Screens() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Generate_Pages' }">													<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Generate_Pages() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Generate_Categories' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Generate_Categories() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Generate_Products' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Generate_Products() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'URI_Redirect' }">														<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Redirect() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserList_Load_Query' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_UserList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Insert' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_User_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Insert_WithIconImage' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_User_Insert_WithIconImage() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Update' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_User_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Update_WithIconImage' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_User_Update_WithIconImage() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Delete' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_User_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Update_Password' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_User_Update_Password() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Update_SSHAuthentication' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_User_Update_SSHAuthentication() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_Unlock' }">															<MvFUNCTIONRETURN VALUE = "{ JSON_User_Unlock() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_ClearFailedLoginAttempts' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_User_ClearFailedLoginAttempts() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_TwoFactor_Disable' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_User_TwoFactor_Disable() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_TOTP_Register' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_User_TOTP_Register() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_YubiCloud_Register' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_User_YubiCloud_Register() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_WebAuthn_Challenge_Generate' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_User_WebAuthn_Challenge_Generate() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'User_WebAuthn_Register' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_User_WebAuthn_Register() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserGroupList_Load_Query' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_UserGroupList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPreferenceList_Load_Heirarchy' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_UserPreferenceList_Load_Heirarchy() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPreferenceList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_UserPreferenceList_Load_Query() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPreferenceList_Save' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_UserPreferenceList_Save() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPreference_Delete' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_UserPreference_Delete() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPreference_Delete_CurrentUser_Key' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_UserPreference_Delete_CurrentUser_Key() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPreference_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_UserPreference_Insert() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPreference_Update' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_UserPreference_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserPrivilegeList_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_UserPrivilegeList_Load() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UserSettings_Update' }">													<MvFUNCTIONRETURN VALUE = "{ JSON_UserSettings_Update() }">
				<MvELSEIF EXPR = "{ g.Function EQ 'UpdateAdministrativeSession' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_UpdateAdministrativeSession() }">
				</MvIF>
			</MvIF>
		</MvIF>

	<MvCOMMENT>
	|
	| Fin.
	|
	</MvCOMMENT>

	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_API" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Clear all input parameters to avoid global variables passed through the URI which
	| could be used to alter the behavior of a signed request without altering the signature.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ JSON_Input_Clear_Parameters() }">

	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Content-Type', 'application/json; charset=utf-8' ) }">

	<MvIF EXPR = "{ NOT g.Data_Opened }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].OpenDataFiles_Source( g.Merchant_Version, 'api', g.Domain ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "g.Data_Opened"	VALUE = 1>
	<MvASSIGN NAME = "g.UTF8"			VALUE = 1>

	<MvCOMMENT>
	|
	| Validate request method and content-type
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ s.request_method NE 'POST' }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Invalid request method' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Invalid request method' ) }">
	<MvELSEIF EXPR = "{ substring_var( s.content_type, 1, 16 ) NE 'application/json' }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Invalid request content type' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Invalid request content type' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_Utilities ].AdminSession_SetPaths() }">
	<MvIF EXPR = "{ NOT [ g.Library_Utilities ].ValidatePaths() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_Utilities ].AdminSession_SetURLs() }">

	<MvASSIGN NAME = "l.authorization_type"				VALUE = "{ toupper( gettoken( s.HTTP_X_MIVA_API_AUTHORIZATION, ' ', 1 ) ) }">

	<MvIF EXPR = "{ ( l.authorization_type EQ 'SSH-RSA-SHA2-256' ) OR
					( l.authorization_type EQ 'SSH-RSA-SHA2-512' ) }">
		<MvCOMMENT>
		|
		| User-based SSH Authentication
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.authorization_user"			VALUE = "{ crypto_base64_decode( gettoken( gettoken( s.HTTP_X_MIVA_API_AUTHORIZATION, ' ', 2 ), ':', 1 ) ) }">
		<MvASSIGN NAME = "l.authorization_signature"	VALUE = "{ gettoken( gettoken( s.HTTP_X_MIVA_API_AUTHORIZATION, ' ', 2 ), ':', 2 ) }">

		<MvCOMMENT>
		|
		| Validate User
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Library_DB ].User_Load_Name( l.authorization_user, g.User ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Invalid User' ) }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].FailedLoginDelay() }">

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Access denied' ) }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL g.User:ssh_pubkey }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'SSH authentication is not enabled for user' ) }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].FailedLoginDelay() }">

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Access denied' ) }">
		</MvIF>

		<MvIF EXPR = "{ g.User:lo_date GE s.dyn_time_t }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'User is locked out' ) }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].FailedLoginDelay() }">

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Access denied' ) }">
		</MvIF>

		<MvIF EXPR = "{ g.User:exp_date AND ( g.User:exp_date LT s.dyn_time_t ) }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'User has expired' ) }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].FailedLoginDelay() }">

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Access denied' ) }">
		</MvIF>

		<MvIF EXPR = "{ g.User:forcepwchg OR ( g.Domain:pw_max_age AND ( ( s.dyn_time_t - g.User:pw_created ) GT ( g.Domain:pw_max_age * 86400 ) ) ) }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'User must change password' ) }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].FailedLoginDelay() }">

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Access denied' ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| Validate timestamp
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ ISNULL s.json_data:Miva_Request_Timestamp }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Missing required timestamp' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Missing required timestamp' ) }">
		<MvELSEIF EXPR = "{ abs( s.json_data:Miva_Request_Timestamp - s.dyn_time_t ) GT 30 }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Timestamp outside configured window' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Timestamp outside configured window' ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| Validate signature
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.authorization_type EQ 'SSH-RSA-SHA2-256' }">		<MvASSIGN NAME = "l.digest"	VALUE = "sha256">
		<MvELSEIF EXPR = "{ l.authorization_type EQ 'SSH-RSA-SHA2-512' }">	<MvASSIGN NAME = "l.digest" VALUE = "sha512">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Unrecognized authorization type' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Unrecognized authorization type' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Crypto ].SSH_PublicKey_Load( g.User:ssh_pubkey, l.pubkey_idx ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.verify_result"	VALUE = "{ crypto_evp_verify( l.digest, l.pubkey_idx, s.content_data, crypto_base64_decode( l.authorization_signature ) ) }">
		<MvASSIGN NAME = "l.null"			VALUE = "{ evp_pkey_free( l.pubkey_idx ) }">

		<MvIF EXPR = "{ NOT l.verify_result }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Invalid request signature' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Invalid request signature' ) }">
		</MvIF>

		<MvASSIGN NAME = "g.Admin_User_ID"				VALUE = "{ g.User:id }">
		<MvASSIGN NAME = "g.Admin_User_Administrator" 	VALUE = "{ g.User:admin }">
	<MvELSEIF EXPR = "{ ( l.authorization_type EQ 'MIVA' )				OR
						( l.authorization_type EQ 'MIVA-HMAC-SHA1' )	OR
						( l.authorization_type EQ 'MIVA-HMAC-SHA256' ) }">
		<MvCOMMENT>
		|
		| Token-based Authentication
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.authorization_token"		VALUE = "{ gettoken( gettoken( s.HTTP_X_MIVA_API_AUTHORIZATION, ' ', 2 ), ':', 1 ) }">
		<MvASSIGN NAME = "l.authorization_signature"	VALUE = "{ gettoken( gettoken( s.HTTP_X_MIVA_API_AUTHORIZATION, ' ', 2 ), ':', 2 ) }">

		<MvCOMMENT>
		|
		| Validate API token
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Library_DB ].APIToken_Load_Token( l.authorization_token, g.Session:api_token ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Invalid API token' ) }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].FailedLoginDelay() }">

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Access denied' ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| Validate IP restriction
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].IP_In_CIDR_IP_List( s.remote_addr, g.Session:api_token:ip_range ) }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Request address out of configured range' ) }">
			<MvEVAL EXPR = "{ [ g.Library_Utilities ].FailedLoginDelay() }">

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Access denied' ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| Validate the token is enabled
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT g.Session:api_token:enabled }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Token is disabled' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Token is disabled' ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| Validate timestamp, if present and configured to do so
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ g.Session:api_token:req_ts }">
			<MvIF EXPR = "{ ISNULL s.json_data:Miva_Request_Timestamp }">
				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Missing required timestamp' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Missing required timestamp' ) }">
			<MvELSEIF EXPR = "{ abs( s.json_data:Miva_Request_Timestamp - s.dyn_time_t ) GT g.Session:api_token:ts_window }">
				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Timestamp outside configured window' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Timestamp outside configured window' ) }">
			</MvIF>
		</MvIF>

		<MvCOMMENT>
		|
		| Validate signature
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ g.Session:api_token:req_sig }">
			<MvIF EXPR = "{ l.authorization_type EQ 'MIVA-HMAC-SHA1' }">		<MvASSIGN NAME = "l.digest"	VALUE = "sha1">
			<MvELSEIF EXPR = "{ l.authorization_type EQ 'MIVA-HMAC-SHA256' }">	<MvASSIGN NAME = "l.digest" VALUE = "sha256">
			<MvELSEIF EXPR = "{ l.authorization_type EQ 'MIVA' }">
				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Token requires request signature' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Timestamp requires request signature' ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Unrecognized authorization type' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Unrecognized authorization type' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT crypto_evp_hmac( l.digest, [ g.Library_Crypto ].Decrypt_Payment_Password( g.Session:api_token:signkey ), s.content_data, l.calculated_signature ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-00022', crypto_last_error() ) }">
			</MvIF>

			<MvIF EXPR = "{ crypto_base64_decode( l.authorization_signature ) NE l.calculated_signature }">
				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Invalid request signature' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Invalid request signature' ) }">
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( 'Unrecognized authorization type' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'access_denied', 'Unrecognized authorization type' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Increment the api-ua counter when the User-Agent is not blank
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.user_agent"	VALUE = "{ trim( s.http_user_agent ) }">

	<MvIF EXPR = "{ NOT ISNULL l.user_agent }">
		<MvASSIGN NAME = "l.event"	VALUE = "{ substring( 'api-ua:' $ l.user_agent, 1, 100 ) }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Feature_FEL_DB ].DomainFeatureEngagement_Increment_Counter( l.event, 1 ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Process simple requests
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ miva_variable_type( s.json_data:Operations ) NE 'ARRAY' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_API_Operation( s.json_data ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Process operations
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.total_operation_count"	VALUE = "{ miva_array_elements( s.json_data:Operations ) }">

	<MvIF EXPR = "{ ISNULL s.HTTP_RANGE }">
		<MvASSIGN NAME = "l.start_index"		VALUE = 1>
		<MvASSIGN NAME = "l.end_index"			VALUE = "{ l.total_operation_count }">
	<MvELSE>
		<MvASSIGN NAME = "l.unit_type"			VALUE = "{ tolower( gettoken( s.HTTP_RANGE, '=', 1 ) ) }">
		<MvASSIGN NAME = "l.range_values"		VALUE = "{ tolower( gettoken( s.HTTP_RANGE, '=', 2 ) ) }">

		<MvIF EXPR = "{ l.unit_type NE 'operations' }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-00028', 'Unknown Unit Type' ) }">
		</MvIF>

		<MvIF EXPR = "{ ',' IN l.range_values }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Range_Error( 'MER-JSN-00031', 'Multiple ranges are not supported', l.total_operation_count ) }">
		</MvIF>

		<MvIF EXPR = "{ miva_splitstring( l.range_values, '-', l.values, 'trim' ) GT 2 }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Range_Error( 'MER-JSN-00032', 'Range Not Satisfiable', l.total_operation_count ) }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.values[ 1 ] }">																							<MvASSIGN NAME = "l.start_index" 	VALUE = 1>
		<MvELSEIF EXPR = "{ isdigit( l.values[ 1 ] ) AND l.values[ 1 ] LE l.total_operation_count AND l.values[ 1 ] GT 0 }">				<MvASSIGN NAME = "l.start_index"	VALUE = "{ l.values[ 1 ] }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ JSON_Range_Error( 'MER-JSN-00033', 'Range Not Satisfiable', l.total_operation_count ) }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.values[ 2 ] }">																							<MvASSIGN NAME = "l.end_index"		VALUE = "{ l.total_operation_count }">
		<MvELSEIF EXPR = "{ isdigit( l.values[ 2 ] ) AND l.values[ 2 ] LE l.total_operation_count AND l.values[ 2 ] GE l.start_index }">	<MvASSIGN NAME = "l.end_index"		VALUE = "{ l.values[ 2 ] }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ JSON_Range_Error( 'MER-JSN-00034', 'Range Not Satisfiable', l.total_operation_count ) }">
		</MvIF>
	</MvIF>

	<MvCAPTURE VARIABLE = "l.responses">
		<MvASSIGN NAME = "l.output_count"				VALUE = 0>
		<MvASSIGN NAME = "l.start_time"					VALUE = "{ s.dyn_time_t }">

		<MvIF EXPR = "{ NOT ISNULL s.HTTP_X_MIVA_API_TIMEOUT }">
			<MvASSIGN NAME = "l.custom_batch_timeout"	VALUE = "{ int( s.HTTP_X_MIVA_API_TIMEOUT ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.custom_batch_timeout"	VALUE = 60>
		</MvIF>

		<MvFOREACH ITERATOR = "l.operation" ARRAY = "s.json_data:Operations" FIRST = "{ l.start_index }" LAST = "{ l.end_index }">
			<MvIF EXPR = "{ l.output_count }">
				<MvCOMMENT>
				|
				| Timeouts are only checked after at least one operation has been processed
				|
				</MvCOMMENT>
				 
				<MvIF EXPR = "{ ( ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) ) OR
								( l.custom_batch_timeout LE ( s.dyn_time_t - l.start_time ) ) }">
					<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Content-Range', l.output_count $ '/' $ l.total_operation_count ) }">
					<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Status', '206 Partial Content' ) }">

					<MvFOREACHSTOP>
				</MvIF>

				<MvEVAL EXPR = ",">
			</MvIF>

			<MvASSIGN NAME = "l.null"					VALUE = "{ JSON_API_Operation( l.operation ) }">
			<MvASSIGN NAME = "l.output_count"			VALUE = "{ l.output_count + 1 }">
		</MvFOREACH>
	</MvCAPTURE>

	<MvEVAL EXPR = "[">
	<MvEVAL EXPR = "{ l.responses }">
	<MvEVAL EXPR = "]">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_API_Operation" PARAMETERS = "operation var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "g.Session:json_api_operation"	VARIABLE = "l.operation">

	<MvIF EXPR = "{ miva_variable_type( l.operation:Iterations ) NE 'ARRAY' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_API_Iteration( l.operation ) }">
	</MvIF>

	<MvCAPTURE VARIABLE = "l.responses">
		<MvASSIGN NAME = "l.output_count"	VALUE = 0>

		<MvFOREACH ITERATOR = "l.iteration" ARRAY = "l.operation:Iterations">
			<MvIF EXPR = "{ l.output_count++ }">
				<MvEVAL EXPR = ",">
			</MvIF>

			<MvASSIGN NAME = "l.null"		VALUE = "{ JSON_API_Iteration( l.iteration ) }">
		</MvFOREACH>
	</MvCAPTURE>

	<MvEVAL EXPR = "[">
	<MvEVAL EXPR = "{ l.responses }">
	<MvEVAL EXPR = "]">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_API_Iteration" PARAMETERS = "iteration var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "g.Session:json_api_iteration"	VARIABLE = "l.iteration">

	<MvFUNCTIONRETURN VALUE = "{ JSON_API_Function() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_API_Function" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Input_Clear_Fields() }">

	<MvCOMMENT>
	|
	| Open store
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( 'Store_Code', l.store_code ) }">
		<MvASSIGN NAME = "l.store_id"						VALUE = 0>
		<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Module_Admin ].Admin_Close_Store() }">
		<MvASSIGN NAME = "g.Session:json_store_open"		VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Filename_Admin ].Admin_Open_Store( l.store_code, g.Store ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSE>
		<MvASSIGN NAME = "g.Session:json_store_open"		VALUE = 1>
		<MvASSIGN NAME = "l.store_id"						VALUE = "{ g.Store:id }">

		<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
		<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
		<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

		<MvASSIGN NAME = "g.UTF8"							VALUE = "{ tolower( g.Store:charset ) EQ 'utf-8' }">
		<MvIF EXPR = "{ ISNULL g.Store:charset }">
			<MvASSIGN NAME = "s.miva_charset"				VALUE = "iso-8859-1">
		<MvELSE>
			<MvASSIGN NAME = "s.miva_charset"				VALUE = "{ g.Store:charset }">
		</MvIF>

		<MvASSIGN NAME = "l.null"							VALUE = "{ miva_output_header( 'Content-Type', 'application/json; charset=utf-8' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Check for function-level privilege override
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( 'Function', l.function ) }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-00024', 'Missing required parameter Function' ) }">
	<MvELSEIF EXPR = "{ l.function EQ 'Module' }">
		<MvIF EXPR = "{ NOT JSON_Input_Retrieve( 'Module_Code', l.module_code ) }">				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-00025', 'Missing required parameter Module_Code' ) }">
		<MvELSEIF EXPR = "{ NOT JSON_Input_Retrieve( 'Module_Function', l.module_function ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-00026', 'Missing required parameter Module_Function' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.privilege_function" VALUE = "{ 'Module:' $ l.module_code $ ':' $ l.module_function }">
	<MvELSE>
		<MvASSIGN NAME = "l.privilege_function" VALUE = "{ l.function }">
	</MvIF>

	<MvASSIGN NAME = "l.letter" VALUE = "{ substring_var( l.function, 1, 1 ) }">

	<MvCOMMENT>
	|
	| The following functions must be assigned to the token at the domain-level
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.letter EQ 'M' }">
		<MvIF EXPR = "{ l.function EQ 'MivaMerchantVersion' }">					<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'P' }">
		<MvIF EXPR = "{ l.function EQ 'Provision_Domain' }">					<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ l.function EQ 'PrintQueueList_Load_Query' }">		<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ l.function EQ 'PrintQueueJobList_Load_Query' }">	<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'U' }">
		<MvIF EXPR = "{ l.function EQ 'URIList_Load_Query' }">					<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ l.function EQ 'URI_Insert' }">						<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ l.function EQ 'URI_Update' }">						<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ l.function EQ 'URI_Delete' }">						<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ l.function EQ 'URIList_Delete' }">					<MvASSIGN NAME = "l.store_id"	VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Session:api_token }">
		<MvASSIGN NAME = "g.Session:api_privilege_override"	VALUE = 0>
	<MvELSEIF EXPR = "{ [ g.Library_DB ].APITokenXFunction_Load( g.Session:api_token:id, l.store_id, l.privilege_function, l.tokenxfunction ) }">
		<MvASSIGN NAME = "g.Session:api_privilege_override"	VALUE = 1>
	<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSE>
		<MvASSIGN NAME = "g.Session:api_privilege_override"	VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "g.Session_Type"						VALUE = "api">
	<MvASSIGN NAME = "g.Session_ID_Verified"				VALUE = 1>

	<MvCOMMENT>
	|
	| Perform function call
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call( l.privilege_function ) }">

	<MvIF EXPR = "{ l.letter EQ 'A' }">
		<MvIF EXPR = "{ l.function EQ 'AllOrderPaymentList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_AllOrderPaymentList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateAttributeList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttributeList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateOptionList_Load_Attribute' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeTemplateOptionList_Load_Attribute() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateAttribute_Delete' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateAttribute_Insert' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateAttribute_Update' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateOption_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateOption_Insert' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateOption_Update' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplate_Insert' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplate_Update' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplate_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateOption_Set_Default' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption_Set_Default() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateProductList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeTemplateProduct_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateProduct_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupBusinessAccount_Update_Assigned' }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupBusinessAccount_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AttributeAndOptionList_Load_Product' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeAndOptionList_Load_Product() }">		
		<MvELSEIF EXPR = "{ l.function EQ 'Attribute_Load_Code' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Load_Code() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Attribute_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Attribute_Update' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Attribute_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Attribute_CopyTemplate' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_CopyTemplate() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Attribute_CopyLinkedTemplate' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Attribute_CopyLinkedTemplate() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupCustomer_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCustomer_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupPaymentMethod_Update_Assigned' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupPaymentMethod_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupProduct_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupProduct_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupShippingMethod_Update_Assigned' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupShippingMethod_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupCustomerList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCustomerList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupProductList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroup_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroup_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroup_Insert' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroup_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroup_Update' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroup_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupCategoryList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCategoryList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupCategory_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupCategory_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupBusinessAccountList_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupBusinessAccountList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'AvailabilityGroupShippingMethodList_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_AGR_JSON ].JSON_AvailabilityGroupShippingMethodList_Load_Query() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'B' }">
		<MvIF EXPR = "{ l.function EQ 'Branch_Copy' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Copy() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Branch_Create' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Create() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Branch_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Branch_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Branch_SetPrimary' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Branch_SetPrimary() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchList_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchTemplateVersionList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchTemplateVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchCSSResourceVersionList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchCSSResourceVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchJavaScriptResourceVersionList_Load_Query' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchJavaScriptResourceVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchPageVersionList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchPageVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchItemVersionList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchItemVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BranchPropertyVersionList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_BranchPropertyVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BusinessAccountList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BusinessAccount_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccount_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BusinessAccount_Update' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccount_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BusinessAccountList_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BusinessAccountCustomerList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountCustomerList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'BusinessAccountCustomer_Update_Assigned' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_BusinessAccountCustomer_Update_Assigned() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'C' }">
		<MvIF EXPR = "{ l.function EQ 'CategoryList_Load_Parent' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryList_Load_Parent() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryProductList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryProduct_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_CategoryProduct_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Category_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Category_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Category_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Category_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Category_Update' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Category_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryURI_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURI_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryURI_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURI_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryURIList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURIList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryURIList_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURIList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CategoryURI_Redirect' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_CategoryURI_Redirect() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChildCategoryList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ChildCategoryList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Changeset_Create' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Changeset_Create() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetList_Merge' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetList_Merge() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetChangeList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetChangeList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetItemVersionList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetItemVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetTemplateVersionList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetTemplateVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetCSSResourceVersionList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetCSSResourceVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetJavaScriptResourceVersionList_Load_Query' }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetJavaScriptResourceVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ChangesetPropertyVersionList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ChangesetPropertyVersionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRulesList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRules_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRules_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRules_Update' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRules_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRulesList_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRulesModuleList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesModuleList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRulesModule_Update_Assigned' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesModule_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRulesCustomFieldList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesCustomFieldList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyProductRulesCustomField_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_CopyProductRulesCustomField_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyPageRulesList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyPageRules_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRules_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyPageRules_Update' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRules_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyPageRulesList_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyPageRulesSettingsList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesSettingsList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CopyPageRulesSettings_Update_Assigned' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CopyPageRulesSettings_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponList_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponPriceGroupList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponPriceGroupList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponPriceGroup_Update_Assigned' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponPriceGroup_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponCustomerList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponCustomerList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponCustomer_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponCustomer_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponBusinessAccountList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponBusinessAccountList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CouponBusinessAccount_Update_Assigned' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_CouponBusinessAccount_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Coupon_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Coupon_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Coupon_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CSSResource_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CSSResource_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CSSResource_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CSSResourceList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResourceList_Load_Query() }">		
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerAddressList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddressList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerAddress_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerAddress_Update' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerAddress_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerAddressList_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddressList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerAddress_Update_Residential' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerAddress_Update_Residential() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerPriceGroupList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerPriceGroupList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Customer_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Customer_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Customer_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerCreditHistoryList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerCreditHistoryList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerCreditHistory_Insert' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerCreditHistory_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerCreditHistory_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CUS_JSON ].JSON_CustomerCreditHistory_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerPaymentCard_Register' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCard_Register() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerPaymentCardList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PAY_JSON ].JSON_CustomerPaymentCardList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'CustomerSubscriptionList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_CustomerSubscriptionList_Load_Query() }">
		</MvIF>		
	<MvELSEIF EXPR = "{ l.letter EQ 'I' }">
		<MvIF EXPR = "{ l.function EQ 'ImageTypeList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ImageTypeList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'InventoryProductSettings_Update' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_INV_JSON ].JSON_InventoryProductSettings_Update() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'F' }">
		<MvIF EXPR = "{ l.function EQ 'FeedURI_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURI_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'FeedURI_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURI_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'FeedURIList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURIList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'FeedURIList_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_FeedURIList_Delete() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'J' }">
		<MvIF EXPR = "{ l.function EQ 'JavaScriptResource_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'JavaScriptResource_Update' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'JavaScriptResource_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'JavaScriptResourceList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResourceList_Load_Query() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'M' }">
		<MvIF EXPR = "{ l.function EQ 'MivaMerchantVersion' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_MivaMerchantVersion() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Module' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Module_JSON_API() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'N' }">
		<MvIF EXPR = "{ l.function EQ 'NoteList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_NoteList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Note_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Note_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Note_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Note_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Note_Update' }">											<MvFUNCTIONRETURN VALUE = "{ JSON_Note_Update() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'O' }">
		<MvIF EXPR = "{ l.function EQ 'OptionList_Load_Attribute' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OptionList_Load_Attribute() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Option_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Option_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Option_Update' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Option_Load_Code' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Load_Code() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Option_Set_Default' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_Option_Set_Default() }">		
		<MvELSEIF EXPR = "{ l.function EQ 'Order_Authorize' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Authorize() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderCoupon_Update_Assigned' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderCoupon_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderCustomFieldList_Load' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_OrderCustomFieldList_Load() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderCustomFields_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_OrderCustomFields_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItemList_BackOrder' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_BackOrder() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItemList_Cancel' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Cancel() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItemList_CreateReturn' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_CreateReturn() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItemList_CreateShipment' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_CreateShipment() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItemList_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItemList_RemoveFromShipment' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList_RemoveFromShipment() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItem_Add' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_Add() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItem_Update' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderItem_Split' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_Split() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderPayment_Capture' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPayment_Capture() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderPayment_Refund' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPayment_Refund() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderPayment_VOID' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_OrderPayment_VOID() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderPriceGroup_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderPriceGroup_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderPriceGroupList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderPriceGroupList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderReturnList_Received' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_OrderReturnList_Received() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderShipmentList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderShipmentList_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_OrderShipmentList_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Order_Create' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Create() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Order_Create_FromOrder' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Create_FromOrder() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderCouponList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_OrderCouponList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Order_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Order_Update_Customer_Information' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Order_Update_Customer_Information() }">
		<MvELSEIF EXPR = "{ l.function EQ 'OrderList_Archive' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_OrderList_Archive() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'P' }">
		<MvIF EXPR = "{ l.function EQ 'Page_Insert' }">												<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Page_Copy' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Copy() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Page_Copy_Branch' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Copy_Branch() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Page_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Page_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Page_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PageList_Load_Query' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_PageList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PageURI_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURI_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PageURI_Update' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURI_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PageURIList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURIList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PageURIList_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURIList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PageURI_Redirect' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_PageURI_Redirect() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PaymentMethodList_Load' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_PaymentMethodList_Load() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupCustomerList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCustomerList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupCustomer_Update_Assigned' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCustomer_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupProductList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupProduct_Update_Assigned' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupProduct_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupBusinessAccountList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupBusinessAccountList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupBusinessAccount_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupBusinessAccount_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupCategoryList_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCategoryList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupCategory_Update_Assigned' }">					<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupCategory_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupExcludedCategoryList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCategoryList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupExcludedCategory_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedCategory_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupExcludedProductList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupExcludedProduct_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupExcludedProduct_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupQualifyingProductList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroupQualifyingProduct_Update_Assigned' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroupQualifyingProduct_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroup_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroup_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroup_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroup_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PriceGroup_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGR_JSON ].JSON_PriceGroup_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductAndSubscriptionTermList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductAndSubscriptionTermList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductSubscriptionTermList_Load_Query' }">				<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTermList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductAttributeAndOptionList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_ProductAttributeAndOptionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductImage_Add' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImage_Add() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductImage_Delete' }">									<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImage_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductImage_Update_Type' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_ProductImage_Update_Type() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductList_Adjust_Inventory' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Adjust_Inventory() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariantList_Load_Product' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantList_Load_Product() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariantList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariantList_Delete' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariantPricing_Update' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariantPricing_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariant_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariant_Update' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariant_Generate' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Generate() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductVariant_Generate_Delimiter' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_ProductVariant_Generate_Delimiter() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductKitList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKitList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductKit_Generate_Variants' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKit_Generate_Variants() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductKit_Update_Parts' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKit_Update_Parts() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductKit_Variant_Count' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_ProductKit_Variant_Count() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductShippingRules_Update' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_ProductShippingRules_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Product_Insert' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Product_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Product_Update' }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Product_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Product_Copy' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_CPD_JSON ].JSON_Product_Copy() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductURI_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURI_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductURI_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURI_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductURIList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURIList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductURIList_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURIList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ProductURI_Redirect' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_ProductURI_Redirect() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Provision_Domain' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PRV_JSON ].JSON_Provision_Domain() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Provision_Store' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PRV_JSON ].JSON_Provision_Store() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PrintQueueList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PrintQueueJobList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJobList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PrintQueueJob_Insert' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJob_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PrintQueueJob_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJob_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'PrintQueueJob_Status' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_PrintQueueJob_Status() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'R' }">
		<MvIF EXPR = "{ l.function EQ 'RelatedProductList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPD_JSON ].JSON_RelatedProductList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'RelatedProduct_Update_Assigned' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_RPD_JSON ].JSON_RelatedProduct_Update_Assigned() }">
		<MvELSEIF EXPR = "{ l.function EQ 'ResourceGroupList_Load_Query' }">						<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_TUI_JSON ].JSON_ResourceGroupList_Load_Query() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'S' }">
		<MvIF EXPR = "{ l.function EQ 'Store_Load' }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Store_Load() }">
		<MvELSEIF EXPR = "{ l.function EQ 'StoreList_Load_Query' }">								<MvFUNCTIONRETURN VALUE = "{ JSON_StoreList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'SubscriptionShippingMethodList_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionShippingMethodList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Subscription_Update' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_Subscription_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'Subscription_Insert' }">									<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_Subscription_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'SubscriptionList_Delete' }">								<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionList_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'SubscriptionList_Load_Query' }">							<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_SUB_JSON ].JSON_SubscriptionList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'SubscriptionAndOrderItem_Add' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_SubscriptionAndOrderItem_Add() }">
		<MvELSEIF EXPR = "{ l.function EQ 'SubscriptionAndOrderItem_Update' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_SubscriptionAndOrderItem_Update() }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.letter EQ 'U' }">
		<MvIF EXPR = "{ l.function EQ 'URIList_Load_Query' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URIList_Load_Query() }">
		<MvELSEIF EXPR = "{ l.function EQ 'URI_Insert' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Insert() }">
		<MvELSEIF EXPR = "{ l.function EQ 'URI_Update' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Update() }">
		<MvELSEIF EXPR = "{ l.function EQ 'URI_Delete' }">											<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URI_Delete() }">
		<MvELSEIF EXPR = "{ l.function EQ 'URIList_Delete' }">										<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_URI_JSON ].JSON_URIList_Delete() }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'invalid_function', 'Invalid function' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ValidateAdminSession" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ [ g.Library_Utilities ].ParseCookies( g.Request_Cookies ) }">

	<MvASSIGN NAME = "g.Output_Cookies"									VALUE = "">
	<MvASSIGN NAME = "g.Session_Cookie"									VALUE = "{ g.Request_Cookies:mm5\-admin\-session }">

	<MvASSIGN NAME = "l.success"										VALUE = 0>
	<MvASSIGN NAME = "l.shopascustomer_session_active"					VALUE = 0>

	<MvIF EXPR = "{ NOT ISNULL g.Session_Cookie }">
		<MvIF EXPR = "{ g.Domain:verify_ip }">	<MvASSIGN NAME = "l.session_found" VALUE = "{ [ g.Library_DB ].AdminSession_Load_Session_Cookie_IP( g.Session_Cookie, s.remote_addr, l.session ) }">
		<MvELSE>								<MvASSIGN NAME = "l.session_found" VALUE = "{ [ g.Library_DB ].AdminSession_Load_Session_Cookie( g.Session_Cookie, l.session ) }">
		</MvIF>

		<MvIF EXPR = "{ l.session_found }">
			<MvASSIGN NAME = "l.shopascustomer_session_present"			VALUE = "{ [ g.Module_Feature_CUS_DB ].ShopAsCustomerSession_Load_AdminSession( l.session:session_id, l.shopascustomersession ) }">

			<MvIF EXPR = "{ l.shopascustomer_session_present }">
				<MvIF EXPR = "{ [ g.Module_Library_DB ].Basket_Load_ID( l.shopascustomersession:basket_id, l.basket ) }">
					<MvASSIGN NAME = "l.shopascustomer_session_active"	VALUE = 1>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ ( ( l.session:lastupdate GT s.time_t ) OR
							  ( s.time_t - l.session:lastupdate ) LE ( g.Domain:admexp * 60 ) ) }">
				<MvASSIGN NAME = "l.success"							VALUE = 1>

				<MvIF EXPR = "{ l.shopascustomer_session_active AND l.shopascustomersession:user_id NE l.session:user_id }">
					<MvASSIGN NAME = "l.shopascustomer_session_active"	VALUE = 0>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.shopascustomer_session_present AND NOT l.shopascustomer_session_active }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_CUS_DB ].ShopAsCustomerSession_Delete_Session( l.shopascustomersession:session_id ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	{
		<MvIF EXPR = "{ NOT l.success }">
			"success": false
		<MvELSE>
			"success":							true,
			"shopascustomer_session_active":	<MvEVAL EXPR = "{ JSON_Boolean( l.shopascustomer_session_active ) }">
		</MvIF>
	}

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_UpdateAdministrativeSession" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Logout" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Library_Utilities ].ClearCookie( g.Output_Cookies, 'mm5-admin-session', '', '', g.Secure ) }">

	<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Library_Utilities ].OutputCookies( g.Output_Cookies ) }">
	<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Library_DB ].AdminSession_Delete_Session_Cookie( g.Session_Cookie ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Runtime_CORS_Preflight_Headers" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].IsAdminOriginIsolated( l.admin_surl_parts ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.admin_surl_parts:scheme EQ 'http' AND l.admin_surl_parts:port EQ 80 }">			<MvASSIGN NAME = "l.origin" VALUE = "{ l.admin_surl_parts:scheme $ '://' $ l.admin_surl_parts:host }">
	<MvELSEIF EXPR = "{ l.admin_surl_parts:scheme EQ 'https' AND l.admin_surl_parts:port EQ 443 }">		<MvASSIGN NAME = "l.origin" VALUE = "{ l.admin_surl_parts:scheme $ '://' $ l.admin_surl_parts:host }">
	<MvELSE>																							<MvASSIGN NAME = "l.origin" VALUE = "{ l.admin_surl_parts:scheme $ '://' $ l.admin_surl_parts:host $ ':' $ l.admin_surl_parts:port }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Access-Control-Allow-Origin',			encodeentities( l.origin ) ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Access-Control-Allow-Methods',		'POST' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Access-Control-Allow-Credentials',	'true' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Access-Control-Allow-Headers',		'Content-Type, if-modified-since, *' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Access-Control-Expose-Headers',		'Content-Length, Content-Encoding' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_FileUpload_Error" PARAMETERS = "error_code, error_message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:fileupload:error_code"		VALUE = "{ l.error_code }">
	<MvASSIGN NAME = "g.Session:fileupload:error_message"	VALUE = "{ l.error_message }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Error" PARAMETERS = "error_code, error_message" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":			0,
		"error_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.error_code ) }">",
		"error_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error_message ) }">"
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Error_WithData_Start" PARAMETERS = "error_code, error_message" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":			0,
		"error_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.error_code ) }">",
		"error_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error_message ) }">",

		"data_error":		true,
		"data":
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Error_WithData_End" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_FieldError" PARAMETERS = "error_field, error_message" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":				0,
		"error_code":			"MER-JSN-00018",
		"error_message":		"<MvEVAL EXPR = "{ JSON_Encode( 'Invalid value for field \'' $ l.error_field $ '\': ' $ l.error_message ) }">",

		"validation_error":		true,
		"error_field":			"<MvEVAL EXPR = "{ JSON_Encode( l.error_field ) }">",
		"error_field_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error_message ) }">",

		"input_errors":			true,
		"error_fields":
		[
			{
				"error_field":		"<MvEVAL EXPR = "{ JSON_Encode( l.error_field ) }">",
				"error_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error_message ) }">"
			}
		]
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Error_ShippingMethod_Invalid" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Library_Utilities ].Error_ShippingMethod_Invalid() }">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Error" PARAMETERS = "error_field, error_message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.error:error_field"			VALUE = "{ l.error_field }">
	<MvASSIGN NAME = "l.error:error_message"		VALUE = "{ l.error_message }">

	<MvASSIGN NAME = "g.Session:input_error_count"	VALUE = "{ miva_array_insert( g.Session:input_errors, l.error, -1 ) }">

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Have_Input_Errors" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ g.Session:input_error_count GT 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_InputErrors" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":				0,
		"error_code":			"MER-JSN-00023",
		"error_message":		"One or more parameters are invalid",

		"validation_error":		true,
		"error_field":			"<MvEVAL EXPR = "{ JSON_Encode( g.Session:input_errors[ 1 ]:error_field ) }">",
		"error_field_message":	"<MvEVAL EXPR = "{ JSON_Encode( g.Session:input_errors[ 1 ]:error_message ) }">",

		"input_errors":			true,
		"error_fields":
		[
			<MvASSIGN NAME = "l.error_count" VALUE = 0>
			<MvFOREACH ITERATOR = "l.error" ARRAY = "g.Session:input_errors" COUNT = "{ g.Session:input_error_count }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.error_count ) }">
					"error_field":		"<MvEVAL EXPR = "{ JSON_Encode( l.error:error_field ) }">",
					"error_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error:error_message ) }">"
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	}

	<MvASSIGN NAME = "g.Session:input_error_count"	VALUE = 0>
	<MvASSIGN NAME = "g.Session:input_errors"		VALUE = "">

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_ListProcessed" PARAMETERS = "processed, errors var, warnings var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		<MvIF EXPR = "{ NOT miva_array_elements( l.errors ) }">
			"success":			1,
		<MvELSE>
			"success":			0,
			"error_code":		"MER-JSN-00045",
			"error_message":	"Multiple errors found.",

			"list_error":		true,
			"errors":
			[
				<MvASSIGN NAME = "l.error_output_count" VALUE = 0>

				<MvFOREACH ITERATOR = "l.error" ARRAY = "l.errors">
					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.error_output_count ) }">
						"identifier":		"<MvEVAL EXPR = "{ JSON_Encode( l.error:identifier ) }">",
						"error_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.error:error_code ) }">",
						"error_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error:error_message ) }">"
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
				</MvFOREACH>
			],
		</MvIF>

		<MvIF EXPR = "{ miva_array_elements( l.warnings ) }">
			"warnings":
			[
				<MvASSIGN NAME = "l.warning_output_count" VALUE = 0>

				<MvFOREACH ITERATOR = "l.warning" ARRAY = "l.warnings">
					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.warning_output_count ) }">
						"identifier":	"<MvEVAL EXPR = "{ JSON_Encode( l.warning:identifier ) }">",
						"code":			"<MvEVAL EXPR = "{ JSON_Encode( l.warning:code ) }">",
						"message":		"<MvEVAL EXPR = "{ JSON_Encode( l.warning:message ) }">"
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
				</MvFOREACH>
			],
		</MvIF>

		"processed": <MvEVAL EXPR = "{ int( l.processed ) }">
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_ListProcessed_Success" PARAMETERS = "processed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":		1,
		"processed": 	<MvEVAL EXPR = "{ int( l.processed ) }">
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_ListProcessed_Errors" PARAMETERS = "processed, errors var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":				0,
		"error_code":			"MER-JSN-00021",
		"error_message":		"Multiple errors found.",

		"list_error":			true,
		"errors":
		[
			<MvASSIGN NAME = "l.error_count" VALUE = 0>
			<MvFOREACH ITERATOR = "l.error" ARRAY = "l.errors">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.error_count ) }">
					"identifier":		"<MvEVAL EXPR = "{ JSON_Encode( l.error:identifier ) }">",
					"error_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.error:error_code ) }">",
					"error_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error:error_message ) }">"
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		],

		"processed": <MvEVAL EXPR = "{ int( l.processed ) }">
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_ListProcessed_Warning" PARAMETERS = "identifier, code, message, warnings var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.warning:identifier" VALUE = "{ l.identifier }">
	<MvASSIGN NAME = "l.warning:code" 		VALUE = "{ l.code }">
	<MvASSIGN NAME = "l.warning:message" 	VALUE = "{ l.message }">

	<MvFUNCTIONRETURN VALUE = "{ miva_array_insert_var( l.warnings, l.warning, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_ListProcessed_Error" PARAMETERS = "identifier, error_code, error_message, errors var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.error:identifier" 		VALUE = "{ l.identifier }">
	<MvASSIGN NAME = "l.error:error_code" 		VALUE = "{ l.error_code }">
	<MvASSIGN NAME = "l.error:error_message" 	VALUE = "{ l.error_message }">

	<MvFUNCTIONRETURN VALUE = "{ miva_array_insert_var( l.errors, l.error, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_FieldErrorWithList_Start" PARAMETERS = "error_field, error_message" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":				0,
		"error_code":			"MER-JSN-00019",
		"error_message":		"<MvEVAL EXPR = "{ JSON_Encode( 'Invalid value for field \'' $ l.error_field $ '\': ' $ l.error_message ) }">",

		"validation_error":		true,
		"error_field":			"<MvEVAL EXPR = "{ JSON_Encode( l.error_field ) }">",
		"error_field_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.error_message ) }">",
		"error_fields":
		[
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_FieldErrorWithList_End" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		]
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_HTML_Error" PARAMETERS = "error_code, error_message" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Library_Utilities ].Error( l.error_code, l.error_message ) }">
	<html>
	<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Library_Utilities ].Screen_Error() }">
	</html>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Range_Error" PARAMETERS = "error_code, error_message, total_range_count" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Content-Range', '*/' $ l.total_range_count ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Status', '416 Range Not Satisfiable' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( l.error_code, l.error_message ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Success" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":	1
	}

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Access_Denied" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied_Message( 'Access denied' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Access_Denied_Message" PARAMETERS = "message" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type EQ 'api' }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_API_Call_Failure( l.message ) }">
	</MvIF>

	{
		"success":			0,
		"error_code":		"access_denied",
		"error_message":	"<MvEVAL EXPR = "{ JSON_Encode( l.message ) }">"
	}

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Start" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"success":	1,
		"data":
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_End" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	}

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Store_Open" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT g.Session:json_store_open }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-00017', 'Missing required parameter Store_Code' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Is_Store_Open" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ g.Session:json_store_open NE 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_MaintenanceMode_Bypass" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Function EQ 'PageBuilderPage_Preview' }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_MaintenanceMode_Bypass_PageBuilderPage_Preview() }">
	<MvELSEIF EXPR = "{ g.Function EQ 'Theme_Preview' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Feature_PGB_JSON ].JSON_MaintenanceMode_Bypass_Theme_Preview() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_MaintenanceMode_StoreClosed" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Store:mnt_time LE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT ISNULL g.Store:mnt_ips }">
		<MvIF EXPR = "{ [ g.Library_Utilities ].IP_In_CIDR_IP_List( s.remote_addr, g.Store:mnt_ips ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ s.time_t GE g.Store:mnt_time }">
		<MvIF EXPR = "{ JSON_MaintenanceMode_Bypass() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_MaintenanceMode_DisallowNewBaskets" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Store:mnt_time LE 0 }">												<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ ( s.time_t + ( g.Store:mnt_no_new * 60 ) ) LT g.Store:mnt_time }">	<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT ISNULL g.Store:mnt_ips }">
		<MvIF EXPR = "{ [ g.Library_Utilities ].IP_In_CIDR_IP_List( s.remote_addr, g.Store:mnt_ips ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_MaintenanceMode_Bypass() }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Array_String" PARAMETERS = "delimited, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output"					VALUE = "">

	<MvIF EXPR = "{ ISNULL l.delimited }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ miva_variable_type( l.delimited ) EQ 'ARRAY' }">
		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.delimited">
			<MvASSIGN NAME = "l.output_count"	VALUE = "{ miva_array_insert( l.output, JSON_Decode( l.element ), -1 ) }">
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = "{ l.output_count }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>
		<MvASSIGN NAME = "l.end_pos"			VALUE = "{ '|' IN l.delimited }">

		<MvWHILE EXPR = "{ l.end_pos }">
			<MvASSIGN NAME = "l.output_pos"		VALUE = "{ l.output_pos + 1 }">
			<MvASSIGN NAME = "l.output" INDEX = "{ l.output_pos }" VALUE = "{ JSON_Decode( decodeattribute( substring_var( l.delimited, 1, l.end_pos - 1 ) ) ) }">

			<MvASSIGN NAME = "l.delimited"		VALUE = "{ substring_var( l.delimited, l.end_pos + 1, len_var( l.delimited ) - l.end_pos ) }">
			<MvASSIGN NAME = "l.end_pos"		VALUE = "{ '|' IN l.delimited }">
		</MvWHILE>

		<MvASSIGN NAME = "l.output_pos"			VALUE = "{ l.output_pos + 1 }">
		<MvASSIGN NAME = "l.output" INDEX = "{ l.output_pos }" VALUE = "{ JSON_Decode( decodeattribute( l.delimited ) ) }">

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Array_Integer" PARAMETERS = "delimited, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output"					VALUE = "">

	<MvIF EXPR = "{ ISNULL l.delimited }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ miva_variable_type( l.delimited ) EQ 'ARRAY' }">
		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.delimited">
			<MvASSIGN NAME = "l.output_count"	VALUE = "{ miva_array_insert( l.output, int( l.element ), -1 ) }">
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = "{ l.output_count }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>
		<MvASSIGN NAME = "l.end_pos"			VALUE = "{ '|' IN l.delimited }">

		<MvWHILE EXPR = "{ l.end_pos }">
			<MvASSIGN NAME = "l.output_pos"		VALUE = "{ l.output_pos + 1 }">
			<MvASSIGN NAME = "l.output" INDEX = "{ l.output_pos }" VALUE = "{ int( decodeattribute( substring_var( l.delimited, 1, l.end_pos - 1 ) ) ) }">

			<MvASSIGN NAME = "l.delimited"		VALUE = "{ substring_var( l.delimited, l.end_pos + 1, len_var( l.delimited ) - l.end_pos ) }">
			<MvASSIGN NAME = "l.end_pos"		VALUE = "{ '|' IN l.delimited }">
		</MvWHILE>

		<MvASSIGN NAME = "l.output_pos"							VALUE = "{ l.output_pos + 1 }">
		<MvASSIGN NAME = "l.output" INDEX = "{ l.output_pos }"	VALUE = "{ int( l.delimited ) }">

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Array_Rounded" PARAMETERS = "delimited, output var, digits" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output"					VALUE = "">

	<MvIF EXPR = "{ ISNULL l.delimited }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ miva_variable_type( l.delimited ) EQ 'ARRAY' }">
		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.delimited">
			<MvASSIGN NAME = "l.output_count"	VALUE = "{ miva_array_insert( l.output, l.element ROUND l.digits, -1 ) }">
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = "{ l.output_count }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>
		<MvASSIGN NAME = "l.end_pos"			VALUE = "{ '|' IN l.delimited }">

		<MvWHILE EXPR = "{ l.end_pos }">
			<MvASSIGN NAME = "l.output_pos"		VALUE = "{ l.output_pos + 1 }">
			<MvASSIGN NAME = "l.output" INDEX = "{ l.output_pos }" VALUE = "{ decodeattribute( substring_var( l.delimited, 1, l.end_pos - 1 ) ) ROUND l.digits }">

			<MvASSIGN NAME = "l.delimited"		VALUE = "{ substring_var( l.delimited, l.end_pos + 1, len_var( l.delimited ) - l.end_pos ) }">
			<MvASSIGN NAME = "l.end_pos"		VALUE = "{ '|' IN l.delimited }">
		</MvWHILE>

		<MvASSIGN NAME = "l.output_pos"							VALUE = "{ l.output_pos + 1 }">
		<MvASSIGN NAME = "l.output" INDEX = "{ l.output_pos }"	VALUE = "{ decodeattribute( l.delimited ) ROUND l.digits }">

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Array_Coalesce_String" PARAMETERS = "delimited, output var, member" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.delimited }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ miva_variable_type( l.delimited ) EQ 'ARRAY' }">
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>

		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.delimited">
			<MvASSIGNARRAY NAME = "l.output"	VALUE = "{ JSON_Decode( l.element ) }">
				<MvDIMENSION INDEX = "{ ++l.output_pos }">
				<MvMEMBER NAME = "{ l.member }">
			</MvASSIGNARRAY>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>
		<MvASSIGN NAME = "l.end_pos"			VALUE = "{ '|' IN l.delimited }">

		<MvWHILE EXPR = "{ l.end_pos }">
			<MvASSIGN NAME = "l.output_pos"		VALUE = "{ l.output_pos + 1 }">

			<MvASSIGNARRAY NAME = "l.output"	VALUE = "{ JSON_Decode( decodeattribute( substring_var( l.delimited, 1, l.end_pos - 1 ) ) ) }">
				<MvDIMENSION INDEX = "{ l.output_pos }">
				<MvMEMBER NAME = "{ l.member }">
			</MvASSIGNARRAY>

			<MvASSIGN NAME = "l.delimited"		VALUE = "{ substring_var( l.delimited, l.end_pos + 1, len_var( l.delimited ) - l.end_pos ) }">
			<MvASSIGN NAME = "l.end_pos"		VALUE = "{ '|' IN l.delimited }">
		</MvWHILE>

		<MvASSIGN NAME = "l.output_pos"			VALUE = "{ l.output_pos + 1 }">
		<MvASSIGNARRAY NAME = "l.output"		VALUE = "{ JSON_Decode( decodeattribute( l.delimited ) ) }">
			<MvDIMENSION INDEX = "{ l.output_pos }">
			<MvMEMBER NAME = "{ l.member }">
		</MvASSIGNARRAY>

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Array_Coalesce_Integer" PARAMETERS = "delimited, output var, member" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.delimited }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ miva_variable_type( l.delimited ) EQ 'ARRAY' }">
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>

		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.delimited">
			<MvASSIGNARRAY NAME = "l.output"	VALUE = "{ int( l.element ) }">
				<MvDIMENSION INDEX = "{ ++l.output_pos }">
				<MvMEMBER NAME = "{ l.member }">
			</MvASSIGNARRAY>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>
		<MvASSIGN NAME = "l.end_pos"			VALUE = "{ '|' IN l.delimited }">

		<MvWHILE EXPR = "{ l.end_pos }">
			<MvASSIGN NAME = "l.output_pos"		VALUE = "{ l.output_pos + 1 }">

			<MvASSIGNARRAY NAME = "l.output"	VALUE = "{ int( decodeattribute( substring_var( l.delimited, 1, l.end_pos - 1 ) ) ) }">
				<MvDIMENSION INDEX = "{ l.output_pos }">
				<MvMEMBER NAME = "{ l.member }">
			</MvASSIGNARRAY>

			<MvASSIGN NAME = "l.delimited"		VALUE = "{ substring_var( l.delimited, l.end_pos + 1, len_var( l.delimited ) - l.end_pos ) }">
			<MvASSIGN NAME = "l.end_pos"		VALUE = "{ '|' IN l.delimited }">
		</MvWHILE>

		<MvASSIGN NAME = "l.output_pos"			VALUE = "{ l.output_pos + 1 }">
		<MvASSIGNARRAY NAME = "l.output"		VALUE = "{ int( decodeattribute( l.delimited ) ) }">
			<MvDIMENSION INDEX = "{ l.output_pos }">
			<MvMEMBER NAME = "{ l.member }">
		</MvASSIGNARRAY>

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Array_Coalesce_Rounded" PARAMETERS = "delimited, output var, member, digits" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.delimited }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ miva_variable_type( l.delimited ) EQ 'ARRAY' }">
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>

		<MvFOREACH ITERATOR = "l.element" ARRAY = "l.delimited">
			<MvASSIGNARRAY NAME = "l.output"	VALUE = "{ l.element ROUND l.digits }">
				<MvDIMENSION INDEX = "{ ++l.output_pos }">
				<MvMEMBER NAME = "{ l.member }">
			</MvASSIGNARRAY>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	<MvELSE>
		<MvASSIGN NAME = "l.output_pos"			VALUE = 0>
		<MvASSIGN NAME = "l.end_pos"			VALUE = "{ '|' IN l.delimited }">

		<MvWHILE EXPR = "{ l.end_pos }">
			<MvASSIGN NAME = "l.output_pos"		VALUE = "{ l.output_pos + 1 }">

			<MvASSIGNARRAY NAME = "l.output"	VALUE = "{ decodeattribute( substring_var( l.delimited, 1, l.end_pos - 1 ) ) ROUND l.digits }">
				<MvDIMENSION INDEX = "{ l.output_pos }">
				<MvMEMBER NAME = "{ l.member }">
			</MvASSIGNARRAY>

			<MvASSIGN NAME = "l.delimited"		VALUE = "{ substring_var( l.delimited, l.end_pos + 1, len_var( l.delimited ) - l.end_pos ) }">
			<MvASSIGN NAME = "l.end_pos"		VALUE = "{ '|' IN l.delimited }">
		</MvWHILE>

		<MvASSIGN NAME = "l.output_pos"			VALUE = "{ l.output_pos + 1 }">
		<MvASSIGNARRAY NAME = "l.output"		VALUE = "{ decodeattribute( l.delimited ) ROUND l.digits }">
			<MvDIMENSION INDEX = "{ l.output_pos }">
			<MvMEMBER NAME = "{ l.member }">
		</MvASSIGNARRAY>

		<MvFUNCTIONRETURN VALUE = "{ l.output_pos }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Passphrase_Index" PARAMETERS = "raw_key_ids var, raw_passphrases var, index var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.key_count"			VALUE = "{ JSON_Array_Integer( l.raw_key_ids, l.key_ids ) }">
	<MvASSIGN NAME = "l.passphrase_count"	VALUE = "{ JSON_Array_String( l.raw_passphrases, l.passphrases ) }">

	<MvFOR INDEX = "l.pos" COUNT = "{ l.key_count }">
		<MvASSIGN NAME = "l.index" INDEX = "{ l.key_ids[ l.pos ] }" VALUE = "{ l.passphrases[ l.pos ] }">
	</MvFOR>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ArrayElement_Start" PARAMETERS = "count var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.count }">
		<MvEVAL EXPR = ",">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "{ l.count + 1 }">
	<MvEVAL EXPR = "\{">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ArrayElement_End" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "}">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Output" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ miva_json_encode( l.value, 'pretty' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_DateTime" PARAMETERS = "time_t" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	{
		"time_t":	<MvEVAL EXPR = "{ int( l.time_t ) }">,
		"year":		<MvEVAL EXPR = "{ time_t_year( l.time_t, g.Merchant_Local_Timezone ) }">,
		"month":	<MvEVAL EXPR = "{ time_t_month( l.time_t, g.Merchant_Local_Timezone ) }">,
		"day":		<MvEVAL EXPR = "{ time_t_dayofmonth( l.time_t, g.Merchant_Local_Timezone ) }">,
		"hour":		<MvEVAL EXPR = "{ time_t_hour( l.time_t, g.Merchant_Local_Timezone ) }">,
		"minute":	<MvEVAL EXPR = "{ time_t_min( l.time_t, g.Merchant_Local_Timezone ) }">,
		"second":	<MvEVAL EXPR = "{ time_t_sec( l.time_t, g.Merchant_Local_Timezone ) }">,
		"timezone":	<MvEVAL EXPR = "{ timezone() }">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Copy_Parameter" PARAMETERS = "struct var, member" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Copy from a JSON input structure to a global variable, registering the variable as a session parameter
	| which will be cleared by JSON_Clear_Parameters.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.member"				VALUE = "{ tolower( l.member ) }">

	<MvIF EXPR = "{ miva_array_search( g.Session:special_globals, 1, l.special_global, '( l.member EQ l.special_global ) OR ( ( ( l.special_global $ \':\' ) IN l.member ) EQ 1 ) OR ( ( ( l.special_global $ \'[\' ) IN l.member ) EQ 1 )' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.struct">
		<MvMEMBER NAME = "{ l.member }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "{ 'g.' $ l.member }"	VALUE = "{ l.value }">

	<MvIF EXPR = "{ NOT miva_array_search( g.Session:parameters, 1, l.existing_param, 'l.existing_param EQ l.member' ) }">
		<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert( g.Session:parameters, l.member, -1 ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Copy_Parameters" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.param" ARRAY = "l.params" COUNT = "{ miva_struct_members( s.json_data, l.params ) }">
		<MvEVAL EXPR = "{ JSON_Input_Copy_Parameter( s.json_data, l.param ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Clear_Parameters" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.param" ARRAY = "g.Session:parameters">
		<MvIF EXPR = "{ NOT miva_array_search( g.Session:special_globals, 1, l.special_global, '( l.param EQ l.special_global ) OR ( ( ( l.special_global $ \':\' ) IN l.param ) EQ 1 ) OR ( ( ( l.special_global $ \'[\' ) IN l.param ) EQ 1 )' ) }">
			<MvASSIGN NAME = "{ 'g.' $ l.param }"	VALUE = "">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "g.Session:parameters"			VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Copy_Field" PARAMETERS = "struct var, member" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Copy from a JSON input structure to a global variable, registering the variable as a field which will be cleared
	| by JSON_Clear_Fields.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.member"				VALUE = "{ tolower( l.member ) }">

	<MvIF EXPR = "{ miva_array_search( g.Session:special_globals, 1, l.special_global, '( l.member EQ l.special_global ) OR ( ( ( l.special_global $ \':\' ) IN l.member ) EQ 1 ) OR ( ( ( l.special_global $ \'[\' ) IN l.member ) EQ 1 )' ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.struct">
		<MvMEMBER NAME = "{ l.member }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "{ 'g.' $ l.member }"	VALUE = "{ l.value }">

	<MvIF EXPR = "{ NOT miva_array_search( g.Session:json_fields, 1, l.existing_param, 'l.existing_field EQ l.member' ) }">
		<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert( g.Session:json_fields, l.member, -1 ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Copy_Fields" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ miva_struct_members( s.json_data, l.fields ) }">
		<MvEVAL EXPR = "{ JSON_Input_Copy_Field( s.json_data, l.field ) }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ miva_struct_members( g.Session:json_api_operation, l.fields ) }">
		<MvEVAL EXPR = "{ JSON_Input_Copy_Field( g.Session:json_api_operation, l.field ) }">
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ miva_struct_members( g.Session:json_api_iteration, l.fields ) }">
		<MvEVAL EXPR = "{ JSON_Input_Copy_Field( g.Session:json_api_iteration, l.field ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Clear_Fields" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.field" ARRAY = "g.Session:json_fields">
		<MvIF EXPR = "{ NOT miva_array_search( g.Session:special_globals, 1, l.special_global, '( l.field EQ l.special_global ) OR ( ( ( l.special_global $ \':\' ) IN l.field ) EQ 1 ) OR ( ( ( l.special_global $ \'[\' ) IN l.field ) EQ 1 )' ) }">
			<MvASSIGN NAME = "{ 'g.' $ l.field }"	VALUE = "">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "g.Session:json_fields"		VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Retrieve_Raw" PARAMETERS = "param, value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_member_exists( g.Session:json_api_iteration, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.input_value"	VARIABLE = "g.Session:json_api_iteration">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSEIF EXPR = "{ miva_member_exists( g.Session:json_api_operation, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.input_value"	VARIABLE = "g.Session:json_api_operation">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSEIF EXPR = "{ miva_member_exists( s.json_data, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.input_value"	VARIABLE = "s.json_data">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSE>
		<MvASSIGN NAME = "l.param"					VALUE = "{ tolower( l.param ) }">

		<MvIF EXPR = "{ NOT miva_array_search( g.Session:parameters, 1, l.existing_param, 'l.existing_param EQ l.param' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvREFERENCE NAME = "l.input_value"			VARIABLE = "{ 'g.' $ l.param }">
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ l.input_value }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Retrieve" PARAMETERS = "param, value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ JSON_Decode( l.value ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Retrieve_Integer" PARAMETERS = "param, value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.value" VALUE = "{ int( l.value ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Exists" PARAMETERS = "param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_member_exists( g.Session:json_api_iteration, l.param ) }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ miva_member_exists( g.Session:json_api_operation, l.param ) }">	<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ miva_member_exists( s.json_data, l.param ) }">					<MvFUNCTIONRETURN VALUE = 1>
	<MvELSE>
		<MvASSIGN NAME = "l.param"					VALUE = "{ tolower( l.param ) }">

		<MvIF EXPR = "{ miva_array_search( g.Session:parameters, 1, l.existing_param, 'l.existing_param EQ l.param' ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvCOMMENT>
|
| JSON_Input_xxx: Validate a parameter and return its result given the specified criteria
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Input_DateTime" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.input_data ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ miva_variable_type( l.input_data ) NE 'STRUCTURE' }">
		<MvIF EXPR = "{ isdigit( l.input_data ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Integer( l.required, l.param, l.output ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Timestamp_RFC3339_To_Time( l.input_data, l.output ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Structure( l.required, l.param, l.input_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.hour"		VALUE = 0>
	<MvASSIGN NAME = "l.minute"		VALUE = 0>
	<MvASSIGN NAME = "l.second"		VALUE = 0>
	<MvASSIGN NAME = "l.timezone"	VALUE = "local">

	<MvIF EXPR = "{ NOT JSON_Input_Element_Integer( l.input_data, 'R', 'year',		l.year )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'R', 'month',		l.month )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'R', 'day',		l.day )		OR
					NOT JSON_Input_Element_Integer( l.input_data, 'O', 'hour',		l.hour )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'O', 'minute',	l.minute )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'O', 'second',	l.second )	OR
					NOT JSON_Input_Element_Number(	l.input_data, 'O', 'timezone',	l.timezone, 4, 2 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.year, 1970, 2038 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'year',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.month, 1, 12 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'month',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.day, 1, 31 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'day',		g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.hour, 0, 23 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'hour',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.minute, 0, 59 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'minute',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.second, 0, 59 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'second',	g.Validation_Message ) }"> </MvIF>

	<MvASSIGN NAME = "l.timezone_part_count"	VALUE = "{ miva_splitstring( l.timezone, '.', l.timezone_parts, '' ) }">
	<MvASSIGN NAME = "l.timezone_hour"			VALUE = "{ l.timezone_parts[ 1 ] }">
	<MvASSIGN NAME = "l.timezone_minute"		VALUE = "{ l.timezone_parts[ 2 ] }">

	<MvIF EXPR = "{ l.timezone_part_count EQ 1 }">
		<MvIF EXPR = "{ l.timezone NE 'local' AND NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.timezone, -12, 14 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', g.Validation_Message ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.timezone_hour, -12, 14 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', g.Validation_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ ( l.timezone_minute NE 0 ) AND
						( l.timezone_minute NE 5 ) AND
						( l.timezone_minute NE 75 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', 'Values to the right of the decimal must be 0, 5, or 75' ) }">
		</MvIF>

		<MvIF EXPR = "{ ( l.timezone_hour EQ 14 AND l.timezone_minute GT 0 ) OR
						( l.timezone_hour EQ -12 AND l.timezone_minute GT 0 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', 'Please specify a number between -12 and 14' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.calculated_date" VALUE = "{ mktime_t( l.year, l.month, l.day, l.hour, l.minute, l.second, l.timezone ) }">

	<MvIF EXPR = "{ l.calculated_date EQ -1 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Please specify a valid date' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output"	VALUE = "{ l.calculated_date }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Weight" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.input_data ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ miva_variable_type( l.input_data ) NE 'STRUCTURE' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Number( l.required, l.param, l.output, 16, 8 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Structure( l.required, l.param, l.input_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Element_List(	l.input_data, 'R', 'unit',	l.unit, 'oz,lb,g,kg', 'oz,lb,g,kg' ) OR
					NOT JSON_Input_Element_Number(	l.input_data, 'R', 'value',	l.value, 16, 8 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.output" VALUE = "{ [ g.Library_Utilities ].Convert_Weight( l.value, l.unit, g.Store:wtunitcode ) }">

	<MvCOMMENT>
	|
	| The converted weight needs to be validated that it is still within the high precision weight
	| range as converting from one unit to another, such as kg to oz, can cause converted weight
	| to be much larger than the input weight.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_Decimal( l.output, 16, 8 ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'The converted weight is outside the range of supported precision' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Filter" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.output ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.output ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Text" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.colon_pos"	VALUE = "{ ':' IN l.required }">
	<MvASSIGN NAME = "l.max_length"	VALUE = -1>

	<MvIF EXPR = "{ l.colon_pos }">
		<MvASSIGN NAME = "l.max_length" VALUE = "{ substring_var( l.required, l.colon_pos + 1, len_var( l.required ) - l.colon_pos ) }">
		<MvASSIGN NAME = "l.required"	VALUE = "{ substring_var( l.required, 1, l.colon_pos - 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( l.param, l.output ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.output }">
		<MvIF EXPR = "{ l.required EQ 'R' }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Value may not be blank' ) }">
		<MvELSEIF EXPR = "{ l.required EQ 'O' }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'If specified, the value may not be blank' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.max_length NE -1 }">
		<MvIF EXPR = "{ len_var( l.output ) GT l.max_length }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Value must be ' $ l.max_length $ ' characters or less' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Binary" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.colon_pos"		VALUE = "{ ':' IN l.required }">
	<MvASSIGN NAME = "l.max_length"		VALUE = -1>

	<MvIF EXPR = "{ l.colon_pos }">
		<MvASSIGN NAME = "l.max_length" VALUE = "{ substring_var( l.required, l.colon_pos + 1, len_var( l.required ) - l.colon_pos ) }">
		<MvASSIGN NAME = "l.required"	VALUE = "{ substring_var( l.required, 1, l.colon_pos - 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( l.param, l.output ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.output }">
		<MvIF EXPR = "{ l.required EQ 'R' }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Value may not be blank' ) }">
		<MvELSEIF EXPR = "{ l.required EQ 'O' }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'If specified, the value may not be blank' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ s.HTTP_X_MIVA_API_BINARY_ENCODING EQ 'base64' }">
		<MvASSIGN NAME = "l.output"		VALUE = "{ crypto_base64_decode( l.output ) }">
	</MvIF>

	<MvIF EXPR = "{ l.max_length NE -1 }">
		<MvIF EXPR = "{ len_var( l.output ) GT l.max_length }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Value must be ' $ l.max_length $ ' characters or less' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Code" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Text( l.required, l.param, l.output ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( l.param ) AND  ( NOT ISNULL l.output ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.output ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Number" PARAMETERS = "required, param, output var, precision, scale" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.colon_pos"	VALUE = "{ ':' IN l.required }">
	<MvASSIGN NAME = "l.flag"		VALUE = "">

	<MvIF EXPR = "{ l.colon_pos }">
		<MvASSIGN NAME = "l.flag"		VALUE = "{ substring_var( l.required, l.colon_pos + 1, len_var( l.required ) - l.colon_pos ) }">
		<MvASSIGN NAME = "l.required"	VALUE = "{ substring_var( l.required, 1, l.colon_pos - 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( l.param, l.output ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.output }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'The value may not be blank' ) }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'If specified, the value may not be blank' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.precision EQ -1 }">
		<MvIF EXPR = "{ l.flag EQ 'nonneg' }">			<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( l.output ) }">
		<MvELSEIF EXPR = "{ l.flag EQ 'positive' }">	<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.output ) }">
		<MvELSE>										<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber( l.output ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ l.flag EQ 'nonneg' }">			<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_FloatingPoint_Length_NonNegative_Required( l.output, l.precision, l.scale ) }">
		<MvELSEIF EXPR = "{ l.flag EQ 'positive' }">	<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_FloatingPoint_Length_Positive_Required( l.output, l.precision, l.scale ) }">
		<MvELSE>										<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_Decimal( l.output, l.precision, l.scale ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.valid }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, g.Validation_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Integer" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Number( l.required, l.param, l.output, -1, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Currency" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Number( l.required, l.param, l.output, 10, 2 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Price" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Number( l.required, l.param, l.output, 16, 8 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Price" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Number( l.element, l.required, l.param, l.output, 16, 8 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Boolean" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( l.param, l.input_value ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.value"		VALUE = "{ tolower( l.input_value ) }">

	<MvIF EXPR = "{ ( l.value EQ 'yes' ) OR ( l.value EQ 'true' ) OR ( ( 'x' $ l.value ) EQ 'x1' ) }">
		<MvASSIGN NAME = "l.output"	VALUE = 1>
	<MvELSEIF EXPR = "{ ( l.value EQ 'no' ) OR ( l.value EQ 'false' ) OR ( ( 'x' $ l.value ) EQ 'x0' ) }">
		<MvASSIGN NAME = "l.output"	VALUE = 0>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Boolean values must be Yes/No, True/False, or 0/1' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_List" PARAMETERS = "required, param, output var, param_values, result_values" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( l.param, l.input_value ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.value"				VALUE = "{ tolower( l.input_value ) }">

	<MvASSIGN NAME = "l.param_value_count"	VALUE = "{ miva_splitstring( l.param_values, ',', l.param_value_array, 'trim,lower' ) }">
	<MvASSIGN NAME = "l.result_value_count"	VALUE = "{ miva_splitstring( l.result_values, ',', l.result_value_array, 'trim' ) }">

	<MvASSIGN NAME = "l.param_pos"			VALUE = "{ miva_array_search( l.param_value_array, 1, l.param_value, 'l.param_value EQ l.value' ) }">

	<MvIF EXPR = "{ l.param_pos EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Must be one of: ' $ l.param_values ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output"				VALUE = "{ l.result_value_array[ l.param_pos ] }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
| JSON_Input_xxx_Array: Process a single parameter that is passed as an array, validating each member against the specified
|						criteria.
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Input_Text_Array" PARAMETERS = "required, param, output var, output_count var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.colon_pos"	VALUE = "{ ':' IN l.required }">
	<MvASSIGN NAME = "l.max_length"	VALUE = -1>

	<MvIF EXPR = "{ l.colon_pos }">
		<MvASSIGN NAME = "l.max_length" VALUE = "{ substring_var( l.required, l.colon_pos + 1, len_var( l.required ) - l.colon_pos ) }">
		<MvASSIGN NAME = "l.required"	VALUE = "{ substring_var( l.required, 1, l.colon_pos - 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.array ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.output"				VALUE = "">
	<MvASSIGN NAME = "l.output_count"		VALUE = 0>

	<MvIF EXPR = "{ miva_variable_type( l.array ) EQ 'ARRAY' }">
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array">
			<MvASSIGN NAME = "l.item"		VALUE = "{ JSON_Decode( l.item ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ ISNULL l.array }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSE>
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array" COUNT = "{ miva_splitstring( l.array, '|', l.array, '' ) }">
			<MvASSIGN NAME = "l.item"		VALUE = "{ JSON_Decode( decodeattribute( l.item ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvASSIGN NAME = "l.result"				VALUE = 1>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.array">
		<MvIF EXPR = "{ ISNULL l.value }">
			<MvIF EXPR = "{ l.required EQ 'R' }">
				<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Input_Error( l.param $ '[' $ l.pos $ ']', 'The value may not be blank' ) }">
			<MvELSEIF EXPR = "{ l.required EQ 'O' }">
				<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Input_Error( l.param $ '[' $ l.pos $ ']', 'If specified, the value may not be blank' ) }">
			</MvIF>

			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ l.max_length NE -1 }">
			<MvIF EXPR = "{ len_var( l.value ) GT l.max_length }">
				<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Input_Error( l.param $ '[' $ l.pos $ ']', 'Value must be ' $ l.max_length $ ' characters or less' ) }">
				
				<MvFOREACHCONTINUE>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.output_count"	VALUE = "{ miva_array_insert_var( l.output, l.value, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Number_Array" PARAMETERS = "required, param, output var, output_count var, precision, scale" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.array ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.output"				VALUE = "">
	<MvASSIGN NAME = "l.output_count"		VALUE = 0>

	<MvIF EXPR = "{ miva_variable_type( l.array ) EQ 'ARRAY' }">
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array">
			<MvASSIGN NAME = "l.item"		VALUE = "{ JSON_Decode( l.item ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ ISNULL l.array }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSE>
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array" COUNT = "{ miva_splitstring( l.array, '|', l.array, '' ) }">
			<MvASSIGN NAME = "l.item"		VALUE = "{ JSON_Decode( decodeattribute( l.item ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvASSIGN NAME = "l.result"				VALUE = 1>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.array">
		<MvIF EXPR = "{ ISNULL l.value }">
			<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
				<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Input_Error( l.param $ '[' $ l.pos $ ']', 'The value may not be blank' ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Input_Error( l.param $ '[' $ l.pos $ ']', 'If specified, the value may not be blank' ) }">
			</MvIF>

			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.precision EQ -1 }">
			<MvASSIGN NAME = "l.valid"		VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber( l.value ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.valid"		VALUE = "{ [ g.Module_Admin ].Validate_Decimal( l.value, l.precision, l.scale ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.valid }">
			<MvASSIGN NAME = "l.result"		VALUE = "{ JSON_Input_Error( l.param $ '[' $ l.pos $ ']', g.Validation_Message ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.output_count"	VALUE = "{ miva_array_insert_var( l.output, l.value, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Integer_Array" PARAMETERS = "required, param, output var, output_count var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Number_Array( l.required, l.param, l.output, l.output_count, -1, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_List_Array" PARAMETERS = "required, param, output var, output_count var, param_values, result_values" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Retrieve_Raw( l.param, l.array ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.output"					VALUE = "">
	<MvASSIGN NAME = "l.output_count"			VALUE = 0>

	<MvIF EXPR = "{ miva_variable_type( l.array ) EQ 'ARRAY' }">
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array">
			<MvASSIGN NAME = "l.item"			VALUE = "{ JSON_Decode( l.item ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ ISNULL l.array }">
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSE>
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array" COUNT = "{ miva_splitstring( l.array, '|', l.array, '' ) }">
			<MvASSIGN NAME = "l.item"			VALUE = "{ JSON_Decode( decodeattribute( l.item ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvASSIGN NAME = "l.result"					VALUE = 1>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.array">
		<MvASSIGN NAME = "l.value"				VALUE = "{ tolower( l.value ) }">
		<MvASSIGN NAME = "l.param_value_count"	VALUE = "{ miva_splitstring( l.param_values, ',', l.param_value_array, 'trim,lower' ) }">
		<MvASSIGN NAME = "l.result_value_count"	VALUE = "{ miva_splitstring( l.result_values, ',', l.result_value_array, 'trim' ) }">
		<MvASSIGN NAME = "l.param_pos"			VALUE = "{ miva_array_search( l.param_value_array, 1, l.param_value, 'l.param_value EQ l.value' ) }">

		<MvIF EXPR = "{ l.param_pos EQ 0 }">
			<MvASSIGN NAME = "l.result"			VALUE = "{ JSON_Input_Error( l.param $ '[' $ l.pos $ ']', 'Must be one of: ' $ l.param_values ) }">

			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.output_count"		VALUE = "{ miva_array_insert_var( l.output, l.result_value_array[ l.param_pos ], -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvCOMMENT>
|
| JSON_Input_Array/JSON_Input_Element_xxx: Process an array of structures, validating individual members given the specified criteria
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Input_Array" PARAMETERS = "param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_member_exists( g.Session:json_api_iteration, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.array"	VARIABLE = "g.Session:json_api_iteration">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSEIF EXPR = "{ miva_member_exists( g.Session:json_api_operation, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.array"	VARIABLE = "g.Session:json_api_operation">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSEIF EXPR = "{ miva_member_exists( s.json_data, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.array"	VARIABLE = "s.json_data">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSE>
		<MvASSIGN NAME = "l.param_lower"	VALUE = "{ tolower( l.param ) }">

		<MvIF EXPR = "{ NOT miva_array_search( g.Session:parameters, 1, l.existing_param, 'l.existing_param EQ l.param_lower' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvREFERENCE NAME = "l.array"		VARIABLE = "{ 'g.' $ l.param }">
	</MvIF>

	<MvASSIGN NAME = "l.output"				VALUE = "">
	<MvASSIGN NAME = "l.output_count"		VALUE = 0>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.array_element" ARRAY = "l.array">
		<MvREFERENCEARRAY NAME = "l.element" VARIABLE = "l.output">
			<MvDIMENSION INDEX = "{ ++l.output_count }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.element:prefix"	VALUE = "{ l.param $ '[' $ l.pos $ ']' }">

		<MvREFERENCEARRAY NAME = "l.element:var" VARIABLE = "l.array">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.output_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Structure" PARAMETERS = "required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_member_exists( g.Session:json_api_iteration, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.structure"	VARIABLE = "g.Session:json_api_iteration">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSEIF EXPR = "{ miva_member_exists( g.Session:json_api_operation, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.structure"	VARIABLE = "g.Session:json_api_operation">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSEIF EXPR = "{ miva_member_exists( s.json_data, l.param ) }">
		<MvREFERENCEARRAY NAME = "l.structure"	VARIABLE = "s.json_data">
			<MvMEMBER NAME = "{ l.param }">
		</MvREFERENCEARRAY>
	<MvELSE>
		<MvASSIGN NAME = "l.param_lower"		VALUE = "{ tolower( l.param ) }">

		<MvIF EXPR = "{ NOT miva_array_search( g.Session:parameters, 1, l.existing_param, 'l.existing_param EQ l.param_lower' ) }">
			<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.param, 'Missing required parameter' ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvREFERENCE NAME = "l.structure"		VARIABLE = "{ 'g.' $ l.param }">
	</MvIF>

	<MvASSIGN NAME = "l.output"					VALUE = "">
	<MvASSIGN NAME = "l.output:prefix"			VALUE = "{ l.param }">
	<MvREFERENCE NAME = "l.output:var"			VARIABLE = "l.structure">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Exists" PARAMETERS = "element var, param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_member_exists( l.element:var, l.param ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Retrieve_Raw" PARAMETERS = "element var, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT miva_member_exists( l.element:var, l.param ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.element:var">
		<MvMEMBER NAME = "{ l.param }">
	</MvREFERENCEARRAY>

	<MvASSIGN NAME = "l.output" VALUE = "{ l.value }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Retrieve" PARAMETERS = "element var, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve_Raw( l.element, l.param, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.output" VALUE = "{ JSON_Decode( l.value ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Retrieve_Binary" PARAMETERS = "element var, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve_Raw( l.element, l.param, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ s.HTTP_X_MIVA_API_BINARY_ENCODING EQ 'base64' }">	<MvASSIGN NAME = "l.output" VALUE = "{ crypto_base64_decode( l.value ) }">
	<MvELSE>															<MvASSIGN NAME = "l.output" VALUE = "{ JSON_Decode( l.value ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Value" PARAMETERS = "element var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Decode( l.element:var ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Text" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.colon_pos"		VALUE = "{ ':' IN l.required }">
	<MvASSIGN NAME = "l.max_length"		VALUE = -1>

	<MvIF EXPR = "{ l.colon_pos }">
		<MvASSIGN NAME = "l.max_length"	VALUE = "{ substring_var( l.required, l.colon_pos + 1, len_var( l.required ) - l.colon_pos ) }">
		<MvASSIGN NAME = "l.required"	VALUE = "{ substring_var( l.required, 1, l.colon_pos - 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve( l.element, l.param, l.output ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.output }">
		<MvIF EXPR = "{ l.required EQ 'R' }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Value may not be blank' ) }">
		<MvELSEIF EXPR = "{ l.required EQ 'O' }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'If specified, the value may not be blank' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ l.max_length NE -1 }">
		<MvIF EXPR = "{ len_var( l.output ) GT l.max_length }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Value must be ' $ l.max_length $ ' characters or less' ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Code" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Text( l.element, l.required, l.param, l.output ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Element_Exists( l.element, l.param ) AND ( NOT ISNULL l.output ) }"> 
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.output ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, g.Validation_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Number" PARAMETERS = "element var, required, param, output var, precision, scale" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.colon_pos"	VALUE = "{ ':' IN l.required }">
	<MvASSIGN NAME = "l.flag"		VALUE = "">

	<MvIF EXPR = "{ l.colon_pos }">
		<MvASSIGN NAME = "l.flag"		VALUE = "{ substring_var( l.required, l.colon_pos + 1, len_var( l.required ) - l.colon_pos ) }">
		<MvASSIGN NAME = "l.required"	VALUE = "{ substring_var( l.required, 1, l.colon_pos - 1 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve( l.element, l.param, l.output ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.output }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'The value may not be blank' ) }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'If specified, the value may not be blank' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.precision EQ -1 }">
		<MvIF EXPR = "{ l.flag EQ 'nonneg' }">			<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( l.output ) }">
		<MvELSEIF EXPR = "{ l.flag EQ 'positive' }">	<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.output ) }">
		<MvELSE>										<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber( l.output ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ l.flag EQ 'nonneg' }">			<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_FloatingPoint_Length_NonNegative_Required( l.output, l.precision, l.scale ) }">
		<MvELSEIF EXPR = "{ l.flag EQ 'positive' }">	<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_FloatingPoint_Length_Positive_Required( l.output, l.precision, l.scale ) }">
		<MvELSE>										<MvASSIGN NAME = "l.valid" VALUE = "{ [ g.Module_Admin ].Validate_Decimal( l.output, l.precision, l.scale ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.valid }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, g.Validation_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Currency" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Number( l.element, l.required, l.param, l.output, 10, 2 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Integer" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Number( l.element, l.required, l.param, l.output, -1, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Number_Array" PARAMETERS = "element var, required, param, output var, output_count var, precision, scale" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve_Raw( l.element, l.param, l.array ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ miva_variable_type( l.array ) EQ 'ARRAY' }">
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array">
			<MvASSIGN NAME = "l.item"		VALUE = "{ JSON_Decode( l.item ) }">
		</MvFOREACH>
	<MvELSE>
		<MvFOREACH ITERATOR = "l.item" ARRAY = "l.array" COUNT = "{ miva_splitstring( l.array, '|', l.array, '' ) }">
			<MvASSIGN NAME = "l.item"		VALUE = "{ JSON_Decode( decodeattribute( l.item ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvASSIGN NAME = "l.output"				VALUE = "">
	<MvASSIGN NAME = "l.output_count"		VALUE = 0>
	<MvASSIGN NAME = "l.result"				VALUE = 1>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.value" ARRAY = "l.array">
		<MvIF EXPR = "{ ISNULL l.value }">
			<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
				<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Input_Element_Error( l.element, l.param $ '[' $ l.pos $ ']', 'The value may not be blank' ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Input_Element_Error( l.element, l.param $ '[' $ l.pos $ ']', 'If specified, the value may not be blank' ) }">
			</MvIF>

			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.precision EQ -1 }">
			<MvASSIGN NAME = "l.valid"		VALUE = "{ [ g.Module_Admin ].Validate_WholeNumber( l.value ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.valid"		VALUE = "{ [ g.Module_Admin ].Validate_Decimal( l.value, l.precision, l.scale ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.valid }">
			<MvASSIGN NAME = "l.result"		VALUE = "{ JSON_Input_Element_Error( l.element, l.param $ '[' $ l.pos $ ']', g.Validation_Message ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.output_count"	VALUE = "{ miva_array_insert_var( l.output, l.value, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Integer_Array" PARAMETERS = "element var, required, param, output var, output_count var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Number_Array( l.element, l.required, l.param, l.output, l.output_count, -1, -1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Boolean" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve( l.element, l.param, l.input_value ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.value"		VALUE = "{ tolower( l.input_value ) }">

	<MvIF EXPR = "{ ( l.value EQ 'yes' ) OR ( l.value EQ 'true' ) OR ( ( 'x' $ l.value ) EQ 'x1' ) }">
		<MvASSIGN NAME = "l.output"	VALUE = 1>
	<MvELSEIF EXPR = "{ ( l.value EQ 'no' ) OR ( l.value EQ 'false' ) OR ( ( 'x' $ l.value ) EQ 'x0' ) }">
		<MvASSIGN NAME = "l.output"	VALUE = 0>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Boolean values must be Yes/No, True/False, or 0/1' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_DateTime" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve_Raw( l.element, l.param, l.input_data ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ miva_variable_type( l.input_data ) NE 'STRUCTURE' }">
		<MvIF EXPR = "{ isdigit( l.input_data ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Integer( l.element, l.required, l.param, l.output ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Timestamp_RFC3339_To_Time( l.input_data, l.output ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Element_Structure( l.element, l.required, l.param, l.input_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.hour"		VALUE = 0>
	<MvASSIGN NAME = "l.minute"		VALUE = 0>
	<MvASSIGN NAME = "l.second"		VALUE = 0>
	<MvASSIGN NAME = "l.timezone"	VALUE = "local">

	<MvIF EXPR = "{ NOT JSON_Input_Element_Integer( l.input_data, 'R', 'year',		l.year )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'R', 'month',		l.month )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'R', 'day',		l.day )		OR
					NOT JSON_Input_Element_Integer( l.input_data, 'O', 'hour',		l.hour )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'O', 'minute',	l.minute )	OR
					NOT JSON_Input_Element_Integer( l.input_data, 'O', 'second',	l.second )	OR
					NOT JSON_Input_Element_Number(	l.input_data, 'O', 'timezone',	l.timezone, 4, 2 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.year, 1970, 2038 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'year',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.month, 1, 12 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'month',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.day, 1, 31 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'day',		g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.hour, 0, 23 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'hour',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.minute, 0, 59 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'minute',	g.Validation_Message ) }"> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.second, 0, 59 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'second',	g.Validation_Message ) }"> </MvIF>

	<MvASSIGN NAME = "l.timezone_part_count"	VALUE = "{ miva_splitstring( l.timezone, '.', l.timezone_parts, '' ) }">
	<MvASSIGN NAME = "l.timezone_hour"			VALUE = "{ l.timezone_parts[ 1 ] }">
	<MvASSIGN NAME = "l.timezone_minute"		VALUE = "{ l.timezone_parts[ 2 ] }">

	<MvIF EXPR = "{ l.timezone_part_count EQ 1 }">
		<MvIF EXPR = "{ l.timezone NE 'local' AND NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.timezone, -12, 14 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', g.Validation_Message ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Range_Required( l.timezone_hour, -12, 14 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', g.Validation_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ ( l.timezone_minute NE 0 ) AND
						( l.timezone_minute NE 5 ) AND
						( l.timezone_minute NE 75 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', 'Values to the right of the decimal must be 0, 5, or 75' ) }">
		</MvIF>

		<MvIF EXPR = "{ ( l.timezone_hour EQ 14 AND l.timezone_minute GT 0 ) OR
						( l.timezone_hour EQ -12 AND l.timezone_minute GT 0 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_data, 'timezone', 'Please specify a number between -12 and 14' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.calculated_date" VALUE = "{ mktime_t( l.year, l.month, l.day, l.hour, l.minute, l.second, l.timezone ) }">

	<MvIF EXPR = "{ l.calculated_date EQ -1 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Please specify a valid date' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output"	VALUE = "{ l.calculated_date }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Weight" PARAMETERS = "element var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve_Raw( l.element, l.param, l.input_data ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ miva_variable_type( l.input_data ) NE 'STRUCTURE' }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Number( l.element, l.required, l.param, l.output, 16, 8 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Element_Structure( l.element, l.required, l.param, l.input_data ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Element_List(	l.input_data, 'R', 'unit',	l.unit, 'oz,lb,g,kg', 'oz,lb,g,kg' ) OR
					NOT JSON_Input_Element_Number(	l.input_data, 'R', 'value',	l.value, 16, 8 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.output" VALUE = "{ [ g.Library_Utilities ].Convert_Weight( l.value, l.unit, g.Store:wtunitcode ) }">

	<MvCOMMENT>
	|
	| The converted weight needs to be validated that it is still within the high precision weight
	| range as converting from one unit to another, such as kg to oz, can cause converted weight
	| to be much larger than the input weight.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_Decimal( l.output, 16, 8 ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'The converted weight is outside the range of supported precision' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_List" PARAMETERS = "element var, required, param, output var, param_values, result_values" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Input_Element_Retrieve( l.element, l.param, l.input_value ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.value"				VALUE = "{ tolower( l.input_value ) }">

	<MvASSIGN NAME = "l.param_value_count"	VALUE = "{ miva_splitstring( l.param_values, ',', l.param_value_array, 'trim,lower' ) }">
	<MvASSIGN NAME = "l.result_value_count"	VALUE = "{ miva_splitstring( l.result_values, ',', l.result_value_array, 'trim' ) }">

	<MvASSIGN NAME = "l.param_pos"			VALUE = "{ miva_array_search( l.param_value_array, 1, l.param_value, 'l.param_value EQ l.value' ) }">

	<MvIF EXPR = "{ l.param_pos EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.element, l.param, 'Must be one of: ' $ l.param_values ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output"				VALUE = "{ l.result_value_array[ l.param_pos ] }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Array" PARAMETERS = "parent var, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT miva_member_exists( l.parent:var, l.param ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.output"				VALUE = "">
	<MvASSIGN NAME = "l.output_count"		VALUE = 0>

	<MvREFERENCEARRAY NAME = "l.array"	VARIABLE = "l.parent:var">
		<MvMEMBER NAME = "{ l.param }">
	</MvREFERENCEARRAY>

	<MvFOREACH INDEX = "l.pos" ITERATOR = "l.array_element" ARRAY = "l.array">
		<MvREFERENCEARRAY NAME = "l.element" VARIABLE = "l.output">
			<MvDIMENSION INDEX = "{ ++l.output_count }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.element:prefix"	VALUE = "{ l.parent:prefix $ ':' $ l.param $ '[' $ l.pos $ ']' }">

		<MvREFERENCEARRAY NAME = "l.element:var" VARIABLE = "l.array">
			<MvDIMENSION INDEX = "{ l.pos }">
		</MvREFERENCEARRAY>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.output_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Structure" PARAMETERS = "parent var, required, param, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT miva_member_exists( l.parent:var, l.param ) }">
		<MvIF EXPR = "{ ( l.required EQ 'R' ) OR ( l.required EQ 'r' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.parent, l.param, 'Missing required parameter' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.output"					VALUE = "">
	<MvASSIGN NAME = "l.output:prefix"			VALUE = "{ l.parent:prefix $ ':' $ l.param }">

	<MvREFERENCEARRAY NAME = "l.output:var"	VARIABLE = "l.parent:var">
		<MvMEMBER NAME = "{ l.param }">
	</MvREFERENCEARRAY>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Structure_Members" PARAMETERS = "element var, members var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ miva_struct_members( l.element:var, l.members ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Input_Element_Error" PARAMETERS = "element var, error_field, error_message" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.error_field }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.element:prefix, l.error_message ) }">
	<MvELSE>									<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Error( l.element:prefix $ ':' $ l.error_field, l.error_message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Response_Element_FieldError" PARAMETERS = "element var, error_field, error_message" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.error_field }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( l.element:prefix, l.error_message ) }">
	<MvELSE>									<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( l.element:prefix $ ':' $ l.error_field, l.error_message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Decode" PARAMETERS = "string" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.string"				VALUE = "{ trim( l.string ) }">

	<MvIF EXPR = "{ g.UTF8 }">
		<MvFUNCTIONRETURN VALUE = "{ l.string }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Decode_ISO_8859_1( l.string ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Decode_ISO_8859_1" PARAMETERS = "string var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pos"				VALUE = 1>
	<MvASSIGN NAME = "l.length"				VALUE = "{ len_var( l.string ) }">

	<MvCAPTURE VARIABLE = "l.result">
		<MvWHILE EXPR = "{ l.pos LE l.length }">
			<MvASSIGN NAME = "l.char"			VALUE = "{ substring_var( l.string, l.pos, 1 ) }">
			<MvASSIGN NAME = "l.byte"			VALUE = "{ asciivalue( l.char ) }">

			<MvIF EXPR = "{ ( l.byte GE 192 ) AND ( l.byte LE 223 ) }">			<MvCOMMENT> UTF-8 2-byte sequence </MvCOMMENT>
				<MvASSIGN NAME = "l.char2"	VALUE = "{ substring_var( l.string, l.pos + 1, 1 ) }">
				<MvASSIGN NAME = "l.byte2"	VALUE = "{ asciivalue( l.char2 ) }">
				<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 1 }">

				<MvCOMMENT>
				|
				| UTF-8 Bytes:		110yyyyy 10xxxxxx
				| UTF-16 Pattern:	00000yyy yyxxxxxx
				|
				| If the value decodes to a single byte (high byte is 0, we pass it through).  This handles
				| iso-8859-1/windows-1252, but will not properly decode other character sets that do not have a direct
				| mapping from unicode.
				|
				</MvCOMMENT>

				<MvASSIGN NAME = "l.ub1"	VALUE = "{ ( l.byte BITAND 28 ) BITSR 2 }">
				<MvASSIGN NAME = "l.ub2"	VALUE = "{ ( ( l.byte BITAND 3 ) BITSL 6 ) BITOR
													   ( l.byte2 BITAND 63 ) }">

				<MvIF EXPR = "{ l.ub1 EQ 0 }">
					<MvEVAL EXPR = "{ asciichar( l.ub2 ) }">
				<MvELSE>
					<MvEVAL EXPR = "{ l.char }">
					<MvEVAL EXPR = "{ l.char2 }">
				</MvIF>
			<MvELSEIF EXPR = "{ ( l.byte GE 224 ) AND ( l.byte LE 239 ) }">		<MvCOMMENT> UTF-8 3-byte sequence </MvCOMMENT>
				<MvEVAL EXPR = "{ substring_var( l.string, l.pos + 1, 2 ) }">
				<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 2 }">
			<MvELSE>
				<MvEVAL EXPR = "{ l.char }">
			</MvIF>

			<MvASSIGN NAME = "l.pos"			VALUE = "{ l.pos + 1 }">
		</MvWHILE>
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Encode" PARAMETERS = "string" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ encodejavascriptstring( l.string ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Encode_Binary" PARAMETERS = "string" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ s.HTTP_X_MIVA_API_BINARY_ENCODING EQ 'base64' }">
		<MvFUNCTIONRETURN VALUE = "{ crypto_base64_encode( l.string ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ encodejavascriptstring( l.string ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Encode_ISO_8859_1" PARAMETERS = "string var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pos"				VALUE = 1>
	<MvASSIGN NAME = "l.length"				VALUE = "{ len_var( l.string ) }">

	<MvCAPTURE VARIABLE = "l.result">
		<MvWHILE EXPR = "{ l.pos LE l.length }">
			<MvASSIGN NAME = "l.char"			VALUE = "{ substring_var( l.string, l.pos, 1 ) }">
			<MvIF EXPR = "{ isdigit( l.char ) }">								<MvEVAL EXPR = "{ l.char }">
			<MvELSEIF EXPR = "{ isalpha( l.char ) }">							<MvEVAL EXPR = "{ l.char }">
			<MvELSEIF EXPR = "{ l.char IN ' .+-_,@$:' }">						<MvEVAL EXPR = "{ l.char }">
			<MvELSEIF EXPR = "{ l.char IN '"\\/' }">							<MvEVAL EXPR = "{ '\\' }">			<MvEVAL EXPR = "{ l.char }">
			<MvELSE>
				<MvASSIGN NAME = "l.byte"		VALUE = "{ asciivalue( l.char ) }">

				<MvIF EXPR = "{ l.byte EQ 8 }">									<MvEVAL EXPR = "{ '\\b' }">
				<MvELSEIF EXPR = "{ l.byte EQ 9 }">								<MvEVAL EXPR = "{ '\\t' }">
				<MvELSEIF EXPR = "{ l.byte EQ 10 }">							<MvEVAL EXPR = "{ '\\n' }">
				<MvELSEIF EXPR = "{ l.byte EQ 12 }">							<MvEVAL EXPR = "{ '\\f' }">
				<MvELSEIF EXPR = "{ l.byte EQ 13 }">							<MvEVAL EXPR = "{ '\\r' }">
				<MvELSE>														<MvEVAL EXPR = "{ '\\u00' }">		<MvEVAL EXPR = "{ JSON_Hex_Byte( l.byte ) }">
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.pos"			VALUE = "{ l.pos + 1 }">
		</MvWHILE>
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Encode_UTF8" PARAMETERS = "string var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pos"				VALUE = 1>
	<MvASSIGN NAME = "l.length"				VALUE = "{ len_var( l.string ) }">

	<MvCAPTURE VARIABLE = "l.result">
		<MvWHILE EXPR = "{ l.pos LE l.length }">
			<MvASSIGN NAME = "l.char"			VALUE = "{ substring_var( l.string, l.pos, 1 ) }">
			<MvIF EXPR = "{ isdigit( l.char ) }">									<MvEVAL EXPR = "{ l.char }">
			<MvELSEIF EXPR = "{ isalpha( l.char ) }">								<MvEVAL EXPR = "{ l.char }">
			<MvELSEIF EXPR = "{ l.char IN ' .+-_,@$:' }">							<MvEVAL EXPR = "{ l.char }">
			<MvELSEIF EXPR = "{ l.char IN '"\\/' }">								<MvEVAL EXPR = "{ '\\' }">		<MvEVAL EXPR = "{ l.char }">
			<MvELSE>
				<MvASSIGN NAME = "l.byte"		VALUE = "{ asciivalue( l.char ) }">

				<MvIF EXPR = "{ l.byte EQ 8 }">										<MvEVAL EXPR = "{ '\\b' }">
				<MvELSEIF EXPR = "{ l.byte EQ 9 }">									<MvEVAL EXPR = "{ '\\t' }">
				<MvELSEIF EXPR = "{ l.byte EQ 10 }">								<MvEVAL EXPR = "{ '\\n' }">
				<MvELSEIF EXPR = "{ l.byte EQ 12 }">								<MvEVAL EXPR = "{ '\\f' }">
				<MvELSEIF EXPR = "{ l.byte EQ 13 }">								<MvEVAL EXPR = "{ '\\r' }">
				<MvELSEIF EXPR = "{ ( l.byte GE 192 ) AND ( l.byte LE 223 ) }">		<MvCOMMENT> UTF-8 2-byte sequence </MvCOMMENT>
					<MvASSIGN NAME = "l.byte2"	VALUE = "{ asciivalue( substring_var( l.string, l.pos + 1, 1 ) ) }">
					<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 1 }">

					<MvCOMMENT>
					|
					| UTF-8 Bytes:		110yyyyy 10xxxxxx
					| UTF-16 Pattern:	00000yyy yyxxxxxx
					|
					</MvCOMMENT>

					<MvASSIGN NAME = "l.ub1"	VALUE = "{ ( l.byte BITAND 28 ) BITSR 2 }">
					<MvASSIGN NAME = "l.ub2"	VALUE = "{ ( ( l.byte BITAND 3 ) BITSL 6 ) BITOR
														   ( l.byte2 BITAND 63 ) }">

					<MvEVAL EXPR = "{ '\\u' }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub1 ) }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub2 ) }">
				<MvELSEIF EXPR = "{ ( l.byte GE 224 ) AND ( l.byte LE 239 ) }">		<MvCOMMENT> UTF-8 3-byte sequence </MvCOMMENT>
					<MvASSIGN NAME = "l.byte2"	VALUE = "{ asciivalue( substring_var( l.string, l.pos + 1, 1 ) ) }">
					<MvASSIGN NAME = "l.byte3"	VALUE = "{ asciivalue( substring_var( l.string, l.pos + 2, 1 ) ) }">
					<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 2 }">

					<MvCOMMENT>
					|
					| UTF-8 Bytes:		1110zzzz 10yyyyyy 10xxxxxx
					| UTF-16 Pattern:	zzzzyyyy yyxxxxxx
					|
					</MvCOMMENT>

					<MvASSIGN NAME = "l.ub1"	VALUE = "{ ( ( l.byte BITAND 15 ) BITSL 4 ) BITOR
														   ( ( l.byte2 BITAND 60 ) BITSR 2 ) }">
					<MvASSIGN NAME = "l.ub2"	VALUE = "{ ( ( l.byte2 BITAND 3 ) BITSL 6 ) BITOR
														   ( l.byte3 BITAND 63 ) }">

					<MvEVAL EXPR = "{ '\\u' }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub1 ) }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub2 ) }">
				<MvELSEIF EXPR = "{ ( l.byte GE 240 ) AND ( l.byte LE 247 ) }">		<MvCOMMENT> UTF-8 4-byte sequence </MvCOMMENT>
					<MvASSIGN NAME = "l.byte2"	VALUE = "{ asciivalue( substring_var( l.string, l.pos + 1, 1 ) ) }">
					<MvASSIGN NAME = "l.byte3"	VALUE = "{ asciivalue( substring_var( l.string, l.pos + 2, 1 ) ) }">
					<MvASSIGN NAME = "l.byte4"	VALUE = "{ asciivalue( substring_var( l.string, l.pos + 3, 1 ) ) }">
					<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 3 }">

					<MvCOMMENT>
					|
					| UTF-8 Bytes:		11110Xzz 10XXyyyy 10xxxxxx 10wwwwww
					| UTF-16 Pattern:	110110zz 00yyyyxx 110111xx xxwwwwww
					|
					</MvCOMMENT>

					<MvASSIGN NAME = "l.ub1"	VALUE = "{ ( ( l.byte BITAND 3 ) BITOR 216 ) }">
					<MvASSIGN NAME = "l.ub2"	VALUE = "{ ( ( l.byte2 BITAND 15 ) BITSL 2 ) BITOR
														   ( ( l.byte3 BITAND 48 ) BITSR 4 ) }">
					<MvASSIGN NAME = "l.ub3"	VALUE = "{ ( ( l.byte3 BITAND 12 ) BITSR 2 ) BITOR 220 }">
					<MvASSIGN NAME = "l.ub4"	VALUE = "{ ( ( l.byte3 BITAND 3 ) BITSL 6 ) BITOR
														   ( ( l.byte4 BITAND 63 ) ) }">

					<MvEVAL EXPR = "{ '\\u' }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub1 ) }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub2 ) }">
					<MvEVAL EXPR = "{ '\\u' }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub3 ) }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.ub4 ) }">
				<MvELSE>
					<MvEVAL EXPR = "{ '\\u00' }">
					<MvEVAL EXPR = "{ JSON_Hex_Byte( l.byte ) }">
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.pos"			VALUE = "{ l.pos + 1 }">
		</MvWHILE>
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Hex_Byte" PARAMETERS = "byte" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.msb"		VALUE = "{ ( l.byte BITAND 240 ) BITSR 4 }">
	<MvIF EXPR = "{ l.msb GT 9 }">
		<MvASSIGN NAME = "l.msb"	VALUE = "{ asciichar( 97 + ( l.msb - 10 ) ) }">
	</MvIF>

	<MvASSIGN NAME = "l.lsb"		VALUE = "{ l.byte BITAND 15 }">
	<MvIF EXPR = "{ l.lsb GT 9 }">
		<MvASSIGN NAME = "l.lsb"	VALUE = "{ asciichar( 97 + ( l.lsb - 10 ) ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.msb $ l.lsb }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Boolean" PARAMETERS = "value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.value }">	<MvEVAL EXPR = "true">
	<MvELSE>					<MvEVAL EXPR = "false">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
| filterlist
|	[1]
|		:name="search|search_AND|search_OR"
|		:value	... child nodes joined with OR, separate "search" filters joined with AND ...
|			[1]:field=field_code
|			[1]:operator=EQ
|			[1]:value=wombat
|			[2]:field=search|search_AND|search_OR
|			[2]:operator=SUBWHERE
|			[2]:value
|				[1]:field=field_code
|				[1]:operator=EQ
|				[1]:value=wombat
|				[2]:field=search|search_AND|search_OR
|				[2]:operator=SUBWHERE
|				[2]:value
|					... unlimited nesting ...
|	[2]
|		:name="ondemandcolumns"
|		:value
|			[1]=field_code,
|			[2]=CustomField_Values:module_code:field_code
|	[3]
|		:name="<implementation_defined>"
|		:value=<value>
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Filter_Structify" PARAMETERS = "filterlist var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.filterlist }">									<MvFUNCTIONRETURN>
	<MvELSEIF EXPR = "{ miva_variable_type( l.filterlist ) EQ 'ARRAY' }">	<MvFUNCTIONRETURN>
	</MvIF>

	<MvFOREACH ITERATOR = "l.filter_string" ARRAY = "l.filters" COUNT = "{ JSON_Array_String( l.filterlist, l.filters ) }">
		<MvASSIGN NAME = "l.filter:name"	VALUE = "{ trim( decodeattribute( gettoken( l.filter_string, ':', 1 ) ) ) }">
		<MvASSIGN NAME = "l.filter:value"	VALUE = "{ trim( decodeattribute( gettoken( l.filter_string, ':', 2 ) ) ) }">

		<MvIF EXPR = "{ ( l.filter:name EQ 'search' )		OR
						( l.filter:name EQ 'search_AND' )	OR
						( l.filter:name EQ 'search_OR' ) }">
			<MvEVAL EXPR = "{ JSON_Filter_Structify_Search( l.filter:value, l.filter:value ) }">
		<MvELSEIF EXPR = "{ l.filter:name EQ 'ondemandcolumns' }">
			<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.column_codes" COUNT = "{ miva_splitstring( l.filter:value, ',', l.column_codes, 'trim' ) }">
				<MvIF EXPR = "{ ISNULL l.column_code }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.null"	VALUE = "{ miva_array_insert_var( l.filter:value, l.column_code, -1 ) }">
			</MvFOREACH>
		</MvIF>

		<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert_var( l.filterlist, l.filter, -1  ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Structify_Search" PARAMETERS = "filter_value var, output var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.search_string" ARRAY = "l.searchlist" COUNT = "{ JSON_Array_String( l.filter_value, l.searchlist ) }">
		<MvASSIGN NAME = "l.search:field"		VALUE = "{ trim( decodeattribute( gettoken( l.search_string, ':', 1 ) ) ) }">
		<MvASSIGN NAME = "l.search:operator"	VALUE = "{ trim( decodeattribute( gettoken( l.search_string, ':', 2 ) ) ) }">
		<MvASSIGN NAME = "l.search:value"		VALUE = "{ trim( decodeattribute( gettoken( l.search_string, ':', 3 ) ) ) }">

		<MvIF EXPR = "{ l.search:operator EQ 'SUBWHERE' }">
			<MvEVAL EXPR = "{ JSON_Filter_Structify_Search( l.search:value, l.search:value ) }">
		</MvIF>

		<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_var( l.output, l.search, -1 ) }">
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Contains" PARAMETERS = "filterlist var, name" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.filterlist ) }">

	<MvIF EXPR = "{ miva_array_search( l.filterlist, 1, l.filter, 'l.filter:name EQ l.name' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Contains_Search_Field" PARAMETERS = "filterlist var, field, search_value var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.filterlist ) }">

	<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.filterlist">
		<MvIF EXPR = "{ l.filter:name EQ 'search' }">
			<MvIF EXPR = "{ JSON_Search_Filter_Contains_Field( l.filter, l.field, l.search_value ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_Contains_Field" PARAMETERS = "search_filter var, field, search_value var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.search" ARRAY = "l.search_filter:value">
		<MvIF EXPR = "{ l.search:field EQ l.field }">
			<MvASSIGN NAME = "l.search_value" VALUE = "{ l.search:value }">
			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ l.search:operator EQ 'SUBWHERE' }">
			<MvIF EXPR = "{ JSON_Search_Filter_Contains_Field( l.search, l.field, l.search_value ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter" PARAMETERS = "query var, filterlist var, correlationlist" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist"					VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:correlationlist"				VARIABLE = "l.correlationlist">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Filter_LowLevel( l.query, l.params, l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Callback" PARAMETERS = "query var, filterlist var, correlationlist, callback_filename, callback_filter, callback_search, data var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist"					VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:correlationlist"				VARIABLE = "l.correlationlist">
	<MvREFERENCE NAME = "l.params:callback_filename"			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_filter"				VARIABLE = "l.callback_filter">
	<MvREFERENCE NAME = "l.params:callback_search"				VARIABLE = "l.callback_search">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Filter_LowLevel( l.query, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Callback_With_CustomFields" PARAMETERS = "query var, filterlist var, correlationlist, callback_filename, callback_filter, callback_search, callback_search_customfields, data var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist"					VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:correlationlist"				VARIABLE = "l.correlationlist">
	<MvREFERENCE NAME = "l.params:callback_filename"			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_filter"				VARIABLE = "l.callback_filter">
	<MvREFERENCE NAME = "l.params:callback_search"				VARIABLE = "l.callback_search">
	<MvREFERENCE NAME = "l.params:callback_search_customfields"	VARIABLE = "l.callback_search_customfields">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Filter_LowLevel( l.query, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Callback_With_FilteredCustomFields" PARAMETERS = "query var, filterlist var, correlationlist, callback_filename, callback_filter, callback_search, callback_search_customfields, callback_filter_customfields, data var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist"					VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:correlationlist"				VARIABLE = "l.correlationlist">
	<MvREFERENCE NAME = "l.params:callback_filename"			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_filter"				VARIABLE = "l.callback_filter">
	<MvREFERENCE NAME = "l.params:callback_search"				VARIABLE = "l.callback_search">
	<MvREFERENCE NAME = "l.params:callback_search_customfields"	VARIABLE = "l.callback_search_customfields">
	<MvREFERENCE NAME = "l.params:callback_filter_customfields"	VARIABLE = "l.callback_filter_customfields">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Filter_LowLevel( l.query, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_LowLevel" PARAMETERS = "query var, params var, data var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.params:filterlist ) }">

	<MvASSIGN NAME = "l.callback_filter_string"						VALUE = "">
	<MvASSIGN NAME = "l.callback_filter_return_value"				VALUE = "">
	<MvASSIGN NAME = "l.callback_search_string"						VALUE = "">
	<MvASSIGN NAME = "l.callback_search_return_value"				VALUE = "">
	
	<MvIF EXPR = "{ NOT ISNULL l.params:filterlist }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'Query_Hints', l.query_hints ) }">

		<MvIF EXPR = "{ ISNULL l.query_hints:data }">
			<MvASSIGN NAME = "l.query_hints:data:conjunctive"		VALUE = "{ JSON_Filter_Search_Is_Conjunctive( l.params:filterlist ) }">
		</MvIF>

		<MvASSIGN NAME = "l.params:field_count"						VALUE = 0>
		<MvASSIGN NAME = "l.params:callback_filter_field_count"		VALUE = 0>
		<MvASSIGN NAME = "l.params:callback_search_field_count"		VALUE = 0>

		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
		<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.params:filterlist">
			<MvIF EXPR = "{ NOT ISNULL l.params:callback_filename AND NOT ISNULL l.params:callback_filter }">
				<MvASSIGN NAME = "l.callback_filter_string"				VALUE = "{ l.params:callback_filter $ '( l.query, l.params:callback_filter_field_count, l.filter:name, l.filter:value, l.data )' }">

				<MvASSEMBLY>
					.string asm_0 "l.callback_filter_string"
					.string asm_1 "l.params:callback_filename"
					.string asm_2 "l.callback_filter_return_value"

					pushc	asm_1
					pushn
					pushc	asm_0
					pushn
					do_function
					popnc	asm_2
				</MvASSEMBLY>

				<MvIF EXPR = "{ l.callback_filter_return_value }">
					<MvFOREACHCONTINUE>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.filter:name EQ 'search' }">			<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, '',		'OR',	l.filter:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.filter:name EQ 'search_AND' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, 'AND',	'OR',	l.filter:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.filter:name EQ 'search_OR' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, 'OR',	'AND',	l.filter:value, l.params, l.data ) }">
			</MvIF>
		</MvFOREACH>
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'AND' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Search_Is_Conjunctive" PARAMETERS = "filterlist var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Inspect the filter to determine if the query can be a conjunctive query or not.  This function returns 1 if all of the following conditions are met:
	|	1. All top-level elements with either the name "search" or "search_AND" and all filter elements with operator "SUBWHERE" and field "search_AND" must:
	|		1. Have no more than one child
	|		2. Or, all children must be an operator "SUBWHERE" and field "search_AND"
	|	2. All top-level elements with the name "search_OR" and all filter elements with the operator "SUBWHERE" and field "search_OR" must not have any sibling
	|	   search filters (i.e. they're either the only child of the parent, or if a top-level, there are not other search filters)
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.filterlist">
		<MvIF EXPR = "{ l.filter:name EQ 'search_OR' }">
			<MvCOMMENT>
			|
			| Top-level search_OR cannot have any other sibling search filters
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.search_filter_count" VALUE = "{ miva_array_filter_ref( l.filterlist, 1, l.sibling_filter, 'l.sibling_filter:name EQ \'search\' OR l.sibling_filter:name EQ \'search_AND\' OR l.sibling_filter:name EQ \'search_OR\'', l.null ) }">

			<MvIF EXPR = "{ l.search_filter_count EQ 1 }">
				<MvIF EXPR = "{ NOT JSON_Filter_Search_Is_Conjunctive_Child( l.filter:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSE>
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.filter:name EQ 'search' OR l.filter:name EQ 'search_AND' }">
			<MvCOMMENT>
			|
			| Top-level search / search_AND filters must have at most 1 child element OR all child elements must be an additional SUBWHERE / search_AND filter
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.value_count"						VALUE = "{ miva_array_elements( l.filter:value ) }">
			<MvASSIGN NAME = "l.value_count_subwhere_search_and"	VALUE = "{ miva_array_filter_ref( l.filter:value, 1, l.child_value, 'l.child_value:operator EQ \'SUBWHERE\' AND l.child_value:field EQ \'search_AND\'', l.null ) }">

			<MvIF EXPR = "{ l.value_count LE 1 }">
				<MvIF EXPR = "{ NOT JSON_Filter_Search_Is_Conjunctive_Child( l.filter:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.value_count EQ l.value_count_subwhere_search_and }">
				<MvIF EXPR = "{ NOT JSON_Filter_Search_Is_Conjunctive_Child( l.filter:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSE>
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_Search_Is_Conjunctive_Child" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.search" ARRAY = "l.value">
		<MvIF EXPR = "{ l.search:operator EQ 'SUBWHERE' AND l.search:field EQ 'search_OR' }">
			<MvCOMMENT>
			|
			| A child search_OR cannot have any siblings
			|
			</MvCOMMENT>

			<MvIF EXPR = "{ miva_array_elements( l.value ) EQ 1 }">
				<MvIF EXPR = "{ NOT JSON_Filter_Search_Is_Conjunctive_Child( l.search:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSE>
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSEIF EXPR = "{ l.search:operator EQ 'SUBWHERE' AND l.search:field EQ 'search_AND' }">
			<MvCOMMENT>
			|
			| A child search_AND must have at most 1 child element OR all child elements must be an additional SUBWHERE / search_AND filter
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.value_count"						VALUE = "{ miva_array_elements( l.search:value ) }">
			<MvASSIGN NAME = "l.value_count_subwhere_search_and"	VALUE = "{ miva_array_filter_ref( l.search:value, 1, l.child_value, 'l.child_value:operator EQ \'SUBWHERE\' AND l.child_value:field EQ \'search_AND\'', l.null ) }">

			<MvIF EXPR = "{ l.value_count LE 1 }">
				<MvIF EXPR = "{ NOT JSON_Filter_Search_Is_Conjunctive_Child( l.search:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSEIF EXPR = "{ l.value_count EQ l.value_count_subwhere_search_and }">
				<MvIF EXPR = "{ NOT JSON_Filter_Search_Is_Conjunctive_Child( l.search:value ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			<MvELSE>
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter" PARAMETERS = "query var, field_count, search_filter var, correlationlist, callback_filename, callback_search, callback_search_field_count var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:field_count"					VARIABLE = "l.field_count">
	<MvREFERENCE NAME = "l.params:correlationlist"				VARIABLE = "l.correlationlist">
	<MvREFERENCE NAME = "l.params:callback_filename"			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_search"				VARIABLE = "l.callback_search">
	<MvREFERENCE NAME = "l.params:callback_search_field_count"	VARIABLE = "l.callback_search_field_count">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, '', 'OR', l.search_filter, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_Clause" PARAMETERS = "query var, outer_joining_clause, inner_joining_clause, field_count, search_filter var, correlationlist, callback_filename, callback_search, callback_search_field_count var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:field_count"					VARIABLE = "l.field_count">
	<MvREFERENCE NAME = "l.params:correlationlist"				VARIABLE = "l.correlationlist">
	<MvREFERENCE NAME = "l.params:callback_filename"			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_search"				VARIABLE = "l.callback_search">
	<MvREFERENCE NAME = "l.params:callback_search_field_count"	VARIABLE = "l.callback_search_field_count">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, l.outer_joining_clause, l.inner_joining_clause, l.search_filter, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_Clause_With_CustomFields" PARAMETERS = "query var, outer_joining_clause, inner_joining_clause, field_count, search_filter var, correlationlist, callback_filename, callback_search, callback_search_customfields, callback_search_field_count var, data var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:field_count"					VARIABLE = "l.field_count">
	<MvREFERENCE NAME = "l.params:correlationlist"				VARIABLE = "l.correlationlist">
	<MvREFERENCE NAME = "l.params:callback_filename"			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_search"				VARIABLE = "l.callback_search">
	<MvREFERENCE NAME = "l.params:callback_search_customfields"	VARIABLE = "l.callback_search_customfields">
	<MvREFERENCE NAME = "l.params:callback_search_field_count"	VARIABLE = "l.callback_search_field_count">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, l.outer_joining_clause, l.inner_joining_clause, l.search_filter, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_Clause_LowLevel" PARAMETERS = "query var, outer_joining_clause, inner_joining_clause, search_filter var, params var, data var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">

	<MvFOREACH ITERATOR = "l.search" ARRAY = "l.search_filter">
		<MvIF EXPR = "{ NOT ISNULL l.params:callback_filename AND NOT ISNULL l.params:callback_search }">
			<MvASSIGN NAME = "l.callback_search_string"			VALUE = "{ l.params:callback_search $ '( l.query, l.params:callback_search_field_count, l.search:field, l.search:operator, l.search:value, l.data )' }">

			<MvASSEMBLY>
				.string asm_3 "l.callback_search_string"
				.string asm_4 "l.params:callback_filename"
				.string asm_5 "l.callback_search_return_value"

				pushc	asm_4
				pushn
				pushc	asm_3
				pushn
				do_function
				popnc	asm_5
			</MvASSEMBLY>

			<MvIF EXPR = "{ l.callback_search_return_value }">
				<MvFOREACHCONTINUE>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( NOT ISNULL l.params:callback_filename ) AND ( NOT ISNULL l.params:callback_search_customfields ) AND ( ( 'CustomField_Values:' IN l.search:field ) EQ 1 ) }">
			<MvASSIGN NAME = "l.module_code"	VALUE = "{ gettoken( l.search:field, ':', 2 ) }">
			<MvASSIGN NAME = "l.field_code"		VALUE = "{ gettoken( l.search:field, ':', 3 ) }">
			
			<MvIF EXPR = "{ NOT ISNULL l.params:callback_filter_customfields }">
				<MvIF EXPR = "{ NOT JSON_Callback_CustomField_Filter( l.query, l.params:callback_filename, l.params:callback_filter_customfields, l.module_code, l.field_code ) }">
					<MvFOREACHCONTINUE>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ [ g.Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">
				<MvIF EXPR = "{ l.module:active }">
					<MvIF EXPR = "{ [ g.Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
						<MvASSIGN NAME = "l.callback_search_customfields_string" VALUE = "{ l.params:callback_search_customfields $ '( l.query, l.params:callback_search_field_count, l.module, l.field_code, l.search:operator, l.search:value, l.data )' }">

						<MvASSEMBLY>
							.string asm_search_customfields_1 "l.callback_search_customfields_string"
							.string asm_search_customfields_2 "l.params:callback_filename"
							.string asm_search_customfields_3 "l.callback_search_customfields_return_value"

							pushc	asm_search_customfields_2
							pushn
							pushc	asm_search_customfields_1
							pushn
							do_function
							popnc	asm_search_customfields_3
						</MvASSEMBLY>

						<MvIF EXPR = "{ l.callback_search_customfields_return_value }">
							<MvFOREACHCONTINUE>
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.search:operator EQ 'SUBWHERE' }">
			<MvIF EXPR = "{ l.search:field EQ 'search' }">			<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, '',		'OR',	l.search:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.search:field EQ 'search_AND' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, 'AND',	'OR',	l.search:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.search:field EQ 'search_OR' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_Clause_LowLevel( l.query, 'OR',	'AND',	l.search:value, l.params, l.data ) }">
			</MvIF>
		<MvELSE>
			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ miva_splitstring( l.params:correlationlist, ',', l.fields, 'trim' ) }">
				<MvIF EXPR = "{ ':' IN l.field }">
					<MvASSIGN NAME = "l.field_value"				VALUE = "{ gettoken( l.field, ':', 1 ) }">
					<MvASSIGN NAME = "l.correlation"				VALUE = "{ gettoken( l.field, ':', 2 ) }">
					<MvASSIGN NAME = "l.type" 						VALUE = "{ gettoken( l.field, ':', 3 ) }">
				<MvELSEIF EXPR = "{ '.' IN l.field }">
					<MvASSIGN NAME = "l.field_value"				VALUE = "{ gettoken( l.field, '.', 2 ) }">
					<MvASSIGN NAME = "l.correlation"				VALUE = "{ l.field }">
					<MvASSIGN NAME = "l.type" 						VALUE = "">
				<MvELSE>
					<MvASSIGN NAME = "l.field_value"				VALUE = "{ l.field }">
					<MvASSIGN NAME = "l.correlation"				VALUE = "{ l.field }">
					<MvASSIGN NAME = "l.type" 						VALUE = "">
				</MvIF>

				<MvIF EXPR = "{ l.field_value EQ l.search:field }">
					<MvASSIGN NAME = "l.value"						VALUE = "{ l.search:value }">

					<MvIF EXPR = "{ l.type EQ 'RFC3339' }">
						<MvASSIGN NAME = "l.type"					VALUE = "INTEGER">

						<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Timestamp_RFC3339_To_Time( l.value, l.value ) }">
							<MvFOREACHCONTINUE>
						</MvIF>
					</MvIF>

					<MvIF EXPR = "{ l.search:operator EQ 'CO' OR l.search:operator EQ 'NC' }">
						<MvASSIGN NAME = "l.value"					VALUE = "{ '%' $ l.value $ '%' }">
					</MvIF>

					<MvFOREACH ITERATOR = "l.subcorrelation" ARRAY = "l.subcorrelations" COUNT = "{ miva_splitstring( l.correlation, ';', l.subcorrelations, 'trim' ) }">
						<MvIF EXPR = "{ toupper( l.subcorrelation ) EQ 'NULL' }">
							<MvASSIGN NAME = "l.subcorrelation" 	VALUE = "''">
						</MvIF>

						<MvIF EXPR = "{ l.search:operator EQ 'NULL' }">										<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, [ g.Library_Native_DBAPI ].DB_Filter_ISNULL( l.type, l.subcorrelation, l.value ), '' ) }">
						<MvELSEIF EXPR = "{ l.search:operator EQ 'IN' OR l.search:operator EQ 'NOT_IN' }">	<MvEVAL EXPR = "{ JSON_Search_Filter_CommaSeparatedList_With_Type( l.query, l.type, l.subcorrelation, l.search:field, l.search:operator, l.value ) }">
						<MvELSE>
							<MvIF EXPR = "{ l.search:operator EQ 'EQ' }">			<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_EQ(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'GT' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_GT(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'GE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_GE(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'LT' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LT(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'LE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LE(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'CO' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_CO(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'NC' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NC(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'LIKE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LIKE(	l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'NOTLIKE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NOTLIKE(	l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'NE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NE(		l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'TRUE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_TRUE(	l.type, l.subcorrelation, l.value ) }">
							<MvELSEIF EXPR = "{ l.search:operator EQ 'FALSE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_FALSE(	l.type, l.subcorrelation, l.value ) }">
							<MvELSE>												<MvFOREACHCONTINUE>
							</MvIF>

							<MvIF EXPR = "{ l.search:operator EQ 'TRUE' OR l.search:operator EQ 'FALSE' }">	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, l.where_sql, '' ) }">
							<MvELSE>																		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, l.where_sql, [ g.Library_DB ].SQL_Query_Field( l.value ) ) }">
							</MvIF>
						</MvIF>
					</MvFOREACH>

					<MvFOREACHSTOP>
				</MvIF>
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SUB_WHERE_END_Clause( l.query, l.outer_joining_clause, l.inner_joining_clause ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.params:field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_CommaSeparatedList" PARAMETERS = "query var, correlation, filter_name, filter_operator, filter_value" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_DB ].SQL_Query_Search_CommaSeparatedList( l.query, l.correlation, l.filter_operator, l.filter_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_CommaSeparatedList_With_Type" PARAMETERS = "query var, type, correlation, filter_name, filter_operator, filter_value" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_DB ].SQL_Query_Search_CommaSeparatedList_With_Type( l.query, l.type, l.correlation, l.filter_operator, l.filter_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CustomFields_Initialize" PARAMETERS = "fields var, field_count, displayable_custom_fields var, module_feature_code, customfield_state var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Build an execution plan so that the selected field module version/call logic
	| is not executed for each product being initialized.
	|
	| :plan[n]				- one entry per field or set of fields, per product execution simply iterates over this array
	| 	:module				- reference to cached modules
	|
	| 	:field_map			- causes a call to Module_xxx_Fields_Mapped
	| 			- or -
	|	:field_array		- causes a call to Module_xxx_Field_Value_Array
	|			- or -
	| 	:field_single		- causes a call to Module_xxx_Field_Value
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customfield_state"				VALUE = "">
	<MvASSIGN NAME = "l.customfield_state:plan"			VALUE = "">
	<MvASSIGN NAME = "l.customfield_state:plan_count"	VALUE = 0>
	<MvASSIGN NAME = "l.has_mapping_feature"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
		<MvIF EXPR = "{ NOT ISNULL l.module_feature_code }">
			<MvREFERENCEARRAY NAME = "l.has_mapping_feature" VARIABLE = "l.field:module:feature_hash">
				<MvMEMBER NAME = "{ l.module_feature_code }">
			</MvREFERENCEARRAY>
		</MvIF>

		<MvREFERENCEARRAY NAME = "l.displayable" VARIABLE = "l.displayable_custom_fields">
			<MvMEMBER NAME = "{ l.field:module:code }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT l.displayable }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.field:type EQ 'multitext' }">
			<MvCOMMENT>
			|
			| Execution plan must include one entry per multitext field for this module
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.plan"								VALUE = "">
			<MvASSIGN NAME = "l.plan:field_single"					VALUE = 0>
			<MvASSIGN NAME = "l.plan:field_array"					VALUE = 1>
			<MvASSIGN NAME = "l.plan:field_map"						VALUE = "">
			<MvASSIGN NAME = "l.plan:module"						VALUE = "">
			<MvASSIGN NAME = "l.plan:field_code"					VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.plan:encoded_field_code"			VALUE = "{ JSON_Encode( l.field:code ) }">
			<MvASSIGN NAME = "l.plan:field_type"					VALUE = "{ l.field:type }">
			<MvASSIGN NAME = "l.plan:base_type"						VALUE = "{ gettoken( l.field:type, ':', 1 ) }">
			<MvASSIGN NAME = "l.plan:type_data"						VALUE = "{ gettoken( l.field:type, ':', 2 ) }">
			<MvASSIGN NAME = "l.plan:capabilities"					VALUE = "{ l.field:capabilities }">

			<MvIF EXPR = "{ ISNULL l.field:module:encoded_code }">
				<MvASSIGN NAME = "l.field:module:encoded_code"		VALUE = "{ JSON_Encode( l.field:module:code ) }">
			</MvIF>

			<MvREFERENCE NAME = "l.plan:module"						VARIABLE = "l.field:module">

			<MvASSIGN NAME = "l.customfield_state:plan_count"		VALUE = "{ miva_array_insert_var( l.customfield_state:plan, l.plan, -1 ) }">
		<MvELSEIF EXPR = "{ NOT l.has_mapping_feature }">
			<MvCOMMENT>
			|
			| Execution plan must include one entry per field for this module
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.plan"								VALUE = "">
			<MvASSIGN NAME = "l.plan:field_single"					VALUE = 1>
			<MvASSIGN NAME = "l.plan:field_array"					VALUE = 0>
			<MvASSIGN NAME = "l.plan:field_map"						VALUE = "">
			<MvASSIGN NAME = "l.plan:module"						VALUE = "">
			<MvASSIGN NAME = "l.plan:field_code"					VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.plan:encoded_field_code"			VALUE = "{ JSON_Encode( l.field:code ) }">
			<MvASSIGN NAME = "l.plan:field_type"					VALUE = "{ l.field:type }">
			<MvASSIGN NAME = "l.plan:base_type"						VALUE = "{ gettoken( l.field:type, ':', 1 ) }">
			<MvASSIGN NAME = "l.plan:type_data"						VALUE = "{ gettoken( l.field:type, ':', 2 ) }">
			<MvASSIGN NAME = "l.plan:capabilities"					VALUE = "{ l.field:capabilities }">

			<MvIF EXPR = "{ ISNULL l.field:module:encoded_code }">
				<MvASSIGN NAME = "l.field:module:encoded_code"		VALUE = "{ JSON_Encode( l.field:module:code ) }">
			</MvIF>

			<MvREFERENCE NAME = "l.plan:module"						VARIABLE = "l.field:module">

			<MvASSIGN NAME = "l.customfield_state:plan_count"		VALUE = "{ miva_array_insert_var( l.customfield_state:plan, l.plan, -1 ) }">
		<MvELSE>
			<MvCOMMENT>
			|
			| Execution plan may query all fields from this module at once
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.plan_index"							VALUE = "{ miva_array_search( l.customfield_state:plan, 1, l.element, 'NOT ISNULL l.element:field_map AND ( tolower( l.element:module:code ) EQ tolower( l.field:module:code ) )' ) }">

			<MvIF EXPR = "{ NOT l.plan_index }">
				<MvASSIGN NAME = "l.plan"							VALUE = "">
				<MvASSIGN NAME = "l.plan:field_single"				VALUE = 0>
				<MvASSIGN NAME = "l.plan:field_array"				VALUE = 0>
				<MvASSIGN NAME = "l.plan:field_map"					VALUE = "">
				<MvASSIGN NAME = "l.plan:module"					VALUE = "">
				<MvASSIGN NAME = "l.plan:fields"					VALUE = "">
				<MvASSIGN NAME = "l.plan:field_count"				VALUE = 0>

				<MvIF EXPR = "{ ISNULL l.field:module:encoded_code }">
					<MvASSIGN NAME = "l.field:module:encoded_code"	VALUE = "{ JSON_Encode( l.field:module:code ) }">
				</MvIF>

				<MvREFERENCE NAME = "l.plan:module"					VARIABLE = "l.field:module">

				<MvASSIGN NAME = "l.customfield_state:plan_count"	VALUE = "{ miva_array_insert_var( l.customfield_state:plan, l.plan, -1 ) }">
				<MvASSIGN NAME = "l.plan_index"						VALUE = "{ l.customfield_state:plan_count }">
			</MvIF>

			<MvREFERENCEARRAY NAME = "l.ref_plan" VARIABLE = "l.customfield_state:plan">
				<MvDIMENSION INDEX = "{ l.plan_index }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.plan_field"							VALUE = "">
			<MvASSIGN NAME = "l.plan_field:code"					VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.plan_field:encoded_code"			VALUE = "{ JSON_Encode( l.field:code ) }">
			<MvASSIGN NAME = "l.plan_field:type"					VALUE = "{ l.field:type }">
			<MvASSIGN NAME = "l.plan_field:base_type"				VALUE = "{ gettoken( l.field:type, ':', 1 ) }">
			<MvASSIGN NAME = "l.plan_field:type_data"				VALUE = "{ gettoken( l.field:type, ':', 2 ) }">
			<MvASSIGN NAME = "l.plan_field:capabilities"			VALUE = "{ l.field:capabilities }">
			<MvASSIGN NAME = "l.ref_plan:field_count"				VALUE = "{ miva_array_insert_var( l.ref_plan:fields, l.plan_field, -1 ) }">

			<MvASSIGNARRAY NAME = "l.ref_plan:field_map"			VALUE = "{ l.field:code }">
				<MvMEMBER NAME = "{ l.field:code }">
			</MvASSIGNARRAY>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Output_CustomField_Value" PARAMETERS = "field_type, type_data, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.field_type EQ 'numeric_optional' OR l.field_type EQ 'price_optional' ) AND ( ISNULL l.value ) }">
		<MvEVAL EXPR = "null">
		<MvFUNCTIONRETURN>
	<MvELSEIF EXPR = "{ ( l.field_type EQ 'numeric' ) OR ( l.field_type EQ 'numeric_optional' ) }">
		<MvEVAL EXPR = "{ l.value ROUND l.type_data }">
		<MvFUNCTIONRETURN>
	<MvELSEIF EXPR = "{ ( l.field_type EQ 'price' ) OR ( l.field_type EQ 'price_optional' ) }">
		<MvEVAL EXPR = "{ encodejavascriptnumber( l.value ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ '"' }">
	<MvEVAL EXPR = "{ JSON_Encode( l.value ) }">
	<MvEVAL EXPR = "{ '"' }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderBy" PARAMETERS = "query var, sort, list, default_sort" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:sort"								VARIABLE = "l.sort">
	<MvREFERENCE NAME = "l.params:list"								VARIABLE = "l.list">
	<MvREFERENCE NAME = "l.params:default_sort"						VARIABLE = "l.default_sort">

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderBy_LowLevel( l.query, l.params ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderBy_Callback_With_CustomFields" PARAMETERS = "query var, sort, list, default_sort, callback_filename, callback_orderby_customfields" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:sort"								VARIABLE = "l.sort">
	<MvREFERENCE NAME = "l.params:list"								VARIABLE = "l.list">
	<MvREFERENCE NAME = "l.params:default_sort"						VARIABLE = "l.default_sort">
	<MvREFERENCE NAME = "l.params:callback_filename"				VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_orderby_customfields"	VARIABLE = "l.callback_orderby_customfields">

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderBy_LowLevel( l.query, l.params ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderBy_Callback_With_FilteredCustomFields" PARAMETERS = "query var, sort, list, default_sort, callback_filename, callback_orderby_customfields, callback_filter_customfields" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:sort"								VARIABLE = "l.sort">
	<MvREFERENCE NAME = "l.params:list"								VARIABLE = "l.list">
	<MvREFERENCE NAME = "l.params:default_sort"						VARIABLE = "l.default_sort">
	<MvREFERENCE NAME = "l.params:callback_filename"				VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_orderby_customfields"	VARIABLE = "l.callback_orderby_customfields">
	<MvREFERENCE NAME = "l.params:callback_filter_customfields"		VARIABLE = "l.callback_filter_customfields">

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderBy_LowLevel( l.query, l.params ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderBy_LowLevel" PARAMETERS = "query var, params var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.sort_field" VALUE = "{ [ g.Library_DB ].SQL_Sort_Field( l.params:sort, l.params:sort_direction ) }">

	<MvIF EXPR = "{ ( NOT ISNULL l.params:callback_filename ) AND ( NOT ISNULL l.params:callback_orderby_customfields ) AND ( ( 'CustomField_Values:' IN l.sort_field ) EQ 1 ) }">
		<MvASSIGN NAME = "l.module_code"	VALUE = "{ gettoken( l.sort_field, ':', 2 ) }">
		<MvASSIGN NAME = "l.field_code"		VALUE = "{ gettoken( l.sort_field, ':', 3 ) }">
		
		<MvIF EXPR = "{ NOT ISNULL l.params:callback_filter_customfields }">
			<MvIF EXPR = "{ NOT JSON_Callback_CustomField_Filter( l.query, l.params:callback_filename, l.params:callback_filter_customfields, l.module_code, l.field_code ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Library_DB ].SQL_Query_OrderBy_Fields( l.query, l.params:sort, l.params:list, l.params:default_sort ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ [ g.Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) AND
						l.module:active }">
			<MvIF EXPR = "{ [ g.Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
				<MvASSIGN NAME = "l.callback_orderby_customfields_string" VALUE = "{ l.params:callback_orderby_customfields $ '( l.query, l.params:sort_direction, l.module, l.field_code )' }">

				<MvASSEMBLY>
					.string asm_orderby_customfields_1 "l.callback_orderby_customfields_string"
					.string asm_orderby_customfields_2 "l.params:callback_filename"
					.string asm_orderby_customfields_3 "l.callback_search_customfields_return_value"

					pushc	asm_orderby_customfields_2
					pushn
					pushc	asm_orderby_customfields_1
					pushn
					do_function
					popnc	asm_orderby_customfields_3
				</MvASSEMBLY>

				<MvIF EXPR = "{ l.callback_search_customfields_return_value }">
					<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'MM_OrderBy_CustomField', l.ref ) }">

					<MvASSIGN NAME = "l.ref:data:customfield"			VALUE = "">
					<MvASSIGN NAME = "l.ref:data:customfield:code"		VALUE = "{ l.field_code }">
					<MvASSIGN NAME = "l.ref:data:customfield:module"	VALUE = "{ l.module }">
				</MvIF>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_DB ].SQL_Query_OrderBy_Fields( l.query, l.params:sort, l.params:list, l.params:default_sort ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Query_Callback_Handle_CustomField" PARAMETERS = "query var, callback_filename, callback_function, module_code, customfield_code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module_code EQ '*' }">
		<MvASSIGN NAME = "l.module"							VALUE = "*">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">	<MvFUNCTIONRETURN>
		<MvELSEIF EXPR = "{ NOT l.module:active }">																<MvFUNCTIONRETURN>
		<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }"> 			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.callback_string" VALUE = "{ l.callback_function $ '( l.query, l.module, l.customfield_code )' }">

	<MvCOMMENT>
	|
	| We ignore the callback's return value since we need to call the callback for every custom field code
	|
	</MvCOMMENT>

	<MvASSEMBLY>
		.string asm_query_customfields_1 "l.callback_string"
		.string asm_query_customfields_2 "l.callback_filename"

		pushc	asm_query_customfields_2
		pushn
		pushc	asm_query_customfields_1
		pushn
		do_function
		pop
	</MvASSEMBLY>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Query_Callback_With_CustomFields" PARAMETERS = "query var, filterlist var, callback_filename, callback_query_customfields" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist" 					VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:callback_filename" 			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_query_customfields" 	VARIABLE = "l.callback_query_customfields">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Query_LowLevel( l.query, l.params ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Query_Callback_With_FilteredCustomFields" PARAMETERS = "query var, filterlist var, callback_filename, callback_query_customfields, callback_filter_customfields" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist" 					VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:callback_filename" 			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_query_customfields" 	VARIABLE = "l.callback_query_customfields">
	<MvREFERENCE NAME = "l.params:callback_filter_customfields" VARIABLE = "l.callback_filter_customfields">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Query_LowLevel( l.query, l.params ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Query_LowLevel" PARAMETERS = "query var, params var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.params:callback_filename OR ISNULL l.params:callback_query_customfields }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.params:filterlist ) }">

	<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.params:filterlist">
		<MvIF EXPR = "{ l.filter:name EQ 'ondemandcolumns' }">
			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.filter:value">
				<MvIF EXPR = "{ ( 'CustomField_Values:' IN l.field ) EQ 1 }">
					<MvASSIGN NAME = "l.module_code"	VALUE = "{ gettoken( l.field, ':', 2 ) }">
					<MvASSIGN NAME = "l.field_code"		VALUE = "{ gettoken( l.field, ':', 3 ) }">

					<MvIF EXPR = "{ NOT ISNULL l.params:callback_filter_customfields }">
						<MvIF EXPR = "{ NOT JSON_Callback_CustomField_Filter( l.query, l.params:callback_filename, l.params:callback_filter_customfields, l.module_code, l.field_code ) }">
							<MvFOREACHCONTINUE>
						</MvIF>
					</MvIF>
					
					<MvEVAL EXPR = "{ JSON_Query_Callback_Handle_CustomField( l.query, l.params:callback_filename, l.params:callback_query_customfields, l.module_code, l.field_code ) }">					
				</MvIF>
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Callback_CustomField_Filter" PARAMETERS = "query var, callback_filename, callback_function, module_code, field_code" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.return_value"		VALUE = 0>
	<MvASSIGN NAME = "l.callback_string"	VALUE = "{ l.callback_function $ '( l.query, l.module_code, l.field_code )' }">

	<MvASSEMBLY>
		.string asm_filter_customfields_1 "l.callback_string"
		.string asm_filter_customfields_2 "l.callback_filename"
		.string asm_filter_customfields_3 "l.return_value"

		pushc	asm_filter_customfields_2
		pushn
		pushc	asm_filter_customfields_1
		pushn
		do_function
		popnc	asm_filter_customfields_3
	</MvASSEMBLY>

	<MvFUNCTIONRETURN VALUE = "{ l.return_value }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SQL_Query_Index_With_CustomFields" PARAMETERS = "query var, loaded_record var, index var, correlation_data, callback_filename, callback_function" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'MM_OrderBy_CustomField', l.ref ) }">

	<MvIF EXPR = "{ ( NOT ISNULL l.ref:data ) AND ( NOT ISNULL l.callback_filename ) AND ( NOT ISNULL l.callback_function ) }">
		<MvASSIGN NAME = "l.callback_sqlindex_customfields_string" VALUE = "{ l.callback_function $ '( l.loaded_record, l.ref:data:customfield:module, l.correlation_data, l.ref:data:customfield:code )' }">

		<MvASSEMBLY>
			.string asm_sqlindex_customfields_1 "l.callback_sqlindex_customfields_string"
			.string asm_sqlindex_customfields_2 "l.callback_filename"

			pushc	asm_sqlindex_customfields_2
			pushn
			pushc	asm_sqlindex_customfields_1
			pushn
			do_function
			pop
		</MvASSEMBLY>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_DB ].SQL_Query_Index( l.query, l.loaded_record, l.index ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Note: Non-core files that use this function must directly include json/mivascript.mv to resolve required
|       filter functions that cannot be called via MvDO.
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Filter_MivaScript" PARAMETERS = "expression var, filterlist var, variablelist" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist"	VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:variablelist"	VARIABLE = "l.variablelist">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Filter_MivaScript_LowLevel( l.expression, l.params, l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_MivaScript_Callback" PARAMETERS = "expression var, filterlist var, variablelist, callback_filename, callback_filter, callback_search, data var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist"			VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:variablelist"			VARIABLE = "l.variablelist">
	<MvREFERENCE NAME = "l.params:callback_filename"	VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_filter"		VARIABLE = "l.callback_filter">
	<MvREFERENCE NAME = "l.params:callback_search"		VARIABLE = "l.callback_search">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Filter_MivaScript_LowLevel( l.expression, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_MivaScript_Callback_With_CustomFields" PARAMETERS = "expression var, filterlist var, variablelist, callback_filename, callback_filter, callback_search, callback_search_customfields, data var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:filterlist"					VARIABLE = "l.filterlist">
	<MvREFERENCE NAME = "l.params:variablelist"					VARIABLE = "l.variablelist">
	<MvREFERENCE NAME = "l.params:callback_filename"			VARIABLE = "l.callback_filename">
	<MvREFERENCE NAME = "l.params:callback_filter"				VARIABLE = "l.callback_filter">
	<MvREFERENCE NAME = "l.params:callback_search"				VARIABLE = "l.callback_search">
	<MvREFERENCE NAME = "l.params:callback_search_customfields"	VARIABLE = "l.callback_search_customfields">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Filter_MivaScript_LowLevel( l.expression, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Filter_MivaScript_LowLevel" PARAMETERS = "expression var, params var, data var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.params:filterlist ) }">

	<MvASSIGN NAME = "l.callback_filter_string"						VALUE = "">
	<MvASSIGN NAME = "l.callback_filter_return_value"				VALUE = "">
	
	<MvIF EXPR = "{ NOT ISNULL l.params:filterlist }">
		<MvASSIGN NAME = "l.params:field_count"						VALUE = 0>
		<MvASSIGN NAME = "l.params:callback_filter_field_count"		VALUE = 0>
		<MvASSIGN NAME = "l.filter_expression"						VALUE = "">

		<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.params:filterlist">
			<MvIF EXPR = "{ NOT ISNULL l.params:callback_filename AND NOT ISNULL l.params:callback_filter }">
				<MvASSIGN NAME = "l.callback_filter_string"			VALUE = "{ l.params:callback_filter $ '( l.filter_expression, l.params:callback_filter_field_count, l.filter:name, l.filter:value, l.data )' }">

				<MvASSEMBLY>
					.string asm_filter_mivascript_1 "l.callback_filter_string"
					.string asm_filter_mivascript_2 "l.params:callback_filename"
					.string asm_filter_mivascript_3 "l.callback_filter_return_value"

					pushc	asm_filter_mivascript_2
					pushn
					pushc	asm_filter_mivascript_1
					pushn
					do_function
					popnc	asm_filter_mivascript_3
				</MvASSEMBLY>

				<MvIF EXPR = "{ l.callback_filter_return_value }">
					<MvFOREACHCONTINUE>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.filter:name EQ 'search' }">			<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_MivaScript_LowLevel( l.filter_expression, 'AND',	'OR',	l.filter:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.filter:name EQ 'search_AND' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_MivaScript_LowLevel( l.filter_expression, 'AND',	'OR',	l.filter:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.filter:name EQ 'search_OR' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_MivaScript_LowLevel( l.filter_expression, 'OR',	'AND',	l.filter:value, l.params, l.data ) }">
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ NOT ISNULL l.filter_expression }">
			<MvIF EXPR = "{ NOT ISNULL l.expression }">	<MvASSIGN NAME = "l.expression" VALUE = "{ l.expression $ ' AND ( ' $ l.filter_expression $ ' )' }">
			<MvELSE>									<MvASSIGN NAME = "l.expression" VALUE = "{ l.filter_expression }">
			</MvIF>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_INTEGER" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'INTEGER' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_NUMBER" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'NUMBER' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_DOUBLE" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'DOUBLE' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_BOOL" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'BOOL' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_CHAR" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'CHAR' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MEMO" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'MEMO' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_RFC3339" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'RFC3339' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_NULL_INTEGER" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'NULL_INTEGER' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_NULL_NUMBER" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'NULL_NUMBER' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_NULL_BOOL" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'NULL_BOOL' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_NULL_CHAR" PARAMETERS = "filters var, column, correlation" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_LowLevel( l.filters, l.column, l.correlation, 'NULL_CHAR' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_LowLevel" PARAMETERS = "filters var, column, correlation, type" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.correlation }">
		<MvIF EXPR = "{ '.' IN l.column }">	<MvASSIGN NAME = "l.correlation" VALUE = "{ gettoken( l.column, '.', 2 ) }">		
		<MvELSE>							<MvASSIGN NAME = "l.correlation" VALUE = "{ l.column }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.filter" VALUE = "{ l.correlation $ ':' $ l.column $ ':' $ l.type }">

	<MvIF EXPR = "{ NOT ISNULL l.filters }">	<MvASSIGN NAME = "l.filters" VALUE = "{ l.filters $ ',' $ l.filter }">
	<MvELSE>									<MvASSIGN NAME = "l.filters" VALUE = "{ l.filter }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_INTEGER" PARAMETERS = "filters var, field, variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_MivaScript_LowLevel( l.filters, l.field, l.variable, 'INTEGER' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_NUMBER" PARAMETERS = "filters var, field, variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_MivaScript_LowLevel( l.filters, l.field, l.variable, 'NUMBER' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_DOUBLE" PARAMETERS = "filters var, field, variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_MivaScript_LowLevel( l.filters, l.field, l.variable, 'DOUBLE' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_BOOL" PARAMETERS = "filters var, field, variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_MivaScript_LowLevel( l.filters, l.field, l.variable, 'BOOL' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_CHAR" PARAMETERS = "filters var, field, variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_MivaScript_LowLevel( l.filters, l.field, l.variable, 'CHAR' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_MEMO" PARAMETERS = "filters var, field, variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_MivaScript_LowLevel( l.filters, l.field, l.variable, 'MEMO' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_RFC3339" PARAMETERS = "filters var, field, variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_AvailableFilter_MivaScript_LowLevel( l.filters, l.field, l.variable, 'RFC3339' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AvailableFilter_MivaScript_LowLevel" PARAMETERS = "filters var, field, variable, type" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.filter" VALUE = "{ l.field $ '=' $ l.variable $ '=' $ l.type }">

	<MvIF EXPR = "{ NOT ISNULL l.filters }">	<MvASSIGN NAME = "l.filters" VALUE = "{ l.filters $ ',' $ l.filter }">
	<MvELSE>									<MvASSIGN NAME = "l.filters" VALUE = "{ l.filter }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript" PARAMETERS = "expression var, field_count, filterlist var, variablelist" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.params:field_count"	VARIABLE = "l.field_count">
	<MvREFERENCE NAME = "l.params:variablelist"	VARIABLE = "l.variablelist">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Search_Filter_MivaScript_LowLevel( l.expression, 'AND', 'OR', l.filterlist, l.params, l.data ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_LowLevel" PARAMETERS = "expression var, outer_joining_clause, inner_joining_clause, filterlist var, params var, data var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.local_expression" VALUE = "">

	<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.filterlist">
		<MvIF EXPR = "{ NOT ISNULL l.params:callback_filename AND NOT ISNULL l.params:callback_search }">
			<MvASSIGN NAME = "l.callback_search_string" VALUE = "{ l.params:callback_search $ '( l.local_expression, l.params:field_count, l.outer_joining_clause, l.inner_joining_clause, l.filter:field, l.filter:operator, l.filter:value, l.data )' }">

			<MvASSEMBLY>
				.string asm_json_search_filter_mivascript_lowlevel_1 "l.callback_search_string"
				.string asm_json_search_filter_mivascript_lowlevel_2 "l.params:callback_filename"
				.string asm_json_search_filter_mivascript_lowlevel_3 "l.callback_search_return_value"

				pushc	asm_json_search_filter_mivascript_lowlevel_2
				pushn
				pushc	asm_json_search_filter_mivascript_lowlevel_1
				pushn
				do_function
				popnc	asm_json_search_filter_mivascript_lowlevel_3
			</MvASSEMBLY>

			<MvIF EXPR = "{ l.callback_search_return_value }">
				<MvFOREACHCONTINUE>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( NOT ISNULL l.params:callback_filename ) AND ( NOT ISNULL l.params:callback_search_customfields ) AND ( ( 'CustomField_Values:' IN l.filter:field ) EQ 1 ) }">
			<MvASSIGN NAME = "l.module_code"	VALUE = "{ gettoken( l.filter:field, ':', 2 ) }">
			<MvASSIGN NAME = "l.field_code"		VALUE = "{ gettoken( l.filter:field, ':', 3 ) }">

			<MvIF EXPR = "{ [ g.Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">
				<MvIF EXPR = "{ l.module:active }">
					<MvIF EXPR = "{ [ g.Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
						<MvASSIGN NAME = "l.callback_search_customfields_string" VALUE = "{ l.params:callback_search_customfields $ '( l.local_expression, l.params:field_count, l.outer_joining_clause, l.inner_joining_clause, l.module, l.field_code, l.filter:operator, l.filter:value, l.data )' }">

						<MvASSEMBLY>
							.string asm_json_search_filter_mivascript_lowlevel_4 "l.callback_search_customfields_string"
							.string asm_json_search_filter_mivascript_lowlevel_5 "l.params:callback_filename"
							.string asm_json_search_filter_mivascript_lowlevel_6 "l.callback_search_customfields_return_value"

							pushc	asm_json_search_filter_mivascript_lowlevel_5
							pushn
							pushc	asm_json_search_filter_mivascript_lowlevel_4
							pushn
							do_function
							popnc	asm_json_search_filter_mivascript_lowlevel_6
						</MvASSEMBLY>

						<MvIF EXPR = "{ l.callback_search_customfields_return_value }">
							<MvFOREACHCONTINUE>
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.filter:operator EQ 'SUBWHERE' }">
			<MvIF EXPR = "{ l.filter:field EQ 'search' }">			<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_MivaScript_LowLevel( l.local_expression, 'AND',	'OR',	l.filter:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.filter:field EQ 'search_AND' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_MivaScript_LowLevel( l.local_expression, 'AND',	'OR',	l.filter:value, l.params, l.data ) }">
			<MvELSEIF EXPR = "{ l.filter:field EQ 'search_OR' }">	<MvASSIGN NAME = "l.params:field_count" VALUE = "{ JSON_Search_Filter_MivaScript_LowLevel( l.local_expression, 'OR',	'AND',	l.filter:value, l.params, l.data ) }">
			</MvIF>
		<MvELSE>
			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ miva_splitstring( l.params:variablelist, ',', l.fields, 'trim' ) }">
				<MvASSIGN NAME = "l.field_value"	VALUE = "{ gettoken( l.field, '=', 1 ) }">
				<MvASSIGN NAME = "l.variable"		VALUE = "{ gettoken( l.field, '=', 2 ) }">
				<MvASSIGN NAME = "l.type"			VALUE = "{ gettoken( l.field, '=', 3 ) }">

				<MvIF EXPR = "{ l.field_value EQ l.filter:field }">
					<MvIF EXPR = "{ l.type EQ 'RFC3339' }">
						<MvASSIGN NAME = "l.type"	VALUE = "INTEGER">

						<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Timestamp_RFC3339_To_Time( l.filter:value, l.filter:value ) }">
							<MvFOREACHCONTINUE>
						</MvIF>
					</MvIF>

					<MvEVAL EXPR = "{ JSON_Search_Filter_MivaScript_Compare( l.local_expression, l.params:field_count, l.inner_joining_clause, l.variable, l.type, l.filter:field, l.filter:operator, l.filter:value ) }">

					<MvFOREACHSTOP>
				</MvIF>
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT ISNULL l.local_expression }">
		<MvIF EXPR = "{ NOT ISNULL l.expression }">
			<MvASSIGN NAME = "l.expression" VALUE = "{ l.expression $ ' ' $ l.outer_joining_clause $ ' ' }">
		</MvIF>

		<MvASSIGN NAME = "l.expression" VALUE = "{ l.expression $ '( ' $ l.local_expression $ ' )' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.params:field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare" PARAMETERS = "expression var, field_count var, inner_joining_clause, variable, type, search_field, search_operator, search_value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.search_operator EQ 'IN' OR l.search_operator EQ 'NOT_IN' }">
		<MvEVAL EXPR = "{ JSON_Search_Filter_MivaScript_CommaSeparatedList_With_Type( l.expression, l.type, l.inner_joining_clause, l.variable, l.search_field, l.search_operator, l.search_value ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.local_expression" VALUE = "">

		<MvIF EXPR = "{ l.search_operator EQ 'NULL' }">
			<MvASSIGN NAME = "l.local_expression" VALUE = "{ JSON_Search_Filter_MivaScript_Compare_NULL( l.type, l.variable, l.value_variable ) }">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.filter_variable" VARIABLE = "g.filter_value">
				<MvDIMENSION INDEX = "{ ++l.field_count }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.value_variable"		VALUE = "{ 'g.filter_value[' $ l.field_count $ ']' }">
			<MvASSIGN NAME = "l.filter_variable"	VALUE = "{ l.search_value }">

			<MvIF EXPR = "{ l.search_operator EQ 'EQ' }">			<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_EQ( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'GT' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_GT( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'GE' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_GE( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'LT' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_LT( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'LE' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_LE( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'NE' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_NE( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'CO' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_CO( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'NC' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_NC( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'LIKE' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_LIKE( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'NOTLIKE' }">	<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_NOTLIKE( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'TRUE' }">		<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_TRUE( l.type, l.variable, l.value_variable ) }">
			<MvELSEIF EXPR = "{ l.search_operator EQ 'FALSE' }">	<MvASSIGN NAME = "l.local_expression"	VALUE = "{ JSON_Search_Filter_MivaScript_Compare_FALSE( l.type, l.variable, l.value_variable ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.local_expression }">
			<MvIF EXPR = "{ NOT ISNULL l.expression }">
				<MvASSIGN NAME = "l.expression" VALUE = "{ l.expression $ ' ' $ l.inner_joining_clause $ ' ' }">
			</MvIF>

			<MvASSIGN NAME = "l.expression" VALUE = "{ l.expression $ l.local_expression }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_NULL" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'ISNULL ' $ l.variable }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_EQ" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) EQ 0' }">
	<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) EQ 0' }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) EQ 0' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_GT" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) GT 0' }">
	<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) GT 0' }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) GT 0' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_GE" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' GE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) GE 0' }">
	<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) GE 0' }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) GE 0' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_LT" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LT ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) LT 0' }">
	<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) LT 0' }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) LT 0' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_LE" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' LE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) LE 0' }">
	<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) LE 0' }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) LE 0' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_NE" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvFUNCTIONRETURN VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
	<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) NE 0' }">
	<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) NE 0' }">
	<MvELSE>											<MvFUNCTIONRETURN VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) NE 0' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_CO" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.value_variable $ ' CIN ' $ l.variable }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_NC" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ '( ' $ l.value_variable $ ' CIN ' $ l.variable $ ' ) EQ 0' }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_LIKE" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ' JSON_Search_Filter_MivaScript_LIKE( toupper( ' $ l.variable $ ' ), toupper( ' $ l.value_variable $ ' ) )' }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_NOTLIKE" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ ' NOT JSON_Search_Filter_MivaScript_LIKE( toupper( ' $ l.variable $ ' ), toupper( ' $ l.value_variable $ ' ) )' }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_TRUE" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ l.variable }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_Compare_FALSE" PARAMETERS = "type, variable, value_variable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ 'NOT ' $ l.variable }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_CommaSeparatedList" PARAMETERS = "expression var, variable, filter_name, filter_operator, filter_value" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Search_Filter_MivaScript_CommaSeparatedList_With_Join( l.expression, 'AND', l.variable, l.filter_name, l.filter_operator, l.filter_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_CommaSeparatedList_With_Join" PARAMETERS = "expression var, joining_clause, variable, filter_name, filter_operator, filter_value" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Search_Filter_MivaScript_CommaSeparatedList_With_Type( l.expression, '', l.joining_clause, l.variable, l.filter_name, l.filter_operator, l.filter_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Search_Filter_MivaScript_CommaSeparatedList_With_Type" PARAMETERS = "expression var, type, joining_clause, variable, filter_name, filter_operator, filter_value" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.local_expression"	VALUE = "">
	<MvASSIGN NAME = "l.field_count" 		VALUE = "{ miva_array_elements( g.Session:cache:json_search_filter_mivascript_csl:filter_value ) }">

	<MvFOREACH ITERATOR = "l.in_value" ARRAY = "l.in_list" COUNT = "{ miva_splitstring( l.filter_value, ',', l.in_list, 'trim' ) }">
		<MvIF EXPR = "{ ISNULL l.in_value }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGNARRAY NAME = "g.Session:cache:json_search_filter_mivascript_csl:filter_value" VALUE = "{ l.in_value }">
			<MvDIMENSION INDEX = "{ ++l.field_count }">
		</MvASSIGNARRAY>

		<MvASSIGN NAME = "l.value_variable" VALUE = "{ 'g.Session:cache:json_search_filter_mivascript_csl:filter_value[' $ l.field_count $ ']' }">

		<MvIF EXPR = "{ NOT ISNULL l.local_expression }">
			<MvIF EXPR = "{ l.filter_operator EQ 'IN' }">	<MvASSIGN NAME = "l.local_expression" VALUE = "{ l.local_expression $ ' OR ' }">
			<MvELSE>										<MvASSIGN NAME = "l.local_expression" VALUE = "{ l.local_expression $ ' AND ' }">
			</MvIF>
		</MvIF>

		<MvCOMMENT>
		|
		| Note that the IN / NOT_IN operators do not call the JSON_Search_Filter_MivaScript_Compare_EQ/NE directly.
		| This is because this expression is executed in the context of the caller which may not have access to those
		| functions.  In addition, dynamically compiled expressions cannot use MvDO to execute the functions.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.filter_operator EQ 'IN' }">
			<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' EQ ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) EQ 0' }">
			<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) EQ 0' }">
			<MvELSE>											<MvASSIGN NAME = "l.comparison" VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) EQ 0' }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ l.type EQ 'INTEGER' }">				<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'NUMBER' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'DOUBLE' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'BOOL' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ l.variable $ ' NE ' $ l.value_variable }">
			<MvELSEIF EXPR = "{ l.type EQ 'CHAR' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) NE 0' }">
			<MvELSEIF EXPR = "{ l.type EQ 'MEMO' }">			<MvASSIGN NAME = "l.comparison" VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) NE 0' }">
			<MvELSE>											<MvASSIGN NAME = "l.comparison" VALUE = "{ 'strcasecmp( ' $ l.variable $ ', ' $ l.value_variable $ ' ) NE 0' }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.local_expression" VALUE = "{ l.local_expression $ '( ' $ l.comparison $ ' )' }">
	</MvFOREACH>

	<MvIF EXPR = "{ NOT ISNULL l.local_expression }">
		<MvIF EXPR = "{ NOT ISNULL l.expression }">
			<MvASSIGN NAME = "l.expression" VALUE = "{ l.expression $ ' '  $ l.joining_clause $ ' ' }">
		</MvIF>

		<MvASSIGN NAME = "l.expression"	VALUE = "{ l.expression $ '( ' $ l.local_expression $ ' )' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProcessFileUpload" PARAMETERS = "purpose, field, filename, status, tempfile, content_type, size" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Filename"	VALUE = "{ l.filename }">

	<MvIF EXPR = "{ NOT crypto_md5_file( l.tempfile, 'data', g.File_MD5 ) }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-00035', 'Unable to calculate MD5 of uploaded file \'' $ l.filename $ '\' at path \'' $ l.tempfile $ '\'' ) }">

		<MvFUNCTIONRETURN VALUE = "{ JSON_FileUpload_Error( 'MER-JSN-00036', 'Unable to calculate MD5 of uploaded file' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT frename( l.tempfile, s.process_id $ '_' $ g.File_MD5 ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_FileUpload_Error( 'MER-JSN-00037', 'Unable to rename temporary file: ' $ file_last_error() ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_FileUpload( 'MER-JSN-00044', l.purpose, l.filename, l.tempfile ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ValidateUploadedFile" PARAMETERS = "uploaded_filename var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( len_var( g.File_MD5 ) NE 32 ) OR ( NOT isalnum( g.File_MD5 ) ) }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-00038', 'Invalid MD5 for file \'' $ g.Filename $ '\' at path \'' $ s.process_id $ '_' $ g.File_MD5 $ '\'' ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ fdelete( s.process_id $ '_' $ g.File_MD5 ) }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-00039', 'Invalid MD5' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT crypto_md5_file( s.process_id $ '_' $ g.File_MD5, 'data', l.verify_md5 ) }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-00040', 'Unable to calculate MD5 of uploaded file \'' $ g.Filename $ '\' at path \'' $ s.process_id $ '_' $ g.File_MD5 $ '\'' ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ fdelete( s.process_id $ '_' $ g.File_MD5 ) }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-00041', 'Unable to calculate MD5 of uploaded file' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.verify_md5 NE g.File_MD5 }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-00042', 'Uploaded file MD5 mismatch for file \'' $ g.Filename $ '\' at path \'' $ s.process_id $ '_' $ g.File_MD5 $ '\'' ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ fdelete( s.process_id $ '_' $ g.File_MD5 ) }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-00043', 'Uploaded file MD5 mismatch' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.uploaded_filename" VALUE = "{ s.process_id $ '_' $ g.File_MD5 }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Miva_ValidateFileUpload" PARAMETERS = "field, filename, content_type" STANDARDOUTPUTLEVEL = "">
	<MvDO FILE = "lib/config.mvc">

	<MvIF EXPR = "{ NOT JSON_Initialize_Session() }">
		<MvFUNCTIONRETURN VALUE = -1>
	</MvIF>

	<MvASSIGN NAME = "l.filename"						VALUE = "{ [ g.Library_Utilities ].BaseName( l.filename ) }">

	<MvIF EXPR = "{ ISNULL g.Session_Type }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Module_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Session_Type EQ 'runtime' }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Module_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Session_Type EQ 'admin' }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">												<MvASSIGN NAME = "l.result" VALUE = "{ JSON_Module_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Image_Upload' }">									<MvASSIGN NAME = "l.result" VALUE = "{ JSON_Image_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'ProductImage_Upload' }">								<MvASSIGN NAME = "l.result" VALUE = "{ JSON_ProductImage_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'User_Insert_WithIconImage' }">						<MvASSIGN NAME = "l.result" VALUE = "{ JSON_User_Insert_WithIconImage_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'User_Update_WithIconImage' }">						<MvASSIGN NAME = "l.result" VALUE = "{ JSON_User_Update_WithIconImage_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'StoreIcon_Upload' }">								<MvASSIGN NAME = "l.result" VALUE = "{ JSON_StoreIcon_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Framework_Upload' }">								<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Feature_TUI_JSON ].JSON_Framework_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Upload' }">								<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Upload' }">						<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Upload_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Import_Delimited_Preview' }">						<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Delimited_Preview_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Import_Session_Initialize' }">						<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Feature_IMP_JSON ].JSON_Import_Session_Initialize_ValidateFileUpload( l.field, l.filename, l.content_type ) }">
		<MvELSE>																				<MvASSIGN NAME = "l.result" VALUE = "-1">
		</MvIF>

		<MvCOMMENT>
		|
		| Update the current AdminSessions lastupdate 1 day into the future
		| to prevent timeouts while receiving the uploaded data.  The lastupdate
		| will be reset after the upload completes in Miva_ProcessFileUpload
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ l.result GE 0 }">
			<MvIF EXPR = "{ [ g.Library_DB ].AdminSession_Load_Session_Cookie( g.Session_Cookie, l.session ) }">
				<MvASSIGN NAME = "l.session:lastupdate"	VALUE = "{ s.dyn_time_t + 86400 }">
				<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Library_DB ].AdminSession_Update_LastUpdate( l.session ) }">
			</MvIF>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ l.result }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "Miva_ProcessFileUpload" PARAMETERS = "field, filename, status, tempfile, content_type, size" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.filename"					VALUE = "{ [ g.Library_Utilities ].BaseName( l.filename ) }">

	<MvIF EXPR = "{ l.status NE 'COMPLETE' }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Session_Type }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">							<MvEVAL EXPR = "{ JSON_Module_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Session_Type EQ 'runtime' }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">							<MvEVAL EXPR = "{ JSON_Module_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ g.Session_Type EQ 'admin' }">
		<MvIF EXPR = "{ g.Function EQ 'Module' }">												<MvEVAL EXPR = "{ JSON_Module_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Image_Upload' }">									<MvEVAL EXPR = "{ JSON_Image_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'ProductImage_Upload' }">								<MvEVAL EXPR = "{ JSON_ProductImage_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'User_Insert_WithIconImage' }">						<MvEVAL EXPR = "{ JSON_User_Insert_WithIconImage_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'User_Update_WithIconImage' }">						<MvEVAL EXPR = "{ JSON_User_Update_WithIconImage_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'StoreIcon_Upload' }">								<MvEVAL EXPR = "{ JSON_StoreIcon_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Framework_Upload' }">								<MvEVAL EXPR = "{ [ g.Feature_TUI_JSON ].JSON_Framework_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'CSSResource_Upload' }">								<MvEVAL EXPR = "{ [ g.Feature_TUI_JSON ].JSON_CSSResource_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'JavaScriptResource_Upload' }">						<MvEVAL EXPR = "{ [ g.Feature_TUI_JSON ].JSON_JavaScriptResource_Upload_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Import_Delimited_Preview' }">						<MvEVAL EXPR = "{ [ g.Feature_IMP_JSON ].JSON_Import_Delimited_Preview_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		<MvELSEIF EXPR = "{ g.Function EQ 'Import_Session_Initialize' }">						<MvEVAL EXPR = "{ [ g.Feature_IMP_JSON ].JSON_Import_Session_Initialize_ProcessFileUpload( l.field, l.filename, l.status, l.tempfile, l.content_type, l.size ) }">
		</MvIF>

		<MvCOMMENT>
		|
		| Reset the lastupdate on the current AdminSession
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ [ g.Library_DB ].AdminSession_Load_Session_Cookie( g.Session_Cookie, l.session ) }">
			<MvASSIGN NAME = "l.session:lastupdate"	VALUE = "{ s.dyn_time_t }">
			<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Library_DB ].AdminSession_Update_LastUpdate( l.session ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvINCLUDE FILE = "json/admin.mv">
<MvINCLUDE FILE = "json/apitokens.mv">
<MvINCLUDE FILE = "json/authorizationfailures.mv">
<MvINCLUDE FILE = "json/batches.mv">
<MvINCLUDE FILE = "json/bookmarks.mv">
<MvINCLUDE FILE = "json/categories.mv">
<MvINCLUDE FILE = "json/countries.mv">
<MvINCLUDE FILE = "json/crypt.mv">
<MvINCLUDE FILE = "json/domain.mv">
<MvINCLUDE FILE = "json/group.mv">
<MvINCLUDE FILE = "json/history.mv">
<MvINCLUDE FILE = "json/images.mv">
<MvINCLUDE FILE = "json/imagetypes.mv">
<MvINCLUDE FILE = "json/mmscreen.mv">
<MvINCLUDE FILE = "json/mmtexteditor.mv">
<MvINCLUDE FILE = "json/modules.mv">
<MvINCLUDE FILE = "json/notes.mv">
<MvINCLUDE FILE = "json/orders.mv">
<MvINCLUDE FILE = "json/payments.mv">
<MvINCLUDE FILE = "json/printqueues.mv">
<MvINCLUDE FILE = "json/products.mv">
<MvINCLUDE FILE = "json/productkits.mv">
<MvINCLUDE FILE = "json/productvariants.mv">
<MvINCLUDE FILE = "json/productimages.mv">
<MvINCLUDE FILE = "json/returns.mv">
<MvINCLUDE FILE = "json/runtime.mv">
<MvINCLUDE FILE = "json/universalsearch.mv">
<MvINCLUDE FILE = "json/shipmentbatches.mv">
<MvINCLUDE FILE = "json/shipments.mv">
<MvINCLUDE FILE = "json/standardfields.mv">
<MvINCLUDE FILE = "json/states.mv">
<MvINCLUDE FILE = "json/store.mv">
<MvINCLUDE FILE = "json/storemodules.mv">
<MvINCLUDE FILE = "json/trackinglinks.mv">
<MvINCLUDE FILE = "json/userpreferences.mv">
<MvINCLUDE FILE = "json/users.mv">

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-ADM-GUI-
| Next Error Code: 1    
|
</MvCOMMENT>

<MvCOMMENT>
|
| User Interface Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "FieldError_Clear" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Error_Field"			VALUE = "">
	<MvASSIGN NAME = "g.Error_Field_Message"	VALUE = "">
	<MvASSIGN NAME = "g.Data_Entry_Error"		VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "FieldError" PARAMETERS = "tab, field, message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Tab" VALUE = "{ l.tab }">
	<MvASSIGN NAME = "g.Error_Field" VALUE = "{ l.field }">
	<MvASSIGN NAME = "g.Error_Field_Message" VALUE = "{ l.message }">
	<MvASSIGN NAME = "g.Data_Entry_Error" VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "StyleSheet" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Admin_User_ListHover_Active }">
		<style type="text/css">
		.be_hov:not(.mm_list_data_row):hover
		{
			background-color: #efe8c8;
		}

		.mm_list_data_row.be_hov:hover .mm_list_data_row_background
		{
			background-color: #fafcff;
		}

		.mm_list_data_row.be_hov:hover .mm_list_data_col_selection
		{
			background-color: #fafcff;
		}

		.mm_list_data_row.be_hov:hover .mm_list_data_col_displayorder
		{
			background-color: #fafcff;
		}

		.mm_list_data_row.be_hov:hover .mm_list_data_row_loading
		{
			background-color: #fafcff;
		}
		</style>
	</MvIF>

	<MvEVAL EXPR = "{ Element_v55UI_CSS() }">
	<MvEVAL EXPR = "{ Element_AdminUI_CSS() }">
</MvFUNCTION>

<MvFUNCTION NAME = "BeginScreen" PARAMETERS = "title, default_action, buttons" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ v58_BeginScreen( l.title, l.default_action, l.buttons, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BeginScreen_Start" PARAMETERS = "title, default_action, buttons" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ v58_BeginScreen_Start( l.title, l.default_action, l.buttons, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "BeginScreen_Context" PARAMETERS = "context var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<script type="text/javascript">
	var MMScreenContext = <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Output( l.context ) }">;
	</script>
</MvFUNCTION>

<MvFUNCTION NAME = "BeginScreen_Context_SetNavigationGroup" PARAMETERS = "context var, navigation_group" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.context:mmscreen_navigation_group" VALUE = "{ l.navigation_group }">
</MvFUNCTION>

<MvFUNCTION NAME = "BeginScreen_Context_SetSubNavigationGroup" PARAMETERS = "context var, sub_navigation_group" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.context:mmscreen_sub_navigation_group" VALUE = "{ l.sub_navigation_group }">
</MvFUNCTION>

<MvFUNCTION NAME = "BeginScreen_End" PARAMETERS = "title, default_action, buttons" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ v58_BeginScreen_End( l.title, l.default_action, l.buttons, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v58_BeginScreen" PARAMETERS = "title, default_action, buttons, flags" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ v58_BeginScreen_Start( l.title, l.default_action, l.buttons, l.flags ) }">
	<MvEVAL EXPR = "{ v58_BeginScreen_End( l.title, l.default_action, l.buttons, l.flags ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v58_BeginScreen_Start" PARAMETERS = "title, default_action, buttons, flags" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<head>
	<title><MvEVAL EXPR = "{ l.title }"></title>
	<link rel="shortcut icon" type="image/x-icon" href="graphics/en-US/admin/favicon.ico">

	<MvEVAL EXPR = "{ StyleSheet() }">
	<MvEVAL EXPR = "{ Element_MMTextEditor_CSS() }">
	<MvEVAL EXPR = "{ Element_MMTemplateTextArea_CSS() }">
	<MvEVAL EXPR = "{ Element_MMImagePicker_CSS() }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_AI_AD ].Element_AIDialog_CSS() }">

	<MvIF EXPR = "{ g.Secure }">
		<base href="{ encodeentities( g.secure_baseurl ) }">
	<MvELSE>
		<base href="{ encodeentities( g.baseurl ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT g.ItemModified }">	
		<MvASSIGN NAME = "g.ItemModified"	VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">	<MvASSIGN NAME = "l.store_id" VALUE = 0>
	<MvELSE>										<MvASSIGN NAME = "l.store_id" VALUE = "{ g.Store:id }">
	</MvIF>

	<script type="text/javascript">
		var MMCachedPreferences_Screen_Heirarchy_Loaded = true;
		var MMCachedPreferences =
		{
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_UserPreferenceList_Load_Heirarchy_Output( l.store_id, g.User:id, g.Screen, 1 ) }">
		};
	</script>

	<MvIF EXPR = "{ Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ Element_AJAX_JavaScript() }">
		<MvEVAL EXPR = "{ Element_UI_JavaScript() }">
		<MvEVAL EXPR = "{ Element_v55UI_JavaScript() }">
		<MvEVAL EXPR = "{ Element_MMTextEditor_JavaScript() }">
		<MvEVAL EXPR = "{ Element_MMTemplateTextArea_JavaScript() }">
		<MvEVAL EXPR = "{ Element_MMImagePicker_JavaScript() }">

		<MvEVAL EXPR = "{ Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_AI_AD ].Element_Feature_AI_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_AI_AD ].Element_AIDialog_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_AI_AD ].Element_Feature_AI_JavaScript_Combined_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL g.Store_Code }">		<MvEVAL EXPR = "{ JavaScript_Set_A_Variable( 'Store_Code', g.Store_Code ) }">
	<MvELSEIF EXPR = "{ NOT ISNULL g.Edit_Store }">	<MvEVAL EXPR = "{ JavaScript_Set_A_Variable( 'Store_Code', g.Edit_Store ) }">
	<MvELSE>										<MvEVAL EXPR = "{ JavaScript_Set_A_Variable( 'Store_Code', '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JavaScript_Set_A_Variable( 'MMServerTimezone', timezone() ) }">
	<MvEVAL EXPR = "{ JavaScript_SetVariables( 'g', 'Adminurl, Screen, ItemModified, Edit_Store' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "v58_BeginScreen_End" PARAMETERS = "title, default_action, buttons, flags" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pos"	VALUE = 1>
	<MvASSIGN NAME = "l.flag"	VALUE = "{ gettoken( l.flags, ',', l.pos ) }">

	<MvWHILE EXPR = "{ len( l.flag ) }">
		<MvASSIGN NAME = "l.flag_array"	MEMBER = "{ l.flag }" VALUE = 1>
		<MvASSIGN NAME = "l.pos"	VALUE = "{ l.pos + 1 }">
		<MvASSIGN NAME = "l.flag"	VALUE = "{ gettoken( l.flags, ',', l.pos ) }">
	</MvWHILE>

	<MvEVAL EXPR = "{ JavaScript_SetVariables( 'g', 'adminurl_nosep' ) }">

	<script type="text/javascript">
		<MvIF EXPR = "{ l.flag_array:disable_popup }">
			window.MMScreenDisablePopup = true;
		</MvIF>

		function RegisterHandler()
		{
			var form, input;

			<MvIF EXPR = "{ NOT l.flag_array:no_mmscreen_intercept }">
				if ( !top.mm9_screen )
				{
					form						= document.createElement( 'form' );
					form.method					= 'POST';
					form.target					= '_top';
					form.action					= adminurl_nosep;

					input						= document.createElement( 'input' );
					input.type					= 'hidden';
					input.name					= 'MMScreen_Intercept';
					input.value					= '1';
					form.appendChild( input );

					<MvFOREACH ITERATOR = "l.param" ARRAY = "l.paramlist" COUNT = "{ SessionParameters_NameValuePairList( l.paramlist ) }">
						<MvASSIGN NAME = "l.paramname_lower" VALUE = "{ tolower( l.param:name ) }">

						<MvIF EXPR = "{ l.paramname_lower EQ 'null' OR l.paramname_lower EQ 'mmscreen_intercept' }">
							<MvFOREACHCONTINUE>
						</MvIF>

						input					= document.createElement( 'input' );
						input.type				= 'hidden';
						input.name				= '<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.param:name ) }">';
						input.value				= '<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.param:value ) }">';
						form.appendChild( input );
					</MvFOREACH>

					document.body.appendChild( form );
					form.submit();
				}
			</MvIF>

			KeyDownHandlerStack_Add( function( e )
			{
				if ( top.mm9_screen )
				{
					top.mm9_screen.Event_OnEnter( e );
				}
			}, null );
		}
	</script>

	<MvIF EXPR = "{ ( NOT ISNULL g.Error_Field ) OR ( NOT ISNULL g.Error_Field_Message ) }">
		<MvASSIGN NAME = "g.FieldErrorParameter_Field"		VALUE = "{ g.Error_Field }">
		<MvASSIGN NAME = "g.FieldErrorParameter_Message"	VALUE = "{ g.Error_Field_Message }">

		<MvEVAL EXPR = "{ JavaScript_SetVariables( 'g', 'FieldErrorParameter_Field, FieldErrorParameter_Message' ) }">
	</MvIF>
	</head>

	<MvIF EXPR = "{ ( NOT ISNULL g.Error_Field ) OR ( NOT ISNULL g.Error_Field_Message ) }">
		<body onload="RegisterHandler(); LoadFinished(); FieldError( FieldErrorParameter_Field, FieldErrorParameter_Message );">
	<MvELSE>
		<body onload="RegisterHandler(); LoadFinished();">
	</MvIF>

	<MvCOMMENT>
	|
	| For accurate vulnerability scanning, the logic used here should match the logic in the AdminURL function
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.form_url"		VALUE = "{ g.adminurl $ 'Screen=' $ encodeattribute( g.Screen ) }">

	<MvIF EXPR = "{ len( g.Tab ) }">
		<MvASSIGN NAME = "l.form_url"	VALUE = "{ l.form_url $ '&Tab=' $ encodeattribute( g.Tab ) }">
	</MvIF>

	<MvIF EXPR = "{ len( g.Store_Code ) }">
		<MvASSIGN NAME = "l.form_url"	VALUE = "{ l.form_url $ '&Store_Code=' $ encodeattribute( g.Store_Code ) }">
	<MvELSEIF EXPR = "{ len( g.Edit_Store ) }">
		<MvASSIGN NAME = "l.form_url"	VALUE = "{ l.form_url $ '&Edit_Store=' $ encodeattribute( g.Edit_Store ) }">
	</MvIF>

	<div id="mm9_content_container">
		<MvIF EXPR = "{ l.flag_array:autocomplete_off }">	<form name="{ encodeentities( g.Screen ) }" method="POST" action="{ l.form_url }" onsubmit="return false;" autocomplete="off">
		<MvELSE>											<form name="{ encodeentities( g.Screen ) }" method="POST" action="{ l.form_url }" onsubmit="return false;">
		</MvIF>

		<MvHIDE FIELDS = "g.ItemModified, g.Session_ID">
		<input type="hidden" name="Screen"				value="{ encodeentities( g.Screen ) }" disabled>
		<input type="hidden" name="Tab"					value="{ encodeentities( g.Tab ) }" disabled>
		<input type="hidden" name="Have_Fields" 		value="">
		<input type="hidden" name="Action" 				value="{ encodeentities( l.default_action ) }">
		<input type="hidden" name="Button_AddMultiple" 	value = 0>

		<MvCOMMENT> Title </MvCOMMENT>
		<span class="mm9_nodisplay">
			<h1 id="mm9_screen_title"><MvEVAL EXPR = "{ l.title }"></h1>
			<MvASSIGN NAME = "l.product_code_clause"	VALUE = "&Merchant_Product_Code=M5">

			<MvIF EXPR = "{ len( l.buttons ) }">
				<MvIF EXPR = "{ fexists( 'mcpartner.dat' ) }">
					<MvIMPORT FILE = "mcpartner.dat" DELIMITER = "|" FIELDS = "l.ref"><MvIMPORTSTOP></MvIMPORT>
					<MvIF EXPR = "{ NOT len( l.ref ) }">
						<MvASSIGN NAME = "l.ref" VALUE = "mva">
					</MvIF>
				<MvELSE>
					<MvASSIGN NAME = "l.ref" VALUE = "mva">
				</MvIF>

				<a target="MivaCentral" HREF="{ 'http://www.mivacentral.com/related/?ref=' $ encodeattribute( l.ref ) $ '&Screen=' $ encodeattribute( g.Screen ) $ '&Tab=' $ encodeattribute( g.Tab ) $ '&Module_Type=' $ encodeattribute( g.Module_Type ) $ '&Merchant_Version=' $ encodeattribute( g.Merchant_Version ) $ '&Empresa_Version=' $ encodeattribute( s.mivaversion ) $ '&Merchant_Production_Version=' $ encodeattribute( g.Merchant_Production_Version ) $ l.product_code_clause }"><img src="{ g.AdminGraphics_Path $ 'extras.gif' }" ALT = "Extras" border="0"></a>

				<MvASSIGN NAME = "l.pos" VALUE = 1>
				<MvASSIGN NAME = "l.current" VALUE = "{ gettoken( l.buttons, ',', l.pos ) }">
				<MvWHILE EXPR = "{ len( l.current ) }">
					<MvASSIGN NAME = "l.sep_pos" VALUE = "{ ':' IN l.current }">
					<MvASSIGN NAME = "l.button_code" VALUE = "{ substring( l.current, 1, l.sep_pos - 1 ) }">
					<MvASSIGN NAME = "l.button_link" VALUE = "{ substring( l.current, l.sep_pos + 1, len( l.current ) - l.sep_pos ) }">

					<MvIF EXPR = "{ l.button_code EQ 'Links' }">
						<a target="new" href="{ g.adminurl $ l.button_link }"><MvEVAL EXPR = "{ DrawImgButton_Links(0) }"></a>
					</MvIF>

					<MvIF EXPR = "{ l.button_code EQ 'Help' }">
						<MvIF EXPR = "{ ( 'http:' IN l.button_link ) EQ 1 }">
							<a target="new" href="{ l.button_link }"><MvEVAL EXPR = "{ DrawImgButton_Help(0) }"></a>
						<MvELSE>
							<a href="javascript:window.open( Adminurl + 'Screen=SUPT', 'RequestSupport', 'toolbar=no,location=no,directories=no,status=no,scrollbars=yes,resizable=yes,copyhistory=no,width=800,height=550' ).focus();"><MvEVAL EXPR = "{ DrawImgButton_Help(0) }"></a>
						</MvIF>
					</MvIF>

					<MvIF EXPR = "{ l.button_code EQ 'Text' }">
						<MvASSIGN NAME = "l.sep_pos" VALUE = "{ ':' IN l.button_link }">
						<MvASSIGN NAME = "l.button_text" VALUE = "{ substring( l.button_link, 1, l.sep_pos - 1 ) }">
						<MvASSIGN NAME = "l.button_link" VALUE = "{ substring( l.button_link, l.sep_pos + 1, len( l.button_link ) - l.sep_pos ) }">

						<MvIF EXPR = "{ ( 'http:' IN l.button_link ) EQ 1 }">
							<a target="new" href="{ l.button_link }"><MvEVAL EXPR = "{ l.button_text }"></a>
						<MvELSE>
							<a target="new" href="{ 'http://docs.smallbusiness.miva.com/en-US/merchant/5/help/' $ l.button_link }"><MvEVAL EXPR = "{ l.button_text }"></a>
						</MvIF>
					</MvIF>

					<MvASSIGN NAME = "l.pos" VALUE = "{ l.pos + 1 }">
					<MvASSIGN NAME = "l.current" VALUE = "{ gettoken( l.buttons, ',', l.pos ) }">
				</MvWHILE>
			</MvIF>
		</span>
</MvFUNCTION>

<MvFUNCTION NAME = "EndScreen" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
 				<MvEVAL EXPR = "{ JavaScript_SetVariables( 'g', 'Tab' ) }">
				<MvEVAL EXPR = "{ Pendo_Initialize() }">
			</form>
		</div>
	</body> 
</MvFUNCTION>

<MvFUNCTION NAME = "SetTabDisplayOrderUniqueIdentifier" PARAMETERS = "identifier" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Session:tabdisplayorder:identifier" VALUE = "{ l.identifier }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawTabs" PARAMETERS = "default, tabs" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.TabList"								VALUE = "">
	<MvASSIGN NAME = "g.DrawTabs_Default_Tab"					VALUE = "">
	<MvASSIGN NAME = "g.DrawTabs_Default_TabSection"			VALUE = "">

	<MvASSIGN NAME = "l.tab_found"								VALUE = 0>
	<MvASSIGN NAME = "l.default_tab_found"						VALUE = 0>
	<MvASSIGN NAME = "l.output_tab_count"						VALUE = "{ DrawTabs_GenerateOutputList( l.tabs, l.output_tabs ) }">
	<MvASSIGN NAME = "l.ordered_tab_count" 						VALUE = "{ DetermineDefaultTab_GenerateOrderedList( l.ordered_tabs ) }">

	<MvFOREACH ITERATOR = "l.tab" ARRAY = "l.output_tabs" COUNT = "{ l.output_tab_count }">
		<MvIF EXPR = "{ g.Tab EQ l.tab:group_code }">
			<MvASSIGN NAME = "l.tab_found"						VALUE = 1>

			<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ NOT ISNULL l.tab:section_code AND l.tab:section_code EQ g.Tab }">
			<MvASSIGN NAME = "l.tab_found"						VALUE = 1>
			<MvASSIGN NAME = "g.Tab"							VALUE = "{ l.tab:group_code }">
			<MvASSIGN NAME = "g.Tab_Section"					VALUE = "{ l.tab:section_code }">

			<MvFOREACHSTOP>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.default }">
			<MvIF EXPR = "{ NOT ISNULL l.tab:section_code AND l.tab:section_code EQ l.default }">
				<MvASSIGN NAME = "l.default_tab"				VALUE = "{ l.tab:group_code }">
				<MvASSIGN NAME = "l.default_tabsection"			VALUE = "{ l.tab:section_code }">

				<MvASSIGN NAME = "l.default_tab_found"			VALUE = 1>
			<MvELSEIF EXPR = "{ l.default EQ l.tab:group_code }">
				<MvASSIGN NAME = "l.default_tab"				VALUE = "{ l.tab:group_code }">
				<MvASSIGN NAME = "l.default_tabsection"			VALUE = "">

				<MvASSIGN NAME = "l.default_tab_found"			VALUE = 1>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ ISNULL l.ordered_tabs }">
		<MvIF EXPR = "{ l.default_tab_found }">
			<MvASSIGN NAME = "g.DrawTabs_Default_Tab" 			VALUE = "{ l.default_tab }">
			<MvASSIGN NAME = "g.DrawTabs_Default_TabSection" 	VALUE = "{ l.default_tabsection }">
		<MvELSE>
			<MvASSIGN NAME = "g.DrawTabs_Default_Tab" 			VALUE = "{ l.output_tabs[ 1 ]:group_code }">
			<MvASSIGN NAME = "g.DrawTabs_Default_TabSection" 	VALUE = "">
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "g.DrawTabs_Default_Tab" 				VALUE = "{ DetermineDefaultTab_LowLevel( l.ordered_tabs, l.output_tabs ) }">
		<MvASSIGN NAME = "g.DrawTabs_Default_TabSection" 		VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ ( ( NOT l.tab_found ) AND ( NOT ISNULL g.Tab ) ) OR g.Session:cache:drawtabs:invalid_tab }">
		<span id="mm9_tab_not_found" class="mm9_nodisplay"
			  data-mmoriginal_tab="{ encodeentities( g.Tab ) }">
		</span>
	</MvIF>

	<MvIF EXPR = "{ NOT l.tab_found }">
		<MvASSIGN NAME = "g.Tab" 								VALUE = "{ g.DrawTabs_Default_Tab }">
		<MvASSIGN NAME = "g.Tab_Section" 						VALUE = "{ g.DrawTabs_Default_TabSection }">
	</MvIF>

	<div class="mm9_nodisplay">
		<MvFOREACH ITERATOR = "l.tab" ARRAY = "l.output_tabs" COUNT = "{ l.output_tab_count }">
			<MvASSIGN NAME = "l.output_tab"						VALUE = "">
			<MvASSIGN NAME = "l.output_tab:group_code"			VALUE = "{ l.tab:group_code }">
			<MvASSIGN NAME = "l.output_tab:section_code"		VALUE = "{ l.tab:section_code }">
			<MvASSIGN NAME = "l.output_tab:display_name"		VALUE = "{ miva_html_strip( l.tab:display_name, '' ) }">
			<MvASSIGN NAME = "l.output_tab:current"				VALUE = 0>
			<MvASSIGN NAME = "l.output_tab:default"				VALUE = 0>

			<MvIF EXPR = "{ ISNULL l.output_tab:section_code }">
				<MvIF EXPR = "{ g.Tab EQ l.output_tab:group_code }">
					<MvASSIGN NAME = "l.output_tab:current"		VALUE = 1>
				</MvIF>

				<MvIF EXPR = "{ l.default EQ l.output_tab:group_code }">
					<MvASSIGN NAME = "l.output_tab:default"		VALUE = 1>
				</MvIF>
			</MvIF>

			<MvEVAL EXPR = "{ DrawGroupTab( l.output_tab ) }">
		</MvFOREACH>
	</div>

	<MvIF EXPR = "{ NOT ISNULL g.Session:tabdisplayorder:identifier }">
		<MvEVAL EXPR = "{ JavaScript_Set_A_Variable( 'TabDisplayOrder_UniqueIdentifier', g.Session:tabdisplayorder:identifier ) }">
	</MvIF>

	<MvASSIGN NAME = "g.TabList" VALUE = "{ l.output_tabs }">
</MvFUNCTION>

<MvFUNCTION NAME = "TabIsValid" PARAMETERS = "tab, tabs var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.tab }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.raw_tab" ARRAY = "l.tablist" COUNT = "{ [ g.Library_Utilities ].SplitStringAndTrim( l.tabs, ',', l.tablist ) }">
		<MvIF EXPR = "{ ISNULL l.raw_tab }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvEVAL EXPR = "{ ParseTab( l.raw_tab, l.parsed_tab ) }">

		<MvIF EXPR = "{ l.tab EQ l.parsed_tab:group_code }">
			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ NOT ISNULL l.parsed_tab:section_code AND l.parsed_tab:section_code EQ l.tab }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT ISNULL l.tab }">
		<MvASSIGN NAME = "g.Session:cache:drawtabs:invalid_tab" VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawTabs_GenerateOutputList" PARAMETERS = "tabs var, output_tabs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output_tabs"		VALUE = "">
	<MvASSIGN NAME = "l.output_tab_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.tab" ARRAY = "l.tablist" COUNT = "{ [ g.Library_Utilities ].SplitStringAndTrim( l.tabs, ',', l.tablist ) }">
		<MvIF EXPR = "{ ISNULL l.tab }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvEVAL EXPR = "{ ParseTab( l.tab, l.parsed_tab ) }">

		<MvASSIGN NAME = "l.output_tab:group_code"		VALUE = "{ l.parsed_tab:group_code }">
		<MvASSIGN NAME = "l.output_tab:section_code"	VALUE = "{ l.parsed_tab:section_code }">
		<MvASSIGN NAME = "l.output_tab:display_name"	VALUE = "{ l.parsed_tab:display_name }">

		<MvASSIGN NAME = "l.output_tab_count"			VALUE = "{ miva_array_insert( l.output_tabs, l.output_tab, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.output_tab_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DetermineDefaultTab" PARAMETERS = "tabs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output_tab_count"	VALUE = "{ DrawTabs_GenerateOutputList( l.tabs, l.output_tabs ) }">
	<MvASSIGN NAME = "l.ordered_tab_count"  VALUE = "{ DetermineDefaultTab_GenerateOrderedList( l.ordered_tabs ) }">

	<MvIF EXPR = "{ ISNULL l.ordered_tabs }">
		<MvFUNCTIONRETURN VALUE = "{ l.output_tabs[ 1 ]:group_code }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ DetermineDefaultTab_LowLevel( l.ordered_tabs, l.output_tabs ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DetermineDefaultTab_GenerateOrderedList" PARAMETERS = "ordered_tabs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ordered_tabs"		VALUE = "">
	<MvASSIGN NAME = "l.ordered_tab_count"	VALUE = 0>

	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">	<MvASSIGN NAME = "l.store_id" VALUE = 0>
	<MvELSE>										<MvASSIGN NAME = "l.store_id" VALUE = "{ g.Store:id }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Session:tabdisplayorder:identifier }">		<MvASSIGN NAME = "l.key_prefix" VALUE = "{ g.Screen $ '.tab_order' }">
	<MvELSE>															<MvASSIGN NAME = "l.key_prefix" VALUE = "{ g.Screen $ '.' $ g.Session:tabdisplayorder:identifier $ '.tab_order' }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.userpreference" ARRAY = "l.userpreferencelist" COUNT = "{ [ g.Library_DB ].UserPreferenceList_Load_Heirarchy( l.store_id, g.User:id, l.key_prefix, l.userpreferencelist ) }">
		<MvFOREACH ITERATOR = "l.tab" ARRAY = "l.userpreference_tablist" COUNT = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.userpreference:value, ',', l.userpreference_tablist ) }">
			<MvASSIGN NAME = "l.group_end" 						VALUE = "{ indexof( ':', l.tab, 1 ) }">

			<MvIF EXPR = "{ ( l.tab EQ '::new_tabs_here::' ) OR ( l.group_end EQ 0 ) }">
				<MvASSIGN NAME = "l.group_code" 				VALUE = "{ l.tab }">
				<MvASSIGN NAME = "l.section_code" 				VALUE = "">
			<MvELSE>
				<MvASSIGN NAME = "l.group_code" 				VALUE = "{ substring_var( l.tab, 1, l.group_end - 1 ) }">
				<MvASSIGN NAME = "l.section_code" 				VALUE = "{ substring_var( l.tab, l.group_end + 1, len_var( l.tab ) - l.group_end + 1 ) }">
			</MvIF>

			<MvASSIGN NAME = "l.tab" MEMBER = "group_code" 		VALUE = "{ l.group_code }">
			<MvASSIGN NAME = "l.tab" MEMBER = "section_code" 	VALUE = "{ l.section_code }">

			<MvASSIGN NAME = "l.ordered_tab_count" 				VALUE = "{ miva_array_insert( l.ordered_tabs, l.tab, -1 ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.ordered_tab_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "DetermineDefaultTab_LowLevel" PARAMETERS = "ordered_tabs var, output_tabs var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.ordered_tab" ARRAY = "l.ordered_tabs">
		<MvIF EXPR = "{ l.ordered_tab:group_code EQ '::new_tabs_here::' }">
			<MvFOREACH ITERATOR = "l.tab" ARRAY = "l.output_tabs">
				<MvIF EXPR = "{ NOT ISNULL l.tab:section_code }">
					<MvFOREACHCONTINUE>
				<MvELSEIF EXPR = "{ miva_array_search( l.ordered_tabs, 1, l.nested_ordered_tab, 'ISNULL l.nested_ordered_tab:section_code AND l.tab:group_code EQ l.nested_ordered_tab:group_code' ) EQ 0 }">
					<MvFUNCTIONRETURN VALUE = "{ l.tab:group_code }">
				</MvIF>
			</MvFOREACH>

			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ NOT ISNULL l.ordered_tab:section_code }">
			<MvFOREACHCONTINUE>
		<MvELSE>
			<MvASSIGN NAME = "l.search_index" VALUE = "{ miva_array_search( l.output_tabs, 1, l.tab, 'l.tab:group_code EQ l.ordered_tab:group_code AND l.tab:section_code EQ l.ordered_tab:section_code' ) }">

			<MvIF EXPR = "{ l.search_index NE 0 }">
				<MvFUNCTIONRETURN VALUE = "{ l.output_tabs[ l.search_index ]:group_code }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.output_tabs[ 1 ]:group_code }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawGroupTab" PARAMETERS = "output_tab var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<span class="mm10_screen_content_grouptab"
		  data-mmgroupcode="{ encodeentities( l.output_tab:group_code ) }"
		  data-mmsectioncode="{ encodeentities( l.output_tab:section_code ) }"
		  data-mmscreencode="{ encodeentities( g.Screen ) }"
		  data-mmdisplayname="{ encodeentities( l.output_tab:display_name ) }"
		  data-mmtabdefault="{ encodeentities( l.output_tab:default ) }"
		  data-mmtabcurrent="{ encodeentities( l.output_tab:current ) }">
	</span>
</MvFUNCTION>

<MvFUNCTION NAME = "ParseTab" PARAMETERS = "tab, parsed_tab var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.parsed_tab"						VALUE = "">

	<MvIF EXPR = "{ ISNULL l.tab }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.sep_pos"						VALUE = "{ ':' IN l.tab }">
	<MvASSIGN NAME = "l.code"							VALUE = "{ substring_var( l.tab, 1, l.sep_pos - 1 ) }">
	<MvASSIGN NAME = "l.parsed_tab:display_name"		VALUE = "{ substring_var( l.tab, l.sep_pos + 1, len_var( l.tab ) - l.sep_pos ) }">

	<MvASSIGN NAME = "l.group_pos"						VALUE = "{ '/' IN l.code }">

	<MvIF EXPR = "{ l.group_pos }">
		<MvASSIGN NAME = "l.parsed_tab:group_code"		VALUE = "{ substring_var( l.code, 1, l.group_pos - 1 ) }">
		<MvASSIGN NAME = "l.parsed_tab:section_code"	VALUE = "{ substring_var( l.code, l.group_pos + 1, len_var( l.code ) - l.group_pos ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.parsed_tab:group_code"		VALUE = "{ l.code }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Tab_Visible" PARAMETERS = "current_tab, tab" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_array_search( g.TabList, 1, l.element, '( l.element:group_code EQ l.current_tab AND l.element:section_code EQ l.tab ) OR
																 ( l.element:group_code EQ l.current_tab AND l.element:group_code EQ l.tab )' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawGroupTabEntry_Start" PARAMETERS = "group_code, section_code" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">	<MvASSIGN NAME = "l.store_id" VALUE = 0>
	<MvELSE>										<MvASSIGN NAME = "l.store_id" VALUE = "{ g.Store:id }">
	</MvIF>

	<MvASSIGN NAME = "l.pos" VALUE = "{ miva_array_search( g.TabList, 1, l.element, 'l.element:group_code EQ l.group_code AND l.element:section_code EQ l.section_code' ) }">

	<MvIF EXPR = "{ NOT l.pos }">
		<MvCOMMENT> dummy span output so we don't generate invalid HTML </MvCOMMENT>
		<span>
			<span>

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.tab"						VALUE = "{ g.TabList[ l.pos ] }">
	<MvASSIGN NAME = "l.tab:section_active"			VALUE = 0>
	<MvASSIGN NAME = "l.tab:visible"				VALUE = 1>

	<MvIF EXPR = "{ l.section_code EQ g.Tab_Section }">
		<MvASSIGN NAME = "l.tab:section_active"		VALUE = 1>
	<MvELSEIF EXPR = "{ [ g.Library_DB ].UserPreference_Load_Key( l.store_id, g.User:id, 'MMScreen.grouptab.' $ l.tab:group_code $ '.grouptab_entry.' $ l.tab:section_code $ '.visible', l.userpreference ) }">
		<MvIF EXPR = "{ NOT l.userpreference:value }">
			<MvASSIGN NAME = "l.tab:visible"		VALUE = 0>
		</MvIF>
	</MvIF>

	<span class="mm10_screen_content_grouptab_entry"
		  data-mmgroupcode="{ encodeentities( l.tab:group_code ) }"
		  data-mmsectioncode="{ encodeentities( l.tab:section_code ) }"
		  data-mmsectionactive="{ encodeentities( l.tab:section_active ) }"
		  data-mmvisible="{ l.tab:visible }">
		<span class="mm10_screen_content_grouptab_entry_title"><span class="mm10_screen_content_grouptab_entry_title_dropdown"><span class="mm10_screen_content_grouptab_entry_title_dropdown_bg1"></span><span class="mm10_screen_content_grouptab_entry_title_dropdown_bg2"></span></span><MvEVAL EXPR = "{ encodeentities( l.tab:display_name ) }"></span>
		<span class="mm10_screen_content_grouptab_entry_content">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawGroupTabEntry_End" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		</span>
	</span>
</MvFUNCTION>

<MvFUNCTION NAME = "BeginContent" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<div id="mm9_content">
</MvFUNCTION>

<MvFUNCTION NAME = "EndContent" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ Element_MMTextEditor_HTML() }">
	<MvEVAL EXPR = "{ Element_MMTemplateTextArea_HTML() }">
	<MvEVAL EXPR = "{ Element_MMImagePicker_HTML() }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_AI_AD ].Element_AIDialog_HTML() }">
	</div>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButtons_Suppress" PARAMETERS = "buttons" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.DrawButtons_Suppressed"	VALUE = "{ ',' $ l.buttons $ ',' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButtons_Override_OrderTabSaveButton_Text" PARAMETERS = "text" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="hidden" name="OrderTab_Save_Button_Text" value="{ encodeentities( l.text ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButtons" PARAMETERS = "buttons" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ DrawButtons_NextPrevious( l.buttons, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButtons_Message" PARAMETERS = "message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Message" VALUE = "{ l.message }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButtons_NextPrevious" PARAMETERS = "buttons, item_code" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.output_buttons"					VALUE = "">
	<MvASSIGN NAME = "l.output_button_count"			VALUE = 0>

	<MvASSIGN NAME = "l.delete_text"					VALUE = "">
	<MvASSIGN NAME = "l.delete_script"					VALUE = "">

	<MvFOREACH ITERATOR = "l.button" ARRAY = "l.split_buttons" COUNT = "{ miva_splitstring( l.buttons, ',', l.split_buttons, 'noempty' ) }">
		<MvASSIGN NAME = "l.can_output_button"			VALUE = 1>
		<MvASSIGN NAME = "l.sep_pos"					VALUE = "{ ':' IN l.button }">
		<MvASSIGN NAME = "l.action"						VALUE = "{ substring_var( l.button, 1, l.sep_pos - 1 ) }">

		<MvIF EXPR = "{ '.' IN l.action }">
			<MvASSIGN NAME = "l.button_screen"			VALUE = "{ gettoken( l.action, '.', 1 ) }">
			<MvASSIGN NAME = "l.button_action"			VALUE = "{ gettoken( l.action, '.', 2 ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.button_screen"			VALUE = "{ g.Screen }">
			<MvASSIGN NAME = "l.button_action"			VALUE = "{ l.action }">
		</MvIF>

		<MvASSIGN NAME = "l.text"						VALUE = "{ substring_var( l.button, l.sep_pos + 1, len_var( l.button ) - l.sep_pos ) }">

		<MvIF EXPR = "{ ':' IN l.text }">
			<MvASSIGN NAME = "l.button_text"			VALUE = "{ gettoken( l.text, ':', 1 ) }">
			<MvASSIGN NAME = "l.can_output_button"		VALUE = "{ CanI( gettoken( l.text, ':', 2 ), 0, int( gettoken( l.text, ':', 3 ) ), int( gettoken( l.text, ':', 4 ) ), int( gettoken( l.text, ':', 5 ) ) ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.button_text"			VALUE = "{ l.text }">
		</MvIF>

		<MvASSIGN NAME = "l.script"						VALUE = "{ trim( gettoken( l.button_text, ';', 2 ) ) }">
		<MvASSIGN NAME = "l.button_text"				VALUE = "{ trim( gettoken( l.button_text, ';', 1 ) ) }">
		<MvASSIGN NAME = "l.add_notes"					VALUE = 0>
		<MvASSIGN NAME = "l.add_conditional_notes"		VALUE = 0>

		<MvIF EXPR = "{ l.button_text EQ '[ADD_NOTES]' }">
			<MvASSIGN NAME = "l.add_notes"				VALUE = 1>
			<MvASSIGN NAME = "l.button_text"			VALUE = "[ADD]">
		<MvELSEIF EXPR = "{ l.button_text EQ '[ADDPLUS_NOTES]' }">
			<MvASSIGN NAME = "l.add_notes"				VALUE = 1>
			<MvASSIGN NAME = "l.button_text"			VALUE = "[ADDPLUS]">
		<MvELSEIF EXPR = "{ l.button_text EQ '[UPDATE_NOTES]' }">
			<MvASSIGN NAME = "l.add_notes"				VALUE = 1>
			<MvASSIGN NAME = "l.button_text"			VALUE = "[UPDATE]">
		<MvELSEIF EXPR = "{ l.button_text EQ '[ADD_CONDITIONAL_NOTES]' }">
			<MvASSIGN NAME = "l.add_conditional_notes"	VALUE = 1>
			<MvASSIGN NAME = "l.button_text"			VALUE = "[ADD]">
		<MvELSEIF EXPR = "{ l.button_text EQ '[ADDPLUS_CONDITIONAL_NOTES]' }">
			<MvASSIGN NAME = "l.add_conditional_notes"	VALUE = 1>
			<MvASSIGN NAME = "l.button_text"			VALUE = "[ADDPLUS]">
		<MvELSEIF EXPR = "{ l.button_text EQ '[UPDATE_CONDITIONAL_NOTES]' }">
			<MvASSIGN NAME = "l.add_conditional_notes"	VALUE = 1>
			<MvASSIGN NAME = "l.button_text"			VALUE = "[UPDATE]">
		</MvIF>

		<MvIF EXPR = "{ ( ',' $ l.button_text $ ',' ) IN g.DrawButtons_Suppressed }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.button_text EQ '[ADD]' }">
			<MvASSIGN NAME = "l.button_text"			VALUE = "Add">
		<MvELSEIF EXPR = "{ l.button_text EQ '[ADDPLUS]' }">
			<MvASSIGN NAME = "l.button_text"			VALUE = "Add +">
		<MvELSEIF EXPR = "{ l.button_text EQ '[DELETE]' }">
			<MvASSIGN NAME = "l.button_text"			VALUE = "Delete">
		<MvELSEIF EXPR = "{ l.button_text EQ '[UPDATE]' }">
			<MvASSIGN NAME = "l.button_text"			VALUE = "Update">
		</MvIF>

		<MvIF EXPR = "{ ( ',' $ l.button_text $ ',' ) IN g.DrawButtons_Suppressed }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.script }">
			<MvIF EXPR = "{ l.button_text EQ 'Add +' }">
				<MvASSIGN NAME = "l.script"				VALUE = "{ 'SubmitAddMultiple( \'' $ encodejavascriptstring( l.button_screen ) $ '\', \'' $ encodejavascriptstring( l.button_action ) $ '\', this )' }">
			<MvELSEIF EXPR = "{ ( ( 'Delete' IN l.button_text ) EQ 1 ) AND NOT ISNULL l.button_action }">
				<MvASSIGN NAME = "l.script"				VALUE = "{ 'DeleteItem( \'' $ encodejavascriptstring( l.button_screen ) $ '\', \'' $ encodejavascriptstring( l.button_action ) $ '\', this )' }">
			<MvELSE>
				<MvASSIGN NAME = "l.script"				VALUE = "{ 'SubmitForm( \'' $ encodejavascriptstring( l.button_screen ) $ '\', \'' $ encodejavascriptstring( l.button_action ) $ '\', this )' }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.can_output_button }">
			<MvIF EXPR = "{ ( 'Delete' IN l.button_text ) EQ 1 }">
				<MvASSIGN NAME = "l.delete_script"																VALUE = "{ l.script }">
				<MvASSIGN NAME = "l.delete_text"																VALUE = "{ l.button_text }">
			<MvELSE>
				<MvASSIGN NAME = "l.draw_count"																	VALUE = "{ l.draw_count + 1 }">
				<MvASSIGN NAME = "l.draw_buttons" INDEX = "{ l.draw_count }" MEMBER = "text"					VALUE = "{ l.button_text }">
				<MvASSIGN NAME = "l.draw_buttons" INDEX = "{ l.draw_count }" MEMBER = "script"					VALUE = "{ l.script }">
				<MvASSIGN NAME = "l.draw_buttons" INDEX = "{ l.draw_count }" MEMBER = "add_notes"				VALUE = "{ l.add_notes }">
				<MvASSIGN NAME = "l.draw_buttons" INDEX = "{ l.draw_count }" MEMBER = "add_conditional_notes"	VALUE = "{ l.add_conditional_notes }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<span class="mm9_nodisplay">
		<MvIF EXPR = "{ NOT ISNULL g.Message }">
			<span id="mm9_screen_message" data-mmmessage="{ encodeentities( g.Message ) }"></span>
		</MvIF>

		<MvIF EXPR = "{ ( ( ISNULL g.DrawTabs_Default_Tab ) OR ( g.Tab EQ g.DrawTabs_Default_Tab ) ) AND
						( NOT ISNULL l.delete_script ) }">
			<input type="button" value="{ encodeentities( l.delete_text ) }" class="mm9_scrape_actionbutton_negative" onclick="{ l.delete_script $ ';' }" />
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.item_code }">
			<MvASSIGN NAME = "l.url" VALUE = "{ encodejavascriptstring( g.adminurl $ 'Screen=' $ encodeattribute( g.Screen ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&Tab=' $ encodeattribute( g.Tab ) ) }">

			<input type="button" value="First"		class="mm9_scrape_actionbutton_nextprev" onclick="{ 'return SwitchItem_Params( \'' $ l.url $ '\', \'Edit_Item=' $ encodejavascriptstring( encodeattribute( l.item_code ) ) $ '&First_Item=1\' )' }" />
			<input type="button" value="Previous"	class="mm9_scrape_actionbutton_nextprev" onclick="{ 'return SwitchItem_Params( \'' $ l.url $ '\', \'Edit_Item=' $ encodejavascriptstring( encodeattribute( l.item_code ) ) $ '&Prev_Item=1\' )' }" />
			<input type="button" value="Next"		class="mm9_scrape_actionbutton_nextprev" onclick="{ 'return SwitchItem_Params( \'' $ l.url $ '\', \'Edit_Item=' $ encodejavascriptstring( encodeattribute( l.item_code ) ) $ '&Next_Item=1\' )' }" />
			<input type="button" value="Last"		class="mm9_scrape_actionbutton_nextprev" onclick="{ 'return SwitchItem_Params( \'' $ l.url $ '\', \'Edit_Item=' $ encodejavascriptstring( encodeattribute( l.item_code ) ) $ '&Last_Item=1\' )' }" />
		</MvIF>

		<MvFOREACH ITERATOR = "l.draw_button" ARRAY = "l.draw_buttons" COUNT = "{ l.draw_count }">
			<MvIF EXPR = "{ l.draw_button:add_notes }">					<input type="button" value="{ encodeentities( l.draw_button:text ) }" class="mm9_scrape_actionbutton_positive" onclick="{ l.draw_button:script $ ';' }" data-mmaddnotes />
			<MvELSEIF EXPR = "{ l.draw_button:add_conditional_notes }">	<input type="button" value="{ encodeentities( l.draw_button:text ) }" class="mm9_scrape_actionbutton_positive" onclick="{ l.draw_button:script $ ';' }" data-mmaddconditionalnotes />
			<MvELSE>													<input type="button" value="{ encodeentities( l.draw_button:text ) }" class="mm9_scrape_actionbutton_positive" onclick="{ l.draw_button:script $ ';' }" />
			</MvIF>
		</MvFOREACH>

		<MvEVAL EXPR = "{ DrawButton_Reset() }">

		<MvIF EXPR = "{ miva_array_search( l.draw_buttons, 1, l.draw_button, 'l.draw_button:add_notes OR l.draw_button:add_conditional_notes' ) }">
			<input type="hidden" name="Changeset_Notes" value="" />
		</MvIF>
	</span>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_ViewOnLiveStore" PARAMETERS = "uri" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ DrawButton_ViewOnLiveStore_LowLevel( g.Domain:mm_url $ l.uri ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_ViewProductOnLiveStore" PARAMETERS = "product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.flags"				VALUE = "">
	<MvASSIGN NAME = "l.flags:nosession"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = "{ DrawButton_ViewOnLiveStore_LowLevel( [ g.Module_Feature_URI_UT ].Store_Product_URL( l.product, l.flags ) ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_ViewCategoryOnLiveStore" PARAMETERS = "category var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.flags"				VALUE = "">
	<MvASSIGN NAME = "l.flags:nosession"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = "{ DrawButton_ViewOnLiveStore_LowLevel( [ g.Module_Feature_URI_UT ].Store_Category_URL( l.category, l.flags ) ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_ViewPageOnLiveStore" PARAMETERS = "page var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.flags"				VALUE = "">
	<MvASSIGN NAME = "l.flags:nosession"	VALUE = 1>

	<MvFUNCTIONRETURN VALUE = "{ DrawButton_ViewOnLiveStore_LowLevel( [ g.Module_Feature_URI_UT ].Store_Page_URL( l.page, l.flags ) ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_ViewOnLiveStore_LowLevel" PARAMETERS = "url" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="button" class="mm9_scrape_actionbutton_viewonlivestore" value="View On Live Store" onclick="{ 'window.open( \'' $ JavaScriptEncode( l.url ) $ '\', \'_blank\', \'noopener\' );' }" />
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_CopyProduct" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="button" class="mm9_scrape_actionbutton_positive" value="Copy Product" onclick="Copy_Product();" />
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_CopyPage" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="button" class="mm9_scrape_actionbutton_positive" value="Copy Page" onclick="Copy_Page();" />
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_CopyLayout" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="button" class="mm9_scrape_actionbutton_positive" value="Copy Layout" onclick="Copy_Page();" />
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_CopyFragment" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="button" class="mm9_scrape_actionbutton_positive" value="Copy Fragment" onclick="Copy_Page();" />
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_PageBuilder" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="button" class="mm9_scrape_actionbutton_positive" data-drawassecondarybutton value="Page Builder" onclick="OpenPageBuilder();" />
</MvFUNCTION>

<MvFUNCTION NAME = "DrawButton_Reset" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input type="button" value="Reset" class="mm9_scrape_actionbutton_positive" onclick="{ 'ResetForm( \'' $ JavaScriptEncode( g.Screen ) $ '\', \'' $ JavaScriptEncode( g.Tab ) $ '\', this );' }">
</MvFUNCTION>

<MvFUNCTION NAME = "JavaScript_SetVariables" PARAMETERS = "scope, variables" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.line" 			VALUE = "{ asciichar(10) }">
	<MvASSIGN NAME = "l.java_script" 		VALUE = "{ l.line $ '<script type="text/javascript">' }">
	<MvASSIGN NAME = "l.pos" 			VALUE = 1>
	<MvASSIGN NAME = "l.variable" 			VALUE = "{ glosub( trim( gettoken( l.variables, ',', l.pos ) ), '\'', '\\\'' ) }">
	<MvWHILE EXPR = "{ l.variable }">
		<MvASSIGN NAME = "l.var_value" 		VALUE = "{ miva_variable_value( l.scope $ '.' $ l.variable ) }">

		<MvASSIGN NAME = "l.java_script" 	VALUE = "{ l.java_script $ l.line $ 'var ' $ l.variable $ ' = ' $ '\'' $ JavaScriptEncode_NoEntities( l.var_value ) $ '\'' $ ';' }">

		<MvASSIGN NAME = "l.pos" 		VALUE = "{ l.pos + 1 }">
		<MvASSIGN NAME = "l.variable" 		VALUE = "{ trim( gettoken( l.variables, ',', l.pos ) ) }">
	</MvWHILE>

	<MvASSIGN NAME = "l.java_script" VALUE = "{ l.java_script $ l.line $ '</script>' $ l.line }">
	<MvFUNCTIONRETURN VALUE = "{ l.java_script }">
</MvFUNCTION>

<MvFUNCTION NAME = "JavaScript_SetVariables_Boolean" PARAMETERS = "scope, variables" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.line" 			VALUE = "{ asciichar( 10 ) }">
	<MvASSIGN NAME = "l.java_script"	VALUE = "{ l.line $ '<script type="text/javascript">' }">

	<MvFOREACH ITERATOR = "l.var" ARRAY = "l.vars" COUNT = "{ [ g.Library_Utilities ].SplitStringAndTrim( l.variables, ',', l.vars ) }">
		<MvIF EXPR = "{ miva_variable_value( l.scope $ '.' $ l.var ) }">	<MvASSIGN NAME = "l.var_value" VALUE = "true">
		<MvELSE>															<MvASSIGN NAME = "l.var_value" VALUE = "false">
		</MvIF>

		<MvASSIGN NAME = "l.java_script" VALUE = "{ l.java_script $ l.line $ 'var ' $ l.var $ ' = ' $ l.var_value $ ';' }">
	</MvFOREACH>

	<MvASSIGN NAME = "l.java_script" VALUE = "{ l.java_script $ l.line $ '</script>' $ l.line }">

	<MvFUNCTIONRETURN VALUE = "{ l.java_script }">
</MvFUNCTION>

<MvFUNCTION NAME = "JavaScript_Set_A_Variable" PARAMETERS = "name, value" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.line" 		VALUE = "{ asciichar(10) }">
	<MvASSIGN NAME = "l.java_script" 	VALUE = "{ l.line $ '<script type="text/javascript">' }">
	<MvASSIGN NAME = "l.java_script" 	VALUE = "{ l.java_script $ l.line $ 'var ' $ l.name $ ' = \'' $ JavaScriptEncode_NoEntities( l.value ) $ '\';' }">

	<MvASSIGN NAME = "l.java_script" 	VALUE = "{ l.java_script $ l.line $ '</script>' $ l.line }">
	<MvFUNCTIONRETURN VALUE = "{ l.java_script }">
</MvFUNCTION>

<MvFUNCTION NAME = "JavaScript_Set_A_Variable_Boolean" PARAMETERS = "name, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.value }">	<MvASSIGN NAME = "l.value" VALUE = "true">
	<MvELSE>					<MvASSIGN NAME = "l.value" VALUE = "false">
	</MvIF>

	<MvASSIGN NAME = "l.line" 			VALUE = "{ asciichar( 10 ) }">
	<MvASSIGN NAME = "l.java_script" 	VALUE = "{ l.line $ '<script type="text/javascript">' }">
	<MvASSIGN NAME = "l.java_script" 	VALUE = "{ l.java_script $ l.line $ 'var ' $ l.name $ ' = ' $ l.value $ ';' }">
	<MvASSIGN NAME = "l.java_script" 	VALUE = "{ l.java_script $ l.line $ '</script>' $ l.line }">

	<MvFUNCTIONRETURN VALUE = "{ l.java_script }">
</MvFUNCTION>

<MvFUNCTION NAME = "JavaScriptEncode" PARAMETERS = "field" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JavaScriptEncode_NoEntities( l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JavaScriptEncode_NoEntities" PARAMETERS = "field" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Filename_JSON ].JSON_Encode( l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Search" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Search">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'search.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'search.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Select" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Select">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'select.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'select.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Lookup" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Lookup">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'lookup.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'lookup.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_All" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "All">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'all_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'all.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Available" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Available">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'avail_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'avail.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Unassigned" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Unassigned">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'uassgn_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'uassgn.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Assigned" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Assigned">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'assign_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'assign.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButtonNew_All" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "All">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'all_down1.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'all_up.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_EditHere" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Edit Here">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'edith_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'edith.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Uncategorized" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Uncategorized">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'uncat_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'uncat.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Active" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Active">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'active_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'active.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Unbatched" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Show Unbatched Orders">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'unbatch_down.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'unbatch_up.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Previous" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Previous">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'prev.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'prev.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Next" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Next">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'next.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'next.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Edit" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Edit">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'edit.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'edit.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Refresh" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Refresh">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'refresh.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'refresh.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Upload" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Upload File">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'upload.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'upload.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Links" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Links">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'link.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'link.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Help" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.alt" VALUE = "Help">

	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'help.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'help.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Lock" PARAMETERS = "pressed" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.alt" VALUE = "Unlocked">

		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'lock_p.gif' }">
	<MvELSE>

		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'lock.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ 'Locked' $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_NewX" PARAMETERS = "pressed, alt" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.pressed }">
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'newb_p.gif' }">
	<MvELSE>
		<MvASSIGN NAME = "l.image" VALUE = "{ g.AdminGraphics_Path $ 'newb.gif' }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ '<IMG ALT = "' $ l.alt $ '" BORDER = 0 SRC = "' $ l.image $ '">' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_CryptoKey" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Encryption Key" border="0" src="{ g.AdminGraphics_Path $ 'add_encryp.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Payout" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Payout" border="0" src="{ g.AdminGraphics_Path $ 'add_payout.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Template" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Template" border="0" src="{ g.AdminGraphics_Path $ 'add_template.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add" border="0" src="{ g.AdminGraphics_Path $ 'add_p.gif' }">
	<MvELSE>
		<img alt="Add" border="0" src="{ g.AdminGraphics_Path $ 'add.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Attribute" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Attribute" border="0" src="{ g.AdminGraphics_Path $ 'add_attrib_p.gif' }">
	<MvELSE>
		<img alt="Add Attribute" border="0" src="{ g.AdminGraphics_Path $ 'add_attrib.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Option" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Option" border="0" src="{ g.AdminGraphics_Path $ 'add_opt_p.gif' }">
	<MvELSE>
		<img alt="Add Option" border="0" src="{ g.AdminGraphics_Path $ 'add_opt.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_List" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add List" border="0" src="{ g.AdminGraphics_Path $ 'add_list.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Page" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Page" border="0" src="{ g.AdminGraphics_Path $ 'add_page.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Item" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Item" border="0" src="{ g.AdminGraphics_Path $ 'add_item.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Upsale" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Upsold Product" border="0" src="{ g.AdminGraphics_Path $ 'add_upsale.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Affiliate" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Affiliate" border="0" src="{ g.AdminGraphics_Path $ 'add_affil.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Adjustment" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Adjustment" border="0" src="{ g.AdminGraphics_Path $ 'add_adjust.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Extension" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Extension" border="0" src="{ g.AdminGraphics_Path $ 'add_extension_p.gif' }">
	<MvELSE>
		<img alt="Add Extension" border="0" src="{ g.AdminGraphics_Path $ 'add_extension.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Method" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Method" border="0" src="{ g.AdminGraphics_Path $ 'add_method_p.gif' }">
	<MvELSE>
		<img alt="Add Method" border="0" src="{ g.AdminGraphics_Path $ 'add_method.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Range" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Range" border="0" src="{ g.AdminGraphics_Path $ 'add_range_p.gif' }">
	<MvELSE>
		<img alt="Add Range" border="0" src="{ g.AdminGraphics_Path $ 'add_range.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Province" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Province" border="0" src="{ g.AdminGraphics_Path $ 'add_province_p.gif' }">
	<MvELSE>
		<img alt="Add Province" border="0" src="{ g.AdminGraphics_Path $ 'add_province.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Rate" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Rate" border="0" src="{ g.AdminGraphics_Path $ 'add_rate_p.gif' }">
	<MvELSE>
		<img alt="Add Rate" border="0" src="{ g.AdminGraphics_Path $ 'add_rate.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Country" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add Country" border="0" src="{ g.AdminGraphics_Path $ 'add_country_p.gif' }">
	<MvELSE>
		<img alt="Add Country" border="0" src="{ g.AdminGraphics_Path $ 'add_country.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Category" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Category" border="0" src="{ g.AdminGraphics_Path $ 'add_category.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Customer" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Customer" border="0" src="{ g.AdminGraphics_Path $ 'add_customer.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Group" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Group" border="0" src="{ g.AdminGraphics_Path $ 'add_group.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Product" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Product" border="0" src="{ g.AdminGraphics_Path $ 'add_product.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_User" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add User" border="0" src="{ g.AdminGraphics_Path $ 'add_user.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_Module" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Add Module" border="0" src="{ g.AdminGraphics_Path $ 'add_mod.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Add_State" PARAMETERS = "pushed" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.pushed }">
		<img alt="Add State" border="0" src="{ g.AdminGraphics_Path $ 'add_state_p.gif' }">
	<MvELSE>
		<img alt="Add State" border="0" src="{ g.AdminGraphics_Path $ 'add_state.gif' }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Export_Page" PARAMETERS= "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Export Page" border="0" src="{ g.AdminGraphics_Path $ 'btn_export_page.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawImgButton_Import_Page" PARAMETERS= "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<img alt="Import Page" border="0" src="{ g.AdminGraphics_Path $ 'btn_import_page.gif' }">
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck" PARAMETERS = "checked, alt" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ encodeentities( l.alt ) }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_Assigned" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Assigned' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_Taxable" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Taxable' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_Active" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Active' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_Administrator" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Administrator' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_CreateUsers" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Create Users' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_Method" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Method' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_Default" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Default' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheck_Required" PARAMETERS = "checked" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.checked }">
		<img alt="{ 'Required' }" border="0" src="{ g.AdminGraphics_Path $ 'check.gif' }">
	<MvELSE>
		&nbsp;
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawMMButton" PARAMETERS = "text, image, onclick" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<mm-button text="{ encodeentities( l.text ) }" image="{ encodeentities( l.image ) }" onclick="{ encodeentities( l.onclick ) }"></mm-button>
</MvFUNCTION>

<MvFUNCTION NAME = "Show_BoldNA" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<b>
	N/A
	</b>
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Show_NA" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	N/A
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Screen_CheckAll_Member" PARAMETERS = "check_remove, member" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<br>
	<a href="{ 'JavaScript:CheckAll_Member( \'' $ JavaScriptEncode( l.check_remove ) $ '\', \'' $ JavaScriptEncode( l.member ) $ '\', 1 );' }"><img border="0" src="{ g.AdminGraphics_Path $ 'checkall.gif' }" alt="Check All"></a>
	&nbsp;
	<a href="{ 'JavaScript:CheckAll_Member( \'' $ JavaScriptEncode( l.check_remove ) $ '\', \'' $ JavaScriptEncode( l.member ) $ '\', 0 );' }"><img border="0" src="{ g.AdminGraphics_Path $ 'uncheckall.gif' }" alt="Uncheck All"></a>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Screen_CheckAll" PARAMETERS = "check_remove" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<br>
	<a href="{ 'JavaScript:CheckAll( \'' $ JavaScriptEncode( l.check_remove ) $ '\', 1 );' }"><img border="0" src="{ g.AdminGraphics_Path $ 'checkall.gif' }" alt="Check All"></a>
	&nbsp;
	<a href="{ 'JavaScript:CheckAll( \'' $ JavaScriptEncode( l.check_remove ) $ '\', 0 );' }"><img border="0" src="{ g.AdminGraphics_Path $ 'uncheckall.gif' }" alt="Uncheck All"></a>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Screen_CheckAllModified" PARAMETERS = "check_remove" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<br>
	<a href="{ 'JavaScript:CheckAllModified( \'' $ JavaScriptEncode( l.check_remove ) $ '\', 1 );' }"><img border="0" src="{ g.AdminGraphics_Path $ 'checkall.gif' }" alt="Check All"></a>
	&nbsp;
	<a href="{ 'JavaScript:CheckAllModified( \'' $ JavaScriptEncode( l.check_remove ) $ '\', 0 );' }"><img border="0" src="{ g.AdminGraphics_Path $ 'uncheckall.gif' }" alt="Uncheck All"></a>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Draw_FieldSet_Open" PARAMETERS = "header, height" STANDARDOUTPUTLEVEL = "text,html,compresswhitespace">
	<table cellspacing="0" cellpadding="4" border="0" width="100%">
	<tr><td valign="top" width="100%">
		<fieldset style="padding:0px 5px 20px 5px; margin-top:15px;">
			<legend><MvEVAL EXPR = "{ l.header }"></legend>
			<!--[if IE]><br /><![endif]-->
			<div style="{ 'height:' $ l.height $ 'px; white-space:nowrap;' }">
				<table>
</MvFUNCTION>

<MvFUNCTION NAME = "Draw_FieldSet_Close" STANDARDOUTPUTLEVEL = "text,html,compresswhitespace">
				</table>
			</div>
		</fieldset>
	</td></tr>
	</table>
</MvFUNCTION>

<MvFUNCTION NAME = "DrawCheckUncheckAll_In" PARAMETERS = "container_id" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ '<a href="JavaScript:CheckAll_In( \'' $ JavaScriptEncode( l.container_id ) $ '\', true );">check all</a> | <a href="JavaScript:CheckAll_In( \'' $ JavaScriptEncode( l.container_id ) $ '\', false );">uncheck all</a>' }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_UI_JavaScript" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Filename_Clientside ].Combined_Component_Begin( 'admin/core.js', 'admin/ui.js', l.component ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Clientside ].Combined_Component_External_Dependencies_Begin( l.component ) }">
		<MvEVAL EXPR = "{ JavaScript_SetVariables( 'g', 'adminurl_nosep' ) }">
		<MvEVAL EXPR = "{ JavaScript_Set_A_Variable(			'Store_Weight_Unit',				g.Store:wtunitcode ) }">
		<MvEVAL EXPR = "{ JavaScript_Set_A_Variable(			'Store_Weight_DisplayUnit',			g.Store:wtunits ) }">
		<MvEVAL EXPR = "{ JavaScript_Set_A_Variable_Boolean(	'Store_Weight_DisplayMixedUnits',	g.Store:wtdispmix ) }">
		<MvEVAL EXPR = "{ JavaScript_Set_A_Variable_Boolean(	'Store_Weight_DisplaySmallerUnits',	g.Store:wtdisplow ) }">
		<MvEVAL EXPR = "{ JavaScript_Set_A_Variable(			'Store_Weight_MinimumPrecision',	g.Store:wtdispdig ) }">

		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Combined_Component_External_Dependencies_End( l.component ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Clientside ].Combined_Component_End( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_UI_JavaScript_Combined" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Combined_Component_Merge( 'admin/ui.js' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_AdminUI_CSS" PARAMETERS = "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Element_AdminUI_CSS }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "g.Element_AdminUI_CSS" VALUE = 1>

	<MvEVAL EXPR = "{ Element_AdminFonts_CSS() }">
	<link type="text/css" rel="stylesheet" href="{ g.clientside_url $ 'Filename=admin/admin_ui.css' }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_AdminFonts_CSS" PARAMETERS = "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Element_AdminFonts_CSS }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<style type="text/css">
		@font-face
		{
			font-family: 'MuseoSans';
			src: url('fonts/MuseoSans_100-webfont.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight: lighter;
			font-style: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'MuseoSans';
			src: url('fonts/MuseoSans_300-webfont.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight: normal;
			font-style: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'MuseoSans';
			src: url('fonts/MuseoSans_500-webfont.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight: bold;
			font-style: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'MivaIcons';
			src: url('fonts/mivaicons.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/mivaicons.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight: normal;
			font-style: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Display';
			src: url('fonts/NeueHaasGrotDisp-76BoldItalic-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotDisp-76BoldItalic-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  700;
			font-style:   italic;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Display';
			src: url('fonts/NeueHaasGrotDisp-75Bold-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotDisp-75Bold-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  700;
			font-style:   normal;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Display';
			src: url('fonts/NeueHaasGrotDisp-66MediumItalic-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotDisp-66MediumItalic-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  500;
			font-style:   italic;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Display';
			src: url('fonts/NeueHaasGrotDisp-65Medium-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotDisp-65Medium-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  500;
			font-style:   normal;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Display';
			src: url('fonts/NeueHaasGrotDisp-56Italic-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotDisp-56Italic-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  400;
			font-style:   italic;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Display';
			src: url('fonts/NeueHaasGrotDisp-55Roman-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotDisp-55Roman-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  400;
			font-style:   normal;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Text';
			src: url('fonts/NeueHaasGrotText-76BoldItalic-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotText-76BoldItalic-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  700;
			font-style:   italic;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Text';
			src: url('fonts/NeueHaasGrotText-75Bold-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotText-75Bold-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  700;
			font-style:   normal;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Text';
			src: url('fonts/NeueHaasGrotText-66MediumItalic-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotText-66MediumItalic-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  500;
			font-style:   italic;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Text';
			src: url('fonts/NeueHaasGrotText-65Medium-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotText-65Medium-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  500;
			font-style:   normal;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Text';
			src: url('fonts/NeueHaasGrotText-56Italic-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotText-56Italic-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  400;
			font-style:   italic;
			font-stretch: normal;
			font-display: fallback;
		}

		@font-face
		{
			font-family: 'Neue Haas Grotesk Text';
			src: url('fonts/NeueHaasGrotText-55Roman-Web.woff2?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff2'),
				 url('fonts/NeueHaasGrotText-55Roman-Web.woff?T=<MvEVAL EXPR = "{ [ 'lib/config.mvc' ].Version_Token() }">') format('woff');
			font-weight:  400;
			font-style:   normal;
			font-stretch: normal;
			font-display: fallback;
		}
	</style>

	<MvASSIGN NAME = "g.Element_AdminFonts_CSS" VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Element_v55UI_CSS" PARAMETERS = "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Element_v55UI_CSS }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "g.Element_v55UI_CSS" VALUE = 1>

	<link type="text/css" rel="stylesheet" href="{ g.clientside_url $ 'Filename=admin/v55_ui.css' }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_v55UI_JavaScript" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Filename_Clientside ].Combined_Component_Begin( 'admin/core.js', 'admin/v55_ui.js', l.component ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Clientside ].Combined_Component_End( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_v55UI_JavaScript_Combined" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Combined_Component_Merge( 'admin/v55_ui.js' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_MivaEvents_JavaScript" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Filename_Clientside ].Combined_Component_Begin( 'admin/core.js', 'MivaEvents.js', l.component ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Clientside ].Combined_Component_End( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_MivaEvents_JavaScript_Combined" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Combined_Component_Merge( 'MivaEvents.js' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_Functions_JavaScript" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Filename_Clientside ].Combined_Component_Begin( 'admin/core.js', 'admin/functions.js', l.component ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Clientside ].Combined_Component_End( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_Functions_JavaScript_Combined" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Combined_Component_Merge( 'admin/functions.js' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_MMMenuButton_JavaScript" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Filename_Clientside ].Combined_Component_Begin( 'admin/core.js', 'admin/mmmenubutton.js', l.component ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Clientside ].Combined_Component_End( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_MMMenuButton_JavaScript_Combined" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Combined_Component_Merge( 'admin/mmmenubutton.js' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Element_CurrencyFormatter_JavaScript" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ g.Element_CurrencyFormatter_JavaScript }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "g.Element_CurrencyFormatter_JavaScript" VALUE = 1>

	<MvIF EXPR = "{ g.Store:currncy_mod AND ( g.Store:currncy_mod:api_ver GE 9.07 ) }">	<MvASSIGN NAME = "l.using_custom_currency_formatter" VALUE = "{ [ g.Module_Root $ g.Store:currncy_mod:module ].CurrencyModule_Output_CurrencyFormat_JavaScript( g.Store:currncy_mod ) }">
	<MvELSE>																			<MvASSIGN NAME = "l.using_custom_currency_formatter" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.using_custom_currency_formatter }">
		<script type="text/javascript">
			function MMCurrencyFormatter( value, show_whole_numbers_only )
			{
				if ( show_whole_numbers_only )	return stoi_def( value, 0 );
				else							return stod_def( value, 0 );
			}
		</script>
	</MvIF>
</MvFUNCTION>

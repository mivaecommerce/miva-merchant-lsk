<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-ADM-WUI-
| Next Error Code: 1    
|
</MvCOMMENT>

<MvCOMMENT>
|
| Wizard Utilities
|
</MvCOMMENT>

<MvFUNCTION NAME = "Wizard_BeginScreen" PARAMETERS = "logo, title" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<head>
	<title><MvEVAL EXPR = "{ l.title }"></title>

	<MvIF EXPR = "{ g.Secure }">
		<base href="{ encodeentities( g.secure_baseurl ) }">
	<MvELSE>
		<base href="{ encodeentities( g.baseurl ) }">
	</MvIF>

	<MvEVAL EXPR = "{ StyleSheet() }">

	<MvEVAL EXPR = "{ JavaScript_SetVariables( 'g', 'Screen' ) }">

	<MvEVAL EXPR = "{ Element_AlertDialog_CSS() }">

	<MvIF EXPR = "{ Element_Admin_Core_JavaScript_Combined_Begin() }">
		<MvEVAL EXPR = "{ Element_AlertDialog_JavaScript() }">

		<MvEVAL EXPR = "{ Element_Admin_Core_JavaScript_Combined_End() }">
	</MvIF>

<script language="JavaScript">
<!--
var Loaded = 0;

function FieldError( field, message )
{
	const dialog = new AlertDialog();
	dialog.SetTitle( 'Error' );
	dialog.SetMessage( message );

	dialog.onHide = () =>
	{
		if ( field.length )
		{
			document.forms[ Screen ].elements[ field ].select();
			document.forms[ Screen ].elements[ field ].focus();
		}
	}

	dialog.Show();
}

function LoadFinished()
{
	Loaded = 1;
	if ( (typeof HaveLoadFinishedHandler) == 'undefined' ) return;
	LoadFinishedHandler();
}

function Wizard_DisableButtons( button )
{
	var element;

	if ( button )
	{
		button.value = 'Processing...';
	}

	for ( element in document.forms[ Screen ].elements )
	{
		if ( document.forms[ Screen ].elements[ element ] && document.forms[ Screen ].elements[ element ].type == 'button' )
		{
			document.forms[ Screen ].elements[ element ].disabled = true;
		}
	}
}

function Wizard_Next( button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'New_Step' ].value = parseInt( document.forms[ Screen ].elements[ 'Step' ].value ) + 1;
	document.forms[ Screen ].submit();
}

function Wizard_Previous( button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'New_Step' ].value = parseInt( document.forms[ Screen ].elements[ 'Step' ].value ) - 1;
	document.forms[ Screen ].submit();
}

function Wizard_Finish( button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'New_Step' ].value = 0;
	document.forms[ Screen ].elements[ 'Action' ].value = 'WIZZ';
	document.forms[ Screen ].submit();
}

function Wizard_Skip( steps, button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'New_Step' ].value = parseInt( document.forms[ Screen ].elements[ 'Step' ].value ) + steps;
	document.forms[ Screen ].submit();
}

function Wizard_Goto( step, validate, button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'New_Step' ].value = step;

	if ( validate )
	{
		document.forms[ Screen ].elements[ 'Wizard_Validate' ].value = 'Yes';
	}
	else
	{
		document.forms[ Screen ].elements[ 'Wizard_Validate' ].value = 'No';
	}

	document.forms[ Screen ].submit();
}

function StoreWizard_Finish( button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'New_Step' ].value = 0;
	document.forms[ Screen ].elements[ 'Action' ].value = 'SWIZ';
	document.forms[ Screen ].submit();
}

function Module_Wizard_Next( button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'Module_New_Step' ].value = parseInt( document.forms[ Screen ].elements[ 'Module_Step' ].value ) + 1;
	document.forms[ Screen ].submit();
}

function Module_Wizard_Previous( button )
{
	Wizard_DisableButtons( button );

	module_step = parseInt( document.forms[ Screen ].elements[ 'Module_Step' ].value );
	if ( module_step > 1 )
	{
		document.forms[ Screen ].elements[ 'Module_New_Step' ].value = module_step - 1;
	}
	else
	{
		document.forms[ Screen ].elements[ 'New_Step' ].value = parseInt( document.forms[ Screen ].elements[ 'Step' ].value ) - 1;
	}

	document.forms[ Screen ].submit();
}

function Module_Wizard_Finish( button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'New_Step' ].value = parseInt( document.forms[ Screen ].elements[ 'Step' ].value ) + 1;
	document.forms[ Screen ].submit();
}

function Module_Wizard_Goto( step, validate, button )
{
	Wizard_DisableButtons( button );

	document.forms[ Screen ].elements[ 'Module_New_Step' ].value = step;

	if ( validate )
	{
		document.forms[ Screen ].elements[ 'Module_Wizard_Validate' ].value = 'Yes';
	}
	else
	{
		document.forms[ Screen ].elements[ 'Module_Wizard_Validate' ].value = 'No';
	}

	document.forms[ Screen ].submit();
}

//-->
</script>
	</head>

	<MvIF EXPR = "{ len( g.Error_Field ) OR ( len( g.Error_Field_Message ) ) }">
		<MvEVAL EXPR = "{ JavaScript_SetVariables( 'g', 'Error_Field,Error_Field_Message' ) }">

		<body style="background: #e3e3e0;" onload="LoadFinished(); FieldError( Error_Field, Error_Field_Message );">
	<MvELSE>
		<body style="background: #e3e3e0;" onload="LoadFinished();">
	</MvIF>

	<MvEVAL EXPR = "{ Element_AlertDialog_HTML() }">

	<MvCOMMENT>
	|
	| The logic used to generate this URL should assemble the GET parameters in the same order as the links from Left Navigation
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.form_url"		VALUE = "{ g.adminurl $ 'Screen=' $ encodeattribute( g.Screen ) }">

	<MvIF EXPR = "{ len( g.Store_Code ) }">
		<MvASSIGN NAME = "l.form_url"	VALUE = "{ l.form_url $ '&Store_Code=' $ encodeattribute( g.Store_Code ) }">
	</MvIF>

	<MvASSIGN NAME = "l.form_url"		VALUE = "{ l.form_url $ '&Module_Code=' $ encodeattribute( g.Module_Code ) }">

	<form name="{ encodeentities( g.Screen ) }" method="POST" action="{ l.form_url }">
	<MvHIDE FIELDS = "g.Step, g.Session_ID">
	<input type="hidden" name="Wizard_Validate" value="">
	<input type="hidden" name="Have_Fields" value=1>
	<input type="hidden" name="New_Step" value="{ encodeentities( g.Step ) }">
	<input type="hidden" name="Action" value="">

	<div id="wizard" class="wizardui_container">
		<span class="wizardui">
			<span class="wizardui_header">
				<img src="{ 'graphics/en-US/admin/miva_merchant_text_logo.png' }" alt="Miva Merchant" title="Miva Merchant" id="logo" />

				<MvIF EXPR="{ NOT ISNULL g.Store_Code }">
					<a href="{ g.adminurl $ 'Screen=' $ encodeattribute( g.Screen ) $ '&Store_Code=' $ encodeattribute( g.Store_Code ) $ '&Module_Code=' $ encodeattribute( g.Module_Code ) }" class="wizardui_reset mm9_mivaicon">&#xe029;</a>
				<MvELSE>
					<a href="{ g.adminurl $ 'Screen=' $ encodeattribute( g.Screen ) $ '&Module_Code=' $ encodeattribute( g.Module_Code ) }" class="wizardui_reset mm9_mivaicon">&#xe029;</a>
				</MvIF>
			</span>

			<span id="setup_message" class="wizardui_content">
</MvFUNCTION>

<MvFUNCTION NAME = "Wizard_EndScreen" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
			</span>
		</span>
	</div>
	</form>
	</body>
</MvFUNCTION>

<MvFUNCTION NAME = "Wizard_FieldError" PARAMETERS = "step, field, message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Step" VALUE = "{ l.step }">
	<MvASSIGN NAME = "g.New_Step" VALUE = "{ l.step }">
	<MvASSIGN NAME = "g.Error_Field" VALUE = "{ l.field }">
	<MvASSIGN NAME = "g.Error_Field_Message" VALUE = "{ l.message }">
	<MvASSIGN NAME = "g.Data_Entry_Error" VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Wizard_Module_FieldError" PARAMETERS = "step, field, message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Module_Step" VALUE = "{ l.step }">
	<MvASSIGN NAME = "g.Module_New_Step" VALUE = "{ l.step }">
	<MvASSIGN NAME = "g.Error_Field" VALUE = "{ l.field }">
	<MvASSIGN NAME = "g.Error_Field_Message" VALUE = "{ l.message }">
	<MvASSIGN NAME = "g.Data_Entry_Error" VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Wizard_Module_HideFields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvHIDE FIELDS = "g.Module_Step">
	<input type="hidden" name="Module_New_Step" value="{ encodeentities( g.Module_Step ) }">
	<input type="hidden" name="Module_Have_Fields" value=1>
	<input type="hidden" name="Module_Wizard_Validate" value="">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Wizard_Update_Frames" PARAMETERS = "screens, close" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ [ g.Library_DB ].User_Load_ID( g.Admin_User_ID, l.user ) }">
		<MvASSIGN NAME = "l.update_main"				VALUE = 0>
		<MvASSIGN NAME = "l.update_left"				VALUE = 0>
		<MvASSIGN NAME = "l.update_top"					VALUE = 0>
		<MvASSIGN NAME = "l.refresh_store"				VALUE = 0>

		<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
			<MvIF EXPR = "{ NOT ISNULL g.Edit_Store }">
				<MvASSIGN NAME = "l.null"				VALUE = "{ Admin_Open_Store( g.Edit_Store, g.Store ) }">
			</MvIF>

			<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
				<MvIF EXPR = "{ [ g.Library_DB ].StoreList_Load_User( g.Admin_User_ID, l.storelist ) }">
					<MvASSIGN NAME = "l.null"			VALUE = "{ Admin_Open_Store( l.storelist[ 1 ]:code, g.Store ) }">
					<MvASSIGN NAME = "g.Store_Code"		VALUE = "{ g.Store:code }">
				</MvIF>
			</MvIF>
		</MvIF>
		
		<MvASSIGN NAME = "l.new_url"					VALUE = "{ g.adminurl $ 'Screen=STOR&Edit_Store=' $ encodeattribute( g.Admin_Open_Store ) }">

		<MvFOREACH ITERATOR = "l.screen" ARRAY = "l.screenlist" COUNT = "{ [ g.Library_Utilities ].SplitStringAndTrim( l.screens, ',', l.screenlist ) }">
			<MvIF EXPR = "{ l.screen EQ 'main' }">							<MvASSIGN NAME = "l.update_main"			VALUE = 1>
			<MvELSEIF EXPR = "{ l.screen EQ 'leftnav' }">					<MvASSIGN NAME = "l.update_left"			VALUE = 1>
			<MvELSEIF EXPR = "{ l.screen EQ 'top' }">						<MvASSIGN NAME = "l.update_top"				VALUE = 1>
			<MvELSEIF EXPR = "{ l.screen EQ 'refresh_store' }">				<MvASSIGN NAME = "l.refresh_store"			VALUE = 1>
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ l.update_left OR l.update_top }">
			<MvIF EXPR = "{ l.refresh_store }">
				<MvEVAL EXPR = "{ JavaScript_Set_A_Variable( 'JavaUpdateStoreCode',	g.Admin_Open_Store ) }">
			</MvIF>

			<script type="text/javascript">
			if ( opener.top.mm9_screen )
			{
				<MvIF EXPR = "{ l.refresh_store }">
					opener.top.Store_Code = JavaUpdateStoreCode;
				</MvIF>

				opener.top.mm9_screen.RefreshNavigation();
			}
			</script>
		</MvIF>

		<MvIF EXPR = "{ l.update_main }">
			<MvEVAL EXPR = "{ JavaScript_Set_A_Variable( 'MMScreenMainURL', l.new_url ) }">

			<script type="text/javascript">
			if ( opener.top.Main )
			{
				opener.top.Main.location.replace( MMScreenMainURL );
			}
			</script>
		</MvIF>

		<MvIF EXPR = "{ l.close }">
			<script type="text/javascript">
				window.close();
			</script>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

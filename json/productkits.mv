<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2022 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-JSN-PKT-
| Next Error Code: 11    
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_ProductKit_Search_Filter" PARAMETERS = "query var, field_count var, search_field, search_operator, search_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.search_field EQ 'option_code' }">			<MvASSIGN NAME = "l.quoted_value"	VALUE = "{ '\'' $ l.data:option_code $ '\'' }">
	<MvELSEIF EXPR = "{ l.search_field EQ 'option_prompt' }">	<MvASSIGN NAME = "l.quoted_value"	VALUE = "{ '\'' $ l.data:option_prompt $ '\'' }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.search_operator EQ 'CO' OR l.search_operator EQ 'NC' }">
		<MvASSIGN NAME = "l.search_value" VALUE = "{ '%' $ l.search_value $ '%' }">
	</MvIF>

	<MvIF EXPR = "{ l.search_operator EQ 'NULL' }">										<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, [ g.Library_Native_DBAPI ].DB_Filter_ISNULL( l.type, l.quoted_value, l.search_value ), '' ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'IN' OR l.search_operator EQ 'NOT_IN' }">	<MvEVAL EXPR = "{ JSON_Search_Filter_CommaSeparatedList_With_Type( l.query, l.type, l.quoted_value, l.search:field, l.search_operator, l.search_value ) }">
	<MvELSE>
		<MvIF EXPR = "{ l.search_operator EQ 'EQ' }">			<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_EQ(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'GT' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_GT(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'GE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_GE(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'LT' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LT(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'LE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LE(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'CO' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_CO(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'NC' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NC(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'LIKE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LIKE(	l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'NOTLIKE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NOTLIKE(	l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'NE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NE(		l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'TRUE' }">		<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_TRUE(	l.type, l.quoted_value, l.search_value ) }">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'FALSE' }">	<MvASSIGN NAME = "l.where_sql" VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_FALSE(	l.type, l.quoted_value, l.search_value ) }">
		<MvELSE>												<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ l.search_operator EQ 'TRUE' OR l.search_operator EQ 'FALSE' }">	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, l.where_sql, '' ) }">
		<MvELSE>																		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, l.where_sql, [ g.Library_DB ].SQL_Query_Field( l.search_value ) ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductKitList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.base_filters"		VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.base_filters, 'p.code',	'product_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.base_filters, 'p.name',	'product_name' ) }">

	<MvASSIGN NAME = "l.attribute_filters"	VALUE = "{ l.base_filters }">

	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.attribute_filters, 'a.code',		'attr_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.attribute_filters, 'a.prompt',	'attr_prompt' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.attribute_filters, 'o.code',		'option_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.attribute_filters, 'o.prompt',	'option_prompt' ) }">

	<MvASSIGN NAME = "l.template_filters"	VALUE = "{ l.base_filters }">

	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.template_filters, 'ata.code',		'attr_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.template_filters, 'ata.prompt',	'attr_prompt' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.template_filters, 'ato.code',		'option_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.template_filters, 'ato.prompt',	'option_prompt' ) }">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.query"							VALUE = "">

	<MvASSIGN NAME = "l.query_checkbox_no"				VALUE = "">
	<MvASSIGN NAME = "l.query_checkbox_yes"				VALUE = "">
	<MvASSIGN NAME = "l.query_text_no"					VALUE = "">
	<MvASSIGN NAME = "l.query_text_yes"					VALUE = "">
	<MvASSIGN NAME = "l.query_multi"					VALUE = "">

	<MvASSIGN NAME = "l.query_template_checkbox_no"		VALUE = "">
	<MvASSIGN NAME = "l.query_template_checkbox_yes"	VALUE = "">
	<MvASSIGN NAME = "l.query_template_text_no"			VALUE = "">
	<MvASSIGN NAME = "l.query_template_text_yes"		VALUE = "">
	<MvASSIGN NAME = "l.query_template_multi"			VALUE = "">

	<MvCOMMENT>
	|
	| sNN_Attributes: checkboxes
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_checkbox_no,
														 'a.id				AS attr_id,
														  a.type			AS attr_type,
														  a.code			AS attr_code,
														  a.prompt			AS attr_prompt,
														  0					AS attmpat_id,
														  0					AS option_id,
														  \'N\'				AS option_code,
														  \'Not Checked\'	AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  0					AS attmpat_disp_order,
														  0					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_checkbox_no,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 ) $ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_checkbox_no, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_checkbox_no, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = 0 AND pk.option_id = 0', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_checkbox_no, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_checkbox_no, 'a.product_id = ? AND a.inventory = 1 AND a.required = 0 AND a.type = \'checkbox\'', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_checkbox_yes,
														 'a.id				AS attr_id,
														  a.type			AS attr_type,
														  a.code			AS attr_code,
														  a.prompt			AS attr_prompt,
														  0					AS attmpat_id,
														  1					AS option_id,
														  \'Y\'				AS option_code,
														  \'Checked\'		AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  0					AS attmpat_disp_order,
														  1					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_checkbox_yes,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 ) $ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_checkbox_yes, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_checkbox_yes, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = 0 AND pk.option_id = 1', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_checkbox_yes, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_checkbox_yes, 'a.product_id = ? AND a.inventory = 1 AND a.type = \'checkbox\'', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvCOMMENT>
	|
	| sNN_Attributes: text and memo
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_text_no,
														 'a.id				AS attr_id,
														  a.type			AS attr_type,
														  a.code			AS attr_code,
														  a.prompt			AS attr_prompt,
														  0					AS attmpat_id,
														  0					AS option_id,
														  \'N\'				AS option_code,
														  \'Empty\'			AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  0					AS attmpat_disp_order,
														  0					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_text_no,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 ) $ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_text_no, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_text_no, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = 0 AND pk.option_id = 0', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_text_no, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_text_no, 'a.product_id = ? AND a.inventory = 1 AND a.required = 0 AND ( a.type = \'text\' OR a.type = \'memo\' )', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_text_yes,
														 'a.id				AS attr_id,
														  a.type			AS attr_type,
														  a.code			AS attr_code,
														  a.prompt			AS attr_prompt,
														  0					AS attmpat_id,
														  1					AS option_id,
														  \'Y\'				AS option_code,
														  \'Text Present\'	AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  0					AS attmpat_disp_order,
														  1					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_text_yes,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 ) $ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_text_yes, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_text_yes, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = 0 AND pk.option_id = 1', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_text_yes, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_text_yes, 'a.product_id = ? AND a.inventory = 1 AND ( a.type = \'text\' OR a.type = \'memo\' )', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvCOMMENT>
	|
	| sNN_Attributes: types with options
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_multi,
														 'a.id				AS attr_id,
														  a.type			AS attr_type,
														  a.code			AS attr_code,
														  a.prompt			AS attr_prompt,
														  0					AS attmpat_id,
														  o.id				AS option_id,
														  o.code			AS option_code,
														  o.prompt			AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  0					AS attmpat_disp_order,
														  o.disp_order		AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_multi,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 ) $ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_multi, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_multi, g.Store_Table_Prefix $ 'Options', 'o' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_multi, 'o', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = o.product_id AND pk.attr_id = o.attr_id AND pk.attmpat_id = 0 AND pk.option_id = o.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_multi, 'o', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_multi, 'a.product_id = ? AND a.inventory = 1 AND o.product_id = a.product_id AND o.attr_id = a.id AND ( a.type = \'radio\' OR a.type = \'select\' OR a.type = \'swatch-select\' )', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvCOMMENT>
	|
	| sNN_AttributeTemplateAttrs: checkbox
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_checkbox_no,
														 'a.id				AS attr_id,
														  ata.type			AS attr_type,
														  ata.code			AS attr_code,
														  ata.prompt		AS attr_prompt,
														  ata.id			AS attmpat_id,
														  0					AS option_id,
														  \'N\'				AS option_code,
														  \'Not Checked\'	AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  0					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_checkbox_no,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ata.disporder', 0 )	$ ' AS attmpat_disp_order, ' $
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 )	$ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_template_checkbox_no, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_checkbox_no, 'a', g.Store_Table_Prefix $ 'AttributeTemplateAttrs', 'ata', 'ata.attemp_id = a.attemp_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_checkbox_no, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = ata.id AND pk.option_id = 0', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_checkbox_no, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_template_checkbox_no, 'a.product_id = ? AND a.type = \'template\' AND ata.inventory = 1 AND ata.required = 0 AND ata.type = \'checkbox\'', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_checkbox_yes,
														 'a.id				AS attr_id,
														  ata.type			AS attr_type,
														  ata.code			AS attr_code,
														  ata.prompt		AS attr_prompt,
														  ata.id			AS attmpat_id,
														  1					AS option_id,
														  \'Y\'				AS option_code,
														  \'Checked\'		AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  1					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_checkbox_yes,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ata.disporder', 0 )	$ ' AS attmpat_disp_order, ' $
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 )	$ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_template_checkbox_yes, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_checkbox_yes, 'a', g.Store_Table_Prefix $ 'AttributeTemplateAttrs', 'ata', 'ata.attemp_id = a.attemp_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_checkbox_yes, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = ata.id AND pk.option_id = 1', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_checkbox_yes, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_template_checkbox_yes, 'a.product_id = ? AND a.type = \'template\' AND ata.inventory = 1 AND ata.type = \'checkbox\'', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvCOMMENT>
	|
	| sNN_AttributeTemplateAttrs: text and memo
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_text_no,
														 'a.id				AS attr_id,
														  ata.type			AS attr_type,
														  ata.code			AS attr_code,
														  ata.prompt		AS attr_prompt,
														  ata.id			AS attmpat_id,
														  0					AS option_id,
														  \'N\'				AS option_code,
														  \'Empty\'			AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  0					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_text_no,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ata.disporder', 0 )	$ ' AS attmpat_disp_order, ' $
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 )	$ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_template_text_no, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_text_no, 'a', g.Store_Table_Prefix $ 'AttributeTemplateAttrs', 'ata', 'ata.attemp_id = a.attemp_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_text_no, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = ata.id AND pk.option_id = 0', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_text_no, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_template_text_no, 'a.product_id = ? AND a.type = \'template\' AND ata.inventory = 1 AND ata.required = 0 AND ( ata.type = \'text\' OR ata.type = \'memo\' )', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_text_yes,
														 'a.id				AS attr_id,
														  ata.type			AS attr_type,
														  ata.code			AS attr_code,
														  ata.prompt		AS attr_prompt,
														  ata.id			AS attmpat_id,
														  1					AS option_id,
														  \'Y\'				AS option_code,
														  \'Text Present\'	AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order,
														  1					AS option_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_text_yes,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ata.disporder', 0 )	$ ' AS attmpat_disp_order, ' $
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 )	$ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_template_text_yes, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_text_yes, 'a', g.Store_Table_Prefix $ 'AttributeTemplateAttrs', 'ata', 'ata.attemp_id = a.attemp_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_text_yes, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = ata.id AND pk.option_id = 1', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_text_yes, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_template_text_yes, 'a.product_id = ? AND a.type = \'template\' AND ata.inventory = 1 AND ( ata.type = \'text\' OR ata.type = \'memo\' )', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvCOMMENT>
	|
	| sNN_AttributeTemplateAttrs: types with options
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_multi,
														 'a.id				AS attr_id,
														  ata.type			AS attr_type,
														  ata.code			AS attr_code,
														  ata.prompt		AS attr_prompt,
														  ata.id			AS attmpat_id,
														  ato.id			AS option_id,
														  ato.code			AS option_code,
														  ato.prompt		AS option_prompt,
														  pk.product_id		AS product_id,
														  p.code			AS product_code,
														  p.name			AS product_name,
														  pk.quantity		AS quantity,
														  a.disp_order		AS attr_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query_template_multi,
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ata.disporder', 0 )	$ ' AS attmpat_disp_order, ' $
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'ato.disporder', 0 )	$ ' AS option_disp_order, ' $
														 [ g.Module_Library_Native_DBAPI ].DB_IFNULL( 'p.disp_order', 0 )	$ ' AS product_disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query_template_multi, g.Store_Table_Prefix $ 'Attributes', 'a' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_multi, 'a', g.Store_Table_Prefix $ 'AttributeTemplateAttrs', 'ata', 'ata.attemp_id = a.attemp_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_multi, 'a', g.Store_Table_Prefix $ 'AttributeTemplateOptions', 'ato', 'ato.attemp_id = a.attemp_id AND ato.attmpat_id = ata.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_multi, 'a', g.Store_Table_Prefix $ 'ProductKits', 'pk', 'pk.product_id = a.product_id AND pk.attr_id = a.id AND pk.attmpat_id = ata.id AND ( ( ato.id IS NULL ) OR ( pk.option_id = ato.id ) )', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query_template_multi, 'a', g.Store_Table_Prefix $ 'Products', 'p', 'p.id = pk.part_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query_template_multi, 'a.product_id = ? AND a.type = \'template\' AND ata.inventory = 1 AND ( ata.type = \'radio\' OR ata.type = \'select\' OR ata.type = \'swatch-select\' )', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }"> 

	<MvCOMMENT>
	|
	| Filters
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_checkbox_no,			l.filter, l.attribute_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=N,:option_prompt=Not+Checked' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_checkbox_yes,			l.filter, l.attribute_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=Y,:option_prompt=Checked' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_text_no,				l.filter, l.attribute_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=N,:option_prompt=Empty' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_text_yes,				l.filter, l.attribute_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=Y,:option_prompt=Text+Present' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter(			l.query_multi,					l.filter, l.attribute_filters ) }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_template_checkbox_no,	l.filter, l.template_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=N,:option_prompt=Not+Checked' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_template_checkbox_yes,	l.filter, l.template_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=Y,:option_prompt=Checked' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_template_text_no,		l.filter, l.template_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=N,:option_prompt=Empty' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter_Callback(	l.query_template_text_yes,		l.filter, l.template_filters, g.Module_JSON, '', 'JSON_ProductKit_Search_Filter', miva_array_deserialize( ':option_code=Y,:option_prompt=Text+Present' ) ) }">
	<MvEVAL EXPR = "{ JSON_Filter(			l.query_template_multi,			l.filter, l.template_filters ) }">

	<MvCOMMENT>
	|
	| Construct a master query using UNION ALL and a sub-select, so the filter can uniformly be applied to the resultset
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_checkbox_no ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_checkbox_yes ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_text_no ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_text_yes ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_multi ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_template_checkbox_no ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_template_checkbox_yes ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_template_text_no ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_template_text_yes ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_UNION_ALL( l.query, l.query_template_multi ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_OrderBy_Fields( l.query, l.sort, 'attr_code,attr_prompt,option_code,option_prompt', 'attr_disp_order;attmpat_disp_order;option_disp_order;product_disp_order' ) }">

	<MvCOMMENT>
	|
	| Execute the query
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.query, l.search_fields ) }">

	<MvIF EXPR = "{ ISNULL l.search_fields }">	<MvASSIGN NAME = "l.search_fields"	VALUE = "{ l.inner_fields }">
	<MvELSE>									<MvASSIGN NAME = "l.search_fields"	VALUE = "{ l.inner_fields $ ',' $ l.search_fields }">
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductKits"
				QUERY	= "{ l.search_sql }"
				FIELDS	= "{ l.search_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PKT-00007', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total_count"		VALUE = 0>
	<MvASSIGN NAME = "l.attribute_count"	VALUE = 0>
	<MvASSIGN NAME = "l.option_count"		VALUE = 0>
	<MvASSIGN NAME = "l.part_count"			VALUE = 0>
	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"data":
		[
		<MvWHILE EXPR = "{ NOT ProductKits.d.EOF }">
			<MvASSIGN NAME = "l.attr_id"			VALUE = "{ ProductKits.d.attr_id }">
			<MvASSIGN NAME = "l.attmpat_id"			VALUE = "{ ProductKits.d.attmpat_id }">

			<MvWHILE EXPR = "{ ( NOT ProductKits.d.EOF ) AND
							   ( ProductKits.d.attr_id EQ l.attr_id ) AND
							   ( ProductKits.d.attmpat_id EQ l.attmpat_id ) }">
				<MvASSIGN NAME = "l.total_count"	VALUE = "{ l.total_count + 1 }">

				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.option_count ) }">
				"attr_id":				<MvEVAL EXPR = "{ int( ProductKits.d.attr_id ) }">,
				"attr_type":			"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.attr_type ) }">",
				"attr_code":			"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.attr_code ) }">",
				"attr_prompt":			"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.attr_prompt ) }">",
				"attmpat_id":			<MvEVAL EXPR = "{ int( ProductKits.d.attmpat_id ) }">,
				"option_id":			<MvEVAL EXPR = "{ int( ProductKits.d.option_id ) }">,
				"option_code":			"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.option_code ) }">",
				"option_prompt":		"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.option_prompt ) }">",
				"option_disp_order":	<MvEVAL EXPR = "{ int( ProductKits.d.option_disp_order ) }">

				<MvIF EXPR = "{ len( ProductKits.d.product_id ) EQ 0 }">
					<MvSKIP NAME = "Merchant" VIEW = "ProductKits" ROWS = 1>
				<MvELSE>
					<MvASSIGN NAME = "l.opt_id"			VALUE = "{ ProductKits.d.option_id }">
					<MvASSIGN NAME = "l.product_count"	VALUE = 0>

					,"parts":
					[
					<MvWHILE EXPR = "{ ( NOT ProductKits.d.EOF ) AND
									   ( ProductKits.d.attr_id EQ l.attr_id ) AND
									   ( ProductKits.d.attmpat_id EQ l.attmpat_id ) AND
									   ( ProductKits.d.option_id EQ l.opt_id ) }">
						<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">

						<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.product_count ) }">
						"product_id":	<MvEVAL EXPR = "{ int( ProductKits.d.product_id ) }">,
						"product_code":	"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.product_code ) }">",
						"product_name":	"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.product_name ) }">",
						"quantity":		<MvEVAL EXPR = "{ int( ProductKits.d.quantity ) }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

						<MvSKIP NAME = "Merchant" VIEW = "ProductKits" ROWS = 1>
					</MvWHILE>
					]
				</MvIF>
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvWHILE>
		</MvWHILE>
		],
		"start_offset": 0,
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductKits">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_PartList_Load_ProductKit" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Product_ID"						VALUE = "{ int( g.Product_ID ) }">
	<MvASSIGN NAME = "g.Attribute_ID"					VALUE = "{ int( g.Attribute_ID ) }">
	<MvASSIGN NAME = "g.AttributeTemplateAttribute_ID"	VALUE = "{ int( g.AttributeTemplateAttribute_ID ) }">
	<MvASSIGN NAME = "g.Option_ID"						VALUE = "{ int( g.Option_ID ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "ProductKits"
				QUERY	= "{ 'SELECT
								p.id		AS product_id,
								p.code		AS product_code,
								p.name		AS product_name,
								pk.quantity	AS quantity
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductKits pk,
								' $ g.Store_Table_Prefix $ 'Products p
							  WHERE
								pk.product_id	= ? AND
								pk.attr_id		= ? AND
								pk.attmpat_id	= ? AND
								pk.option_id	= ? AND
								p.id			= pk.part_id
							  ORDER BY
								p.disp_order' }"
				FIELDS	= "g.Product_ID, g.Attribute_ID, g.AttributeTemplateAttribute_ID, g.Option_ID">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PKT-00002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvWHILE EXPR = "{ NOT ProductKits.d.EOF }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.productkit_count ) }">
		"product_id":					<MvEVAL EXPR = "{ ProductKits.d.product_id ROUND 0 }">,
		"product_code":					"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.product_code ) }">",
		"product_name":					"<MvEVAL EXPR = "{ JSON_Encode( ProductKits.d.product_name ) }">",
		"quantity":						<MvEVAL EXPR = "{ ProductKits.d.quantity }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

		<MvSKIP NAME = "Merchant" VIEW = "ProductKits" ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "ProductKits">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductKit_Update_Parts" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.parts"								VALUE = "">
	<MvASSIGN NAME = "l.part_count"							VALUE = 0>
	<MvASSIGN NAME = "l.attribute_id" 						VALUE = 0>
	<MvASSIGN NAME = "l.attribute_template_attribute_id" 	VALUE = 0>
	<MvASSIGN NAME = "l.option_id" 							VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'R', 'Attribute_ID', 					l.attribute_id ) 					OR
					NOT JSON_Input_Integer(	'O', 'AttributeTemplateAttribute_ID', 	l.attribute_template_attribute_id ) OR
					NOT JSON_Input_Integer(	'R', 'Option_ID', 						l.option_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'Parts' ) }">
		<MvFOREACH ITERATOR = "l.input_part" ARRAY = "l.input_parts" COUNT = "{ JSON_Input_Array( 'Parts', l.input_parts ) }">
			<MvASSIGN NAME = "l.part:part_id"			VALUE = 0>
			<MvASSIGN NAME = "l.part:quantity"			VALUE = 0>

			<MvIF EXPR = "{ NOT JSON_Input_Element_Integer( l.input_part, 'R', 'part_id',	l.part:part_id )	OR
							NOT JSON_Input_Element_Integer( l.input_part, 'R', 'quantity',	l.part:quantity ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.part_count"				VALUE = "{ miva_array_insert_var( l.parts, l.part, -1 ) }">
		</MvFOREACH>
	<MvELSE>
		<MvIF EXPR = "{ NOT JSON_Input_Integer_Array( 'R', 'Part_IDs',		l.input_parts, 		l.input_part_count )	OR
						NOT JSON_Input_Integer_Array( 'R', 'Quantities',	l.input_quantities, l.input_quantity_count ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ l.input_part_count NE l.input_quantity_count }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PKT-00010', 'Part count must equal quantity count' ) }">
		</MvIF>

		<MvFOR INDEX = "l.input_pos" COUNT = "{ l.input_part_count }">
			<MvIF EXPR = "{ l.input_quantities[ l.input_pos ] LE 0 }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PKT-00006', 'All part quantities must be 1 or greater' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.part:part_id"			VALUE = "{ l.input_parts[ l.input_pos ] }">
			<MvASSIGN NAME = "l.part:quantity"			VALUE = "{ l.input_quantities[ l.input_pos ] }">

			<MvASSIGN NAME = "l.part_count"				VALUE = "{ miva_array_insert_var( l.parts, l.part, -1 ) }">
		</MvFOR>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].ProductKit_Delete_Option( l.product:id, l.attribute_id, l.attribute_template_attribute_id, l.option_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productkit:product_id"			VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.productkit:attr_id"				VALUE = "{ l.attribute_id }">
	<MvASSIGN NAME = "l.productkit:attmpat_id"			VALUE = "{ l.attribute_template_attribute_id }">
	<MvASSIGN NAME = "l.productkit:option_id"			VALUE = "{ l.option_id }">

	<MvFOREACH ITERATOR = "l.part" ARRAY = "l.parts" COUNT = "{ l.part_count }" INDEX = "l.part_pos">
		<MvASSIGN NAME = "l.productkit:part_id"			VALUE = "{ l.part:part_id }">
		<MvASSIGN NAME = "l.productkit:quantity"		VALUE = "{ l.part:quantity }">
		<MvASSIGN NAME = "l.productkit:pos"				VALUE = "{ l.part_pos }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].ProductKit_Insert( l.productkit ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PKT-00004', 'Product kit contents updated product_id=' $ l.product:id $ ' attr_id=' $ l.attribute_id $ ' attmpat_id=' $ l.attribute_template_attribute_id $ ' option_id=' $ l.option_id ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductKit_Variant_Count" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.variants"			VALUE = 0>
	<MvASSIGN NAME = "l.attribute_count"	VALUE = "{ [ g.Library_DB ].AttributeTree_Load_ProductKit( l.product:id, l.attributes ) }">

	<MvEVAL EXPR = "{ JSON_ProductKit_Variant_Count_Recursive( 1, l.attribute_count, l.attributes, 0, l.variants ) }">

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"variants":			<MvEVAL EXPR = "{ l.variants }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductKit_Variant_Count_Recursive" PARAMETERS = "attribute_pos, attribute_count, attributes var, part_count, variants var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.attribute_pos GT l.attribute_count }">
		<MvIF EXPR = "{ l.part_count }">
			<MvASSIGN NAME = "l.variants"	VALUE = "{ l.variants + 1 }">
		</MvIF>

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvREFERENCEARRAY NAME = "l.attribute" VARIABLE = "l.attributes">
		<MvDIMENSION INDEX = "{ l.attribute_pos }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ ( NOT l.attribute:required ) AND
					( l.attribute:type NE 'text' ) AND
					( l.attribute:type NE 'memo' ) AND
					( l.attribute:type NE 'checkbox' ) }">
		<MvEVAL EXPR = "{ JSON_ProductKit_Variant_Count_Recursive( l.attribute_pos + 1 , l.attribute_count, l.attributes, l.part_count, l.variants ) }">
	</MvIF>

	<MvASSIGN NAME = "l.option_pos"				VALUE = 1>
	<MvWHILE EXPR = "{ l.option_pos LE l.attribute:option_count }">
		<MvREFERENCEARRAY NAME = "l.option" VARIABLE = "l.attribute">
			<MvMEMBER NAME = "options">
			<MvDIMENSION INDEX = "{ l.option_pos }">
		</MvREFERENCEARRAY>

		<MvEVAL EXPR = "{ JSON_ProductKit_Variant_Count_Recursive( l.attribute_pos + 1, l.attribute_count, l.attributes, l.part_count + l.option:part_count, l.variants ) }">

		<MvASSIGN NAME = "l.option_pos"			VALUE = "{ l.option_pos + 1 }">
	</MvWHILE>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductKit_Generate_Variants" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 1, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.product" 		VALUE = "">
	<MvASSIGN NAME = "l.pricing_method" VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_List( 'R', 'Pricing_Method',	l.pricing_method, 'master,specific,sum,0,1,2', '0,1,2,0,1,2' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].ProductKit_Generate_Variants( l.product:id, l.pricing_method ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PKT-00005', 'Product kit variants generated for product ' $ l.product:id ) }">

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'not_variant', l.modules ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_ProductVariant_Generate( l.module, l.product ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductKitInventoryIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 )	OR 
					NOT [ g.Filename_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.master_product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'R', 'Part_ID', l.part_id)	OR
					NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_ID( l.part_id, l.record:prod ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PKT-00008', 'Product ' $ l.part_id $ ' not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_BaseProductIndex_Load_ID( l.filter, l.sort, 'prod.disp_order', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_DISTINCT_With_COUNT_SELECT( l.query, 'prod.id' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'ProductKits', 'pk' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'pk.product_id	= ? AND
																  prod.id		= pk.part_id', [ g.Module_Library_DB ].SQL_Query_Field( l.master_product:id ) ) }">

	<MvIF EXPR = "{ NOT JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductKitInventoryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 )	OR 
					NOT [ g.Filename_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort )	OR
					NOT JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseProductList_Load_Query( l.filter, l.sort, 'disp_order', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_DISTINCT( l.search_query ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'ProductKits', 'pk' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'pk.product_id	= ?',			[ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'prod.id		= pk.part_id',	'' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_Clear( l.count_query ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_DISTINCT( l.count_query, 'prod.id' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'ProductKits', 'pk' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.count_query, 'pk.product_id	= ?',			[ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.count_query, 'prod.id			= pk.part_id',	'' ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PKT-00009', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.productvariant_count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.productvariant_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.productvariant_count ) }">
				<MvEVAL EXPR = "{ JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductInventoryList_Load_ProductKit" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) OR
					NOT [ g.Filename_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Product_ID"		VALUE = "{ int( g.Product_ID ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Products"
				QUERY	= "{ 'SELECT DISTINCT
								prod.*,
								ips.active AS inv_active,
								ipc.inventory
							  FROM
								' $ g.Store_Table_Prefix $ 'ProductKits pk,
								' $ g.Store_Table_Prefix $ 'Products prod
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductSettings ips ON ips.product_id = prod.id
								LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'InventoryProductCounts ipc ON ipc.product_id = prod.id
							  WHERE
								pk.product_id	= ?				AND
								prod.id			= pk.part_id
							  ORDER BY
								disp_order' }"
				FIELDS	= "g.Product_ID">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PKT-00003', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count"	VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvWHILE EXPR = "{ NOT Products.d.EOF }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.product_count ) }">
		"id":				<MvEVAL EXPR = "{ Products.d.id }">,
		"code":				"<MvEVAL EXPR = "{ JSON_Encode( Products.d.code ) }">",
		"sku":				"<MvEVAL EXPR = "{ JSON_Encode( Products.d.sku ) }">",
		"name":				"<MvEVAL EXPR = "{ JSON_Encode( Products.d.name ) }">",
		"thumbnail":		"<MvEVAL EXPR = "{ JSON_Encode( Products.d.thumbnail ) }">",
		"image":			"<MvEVAL EXPR = "{ JSON_Encode( Products.d.image ) }">",
		"price":			<MvEVAL EXPR = "{ Products.d.price ROUND 2 }">,
		"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, Products.d.price ) ) }">",
		"cost":				<MvEVAL EXPR = "{ Products.d.cost ROUND 2 }">,
		"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, Products.d.cost ) ) }">",
		"descrip":			"<MvEVAL EXPR = "{ JSON_Encode( Products.d.descrip ) }">",
		"weight":			<MvEVAL EXPR = "{ Products.d.weight ROUND 2 }">,
		"taxable":			<MvEVAL EXPR = "{ Products.d.taxable }">,
		"active":			<MvEVAL EXPR = "{ Products.d.active }">,
		"dt_created":		<MvEVAL EXPR = "{ Products.d.dt_created }">,
		"dt_updated":		<MvEVAL EXPR = "{ Products.d.dt_updated }">,
		"inv_active":		<MvEVAL EXPR = "{ Products.d.inv_active ROUND 0 }">,
		"inventory":		<MvEVAL EXPR = "{ Products.d.inventory ROUND 0 }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

		<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

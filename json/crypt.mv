<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2023 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-JSN-CRY-
| Next Error Code: 7    
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_EncryptionKeyList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CRYP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Filter" 		VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Encryption', '' ) }">

	<MvEVAL EXPR = "{ JSON_Filter( l.search_query, g.Filter, 'prompt' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, g.Sort, 'prompt,dt_created,refcount', 'prompt' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Encryption', l.search_sql, l.search_fields, g.Offset, g.Count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CRY-00001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.encryption_count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( g.Offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Encryption.d.EOF ) AND ( ( g.Count EQ 0 ) OR ( l.encryption_count LT g.Count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Encryption_Read( l.encryption ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.encryption_count ) }">
				"id":			<MvEVAL EXPR = "{ l.encryption:id }">,
				"prompt":		"<MvEVAL EXPR = "{ JSON_Encode( l.encryption:prompt ) }">",
				"dt_created":	"<MvEVAL EXPR = "{ JSON_Encode( l.encryption:dt_created ) }">",
				"refcount":		<MvEVAL EXPR = "{ l.encryption:refcount }">,
				"current":		<MvEVAL EXPR = "{ JSON_Boolean( g.Store:crypt_id EQ l.encryption:id ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Encryption" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Encryption">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_EncryptionKey_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CRYP', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Encryption_Prompt" VALUE = "{ JSON_Decode( g.Encryption_Prompt ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Encryption_Load_Prompt( g.Encryption_Prompt, l.encryption ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CRY-00002', 'Failed to load encryption key \'' $ g.Encryption_Prompt $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.encryption:refcount GT 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CRY-00003', 'Encryption key \'' $ l.encryption:prompt $ '\' is in use by one or more orders and cannot be deleted' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Encryption_Delete_ID( l.encryption:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-CRY-00005', 'Encryption key ' $ l.encryption:id $ ' prompt \'' $ l.encryption:prompt $ '\' deleted' ) }">

	<MvIF EXPR = "{ g.Store:crypt_id EQ l.encryption:id }">
		<MvASSIGN NAME = "g.Store:crypt_id"	VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Store_Update_Encryption( g.Store ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_StoreEncryptionKeyChanged( 'MER-JSN-CRY-00006', l.encryption ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Load_EncryptionKey_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'CRYP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> 	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'R', 'EncryptionKey_ID', l.encryptionkey_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"					VALUE = "">
	<MvASSIGN NAME = "l.sort"					VALUE = "">
	<MvASSIGN NAME = "l.offset"					VALUE = 0>
	<MvASSIGN NAME = "l.count"					VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort )	OR
					NOT JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"			VALUE = "">
	<MvASSIGN NAME = "l.filter_columns" 		VALUE = "{ JSON_BaseOrderList_Filters() }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_DISTINCT( l.search_query ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'ord.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cust.login',		'cust_login' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cust.pw_email',	'cust_pw_email' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',		'business_title' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'opm.name',		'payment_module' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'OrderPayments', 'op' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Orders', 'ord' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'op.pay_secid = ? AND ord.id = op.order_id', [ g.Module_Library_DB ].SQL_Query_Field( l.encryptionkey_id ) ) }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_OrderList_Load_Query_Filter', 'JSON_OrderList_Load_Query_Advanced_Filter', 'JSON_Order_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvASSIGN NAME = "l.count_query"			VALUE = "{ l.search_query }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_CLEAR( l.count_query ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_DISTINCT( l.count_query, 'ord.id' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Order_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, 'id,batch_id,status,pay_status,orderdate,dt_instock,ship_res,ship_name:ship_fname;ship_lname,ship_fname,ship_lname,ship_email,ship_comp,
																						ship_phone,ship_fax,ship_addr1:ship_addr,ship_addr2,ship_city,ship_state,ship_zip,ship_cntry,bill_name:bill_fname;bill_lname,bill_fname,
																						bill_lname,bill_email,bill_comp,bill_phone,bill_fax,bill_addr1:bill_addr,bill_addr2,bill_city,bill_state,
																						bill_zip,bill_cntry,ship_data,source,source_id,total,total_ship,total_tax,total_auth,total_capt,total_rfnd,
																						net_capt,pend_count,bord_count,note_count,dt_updated,cust_login,cust_pw_email,business_title,payment_module:payment_module/null_char;pay_id',
																						'id', g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"				VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Orders', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CRY-00004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.order_count"			VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Order_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Orders.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.order_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.order_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Library_DB ].v56_Order_Read( l.order ) }">

				<MvASSIGN NAME = "l.order:cust_login"		VALUE = "{ Orders.d.cust_login }">
				<MvASSIGN NAME = "l.order:cust_pw_email"	VALUE = "{ Orders.d.cust_pw_email }">
				<MvASSIGN NAME = "l.order:business_title"	VALUE = "{ Orders.d.business_title }">
				<MvASSIGN NAME = "l.order:payment_module"	VALUE = "{ Orders.d.payment_module }">

				<MvEVAL EXPR = "{ JSON_Order_OnDemandColumns( l.order, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_Order_CustomFields_With_Query( l.search_query, l.customfield_state, Orders.d.id, 'Orders' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Orders" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Orders">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-JSN-ORD-
| Next Error Code: 89   
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Order" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ondemandcolumns:ship_method"	VALUE = 1>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Order_OnDemandColumns( l.order, l.ondemandcolumns ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_OnDemandColumns" PARAMETERS = "order var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvCOMMENT>
	|
	| Note: JSON_OrderShipmentList_Load_Query_Filter interacts with this function through prefixed "order_" ondemand columns for the shipment list.
	|		Updates to this function to add new ondemandcolumns members should also update that function as well as the automated tests for
	|		OrderShipmentList_Load_Query.
	|
	</MvCOMMENT>

	"id":					<MvEVAL EXPR = "{ int( l.order:id ) }">,
	"pay_id":				<MvEVAL EXPR = "{ int( l.order:pay_id ) }">,
	"batch_id":				<MvEVAL EXPR = "{ int( l.order:batch_id ) }">,
	"status":				<MvEVAL EXPR = "{ int( l.order:status ) }">,
	"pay_status":			<MvEVAL EXPR = "{ int( l.order:pay_status ) }">,
	"stk_status":			<MvEVAL EXPR = "{ int( l.order:stk_status ) }">,
	"dt_instock":			<MvEVAL EXPR = "{ int( l.order:dt_instock ) }">,
	"orderdate":			<MvEVAL EXPR = "{ int( l.order:orderdate ) }">,
	"cust_id":				<MvEVAL EXPR = "{ int( l.order:cust_id ) }">,
	"ship_res":				<MvEVAL EXPR = "{ JSON_Boolean( l.order:ship_res ) }">,
	"ship_fname":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_fname ) }">",
	"ship_lname":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_lname ) }">",
	"ship_email":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_email ) }">",
	"ship_comp":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_comp ) }">",
	"ship_phone":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_phone ) }">",
	"ship_fax":				"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_fax ) }">",
	"ship_addr1":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_addr1 ) }">",
	"ship_addr2":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_addr2 ) }">",
	"ship_city":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_city ) }">",
	"ship_state":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_state ) }">",
	"ship_zip":				"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_zip ) }">",
	"ship_cntry":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_cntry ) }">",
	"bill_fname":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_fname ) }">",
	"bill_lname":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_lname ) }">",
	"bill_email":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_email ) }">",
	"bill_comp":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_comp ) }">",
	"bill_phone":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_phone ) }">",
	"bill_fax":				"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_fax ) }">",
	"bill_addr1":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_addr1 ) }">",
	"bill_addr2":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_addr2 ) }">",
	"bill_city":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_city ) }">",
	"bill_state":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_state ) }">",
	"bill_zip":				"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_zip ) }">",
	"bill_cntry":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:bill_cntry ) }">",
	"ship_id":				<MvEVAL EXPR = "{ int( l.order:ship_id ) }">,
	"ship_data":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_data ) }">",

	<MvIF EXPR = "{ l.ondemandcolumns:ship_method }">
		<MvIF EXPR = "{ NOT l.order:ship_id }">
			<MvASSIGN NAME = "l.ship_method" VALUE = "None">
		<MvELSE>
			<MvIF EXPR = "{ [ g.Library_DB ].ModuleAndFeatures_Load_ID_Cached( l.order:ship_id, l.module )	AND
							l.module:feature_hash:shipping													AND
							l.module:active }">
				<MvASSIGN NAME = "l.ship_method" VALUE = "{ [ g.Module_Root $ l.module:module ].ShippingModule_Description( l.module, l.order:ship_data ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.ship_method" VALUE = "Unknown">
			</MvIF>
		</MvIF>

		"ship_method":		"<MvEVAL EXPR = "{ JSON_Encode( l.ship_method ) }">",
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:cust_login }">
		"cust_login":		"<MvEVAL EXPR = "{ JSON_Encode( l.order:cust_login ) }">",
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:cust_pw_email }">
		"cust_pw_email":	"<MvEVAL EXPR = "{ JSON_Encode( l.order:cust_pw_email ) }">",
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:business_title }">
		"business_title":	"<MvEVAL EXPR = "{ JSON_Encode( l.order:business_title ) }">",
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:payment_module }">
		<MvIF EXPR = "{ NOT ISNULL l.order:payment_module }">	<MvASSIGN NAME = "l.module_name" VALUE = "{ l.order:payment_module }">
		<MvELSEIF EXPR = "{ l.order:pay_id EQ 0 }">				<MvASSIGN NAME = "l.module_name" VALUE = "None">
		<MvELSE>												<MvASSIGN NAME = "l.module_name" VALUE = "Unknown">
		</MvIF>

		"payment_module":	"<MvEVAL EXPR = "{ JSON_Encode( l.module_name ) }">",
	</MvIF>

	"source":				"<MvEVAL EXPR = "{ JSON_Encode( l.order:source ) }">",
	"source_id":			<MvEVAL EXPR = "{ int( l.order:source_id ) }">,
	"total":				<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
	"formatted_total":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total ) ) }">",
	"total_ship":			<MvEVAL EXPR = "{ l.order:total_ship ROUND 2 }">,
	"formatted_total_ship":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_ship ) ) }">",
	"total_tax":			<MvEVAL EXPR = "{ l.order:total_tax ROUND 2 }">,
	"formatted_total_tax":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_tax ) ) }">",
	"total_auth":			<MvEVAL EXPR = "{ l.order:total_auth ROUND 2 }">,
	"formatted_total_auth":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_auth ) ) }">",
	"total_capt":			<MvEVAL EXPR = "{ l.order:total_capt ROUND 2 }">,
	"formatted_total_capt":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_capt ) ) }">",
	"total_rfnd":			<MvEVAL EXPR = "{ l.order:total_rfnd ROUND 2 }">,
	"formatted_total_rfnd":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_rfnd ) ) }">",
	"net_capt":				<MvEVAL EXPR = "{ l.order:net_capt ROUND 2 }">,
	"formatted_net_capt":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:net_capt ) ) }">",
	"pend_count":			<MvEVAL EXPR = "{ int( l.order:pend_count ) }">,
	"bord_count":			<MvEVAL EXPR = "{ int( l.order:bord_count ) }">,
	"note_count":			<MvEVAL EXPR = "{ int( l.order:note_count ) }">,
	"dt_updated":			<MvEVAL EXPR = "{ int( l.order:dt_updated ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:customer AND l.order:cust_id }">
		<MvIF EXPR = "{ [ g.Feature_CUS_DB ].Customer_Load_ID( l.order:cust_id, l.customer ) }">
			,"customer":
			{
				<MvEVAL EXPR = "{ [ g.Feature_CUS_JSON ].JSON_Customer( l.customer ) }">
			}
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:items }">
		,"items":
		[
			<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ [ g.Library_DB ].OrderItemList_Load_Order( l.order:id, l.orderitems ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.item_count ) }">
				<MvEVAL EXPR = "{ JSON_OrderItem_OnDemandColumns( l.orderitem, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:charges }">
		,"charges":
		[
			<MvFOREACH ITERATOR = "l.ordercharge" ARRAY = "l.ordercharges" COUNT = "{ [ g.Library_DB ].OrderChargeList_Load_Order( l.order:id, l.ordercharges ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.charge_count ) }">
				<MvEVAL EXPR = "{ JSON_OrderCharge( l.ordercharge ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:coupons }">
		,"coupons":
		[
			<MvFOREACH ITERATOR = "l.ordercoupon" ARRAY = "l.ordercoupons" COUNT = "{ [ g.Feature_PGR_DB ].OrderCouponList_Load_Order( l.order:id, l.ordercoupons ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.coupon_count ) }">
				<MvEVAL EXPR = "{ [ g.Feature_PGR_JSON ].JSON_OrderCoupon( l.ordercoupon ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:discounts }">
		,"discounts":
		[
			<MvFOREACH ITERATOR = "l.orderdiscounttotal" ARRAY = "l.orderdiscounttotals" COUNT = "{ [ g.Feature_PGR_DB ].OrderDiscountTotalList_Load_Order( l.order:id, l.orderdiscounttotals ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.discount_count ) }">
				<MvEVAL EXPR = "{ [ g.Feature_PGR_JSON ].JSON_OrderDiscountTotal( l.orderdiscounttotal ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:payments }">
		,"payments":
		[
			<MvFOREACH ITERATOR = "l.orderpayment" ARRAY = "l.orderpayments" COUNT = "{ [ g.Library_DB ].OrderPaymentList_Load_Order( l.order:id, l.orderpayments ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.payment_count ) }">
				<MvEVAL EXPR = "{ JSON_OrderPayment( l.orderpayment ) }">

				<MvIF EXPR = "{ l.ondemandcolumns:payment_data }">
					<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID_Cached( l.orderpayment:pay_id, l.payment_module ) }">
						,

						<MvASSIGN NAME = "l.passphrase"			VALUE = "">
						<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Input_Retrieve( 'Passphrase', l.passphrase ) }">

						<MvASSIGN NAME = "l.pay_data"			VALUE = "{ miva_array_deserialize( l.orderpayment:pay_data ) }">
						<MvASSIGN NAME = "l.decrypted"			VALUE = "{ [ g.Library_Crypto ].Decrypt_OrderPayment( 'Order Data Retrieval', l.orderpayment, l.passphrase, l.secure_data ) }">

						<MvASSIGN NAME = "l.passphrase"			VALUE = "">

						<MvIF EXPR = "{ NOT l.decrypted }">
							<MvASSIGN NAME = "l.decrypt_error"	VALUE = "{ g.Error_Code $ ': ' $ g.Error_Message }">
						</MvIF>

						<MvASSIGN NAME = "l.desc"				VALUE = "{ [ g.Module_Root $ l.payment_module:module ].PaymentModule_Report_Description( l.payment_module, l.pay_data ) }">
						<MvASSIGN NAME = "l.fields"				VALUE = "{ [ g.Module_Root $ l.payment_module:module ].PaymentModule_Report_Fields( l.payment_module, l.pay_data, l.secure_data ) }">

						<MvIF EXPR = "{ l.orderpayment:pay_secid EQ 0 }">
							"decrypt_status":	"not_encrypted",
						<MvELSEIF EXPR = "{ l.decrypted }">
							"decrypt_status":	"decrypted",
						<MvELSE>
							"decrypt_status":	"not_decrypted",
							"decrypt_error":	"<MvEVAL EXPR = "{ JSON_Encode( l.decrypt_error ) }">",
						</MvIF>
						"description":			"<MvEVAL EXPR = "{ JSON_Encode( l.desc ) }">",
						"module":
						{
												<MvEVAL EXPR = "{ JSON_Module( l.payment_module ) }">
						}

						<MvIF EXPR = "{ NOT ISNULL l.fields }">
							,
							"data":
							{
								<MvFOREACH INDEX = "l.field_pos" ITERATOR = "l.field" ARRAY = "l.field_array" COUNT = "{ miva_splitstring( l.fields, ',', l.field_array, 'trim' ) }">
									<MvIF EXPR = "{ l.field_pos GT 1 }">
										,
									</MvIF>

									<MvIF EXPR = "{ l.payment_module:api_ver LT 4.14 }">
										<MvASSIGN NAME = "l.value"	VALUE = "{ [ g.Module_Root $ l.payment_module:module ].PaymentModule_Report_Value( l.payment_module, l.field ) }">
									<MvELSE>
										<MvASSIGN NAME = "l.value"	VALUE = "{ [ g.Module_Root $ l.payment_module:module ].PaymentModule_Report_Value( l.payment_module, l.field, l.pay_data, l.secure_data ) }">
									</MvIF>

									"<MvEVAL EXPR = "{ JSON_Encode( l.field ) }">": "<MvEVAL EXPR = "{ JSON_Encode( l.value ) }">"
								</MvFOREACH>
							}
						</MvIF>
					</MvIF>
				</MvIF>

				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:notes }">
		,"notes":
		[
			<MvFOREACH ITERATOR = "l.note" ARRAY = "l.notes" COUNT = "{ [ g.Library_DB ].NoteList_Load_Order( l.order:id, l.notes ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.note_count ) }">
				<MvEVAL EXPR = "{ JSON_Note( l.note ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:shipments }">
		<MvASSIGN NAME = "l.shipment_count" VALUE = 0>

		,"shipments":
		[
			<MvFOREACH ITERATOR = "l.shipment" ARRAY = "l.shipments" COUNT = "{ [ g.Library_DB ].OrderShipmentList_Load_Order( l.order:id, l.shipments ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.shipment_count ) }">
				<MvEVAL EXPR = "{ JSON_OrderShipment_OnDemandColumns( l.shipment, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:returns }">
		<MvASSIGN NAME = "l.return_count" VALUE = 0>

		,"returns":
		[
			<MvFOREACH ITERATOR = "l.return" ARRAY = "l.returns" COUNT = "{ [ g.Library_DB ].OrderReturnList_Load_Order( l.order:id, l.returns ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.return_count ) }">
				<MvEVAL EXPR = "{ JSON_OrderReturn_OnDemandColumns( l.return, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Load" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'Order_ID', l.order_id ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-ORD-00025', 'Order not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-ORD-00058', 'Unable to load order: Order_ID must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Order( l.order ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_Filters" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.available_filters" VALUE = "">

	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.id',			'id' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.batch_id',	'batch_id' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.status',		'status' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.pay_status',	'pay_status' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.orderdate',	'orderdate' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.dt_instock',	'dt_instock' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_BOOL(		l.available_filters, 'ord.ship_res',	'ship_res' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_fname',	'ship_fname' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_lname',	'ship_lname' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_email',	'ship_email' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_comp',	'ship_comp' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_phone',	'ship_phone' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_fax',	'ship_fax' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_addr',	'ship_addr1' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_addr2',	'ship_addr2' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_city',	'ship_city' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_state',	'ship_state' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_zip',	'ship_zip' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_cntry',	'ship_cntry' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_fname',	'bill_fname' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_lname',	'bill_lname' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_email',	'bill_email' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_comp',	'bill_comp' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_phone',	'bill_phone' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_fax',	'bill_fax' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_addr',	'bill_addr1' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_addr2',	'bill_addr2' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_city',	'bill_city' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_state',	'bill_state' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_zip',	'bill_zip' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.bill_cntry',	'bill_cntry' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.ship_id',		'ship_id' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.ship_data',	'ship_data' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'ord.source',		'source' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.source_id',	'source_id' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(		l.available_filters, 'ord.total',		'total' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(		l.available_filters, 'ord.total_ship',	'total_ship' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(		l.available_filters, 'ord.total_tax',	'total_tax' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(		l.available_filters, 'ord.total_auth',	'total_auth' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(		l.available_filters, 'ord.total_capt',	'total_capt' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(		l.available_filters, 'ord.total_rfnd',	'total_rfnd' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(		l.available_filters, 'ord.net_capt',	'net_capt' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.pend_count',	'pend_count' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.bord_count',	'bord_count' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.note_count',	'note_count' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'ord.dt_updated',	'dt_updated' ) }">
	
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'cust.login',		'cust_login' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'cust.pw_email',	'cust_pw_email' ) }">
	
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'ba.title',		'business_title' ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.available_filters }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_OrderBy" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Any change made here must also be made to json/crypt.mv JSON_OrderList_Load_EncryptionKey_Query. It uses a
	| separate order by list due to the "SELECT DISTINCT" clause.
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = "id:ord.id,batch_id:ord.batch_id,status:ord.status,pay_status:ord.pay_status,orderdate:ord.orderdate,dt_instock:ord.dt_instock,
							   ship_name:ord.ship_fname;ord.ship_lname,ship_fname:ord.ship_fname,ship_lname:ord.ship_lname,ship_email:ord.ship_email,ship_comp:ord.ship_comp,ship_phone:ord.ship_phone,
							   ship_fax:ord.ship_fax,ship_addr1:ord.ship_addr,ship_addr2:ord.ship_addr2,ship_city:ord.ship_city,ship_state:ord.ship_state,ship_zip:ord.ship_zip,ship_cntry:ord.ship_cntry,ship_res:ord.ship_res,
							   bill_name:ord.bill_fname;ord.bill_lname,bill_fname:ord.bill_fname,bill_lname:ord.bill_lname,bill_email:ord.bill_email,bill_comp:ord.bill_comp,bill_phone:ord.bill_phone,
							   bill_fax:ord.bill_fax,bill_addr1:ord.bill_addr,bill_addr2:ord.bill_addr2,bill_city:ord.bill_city,bill_state:ord.bill_state,bill_zip:ord.bill_zip,bill_cntry:ord.bill_cntry,
							   ship_data:ord.ship_data,source:ord.source,source_id:ord.source_id,total:ord.total,total_ship:ord.total_ship,total_tax:ord.total_tax,total_auth:ord.total_auth,total_capt:ord.total_capt,
							   total_rfnd:ord.total_rfnd,net_capt:ord.net_capt,pend_count:ord.pend_count,bord_count:ord.bord_count,cust_login:cust.login:null_char,cust_pw_email:cust.pw_email:null_char,
							   business_title:ba.title:null_char,note_count:ord.note_count,dt_updated:ord.dt_updated,payment_module:opm.name/payment_module/null_char;ord.pay_id/pay_id">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_OrderBy_WithColumnAlias" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "id,batch_id,status,pay_status,orderdate:orderdate,dt_instock,ship_res,
							   ship_name:ship_fname;ship_lname,ship_fname,ship_lname,ship_email,ship_comp,ship_phone,ship_fax,ship_addr1:ship_addr,ship_addr2,ship_city,ship_state,ship_zip,ship_cntry,
							   bill_name:bill_fname;bill_lname,bill_fname,bill_lname,bill_email,bill_comp,bill_phone,bill_fax,bill_addr1:bill_addr,bill_addr2,bill_city,bill_state,bill_zip,bill_cntry,
							   source,source_id,total,total_auth,total_capt,total_rfnd,net_capt,pend_count,bord_count,cust_login:cust_login:null_char,
							   cust_pw_email:cust_pw_email:null_char,business_title:business_title:null_char,note_count,dt_updated,payment_module:payment_module/null_char;pay_id,total_ship,
							   total_tax,ship_data">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_Joins_Filter" PARAMETERS = "filter var, joins var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.joins"						VALUE = "">
	<MvASSIGN NAME = "l.joins:customers"			VALUE = "{ JSON_Filter_Contains_Search_Field( l.filter, 'cust_login', l.null ) OR JSON_Filter_Contains_Search_Field( l.filter, 'cust_pw_email', l.null ) }">
	<MvASSIGN NAME = "l.joins:businessaccounts"		VALUE = "{ JSON_Filter_Contains( l.filter, 'BusinessAccount_ID' ) OR JSON_Filter_Contains_Search_Field( l.filter, 'business_title', l.null ) }">
	<MvASSIGN NAME = "l.joins:orderpayments"		VALUE = "{ JSON_Filter_Contains_Search_Field( l.filter, 'payment_module', l.null ) }">

	<MvIF EXPR = "{ l.joins:businessaccounts }">
		<MvASSIGN NAME = "l.joins:customers"		VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_Joins_Sort" PARAMETERS = "sort, joins var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.sort_field"				VALUE = "{ [ g.Library_DB ].SQL_Sort_Field( l.sort, l.null ) }">

	<MvASSIGN NAME = "l.joins"					VALUE = "">
	<MvASSIGN NAME = "l.joins:customers"		VALUE = "{ l.sort_field EQ 'cust_login' OR l.sort_field EQ 'cust_pw_email' }">
	<MvASSIGN NAME = "l.joins:businessaccounts"	VALUE = "{ l.sort_field EQ 'business_title' }">
	<MvASSIGN NAME = "l.joins:orderpayments"	VALUE = "{ l.sort_field EQ 'payment_module' }">

	<MvIF EXPR = "{ l.joins:businessaccounts }">
		<MvASSIGN NAME = "l.joins:customers"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_Joins_OnDemandColumns" PARAMETERS = "ondemandcolumns var, joins var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.joins"					VALUE = "">
	<MvASSIGN NAME = "l.joins:customers"		VALUE = "{ l.ondemandcolumns:cust_login OR l.ondemandcolumns:cust_pw_email }">
	<MvASSIGN NAME = "l.joins:businessaccounts"	VALUE = "{ l.ondemandcolumns:business_title }">
	<MvASSIGN NAME = "l.joins:orderpayments"	VALUE = "{ l.ondemandcolumns:payment_module }">

	<MvIF EXPR = "{ l.joins:businessaccounts }">
		<MvASSIGN NAME = "l.joins:customers"	VALUE = 1>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_Order_Read" PARAMETERS = "order var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Library_DB ].v56_Order_Read( l.order ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:cust_login }">		<MvASSIGN NAME = "l.order:cust_login"		VALUE = "{ Orders.d.cust_login }">		</MvIF>
	<MvIF EXPR = "{ l.ondemandcolumns:cust_pw_email }">		<MvASSIGN NAME = "l.order:cust_pw_email"	VALUE = "{ Orders.d.cust_pw_email }">	</MvIF>
	<MvIF EXPR = "{ l.ondemandcolumns:business_title }">	<MvASSIGN NAME = "l.order:business_title"	VALUE = "{ Orders.d.business_title }">	</MvIF>
	<MvIF EXPR = "{ l.ondemandcolumns:payment_module }">	<MvASSIGN NAME = "l.order:payment_module"	VALUE = "{ Orders.d.payment_module }">	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderList_Load_Query" PARAMETERS = "filter var, sort, default_sort, search_query var, count_query var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.search_query"			VALUE = "">
	<MvASSIGN NAME = "l.count_query"			VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns"		VALUE = "">
	<MvASSIGN NAME = "l.filter_joins"			VALUE = "">
	<MvASSIGN NAME = "l.sort_joins"				VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumn_joins"	VALUE = "">
	<MvASSIGN NAME = "l.filter_columns"			VALUE = "{ JSON_BaseOrderList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"		VALUE = "{ JSON_BaseOrderList_OrderBy() }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.search_query, 'ord.*' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Orders', 'ord' ) }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_OrderList_Load_Query_Filter', 'JSON_OrderList_Load_Query_Advanced_Filter', 'JSON_Order_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ JSON_BaseOrderList_Joins_Filter( l.filter, l.filter_joins ) }">
	<MvEVAL EXPR = "{ JSON_BaseOrderList_Joins_Sort( l.sort, l.sort_joins ) }">
	<MvEVAL EXPR = "{ JSON_BaseOrderList_Joins_OnDemandColumns( l.ondemandcolumns, l.ondemandcolumn_joins ) }">

	<MvCOMMENT>
	|
	| Build the count query
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.count_query" VALUE = "{ l.search_query }">

	<MvIF EXPR = "{ l.filter_joins:customers }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.filter_joins:businessaccounts }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.filter_joins:orderpayments }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Build the search query
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:customers OR l.filter_joins:customers OR l.sort_joins:customers }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cust.login',	'cust_login' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cust.pw_email',	'cust_pw_email' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:businessaccounts OR l.filter_joins:businessaccounts OR l.sort_joins:businessaccounts }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'ba.title',		'business_title' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:orderpayments OR l.filter_joins:orderpayments OR l.sort_joins:orderpayments }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'opm.name',		'payment_module' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Order_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, l.default_sort, g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseOrderIndex_Load_ID" PARAMETERS = "filter var, sort, default_sort, query var, record var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.filter_joins"			VALUE = "">
	<MvASSIGN NAME = "l.sort_joins"				VALUE = "">
	<MvASSIGN NAME = "l.filter_columns" 		VALUE = "{ JSON_BaseOrderList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns"		VALUE = "{ JSON_BaseOrderList_OrderBy() }">

	<MvREFERENCE NAME = "l.order"				VARIABLE = "l.record:ord">
	<MvREFERENCE NAME = "l.customer"			VARIABLE = "l.record:cust">
	<MvREFERENCE NAME = "l.businessaccount"		VARIABLE = "l.record:ba">
	<MvREFERENCE NAME = "l.orderpayment_module"	VARIABLE = "l.record:opm">

	<MvEVAL EXPR = "{ JSON_BaseOrderList_Joins_Filter( l.filter, l.filter_joins ) }">
	<MvEVAL EXPR = "{ JSON_BaseOrderList_Joins_Sort( l.sort, l.sort_joins ) }">

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvCOMMENT>
	|
	| The output of Order_Load_ID sets xxx_addr to xxx_addr $ ' ' $ xxx_addr2 from the database.  SQL_Query_Index doesn't know this so we need
	| to explicitly reset those values to what it expects.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.order:ship_addr"		VALUE = "{ l.order:ship_addr1 }">
	<MvASSIGN NAME = "l.order:bill_addr"		VALUE = "{ l.order:bill_addr1 }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Orders', 'ord' ) }">

	<MvIF EXPR = "{ l.filter_joins:customers OR l.sort_joins:customers }"> <MvCOMMENT> Note: filter_joins/sort_joins:businessaccounts automatically sets filter_joins/sort_joins:customers </MvCOMMENT>
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'ord', g.Store_Table_Prefix $ 'Customers', 'cust', 'cust.id = ord.cust_id', '' ) }">

		<MvIF EXPR = "{ l.order:cust_id }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.order:cust_id, l.customer ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.filter_joins:businessaccounts OR l.sort_joins:businessaccounts }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'ord', g.Store_Table_Prefix $ 'BusinessAccounts', 'ba', 'cust.account_id = ba.id', '' ) }">

		<MvIF EXPR = "{ l.customer:account_id }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Feature_CUS_DB ].BusinessAccount_Load( l.customer:account_id, l.businessaccount ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.filter_joins:orderpayments OR l.sort_joins:orderpayments }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'ord', 'Modules', 'opm', 'opm.id = ord.pay_id', '' ) }">

		<MvIF EXPR = "{ l.order:pay_id }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Module_Library_DB ].Module_Load_ID( l.order:pay_id, l.orderpayment_module ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_OrderList_Load_Query_Filter', 'JSON_OrderList_Load_Query_Advanced_Filter', 'JSON_Order_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, l.default_sort, g.Module_JSON, 'JSON_Order_CustomFields_Query_OrderBy' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.query"	VALUE = "">
	<MvASSIGN NAME = "l.record"	VALUE = "">
	<MvASSIGN NAME = "l.filter"	VALUE = "">
	<MvASSIGN NAME = "l.sort"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_BaseOrderIndex_Load_ID( l.filter, l.sort, 'ord.id', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:ord:id, g.Module_JSON, 'JSON_Order_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index": <MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort )	OR
					NOT JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseOrderList_Load_Query( l.filter, l.sort, 'ord.id', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Orders', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00028', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.order_count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Order_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Orders.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.order_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_BaseOrderList_Order_Read( l.order, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.order_count ) }">
				<MvEVAL EXPR = "{ JSON_Order_OnDemandColumns( l.order, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_Order_CustomFields_With_Query( l.search_query, l.customfield_state, Orders.d.id, 'Orders' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Orders" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Orders">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Load_Query_Filter" PARAMETERS = "query var, field_count var, filter_name, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'ondemandcolumns' }">
		<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter_value">
			<MvIF EXPR = "{ ISNULL l.column_code }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.data" MEMBER = "{ l.column_code }" VALUE = 1>
		</MvFOREACH>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'Customer_ID' }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, [ g.Library_Native_DBAPI ].DB_Filter_EQ( 'INTEGER', 'ord.cust_id', l.filter_value ), [ g.Library_DB ].SQL_Query_Field( l.filter_value ) ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'BusinessAccount_ID' }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, [ g.Library_Native_DBAPI ].DB_Filter_EQ( 'INTEGER', 'ba.id', l.filter_value ), [ g.Library_DB ].SQL_Query_Field( l.filter_value ) ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Load_Query_Advanced_Filter" PARAMETERS = "query var, field_count, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'product_code' }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'ord.id = ( SELECT MAX( item.order_id ) FROM ' $ g.Store_Table_Prefix $ 'OrderItems item WHERE item.order_id = ord.id AND ' $ [ g.Library_Native_DBAPI ].DB_Filter_EQ( 'CHAR', 'item.code', l.filter_value ) $ ' )', [ g.Library_DB ].SQL_Query_Field( l.filter_value ) ) }">
		
		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'payment' }">
		<MvIF EXPR = "{ l.filter_value EQ 'auth_0_capt' }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'ord.total_auth > 0 AND ord.net_capt = 0', '' ) }">
		<MvELSEIF EXPR = "{ l.filter_value EQ 'partial_capt' }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'ord.net_capt < ord.total_auth AND ord.net_capt <> 0', '' ) }">
		<MvELSEIF EXPR = "{ l.filter_value EQ 'capt_not_ship' }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, '( ord.status <> 200 AND ord.status <> 201 ) AND ( ord.net_capt > 0 )', '' ) }">
		<MvELSEIF EXPR = "{ l.filter_value EQ 'ship_not_capt' }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, '( ord.status = 200 OR ord.status = 201 ) AND ( ord.net_capt = 0 )', '' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'pay_id' }">
		<MvASSIGN NAME = "l.data:payment_module" VALUE = 1>

		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, [ g.Library_Native_DBAPI ].DB_Filter_EQ( 'INTEGER', 'ord.pay_id', l.filter_value ), [ g.Library_DB ].SQL_Query_Field( l.filter_value ) ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_CreateShipment_Status" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.order_ids"		VALUE = "">
	<MvASSIGN NAME = "l.order_id_count"	VALUE = 0>
	<MvASSIGN NAME = "l.processed"		VALUE = 0>
	<MvASSIGN NAME = "l.status"			VALUE = 0>
	<MvASSIGN NAME = "l.errors"			VALUE = "">
	<MvASSIGN NAME = "l.error_count"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(			'R', 'Status', l.status ) OR
					NOT JSON_Input_Integer_Array(	'R', 'Order_IDs', l.order_ids, l.order_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.order_id" ARRAY = "l.order_ids" COUNT = "{ l.order_id_count }">
		<MvASSIGN NAME = "l.processed"					VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.error_count"			VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, 'Order not found', l.errors ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.orderitem_count"		VALUE = "{ [ g.Library_DB ].OrderItemList_Load_Status( l.order:id, l.status, l.orderitems ) }">

			<MvIF EXPR = "{ l.orderitem_count }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_CreateShipment( l.order:id, l.orderitem_count, l.orderitems )	OR
								NOT [ g.Library_DB ].Order_Update_Status( l.order )													OR
								NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
					<MvASSIGN NAME = "l.error_count"	VALUE = "{ JSON_Response_ListProcessed_Error( l.order:id, g.Error_Code, g.Error_Message, l.errors ) }">
				<MvELSE>
					<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00002', 'Shipment created for items with status ' $ l.status $ ' for order ' $ l.order:id ) }">
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_BackOrder_Status" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.order_ids"		VALUE = "">
	<MvASSIGN NAME = "l.order_id_count"	VALUE = 0>
	<MvASSIGN NAME = "l.statuses"		VALUE = "">
	<MvASSIGN NAME = "l.status_count"	VALUE = 0>
	<MvASSIGN NAME = "l.date_instock"	VALUE = 0>
	<MvASSIGN NAME = "l.processed"		VALUE = 0>
	<MvASSIGN NAME = "l.errors"			VALUE = "">
	<MvASSIGN NAME = "l.error_count"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(			'R', 'Date_InStock',	l.date_instock )				OR
					NOT JSON_Input_Integer_Array(	'R', 'Status',			l.statuses, l.status_count )	OR
					NOT JSON_Input_Integer_Array(	'R', 'Order_IDs',		l.order_ids, l.order_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.order_id" ARRAY = "l.order_ids" COUNT = "{ l.order_id_count }">
		<MvASSIGN NAME = "l.processed"					VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.error_count"				VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, 'Order not found', l.errors ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.orderitems"					VALUE = "">
			<MvASSIGN NAME = "l.orderitem_count"			VALUE = 0>

			<MvFOREACH ITERATOR = "l.status" ARRAY = "l.statuses" COUNT = "{ l.status_count }">
				<MvASSIGN NAME = "l.temp_orderitem_count" 	VALUE = "{ [ g.Library_DB ].OrderItemList_Load_Status( l.order:id, l.status, l.temp_orderitems ) }">
				<MvASSIGN NAME = "l.orderitem_count" 		VALUE = "{ miva_array_copy( l.temp_orderitems, 1, l.temp_orderitem_count, l.orderitems, -1 ) }">
			</MvFOREACH>

			<MvIF EXPR = "{ l.orderitem_count }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_BackOrder( l.order:id, l.orderitem_count, l.orderitems, l.date_instock )	OR
								NOT [ g.Library_DB ].Order_Update_Status( l.order )															OR
								NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
					<MvASSIGN NAME = "l.error_count"	VALUE = "{ JSON_Response_ListProcessed_Error( l.order:id, g.Error_Code, g.Error_Message, l.errors ) }">
				<MvELSE>
					<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00003', 'Items with statuses \'' $ l.statuses $ '\' backordered for order \'' $ l.order:id $ '\'' ) }">
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Delete_OrderPayments" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.order_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.order_count"		VALUE = "{ JSON_Array_Integer( g.Order_IDs, l.orders ) }">

	<MvWHILE EXPR = "{ l.order_pos LE l.order_count }">
		<MvASSIGN NAME = "l.orderpayment_pos"		VALUE = 1>
		<MvASSIGN NAME = "l.orderpayment_count"		VALUE = "{ [ g.Library_DB ].OrderPaymentList_Load_Order( l.orders[ l.order_pos ], l.orderpayments ) }">

		<MvWHILE EXPR = "{ l.orderpayment_pos LE l.orderpayment_count }">
			<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID_Cached( l.orderpayments[ l.orderpayment_pos ]:pay_id, l.module ) }">
				<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.order_delete" VALUE = "{ PaymentModule_Order_Delete( l.module, l.orderpayments[ l.orderpayment_pos ]:pay_data, l.orderpayments[ l.orderpayment_pos ]:pay_secdat ) }">
				<MvIF EXPR = "{ NOT l.order_delete }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderPayment_Delete( l.orderpayments[ l.orderpayment_pos ] ) OR
							NOT [ g.Library_DB ].Order_Update_LastUpdated( l.orders[ l.order_pos ] ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.orderpayment_pos"	VALUE = "{ l.orderpayment_pos + 1 }">
		</MvWHILE>

		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00022', 'Payment information purged for order ' $ l.orders[ l.order_pos ] ) }">
		<MvASSIGN NAME = "l.order_pos"	VALUE = "{ l.order_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_Delete" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer_Array( 'R', 'Line_IDs', l.line_ids, l.line_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitems"					VALUE = "">
	<MvASSIGN NAME = "l.products"					VALUE = "">
	<MvASSIGN NAME = "l.variant_ids"				VALUE = "">
	<MvASSIGN NAME = "l.orderitem_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.line_id" ARRAY = "l.line_ids" COUNT = "{ l.line_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitems[ l.orderitem_count + 1 ] ) }">
			<MvASSIGN NAME = "l.orderitem_count"	VALUE = "{ l.orderitem_count + 1 }">

			<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code_WithRuntimeInventory( l.orderitems[ l.orderitem_count ]:code, l.products[ l.orderitem_count ] ) }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvASSIGN NAME = "l.products"		INDEX = "{ l.orderitem_count }" MEMBER = "id"	VALUE = 0>
				<MvASSIGN NAME = "l.variant_ids"	INDEX = "{ l.orderitem_count }"					VALUE = 0>
			<MvELSE>
				<MvASSIGN NAME = "l.option_count"	VALUE = "{ [ g.Library_DB ].OrderOptionList_Load_Line( l.orderitems[ l.orderitem_count ]:line_id, l.options ) }">

				<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.products[ l.orderitem_count ], l.options, l.option_count, l.variant_ids[ l.orderitem_count ] ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.orderitem_count }">
		<MvASSIGN NAME = "l.previous_total"			VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_Delete_WithVariants( l.orderitem_count, l.orderitems, l.products, l.variant_ids ) OR
						NOT [ g.Feature_PGR_UT ].Discount_Order( l.order, l.previous_total )	OR
						NOT [ g.Library_DB ].Order_Update_Status( l.order )						OR
						NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.orderitem_pos"			VALUE = 1>
		<MvWHILE EXPR = "{ l.orderitem_pos LE l.orderitem_count }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00006', 'Order item deleted order_id=' $ l.order:id $ ' line_id=' $ l.orderitems[ l.orderitem_pos ]:line_id $ ' code=' $ l.orderitems[ l.orderitem_pos ]:code $ ' quantity=' $ l.orderitems[ l.orderitem_pos ]:quantity ) }">
			<MvASSIGN NAME = "l.orderitem_pos"		VALUE = "{ l.orderitem_pos + 1 }">
		</MvWHILE>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.order:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_Cancel" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.reason"						VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Text(			'o', 'Reason',		l.reason )	OR
					NOT JSON_Input_Integer_Array(	'R', 'Line_IDs',	l.line_ids, l.line_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitems"					VALUE = "">
	<MvASSIGN NAME = "l.products"					VALUE = "">
	<MvASSIGN NAME = "l.variant_ids"				VALUE = "">
	<MvASSIGN NAME = "l.orderitem_count"			VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Feature_PGR_DB ].DiscountOptions_Load( l.discountoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.line_id" ARRAY = "l.line_ids" COUNT = "{ l.line_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitems[ l.orderitem_count + 1 ] ) }">
			<MvASSIGN NAME = "l.orderitem_count"	VALUE = "{ l.orderitem_count + 1 }">

			<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code_WithRuntimeInventory( l.orderitems[ l.orderitem_count ]:code, l.products[ l.orderitem_count ] ) }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvASSIGN NAME = "l.products"		INDEX = "{ l.orderitem_count }" MEMBER = "id"	VALUE = 0>
				<MvASSIGN NAME = "l.variant_ids"	INDEX = "{ l.orderitem_count }"					VALUE = 0>
			<MvELSE>
				<MvASSIGN NAME = "l.option_count"	VALUE = "{ [ g.Library_DB ].OrderOptionList_Load_Line( l.orderitems[ l.orderitem_count ]:line_id, l.options ) }">

				<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.products[ l.orderitem_count ], l.options, l.option_count, l.variant_ids[ l.orderitem_count ] ) }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.orderitem_count }">
		<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00007', 'Order item cancelled order_id=' $ l.order:id $ ' line_id=' $ l.orderitem:line_id $ ' code=' $ l.orderitem:code $ ' quantity=' $ l.orderitem:quantity $ ' reason=' $ l.reason ) }">

			<MvIF EXPR = "{ ISNULL l.reason }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.orderoption" 			VALUE = "">
			<MvASSIGN NAME = "l.orderoption:order_id" 	VALUE = "{ l.order:id }">
			<MvASSIGN NAME = "l.orderoption:line_id" 	VALUE = "{ l.orderitem:line_id }">
			<MvASSIGN NAME = "l.orderoption:attr_id" 	VALUE = 0>
			<MvASSIGN NAME = "l.orderoption:attr_code" 	VALUE = "Cancellation Reason">
			<MvASSIGN NAME = "l.orderoption:attmpat_id" VALUE = 0>
			<MvASSIGN NAME = "l.orderoption:option_id" 	VALUE = 0>
			<MvASSIGN NAME = "l.orderoption:opt_code" 	VALUE = "">
			<MvASSIGN NAME = "l.orderoption:price" 		VALUE = 0.00>
			<MvASSIGN NAME = "l.orderoption:weight" 	VALUE = 0>

			<MvIF EXPR = "{ len_var( l.reason ) GT 254 }">	<MvASSIGN NAME = "l.orderoption:data_long" 	VALUE = "{ l.reason }">
			<MvELSE>										<MvASSIGN NAME = "l.orderoption:data" 		VALUE = "{ l.reason }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderOption_Insert( l.orderoption ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_Cancel_WithVariants( l.orderitem_count, l.orderitems, l.products, l.variant_ids ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.discountoptions:delshipcan }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_Load_Order( l.order:id, l.all_orderitems ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT miva_array_search( l.all_orderitems, 1, l.all_orderitem, 'l.all_orderitem:status NE 300' ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderCharge_Delete_All_Type( l.order:id, 'SHIPPING' ) OR
								NOT [ g.Module_Library_DB ].OrderCharge_Delete_All_Type( l.order:id, 'HANDLING' ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvASSIGN NAME = "l.order:ship_id"		VALUE = 0>
				<MvASSIGN NAME = "l.order:ship_data"	VALUE = "">

				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Update_Shipping( l.order ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.discountoptions:repricecan }">
			<MvASSIGN NAME = "l.discount_params"	VALUE = "">

			<MvEVAL EXPR = "{ [ g.Feature_PGR_UT ].Discount_Order_BuildParam_AdjustTotal( l.discount_params, [ g.Library_DB ].Order_Total( l.order:id ) ) }">

			<MvIF EXPR = "{ l.discountoptions:reshipcan }">
				<MvEVAL EXPR = "{ [ g.Feature_PGR_UT ].Discount_Order_BuildParam_RecalculateShipping( l.discount_params ) }">
			</MvIF>

			<MvIF EXPR = "{ l.discountoptions:retaxcan }">
				<MvEVAL EXPR = "{ [ g.Feature_PGR_UT ].Discount_Order_BuildParam_RecalculateTax( l.discount_params ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Feature_PGR_UT ].Discount_Order_WithParams( l.order, l.discount_params ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.discountoptions:reshipcan OR l.discountoptions:retaxcan }">
			<MvASSIGN NAME = "l.calculate_params"	VALUE = "">

			<MvIF EXPR = "{ l.discountoptions:reshipcan AND l.order:ship_id }">
				<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( l.order:ship_id, l.shipping_module )			AND
								[ g.Module_Library_DB ].StoreModule_Load( l.shipping_module:id, 'shipping', l.null )	AND
								l.shipping_module:active }">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateShipping_RetainOnFailure( l.calculate_params, l.shipping_module, l.order:ship_data ) }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.discountoptions:retaxcan }">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateTax( l.calculate_params ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Order_Calculate_Charges( l.order, l.calculate_params ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.order_total"		VALUE = "{ [ g.Module_Library_DB ].Order_Total( l.order:id ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].v56_Order_Update_Total( l.order, l.order_total ) OR
							NOT [ g.Module_Library_DB ].Order_Update_ShippingAndTaxTotals( l.order ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvASSIGN NAME = "l.order_total"		VALUE = "{ [ g.Module_Library_DB ].Order_Total( l.order:id ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].v56_Order_Update_Total( l.order, l.order_total ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Status( l.order ) OR
						NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.order:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_Split" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer( 'R', 'Line_ID',		l.line_id ) OR
					NOT JSON_Input_Integer( 'R', 'Quantity',	l.quantity ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.original_orderitem ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.original_orderitem:subscrp_id }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00078', 'Subscription items cannot be split' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.original_orderitem:quantity LE l.quantity }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00023', 'The split quantity is greater than the quantity of this line item, minus one' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.new_orderitem"					VALUE = "{ l.original_orderitem }">
	<MvASSIGN NAME = "l.original_quantity"				VALUE = "{ l.original_orderitem:quantity }">
	<MvASSIGN NAME = "l.original_orderitem:quantity"	VALUE = "{ l.original_orderitem:quantity - l.quantity }">
	<MvASSIGN NAME = "l.new_orderitem:quantity"			VALUE = "{ l.quantity }">
	<MvASSIGN NAME = "l.new_orderitem:tax"				VALUE = "{ ( l.original_orderitem:tax * ( l.new_orderitem:quantity / l.original_quantity ) ) ROUND 2 }">
	<MvASSIGN NAME = "l.original_orderitem:tax"			VALUE = "{ ( l.original_orderitem:tax - l.new_orderitem:tax ) ROUND 2 }">
	<MvASSIGN NAME = "l.new_orderitem:group_id"			VALUE = ""> <MvCOMMENT> NULL group_id gets assigned to the value of line_id in OrderItem_Insert_LowLevel, line_id generated in OrderItem_Insert </MvCOMMENT>
	<MvASSIGN NAME = "l.orderoption_count"				VALUE = "{ [ g.Library_DB ].OrderOptionList_Load_Line( l.original_orderitem:line_id, l.orderoptions ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItem_Insert( l.new_orderitem ) OR
					NOT [ g.Library_DB ].OrderItem_Update( l.original_orderitem ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.discounts" COUNT = "{ [ g.Library_DB ].OrderItemDiscountList_Load_Line( l.original_orderitem:line_id, l.discounts ) }">
		<MvASSIGN NAME = "l.discount:line_id"			VALUE = "{ l.new_orderitem:line_id }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemDiscount_Insert( l.discount ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.orderoption" ARRAY = "l.orderoptions" COUNT = "{ l.orderoption_count }">
		<MvASSIGN NAME = "l.discount_count"				VALUE = "{ [ g.Library_DB ].OrderOptionDiscountList_Load_LineOption_ID( l.orderoption:id, l.discounts ) }">
		<MvASSIGN NAME = "l.orderoption:line_id"		VALUE = "{ l.new_orderitem:line_id }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderOption_Insert( l.orderoption ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.discounts" COUNT = "{ l.discount_count }">
			<MvASSIGN NAME = "l.discount:line_id"		VALUE = "{ l.orderoption:line_id }">
			<MvASSIGN NAME = "l.discount:lineopt_id"	VALUE = "{ l.orderoption:id }">

			<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderOptionDiscount_Insert( l.discount ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"original_orderitem":
		{
			<MvEVAL EXPR = "{ JSON_OrderItem( l.original_orderitem ) }">
		},
		"split_orderitem":
		{
			<MvEVAL EXPR = "{ JSON_OrderItem( l.new_orderitem ) }">
		}
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_CreateShipment" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer_Array( 'R', 'Line_IDs', l.line_ids, l.line_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitems"					VALUE = "">
	<MvASSIGN NAME = "l.orderitem_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.line_id" ARRAY = "l.line_ids" COUNT = "{ l.line_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitem ) }">
			<MvASSIGN NAME = "l.orderitem_count"	VALUE = "{ miva_array_insert_var( l.orderitems, l.orderitem, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT l.orderitem_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00057', 'Order items must exist in order to create a shipment' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v58_OrderItemList_CreateShipment( l.order:id, l.orderitem_count, l.orderitems, l.ordershipment )	OR
					NOT [ g.Library_DB ].Order_Update_Status( l.order )																		OR
					NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00008', 'Shipment created for order ' $ l.order:id ) }">

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00009', 'Order item assigned to shipment order_id=' $ l.order:id $ ' shpmnt_id=' $ l.orderitem:shpmnt_id $ ' line_id=' $ l.orderitem:line_id $ ' code=' $ l.orderitem:code $ ' quantity=' $ l.orderitem:quantity ) }">
	</MvFOREACH>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_OrderShipment( l.ordershipment ) }">
		
		<MvCOMMENT>
		|
		| Included for backwards compatibility
		|
		</MvCOMMENT>	

		,"shipment_id": <MvEVAL EXPR = "{ int( l.ordershipment:id ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_RemoveFromShipment" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer_Array( 'R', 'Line_IDs', l.line_ids, l.line_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitems"					VALUE = "">
	<MvASSIGN NAME = "l.orderitem_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.line_id" ARRAY = "l.line_ids" COUNT = "{ l.line_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitem ) }">
			<MvASSIGN NAME = "l.orderitem_count"	VALUE = "{ miva_array_insert_var( l.orderitems, l.orderitem, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.orderitem_count }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_RemoveFromShipments( l.orderitem_count, l.orderitems ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" INDEX = "l.pos" COUNT = "{ l.orderitem_count }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00080', 'Order item removed from shipment order_id=' $ l.order:id $ ' shpmnt_id=' $ l.orderitem:shpmnt_id $ ' line_id=' $ l.orderitem:line_id $ ' code=' $ l.orderitem:code $ ' quantity=' $ l.orderitem:quantity ) }">

			<MvASSIGN NAME = "l.original_orderitems" INDEX = "{ l.pos }"	VALUE = "{ l.orderitem }">
			<MvASSIGN NAME = "l.orderitem:status"							VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:shpmnt_id"						VALUE = 0>
		</MvFOREACH>

		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_Update_Status( l.orderitem_count, l.original_orderitems, l.orderitems )	OR 
						NOT [ g.Library_DB ].Order_Update_Status( l.order )															OR
						NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_BackOrder" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.dt_instock"					VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(			'O', 'Date_InStock',	l.dt_instock ) OR
					NOT JSON_Input_Integer_Array(	'R', 'Line_IDs',		l.line_ids, l.line_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitems"					VALUE = "">
	<MvASSIGN NAME = "l.orderitem_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.line_id" ARRAY = "l.line_ids" COUNT = "{ l.line_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitem ) }">
			<MvASSIGN NAME = "l.orderitem_count"	VALUE = "{ miva_array_insert_var( l.orderitems, l.orderitem, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.orderitem_count }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItemList_BackOrder( l.order:id, l.orderitem_count, l.orderitems, l.dt_instock )	OR
						NOT [ g.Library_DB ].Order_Update_Status( l.order )															OR
						NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00010', 'Order item backordered order_id=' $ l.order:id $ ' line_id=' $ l.orderitem:line_id $ ' code=' $ l.orderitem:code $ ' quantity=' $ l.orderitem:quantity ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_CreateReturn" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer_Array( 'R', 'Line_IDs', l.line_ids, l.line_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitems"					VALUE = "">
	<MvASSIGN NAME = "l.orderitem_count"			VALUE = 0>

	<MvFOREACH ITERATOR = "l.line_id" ARRAY = "l.line_ids" COUNT = "{ l.line_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitem ) }">
			<MvASSIGN NAME = "l.orderitem_count"	VALUE = "{ miva_array_insert_var( l.orderitems, l.orderitem, -1 ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.orderitem_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00059', 'No valid order items specified' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.previous_total"				VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v58_OrderItemList_CreateReturn( l.order:id, l.orderitem_count, l.orderitems, l.orderreturn )	OR
					NOT [ g.Library_DB ].Order_Update_Status( l.order )																	OR
					NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00011', 'Return created for order ' $ l.order:id ) }">

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00012', 'Order item assigned to return order_id=' $ l.order:id $ ' rma_id=' $ l.orderitem:rma_id $ ' line_id=' $ l.orderitem:line_id $ ' code=' $ l.orderitem:code $ ' quantity=' $ l.orderitem:quantity ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ [ g.Feature_PGR_DB ].DiscountOptions_Load( l.discountoptions ) AND ( l.discountoptions:repricerma EQ 'authorized' ) }">
		<MvIF EXPR = "{ NOT [ g.Feature_PGR_UT ].Discount_Order( l.order, l.previous_total ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_OrderReturn( l.orderreturn ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_DetermineVariant" PARAMETERS = "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_ParseAttributes( l.product, l.orderoptions, l.orderoption_count, l.attribute_total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.product, l.orderoptions, l.orderoption_count, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.variant_id }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00083', 'Variant not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.part_pos" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Product( l.product ) }">
		,"variant_id":			<MvEVAL EXPR = "{ int( l.variant_id ) }">,
		"attr_price_override":	<MvEVAL EXPR = "{ int( l.attr_price_override ) }">,
		"parts":
		[
			<MvFOREACH ITERATOR = "l.part" ARRAY = "l.parts" COUNT = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.product:id, l.variant_id, l.parts ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.part_pos ) }">
				"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.part:code ) }">",
				"sku":				"<MvEVAL EXPR = "{ JSON_Encode( l.part:sku ) }">",
				"name":				"<MvEVAL EXPR = "{ JSON_Encode( l.part:name ) }">",
				"quantity":			<MvEVAL EXPR = "{ int( l.part:quantity ) }">,
				"price":			<MvEVAL EXPR = "{ l.part:price ROUND 2 }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem" PARAMETERS = "orderitem var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItem_OnDemandColumns( l.orderitem, l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_OnDemandColumns" PARAMETERS = "orderitem var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"order_id":			<MvEVAL EXPR = "{ int( l.orderitem:order_id ) }">,
	"line_id":			<MvEVAL EXPR = "{ int( l.orderitem:line_id ) }">,
	"group_id":			<MvEVAL EXPR = "{ int( l.orderitem:group_id ) }">,
	"status":			<MvEVAL EXPR = "{ int( l.orderitem:status ) }">,
	"subscrp_id":		<MvEVAL EXPR = "{ int( l.orderitem:subscrp_id ) }">,
	"subterm_id":		<MvEVAL EXPR = "{ int( l.orderitem:subterm_id ) }">,
	"shpmnt_id":		<MvEVAL EXPR = "{ int( l.orderitem:shpmnt_id ) }">,
	"rma_id":			<MvEVAL EXPR = "{ int( l.orderitem:rma_id ) }">,
	"product_id":		<MvEVAL EXPR = "{ int( l.orderitem:product_id ) }">,

	<MvIF EXPR = "{ l.orderitem:rma_id }">
		<MvIF EXPR = "{ [ g.Library_DB ].OrderReturn_Load_ID( l.orderitem:rma_id, l.return ) }">
			"rma_code":			"<MvEVAL EXPR = "{ JSON_Encode( l.return:code ) }">",
			"rma_dt_issued":	<MvEVAL EXPR = "{ int( l.return:dt_issued ) }">,
			"rma_dt_recvd":		<MvEVAL EXPR = "{ int( l.return:dt_recvd ) }">,
		</MvIF>
	</MvIF>

	"dt_instock":		<MvEVAL EXPR = "{ int( l.orderitem:dt_instock ) }">,
	"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.orderitem:code ) }">",
	"name":				"<MvEVAL EXPR = "{ JSON_Encode( l.orderitem:name ) }">",
	"sku":				"<MvEVAL EXPR = "{ JSON_Encode( l.orderitem:sku ) }">",
	"retail":			<MvEVAL EXPR = "{ l.orderitem:retail ROUND 2 }">,
	"base_price":		<MvEVAL EXPR = "{ l.orderitem:base_price ROUND 2 }">,
	"price":			<MvEVAL EXPR = "{ l.orderitem:price ROUND 2 }">,
	"weight":			<MvEVAL EXPR = "{ l.orderitem:weight ROUND 2 }">,
	"taxable":			<MvEVAL EXPR = "{ JSON_Boolean( l.orderitem:taxable ) }">,
	"tax":				<MvEVAL EXPR = "{ l.orderitem:tax ROUND 2 }">,
	"formatted_tax":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.orderitem:tax ) ) }">",
	"upsold":			<MvEVAL EXPR = "{ JSON_Boolean( l.orderitem:upsold ) }">,
	"quantity":			<MvEVAL EXPR = "{ int( l.orderitem:quantity ) }">

	<MvIF EXPR = "{ l.orderitem:shpmnt_id }">
		<MvIF EXPR = "{ [ g.Library_DB ].v57_OrderShipment_Load_ID( l.orderitem:shpmnt_id, l.shipment ) }">
			<MvIF EXPR = "{ NOT ISNULL l.shipment:tracktype }">
				<MvASSIGN NAME = "l.trackinglink_loaded"	VALUE = "{ miva_member_exists( l.cached_trackinglinks, l.shipment:tracktype ) }">

				<MvREFERENCEARRAY NAME = "l.cached_trackinglinks" VARIABLE = "l.trackinglink">
					<MvMEMBER NAME = "{ l.shipment:tracktype }">
				</MvREFERENCEARRAY>
				
				<MvIF EXPR = "{ NOT l.trackinglink_loaded }">
					<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Library_DB ].TrackingLink_Load_Type( l.shipment:tracktype, l.trackinglink ) }">
				</MvIF>
			</MvIF>

			, "shipment":
			{
				"id":				<MvEVAL EXPR = "{ int( l.shipment:id ) }">,
				"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.shipment:code ) }">",
				"order_id":			<MvEVAL EXPR = "{ int( l.shipment:order_id ) }">,
				"status":			<MvEVAL EXPR = "{ int( l.shipment:status ) }">,
				"labelcount":		<MvEVAL EXPR = "{ int( l.shipment:labelcount ) }">,
				"ship_date":		<MvEVAL EXPR = "{ int( l.shipment:ship_date ) }">,
				"tracknum":			"<MvEVAL EXPR = "{ JSON_Encode( l.shipment:tracknum ) }">",
				"tracktype":		"<MvEVAL EXPR = "{ JSON_Encode( l.shipment:tracktype ) }">",
				"tracklink":		"<MvEVAL EXPR = "{ JSON_Encode( glosub( l.trackinglink:url, '%tracknum%', l.shipment:tracknum ) ) }">",
				"weight":			<MvEVAL EXPR = "{ l.shipment:weight ROUND 2 }">,
				"cost":				<MvEVAL EXPR = "{ l.shipment:cost ROUND 2 }">,
				"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.shipment:cost ) ) }">"
			}
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.discount_pos"	VALUE = 0>
	<MvASSIGN NAME = "l.discount_count"	VALUE = "{ [ g.Library_DB ].OrderItemDiscountList_Load_Line( l.orderitem:line_id, l.discounts ) }">

	<MvIF EXPR = "{ l.discount_count }">
		, "discounts":
		[
			<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.discounts" COUNT = "{ l.discount_count }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.discount_pos ) }">
				"order_id":		<MvEVAL EXPR = "{ int( l.discount:order_id ) }">,
				"line_id":		<MvEVAL EXPR = "{ int( l.discount:line_id ) }">,
				"pgrp_id":		<MvEVAL EXPR = "{ int( l.discount:pgrp_id ) }">,
				"display":		<MvEVAL EXPR = "{ JSON_Boolean( l.discount:display ) }">,
				"descrip":		"<MvEVAL EXPR = "{ JSON_Encode( l.discount:descrip ) }">",
				"discount":		<MvEVAL EXPR = "{ l.discount:discount ROUND 2 }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvASSIGN NAME = "l.option_pos"						VALUE = 0>
	<MvASSIGN NAME = "l.option_subtotal"				VALUE = 0.00>
	<MvASSIGN NAME = "l.option_count"					VALUE = "{ [ g.Library_DB ].OrderOptionList_Load_Line( l.orderitem:line_id, l.options ) }">

	<MvIF EXPR = "{ l.option_count }">
		, "options":
		[
			<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ l.option_count }">
				<MvASSIGN NAME = "l.option_subtotal"	VALUE = "{ l.option_subtotal + l.option:price }">

				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.option_pos ) }">
				"id":				<MvEVAL EXPR = "{ int( l.option:id ) }">,
				"order_id":			<MvEVAL EXPR = "{ int( l.option:order_id ) }">,
				"line_id":			<MvEVAL EXPR = "{ int( l.option:line_id ) }">,
				"attr_id":			<MvEVAL EXPR = "{ int( l.option:attr_id ) }">,
				"attr_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.option:attr_code ) }">",
				"attmpat_id":		<MvEVAL EXPR = "{ int( l.option:attmpat_id ) }">,
				"option_id":		<MvEVAL EXPR = "{ int( l.option:option_id ) }">,
				"opt_code":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:opt_code ) }">",
				"retail":			<MvEVAL EXPR = "{ l.option:retail ROUND 2 }">,
				"base_price":		<MvEVAL EXPR = "{ l.option:base_price ROUND 2 }">,
				"price":			<MvEVAL EXPR = "{ l.option:price ROUND 2 }">,
				"weight":			<MvEVAL EXPR = "{ l.option:weight ROUND 2 }">,
				"data":				"<MvEVAL EXPR = "{ JSON_Encode( l.option:data ) }">",
				"data_long":		"<MvEVAL EXPR = "{ JSON_Encode( l.option:data_long ) }">",
				"attr_prompt":		"<MvEVAL EXPR = "{ JSON_Encode( l.option:attr_prompt ) }">",
				"opt_prompt":		"<MvEVAL EXPR = "{ JSON_Encode( l.option:opt_prompt ) }">",
				
				<MvCOMMENT>
				|
				| Compatibility fields from versions less than 10.00.00
				|
				</MvCOMMENT>

				"attribute":	"<MvEVAL EXPR = "{ JSON_Encode( l.option:attr_code ) }">",
				<MvIF EXPR = "{ l.option:option_id }">
					"value":	"<MvEVAL EXPR = "{ JSON_Encode( l.option:opt_code ) }">"
				<MvELSEIF EXPR = "{ NOT ISNULL l.option:data }">
					"value":	"<MvEVAL EXPR = "{ JSON_Encode( l.option:data ) }">"
				<MvELSEIF EXPR = "{ NOT ISNULL l.option:data_long }">
					"value":	"<MvEVAL EXPR = "{ JSON_Encode( l.option:data_long ) }">"
				<MvELSE>
					"value":	""
				</MvIF>

				<MvASSIGN NAME = "l.discount_pos"		VALUE = 0>
				<MvASSIGN NAME = "l.discount_count"		VALUE = "{ [ g.Library_DB ].OrderOptionDiscountList_Load_LineOption_ID( l.option:id, l.discounts ) }">
			
				<MvIF EXPR = "{ l.discount_count }">
					, "discounts":
					[
						<MvFOREACH ITERATOR = "l.discount" ARRAY = "l.discounts" COUNT = "{ l.discount_count }">
							<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.discount_pos ) }">
							"order_id":		<MvEVAL EXPR = "{ int( l.discount:order_id ) }">,
							"line_id":		<MvEVAL EXPR = "{ int( l.discount:line_id ) }">,
							"lineopt_id":	<MvEVAL EXPR = "{ int( l.discount:lineopt_id ) }">,
							"attr_id":		<MvEVAL EXPR = "{ int( l.discount:attr_id ) }">,
							"attmpat_id":	<MvEVAL EXPR = "{ int( l.discount:attmpat_id ) }">,
							"pgrp_id":		<MvEVAL EXPR = "{ int( l.discount:pgrp_id ) }">,
							"display":		<MvEVAL EXPR = "{ JSON_Boolean( l.discount:display ) }">,
							"descrip":		"<MvEVAL EXPR = "{ JSON_Encode( l.discount:descrip ) }">",
							"discount":		<MvEVAL EXPR = "{ l.discount:discount ROUND 2 }">
							<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
						</MvFOREACH>
					]
				</MvIF>

				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:parts }">
		<MvIF EXPR = "{ [ g.Module_Library_Utilities ].OrderItem_DetermineVariant_WithOptions( l.orderitem,
																							   l.options, l.option_count,
																							   l.orderitem:product, l.orderitem:variant_id ) AND l.orderitem:product:id }">
			<MvASSIGN NAME = "l.part_pos"				VALUE = 0>
			<MvASSIGN NAME = "l.orderitem:part_count"	VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.orderitem:product:id, l.orderitem:variant_id, l.orderitem:parts ) }">

			<MvIF EXPR = "{ l.orderitem:part_count }">
				, "parts":
				[
					<MvFOREACH ITERATOR = "l.part" ARRAY = "l.orderitem:parts" COUNT = "{ l.orderitem:part_count }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.part_pos ) }">
						"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.part:code ) }">",
						"sku":				"<MvEVAL EXPR = "{ JSON_Encode( l.part:sku ) }">",
						"name":				"<MvEVAL EXPR = "{ JSON_Encode( l.part:name ) }">",
						"quantity":			<MvEVAL EXPR = "{ int( l.part:quantity ) }">,
						"total_quantity":	<MvEVAL EXPR = "{ int( l.orderitem:quantity * l.part:quantity ) }">,
						"price":			<MvEVAL EXPR = "{ l.part:price ROUND 2 }">,
						"cost":				<MvEVAL EXPR = "{ l.part:cost ROUND 2 }">,
						"weight":			<MvEVAL EXPR = "{ l.part:weight ROUND 2 }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					</MvFOREACH>
				]
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.orderitem:subscrp_id }">
		<MvIF EXPR = "{ [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( l.orderitem:subscrp_id, l.subscription ) AND
						[ g.Module_Feature_SUB_DB ].ProductSubscriptionTerm_Load_ID( l.subscription:subterm_id, l.productsubscriptionterm ) }">
			, "subscription":
			{
				<MvIF EXPR = "{ l.subscription:ship_id EQ 0 }">
					<MvASSIGN NAME = "l.method"	VALUE = "Unknown">
				<MvELSE>
					<MvIF EXPR = "{ g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ]:loaded EQ 0 }">
						<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( l.subscription:ship_id, g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ] ) }">
							<MvASSIGN NAME = "g.Session:basesubscriptionlist:cached_modules" INDEX = "{ l.subscription:ship_id }" MEMBER = "loaded" VALUE = 1>
						<MvELSE>
							<MvASSIGN NAME = "g.Session:basesubscriptionlist:cached_modules" INDEX = "{ l.subscription:ship_id }" MEMBER = "loaded" VALUE = -1>
						</MvIF>
					</MvIF>

					<MvIF EXPR = "{ g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ]:loaded EQ -1 }">
						<MvASSIGN NAME = "l.method" VALUE = "Unknown">
					<MvELSE>
						<MvREFERENCEARRAY NAME = "l.module_methods" VARIABLE = "g.Session:basesubscriptionlist:cached_module_methods">
							<MvDIMENSION INDEX = "{ l.subscription:ship_id }">
						</MvREFERENCEARRAY>

						<MvIF EXPR = "{ ISNULL l.module_methods:module_method_count }">
							<MvIF EXPR = "{ g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ]:api_ver LT 5.61 }">	<MvASSIGN NAME = "l.module_methods:module_method_count" VALUE = "{ [ g.Module_Root $ g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ]:module ].ShippingModule_Shipping_Methods( g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ], l.module_methods:methods ) }">
							<MvELSE>																									<MvASSIGN NAME = "l.module_methods:module_method_count" VALUE = "{ [ g.Module_Root $ g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ]:module ].ShippingModule_Enabled_Methods( g.Session:basesubscriptionlist:cached_modules[ l.subscription:ship_id ], l.module_methods:methods ) }">
							</MvIF>
						</MvIF>

						<MvIF EXPR = "{ NOT miva_array_search( l.module_methods:methods, 1, l.search_method, 'l.search_method:code EQ l.subscription:ship_data' ) }">
							<MvASSIGN NAME = "l.method" VALUE = "Unknown">
						<MvELSE>
							<MvASSIGN NAME = "l.method" VALUE = "{ l.search_method:name }">
						</MvIF>
					</MvIF>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_Subscription( l.subscription ) }">
				, "method":						"<MvEVAL EXPR = "{ JSON_Encode( l.method ) }">",
				"productsubscriptionterm":
				{
					<MvEVAL EXPR = "{ [ g.Module_Feature_SUB_JSON ].JSON_ProductSubscriptionTerm( l.productsubscriptionterm ) }">
				},
				"options":
				[
					<MvASSIGN NAME = "l.outputoption_count" VALUE = 0>
					<MvFOREACH ITERATOR = "l.subscriptionoption" ARRAY = "l.subscriptionoptions" COUNT = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription:id, l.subscriptionoptions ) }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.outputoption_count ) }">
							"subscrp_id":		<MvEVAL EXPR = "{ int( l.subscriptionoption:subscrp_id ) }">,
							"templ_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.subscriptionoption:templ_code ) }">",
							"attr_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.subscriptionoption:attr_code ) }">",
							"value":			"<MvEVAL EXPR = "{ JSON_Encode( l.subscriptionoption:value ) }">"
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					</MvFOREACH>
				]
			}
		</MvIF>
	</MvIF>

	, "total":			<MvEVAL EXPR = "{ ( ( l.orderitem:price + l.option_subtotal ) * l.orderitem:quantity ) ROUND 2 }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList" PARAMETERS = "query, fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderItems"
				QUERY	= "{ l.query }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00030', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitem_count"		VALUE = 0>
	<MvASSIGN NAME = "l.cached_trackinglinks"	VALUE = "">

	<MvWHILE EXPR = "{ NOT OrderItems.d.EOF }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].OrderItem_Read( l.orderitems[ ++l.orderitem_count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "OrderItems" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderItems">

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ l.orderitem_count }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.orderitem_pos ) }">
		<MvEVAL EXPR = "{ JSON_OrderItem( l.orderitem ) }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
	</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_Load" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList( 'SELECT
														*
													  FROM ' $
														g.Store_Table_Prefix $ 'OrderItems
													  WHERE
														order_id	= ?
													  ORDER BY
														line_id ASC',
													 [ g.Library_DB ].SQL_Query_Field( l.order:id ) ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_Load_Status" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer( 'R', 'Status', l.status ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList( 'SELECT
														*
													  FROM ' $
														g.Store_Table_Prefix $ 'OrderItems
													  WHERE
														order_id	= ?	AND
														status		= ?
													  ORDER BY
														line_id ASC',
													 [ g.Library_DB ].SQL_Query_Field( l.order:id ) $ ',' $
													 [ g.Library_DB ].SQL_Query_Field( l.status ) ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_Load_Shipment" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderShipment_Load( l.ordershipment ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList( 'SELECT
														*
													  FROM ' $
														g.Store_Table_Prefix $ 'OrderItems
													  WHERE
														order_id	= ? AND
														shpmnt_id	= ?
													  ORDER BY
														line_id ASC',
													 [ g.Library_DB ].SQL_Query_Field( l.order:id ) $ ',' $
													 [ g.Library_DB ].SQL_Query_Field( l.ordershipment:id ) ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItemList_Load_Return" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer( 'R', 'Return_ID', l.return_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderItemList( 'SELECT
														*
													  FROM ' $
														g.Store_Table_Prefix $ 'OrderItems
													  WHERE
														order_id	= ? AND
														rma_id		= ?
													  ORDER BY
														line_id ASC',
													 [ g.Library_DB ].SQL_Query_Field( l.order:id ) $ ',' $
													 [ g.Library_DB ].SQL_Query_Field( l.return_id ) ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderCharge" PARAMETERS = "ordercharge var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"order_id":				<MvEVAL EXPR = "{ int( l.ordercharge:order_id ) }">,
	"charge_id":			<MvEVAL EXPR = "{ int( l.ordercharge:charge_id ) }">,
	"module_id":			<MvEVAL EXPR = "{ int( l.ordercharge:module_id ) }">,
	"type":					"<MvEVAL EXPR = "{ JSON_Encode( l.ordercharge:type ) }">",
	"descrip":				"<MvEVAL EXPR = "{ JSON_Encode( l.ordercharge:descrip ) }">",
	"amount":				<MvEVAL EXPR = "{ l.ordercharge:amount ROUND 2 }">,
	"formatted_amount":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.ordercharge:amount ) ) }">",
	"disp_amt":				<MvEVAL EXPR = "{ l.ordercharge:disp_amt ROUND 2 }">,
	"formatted_disp_amt":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.ordercharge:disp_amt ) ) }">",
	"tax_exempt":			<MvEVAL EXPR = "{ JSON_Boolean( l.ordercharge:tax_exempt ) }">,
	"tax":					<MvEVAL EXPR = "{ l.ordercharge:tax ROUND 2 }">,
	"formatted_tax":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.ordercharge:tax ) ) }">"
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderChargeList" PARAMETERS = "query, fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "OrderCharges"
				QUERY	= "{ l.query }"
				FIELDS	= "{ l.fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00031', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvWHILE EXPR = "{ NOT OrderCharges.d.EOF }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.ordercharge_count ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].OrderCharge_Read( l.ordercharge ) }">
		<MvEVAL EXPR = "{ JSON_OrderCharge( l.ordercharge ) }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

		<MvSKIP NAME = "Merchant" VIEW = "OrderCharges" ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "OrderCharges">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderChargeList_Load" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Order_ID"	VALUE = "{ int( g.Order_ID ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderChargeList( 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'OrderCharges WHERE order_id = ? ORDER BY charge_id', 'g.Order_ID' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderChargeList_Load_Type" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Order_ID"	VALUE = "{ int( g.Order_ID ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_OrderChargeList( 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'OrderCharges WHERE order_id = ? AND type = ? ORDER BY charge_id', 'g.Order_ID, g.Type' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create_FromOrder" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.existing_order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.order" 				VALUE = "">
	<MvASSIGN NAME = "l.order:id"			VALUE = "{ [ g.Library_DB ].StoreKey_Generate( 'Orders' ) }">
	<MvASSIGN NAME = "l.order:batch_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:status"		VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:stk_status"	VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_instock"	VALUE = 0>
	<MvASSIGN NAME = "l.order:orderdate"	VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.order:cust_id" 		VALUE = "{ l.existing_order:cust_id }">
	<MvASSIGN NAME = "l.order:ship_res"		VALUE = "{ l.existing_order:ship_res }">
	<MvASSIGN NAME = "l.order:ship_fname"	VALUE = "{ l.existing_order:ship_fname }">
	<MvASSIGN NAME = "l.order:ship_lname"	VALUE = "{ l.existing_order:ship_lname }">
	<MvASSIGN NAME = "l.order:ship_email"	VALUE = "{ l.existing_order:ship_email }">
	<MvASSIGN NAME = "l.order:ship_phone"	VALUE = "{ l.existing_order:ship_phone }">
	<MvASSIGN NAME = "l.order:ship_fax"		VALUE = "{ l.existing_order:ship_fax }">
	<MvASSIGN NAME = "l.order:ship_comp"	VALUE = "{ l.existing_order:ship_comp }">
	<MvASSIGN NAME = "l.order:ship_addr1"	VALUE = "{ l.existing_order:ship_addr1 }">
	<MvASSIGN NAME = "l.order:ship_addr2"	VALUE = "{ l.existing_order:ship_addr2 }">
	<MvASSIGN NAME = "l.order:ship_city"	VALUE = "{ l.existing_order:ship_city }">
	<MvASSIGN NAME = "l.order:ship_state"	VALUE = "{ l.existing_order:ship_state }">
	<MvASSIGN NAME = "l.order:ship_zip"		VALUE = "{ l.existing_order:ship_zip }">
	<MvASSIGN NAME = "l.order:ship_cntry"	VALUE = "{ l.existing_order:ship_cntry }">
	<MvASSIGN NAME = "l.order:bill_fname"	VALUE = "{ l.existing_order:bill_fname }">
	<MvASSIGN NAME = "l.order:bill_lname"	VALUE = "{ l.existing_order:bill_lname }">
	<MvASSIGN NAME = "l.order:bill_email"	VALUE = "{ l.existing_order:bill_email }">
	<MvASSIGN NAME = "l.order:bill_phone"	VALUE = "{ l.existing_order:bill_phone }">
	<MvASSIGN NAME = "l.order:bill_fax"		VALUE = "{ l.existing_order:bill_fax }">
	<MvASSIGN NAME = "l.order:bill_comp"	VALUE = "{ l.existing_order:bill_comp }">
	<MvASSIGN NAME = "l.order:bill_addr1"	VALUE = "{ l.existing_order:bill_addr1 }">
	<MvASSIGN NAME = "l.order:bill_addr2"	VALUE = "{ l.existing_order:bill_addr2 }">
	<MvASSIGN NAME = "l.order:bill_city"	VALUE = "{ l.existing_order:bill_city }">
	<MvASSIGN NAME = "l.order:bill_state"	VALUE = "{ l.existing_order:bill_state }">
	<MvASSIGN NAME = "l.order:bill_zip"		VALUE = "{ l.existing_order:bill_zip }">
	<MvASSIGN NAME = "l.order:bill_cntry"	VALUE = "{ l.existing_order:bill_cntry }">
	<MvASSIGN NAME = "l.order:ship_id"		VALUE = 0>
	<MvASSIGN NAME = "l.order:ship_data"	VALUE = "">
	<MvASSIGN NAME = "l.order:source"		VALUE = "user">
	<MvASSIGN NAME = "l.order:source_id"	VALUE = "{ g.User:id }">
	<MvASSIGN NAME = "l.order:total"		VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_ship"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_tax"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_auth"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_capt"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_rfnd"	VALUE = 0.00>
	<MvASSIGN NAME = "l.order:net_capt"		VALUE = 0.00>
	<MvASSIGN NAME = "l.order:pend_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:bord_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:note_count"	VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_updated"	VALUE = "{ l.order:orderdate }">
	
	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Insert( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Customer_Information( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.paymentcard" ARRAY = "l.paymentcards" COUNT = "{ [ g.Module_Feature_PAY_DB ].OrderPaymentCardList_Load_Order( l.existing_order:id, l.paymentcards ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].OrderPaymentCardXOrder_Insert( l.paymentcard, l.order ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Order( l.order ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create_Empty" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Customer_ID"		VALUE = "{ int( g.Customer_ID ) }">

	<MvASSIGN NAME = "l.order:source"		VALUE = "user">
	<MvASSIGN NAME = "l.order:source_id"	VALUE = "{ g.User:id }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Create_Empty( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Customer_ID }">
		<MvIF EXPR = "{ NOT [ g.Feature_CUS_DB ].Customer_Load_ID( g.Customer_ID, l.customer ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00037', 'Failed to load customer' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.order:cust_id" 		VALUE = "{ l.customer:id }">
		<MvASSIGN NAME = "l.order:ship_fname"	VALUE = "{ l.customer:ship_fname }">
		<MvASSIGN NAME = "l.order:ship_lname"	VALUE = "{ l.customer:ship_lname }">
		<MvASSIGN NAME = "l.order:ship_email"	VALUE = "{ l.customer:ship_email }">
		<MvASSIGN NAME = "l.order:ship_phone"	VALUE = "{ l.customer:ship_phone }">
		<MvASSIGN NAME = "l.order:ship_fax"		VALUE = "{ l.customer:ship_fax }">
		<MvASSIGN NAME = "l.order:ship_comp"	VALUE = "{ l.customer:ship_comp }">
		<MvASSIGN NAME = "l.order:ship_addr"	VALUE = "{ l.customer:ship_addr }">
		<MvASSIGN NAME = "l.order:ship_addr1"	VALUE = "{ l.customer:ship_addr1 }">
		<MvASSIGN NAME = "l.order:ship_addr2"	VALUE = "{ l.customer:ship_addr2 }">
		<MvASSIGN NAME = "l.order:ship_city"	VALUE = "{ l.customer:ship_city }">
		<MvASSIGN NAME = "l.order:ship_state"	VALUE = "{ l.customer:ship_state }">
		<MvASSIGN NAME = "l.order:ship_zip"		VALUE = "{ l.customer:ship_zip }">
		<MvASSIGN NAME = "l.order:ship_cntry"	VALUE = "{ l.customer:ship_cntry }">
		<MvASSIGN NAME = "l.order:ship_res"		VALUE = "{ l.customer:ship_res }">
		<MvASSIGN NAME = "l.order:bill_fname"	VALUE = "{ l.customer:bill_fname }">
		<MvASSIGN NAME = "l.order:bill_lname"	VALUE = "{ l.customer:bill_lname }">
		<MvASSIGN NAME = "l.order:bill_email"	VALUE = "{ l.customer:bill_email }">
		<MvASSIGN NAME = "l.order:bill_phone"	VALUE = "{ l.customer:bill_phone }">
		<MvASSIGN NAME = "l.order:bill_fax"		VALUE = "{ l.customer:bill_fax }">
		<MvASSIGN NAME = "l.order:bill_comp"	VALUE = "{ l.customer:bill_comp }">
		<MvASSIGN NAME = "l.order:bill_addr"	VALUE = "{ l.customer:bill_addr }">
		<MvASSIGN NAME = "l.order:bill_addr1"	VALUE = "{ l.customer:bill_addr1 }">
		<MvASSIGN NAME = "l.order:bill_addr2"	VALUE = "{ l.customer:bill_addr2 }">
		<MvASSIGN NAME = "l.order:bill_city"	VALUE = "{ l.customer:bill_city }">
		<MvASSIGN NAME = "l.order:bill_state"	VALUE = "{ l.customer:bill_state }">
		<MvASSIGN NAME = "l.order:bill_zip"		VALUE = "{ l.customer:bill_zip }">
		<MvASSIGN NAME = "l.order:bill_cntry"	VALUE = "{ l.customer:bill_cntry }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Customer_Information( l.order ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvLOCKFILE FILE = "{ [ g.Feature_PGR_UT ].Order_Discount_LockFile( l.order ) }">
			<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Feature_PGR_JSON ].JSON_Order_Rediscount_LowLevel( l.order ) }">
		</MvLOCKFILE>

		<MvIF EXPR = "{ NOT l.result }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Order( l.order ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.order:id"					VALUE = 0>
	<MvASSIGN NAME = "l.order:batch_id"				VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_id"				VALUE = 0>
	<MvASSIGN NAME = "l.order:status"				VALUE = 0>
	<MvASSIGN NAME = "l.order:pay_status"			VALUE = 0>
	<MvASSIGN NAME = "l.order:stk_status"			VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_instock"			VALUE = 0>
	<MvASSIGN NAME = "l.order:orderdate"			VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.order:cust_id"				VALUE = 0>
	<MvASSIGN NAME = "l.order:ship_id"				VALUE = 0>
	<MvASSIGN NAME = "l.order:ship_data"			VALUE = "">
	<MvASSIGN NAME = "l.order:total"				VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_ship"			VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_tax"			VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_auth"			VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_capt"			VALUE = 0.00>
	<MvASSIGN NAME = "l.order:total_rfnd"			VALUE = 0.00>
	<MvASSIGN NAME = "l.order:net_capt"				VALUE = 0.00>
	<MvASSIGN NAME = "l.order:pend_count"			VALUE = 0>
	<MvASSIGN NAME = "l.order:bord_count"			VALUE = 0>
	<MvASSIGN NAME = "l.order:note_count"			VALUE = 0>
	<MvASSIGN NAME = "l.order:dt_updated"			VALUE = "{ l.order:orderdate }">
	<MvASSIGN NAME = "l.order:source"				VALUE = "user">
	<MvASSIGN NAME = "l.order:source_id"			VALUE = "{ g.User:id }">

	<MvASSIGN NAME = "l.shipping_module_code"		VALUE = "">
	<MvASSIGN NAME = "l.shipping_module_data"		VALUE = "">
	<MvASSIGN NAME = "l.calculatecharges"			VALUE = 0>
	<MvASSIGN NAME = "l.calculate_tax"				VALUE = 0>
	<MvASSIGN NAME = "l.calculate_shipping"			VALUE = 0>
	<MvASSIGN NAME = "l.shipping_module"			VALUE = "">
	<MvASSIGN NAME = "l.shipping_module_data"		VALUE = "">
	<MvASSIGN NAME = "l.triggerfulfillmentmodules"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'O', 'Order_ID',					l.order:id )				OR
					NOT JSON_Input_Integer(	'O', 'OrderDate',					l.order:orderdate )			OR
					NOT JSON_Input_Boolean(	'o', 'CalculateCharges',			l.calculatecharges )		OR
					NOT JSON_Input_Boolean( 'o', 'TriggerFulfillmentModules',	l.triggerfulfillmentmodules ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.calculatecharges }">
		<MvASSIGN NAME = "l.calculate_tax"			VALUE = 1>

		<MvIF EXPR = "{ JSON_Input_Exists( 'Shipping_Module_Code' ) OR
						JSON_Input_Exists( 'Shipping_Module_Data' ) }">
			<MvIF EXPR = "{ NOT JSON_Input_Text( 'R', 'Shipping_Module_Code',	l.shipping_module_code )	OR
							NOT JSON_Input_Text( 'R', 'Shipping_Module_Data',	l.shipping_module_data ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code_Cached( l.shipping_module_code, l.shipping_module )	OR
							NOT [ g.Module_Library_DB ].StoreModule_Load_Cached( l.shipping_module:id, 'shipping', l.null )		OR
							NOT l.shipping_module:active }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00062', 'Invalid shipping method' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.calculate_shipping"	VALUE = 1>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'Customer_ID', l.customer_id ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.customer_id, l.customer ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00060', 'Customer not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.order:cust_id"			VALUE = "{ l.customer:id }">
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Customer_Login', l.customer_login ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_Login( l.customer_login, l.customer ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00061', 'Customer not found' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.order:cust_id"			VALUE = "{ l.customer:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StandardFields_Load_Cached( l.std_fields ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.order:id EQ 0 }">
		<MvASSIGN NAME = "l.order:id"		VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'Orders' ) }">
	<MvELSE>
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Order_Load_ID( l.order:id, l.duplicate ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00063', 'Order #' $ l.order:id $ ' already exists' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Load( 'Orders', l.storekey ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.order:id GT l.storekey:maxvalue }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Increment( 'Orders', l.order:id - l.storekey:maxvalue ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipFirstName',	'ship_fname',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipLastName',		'ship_lname',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipEmail',		'ship_email',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipPhone',		'ship_phone',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipFax',			'ship_fax',		'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipCompany',		'ship_comp',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipAddress1',		'ship_addr1',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipAddress2',		'ship_addr2',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipCity',			'ship_city',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipState',		'ship_state',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipZip',			'ship_zip',		'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipCountry',		'ship_cntry',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'ShipResidential',	'ship_res',		( l.std_fields:ship_res NE 'C' ) ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillFirstName',	'bill_fname',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillLastName',		'bill_lname',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillEmail',		'bill_email',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillPhone',		'bill_phone',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillFax',			'bill_fax',		'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillCompany',		'bill_comp',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillAddress1',		'bill_addr1',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillAddress2',		'bill_addr2',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillCity',			'bill_city',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillState',		'bill_state',	'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillZip',			'bill_zip',		'' ) }">
	<MvEVAL EXPR = "{ JSON_Order_Create_CustomerInformation_SetField( l.order,	l.customer, 'BillCountry',		'bill_cntry',	'' ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Insert( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Orders() }">

	<MvIF EXPR = "{ NOT JSON_Order_Create_LowLevel( l.order, l.customer, l.calculate_shipping, l.shipping_module, l.shipping_module_data, l.calculate_tax, l.triggerfulfillmentmodules ) }">
		<MvFOREACH ITERATOR = "l.vis_module" ARRAY = "l.vis_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_order', l.vis_modules ) }">
			<MvIF EXPR = "{ l.vis_module:api_ver GE 5.51 }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.vis_module:module ].Module_Order_Delete_Order( l.vis_module, l.order ) }">
			<MvELSEIF EXPR = "{ l.vis_module:api_ver GE 5.02 }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.vis_module:module ].Module_Order_Delete( l.vis_module ) }">
			</MvIF>
		</MvFOREACH>

		<MvFOREACH ITERATOR = "l.orderpayment" ARRAY = "l.orderpayments" COUNT = "{ [ g.Module_Library_DB ].OrderPaymentList_Load_Order( l.order:id, l.orderpayments ) }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( l.orderpayment:pay_id, l.module ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].PaymentModule_Order_Delete( l.module, l.orderpayment:pay_data, l.orderpayment:pay_secdat ) }">
			</MvIF>
		</MvFOREACH>

		<MvIF EXPR = "{ l.order:ship_id }">
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Module_Load_ID( l.order:ship_id, l.module ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].ShippingModule_Order_Delete( l.module ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].v56_Order_Delete( l.order ) }">

		<MvCOMMENT>
		|
		| Error output in JSON format is handled by the lowlevel functions, to
		| allow field errors to be present.
		|
		</MvCOMMENT>

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvASSIGN NAME = "l.ondemandcolumns"				VALUE = "">
		<MvASSIGN NAME = "l.ondemandcolumns:ship_method"	VALUE = 1>
		<MvASSIGN NAME = "l.ondemandcolumns:items"			VALUE = 1>
		<MvASSIGN NAME = "l.ondemandcolumns:charges"		VALUE = 1>

		<MvEVAL EXPR = "{ JSON_Order_OnDemandColumns( l.order, l.ondemandcolumns ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create_LowLevel" PARAMETERS = "order var, customer var, calculate_shipping, shipping_module var, shipping_module_data, calculate_tax, triggerfulfillmentmodules" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Exists( 'Items' ) }">
		<MvIF EXPR = "{ NOT JSON_Order_Create_Items( l.order ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'Products' ) }">
		<MvIF EXPR = "{ NOT JSON_Order_Create_Products( l.order, l.customer ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'Charges' ) }">
		<MvIF EXPR = "{ NOT JSON_Order_Create_Charges( l.order ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'CustomField_Values' ) }">
		<MvIF EXPR = "{ NOT JSON_Order_CustomFields( l.order ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.calculate_tax OR l.calculate_shipping }">
		<MvASSIGN NAME = "l.calculate_params"	VALUE = "">

		<MvIF EXPR = "{ l.calculate_shipping }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateShipping( l.calculate_params, l.shipping_module, l.shipping_module_data ) }">
		</MvIF>

		<MvIF EXPR = "{ l.calculate_tax }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateTax( l.calculate_params ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Order_Calculate_Charges( l.order, l.calculate_params ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.calculate_shipping }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Change_Shipping( l.order, l.shipping_module:id, l.shipping_module_data ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.order_total"	VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].v56_Order_Update_Total( l.order, l.order_total ) OR
					NOT [ g.Module_Library_DB ].Order_Update_Status( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.triggerfulfillmentmodules }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( g.Store:currncy_id, g.Store_Module_Currency )	OR
						NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( g.Store:tax_id, g.Store_Module_Tax )				OR
						NOT [ g.Module_Library_DB ].Module_Load_ID_Cached( g.Store:ui_id, g.Store_Module_UI ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency:module }">
		<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax:module }">
		<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI:module }">

		<MvFOREACH ITERATOR = "l.fulfillment_module" ARRAY = "l.fulfillment_modules" COUNT = "{ [ g.Module_Library_DB ].StoreModuleList_Load_Feature( 'fulfill', l.fulfillment_modules ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.fulfillment_module:module ].FulfillmentModule_ProcessOrder( l.fulfillment_module, l.order ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>

		<MvASSIGN NAME = "g.Store_Module_Currency"			VALUE = "{ g.Store_Module_Currency:module }">
		<MvASSIGN NAME = "g.Store_Module_Tax"				VALUE = "{ g.Store_Module_Tax:module }">
		<MvASSIGN NAME = "g.Store_Module_UI"				VALUE = "{ g.Store_Module_UI:module }">

		<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
		<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
		<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create_Items" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.items" COUNT = "{ JSON_Input_Array( 'Items', l.items ) }">
		<MvASSIGN NAME = "l.orderitem"						VALUE = "">
		<MvASSIGN NAME = "l.orderitem:order_id"				VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderitem:shpmnt_id"			VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:rma_id"				VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:dt_instock"			VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:product_id"			VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:status"				VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:code"					VALUE = "">
		<MvASSIGN NAME = "l.orderitem:name"					VALUE = "">
		<MvASSIGN NAME = "l.orderitem:sku"					VALUE = "">
		<MvASSIGN NAME = "l.orderitem:tracknum"				VALUE = "">
		<MvASSIGN NAME = "l.orderitem:tracktype"			VALUE = "">
		<MvASSIGN NAME = "l.orderitem:price"				VALUE = 0.00>
		<MvASSIGN NAME = "l.orderitem:weight"				VALUE = 0.00>
		<MvASSIGN NAME = "l.orderitem:quantity"				VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:taxable"				VALUE = 1>
		<MvASSIGN NAME = "l.orderitem:upsold"				VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:tax"					VALUE = 0.00>

		<MvIF EXPR = "{ NOT JSON_Input_Element_List(	l.item, 'O', 'status',		l.orderitem:status,
																	 '0,100,200,300,400,500,600', '0,100,200,300,400,500,600' ) OR
						NOT JSON_Input_Element_Text(	l.item, 'R', 'code',		l.orderitem:code )							OR
						NOT JSON_Input_Element_Text(	l.item, 'o', 'name',		l.orderitem:name )							OR
						NOT JSON_Input_Element_Text(	l.item, 'o', 'sku',			l.orderitem:sku )							OR
						NOT JSON_Input_Element_Text(	l.item, 'o', 'tracknum',	l.orderitem:tracknum )						OR
						NOT JSON_Input_Element_Text(	l.item, 'o', 'tracktype',	l.orderitem:tracktype )						OR
						NOT JSON_Input_Element_Number(	l.item,	'O', 'price',		l.orderitem:price,	10, 2 )					OR
						NOT JSON_Input_Element_Number(	l.item, 'O', 'weight',		l.orderitem:weight,	10, 2 )					OR
						NOT JSON_Input_Element_Integer(	l.item,	'R', 'quantity',	l.orderitem:quantity )						OR
						NOT JSON_Input_Element_Boolean(	l.item, 'O', 'taxable',		l.orderitem:taxable )						OR
						NOT JSON_Input_Element_Boolean(	l.item, 'O', 'upsold',		l.orderitem:upsold )						OR
						NOT JSON_Input_Element_Number(	l.item, 'O', 'tax',			l.orderitem:tax,	10, 2 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ l.orderitem:quantity LE 0 }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Element_FieldError( l.item, 'quantity', 'Quantity must be a positive integer' ) }">
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.orderitem:code, l.product ) }">
			<MvASSIGN NAME = "l.orderitem:product_id"		VALUE = "{ l.product:id }">
			<MvASSIGN NAME = "l.orderitem:retail"			VALUE = "{ l.product:price }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		<MvELSEIF EXPR = "{ NOT ISNULL l.orderitem:sku }">
			<MvASSIGN NAME = "l.product_count"				VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_SKU_WithRuntimeInventory( l.orderitem:sku, l.products ) }">

			<MvIF EXPR = "{ ( l.product_count EQ 0 ) AND ( NOT [ g.Module_Library_DB ].Error_Is_EOF() ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			<MvELSEIF EXPR = "{ l.product_count EQ 1 }">
				<MvASSIGN NAME = "l.orderitem:product_id"	VALUE = "{ l.products[ 1 ]:id }">
				<MvASSIGN NAME = "l.orderitem:retail"		VALUE = "{ l.products[ 1 ]:price }">
				<MvASSIGN NAME = "l.product"				VALUE = "{ l.products[ 1 ] }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Insert( l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Products( l.orderitem:quantity ) }">

		<MvIF EXPR = "{ l.orderitem:product_id }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.product:id, l.product:name, l.orderitem:quantity ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ JSON_Input_Element_Array( l.item, 'options', l.options ) }">
			<MvASSIGN NAME = "l.orderoption"								VALUE = "">
			<MvASSIGN NAME = "l.orderoption:order_id"						VALUE = "{ l.order:id }">
			<MvASSIGN NAME = "l.orderoption:line_id"						VALUE = "{ l.orderitem:line_id }">
			<MvASSIGN NAME = "l.orderoption:attr_id"						VALUE = 0>
			<MvASSIGN NAME = "l.orderoption:attmpat_id"						VALUE = 0>
			<MvASSIGN NAME = "l.orderoption:option_id"						VALUE = -1>
			<MvASSIGN NAME = "l.orderoption:price"							VALUE = 0.00>
			<MvASSIGN NAME = "l.orderoption:weight"							VALUE = 0.00>
			<MvASSIGN NAME = "l.orderoption:attr_code"						VALUE = "">
			<MvASSIGN NAME = "l.orderoption:opt_code"						VALUE = "">
			<MvASSIGN NAME = "l.orderoption:data"							VALUE = "">
			<MvASSIGN NAME = "l.orderoption:data_long"						VALUE = "">

			<MvIF EXPR = "{ NOT JSON_Input_Element_Text(	l.option, 'o', 'attr_code',	l.orderoption:attr_code )		OR
							NOT JSON_Input_Element_Number(	l.option, 'O', 'price',		l.orderoption:price,	10, 2 )	OR
							NOT JSON_Input_Element_Number(	l.option, 'O', 'weight',	l.orderoption:weight,	10, 2 ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ JSON_Input_Element_Retrieve( l.option, 'opt_code_or_data', l.opt_code_or_data ) }">
				<MvIF EXPR = "{ l.orderitem:product_id NE 0 }">
					<MvIF EXPR = "{ [ g.Module_Library_DB ].Attribute_Load_Code( l.product:id, l.orderoption:attr_code, l.loaded_attribute ) }">
						<MvASSIGN NAME = "l.orderoption:attr_id"			VALUE = "{ l.loaded_attribute:id }">
					<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					<MvELSEIF EXPR = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateAttr_Load_Product_Code( l.product:id, l.orderoption:attr_code, l.loaded_attribute ) }">
						<MvASSIGN NAME = "l.orderoption:attr_id"			VALUE = "{ l.loaded_attribute:attr_id }">
						<MvASSIGN NAME = "l.orderoption:attmpat_id"			VALUE = "{ l.loaded_attribute:id }">
					<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					</MvIF>
				</MvIF>

				<MvASSIGN NAME = "l.orderoption:option_id"					VALUE = 0>
				<MvASSIGN NAME = "l.orderoption:opt_code"					VALUE = "">

				<MvIF EXPR = "{ l.orderoption:attr_id AND ( ( l.loaded_attribute:type EQ 'radio' ) OR ( l.loaded_attribute:type EQ 'select' ) OR ( l.loaded_attribute:type EQ 'swatch-select' ) ) }">
					<MvIF EXPR = "{ l.orderoption:attmpat_id }">
						<MvIF EXPR = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateOption_Load_Code( l.orderoption:attmpat_id, l.opt_code_or_data, l.loaded_option ) }">
							<MvASSIGN NAME = "l.orderoption:option_id"		VALUE = "{ l.loaded_option:id }">
							<MvASSIGN NAME = "l.orderoption:opt_code"		VALUE = "{ l.loaded_option:code }">
						<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
							<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
						<MvELSEIF EXPR = "{ len_var( l.opt_code_or_data ) LE 254 }">
							<MvASSIGN NAME = "l.orderoption:data"			VALUE = "{ l.opt_code_or_data }">
						<MvELSE>
							<MvASSIGN NAME = "l.orderoption:data_long"		VALUE = "{ l.opt_code_or_data }">
						</MvIF>
					<MvELSE>
						<MvIF EXPR = "{ [ g.Module_Library_DB ].Option_Load_Code( l.orderoption:attr_id, l.opt_code_or_data, l.loaded_option ) }">
							<MvASSIGN NAME = "l.orderoption:option_id"		VALUE = "{ l.loaded_option:id }">
							<MvASSIGN NAME = "l.orderoption:opt_code"		VALUE = "{ l.loaded_option:code }">
						<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
							<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
						<MvELSEIF EXPR = "{ len_var( l.opt_code_or_data ) LE 254 }">
							<MvASSIGN NAME = "l.orderoption:data"			VALUE = "{ l.opt_code_or_data }">
						<MvELSE>
							<MvASSIGN NAME = "l.orderoption:data_long"		VALUE = "{ l.opt_code_or_data }">
						</MvIF>
					</MvIF>
				<MvELSE>
					<MvIF EXPR = "{ len_var( l.opt_code_or_data ) LE 254 }">
						<MvASSIGN NAME = "l.orderoption:data"				VALUE = "{ l.opt_code_or_data }">
					<MvELSE>
						<MvASSIGN NAME = "l.orderoption:data_long"			VALUE = "{ l.opt_code_or_data }">
					</MvIF>
				</MvIF>
			<MvELSE>
				<MvASSIGN NAME = "l.data" VALUE = "">

				<MvIF EXPR = "{ NOT JSON_Input_Element_Text( l.option, 'o', 'opt_code',	l.orderoption:opt_code ) OR
								NOT JSON_Input_Element_Text( l.option, 'o', 'data',		l.data ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
				</MvIF>

				<MvIF EXPR = "{ NOT ISNULL l.data }">
					<MvASSIGN NAME = "l.orderoption:option_id"				VALUE = 0>

					<MvIF EXPR = "{ len_var( l.data ) LE 254 }">	<MvASSIGN NAME = "l.orderoption:data"		VALUE = "{ l.data }">
					<MvELSE>										<MvASSIGN NAME = "l.orderoption:data_long"	VALUE = "{ l.data }">
					</MvIF>
				</MvIF>

				<MvIF EXPR = "{ l.orderitem:product_id NE 0 }">
					<MvIF EXPR = "{ [ g.Module_Library_DB ].Attribute_Load_Code( l.orderitem:product_id, l.orderoption:attr_code, l.loaded_attribute ) }">
						<MvASSIGN NAME = "l.orderoption:attr_id"			VALUE = "{ l.loaded_attribute:id }">

						<MvIF EXPR = "{ NOT ISNULL l.orderoption:opt_code }">
							<MvIF EXPR = "{ [ g.Module_Library_DB ].Option_Load_Code( l.loaded_attribute:id, l.orderoption:opt_code, l.loaded_option ) }">
								<MvASSIGN NAME = "l.orderoption:option_id"	VALUE = "{ l.loaded_option:id }">
							<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
								<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
							</MvIF>
						</MvIF>
					<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					<MvELSEIF EXPR = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateAttr_Load_Product_Code( l.orderitem:product_id, l.orderoption:attr_code, l.loaded_attribute ) }">
						<MvASSIGN NAME = "l.orderoption:attr_id"			VALUE = "{ l.loaded_attribute:attr_id }">
						<MvASSIGN NAME = "l.orderoption:attmpat_id"			VALUE = "{ l.loaded_attribute:id }">

						<MvIF EXPR = "{ NOT ISNULL l.orderoption:opt_code }">
							<MvIF EXPR = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateOption_Load_Code( l.loaded_attribute:id, l.orderoption:opt_code, l.loaded_option ) }">
								<MvASSIGN NAME = "l.orderoption:option_id"	VALUE = "{ l.loaded_option:id }">
							<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
								<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
							</MvIF>
						</MvIF>
					<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					</MvIF>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOption_Insert( l.orderoption ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create_Products" PARAMETERS = "order var, customer var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.product" ARRAY = "l.products" COUNT = "{ JSON_Input_Array( 'Products', l.products ) }">
		<MvASSIGN NAME = "l.variant_id"						VALUE = 0>
		<MvASSIGN NAME = "l.basketoption_count"				VALUE = 0>
		<MvASSIGN NAME = "l.attr_price_override"			VALUE = 0>
		<MvASSIGN NAME = "l.attributes"						VALUE = "">
		<MvASSIGN NAME = "l.attribute_count"				VALUE = 0>

		<MvASSIGN NAME = "l.status"							VALUE = 0>
		<MvASSIGN NAME = "l.code"							VALUE = "">
		<MvASSIGN NAME = "l.sku"							VALUE = "">
		<MvASSIGN NAME = "l.tracknum"						VALUE = "">
		<MvASSIGN NAME = "l.tracktype"						VALUE = "">
		<MvASSIGN NAME = "l.quantity"						VALUE = 0>
		<MvASSIGN NAME = "l.tax"							VALUE = 0.00>

		<MvIF EXPR = "{ NOT JSON_Input_Element_List(	l.product, 'O', 'status',	l.status,
																		'0,100,200,300,400,500,600', '0,100,200,300,400,500,600' )	OR
						NOT JSON_Input_Element_Text(	l.product, 'o', 'code',		l.code )										OR
						NOT JSON_Input_Element_Text(	l.product, 'o', 'sku',		l.sku )											OR
						NOT JSON_Input_Element_Text(	l.product, 'o', 'tracknum',	l.tracknum )									OR
						NOT JSON_Input_Element_Integer(	l.product, 'R', 'quantity',	l.quantity )									OR
						NOT JSON_Input_Element_Number(	l.product, 'O', 'tax',		l.tax, 10, 2 ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.code }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code_WithRuntimeInventory( l.code, l.loaded_product ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Element_FieldError( l.product, 'code', 'Product \'' $ l.code $ '\' not found' ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ NOT ISNULL l.sku }">
			<MvASSIGN NAME = "l.loaded_product_count"		VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_SKU_WithRuntimeInventory( l.sku, l.loaded_products ) }">
			<MvIF EXPR = "{ l.loaded_product_count EQ 0 }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Element_FieldError( l.product, 'sku', 'Product \'' $ l.sku $ '\' not found' ) }">
			<MvELSEIF EXPR = "{ l.loaded_product_count GT 1 }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Element_FieldError( l.product, 'sku', 'Ambiguous product SKU' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.loaded_product"				VALUE = "{ l.loaded_products[ 1 ] }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Element_FieldError( l.product, '', 'Unable to load product: One of code or sku must be specified' ) }">
		</MvIF>

		<MvIF EXPR = "{ l.quantity LE 0 }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Element_FieldError( l.product, 'quantity', 'Quantity must be a positive integer' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product_attributes"				VALUE = "">
		<MvASSIGN NAME = "l.product_attribute_count"		VALUE = 0>

		<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ JSON_Input_Element_Array( l.product, 'attributes', l.attributes ) }">
			<MvASSIGN NAME = "l.product_attribute"					VALUE = "">
			<MvASSIGN NAME = "l.product_attribute:code"				VALUE = "">
			<MvASSIGN NAME = "l.product_attribute:template_code"	VALUE = "">
			<MvASSIGN NAME = "l.product_attribute:value"			VALUE = "">

			<MvIF EXPR = "{ NOT JSON_Input_Element_Text( l.attribute, 'o', 'code',			l.product_attribute:code )			OR
							NOT JSON_Input_Element_Text( l.attribute, 'o', 'template_code',	l.product_attribute:template_code )	OR
							NOT JSON_Input_Element_Text( l.attribute, 'o', 'value',			l.product_attribute:value ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.product_attribute_count"			VALUE = "{ miva_array_insert_var( l.product_attributes, l.product_attribute, -1 ) }">
		</MvFOREACH>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.loaded_product, 0, l.product_attributes, l.product_attribute_count, l.basketoptions, l.basketoption_count, l.variant_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00064', 'One or more required attributes are missing, or an invalid combination of attributes was specified' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.orderitem"						VALUE = "">
		<MvASSIGN NAME = "l.orderitem:order_id"				VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderitem:status"				VALUE = "{ l.status }">
		<MvASSIGN NAME = "l.orderitem:shpmnt_id"			VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:rma_id"				VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:dt_instock"			VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:upsold"				VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:product_id"			VALUE = "{ l.loaded_product:id }">
		<MvASSIGN NAME = "l.orderitem:code"					VALUE = "{ l.loaded_product:code }">
		<MvASSIGN NAME = "l.orderitem:name"					VALUE = "{ l.loaded_product:name }">
		<MvASSIGN NAME = "l.orderitem:quantity"				VALUE = "{ l.quantity }">
		<MvASSIGN NAME = "l.orderitem:tracknum"				VALUE = "{ l.tracknum }">
		<MvASSIGN NAME = "l.orderitem:tracktype"			VALUE = "{ l.tracktype }">
		<MvASSIGN NAME = "l.orderitem:tax"					VALUE = "{ l.tax }">

		<MvIF EXPR = "{ NOT ISNULL l.sku }">
			<MvASSIGN NAME = "l.orderitem:sku"				VALUE = "{ l.sku }">
		<MvELSE>
			<MvASSIGN NAME = "l.part_count"					VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.loaded_product:id, l.variant_id, l.parts ) }">

			<MvIF EXPR = "{ l.variant_id EQ 0 AND l.part_count EQ 0 }">
				<MvASSIGN NAME = "l.orderitem:sku"			VALUE = "{ l.loaded_product:sku }">
			<MvELSEIF EXPR = "{ l.part_count NE 1 }">
				<MvASSIGN NAME = "l.orderitem:sku"			VALUE = "">
			<MvELSE>
				<MvASSIGN NAME = "l.orderitem:sku"			VALUE = "{ l.parts[ 1 ]:sku }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.loaded_product, l.variant_id, l.attr_price_override ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.order:cust_id EQ 0 }">
			<MvASSIGN NAME = "l.orderitem:price"			VALUE = "{ l.loaded_product:price }">
		<MvELSE>
			<MvASSIGN NAME = "l.orderitem:price"			VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.loaded_product, l.loaded_product:price, l.loaded_product:cost ) }">
		</MvIF>

		<MvASSIGN NAME = "l.orderitem:retail"				VALUE = "{ l.loaded_product:price }">
		<MvASSIGN NAME = "l.orderitem:weight"				VALUE = "{ l.loaded_product:weight }">
		<MvASSIGN NAME = "l.orderitem:taxable"				VALUE = "{ l.loaded_product:taxable }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Insert( l.orderitem ) OR
						NOT [ g.Module_Feature_INV_RT ].Inventory_Adjust_Variant( l.loaded_product, l.variant_id, 0 - l.orderitem:quantity ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Module_Feature_STA_DB ].Stats_Inc_Products( l.orderitem:quantity ) }">
		<MvASSIGN NAME = "l.null"							VALUE = "{ [ g.Module_Feature_STA_DB ].ProdStats_Add_Counts( l.loaded_product:id, l.loaded_product:name, l.orderitem:quantity ) }">

		<MvASSIGN NAME = "l.basketoption_pos"				VALUE = 1>
		<MvASSIGN NAME = "l.orderoption:order_id"			VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.orderoption:line_id"			VALUE = "{ l.orderitem:line_id }">

		<MvFOREACH ITERATOR = "l.basketoption" ARRAY = "l.basketoptions" COUNT = "{ l.basketoption_count }">
			<MvASSIGN NAME = "l.orderoption:attr_id"		VALUE = "{ l.basketoption:attr_id }">
			<MvASSIGN NAME = "l.orderoption:attr_code"		VALUE = "{ l.basketoption:attr_code }">
			<MvASSIGN NAME = "l.orderoption:attmpat_id"		VALUE = "{ l.basketoption:attmpat_id }">
			<MvASSIGN NAME = "l.orderoption:option_id"		VALUE = "{ l.basketoption:option_id }">
			<MvASSIGN NAME = "l.orderoption:opt_code"		VALUE = "{ l.basketoption:opt_code }">

			<MvIF EXPR = "{ l.attr_price_override }">
				<MvASSIGN NAME = "l.orderoption:retail"		VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:base_price"	VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:price"		VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:weight"		VALUE = 0.00>
			<MvELSE>
				<MvASSIGN NAME = "l.orderoption:retail"		VALUE = "{ l.basketoption:retail }">
				<MvASSIGN NAME = "l.orderoption:base_price"	VALUE = "{ l.basketoption:base_price }">
				<MvASSIGN NAME = "l.orderoption:price"		VALUE = "{ l.basketoption:price }">
				<MvASSIGN NAME = "l.orderoption:weight"		VALUE = "{ l.basketoption:weight }">
			</MvIF>

			<MvASSIGN NAME = "l.orderoption:data"			VALUE = "{ l.basketoption:data }">
			<MvASSIGN NAME = "l.orderoption:data_long"		VALUE = "{ l.basketoption:data_long }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderOption_Insert( l.orderoption ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create_Charges" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.charges" COUNT = "{ JSON_Input_Array( 'Charges', l.charges ) }">
		<MvASSIGN NAME = "l.ordercharge"				VALUE = "">
		<MvASSIGN NAME = "l.ordercharge:order_id"		VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.ordercharge:module_id"		VALUE = 0>
		<MvASSIGN NAME = "l.ordercharge:type"			VALUE = "">
		<MvASSIGN NAME = "l.ordercharge:descrip"		VALUE = "">
		<MvASSIGN NAME = "l.ordercharge:amount"			VALUE = "">
		<MvASSIGN NAME = "l.ordercharge:tax_exempt"		VALUE = 0>
		<MvASSIGN NAME = "l.ordercharge:tax"			VALUE = 0.00>

		<MvASSIGN NAME = "l.display_amount"				VALUE = "">
		<MvASSIGN NAME = "l.module_code"				VALUE = "">

		<MvIF EXPR = "{ NOT JSON_Input_Element_Text(	l.charge, 'R', 'type',				l.ordercharge:type )			OR
						NOT JSON_Input_Element_Text(	l.charge, 'R', 'descrip',			l.ordercharge:descrip )			OR
						NOT JSON_Input_Element_Number(	l.charge, 'O', 'amount',			l.ordercharge:amount,	10, 2 )	OR
						NOT JSON_Input_Element_Boolean(	l.charge, 'O', 'tax_exempt',		l.ordercharge:tax_exempt )		OR
						NOT JSON_Input_Element_Number(	l.charge, 'O', 'display_amount',	l.display_amount,		10, 2 )	OR
						NOT JSON_Input_Element_Text(	l.charge, 'O', 'module_code',		l.module_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ l.ordercharge:type NE 'TAX' }">
			<MvIF EXPR = "{ NOT JSON_Input_Element_Number( l.charge, 'O', 'tax',			l.ordercharge:tax,		10, 2 ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.display_amount }">	<MvASSIGN NAME = "l.ordercharge:disp_amt" VALUE = "{ l.ordercharge:amount }">
		<MvELSE>									<MvASSIGN NAME = "l.ordercharge:disp_amt" VALUE = "{ l.display_amount }">
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.module_code }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Module_Load_Code_Cached( l.module_code, l.module ) }">
				<MvIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00065', 'Module \'' $ l.module_code $ '\' not found' ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT l.module:active }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00066', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00067', 'Module \'' $ l.module:code $ '\' is not installed in store \'' $ g.Store:code $ '\'' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.ordercharge:module_id" VALUE = "{ l.module:id }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderCharge_Insert( l.ordercharge ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Raw( 'CustomField_Values', l.customfield_values ) }">
		<MvFOREACH ITERATOR = "l.module_code" ARRAY = "l.module_codelist" COUNT = "{ miva_struct_members( l.customfield_values, l.module_codelist ) }">
			<MvASSIGN NAME = "l.module_code" VALUE = "{ JSON_Decode( l.module_code ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00074', 'Module \'' $ l.module_code $ '\' not found' ) }">
			<MvELSEIF EXPR = "{ NOT l.module:active }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00075', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
			<MvELSEIF EXPR = "{ NOT l.module:feature_hash:fields_ordr }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00076', 'Module \'' $ l.module:code $ '\' does not provide feature \'fields_ordr\'' ) }">
			<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00077', 'Module \'' $ l.module:code $ '\' is not installed in store \'' $ g.Store:code $ '\'' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.fields"	VALUE = "">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Order_Fields( l.module, l.fields ) }">

			<MvREFERENCEARRAY NAME = "l.customfield_members" VARIABLE = "l.customfield_values">
				<MvMEMBER NAME = "{ l.module:code }">
			</MvREFERENCEARRAY>

			<MvFOREACH ITERATOR = "l.customfield_code" ARRAY = "l.customfield_codelist" COUNT = "{ miva_struct_members( l.customfield_members, l.customfield_codelist ) }">
				<MvASSIGN NAME = "l.customfield_code" VALUE = "{ JSON_Decode( l.customfield_code ) }">

				<MvIF EXPR = "{ NOT miva_array_search( l.fields, 1, l.field, 'l.field:code EQ l.customfield_code' ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.module:code $ ':' $ l.customfield_code, 'Failed to load custom field \'' $ l.customfield_code $ '\'' ) }">
				</MvIF>

				<MvREFERENCEARRAY NAME = "l.customfield_value" VARIABLE = "l.customfield_values">
					<MvMEMBER NAME = "{ l.module:code }">
					<MvMEMBER NAME = "{ l.customfield_code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ l.field:type NE 'multitext' }">
					<MvASSIGN NAME = "l.customfield_value"			VALUE = "{ JSON_Decode( l.customfield_value ) }">
					<MvASSIGN NAME = "l.result"						VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Order_Set_Field( l.module, l.order:id, l.customfield_code, l.customfield_value ) }">
				<MvELSE>
					<MvASSIGN NAME = "l.customfield_value_count"	VALUE = "{ JSON_Array_String( l.customfield_value, l.customfield_values ) }">
					<MvASSIGN NAME = "l.result"						VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Order_Set_Field_Array( l.module, l.order:id, l.customfield_code, l.customfield_values, l.customfield_value_count ) }">
				</MvIF>
				
				<MvIF EXPR = "{ NOT l.result }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.module:code $ ':' $ l.customfield_code, g.Error_Code $ ': ' $ g.Error_Message ) }">
				</MvIF>
			</MvFOREACH>
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Create_CustomerInformation_SetField" PARAMETERS = "order var, customer var, input_name, member_name, default_value" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.order">
		<MvMEMBER NAME = "{ l.member_name }">
	</MvREFERENCEARRAY>

	<MvIF EXPR = "{ NOT JSON_Input_Retrieve( l.input_name, l.value ) }">
		<MvIF EXPR = "{ NOT l.customer:id }">
			<MvASSIGN NAME = "l.value"	VALUE = "{ l.default_value }">
		<MvELSE>
			<MvREFERENCEARRAY NAME = "l.customer_value" VARIABLE = "l.customer">
				<MvMEMBER NAME = "{ l.member_name }">
			</MvREFERENCEARRAY>
			
			<MvASSIGN NAME = "l.value"	VALUE = "{ l.customer_value }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.module_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.vis_module_count"		VALUE = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_order', l.vis_modules ) }">
	<MvWHILE EXPR = "{ l.module_pos LE l.vis_module_count }">
		<MvIF EXPR = "{ l.vis_modules[ l.module_pos ]:api_ver GE 5.51 }">
			<MvDO FILE = "{ g.Module_Root $ l.vis_modules[ l.module_pos ]:module }" NAME = "l.module_ok" VALUE = "{ Module_Order_Delete_Order( l.vis_modules[ l.module_pos ], l.order ) }">
			<MvIF EXPR = "{ NOT l.module_ok }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.vis_modules[ l.module_pos ]:api_ver GE 5.02 }">
			<MvDO FILE = "{ g.Module_Root $ l.vis_modules[ l.module_pos ]:module }" NAME = "l.module_ok" VALUE = "{ Module_Order_Delete( l.vis_modules[ l.module_pos ] ) }">
			<MvIF EXPR = "{ NOT l.module_ok }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
		
		<MvASSIGN NAME = "l.module_pos"			VALUE = "{ l.module_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "l.orderpayment_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.orderpayment_count"		VALUE = "{ [ g.Library_DB ].OrderPaymentList_Load_Order( l.order:id, l.orderpayments ) }">

	<MvWHILE EXPR = "{ l.orderpayment_pos LE l.orderpayment_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID( l.orderpayments[ l.orderpayment_pos ]:pay_id, l.module ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.order_delete" VALUE = "{ PaymentModule_Order_Delete( l.module, l.orderpayments[ l.orderpayment_pos ]:pay_data, l.orderpayments[ l.orderpayment_pos ]:pay_secdat ) }">
			<MvIF EXPR = "{ NOT l.order_delete }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.orderpayment_pos"	VALUE = "{ l.orderpayment_pos + 1 }">
	</MvWHILE>

	<MvIF EXPR = "{ l.order:ship_id }">
		<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID( l.order:ship_id, l.module ) }">
			<MvDO FILE = "{ g.Module_Root $ l.module:module }" NAME = "l.order_delete" VALUE = "{ ShippingModule_Order_Delete( l.module ) }">
			<MvIF EXPR = "{ NOT l.order_delete }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_Order_Delete( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00015', 'Order ' $ l.order:id $ ' deleted' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Delete" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOR INDEX = "l.pos" COUNT = "{ JSON_Array_Integer( g.Order_IDs, l.order_ids ) }">
		<MvASSIGN NAME = "l.order_id" 	VALUE = "{ l.order_ids[ l.pos ] }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvFOREACH ITERATOR = "l.vis_module" ARRAY = "l.vis_modules" COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_order', l.vis_modules ) }">
				<MvIF EXPR = "{ l.vis_module:api_ver GE 5.51 }">
					<MvIF EXPR = "{ NOT [ g.Module_Root $ l.vis_module:module ].Module_Order_Delete_Order( l.vis_module, l.order ) }">
						<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, g.Error_Message, l.errors ) }">
						<MvFORCONTINUE>
					</MvIF>
				<MvELSEIF EXPR = "{ l.vis_module:api_ver GE 5.02 }">
					<MvIF EXPR = "{ NOT [ g.Module_Root $ l.vis_module:module ].Module_Order_Delete( l.vis_module ) }">
						<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, g.Error_Message, l.errors ) }">
						<MvFORCONTINUE>
					</MvIF>
				</MvIF>
			</MvFOREACH>

			<MvFOREACH ITERATOR = "l.orderpayment" ARRAY = "l.orderpayments" COUNT = "{ [ g.Library_DB ].OrderPaymentList_Load_Order( l.order:id, l.orderpayments ) }">
				<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID( l.orderpayment:pay_id, l.module ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].PaymentModule_Order_Delete( l.module, l.orderpayment:pay_data, l.orderpayment:pay_secdat ) }">
						<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, g.Error_Message, l.errors ) }">
						<MvFORCONTINUE>
					</MvIF>
				</MvIF>
			</MvFOREACH>

			<MvIF EXPR = "{ l.order:ship_id }">
				<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID( l.order:ship_id, l.module ) }">
					<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].ShippingModule_Order_Delete( l.module ) }">
						<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, g.Error_Message, l.errors ) }">
						<MvFORCONTINUE>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_Order_Delete( l.order ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00035', 'Order ' $ l.order:id $ ' deleted' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFORSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFORSTOP>
		</MvIF>
	</MvFOR>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Update_Batch" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(			'R', 'Batch_ID',	l.batch_id ) OR
					NOT JSON_Input_Integer_Array(	'R', 'Order_IDs',	l.order_ids, l.order_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.batch_id }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Batch_Load_ID( l.batch_id, l.null ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00087', 'Batch does not exist' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.order_id" ARRAY = "l.order_ids" COUNT = "{ l.order_id_count }">
		<MvASSIGN NAME = "l.order"		VALUE = "">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvASSIGN NAME = "l.original_orders"	VALUE = "">
			<MvASSIGN NAME = "l.orders"				VALUE = "">
			<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_insert_var( l.original_orders, l.order, -1 ) }">
			<MvASSIGN NAME = "l.order:batch_id" 	VALUE = "{ l.batch_id }">
			<MvASSIGN NAME = "l.order_count"		VALUE = "{ miva_array_insert_var( l.orders, l.order, -1 ) }">

			<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Batch( l.order ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, g.Error_Message, l.errors ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, g.Error_Message, l.errors ) }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ l.batch_id }">	<MvASSIGN NAME = "l.log_message" VALUE = "{ 'Order ' $ l.order:id $ ' assigned to batch ' $ l.batch_id }">
			<MvELSE>						<MvASSIGN NAME = "l.log_message" VALUE = "{ 'Order ' $ l.order:id $ ' removed from batch' }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00088', l.log_message ) }">

			<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'not_order', l.modules ) }">
				<MvIF EXPR = "{ l.module:api_ver GE 9.00 }">
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Notify_Order_BatchChange( l.module, l.order_count, l.original_orders, l.orders ) }">
				</MvIF>
			</MvFOREACH>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>
	
	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Update_Customer_Information" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.order:ship_addr"	VALUE = "">
	<MvASSIGN NAME = "l.order:bill_addr"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Boolean(	'o', 'Ship_Residential',	l.order:ship_res )		OR
	 				NOT JSON_Input_Text(	'o', 'Ship_FirstName',		l.order:ship_fname )	OR
	 				NOT JSON_Input_Text(	'o', 'Ship_LastName',		l.order:ship_lname )	OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Email',			l.order:ship_email )	OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Phone',			l.order:ship_phone )	OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Fax',			l.order:ship_fax )		OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Company',		l.order:ship_comp )		OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Address1',		l.order:ship_addr1 )	OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Address2',		l.order:ship_addr2 )	OR
	 				NOT JSON_Input_Text(	'o', 'Ship_City',			l.order:ship_city )		OR
	 				NOT JSON_Input_Text(	'o', 'Ship_State',			l.order:ship_state )	OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Zip',			l.order:ship_zip )		OR
	 				NOT JSON_Input_Text(	'o', 'Ship_Country',		l.order:ship_cntry )	OR

	 				NOT JSON_Input_Text(	'o', 'Bill_FirstName',		l.order:bill_fname )	OR
	 				NOT JSON_Input_Text(	'o', 'Bill_LastName',		l.order:bill_lname )	OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Email',			l.order:bill_email )	OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Phone',			l.order:bill_phone )	OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Fax',			l.order:bill_fax )		OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Company',		l.order:bill_comp )		OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Address1',		l.order:bill_addr1 )	OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Address2',		l.order:bill_addr2 )	OR
	 				NOT JSON_Input_Text(	'o', 'Bill_City',			l.order:bill_city )		OR
	 				NOT JSON_Input_Text(	'o', 'Bill_State',			l.order:bill_state )	OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Zip',			l.order:bill_zip )		OR
	 				NOT JSON_Input_Text(	'o', 'Bill_Country',		l.order:bill_cntry ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'Customer_ID' ) }">
		<MvIF EXPR = "{ NOT JSON_Input_Integer( 'R', 'Customer_ID', l.customer_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ l.customer_id }">
			<MvIF EXPR = "{ NOT [ g.Feature_CUS_DB ].Customer_Load_ID( l.customer_id, l.null ) }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Customer_ID', 'Customer not found' ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.order:cust_id"	VALUE = "{ l.customer_id }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Customer_Information( l.order ) OR
					NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00016', 'Customer information updated for order ' $ l.order:id ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_UnlinkSubscriptions" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ [ g.Module_Feature_SUB_DB ].SubscriptionList_Load_Order( l.order:id, l.subscriptions ) }">
		<MvASSIGN NAME = "l.subscription:order_id"	VALUE = 0>
		<MvASSIGN NAME = "l.subscription:line_id"	VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_LowLevel( l.subscription ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ [ g.Module_Library_DB ].OrderItemList_Load_Order_Subscription( l.order:id, l.orderitems ) }">
		<MvASSIGN NAME = "l.orderitem:subscrp_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:subterm_id"	VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Update( l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00040', 'Subscriptions unlinked for order ' $ l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CancelSubscriptions" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'SUBS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ [ g.Module_Feature_SUB_DB ].SubscriptionList_Load_Order( l.order:id, l.subscriptions ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_Status_Cancel_WithNotifications( l.subscription, '' ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.orderitem" ARRAY = "l.orderitems" COUNT = "{ [ g.Module_Library_DB ].OrderItemList_Load_Order_Subscription( l.order:id, l.orderitems ) }">
		<MvASSIGN NAME = "l.orderitem:subscrp_id"	VALUE = 0>
		<MvASSIGN NAME = "l.orderitem:subterm_id"	VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderItem_Update( l.orderitem ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00041', 'Subscriptions cancelled for order ' $ l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_TransferSubscriptions" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'SUBS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.paymentcard_id"		VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'R', 'Address_ID',		l.address_id )	OR
					NOT JSON_Input_Integer(	'R', 'Customer_ID',		l.customer_id )	OR
					NOT JSON_Input_Integer(	'O', 'PaymentCard_ID',	l.paymentcard_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.order:cust_id, l.original_customer ) }">	<MvASSIGN NAME = "l.original_customer_login" VALUE = "{ l.original_customer:login }">
	<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">												<MvASSIGN NAME = "l.original_customer_login" VALUE = "customer no longer exists">
	<MvELSE>																									<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( l.customer_id, l.customer ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00043', 'Customer not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.paymentcard_id }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].CustomerPaymentCard_Load_ID( l.paymentcard_id, l.customer:id, l.paymentcard ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00044', 'Payment card not found' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].CustomerAddress_Load_ID_Cached( l.address_id, l.address ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00045', 'Address not found' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.subscription" ARRAY = "l.subscriptions" COUNT = "{ [ g.Module_Feature_SUB_DB ].SubscriptionList_Load_Order( l.order:id, l.subscriptions ) }">
		<MvASSIGN NAME = "l.subscription:cust_id"	VALUE = "{ l.customer:id }">
		<MvASSIGN NAME = "l.subscription:addr_id"	VALUE = "{ l.address:id }">

		<MvIF EXPR = "{ l.paymentcard:id }">		<MvASSIGN NAME = "l.subscription:custpc_id"	VALUE = "{ l.paymentcard:id }">
		<MvELSE>									<MvASSIGN NAME = "l.subscription:custpc_id"	VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update( l.subscription ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00046', 'Subscriptions transferred from customer \'' $ l.original_customer_login $ '\' to customer \'' $ l.customer:login $ '\' for order ' $ l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Recalculate_Tax" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Feature_PGR_UT ].Order_Discount_LockFile( l.order ) }">
		<MvASSIGN NAME = "l.result"	VALUE = "{ JSON_Order_Recalculate_Tax_LowLevel( l.order ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }"> 
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":				<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total ) ) }">",
		"total_tax":			<MvEVAL EXPR = "{ l.order:total_tax ROUND 2 }">,
		"formatted_total_tax":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_tax ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Recalculate_Tax_LowLevel" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Load_ID( l.order:id, l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.calculate_params" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateTax( l.calculate_params ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Order_Calculate_Charges( l.order, l.calculate_params ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update Order Metrics
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.order_total" VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_ShippingAndTaxTotals( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_Order_Update_Total( l.order, l.order_total ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Recalculate_Charges" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Text(	'R', 'Shipping_Module',	l.shipping_module )	OR
					NOT JSON_Input_Text(	'o', 'Shipping_Data',	l.shipping_data ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Module_Load_Code_Cached( l.shipping_module, l.ship_module )		OR
					NOT [ g.Library_DB ].StoreModule_Load_Cached( l.ship_module:id, 'shipping', l.null )	OR
					NOT l.ship_module:active }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00084', 'Invalid shipping module' ) }">
	</MvIF>

	<MvLOCKFILE FILE = "{ [ g.Module_Feature_PGR_UT ].Order_Discount_LockFile( l.order ) }">
		<MvASSIGN NAME = "l.result" VALUE = "{ JSON_Order_Recalculate_Charges_LowLevel( l.order, l.ship_module, l.shipping_data ) }">
	</MvLOCKFILE>

	<MvIF EXPR = "{ NOT l.result }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"ship_id":				<MvEVAL EXPR = "{ int( l.order:ship_id ) }">,
		"ship_data":			"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_data ) }">",
		"total":				<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total ) ) }">",
		"total_ship":			<MvEVAL EXPR = "{ l.order:total_ship ROUND 2 }">,
		"formatted_total_ship":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_ship ) ) }">",
		"total_tax":			<MvEVAL EXPR = "{ l.order:total_tax ROUND 2 }">,
		"formatted_total_tax":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store:currncy_mod:module ].CurrencyModule_AddFormatting( g.Store:currncy_mod, l.order:total_tax ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Recalculate_Charges_LowLevel" PARAMETERS = "order var, ship_module var, shipping_data" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.calculate_params"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateShipping( l.calculate_params, l.ship_module, l.shipping_data ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Order_Calculate_Charges_BuildParam_CalculateTax( l.calculate_params ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Utilities ].Order_Calculate_Charges( l.order, l.calculate_params ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Update Order Metrics
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.order_total"	VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_ShippingAndTaxTotals( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_Order_Update_Total( l.order, l.order_total ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Change_Shipping( l.order, l.ship_module:id, l.shipping_data ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_Update_Charges" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.charge_count"				VALUE = 0>
	<MvASSIGN NAME = "l.charges"					VALUE = "">

	<MvIF EXPR = "{ JSON_Input_Exists( 'Charges' ) }">
		<MvFOREACH ITERATOR = "l.input_charge" ARRAY = "l.input_charges" COUNT = "{ JSON_Input_Array( 'Charges', l.input_charges ) }">
			<MvASSIGN NAME = "l.charge"				VALUE = "">
			<MvASSIGN NAME = "l.charge:type"		VALUE = "">
			<MvASSIGN NAME = "l.charge:descrip"		VALUE = "">
			<MvASSIGN NAME = "l.charge:amount"		VALUE = 0.00>
			<MvASSIGN NAME = "l.charge:module_id"	VALUE = 0>
			<MvASSIGN NAME = "l.charge:tax_exempt"	VALUE = 0>
			<MvASSIGN NAME = "l.charge:tax"			VALUE = 0.00>

			<MvIF EXPR = "{ NOT JSON_Input_Element_Text(	l.input_charge, 'R', 'type',		l.charge:type )				OR
							NOT JSON_Input_Element_Text(	l.input_charge, 'R', 'descrip',		l.charge:descrip )			OR
							NOT JSON_Input_Element_Number(	l.input_charge, 'O', 'amount',		l.charge:amount,	10, 2 )	OR
							NOT JSON_Input_Element_Integer(	l.input_charge, 'O', 'module_id',	l.charge:module_id )		OR
							NOT JSON_Input_Element_Boolean(	l.input_charge, 'O', 'tax_exempt',	l.charge:tax_exempt ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ l.charge:type NE 'TAX' }">
				<MvIF EXPR = "{ NOT JSON_Input_Element_Number(	l.input_charge, 'O', 'tax',		l.charge:tax,		10, 2 ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.charge_count"		VALUE = "{ miva_array_insert_var( l.charges, l.charge, -1 ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve_Raw( 'Charge_Types',		l.charge_types )		OR
						JSON_Input_Retrieve_Raw( 'Charge_Descriptions',	l.charge_descriptions ) OR
						JSON_Input_Retrieve_Raw( 'Charge_Amounts',		l.charge_amounts )		OR
						JSON_Input_Retrieve_Raw( 'Charge_Module_IDs',	l.charge_module_ids )	OR
						JSON_Input_Retrieve_Raw( 'Charge_Tax_Exempts',	l.charge_tax_exempts )	OR
						JSON_Input_Retrieve_Raw( 'Charge_Taxes',		l.charge_taxes ) }">
		<MvASSIGN NAME = "l.charge_count"			VALUE = "{ JSON_Array_Coalesce_String(	l.charge_types,			l.charges, 'type' ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ JSON_Array_Coalesce_String(	l.charge_descriptions,	l.charges, 'descrip' ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ JSON_Array_Coalesce_Rounded(	l.charge_amounts,		l.charges, 'amount',	2 ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ JSON_Array_Coalesce_Integer(	l.charge_module_ids,	l.charges, 'module_id' ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ JSON_Array_Coalesce_Integer(	l.charge_tax_exempts,	l.charges, 'tax_exempt' ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ JSON_Array_Coalesce_Rounded(	l.charge_taxes,			l.charges, 'tax',		2 ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.total"						VALUE = "{ l.order:total - [ g.Library_DB ].OrderCharge_Total( l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderCharge_Delete_All_Order( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.charges" COUNT = "{ l.charge_count }">
		<MvASSIGN NAME = "l.ordercharge:order_id"	VALUE = "{ l.order:id }">
		<MvASSIGN NAME = "l.ordercharge:charge_id"	VALUE = "{ [ g.Library_DB ].StoreKey_Generate( 'BasketCharges' ) }">
		<MvASSIGN NAME = "l.ordercharge:module_id"	VALUE = "{ l.charge:module_id }">
		<MvASSIGN NAME = "l.ordercharge:type"		VALUE = "{ l.charge:type }">
		<MvASSIGN NAME = "l.ordercharge:descrip"	VALUE = "{ l.charge:descrip }">
		<MvASSIGN NAME = "l.ordercharge:amount"		VALUE = "{ l.charge:amount }">
		<MvASSIGN NAME = "l.ordercharge:disp_amt"	VALUE = "{ l.ordercharge:amount }">
		<MvASSIGN NAME = "l.ordercharge:tax_exempt"	VALUE = "{ l.charge:tax_exempt }">
		<MvASSIGN NAME = "l.ordercharge:tax"		VALUE = "{ l.charge:tax }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderCharge_Insert( l.ordercharge ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.total"					VALUE = "{ l.total + ( l.ordercharge:amount ROUND 2 ) }">
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_Order_Update_Total( l.order, l.total )									OR
					NOT [ g.Library_DB ].Order_Update_ShippingAndTaxTotals( l.order )								OR
					NOT [ g.Library_DB ].Order_Change_Shipping( l.order, int( g.Shipping_ID ), g.Shipping_Data )	OR
					NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00018', 'Charges updated for order ' $ l.order:id ) }">

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"ship_id":			<MvEVAL EXPR = "{ l.order:ship_id }">,
		"ship_data":		"<MvEVAL EXPR = "{ JSON_Encode( l.order:ship_data ) }">",
		"formatted_total":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.order:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_FulfillmentModule_Process" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.module_count"	VALUE = "{ JSON_Array_Integer( g.Module_IDs, l.modules ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Module_Load_ID( g.Store:currncy_id, g.Store_Module_Currency ) OR
					NOT [ g.Library_DB ].Module_Load_ID( g.Store:tax_id, g.Store_Module_Tax ) OR
					NOT [ g.Library_DB ].Module_Load_ID( g.Store:ui_id, g.Store_Module_UI ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI:module }">

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.module_pos"						VALUE = 1>
	<MvASSIGN NAME = "l.errors"							VALUE = "">
	<MvASSIGN NAME = "l.error_count"					VALUE = 0>

	<MvWHILE EXPR = "{ l.module_pos LE l.module_count }">
		<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID( l.modules[ l.module_pos ], l.module ) AND l.module:active AND
						[ g.Library_DB ].StoreModule_Load( l.module:id, 'fulfill', l.storemodule ) }">
			<MvASSIGN NAME = "g.Error_Message_Count"	VALUE = 0>

			<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].FulfillmentModule_ProcessOrder( l.module, l.order ) }">
				<MvASSIGN NAME = "l.error_count"											VALUE = "{ l.error_count + 1 }">
				<MvASSIGN NAME = "l.errors" INDEX = "{ l.error_count }" MEMBER = "module"	VALUE = "{ l.module:name }">

				<MvASSIGNARRAY NAME = "l.errors" VALUE = "{ g.Error_Code $ ': ' $ g.Error_Message }">
					<MvDIMENSION INDEX = "{ l.error_count }">
					<MvMEMBER NAME = "messages">
					<MvDIMENSION INDEX = 1>
				</MvASSIGNARRAY>
			<MvELSEIF EXPR = "{ g.Error_Message_Count }">
				<MvASSIGN NAME = "l.error_count"											VALUE = "{ l.error_count + 1 }">
				<MvASSIGN NAME = "l.errors" INDEX = "{ l.error_count }" MEMBER = "module"	VALUE = "{ l.module:name }">

				<MvFOREACH INDEX = "l.error_pos" ITERATOR = "l.message" ARRAY = "g.Error_Messages" COUNT = "{ g.Error_Message_Count }">
					<MvASSIGNARRAY NAME = "l.errors" VALUE = "{ l.message }">
						<MvDIMENSION INDEX = "{ l.error_count }">
						<MvMEMBER NAME = "messages">
						<MvDIMENSION INDEX = 1>
					</MvASSIGNARRAY>
				</MvFOREACH>
			</MvIF>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00019', 'Fulfillment module \'' $ l.module:code $ '\' triggered for order ' $ l.order:id ) }">
		<MvASSIGN NAME = "l.module_pos"	VALUE = "{ l.module_pos + 1 }">
	</MvWHILE>

	<MvASSIGN NAME = "g.Store_Module_Currency"			VALUE = "{ g.Store_Module_Currency:module }">
	<MvASSIGN NAME = "g.Store_Module_Tax"				VALUE = "{ g.Store_Module_Tax:module }">
	<MvASSIGN NAME = "g.Store_Module_UI"				VALUE = "{ g.Store_Module_UI:module }">

	<MvASSIGN NAME = "g.Module_Store_Module_Currency" 	VALUE = "{ g.Module_Root $ g.Store_Module_Currency }">
	<MvASSIGN NAME = "g.Module_Store_Module_Tax" 		VALUE = "{ g.Module_Root $ g.Store_Module_Tax }">
	<MvASSIGN NAME = "g.Module_Store_Module_UI"			VALUE = "{ g.Module_Root $ g.Store_Module_UI }">

	<MvIF EXPR = "{ l.error_count }">
		<MvASSIGN NAME = "l.message"					VALUE = "Errors were encountered with the following Fulfillment Modules:">

		<MvFOREACH ITERATOR = "l.error" ARRAY = "l.errors" COUNT = "{ l.error_count }">
			<MvASSIGN NAME = "l.message"				VALUE = "{ l.message $ asciichar( 10 ) $ asciichar( 10 ) $ l.error:module $ ':' }">

			<MvFOREACH ITERATOR = "l.error_message" ARRAY = "l.error:messages">
				<MvASSIGN NAME = "l.message"			VALUE = "{ l.message $ asciichar( 10 ) $ l.error_message }">
			</MvFOREACH>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00024', l.message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderTabs_SetVars" PARAMETERS = "order var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Load_Fields"			VALUE = 1>
	<MvASSIGN NAME = "g.Edit_Order"				VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "g.Order_ShipFirstName" 	VALUE = "{ l.order:ship_fname }">
	<MvASSIGN NAME = "g.Order_ShipLastName" 	VALUE = "{ l.order:ship_lname }">
	<MvASSIGN NAME = "g.Order_ShipEmail" 		VALUE = "{ l.order:ship_email }">
	<MvASSIGN NAME = "g.Order_ShipCompany" 		VALUE = "{ l.order:ship_comp }">
	<MvASSIGN NAME = "g.Order_ShipPhone" 		VALUE = "{ l.order:ship_phone }">
	<MvASSIGN NAME = "g.Order_ShipFax"			VALUE = "{ l.order:ship_fax }">
	<MvASSIGN NAME = "g.Order_ShipAddress" 		VALUE = "{ l.order:ship_addr }">
	<MvASSIGN NAME = "g.Order_ShipAddress1" 	VALUE = "{ l.order:ship_addr1 }">
	<MvASSIGN NAME = "g.Order_ShipAddress2" 	VALUE = "{ l.order:ship_addr2 }">
	<MvASSIGN NAME = "g.Order_ShipCity" 		VALUE = "{ l.order:ship_city }">
	<MvASSIGN NAME = "g.Order_ShipState" 		VALUE = "{ l.order:ship_state }">
	<MvASSIGN NAME = "g.Order_ShipZip"			VALUE = "{ l.order:ship_zip }">
	<MvASSIGN NAME = "g.Order_ShipCountry" 		VALUE = "{ l.order:ship_cntry }">

	<MvASSIGN NAME = "g.Order_BillFirstName" 	VALUE = "{ l.order:bill_fname }">
	<MvASSIGN NAME = "g.Order_BillLastName" 	VALUE = "{ l.order:bill_lname }">
	<MvASSIGN NAME = "g.Order_BillEmail" 		VALUE = "{ l.order:bill_email }">
	<MvASSIGN NAME = "g.Order_BillCompany" 		VALUE = "{ l.order:bill_comp }">
	<MvASSIGN NAME = "g.Order_BillPhone" 		VALUE = "{ l.order:bill_phone }">
	<MvASSIGN NAME = "g.Order_BillFax"			VALUE = "{ l.order:bill_fax }">
	<MvASSIGN NAME = "g.Order_BillAddress" 		VALUE = "{ l.order:bill_addr }">
	<MvASSIGN NAME = "g.Order_BillAddress1" 	VALUE = "{ l.order:bill_addr1 }">
	<MvASSIGN NAME = "g.Order_BillAddress2" 	VALUE = "{ l.order:bill_addr2 }">
	<MvASSIGN NAME = "g.Order_BillCity" 		VALUE = "{ l.order:bill_city }">
	<MvASSIGN NAME = "g.Order_BillState" 		VALUE = "{ l.order:bill_state }">
	<MvASSIGN NAME = "g.Order_BillZip"			VALUE = "{ l.order:bill_zip }">
	<MvASSIGN NAME = "g.Order_BillCountry" 		VALUE = "{ l.order:bill_cntry }">

	<MvASSIGN NAME = "g.Order_Tax"				VALUE = "{ l.order:tax }">
	<MvASSIGN NAME = "g.Order_Shipping" 		VALUE = "{ l.order:shipping }">
	<MvASSIGN NAME = "g.Order_Total"			VALUE = "{ l.order:total }">

	<MvASSIGN NAME = "g.OrderCharge_Count"		VALUE = "{ [ g.Library_DB ].OrderChargeList_Load_Order( l.order:id, g.Order_Charge ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderTabList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_OrderTabs_SetVars( l.order ) }">

	<MvASSIGN NAME = "l.tab_module_count"		VALUE = 0>

	<MvCOMMENT>
	|
	| We use the v5.5 compatibility pay_id here instead of looking at sNN_OrderPayments because it ensures
	| that we will only display a tab for one payment module, and legacy payment modules will only be able
	| to update that OrderPayment anyway through the compatibility layer.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.order:pay_id }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Module_Load_ID( l.order:pay_id, l.module ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.module_tabs"	VALUE = "{ [ g.Module_Root $ l.module:module ].PaymentModule_Order_Tabs( l.module ) }">
		<MvIF EXPR = "{ len( l.module_tabs ) }">
			<MvASSIGN NAME = "l.tab_module_count"	VALUE = "{ l.tab_module_count + 1 }">

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "{ l.module:id }">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "module_id">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "{ l.module_tabs }">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "tabs">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "payment">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "tab_type">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "{ l.order:pay_secid }">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "pay_secid">
			</MvASSIGNARRAY>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.order:ship_id }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Module_Load_ID( l.order:ship_id, l.ship_module ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.module_tabs"	VALUE = "{ [ g.Module_Root $ l.ship_module:module ].ShippingModule_Order_Tabs( l.ship_module ) }">
		<MvIF EXPR = "{ len( l.module_tabs ) }">
			<MvASSIGN NAME = "l.tab_module_count"	VALUE = "{ l.tab_module_count + 1 }">

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "{ l.ship_module:id }">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "module_id">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "{ l.module_tabs }">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "tabs">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "shipping">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "tab_type">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = 0> 
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "pay_secid">
			</MvASSIGNARRAY>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.module_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.vis_module_count"	VALUE = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'vis_order', l.vis_modules ) }">

	<MvWHILE EXPR = "{ l.module_pos LE l.vis_module_count }">
		<MvASSIGN NAME = "l.module_tabs"	VALUE = "{ [ g.Module_Root $ l.vis_modules[ l.module_pos ]:module ].Module_Order_Tabs( l.vis_modules[ l.module_pos ] ) }">
		<MvIF EXPR = "{ len( l.module_tabs ) }">
			<MvASSIGN NAME = "l.tab_module_count"	VALUE = "{ l.tab_module_count + 1 }">

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "{ l.vis_modules[ l.module_pos ]:id }">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "module_id">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "{ l.module_tabs }">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "tabs">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = "vis_order">
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "tab_type">
			</MvASSIGNARRAY>

			<MvASSIGNARRAY NAME = "l.tab_modules" VALUE = 0> 
				<MvDIMENSION INDEX = "{ l.tab_module_count }">
				<MvMEMBER NAME = "pay_secid">
			</MvASSIGNARRAY>
		</MvIF>

		<MvASSIGN NAME = "l.module_pos"		VALUE = "{ l.module_pos + 1 }">
	</MvWHILE>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvASSIGN NAME = "l.tab_count"				VALUE = 0>
	<MvASSIGN NAME = "l.tab_module_pos"			VALUE = 1>
	<MvWHILE EXPR = "{ l.tab_module_pos LE l.tab_module_count }">
		<MvASSIGN NAME = "l.tab_pos"			VALUE = 1>
		<MvASSIGN NAME = "l.tab"				VALUE = "{ trim( gettoken( l.tab_modules[ l.tab_module_pos ]:tabs, ',', l.tab_pos ) ) }">

		<MvWHILE EXPR = "{ l.tab }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.tab_count ) }">
			"module_id":	<MvEVAL EXPR = "{ l.tab_modules[ l.tab_module_pos ]:module_id }">,
			"tab_type":		"<MvEVAL EXPR = "{ JSON_Encode( l.tab_modules[ l.tab_module_pos ]:tab_type ) }">",
			"tab_code":		"<MvEVAL EXPR = "{ JSON_Encode( trim( gettoken( l.tab, ':', 1 ) ) ) }">",
			"tab_name":		"<MvEVAL EXPR = "{ JSON_Encode( trim( gettoken( l.tab, ':', 2 ) ) ) }">",
			"pay_secid":	<MvEVAL EXPR = "{ l.tab_modules[ l.tab_module_pos ]:pay_secid }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvASSIGN NAME = "l.tab_pos"		VALUE = "{ l.tab_pos + 1 }">
			<MvASSIGN NAME = "l.tab"			VALUE = "{ trim( gettoken( l.tab_modules[ l.tab_module_pos ]:tabs, ',', l.tab_pos ) ) }">
		</MvWHILE>

		<MvASSIGN NAME = "l.tab_module_pos"		VALUE = "{ l.tab_module_pos + 1 }">
	</MvWHILE>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_DetermineSKU" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load_WithRuntimeInventory( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_ParseAttributes( l.product, l.orderoptions, l.orderoption_count, l.attribute_total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.product, l.orderoptions, l.orderoption_count, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.part_count"			VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.product:id, l.variant_id, l.parts ) }">

	<MvIF EXPR = "{ l.variant_id EQ 0 AND l.part_count EQ 0 }">
		<MvASSIGN NAME = "l.sku"			VALUE = "{ l.product:sku }">
	<MvELSEIF EXPR = "{ l.part_count NE 1 }">
		<MvASSIGN NAME = "l.sku"			VALUE = "">
	<MvELSE>
		<MvREFERENCEARRAY NAME = "l.part"	VARIABLE = "l.parts">
			<MvDIMENSION INDEX = 1>
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.sku"			VALUE = "{ l.part:sku }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"sku": "<MvEVAL EXPR = "{ JSON_Encode( l.sku ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_ParseAttributes" PARAMETERS = "product var, orderoptions var, orderoption_count var, attribute_price var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.attribute_count"		VALUE = 0>
	<MvASSIGN NAME = "l.input_attribute_count"	VALUE = 0>
	<MvASSIGN NAME = "l.attributes"				VALUE = "">

	<MvIF EXPR = "{ JSON_Input_Exists( 'Attributes' ) OR JSON_Input_Exists( 'Options' ) }">
		<MvIF EXPR = "{ JSON_Input_Exists( 'Attributes' ) }">
			<MvASSIGN NAME = "l.input_attribute_count" VALUE = "{ JSON_Input_Array( 'Attributes', l.input_attributes ) }">
		<MvELSEIF EXPR = "{ JSON_Input_Exists( 'Options' ) }">
			<MvASSIGN NAME = "l.input_attribute_count" VALUE = "{ JSON_Input_Array( 'Options', l.input_attributes ) }">
		</MvIF>
		
		<MvFOREACH ITERATOR = "l.input_attribute" ARRAY = "l.input_attributes" COUNT = "{ l.input_attribute_count }">
			<MvASSIGN NAME = "l.attribute"					VALUE = "">
			<MvASSIGN NAME = "l.attribute:attr_code"		VALUE = "">
			<MvASSIGN NAME = "l.attribute:opt_code_or_data"	VALUE = "">
			<MvASSIGN NAME = "l.attribute:opt_code"			VALUE = "">
			<MvASSIGN NAME = "l.attribute:data"				VALUE = "">
			<MvASSIGN NAME = "l.attribute:price"			VALUE = 0.00>
			<MvASSIGN NAME = "l.attribute:weight"			VALUE = 0.00>

			<MvIF EXPR = "{ NOT JSON_Input_Element_Exists( l.input_attribute, 'attr_code' ) AND 
							NOT JSON_Input_Element_Exists( l.input_attribute, 'attr_id' )  }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00081' , 'Attribute requires attr_code or attr_id' ) }">
			</MvIF>

			<MvIF EXPR = "{ NOT JSON_Input_Element_Text(	l.input_attribute, 'O', 'attr_code',		l.attribute:attr_code )			OR
							NOT JSON_Input_Element_Integer(	l.input_attribute, 'O', 'attr_id',			l.attribute:attr_id )			OR
							NOT JSON_Input_Element_Integer(	l.input_attribute, 'o', 'attmpat_id',		l.attribute:attmpat_id )		OR
							NOT JSON_Input_Element_Text(	l.input_attribute, 'o', 'opt_code_or_data',	l.attribute:opt_code_or_data )	OR
							NOT JSON_Input_Element_Text(	l.input_attribute, 'o', 'opt_code',			l.attribute:opt_code )			OR
							NOT JSON_Input_Element_Text(	l.input_attribute, 'o', 'data',				l.attribute:data )				OR
							NOT JSON_Input_Element_Number(	l.input_attribute, 'o', 'price',			l.attribute:price,	10, 2 )		OR
							NOT JSON_Input_Element_Number(	l.input_attribute, 'o', 'weight',			l.attribute:weight,	10, 2 ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.attribute_count"			VALUE = "{ miva_array_insert_var( l.attributes, l.attribute, -1 ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve_Raw( 'Attribute_Codes',			l.attribute_codes )			OR
						JSON_Input_Retrieve_Raw( 'Attribute_Options',		l.attribute_options )		OR
						JSON_Input_Retrieve_Raw( 'Attribute_Option_Codes',	l.attribute_option_codes )	OR
						JSON_Input_Retrieve_Raw( 'Attribute_Option_Data',	l.attribute_option_data )	OR
						JSON_Input_Retrieve_Raw( 'Attribute_Prices',		l.attribute_prices )		OR
						JSON_Input_Retrieve_Raw( 'Attribute_Weights',		l.attribute_weights ) }">
		<MvASSIGN NAME = "l.attribute_count"	VALUE = "{ JSON_Array_Coalesce_String(	l.attribute_codes,			l.attributes, 'attr_code' ) }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Array_Coalesce_String(	l.attribute_options,		l.attributes, 'opt_code_or_data' ) }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Array_Coalesce_String(	l.attribute_option_codes,	l.attributes, 'opt_code' ) }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Array_Coalesce_String(	l.attribute_option_data,	l.attributes, 'data' ) }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Array_Coalesce_Rounded(	l.attribute_prices,			l.attributes, 'price',	2 ) }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Array_Coalesce_Rounded(	l.attribute_weights,		l.attributes, 'weight',	2 ) }">
	</MvIF>

	<MvASSIGN NAME = "l.orderoption_count"		VALUE = 0>
	<MvASSIGN NAME = "l.attribute_price"		VALUE = 0.00>

	<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ l.attribute_count }">
		<MvREFERENCEARRAY NAME = "l.orderoption" VARIABLE = "l.orderoptions">
			<MvDIMENSION INDEX = "{ ++l.orderoption_count }">
		</MvREFERENCEARRAY>

		<MvASSIGN NAME = "l.loaded_attribute" 							VALUE = "">

		<MvASSIGN NAME = "l.orderoption:attr_id"						VALUE = "{ l.attribute:attr_id }">
		<MvASSIGN NAME = "l.orderoption:attr_code"						VALUE = "{ l.attribute:attr_code }">
		<MvASSIGN NAME = "l.orderoption:attmpat_id"						VALUE = 0>
		<MvASSIGN NAME = "l.orderoption:option_id"						VALUE = 0>
		<MvASSIGN NAME = "l.orderoption:opt_code"						VALUE = "">
		<MvASSIGN NAME = "l.orderoption:price"							VALUE = "{ l.attribute:price }">
		<MvASSIGN NAME = "l.orderoption:weight"							VALUE = "{ l.attribute:weight }">
		<MvASSIGN NAME = "l.orderoption:data"							VALUE = "">
		<MvASSIGN NAME = "l.orderoption:data_long"						VALUE = "">
		<MvASSIGN NAME = "l.orderoption:type"							VALUE = "">

		<MvIF EXPR = "{ l.product:id }">
			<MvIF EXPR = "{ NOT JSON_OrderItem_Load_ProductAttribute( l.product, l.attribute, l.orderoption, l.loaded_attribute ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT l.loaded_attribute:id }">
			<MvASSIGN NAME = "l.orderoption:attr_id"					VALUE = 0>
			<MvASSIGN NAME = "l.orderoption:attmpat_id"					VALUE = 0>
			<MvASSIGN NAME = "l.orderoption:attr_code"					VALUE = "{ l.attribute:attr_code }">
		<MvELSE>
			<MvASSIGN NAME = "l.orderoption:attr_code"					VALUE = "{ l.loaded_attribute:code }">
			<MvASSIGN NAME = "l.orderoption:type"						VALUE = "{ l.loaded_attribute:type }">

			<MvIF EXPR = "{ l.loaded_attribute:attemp_id }">
				<MvASSIGN NAME = "l.orderoption:attr_id"				VALUE = "{ l.loaded_attribute:attr_id }">
				<MvASSIGN NAME = "l.orderoption:attmpat_id"				VALUE = "{ l.loaded_attribute:id }">
			<MvELSE>
				<MvASSIGN NAME = "l.orderoption:attr_id"				VALUE = "{ l.loaded_attribute:id }">
				<MvASSIGN NAME = "l.orderoption:attmpat_id"				VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT ISNULL l.attribute:opt_code_or_data }">
			<MvIF EXPR = "{ l.orderoption:attr_id AND ( ( l.loaded_attribute:type EQ 'radio' ) OR ( l.loaded_attribute:type EQ 'select' ) OR ( l.loaded_attribute:type EQ 'swatch-select' ) ) }">
				<MvIF EXPR = "{ l.orderoption:attmpat_id }">
					<MvIF EXPR = "{ [ g.Feature_ATT_DB ].AttributeTemplateOption_Load_Code( l.orderoption:attmpat_id, l.attribute:opt_code_or_data, l.loaded_option ) }">
						<MvASSIGN NAME = "l.orderoption:option_id"		VALUE = "{ l.loaded_option:id }">
						<MvASSIGN NAME = "l.orderoption:opt_code"		VALUE = "{ l.loaded_option:code }">
					<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					<MvELSEIF EXPR = "{ len_var( l.attribute:opt_code_or_data ) LE 254 }">
						<MvASSIGN NAME = "l.orderoption:data"			VALUE = "{ l.attribute:opt_code_or_data }">
					<MvELSE>
						<MvASSIGN NAME = "l.orderoption:data_long"		VALUE = "{ l.attribute:opt_code_or_data }">
					</MvIF>
				<MvELSE>
					<MvIF EXPR = "{ [ g.Library_DB ].Option_Load_Code( l.orderoption:attr_id, l.attribute:opt_code_or_data, l.loaded_option ) }">
						<MvASSIGN NAME = "l.orderoption:option_id"		VALUE = "{ l.loaded_option:id }">
						<MvASSIGN NAME = "l.orderoption:opt_code"		VALUE = "{ l.loaded_option:code }">
					<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					<MvELSEIF EXPR = "{ len_var( l.attribute:opt_code_or_data ) LE 254 }">
						<MvASSIGN NAME = "l.orderoption:data"			VALUE = "{ l.attribute:opt_code_or_data }">
					<MvELSE>
						<MvASSIGN NAME = "l.orderoption:data_long"		VALUE = "{ l.attribute:opt_code_or_data }">
					</MvIF>
				</MvIF>
			<MvELSE>
				<MvIF EXPR = "{ len_var( l.attribute:opt_code_or_data ) LE 254 }">
					<MvASSIGN NAME = "l.orderoption:data"				VALUE = "{ l.attribute:opt_code_or_data }">
				<MvELSE>
					<MvASSIGN NAME = "l.orderoption:data_long"			VALUE = "{ l.attribute:opt_code_or_data }">
				</MvIF>
			</MvIF>
		<MvELSEIF EXPR = "{ NOT ISNULL l.attribute:opt_code OR NOT ISNULL l.attribute:data }">
			<MvASSIGN NAME = "l.orderoption:option_id"					VALUE = -1>
			<MvASSIGN NAME = "l.orderoption:opt_code"					VALUE = "{ l.attribute:opt_code }">

			<MvIF EXPR = "{ NOT ISNULL l.attribute:data }">
				<MvASSIGN NAME = "l.orderoption:option_id"				VALUE = 0>

				<MvIF EXPR = "{ len_var( l.attribute:data ) LE 254 }">	<MvASSIGN NAME = "l.orderoption:data"		VALUE = "{ l.attribute:data }">
				<MvELSE>												<MvASSIGN NAME = "l.orderoption:data_long"	VALUE = "{ l.attribute:data }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.loaded_attribute:id }">
				<MvIF EXPR = "{ l.loaded_attribute:attmpat_id }">
					<MvIF EXPR = "{ NOT ISNULL l.orderoption:opt_code }">
						<MvIF EXPR = "{ [ g.Module_Feature_ATT_DB ].AttributeTemplateOption_Load_Code( l.loaded_attribute:id, l.orderoption:opt_code, l.loaded_option ) }">
							<MvASSIGN NAME = "l.orderoption:option_id"	VALUE = "{ l.loaded_option:id }">
						<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
							<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
						</MvIF>
					</MvIF>
				<MvELSE>
					<MvIF EXPR = "{ NOT ISNULL l.orderoption:opt_code }">
						<MvIF EXPR = "{ [ g.Module_Library_DB ].Option_Load_Code( l.loaded_attribute:id, l.orderoption:opt_code, l.loaded_option ) }">
							<MvASSIGN NAME = "l.orderoption:option_id"	VALUE = "{ l.loaded_option:id }">
						<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
							<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
						</MvIF>
					</MvIF>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.orderoption:attr_code }">
			<MvASSIGN NAME = "l.orderoption:attr_code"	VALUE = "{ l.attribute:code }">
		</MvIF>

		<MvASSIGN NAME = "l.attribute_price" VALUE = "{ l.attribute_price + l.orderoption:price }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_Load_ProductAttribute" PARAMETERS = "product var, attribute var, orderoption var, loaded_attribute var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.loaded_attribute" 	VALUE = "">

	<MvIF EXPR = "{ l.attribute:attr_id AND l.attribute:attmpat_id }">
		<MvIF EXPR = "{ [ g.Feature_ATT_DB ].AttributeTemplateAttr_Load_ID( l.attribute:attmpat_id, l.loaded_attribute ) }">
			<MvASSIGN NAME = "l.loaded_attribute:attr_id" 	VALUE = "{ l.attribute:attr_id }">

			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ l.attribute:attr_id }">
		<MvIF EXPR = "{ [ g.Library_DB ].Attribute_Load_ID( l.orderoption:attr_id, l.loaded_attribute ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ NOT ISNULL l.orderoption:attr_code }">
		<MvIF EXPR = "{ [ g.Library_DB ].Attribute_Load_Code( l.product:id, l.orderoption:attr_code, l.loaded_attribute ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT l.loaded_attribute:id AND NOT ISNULL l.orderoption:attr_code }">
		<MvIF EXPR = "{ [ g.Feature_ATT_DB ].AttributeTemplateAttr_Load_Product_Code( l.product:id, l.orderoption:attr_code, l.loaded_attribute ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_DetermineVariant_LowLevel" PARAMETERS = "product var, orderoptions var, orderoption_count, variant_id var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.product:id EQ 0 }">
		<MvASSIGN NAME = "l.variant_id"				VALUE = 0>
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.product_attribute_count"	VALUE = "{ [ g.Library_DB ].AttributeList_Load_Product( l.product:id, l.product_attributes ) }">
	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].OrderItem_DetermineVariant_LowLevel( l.product, l.product_attributes, l.product_attribute_count,
																							l.orderoptions, l.orderoption_count,
																							l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_InsertAttributes" PARAMETERS = "orderitem var, orderoptions var, orderoption_count" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.orderoption" ARRAY = "l.orderoptions" COUNT = "{ l.orderoption_count }">
		<MvIF EXPR = "{ ( l.orderoption:type EQ 'text' OR l.orderoption:type EQ 'memo' ) AND 
						( ISNULL l.orderoption:data AND ISNULL l.orderoption:data_long ) }">
			<MvFOREACHCONTINUE>
		<MvELSEIF EXPR = "{ ( l.orderoption:type EQ 'select' 	OR 
							  l.orderoption:type EQ 'radio' 	OR 
							  l.orderoption:type EQ 'swatch-select' ) AND ( NOT l.orderoption:option_id AND ISNULL l.orderoption:opt_code AND ISNULL l.orderoption:data AND ISNULL l.orderoption:data_long ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.orderoption:order_id"	VALUE = "{ l.orderitem:order_id }">
		<MvASSIGN NAME = "l.orderoption:line_id"	VALUE = "{ l.orderitem:line_id }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderOption_Insert( l.orderoption ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_Add" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.orderitem"					VALUE = "">
	<MvASSIGN NAME = "l.orderitem:status"			VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:subscrp_id"		VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:subterm_id"		VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:shpmnt_id"		VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:rma_id"			VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:dt_instock"		VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:product_id"		VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:sku"				VALUE = "">
	<MvASSIGN NAME = "l.orderitem:price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.orderitem:weight"			VALUE = 0.00>
	<MvASSIGN NAME = "l.orderitem:taxable"			VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:upsold"			VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:tax"				VALUE = 0.00>

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'R',		'Code',		l.orderitem:code )			OR
					NOT JSON_Input_Text(	'R:100',	'Name',		l.orderitem:name )			OR
					NOT JSON_Input_Text(	'o:50',		'SKU',		l.orderitem:sku )			OR
					NOT JSON_Input_Integer(	'R',		'Quantity',	l.orderitem:quantity )		OR
					NOT JSON_Input_Number(	'o',		'Price',	l.orderitem:price,	10, 2 ) OR
					NOT JSON_Input_Number(	'o',		'Weight',	l.orderitem:weight,	10, 2 ) OR
					NOT JSON_Input_Boolean(	'o',		'Taxable',	l.orderitem:taxable ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.orderitem:quantity LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Quantity', 'Quantity must be 1 or higher' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.previous_total"				VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">
	<MvASSIGN NAME = "l.orderitem:order_id"			VALUE = "{ l.order:id }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code_WithRuntimeInventory( l.orderitem:code, l.product ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product:id"				VALUE = 0>
		<MvASSIGN NAME = "l.variant_id"				VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_ParseAttributes( l.product, l.orderoptions, l.orderoption_count, l.attribute_total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.product:id }">
		<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.product, l.orderoptions, l.orderoption_count, l.variant_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.variant_id }">
			<MvIF EXPR = "{ NOT [ g.Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.orderitem:retail"		VALUE = "{ l.product:price }">
		<MvASSIGN NAME = "l.orderitem:product_id"	VALUE = "{ l.product:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_OrderItem_Insert( l.orderitem, l.product, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_InsertAttributes( l.orderitem, l.orderoptions, l.orderoption_count ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].OrderItem_Delete( l.orderitem:order_id, l.orderitem:line_id ) }">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_PGR_UT ].Discount_Order( l.order, l.previous_total ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.product:id }">
		<MvIF EXPR = "{ [ g.Feature_GFT_DB ].GiftCertificateSales_Load_Product( l.product:id, l.giftcertificatesales ) AND
						l.giftcertificatesales:enabled }">
			<MvASSIGN NAME = "l.created_giftcertificates"		VALUE = "">
			<MvASSIGN NAME = "l.created_giftcertificate_count"	VALUE = 0>

			<MvIF EXPR = "{ NOT [ g.Feature_GFT_UT ].GiftCertificateSales_Process_OrderItem( l.giftcertificatesales, l.orderitem, l.created_giftcertificates, l.created_giftcertificate_count ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Feature_GFT_UT ].Notify_GiftCertificates_Created( l.created_giftcertificates, l.created_giftcertificate_count ) }">
		</MvIF>

		<MvASSIGN NAME = "l.created_digitaldownloads"		VALUE = "">
		<MvASSIGN NAME = "l.created_digitaldownload_count"	VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Feature_DDL_UT ].DigitalDownload_Process_OrderItem_Variant( l.orderitem, l.product, l.variant_id, l.created_digitaldownloads, l.created_digitaldownload_count ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Feature_DDL_UT ].Notify_DigitalDownloads_Created( l.created_digitaldownloads, l.created_digitaldownload_count ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Status( l.order ) OR
					NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00020', 'Order item created order_id=' $ l.order:id $ ' line_id=' $ l.orderitem:line_id $ ' code=' $ l.orderitem:code $ ' quantity=' $ l.orderitem:quantity ) }">

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.order:total ) ) }">",
		"orderitem":
		{
			<MvEVAL EXPR = "{ JSON_OrderItem( l.orderitem ) }">
		}
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionAndOrderItem_Add" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'SUBS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Create Subscription
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Feature_SUB_JSON ].JSON_Subscription_Validate_Insert( l.subscription_withoptions, l.customer, l.customeraddress, l.paymentcard, l.product, l.productsubscriptionterm, l.shipping_module ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.subscription_withoptions:order_id"	VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "l.subscription_withoptions:line_id"	VALUE = 0>

	<MvIF EXPR = "{ l.productsubscriptionterm:term EQ 0 }">		<MvASSIGN NAME = "l.subscription_withoptions:termrem" VALUE = 0>
	<MvELSE>													<MvASSIGN NAME = "l.subscription_withoptions:termrem" VALUE = "{ l.productsubscriptionterm:term - 1 }">
	</MvIF>

	<MvASSIGN NAME = "l.subscription_withoptions:termproc"	VALUE = 1>
	<MvASSIGN NAME = "l.subscription_withoptions:firstdate"	VALUE = "{ s.time_t }">
	<MvASSIGN NAME = "l.subscription_withoptions:lastdate"	VALUE = "{ s.time_t }">
	<MvASSIGN NAME = "l.subscription_withoptions:status"	VALUE = "A">
	<MvASSIGN NAME = "l.subscription_withoptions:message"	VALUE = "">
	<MvASSIGN NAME = "l.subscription_withoptions:cncldate"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:authfails"	VALUE = 0>
	<MvASSIGN NAME = "l.subscription_withoptions:lastafail"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].SubscriptionWithOptions_Insert( l.subscription_withoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00047', 'Customer Subscription \'' $ l.subscription_withoptions:id $ '\' inserted' ) }">

	<MvCOMMENT>
	|
	| Create Order Item From Subscription
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.previous_total"						VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

	<MvASSIGN NAME = "l.orderitem:order_id"					VALUE = "{ l.order:id }">
	<MvASSIGN NAME = "l.orderitem:status"					VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:shpmnt_id"				VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:rma_id"					VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:subscrp_id"				VALUE = "{ l.subscription_withoptions:id }">
	<MvASSIGN NAME = "l.orderitem:subterm_id"				VALUE = "{ l.subscription_withoptions:subterm_id }">
	<MvASSIGN NAME = "l.orderitem:dt_instock"				VALUE = 0>

	<MvASSIGN NAME = "l.option_count"						VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription_withoptions:id, l.options ) }">
	<MvASSIGN NAME = "l.attribute_count"					VALUE = "{ [ g.Module_Feature_SUB_UT ].SubscriptionOptions_BuildAttributes( l.options, l.option_count, l.attributes ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.product, 0, l.attributes, l.attribute_count, l.orderoptions, l.orderoption_count, l.variant_id ) OR
					l.variant_id EQ -1 }">
		<MvASSIGN NAME = "l.variant_id"						VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.variant_id }">
		<MvIF EXPR = "{ NOT [ g.Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.attr_price_override }">
			<MvFOREACH ITERATOR = "l.orderoption" ARRAY = "l.orderoptions" COUNT = "{ l.orderoption_count }">
				<MvASSIGN NAME = "l.orderoption:retail"		VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:base_price"	VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:price"		VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:weight"		VALUE = 0.00>
			</MvFOREACH>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.orderitem:retail"					VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.orderitem:product_id"				VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.orderitem:code"						VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.orderitem:name"						VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.orderitem:quantity"					VALUE = "{ l.subscription_withoptions:quantity }">
	<MvASSIGN NAME = "l.orderitem:price"					VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.orderitem:taxable"					VALUE = "{ l.product:taxable }">
	<MvASSIGN NAME = "l.orderitem:upsold"					VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:weight"					VALUE = "{ l.product:weight }">

	<MvASSIGN NAME = "l.part_count"							VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.product:id, l.variant_id, l.parts ) }">

	<MvIF EXPR = "{ l.variant_id EQ 0 AND l.part_count EQ 0 }">	<MvASSIGN NAME = "l.orderitem:sku" VALUE = "{ l.product:sku }">
	<MvELSEIF EXPR = "{ l.part_count EQ 1 }">					<MvASSIGN NAME = "l.orderitem:sku" VALUE = "{ l.parts[ 1 ]:sku }">
	<MvELSE>													<MvASSIGN NAME = "l.orderitem:sku" VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_OrderItem_Insert( l.orderitem, l.product, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_InsertAttributes( l.orderitem, l.orderoptions, l.orderoption_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_PGR_UT ].Discount_Order( l.order, l.previous_total ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_GFT_DB ].GiftCertificateSales_Load_Product( l.product:id, l.giftcertificatesales ) AND
					l.giftcertificatesales:enabled }">
		<MvASSIGN NAME = "l.created_giftcertificates"		VALUE = "">
		<MvASSIGN NAME = "l.created_giftcertificate_count"	VALUE = 0>

		<MvIF EXPR = "{ NOT [ g.Feature_GFT_UT ].GiftCertificateSales_Process_OrderItem( l.giftcertificatesales, l.orderitem, l.created_giftcertificates, l.created_giftcertificate_count ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Feature_GFT_UT ].Notify_GiftCertificates_Created( l.created_giftcertificates, l.created_giftcertificate_count ) }">
	</MvIF>

	<MvASSIGN NAME = "l.created_digitaldownloads"		VALUE = "">
	<MvASSIGN NAME = "l.created_digitaldownload_count"	VALUE = 0>

	<MvIF EXPR = "{ NOT [ g.Feature_DDL_UT ].DigitalDownload_Process_OrderItem_Variant( l.orderitem, l.product, l.variant_id, l.created_digitaldownloads, l.created_digitaldownload_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Feature_DDL_UT ].Notify_DigitalDownloads_Created( l.created_digitaldownloads, l.created_digitaldownload_count ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Status( l.order ) OR
					NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00048', 'Order item with subscription created order_id=' $ l.order:id $ ' line_id=' $ l.orderitem:line_id $ ' code=' $ l.orderitem:code $ ' quantity=' $ l.orderitem:quantity $ ' subscription=' $ l.subscription_withoptions:id ) }">

	<MvASSIGN NAME = "l.subscription_withoptions:line_id" VALUE = "{ l.orderitem:line_id }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Update_LowLevel( l.subscription_withoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.order:total ) ) }">",
		"orderitem":
		{
			<MvEVAL EXPR = "{ JSON_OrderItem( l.orderitem ) }">
		}
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderItem_Update" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'R', 'Line_ID',		l.line_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitem ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_orderitem"			VALUE = "{ l.orderitem }">
	<MvASSIGN NAME = "l.update_attributes"			VALUE = "{ JSON_Input_Exists( 'Attributes' ) OR JSON_Input_Exists( 'Options' ) OR JSON_Input_Exists( 'Attribute_Codes' ) }">
	<MvASSIGN NAME = "l.update_price"				VALUE = "{ JSON_Input_Exists( 'Price' ) }">

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'O', 'Code',		l.orderitem:code )			OR
					NOT JSON_Input_Text(	'O', 'Name',		l.orderitem:name )			OR
					NOT JSON_Input_Text(	'o', 'SKU',			l.orderitem:sku )			OR
					NOT JSON_Input_Integer(	'O', 'Quantity',	l.orderitem:quantity )		OR
					NOT JSON_Input_Number(	'O', 'Weight',		l.orderitem:weight,	10, 2 )	OR
					NOT JSON_Input_Number(	'O', 'Price',		l.orderitem:price,	10, 2 )	OR
					NOT JSON_Input_Boolean(	'O', 'Taxable',		l.orderitem:taxable ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.orderitem:quantity LE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Quantity', 'Quantity must be 1 or higher' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.previous_total"				VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code_WithRuntimeInventory( l.original_orderitem:code, l.original_product ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.original_product:id"	VALUE = 0>
		<MvASSIGN NAME = "l.original_variant_id"	VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.original_option_count"	VALUE = "{ [ g.Library_DB ].OrderOptionList_Load_Line( l.original_orderitem:line_id, l.original_options ) }">

		<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.original_product, l.original_options, l.original_option_count, l.original_variant_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ tolower( l.original_orderitem:code ) EQ tolower( l.orderitem:code ) }">
		<MvASSIGN NAME = "l.product"				VALUE = "{ l.original_product }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code_WithRuntimeInventory( l.orderitem:code, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.product:id"			VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.orderitem:product_id"	VALUE = "{ l.product:id }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.update_attributes }">
		<MvASSIGN NAME = "l.orderoption_count"		VALUE = "{ [ g.Library_DB ].OrderOptionList_Load_Line( l.orderitem:line_id, l.orderoptions ) }">
	<MvELSEIF EXPR = "{ NOT JSON_OrderItem_ParseAttributes( l.product, l.orderoptions, l.orderoption_count, l.attribute_total ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.product:id }">
		<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.product, l.orderoptions, l.orderoption_count, l.variant_id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.variant_id }">
			<MvIF EXPR = "{ NOT [ g.Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.orderitem:retail"		VALUE = "{ l.product:price }">
	</MvIF>

	<MvASSIGN NAME = "l.orderitem:group_id"			VALUE = "{ [ g.Library_DB ].StoreKey_Generate( 'BasketItems' ) }">

	<MvIF EXPR = "{ l.update_price }">
		<MvASSIGN NAME = "l.orderitem:base_price"	VALUE = "{ l.orderitem:price }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_OrderItem_Update( l.original_orderitem, l.original_product, l.original_variant_id,
															   l.orderitem, l.product, l.variant_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.update_attributes }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderOption_Delete_All_Line( l.orderitem:line_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT JSON_OrderItem_InsertAttributes( l.orderitem, l.orderoptions, l.orderoption_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_PGR_UT ].Discount_Order( l.order, l.previous_total ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>	

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00021', 'Order item updated order_id=' $ l.order:id $ ' line_id=' $ l.original_orderitem:line_id $ ' code=' $ l.original_orderitem:code $ ' quantity=' $ l.original_orderitem:quantity ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.order:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_SubscriptionAndOrderItem_Update" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'SUBS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'R', 'Line_ID',			l.line_id ) OR
					NOT JSON_Input_Integer(	'R', 'Subscription_ID',	l.subscription_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderItem_Load_Line( l.order:id, l.line_id, l.orderitem ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00086', 'Invalid line item' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].Subscription_Load_ID( l.subscription_id, l.subscription_withoptions ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00049', 'Subscription does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.orderitem:subscrp_id NE l.subscription_withoptions:id }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-ORD-00050', 'Order Item is not linked to the specified Subscription' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_subterm_id" VALUE = "{ l.subscription_withoptions:subterm_id }">

	<MvCOMMENT>
	|
	| Update Subscription
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Feature_SUB_JSON ].JSON_Subscription_Validate_Update( l.subscription_withoptions, l.customer, l.customeraddress, l.paymentcard, l.product, l.productsubscriptionterm, l.shipping_module ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.subscription_withoptions:subterm_id NE l.original_subterm_id }">
		<MvIF EXPR = "{ l.productsubscriptionterm:term EQ 0 }">		<MvASSIGN NAME = "l.subscription_withoptions:termrem" VALUE = 0>
		<MvELSE>													<MvASSIGN NAME = "l.subscription_withoptions:termrem" VALUE = "{ l.productsubscriptionterm:term - 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.subscription_withoptions:termproc" VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SUB_DB ].SubscriptionWithOptions_Update( l.subscription_withoptions ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00051', 'Customer Subscription \'' $ l.subscription_withoptions:id $ '\' updated' ) }">

	<MvCOMMENT>
	|
	| Update Order Item
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.original_orderitem"					VALUE = "{ l.orderitem }">
	<MvASSIGN NAME = "l.previous_total"						VALUE = "{ [ g.Library_DB ].Order_Total( l.order:id ) }">

	<MvIF EXPR = "{ l.original_orderitem:product_id EQ l.product:id }">
		<MvASSIGN NAME = "l.original_product"				VALUE = "{ l.product }">
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_ID_WithRuntimeInventory( l.original_orderitem:product_id, l.original_product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.original_product:id"		VALUE = 0>
			<MvASSIGN NAME = "l.original_variant_id"		VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.original_option_count"		VALUE = "{ [ g.Library_DB ].OrderOptionList_Load_Line( l.original_orderitem:line_id, l.original_options ) }">

			<MvIF EXPR = "{ NOT JSON_OrderItem_DetermineVariant_LowLevel( l.original_product, l.original_options, l.original_option_count, l.original_variant_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.option_count"						VALUE = "{ [ g.Module_Feature_SUB_DB ].SubscriptionOptionList_Load_Subscription( l.subscription_withoptions:id, l.options ) }">
	<MvASSIGN NAME = "l.attribute_count"					VALUE = "{ [ g.Module_Feature_SUB_UT ].SubscriptionOptions_BuildAttributes( l.options, l.option_count, l.attributes ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_Utilities ].Validate_Attributes_DetermineVariant( l.product, 0, l.attributes, l.attribute_count, l.orderoptions, l.orderoption_count, l.variant_id ) OR
					l.variant_id EQ -1 }">
		<MvASSIGN NAME = "l.variant_id"						VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.variant_id }">
		<MvIF EXPR = "{ NOT [ g.Feature_INV_RT ].Inventory_Adjust_VariantPricing( l.product, l.variant_id, l.attr_price_override ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ l.attr_price_override }">
			<MvFOREACH ITERATOR = "l.orderoption" ARRAY = "l.orderoptions" COUNT = "{ l.orderoption_count }">
				<MvASSIGN NAME = "l.orderoption:retail"		VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:base_price"	VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:price"		VALUE = 0.00>
				<MvASSIGN NAME = "l.orderoption:weight"		VALUE = 0.00>
			</MvFOREACH>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.orderitem:subterm_id"				VALUE = "{ l.subscription_withoptions:subterm_id }">
	<MvASSIGN NAME = "l.orderitem:retail"					VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.orderitem:product_id"				VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.orderitem:code"						VALUE = "{ l.product:code }">
	<MvASSIGN NAME = "l.orderitem:name"						VALUE = "{ l.product:name }">
	<MvASSIGN NAME = "l.orderitem:quantity"					VALUE = "{ l.subscription_withoptions:quantity }">
	<MvASSIGN NAME = "l.orderitem:price"					VALUE = "{ l.product:price }">
	<MvASSIGN NAME = "l.orderitem:taxable"					VALUE = "{ l.product:taxable }">
	<MvASSIGN NAME = "l.orderitem:upsold"					VALUE = 0>
	<MvASSIGN NAME = "l.orderitem:weight"					VALUE = "{ l.product:weight }">

	<MvASSIGN NAME = "l.part_count"							VALUE = "{ [ g.Module_Library_DB ].ProductList_Load_Variant( l.product:id, l.variant_id, l.parts ) }">

	<MvIF EXPR = "{ l.variant_id EQ 0 AND l.part_count EQ 0 }">	<MvASSIGN NAME = "l.orderitem:sku" VALUE = "{ l.product:sku }">
	<MvELSEIF EXPR = "{ l.part_count EQ 1 }">					<MvASSIGN NAME = "l.orderitem:sku" VALUE = "{ l.parts[ 1 ]:sku }">
	<MvELSE>													<MvASSIGN NAME = "l.orderitem:sku" VALUE = "">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].v56_OrderItem_Update( l.original_orderitem, l.original_product, l.original_variant_id,
															   l.orderitem, l.product, l.variant_id ) OR
					NOT [ g.Library_DB ].OrderOption_Delete_All_Line( l.orderitem:line_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_OrderItem_InsertAttributes( l.orderitem, l.orderoptions, l.orderoption_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_PGR_UT ].Discount_Order( l.order, l.previous_total ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00052', 'Order item with subscription update order_id=' $ l.order:id $ ' line_id=' $ l.original_orderitem:line_id $ ' code=' $ l.original_orderitem:code $ ' quantity=' $ l.original_orderitem:quantity $ ' subscription=' $ l.original_orderitem:subscrp_id ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total":			<MvEVAL EXPR = "{ l.order:total ROUND 2 }">,
		"formatted_total":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.order:total ) ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderList_Archive" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }"> </MvIF>

	<MvASSIGN NAME = "l.order_ids"				VALUE = "">
	<MvASSIGN NAME = "l.order_id_count"			VALUE = 0>
	<MvASSIGN NAME = "l.delete_payment_data"	VALUE = 1>
	<MvASSIGN NAME = "l.delete_shipping_labels"	VALUE = 1>
	<MvASSIGN NAME = "l.processed"				VALUE = 0>
	<MvASSIGN NAME = "l.errors"					VALUE = "">
	<MvASSIGN NAME = "l.error_count"			VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Boolean(			'O', 'Delete_Payment_Data',		l.delete_payment_data )			OR
					NOT JSON_Input_Boolean(			'O', 'Delete_Shipping_Labels',	l.delete_shipping_labels )		OR
					NOT JSON_Input_Integer_Array(	'R', 'Order_IDs',				l.order_ids, l.order_id_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.order_id" ARRAY = "l.order_ids" COUNT = "{ l.order_id_count }">
		<MvASSIGN NAME = "l.processed"			VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.error_count"	VALUE = "{ JSON_Response_ListProcessed_Error( l.order_id, g.Error_Code, 'Order not found', l.errors ) }">
		<MvELSE>
			<MvIF EXPR = "{ l.delete_payment_data }">
				<MvASSIGN NAME = "l.processed_orderpayment_count"		VALUE = 0>
				<MvASSIGN NAME = "l.orderpayment_count"					VALUE = "{ [ g.Library_DB ].OrderPaymentList_Load_Order( l.order:id, l.orderpayments ) }">

				<MvFOREACH ITERATOR = "l.orderpayment" ARRAY = "l.orderpayments" COUNT = "{ l.orderpayment_count }">
					<MvIF EXPR = "{ [ g.Library_DB ].Module_Load_ID_Cached( l.orderpayment:pay_id, l.module ) }">
						<MvIF EXPR = "{ NOT [ g.Module_Root $ l.module:module ].PaymentModule_Order_Delete( l.module, l.orderpayment:pay_data, l.orderpayment:pay_secdat ) }">
							<MvASSIGN NAME = "l.error_count"			VALUE = "{ JSON_Response_ListProcessed_Error( l.order:id, g.Error_Code, g.Error_Message, l.errors ) }">

							<MvFOREACHSTOP>
						</MvIF>
					</MvIF>

					<MvIF EXPR = "{ NOT [ g.Module_Feature_PAY_DB ].OrderPaymentCard_Detach_All_Order( l.order ) }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].OrderPayment_Delete( l.orderpayment ) }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					</MvIF>

					<MvASSIGN NAME = "l.processed_orderpayment_count"	VALUE = "{ l.processed_orderpayment_count + 1 }">
				</MvFOREACH>

				<MvIF EXPR = "{ l.orderpayment_count EQ l.processed_orderpayment_count }">
					<MvASSIGN NAME = "l.order:pay_id" VALUE = 0>

					<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_Payment_Module( l.order ) }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					</MvIF>
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00038', 'Payment information purged for order ' $ l.order:id ) }">
			</MvIF>

			<MvIF EXPR = "{ l.delete_shipping_labels }">
				<MvFOREACH ITERATOR = "l.ordershipmentlabel" ARRAY = "l.ordershipmentlabels" COUNT = "{ [ g.Library_DB ].OrderShipmentLabelList_Load_Order( l.order:id, l.ordershipmentlabels ) }">
					<MvIF EXPR = "{ NOT [ g.Library_DB ].OrderShipmentLabel_Delete( l.ordershipmentlabel ) }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-ORD-00039', 'Shipment label purged for order ' $ l.order:id ) }">
				</MvFOREACH>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields_Query" PARAMETERS = "query var, module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module EQ '*' }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'fields_ordr', l.modules ) }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Library_DB ].Module_Load_Features( l.module ) }">

			<MvIF EXPR = "{ NOT JSON_Order_CustomFields_Query( l.query, l.module, '*' ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT l.module:feature_hash:fields_ordr }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.code EQ '*' }">
		<MvFOREACH ITERATOR = "l.module_field" ARRAY = "l.module_fields" COUNT = "{ [ g.Module_Root $ l.module:module ].Module_Order_Fields( l.module, l.module_fields ) }">
			<MvIF EXPR = "{ NOT JSON_Order_CustomFields_Query( l.query, l.module, l.module_field:code ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'Order_CustomFields', l.ref ) }">

	<MvIF EXPR = "{ [ g.Library_DB ].SQL_Query_Total_Join_Count( l.query ) GE 50 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Order_Field_Capabilities( l.module, l.code, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:query }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGNARRAY NAME = "l.ref:data:queried"	VALUE = 1>
		<MvMEMBER NAME = "{ l.module:code }">
		<MvMEMBER NAME = "{ l.code }">
	</MvASSIGNARRAY>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Order_Field_Query( l.module, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields_Query_Filter" PARAMETERS = "query var, field_count var, module var, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.module:feature_hash:fields_ordr }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Order_Field_Capabilities( l.module, l.filter_name, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:search }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Order_Field_Query_Search( l.module, l.query, l.filter_name, l.filter_operator, l.filter_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields_Query_OrderBy" PARAMETERS = "query var, direction, module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.module:feature_hash:fields_ordr }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Order_Field_Capabilities( l.module, l.code, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:orderby }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Order_Field_Query_OrderBy( l.module, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields_Query_Index" PARAMETERS = "loaded_record var, module var, order_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.module:feature_hash:fields_ordr }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Order_Field_Query_OrderBy_LoadIndexRecord( l.module, l.loaded_record, l.order_id, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields_Initialize" PARAMETERS = "filterlist var, customfield_state var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.filterlist ) }">

	<MvASSIGN NAME = "l.customfield_state"				VALUE = "">

	<MvCOMMENT>
	|
	|	Build Custom Field Displayable data from MMBatchList "ondemandcolumns"
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.filterlist">
		<MvIF EXPR = "{ l.filter:name EQ 'ondemandcolumns' }">
			<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter:value">
				<MvIF EXPR = "{ ( 'CustomField_Values:' IN l.column_code ) NE 1 }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.module_code"		VALUE = "{ gettoken( l.column_code, ':', 2 ) }">
				<MvASSIGN NAME = "l.customfield_code"	VALUE = "{ gettoken( l.column_code, ':', 3 ) }">

				<MvREFERENCEARRAY NAME = "l.displayable" VARIABLE = "l.displayable_custom_fields">
					<MvMEMBER NAME = "{ l.module_code }">
					<MvMEMBER NAME = "{ l.customfield_code }">
				</MvREFERENCEARRAY>

				<MvASSIGN NAME = "l.displayable" VALUE = 1>
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Load the custom field modules and their associated fields
	|
	| :fields[n]
	|	:module				- reference to cached modules
	|	:code				- custom field code
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.field_count"					VALUE = 0>

	<MvFOREACH INDEX = "l.module_pos" ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'fields_ordr', l.modules ) }">
		<MvASSIGN NAME = "l.null"						VALUE = "{ [ g.Library_DB ].Module_Load_Features( l.module ) }">
		<MvASSIGN NAME = "l.module_fields"				VALUE = "">

		<MvFOREACH ITERATOR = "l.module_field" ARRAY = "l.module_fields" COUNT = "{ [ g.Module_Root $ l.module:module ].Module_Order_Fields( l.module, l.module_fields ) }">
			<MvASSIGN NAME = "l.field_count"			VALUE = "{ l.field_count + 1 }">
			<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.fields">
				<MvDIMENSION INDEX = "{ l.field_count }">
			</MvREFERENCEARRAY>

			<MvREFERENCEARRAY NAME = "l.field:module" VARIABLE = "l.modules">
				<MvDIMENSION INDEX = "{ l.module_pos }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.field:code"				VALUE = "{ l.module_field:code }">
			<MvASSIGN NAME = "l.field:type"				VALUE = "{ l.module_field:type }">

			<MvREFERENCEARRAY NAME = "l.displayable" VARIABLE = "l.displayable_custom_fields">
				<MvMEMBER NAME = "{ l.field:module:code }">
				<MvMEMBER NAME = "{ l.field:code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT l.displayable }">
				<MvIF EXPR = "{ miva_member_exists( l.displayable_custom_fields, '*' ) }">
					<MvASSIGN NAME = "l.displayable"		VALUE = 1>
				<MvELSE>
					<MvREFERENCEARRAY NAME = "l.module_displayable" VARIABLE = "l.displayable_custom_fields">
						<MvMEMBER NAME = "{ l.field:module:code }">
					</MvREFERENCEARRAY>

					<MvIF EXPR = "{ miva_member_exists( l.module_displayable, '*' ) }">
						<MvASSIGN NAME = "l.displayable"	VALUE = 1>
					</MvIF>
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.displayable }">
				<MvEVAL EXPR = "{ [ g.Module_Root $ l.field:module:module ].Module_Order_Field_Capabilities( l.field:module, l.field:code, l.field:capabilities ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFields_Initialize( l.fields, l.field_count, l.displayable_custom_fields, 'fields_ordr_map', l.customfield_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields_With_View" PARAMETERS = "customfield_state var, order_id, view" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Order_CustomFields_With_Query( l.null, l.customfield_state, l.order_id, l.view ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Order_CustomFields_With_Query" PARAMETERS = "query var, customfield_state var, order_id, view" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.customfield_state:plan_count EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'Order_CustomFields', l.ref ) }">
		
	<MvASSIGN NAME = "l.last_module_id"			VALUE = "">

	,"CustomField_Values":
	{

	<MvFOREACH ITERATOR = "l.plan" ARRAY = "l.customfield_state:plan" COUNT = "{ l.customfield_state:plan_count }">
		<MvIF EXPR = "{ l.plan:module:id NE l.last_module_id }">
			<MvIF EXPR = "{ NOT ISNULL l.last_module_id }">
				},
			</MvIF>

			"<MvEVAL EXPR = "{ l.plan:module:encoded_code }">":
			{

			<MvASSIGN NAME = "l.last_module_id"		VALUE = "{ l.plan:module:id }">
			<MvASSIGN NAME = "l.output_field_count"	VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.plan:field_single }">
			<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried">
				<MvMEMBER NAME = "{ l.plan:module:code }">
				<MvMEMBER NAME = "{ l.plan:field_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT ISNULL l.view AND l.queried AND l.plan:capabilities:query }">	<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Order_Field_Query_Value( l.plan:module, l.view, l.plan:field_code ) }">
			<MvELSE>																			<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Order_Field_Value( l.plan:module, l.order_id, l.plan:field_code ) }">
			</MvIF>

			<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
				,
			</MvIF>

			"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
		<MvELSEIF EXPR = "{ l.plan:field_array }">
			<MvASSIGN NAME = "l.values" VALUE = "">

			<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
				,
			</MvIF>

			<MvIF EXPR = "{ l.plan:module:api_ver LT 9.08 }">
				<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Order_Field_Value( l.plan:module, l.order_id, l.plan:field_code ) }">

				"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
			<MvELSE>
				"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">":
				[
				<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" INDEX = "l.pos" COUNT = "{ [ g.Module_Root $ l.plan:module:module ].Module_Order_Field_Value_Array( l.plan:module, l.order_id, l.plan:field_code, l.values ) }">
					<MvIF EXPR = "{ l.pos GT 1 }">
						,	
					</MvIF>

					<MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
				</MvFOREACH>
				]
			</MvIF>
		<MvELSEIF EXPR = "{ NOT ISNULL l.plan:field_map }">
			<MvASSIGN NAME = "l.mapped"			VALUE = 0>

			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.plan:fields" COUNT = "{ l.plan:field_count }">
				<MvASSIGN NAME = "l.loaded"		VALUE = 0>

				<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried">
					<MvMEMBER NAME = "{ l.plan:module:code }">
					<MvMEMBER NAME = "{ l.field:code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ NOT ISNULL l.view AND l.queried AND l.field:capabilities:query }">
					<MvASSIGN NAME = "l.loaded" VALUE = 1>
					<MvASSIGN NAME = "l.value"	VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Order_Field_Query_Value( l.plan:module, l.view, l.field:code ) }">
				<MvELSEIF EXPR = "{ NOT l.mapped }">
					<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Order_Fields_Mapped( l.plan:module, l.order_id, l.plan:field_map, l.module_output ) }">
					<MvASSIGN NAME = "l.mapped" VALUE = 1>
				</MvIF>

				<MvIF EXPR = "{ NOT l.loaded }">
					<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.module_output">
						<MvMEMBER NAME = "{ l.field:code }">
					</MvREFERENCEARRAY>
				</MvIF>

				<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
					,
				</MvIF>

				"<MvEVAL EXPR = "{ l.field:encoded_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.field:base_type, l.field:type_data, l.value ) }">
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.last_module_id }">
		}
	</MvIF>

	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderCustomFieldList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">									<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'ORDR', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ [ g.Library_Utilities ].OrderCustomFieldList_Load( l.customfields ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.count ) }">
				"code":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:code ) }">",
				"name":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:name ) }">",
				"type":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:type ) }">",
				"public":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:public ) }">,
				"readonly":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:readonly ) }">,
				"searchable":	<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:search ) }">,
				"sortable":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:orderby ) }">,
				"module":
				{
					<MvEVAL EXPR = "{ JSON_Module( l.customfield:module ) }">
				}
				<MvIF EXPR = "{ l.customfield:type EQ 'choice' }">
					,
					"choices":
					[
						<MvFOREACH ITERATOR = "l.choice" ARRAY = "l.customfield:choices" INDEX = "l.choice_pos">
							<MvIF EXPR = "{ l.choice_pos GT 1 }">
								,
							</MvIF>

							"<MvEVAL EXPR = "{ JSON_Encode( l.choice ) }">"
						</MvFOREACH>
					]
				</MvIF>
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OrderCustomFields_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'ORDR', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_Load( l.order ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Order_CustomFields( l.order ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Order_Update_LastUpdated( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

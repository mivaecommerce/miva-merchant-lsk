<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2024 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-JSN-PRD-
| Next Error Code: 111   
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Product" PARAMETERS = "product var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ondemandcolumns:descrip" VALUE = 1>

	<MvEVAL EXPR = "{ JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_OnDemandColumns" PARAMETERS = "product var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":				<MvEVAL EXPR = "{ int( l.product:id ) }">,
	"disp_order":		<MvEVAL EXPR = "{ int( l.product:disp_order ) }">,
	"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.product:code ) }">",
	"sku":				"<MvEVAL EXPR = "{ JSON_Encode( l.product:sku ) }">",
	"name":				"<MvEVAL EXPR = "{ JSON_Encode( l.product:name ) }">",
	"thumbnail":		"<MvEVAL EXPR = "{ JSON_Encode( l.product:thumbnail ) }">",
	"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.product:image ) }">",
	"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.product:price ) }">,
	"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.product:price ) ) }">",
	"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.product:cost ) }">,
	"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.product:cost ) ) }">",
	"page_code":		"<MvEVAL EXPR = "{ JSON_Encode( l.product:page_code ) }">",
	"page_id":			<MvEVAL EXPR = "{ int( l.product:page_id ) }">,

	<MvIF EXPR = "{ l.ondemandcolumns:descrip }">
		"descrip":		"<MvEVAL EXPR = "{ JSON_Encode( l.product:descrip ) }">",
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:catcount }">
		"catcount":		<MvEVAL EXPR = "{ int( l.product:catcount ) }">,
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:cancat_code }">
		"cancat_code":	"<MvEVAL EXPR = "{ JSON_Encode( l.product:cancat_code ) }">",
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:product_inventory }">
		"product_inventory_active":	<MvEVAL EXPR = "{ JSON_Boolean( l.product:product_inventory_active ) }">,
		"product_inventory":		<MvEVAL EXPR = "{ int( l.product:product_inventory ) }">,
	</MvIF>

	"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.product:weight ) }">,
	"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.product:weight ) ) }">",
	"taxable":			<MvEVAL EXPR = "{ JSON_Boolean( l.product:taxable ) }">,
	"active":			<MvEVAL EXPR = "{ JSON_Boolean( l.product:active ) }">,
	"page_title":		"<MvEVAL EXPR = "{ JSON_Encode( l.product:page_title ) }">",
	"dt_created":		<MvEVAL EXPR = "{ int( l.product:dt_created ) }">,
	"dt_updated":		<MvEVAL EXPR = "{ int( l.product:dt_updated ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:productinventorysettings }">
		<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventoryProductSettings_Load( l.product:id, l.inventoryproductsettings ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_INV_DB ].InventoryDefaultProductSettings( l.inventoryproductsettings ) }">
			</MvIF>

			, "productinventorysettings":
			{
				"active": 		<MvEVAL EXPR = "{ JSON_Boolean( l.inventoryproductsettings:active ) }">,
				"in_short": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:in_short ) }">",
				"in_long": 		"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:in_long ) }">",
				"low_track": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:low_track ) }">",
				"low_level": 	<MvEVAL EXPR = "{ int( l.inventoryproductsettings:low_level ) }">,
				"low_lvl_d": 	<MvEVAL EXPR = "{ JSON_Boolean( l.inventoryproductsettings:low_lvl_d ) }">,
				"low_short": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:low_short ) }">",
				"low_long": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:low_long ) }">",
				"out_track": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:out_track ) }">",
				"out_hide": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:out_hide ) }">",
				"out_level": 	<MvEVAL EXPR = "{ int( l.inventoryproductsettings:out_level ) }">,
				"out_lvl_d": 	<MvEVAL EXPR = "{ JSON_Boolean( l.inventoryproductsettings:out_lvl_d ) }">,
				"out_short": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:out_short ) }">",
				"out_long": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:out_long ) }">",
				"ltd_long": 	"<MvEVAL EXPR = "{ JSON_Encode( l.inventoryproductsettings:ltd_long ) }">"
			}
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:attributes }">
		<MvASSIGN NAME = "l.attribute_count"						VALUE = 0>

		,"attributes":
		[
		<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes" COUNT = "{ [ g.Library_DB ].AttributeList_Load_Product( l.product:id, l.attributes ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.attribute_count ) }">
			<MvEVAL EXPR = "{ JSON_ProductAttribute( l.attribute ) }">

			<MvIF EXPR = "{ l.attribute:type NE 'template' }">
				<MvIF EXPR = "{ ( l.attribute:type EQ 'radio' ) OR ( l.attribute:type EQ 'select' ) OR ( l.attribute:type EQ 'swatch-select' ) }">
					<MvASSIGN NAME = "l.option_count"				VALUE = 0>

					,"options":
					[
					<MvFOREACH ITERATOR = "l.option" ARRAY = "l.options" COUNT = "{ [ g.Library_DB ].OptionList_Load_Attribute( l.attribute:id, l.options ) }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.option_count ) }">
						<MvEVAL EXPR = "{ JSON_ProductOption( l.option ) }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					</MvFOREACH>
					]
				</MvIF>
			<MvELSE>
				<MvASSIGN NAME = "l.template_attribute_count"		VALUE = 0>

				,"attributes":
				[
				<MvFOREACH ITERATOR = "l.template_attr" ARRAY = "l.template_attrs" COUNT = "{ [ g.Feature_ATT_DB ].AttributeTemplateAttrList_Load_Template( l.attribute:attemp_id, l.template_attrs ) }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.template_attribute_count ) }">
					<MvEVAL EXPR = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute( l.template_attr ) }">

					<MvIF EXPR = "{ ( l.template_attr:type EQ 'radio' ) OR ( l.template_attr:type EQ 'select' ) OR ( l.template_attr:type EQ 'swatch-select' ) }">
						<MvASSIGN NAME = "l.template_option_count"	VALUE = 0>

						,"options":
						[
						<MvFOREACH ITERATOR = "l.template_option" ARRAY = "l.template_options" COUNT = "{ [ g.Feature_ATT_DB ].AttributeTemplateOptionList_Load_Attribute( l.template_attr:id, l.template_options ) }">
							<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.template_option_count ) }">
							<MvEVAL EXPR = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplateOption( l.template_option ) }">
							<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
						</MvFOREACH>
						]
					</MvIF>

					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
				</MvFOREACH>
				]
			</MvIF>

			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:imagetype_count }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			<MvREFERENCEARRAY NAME = "l.image_id" VARIABLE = "l.product">
				<MvMEMBER NAME = "{ 'imagetype_' $ l.imagetype:id }">
			</MvREFERENCEARRAY>

			, "imagetype:<MvEVAL EXPR = "{ JSON_Encode( l.imagetype:code ) }">": <MvEVAL EXPR = "{ int( l.image_id ) }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:productimagedata }">
		<MvASSIGN NAME = "l.productimagedata_count"		VALUE = 0>

		,"productimagedata":
		[
		<MvFOREACH ITERATOR = "l.productimagedata" ARRAY = "l.productimagedatalist" COUNT = "{ [ g.Library_DB ].ProductImageDataList_Load_Product( l.product:id, l.productimagedatalist ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.productimagedata_count ) }">
			<MvEVAL EXPR = "{ JSON_ProductImageData( l.productimagedata ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:categories }">
		<MvASSIGN NAME = "l.category_count"				VALUE = 0>

		,"categories":
		[
		<MvFOREACH ITERATOR = "l.category" ARRAY = "l.categories" COUNT = "{ [ g.Library_DB ].CategoryList_Load_Product( l.product:id, l.categories ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.category_count ) }">
			<MvEVAL EXPR = "{ JSON_Category( l.category ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:productshippingrules }">
		<MvASSIGN NAME = "l.method_count"				VALUE = 0>

		<MvIF EXPR = "{ [ g.Feature_SHP_DB ].ProductShippingRules_Load_ProductOrDefault( l.product:id, l.productshippingrules ) }">
			,"productshippingrules":
			{
				<MvEVAL EXPR = "{ [ g.Feature_SHP_JSON ].JSON_ProductShippingRules( l.productshippingrules ) }">

				,"methods":
				[
				<MvFOREACH ITERATOR = "l.productshippingmethod" ARRAY = "l.productshippingmethods" COUNT = "{ [ g.Feature_SHP_DB ].ProductShippingMethodList_Load_Product( l.product:id, l.productshippingmethods ) }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.method_count ) }">
					<MvEVAL EXPR = "{ [ g.Feature_SHP_JSON ].JSON_ProductShippingMethod( l.productshippingmethod ) }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
				</MvFOREACH>
				]
			}
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:relatedproducts }">
		<MvASSIGN NAME = "l.relatedproduct_count"		VALUE = 0>

		,"relatedproducts":
		[
		<MvFOREACH ITERATOR = "l.relatedproduct" ARRAY = "l.relatedproducts" COUNT = "{ [ g.Library_DB ].ProductList_Load_Related( l.product:id, l.relatedproducts ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.relatedproduct_count ) }">
			<MvEVAL EXPR = "{ JSON_Product_OnDemandColumns( l.relatedproduct, l.null ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:uris }">
		<MvASSIGN NAME = "l.uri_count"					VALUE = 0>

		,"uris":
		[
		<MvFOREACH ITERATOR = "l.uri" ARRAY = "l.uris" COUNT = "{ [ g.Feature_URI_DB ].URIList_Load_Product( l.product:id, l.uris ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.uri_count ) }">
			<MvEVAL EXPR = "{ [ g.Feature_URI_JSON ].JSON_URI( l.uri ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:url }">
		<MvASSIGN NAME = "l.flags"				VALUE = "">
		<MvASSIGN NAME = "l.flags:nosession"	VALUE = 1>

		,"url": "<MvEVAL EXPR = "{ JSON_Encode( [ g.Feature_URI_UT ].Store_Product_URL( l.product, l.flags ) ) }">"
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:subscriptionsettings }">
		<MvIF EXPR = "{ [ g.Feature_SUB_DB ].ProductSubscriptionSettings_Load_ProductOrDefault( l.product:id, l.productsubscriptionsettings ) }">
			,"subscriptionsettings":
			{
				<MvEVAL EXPR = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionSettings( l.productsubscriptionsettings ) }">
			}
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:subscriptionterms }">
		<MvASSIGN NAME = "l.productsubscriptionterm_count" VALUE = 0>

		,"subscriptionterms":
		[
			<MvFOREACH ITERATOR = "l.productsubscriptionterm" ARRAY = "l.productsubscriptionterms" COUNT = "{ [ g.Feature_SUB_DB ].ProductSubscriptionTermList_Load_Product( l.product:id, l.productsubscriptionterms ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.productsubscriptionterm_count ) }">
				<MvEVAL EXPR = "{ [ g.Feature_SUB_JSON ].JSON_ProductSubscriptionTerm( l.productsubscriptionterm ) }">
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			</MvFOREACH>
		]
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFieldsList_Load_Cached" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:json_product_customfieldslist_load_cached">

	<MvIF EXPR = "{ ISNULL l.cache }">
		<MvASSIGN NAME = "l.cache:result" VALUE = "{ JSON_Product_CustomFieldsList_Load( l.cache:fields ) }">
	</MvIF>

	<MvASSIGN NAME = "l.fields" VALUE = "{ l.cache:fields }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFieldsList_Load" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Load the custom field modules and their associated fields
	|
	| :fields[n]
	|	:code	- custom field code
	|	:type	- custom field type
	|	:public	- custom field public status
	|	:module	- reference to cached modules
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.fields"			VALUE = "">
	<MvASSIGN NAME = "l.field_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" INDEX = "l.pos" COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'fields_prod', l.modules ) }">
		<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Library_DB ].Module_Load_Features( l.module ) }">
		<MvASSIGN NAME = "l.module_fields"	VALUE = "">

		<MvFOREACH ITERATOR = "l.module_field" ARRAY = "l.module_fields" COUNT = "{ [ g.Module_Root $ l.module:module ].Module_Product_Fields( l.module, l.module_fields ) }">
			<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.fields">
				<MvDIMENSION INDEX = "{ ++l.field_count }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.field:code"				VALUE = "{ l.module_field:code }">
			<MvASSIGN NAME = "l.field:type"				VALUE = "{ l.module_field:type }">
			<MvASSIGN NAME = "l.field:public"			VALUE = "{ l.module_field:public }">
			<MvREFERENCEARRAY NAME = "l.field:module"	VARIABLE = "l.modules">
				<MvDIMENSION INDEX = "{ l.pos }">
			</MvREFERENCEARRAY>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields_Initialize" PARAMETERS = "filterlist var, customfield_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field_count" VALUE = "{ JSON_Product_CustomFieldsList_Load( l.fields ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Product_CustomFieldList_Initialize( l.filterlist, l.fields, l.field_count, l.customfield_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFieldList_Initialize" PARAMETERS = "filterlist var, fields var, field_count, customfield_state var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.filterlist ) }">

	<MvASSIGN NAME = "l.customfield_state"				VALUE = "">

	<MvCOMMENT>
	|
	|	Build Custom Field Displayable data from MMBatchList "ondemandcolumns"
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.filterlist">
		<MvIF EXPR = "{ l.filter:name EQ 'ondemandcolumns' }">
			<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter:value">
				<MvIF EXPR = "{ ( 'CustomField_Values:' IN l.column_code ) NE 1 }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.module_code"		VALUE = "{ gettoken( l.column_code, ':', 2 ) }">
				<MvASSIGN NAME = "l.customfield_code"	VALUE = "{ gettoken( l.column_code, ':', 3 ) }">

				<MvREFERENCEARRAY NAME = "l.displayable" VARIABLE = "l.displayable_custom_fields">
					<MvMEMBER NAME = "{ l.module_code }">
					<MvMEMBER NAME = "{ l.customfield_code }">
				</MvREFERENCEARRAY>

				<MvASSIGN NAME = "l.displayable" VALUE = 1>
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
		<MvREFERENCEARRAY NAME = "l.displayable" VARIABLE = "l.displayable_custom_fields">
			<MvMEMBER NAME = "{ l.field:module:code }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT l.displayable }">
			<MvIF EXPR = "{ miva_member_exists( l.displayable_custom_fields, '*' ) }">
				<MvASSIGN NAME = "l.displayable"		VALUE = 1>
			<MvELSE>
				<MvREFERENCEARRAY NAME = "l.module_displayable" VARIABLE = "l.displayable_custom_fields">
					<MvMEMBER NAME = "{ l.field:module:code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ miva_member_exists( l.module_displayable, '*' ) }">
					<MvASSIGN NAME = "l.displayable"	VALUE = 1>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.displayable AND l.field:module:api_ver GE 9.07 }">
			<MvEVAL EXPR = "{ [ g.Module_Root $ l.field:module:module ].Module_Product_Field_Capabilities( l.field:module, l.field:code, l.field:capabilities ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFields_Initialize( l.fields, l.field_count, l.displayable_custom_fields, 'fields_prod_map', l.customfield_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields" PARAMETERS = "customfield_state var, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Product_CustomFields_With_View( l.customfield_state, l.product_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields_With_View" PARAMETERS = "customfield_state var, product_id, view" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Product_CustomFields_With_Query( l.null, l.customfield_state, l.product_id, l.view ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields_With_Query" PARAMETERS = "query var, customfield_state var, product_id, view" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.customfield_state:plan_count EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'Product_CustomFields', l.ref ) }">

	<MvASSIGN NAME = "l.last_module_id"			VALUE = "">

	,"CustomField_Values":
	{

	<MvFOREACH ITERATOR = "l.plan" ARRAY = "l.customfield_state:plan" COUNT = "{ l.customfield_state:plan_count }">
		<MvIF EXPR = "{ l.plan:module:id NE l.last_module_id }">
			<MvIF EXPR = "{ NOT ISNULL l.last_module_id }">
				},
			</MvIF>

			"<MvEVAL EXPR = "{ l.plan:module:encoded_code }">":
			{

			<MvASSIGN NAME = "l.last_module_id"		VALUE = "{ l.plan:module:id }">
			<MvASSIGN NAME = "l.output_field_count"	VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.plan:field_single }">
			<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried">
				<MvMEMBER NAME = "{ l.plan:module:code }">
				<MvMEMBER NAME = "{ l.plan:field_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT ISNULL l.view AND l.queried AND l.plan:capabilities:query }">	<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Product_Field_Query_Value( l.plan:module, l.view, l.plan:field_code ) }">
			<MvELSE>																			<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Product_Field_Value( l.plan:module, l.product_id, l.plan:field_code ) }">
			</MvIF>

			<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
				,
			</MvIF>

			"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
		<MvELSEIF EXPR = "{ l.plan:field_array }">
			<MvASSIGN NAME = "l.values" VALUE = "">

			<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
				,
			</MvIF>

			<MvIF EXPR = "{ l.plan:module:api_ver LT 9.08 }">
				<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Product_Field_Value( l.plan:module, l.product_id, l.plan:field_code ) }">

				"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
			<MvELSE>
				"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">":
				[
				<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" INDEX = "l.pos" COUNT = "{ [ g.Module_Root $ l.plan:module:module ].Module_Product_Field_Value_Array( l.plan:module, l.product_id, l.plan:field_code, l.values ) }">
					<MvIF EXPR = "{ l.pos GT 1 }">
						,	
					</MvIF>

					<MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
				</MvFOREACH>
				]
			</MvIF>
		<MvELSEIF EXPR = "{ NOT ISNULL l.plan:field_map }">
			<MvASSIGN NAME = "l.mapped"			VALUE = 0>

			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.plan:fields" COUNT = "{ l.plan:field_count }">
				<MvASSIGN NAME = "l.loaded"		VALUE = 0>

				<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried">
					<MvMEMBER NAME = "{ l.plan:module:code }">
					<MvMEMBER NAME = "{ l.field:code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ NOT ISNULL l.view AND l.queried AND l.field:capabilities:query }">
					<MvASSIGN NAME = "l.loaded" VALUE = 1>
					<MvASSIGN NAME = "l.value"	VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Product_Field_Query_Value( l.plan:module, l.view, l.field:code ) }">
				<MvELSEIF EXPR = "{ NOT l.mapped }">
					<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Product_Fields_Mapped( l.plan:module, l.product_id, l.plan:field_map, l.module_output ) }">
					<MvASSIGN NAME = "l.mapped" VALUE = 1>
				</MvIF>

				<MvIF EXPR = "{ NOT l.loaded }">
					<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.module_output">
						<MvMEMBER NAME = "{ l.field:code }">
					</MvREFERENCEARRAY>
				</MvIF>

				<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
					,
				</MvIF>

				"<MvEVAL EXPR = "{ l.field:encoded_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.field:base_type, l.field:type_data, l.value ) }">
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.last_module_id }">
		}
	</MvIF>

	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductCustomFieldList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ [ g.Library_Utilities ].ProductCustomFieldList_Load( l.customfields ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.count ) }">
				"code":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:code ) }">",
				"name":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:name ) }">",
				"type":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:type ) }">",
				"public":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:public ) }">,
				"readonly":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:readonly ) }">,
				"searchable":	<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:search ) }">,
				"sortable":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:orderby ) }">,
				"module":
				{
					<MvEVAL EXPR = "{ JSON_Module( l.customfield:module ) }">
				}
				<MvIF EXPR = "{ l.customfield:type EQ 'choice' }">
					,
					"choices":
					[
						<MvFOREACH ITERATOR = "l.choice" ARRAY = "l.customfield:choices" INDEX = "l.choice_pos">
							<MvIF EXPR = "{ l.choice_pos GT 1 }">
								,
							</MvIF>

							"<MvEVAL EXPR = "{ JSON_Encode( l.choice ) }">"
						</MvFOREACH>
					]
				</MvIF>
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductCustomFieldList_Load_Query" PARAMETERS = "" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'code',		'l.customfield:code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'name',		'l.customfield:name' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'type',		'l.customfield:type' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_CHAR( l.available_filters, 'module_name',	'l.customfield:module:name' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_BOOL( l.available_filters, 'public',		'l.customfield:public' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_BOOL( l.available_filters, 'readonly',	'l.customfield:readonly' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_BOOL( l.available_filters, 'searchable',	'l.customfield:capabilities:search' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_MivaScript_BOOL( l.available_filters, 'sortable',	'l.customfield:capabilities:orderby' ) }">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o',		'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o',		'Sort',		l.sort )	OR
					NOT JSON_Input_Integer(	'o:nonneg',	'Offset',	l.offset )	OR
					NOT JSON_Input_Integer(	'o',		'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.customfield_count"	VALUE = "{ [ g.Library_Utilities ].ProductCustomFieldList_Load( l.customfields ) }">
	<MvASSIGN NAME = "l.search_expression"	VALUE = "1 EQ 1">

	<MvEVAL EXPR = "{ JSON_Filter_MivaScript( l.search_expression, l.filter, l.available_filters ) }">

	<MvASSIGN NAME = "l.total_count"		VALUE = "{ miva_array_filter_ref( l.customfields, 1, l.customfield, l.search_expression, l.filtered_customfields ) }">
	<MvASSIGN NAME = "l.null"				VALUE = "{ miva_array_sort( l.filtered_customfields, 'ProductCustomFieldList_Sort_Callback', l.sort ) }">

	<MvASSIGN NAME = "l.output_count"		VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"data":
		[
			<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.filtered_customfields" FIRST = "{ l.offset + 1 }" LAST = "{ l.total_count }">
				<MvIF EXPR = "{ ( l.output_count LT l.count ) OR ( l.count EQ 0 ) }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.output_count ) }">
						"code":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:code ) }">",
						"name":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:name ) }">",
						"type":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:type ) }">",
						"public":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:public ) }">,
						"readonly":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:readonly ) }">,
						"searchable":	<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:search ) }">,
						"sortable":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:orderby ) }">,
						"module":
						{
							<MvEVAL EXPR = "{ JSON_Module( l.customfield:module ) }">
						}
						<MvIF EXPR = "{ l.customfield:type EQ 'choice' }">
							,
							"choices":
							[
								<MvFOREACH ITERATOR = "l.choice" ARRAY = "l.customfield:choices" INDEX = "l.choice_pos">
									<MvIF EXPR = "{ l.choice_pos GT 1 }">
										,
									</MvIF>

									"<MvEVAL EXPR = "{ JSON_Encode( l.choice ) }">"
								</MvFOREACH>
							]
						</MvIF>
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
				</MvIF>
			</MvFOREACH>
		],
		"total_count": 	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Loaders_Present" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Exists( 'Product_ID' ) }">			<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ JSON_Input_Exists( 'Edit_Product' ) }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ JSON_Input_Exists( 'Product_Code' ) }">		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ JSON_Input_Exists( 'Product_SKU' ) }">		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Load" PARAMETERS = "product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'Product_ID', l.product_id ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_ID( l.product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00070', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Edit_Product', l.product_code ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00013', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Product_Code', l.product_code ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00014', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Product_SKU', l.product_sku ) }">
		<MvASSIGN NAME = "l.product_count"	VALUE = "{ [ g.Library_DB ].ProductList_Load_SKU( l.product_sku, l.products ) }">
		<MvIF EXPR = "{ l.product_count EQ 0 }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00071', 'Product not found' ) }">
		<MvELSEIF EXPR = "{ l.product_count GT 1 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00072', 'Ambiguous product SKU' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product"		VALUE = "{ l.products[ 1 ] }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00073', 'Unable to load product: One of Product_ID, Edit_Product, Product_Code or Product_SKU must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Load_WithRuntimeInventory" PARAMETERS = "product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'Product_ID', l.product_id ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_ID_WithRuntimeInventory( l.product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00093', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Edit_Product', l.product_code ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code_WithRuntimeInventory( l.product_code, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00094', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Product_Code', l.product_code ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code_WithRuntimeInventory( l.product_code, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00095', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Product_SKU', l.product_sku ) }">
		<MvASSIGN NAME = "l.product_count"	VALUE = "{ [ g.Library_DB ].ProductList_Load_SKU_WithRuntimeInventory( l.product_sku, l.products ) }">
		<MvIF EXPR = "{ l.product_count EQ 0 }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00096', 'Product not found' ) }">
		<MvELSEIF EXPR = "{ l.product_count GT 1 }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00097', 'Ambiguous product SKU' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product"		VALUE = "{ l.products[ 1 ] }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Utilities ].Error( 'MER-JSN-PRD-00098', 'Unable to load product: One of Product_ID, Edit_Product, Product_Code or Product_SKU must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Load_Element" PARAMETERS = "input_element var, product var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Element_Retrieve( l.input_element, 'product_id', l.product_id ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_ID( l.product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, 'product_id', g.Error_Code $ ': ' $ g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, 'product_id', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Element_Retrieve( l.input_element, 'product_code', l.product_code ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code( l.product_code, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, 'product_code', g.Error_Code $ ': ' $ g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, 'product_code', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Element_Retrieve( l.input_element, 'product_sku', l.product_sku ) }">
		<MvASSIGN NAME = "l.product_count"	VALUE = "{ [ g.Library_DB ].ProductList_Load_SKU( l.product_sku, l.products ) }">
		<MvIF EXPR = "{ l.product_count EQ 0 }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, 'product_sku', g.Error_Code $ ': ' $ g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, 'product_sku', 'Product not found' ) }">
		<MvELSEIF EXPR = "{ l.product_count GT 1 }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, 'product_sku', 'Ambiguous product SKU' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product"		VALUE = "{ l.products[ 1 ] }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Input_Element_Error( l.input_element, '', 'One of product_id, product_code or product_sku must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Load_Code" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_Code( g.Product_Code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.product:pgrpcount }">
		<MvIF EXPR = "{ NOT g.Customer_ID }">
			<MvASSIGN NAME = "l.customer"	VALUE = "">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( g.Customer_ID, l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.product:price, l.product:cost ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Product( l.product ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_ID( g.Product_ID, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.product:pgrpcount }">
		<MvIF EXPR = "{ NOT g.Customer_ID }">
			<MvASSIGN NAME = "l.customer"	VALUE = "">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( g.Customer_ID, l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.product:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.product:price, l.product:cost ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Product( l.product ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Load_CodeMatch" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Count"					VALUE = "{ int( g.Count ) }">

	<MvIF EXPR = "{ NOT g.Customer_ID }">
		<MvASSIGN NAME = "l.customer"			VALUE = "">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_CUS_DB ].Customer_Load_ID( g.Customer_ID, l.customer ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products',
																	  'SELECT * FROM ' $ g.Store_Table_Prefix $ 'Products WHERE ' $ [ g.Library_Native_DBAPI ].DB_Compare_Upper( 'code' )  $ ' LIKE ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' ORDER BY disp_order', 'g.Product_Code',
																	  0, g.Count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00006', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count"			VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">	
	[
	<MvWHILE EXPR = "{ ( l.product_count LT g.Count ) AND ( NOT Products.d.EOF ) }">
		<MvIF EXPR = "{ l.product_count NE 0 }">
			,
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Library_DB ].Product_Read( l.product ) }">

		<MvIF EXPR = "{ Products.d.pgrpcount }">
			<MvASSIGN NAME = "l.product:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.product:price, l.product:cost ) }">
		</MvIF>

		{
			<MvEVAL EXPR = "{ JSON_Product( l.product ) }">
		}

		<MvASSIGN NAME = "l.product_count"		VALUE = "{ l.product_count + 1 }">
		<MvSKIP NAME = "Merchant" VIEW = "Products"	ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Load_SKUMatch" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.query"			VALUE = "">
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.customer"		VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Text(	'R', 'Product_SKU',	l.product_sku ) OR
					NOT JSON_Input_Integer(	'o', 'Count',		l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.query, '*' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Products', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, [ g.Library_Native_DBAPI ].DB_Compare_Upper( 'sku' )  $ ' LIKE ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ), [ g.Library_DB ].SQL_Query_Field( l.product_sku ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_ORDER_BY( l.query,	'disp_order', 'ASC' ) }">

	<MvASSIGN NAME = "l.sql" VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.query, l.fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.sql, l.fields, 0, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00085', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].Product_Read( l.product ) }">

		<MvIF EXPR = "{ Products.d.pgrpcount }">
			<MvASSIGN NAME = "l.product:price"	VALUE = "{ [ g.Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.product:price, l.product:cost ) }">
		</MvIF>

		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.product_count ) }">
			<MvEVAL EXPR = "{ JSON_Product( l.product ) }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

		<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Adjust_Inventory" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'INVT', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.adjustment_count"				VALUE = 0>
	<MvASSIGN NAME = "l.adjustments"					VALUE = "">

	<MvIF EXPR = "{ JSON_Input_Exists( 'Inventory_Adjustments' ) }">
		<MvFOREACH ITERATOR = "l.input_adjustment" ARRAY = "l.input_adjustments" COUNT = "{ JSON_Input_Array( 'Inventory_Adjustments', l.input_adjustments ) }">
			<MvIF EXPR = "{	NOT JSON_Product_Load_Element(	l.input_adjustment, l.product ) OR
							NOT JSON_Input_Element_Integer(	l.input_adjustment, 'R', 'adjustment', l.adjustment:adjustment ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.adjustment:product_id"	VALUE = "{ l.product:id }">
			<MvASSIGN NAME = "l.adjustment_count"		VALUE = "{ miva_array_insert_var( l.adjustments, l.adjustment, -1 ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve_Raw( 'Product_IDs', l.input_product_ids ) OR
						JSON_Input_Retrieve_Raw( 'Adjustments',	l.input_adjustments ) }">
		<MvASSIGN NAME = "l.adjustment_count"	VALUE = "{ JSON_Array_Coalesce_Integer( l.input_product_ids,	l.adjustments, 'product_id' ) }">
		<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Array_Coalesce_Integer( l.input_adjustments,	l.adjustments, 'adjustment' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.adjustment" ARRAY = "l.adjustments" COUNT = "{ l.adjustment_count }">
		<MvIF EXPR = "{ [ g.Feature_INV_DB ].InventoryProductSettings_Load( l.adjustment:product_id, l.settings ) }">
			<MvIF EXPR = "{ NOT l.settings:active }">
				<MvASSIGN NAME = "l.settings:active"	VALUE = 1>
				
				<MvIF EXPR = "{ NOT [ g.Feature_INV_DB ].InventoryProductSettings_Update( l.settings ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Feature_INV_DB ].InventoryProductCount_Adjust( l.adjustment:product_id, l.adjustment:adjustment ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00003', 'Inventory adjusted for product ' $ l.adjustment:product_id ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Feature_INV_DB ].InventoryDefaultProductSettings( l.settings ) }">

			<MvASSIGN NAME = "l.settings:product_id"	VALUE = "{ l.adjustment:product_id }">
			<MvASSIGN NAME = "l.settings:active"		VALUE = 1>

			<MvIF EXPR = "{ NOT [ g.Feature_INV_DB ].InventoryProductSettings_Insert( l.settings ) OR
							NOT [ g.Feature_INV_DB ].InventoryProductCount_Insert( l.adjustment:product_id, l.adjustment:adjustment ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00004', 'Inventory enabled for product ' $ l.adjustment:product_id ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Update_SKU" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.update_count"				VALUE = 0>
	<MvASSIGN NAME = "l.updates"					VALUE = "">

	<MvIF EXPR = "{ JSON_Input_Exists( 'SKU_Updates' ) }">
		<MvFOREACH ITERATOR = "l.input_update" ARRAY = "l.input_updates" COUNT = "{ JSON_Input_Array( 'SKU_Updates', l.input_updates ) }">
			<MvASSIGN NAME = "l.update"				VALUE = "">
			<MvASSIGN NAME = "l.update:product_id"	VALUE = 0>
			<MvASSIGN NAME = "l.update:sku"			VALUE = "">

			<MvIF EXPR = "{ NOT JSON_Input_Element_Integer(	l.input_update, 'R', 'product_id',	l.update:product_id ) OR
							NOT JSON_Input_Element_Text(	l.input_update, 'r', 'sku',			l.update:sku ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.update_count"		VALUE = "{ miva_array_insert_var( l.updates, l.update, -1 ) }">
		</MvFOREACH>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve_Raw( 'Product_IDs',	l.product_ids ) OR
						JSON_Input_Retrieve_Raw( 'SKUs',		l.skus ) }">
		<MvASSIGN NAME = "l.update_count"			VALUE = "{ JSON_Array_Coalesce_Integer( l.product_ids,	l.updates, 'product_id' ) }">
		<MvASSIGN NAME = "l.null"					VALUE = "{ JSON_Array_Coalesce_String(	l.skus,			l.updates, 'sku' ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.update" ARRAY = "l.updates" COUNT = "{ l.update_count }">
		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'Products SET sku = ? WHERE id = ?' }" FIELDS = "l.update:sku, l.update:product_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00001', g.MvQUERY_Error ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00005', 'SKU updated for product ' $ l.update:product_id ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated( l.update:product_id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Attribute_Load_Code" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductAttribute_Load( l.product, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.product:pgrpcount }">
		<MvASSIGN NAME = "l.attribute:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.attribute:price, l.attribute:cost ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"id":				<MvEVAL EXPR = "{ l.attribute:id }">,
		"product_id":		<MvEVAL EXPR = "{ l.attribute:product_id }">,
		"default_id":		<MvEVAL EXPR = "{ l.attribute:default_id }">,
		"disp_order":		<MvEVAL EXPR = "{ l.attribute:disp_order }">,
		"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:code ) }">",
		"type":				"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:type ) }">",
		"attemp_id":		<MvEVAL EXPR = "{ l.attribute:attemp_id }">,
		"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:prompt ) }">",
		"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:price ) }">,
		"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.attribute:price ) ) }">",
		"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:cost ) }">,
		"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.attribute:cost ) ) }">",
		"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:weight ) }">,
		"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.attribute:weight ) ) }">",
		"required":			<MvEVAL EXPR = "{ JSON_Boolean( l.attribute:required ) }">,
		"inventory":		<MvEVAL EXPR = "{ JSON_Boolean( l.attribute:inventory ) }">,
		"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:image ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeList" PARAMETERS = "query, fields, offset, count" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.customer" VALUE = "">

	<MvIF EXPR = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Attributes', l.query, l.fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.attribute_count"				VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">	
	[
	<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.attribute_count LT l.count ) ) AND ( NOT Attributes.d.EOF ) }">
		<MvIF EXPR = "{ l.attribute_count NE 0 }">
			,
		</MvIF>

		{
			"id":				<MvEVAL EXPR = "{ Attributes.d.id }">,
			"product_id":		<MvEVAL EXPR = "{ Attributes.d.product_id }">,
			"default_id":		<MvEVAL EXPR = "{ Attributes.d.default_id }">,
			"disp_order":		<MvEVAL EXPR = "{ Attributes.d.disp_order }">,
			"code":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.code ) }">",
			"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.prompt ) }">",

			"type":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.type ) }">",
			"attemp_id":		<MvEVAL EXPR = "{ Attributes.d.attemp_id }">,

			<MvIF EXPR = "{ Attributes.d.attemp_id EQ 0 }">
				<MvIF EXPR = "{ Attributes.d.product_pgrpcount EQ 0 }">
					<MvASSIGN NAME = "l.price"		VALUE = "{ Attributes.d.price }">
				<MvELSE>
					<MvASSIGN NAME = "l.product:id"	VALUE = "{ Attributes.d.product_id }">
					<MvASSIGN NAME = "l.price"		VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, Attributes.d.price, Attributes.d.cost ) }">
				</MvIF>

				"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.price ) }">,
				"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.price ) ) }">",
				"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.cost ) }">,
				"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, Attributes.d.cost ) ) }">",
				"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.weight ) }">,
				"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( Attributes.d.weight ) ) }">",
				"required":			<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.required ) }">,
				"inventory":		<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.inventory ) }">,
				"image":			"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.image ) }">"
			<MvELSE>
				<MvIF EXPR = "{ Attributes.d.product_pgrpcount EQ 0 }">
					<MvASSIGN NAME = "l.price"		VALUE = "{ Attributes.d.attmpat_price }">
				<MvELSE>
					<MvASSIGN NAME = "l.product:id"	VALUE = "{ Attributes.d.product_id }">
					<MvASSIGN NAME = "l.price"		VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, Attributes.d.attmpat_price, Attributes.d.attmpat_cost ) }">
				</MvIF>

				"attmpat_id":		<MvEVAL EXPR = "{ Attributes.d.attmpat_id }">,
				"attmpat_code":		"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_code ) }">",
				"attmpat_type":		"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_type ) }">",
				"attmpat_prompt":	"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_prompt ) }">",
				"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.price ) }">,
				"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.price ) ) }">",
				"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpat_cost ) }">,
				"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, Attributes.d.attmpat_cost ) ) }">",
				"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpat_weight ) }">,
				"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( Attributes.d.attmpat_weight ) ) }">",
				"required":			<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.attmpat_required ) }">,
				"inventory":		<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.attmpat_inventory ) }">,
				"image":			"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_image ) }">"
			</MvIF>
		}

		<MvASSIGN NAME = "l.attribute_count"			VALUE = "{ l.attribute_count + 1 }">
		<MvSKIP NAME = "Merchant" VIEW = "Attributes"	ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Attributes">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeList_Load_CodeMatch" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.count"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'R', 	'Product_Code',		l.product_code )	OR
					NOT JSON_Input_Text(	'R', 	'Attribute_Code',	l.attribute_code )	OR
					NOT JSON_Input_Integer(	'o',	'Count',			l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeList( 'SELECT
														a.*,
														p.pgrpcount		AS product_pgrpcount,
														ata.id			AS attmpat_id,
														ata.code		AS attmpat_code,
														ata.prompt		AS attmpat_prompt,
														ata.type		AS attmpat_type,
														ata.price		AS attmpat_price,
														ata.cost		AS attmpat_cost,
														ata.weight		AS attmpat_weight,
														ata.required	AS attmpat_required,
														ata.inventory	AS attmpat_inventory,
														ata.image		AS attmpat_image
													  FROM ' $
														g.Store_Table_Prefix $ 'Products p, ' $
														g.Store_Table_Prefix $ 'Attributes a
														LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'AttributeTemplateAttrs ata ON a.type = \'template\' AND ata.attemp_id = a.attemp_id
													  WHERE
														a.product_id = p.id AND ' $
														[ g.Library_Native_DBAPI ].DB_Compare_UPPER( 'p.code' ) $ ' = ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' AND
														(
															( a.type <> \'template\' AND ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( 'a.code' )  $ ' LIKE ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' ) OR
															( a.type = \'template\' AND ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( 'ata.code' ) $ ' LIKE ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' )
														)
													  ORDER BY
														a.disp_order, ata.disporder',
														[ g.Library_DB ].SQL_Query_Field( l.product_code ) $ ',' $ [ g.Library_DB ].SQL_Query_Field( l.attribute_code ) $ ',' $ [ g.Library_DB ].SQL_Query_Field( l.attribute_code ),
													  0, l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeList_Load_Inventory" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_AttributeList( 'SELECT
														a.*,
														p.pgrpcount		AS product_pgrpcount,
														ata.id			AS attmpat_id,
														ata.code		AS attmpat_code,
														ata.prompt		AS attmpat_prompt,
														ata.type		AS attmpat_type,
														ata.price		AS attmpat_price,
														ata.cost		AS attmpat_cost,
														ata.weight		AS attmpat_weight,
														ata.required	AS attmpat_required,
														ata.inventory	AS attmpat_inventory,
														ata.image		AS attmpat_image
													  FROM ' $
														g.Store_Table_Prefix $ 'Products p, ' $
														g.Store_Table_Prefix $ 'Attributes a
														LEFT OUTER JOIN ' $ g.Store_Table_Prefix $ 'AttributeTemplateAttrs ata ON a.type = \'template\' AND ata.attemp_id = a.attemp_id
													  WHERE
														p.id			= ? AND
														a.product_id	= p.id AND
														( a.inventory = 1 OR ata.inventory = 1 )
													  ORDER BY
														a.disp_order, ata.disporder',
													  [ g.Library_DB ].SQL_Query_Field( l.product:id ),
													  0, 0 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Option_Load_Code" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductOption_Load( l.product, l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.product:pgrpcount }">
		<MvASSIGN NAME = "l.option:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.option:price, l.option:cost ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"id":				<MvEVAL EXPR = "{ l.option:id }">,
		"product_id":		<MvEVAL EXPR = "{ l.option:product_id }">,
		"attr_id":			<MvEVAL EXPR = "{ l.option:attr_id }">,
		"disp_order":		<MvEVAL EXPR = "{ l.option:disp_order }">,
		"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.option:code ) }">",
		"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:prompt ) }">",
		"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:price ) }">,
		"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.option:price ) ) }">",
		"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:cost ) }">,
		"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.option:cost ) ) }">",
		"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:weight ) }">,
		"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.option:weight ) ) }">",
		"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:image ) }">"
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OptionList_Load_CodeMatch" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.product"		VALUE = "">
	<MvASSIGN NAME = "l.customer"		VALUE = "">
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.attribute_code"	VALUE = "">
	<MvASSIGN NAME = "l.option_code"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer(	'o', 'Count',			l.count )			OR
					NOT JSON_Input_Text(	'R', 'Attribute_Code',	l.attribute_code )	OR
					NOT JSON_Input_Text(	'R', 'Option_Code',		l.option_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Options',
																	  'SELECT DISTINCT
																		o.id			AS id,
																		o.product_id	AS product_id,
																		o.attr_id		AS attr_id,
																		0				AS attemp_id,
																		0				AS attmpat_id,
																		a.disp_order	AS a_disp_order,
																		o.disp_order 	AS o_disp_order,
																		0 				AS ata_disp_order,
																		0 				AS ato_disp_order,
																		o.code			AS code,
																		o.prompt		AS prompt,
																		o.price			AS price,
																		o.cost			AS cost,
																		o.weight		AS weight,
																		o.image			AS image
																	   FROM
																		' $ g.Store_Table_Prefix $ 'Attributes a,
																		' $ g.Store_Table_Prefix $ 'Options o
																	   WHERE
																		a.product_id	= ?				AND
																		a.attemp_id		= 0				AND
																		' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( 'a.code' )  $ ' = ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' AND
																		o.product_id	= a.product_id	AND
																		o.attr_id		= a.id			AND
																		' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( 'o.code' )  $ ' LIKE ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ '
																	   UNION
																	   SELECT DISTINCT
																		ato.id			AS id,
																		0				AS product_id,
																		0				AS attr_id,
																		a.attemp_id		AS attemp_id,
																		ata.id			AS attmpat_id,
																		0				AS a_disp_order,
																		0				AS o_disp_order,
																		ata.disporder	AS ata_disp_order,
																		ato.disporder	AS ato_disp_order,
																		ato.code		AS code,
																		ato.prompt		AS prompt,
																		ato.price		AS price,
																		ato.cost		AS cost,
																		ato.weight		AS weight,
																		ato.image		AS image
																	   FROM
																		' $ g.Store_Table_Prefix $ 'Attributes a,
																		' $ g.Store_Table_Prefix $ 'AttributeTemplateAttrs ata,
																		' $ g.Store_Table_Prefix $ 'AttributeTemplateOptions ato
																	   WHERE
																		a.product_id	= ?				AND
																		ata.attemp_id	= a.attemp_id	AND
																		' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( 'ata.code' )  $ ' = ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' AND
																		ato.attmpat_id	= ata.id		AND
																		' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( 'ato.code' )  $ ' LIKE ' $ [ g.Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ '
																	   ORDER BY
																		a_disp_order, o_disp_order, ata_disp_order, ato_disp_order',
																	  [ g.Library_DB ].SQL_Query_Field( l.product:id ) $ ',' $ [ g.Library_DB ].SQL_Query_Field( l.attribute_code ) $ ',' $ [ g.Library_DB ].SQL_Query_Field( l.option_code ) $ ',' $
																	  [ g.Library_DB ].SQL_Query_Field( l.product:id ) $ ',' $ [ g.Library_DB ].SQL_Query_Field( l.attribute_code ) $ ',' $ [ g.Library_DB ].SQL_Query_Field( l.option_code ),
																	  0, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00007', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.option_count"				VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">	
	[
	<MvWHILE EXPR = "{ ( ( l.count EQ 0 ) OR ( l.option_count LT l.count ) ) AND ( NOT Options.d.EOF ) }">
		<MvIF EXPR = "{ l.product:pgrpcount EQ 0 }">	<MvASSIGN NAME = "l.price" VALUE = "{ Options.d.price }">
		<MvELSE>										<MvASSIGN NAME = "l.price" VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, Options.d.price, Options.d.cost ) }">
		</MvIF>

		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.option_count ) }">
		"id":				<MvEVAL EXPR = "{ int( Options.d.id ) }">,

		<MvIF EXPR = "{ Options.d.attemp_id EQ 0 }">
			"product_id":	<MvEVAL EXPR = "{ int( Options.d.product_id ) }">,
			"attr_id":		<MvEVAL EXPR = "{ int( Options.d.attr_id ) }">,
		<MvELSE>
			"attemp_id":	<MvEVAL EXPR = "{ int( Options.d.attemp_id ) }">,
			"attmpat_id":	<MvEVAL EXPR = "{ int( Options.d.attmpat_id ) }">,
		</MvIF>

		<MvIF EXPR = "{ Options.d.o_disp_order }">
			"disp_order":	<MvEVAL EXPR = "{ int( Options.d.o_disp_order ) }">,
		<MvELSE>
			"disp_order":	<MvEVAL EXPR = "{ int( Options.d.ato_disp_order ) }">,
		</MvIF>

		"code":				"<MvEVAL EXPR = "{ JSON_Encode( Options.d.code ) }">",
		"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( Options.d.prompt ) }">",
		"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.price ) }">,
		"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.price ) ) }">",
		"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( Options.d.cost ) }">,
		"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, Options.d.cost ) ) }">",
		"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( Options.d.weight ) }">,
		"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( Options.d.weight ) ) }">",
		"image":			"<MvEVAL EXPR = "{ JSON_Encode( Options.d.image ) }">"
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

		<MvSKIP NAME = "Merchant" VIEW = "Options"	ROWS = 1>
	</MvWHILE>
	]
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Options">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_OptionList_Load_Attribute" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductAttribute_Load( l.product, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.output_count"	VALUE = 0>
	<MvASSIGN NAME = "l.option_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.option_count"	VALUE = "{ [ g.Library_DB ].OptionList_Load_Attribute( l.attribute:id, l.options ) }">

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
		<MvIF EXPR = "{ l.product:pgrpcount EQ 0 }">
			<MvASSIGN NAME = "l.price"	VALUE = "{ l.options[ l.option_pos ]:price }">
		<MvELSE>
			<MvASSIGN NAME = "l.price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.options[ l.option_pos ]:price, l.options[ l.option_pos ]:cost ) }">
		</MvIF>

		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.output_count ) }">
		"id":				<MvEVAL EXPR = "{ l.options[ l.option_pos ]:id }">,
		"product_id":		<MvEVAL EXPR = "{ l.options[ l.option_pos ]:product_id }">,
		"attr_id":			<MvEVAL EXPR = "{ l.options[ l.option_pos ]:attr_id }">,
		"disp_order":		<MvEVAL EXPR = "{ l.options[ l.option_pos ]:disp_order }">,
		"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.options[ l.option_pos ]:code ) }">",
		"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.options[ l.option_pos ]:prompt ) }">",
		"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.price ) }">,
		"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.price ) ) }">",
		"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.options[ l.option_pos ]:cost ) }">,
		"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.options[ l.option_pos ]:cost ) ) }">",
		"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.options[ l.option_pos ]:weight ) }">,
		"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.options[ l.option_pos ]:weight ) ) }">",
		"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.options[ l.option_pos ]:image ) }">"
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

		<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
	</MvWHILE>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeTemplateOptionList_Load_Attribute" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_ATT_JSON ].JSON_AttributeTemplateAttribute_Load( l.template, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output_count"					VALUE = 0>
	<MvASSIGN NAME = "l.option_pos"						VALUE = 1>
	<MvASSIGN NAME = "l.option_count"					VALUE = "{ [ g.Feature_ATT_DB ].AttributeTemplateOptionList_Load_Attribute( l.attribute:id, l.options ) }">

	<MvEVAL EXPR = "{ JSON_Response_Start() }">	
	[
	<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.output_count ) }">
		"id":				<MvEVAL EXPR = "{ l.options[ l.option_pos ]:id }">,
		"attemp_id":		<MvEVAL EXPR = "{ l.options[ l.option_pos ]:attemp_id }">,
		"attmpat_id":		<MvEVAL EXPR = "{ l.options[ l.option_pos ]:attmpat_id }">,
		"disporder":		<MvEVAL EXPR = "{ l.options[ l.option_pos ]:disporder }">,
		"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.options[ l.option_pos ]:code ) }">",
		"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.options[ l.option_pos ]:prompt ) }">",
		"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.options[ l.option_pos ]:price ) }">,
		"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.options[ l.option_pos ]:price ) ) }">",
		"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.options[ l.option_pos ]:cost ) }">,
		"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.options[ l.option_pos ]:cost ) ) }">",
		"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.options[ l.option_pos ]:weight ) }">,
		"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.options[ l.option_pos ]:weight ) ) }">",
		"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.options[ l.option_pos ]:image ) }">"
		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

		<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
	</MvWHILE>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeAndOptionList_Load_Product" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Feature_CUS_JSON ].JSON_Customer_Loaders_Present() }">
		<MvIF EXPR = "{ NOT [ g.Feature_CUS_JSON ].JSON_Customer_Load( l.customer ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.attribute_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.attribute_count"			VALUE = "{ [ g.Library_DB ].AttributeList_Load_Product( l.product:id, l.attributes ) }">

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
	<MvWHILE EXPR = "{ l.attribute_pos LE l.attribute_count }">
		<MvREFERENCEARRAY NAME = "l.attribute" VARIABLE = "l.attributes">
			<MvDIMENSION INDEX = "{ l.attribute_pos }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ l.product:pgrpcount }">
			<MvASSIGN NAME = "l.attribute:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.attribute:price, l.attribute:cost ) }">
		</MvIF>

		<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.attribute_output_count ) }">
		"id":				<MvEVAL EXPR = "{ l.attribute:id }">,
		"product_id":		<MvEVAL EXPR = "{ l.attribute:product_id }">,
		"default_id":		<MvEVAL EXPR = "{ l.attribute:default_id }">,
		"disp_order":		<MvEVAL EXPR = "{ l.attribute:disp_order }">,
		"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:code ) }">",
		"type":				"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:type ) }">",
		"attemp_id":		<MvEVAL EXPR = "{ l.attribute:attemp_id }">,
		"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:prompt ) }">",
		"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:price ) }">,
		"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.attribute:price ) ) }">",
		"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:cost ) }">,
		"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.attribute:cost ) ) }">",
		"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:weight ) }">,
		"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.attribute:weight ) ) }">",
		"required":			<MvEVAL EXPR = "{ JSON_Boolean( l.attribute:required ) }">,
		"inventory":		<MvEVAL EXPR = "{ JSON_Boolean( l.attribute:inventory ) }">,
		"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:image ) }">"

		<MvIF EXPR = "{ l.attribute:type NE 'template' }">
			<MvIF EXPR = "{ ( l.attribute:type EQ 'radio' ) OR ( l.attribute:type EQ 'select' ) OR ( l.attribute:type EQ 'swatch-select' ) }">
				<MvASSIGN NAME = "l.option_output_count"	VALUE = 0>
				<MvASSIGN NAME = "l.option_pos"				VALUE = 1>
				<MvASSIGN NAME = "l.option_count"			VALUE = "{ [ g.Library_DB ].OptionList_Load_Attribute( l.attribute:id, l.options ) }">

				,"options":
				[
				<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
					<MvREFERENCEARRAY NAME = "l.option" VARIABLE = "l.options">
						<MvDIMENSION INDEX = "{ l.option_pos }">
					</MvREFERENCEARRAY>

					<MvIF EXPR = "{ l.product:pgrpcount }">
						<MvASSIGN NAME = "l.option:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.option:price, l.option:cost ) }">
					</MvIF>

					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.option_output_count ) }">
					"id":				<MvEVAL EXPR = "{ l.option:id }">,
					"product_id":		<MvEVAL EXPR = "{ l.option:product_id }">,
					"attr_id":			<MvEVAL EXPR = "{ l.option:attr_id }">,
					"disp_order":		<MvEVAL EXPR = "{ l.option:disp_order }">,
					"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.option:code ) }">",
					"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:prompt ) }">",
					"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:price ) }">,
					"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.option:price ) ) }">",
					"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:cost ) }">,
					"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.option:cost ) ) }">",
					"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:weight ) }">,
					"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.option:weight ) ) }">",
					"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:image ) }">"
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

					<MvASSIGN NAME = "l.option_pos"			VALUE = "{ l.option_pos + 1 }">
				</MvWHILE>
				]
			</MvIF>
		<MvELSE>
			<MvASSIGN NAME = "l.template_attr_output_count"	VALUE = 0>
			<MvASSIGN NAME = "l.template_attr_pos"			VALUE = 1>
			<MvASSIGN NAME = "l.template_attr_count"		VALUE = "{ [ g.Feature_ATT_DB ].AttributeTemplateAttrList_Load_Template( l.attribute:attemp_id, l.template_attrs ) }">

			,"attributes":
			[
			<MvWHILE EXPR = "{ l.template_attr_pos LE l.template_attr_count }">
				<MvREFERENCEARRAY NAME = "l.template_attr" VARIABLE = "l.template_attrs">
					<MvDIMENSION INDEX = "{ l.template_attr_pos }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ l.product:pgrpcount }">
					<MvASSIGN NAME = "l.template_attr:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.template_attr:price, l.template_attr:cost ) }">
				</MvIF>

				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.template_attr_output_count ) }">
				"id":				<MvEVAL EXPR = "{ l.template_attr:id }">,
				"attemp_id":		<MvEVAL EXPR = "{ l.template_attr:attemp_id }">,
				"default_id":		<MvEVAL EXPR = "{ l.template_attr:default_id }">,
				"disp_order":		<MvEVAL EXPR = "{ l.template_attr:disporder }">,
				"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.template_attr:code ) }">",
				"type":				"<MvEVAL EXPR = "{ JSON_Encode( l.template_attr:type ) }">",
				"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.template_attr:prompt ) }">",
				"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.template_attr:price ) }">,
				"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.template_attr:price ) ) }">",
				"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.template_attr:cost ) }">,
				"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.template_attr:cost ) ) }">",
				"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.template_attr:weight ) }">,
				"required":			<MvEVAL EXPR = "{ JSON_Boolean( l.template_attr:required ) }">,
				"inventory":		<MvEVAL EXPR = "{ JSON_Boolean( l.template_attr:inventory ) }">,
				"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.template_attr:image ) }">"

				<MvIF EXPR = "{ ( l.template_attr:type EQ 'radio' ) OR ( l.template_attr:type EQ 'select' ) OR ( l.template_attr:type EQ 'swatch-select' ) }">
					<MvASSIGN NAME = "l.option_output_count"	VALUE = 0>
					<MvASSIGN NAME = "l.option_pos"				VALUE = 1>
					<MvASSIGN NAME = "l.option_count"			VALUE = "{ [ g.Feature_ATT_DB ].AttributeTemplateOptionList_Load_Attribute( l.template_attr:id, l.options ) }">

					,"options":
					[
					<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
						<MvREFERENCEARRAY NAME = "l.option" VARIABLE = "l.options">
							<MvDIMENSION INDEX = "{ l.option_pos }">
						</MvREFERENCEARRAY>

						<MvIF EXPR = "{ l.product:pgrpcount }">
							<MvASSIGN NAME = "l.option:price"	VALUE = "{ [ g.Module_Library_Utilities ].Adjusted_Price_LowLevel( l.customer, l.product, l.option:price, l.option:cost ) }">
						</MvIF>

						<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.option_output_count ) }">
						"id":				<MvEVAL EXPR = "{ l.option:id }">,
						"attemp_id":		<MvEVAL EXPR = "{ l.option:attemp_id }">,
						"attmpat_id":		<MvEVAL EXPR = "{ l.option:attmpat_id }">,
						"disp_order":		<MvEVAL EXPR = "{ l.option:disporder }">,
						"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.option:code ) }">",
						"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:prompt ) }">",
						"price":			<MvEVAL EXPR = "{ encodejavascriptnumber(l.option:price ) }">,
						"formatted_price":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.option:price ) ) }">",
						"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber(l.option:cost ) }">,
						"formatted_cost":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Store_Module_Currency ].CurrencyModule_AddFormatting( g.Store_Module_Currency, l.option:cost ) ) }">",
						"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:weight ) }">,
						"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:image ) }">"
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

						<MvASSIGN NAME = "l.option_pos"			VALUE = "{ l.option_pos + 1 }">
					</MvWHILE>
					]
				</MvIF>
				<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

				<MvASSIGN NAME = "l.template_attr_pos"		VALUE = "{ l.template_attr_pos + 1 }">
			</MvWHILE>
			]
		</MvIF>

		<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		<MvASSIGN NAME = "l.attribute_pos"			VALUE = "{ l.attribute_pos + 1 }">
	</MvWHILE>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Filters" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.available_filters" VALUE = "">

	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(			l.available_filters, 'prod.id', 		'id' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.code',		'code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.sku',		'sku' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.name',		'name' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.thumbnail',	'thumbnail' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.image',		'image' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(			l.available_filters, 'prod.price',		'price' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(			l.available_filters, 'prod.cost',		'cost' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.descrip',	'descrip' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NUMBER(			l.available_filters, 'prod.weight',		'weight' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_BOOL(			l.available_filters, 'prod.taxable',	'taxable' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_BOOL(			l.available_filters, 'prod.active',		'active' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.page_title',	'page_title' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(			l.available_filters, 'prod.dt_created',	'dt_created' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(			l.available_filters, 'prod.dt_updated',	'dt_updated' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NULL_CHAR(		l.available_filters, 'cat.code',		'cancat_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(			l.available_filters, 'prod.page_code',	'page_code' ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.available_filters }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_OrderBy" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| disp_order is not included here because several lists override its behavior
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = "id:prod.id,code:prod.code,sku:prod.sku,cancat_code:cat.code:null_char,page_code:prod.page_code:null_char,name:prod.name,thumbnail:prod.thumbnail,
							   image:prod.image,price:prod.price,cost:prod.cost,descrip:prod.descrip,weight:prod.weight,taxable:prod.taxable,
							   active:prod.active,page_title:prod.page_title,dt_created:prod.dt_created,dt_updated:prod.dt_updated">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Joins_Filter" PARAMETERS = "filter var, joins var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.joins"				VALUE = "">
	<MvASSIGN NAME = "l.joins:categories"	VALUE = "{ JSON_Filter_Contains_Search_Field( l.filter, 'cancat_code',			l.null ) }">
	<MvASSIGN NAME = "l.joins:inventory"	VALUE = "{ JSON_Filter_Contains_Search_Field( l.filter, 'product_inventory',	l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Joins_Sort" PARAMETERS = "sort, joins var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.sort_field"			VALUE = "{ [ g.Library_DB ].SQL_Sort_Field( l.sort, l.null ) }">

	<MvASSIGN NAME = "l.joins"				VALUE = "">
	<MvASSIGN NAME = "l.joins:categories"	VALUE = "{ l.sort_field EQ 'cancat_code' }">
	<MvASSIGN NAME = "l.joins:inventory"	VALUE = "{ l.sort_field EQ 'product_inventory' }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Joins_OnDemandColumns" PARAMETERS = "ondemandcolumns var, joins var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.joins"				VALUE = "">
	<MvASSIGN NAME = "l.joins:categories"	VALUE = "{ l.ondemandcolumns:cancat_code }">
	<MvASSIGN NAME = "l.joins:inventory"	VALUE = "{ l.ondemandcolumns:product_inventory }">
	<MvASSIGN NAME = "l.joins:imagetypes"	VALUE = "{ l.ondemandcolumns:imagetype_count GT 0 }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Product_Read" PARAMETERS = "product var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Product_Read( l.product ) }">
	
	<MvASSIGN NAME = "l.product:page_id"	VALUE = "{ Products.d.page_id }">

	<MvIF EXPR = "{ l.ondemandcolumns:cancat_code }">		<MvASSIGN NAME = "l.product:cancat_code"				VALUE = "{ Products.d.cancat_code }">				</MvIF>
	<MvIF EXPR = "{ l.ondemandcolumns:product_inventory }">	<MvASSIGN NAME = "l.product:product_inventory"			VALUE = "{ Products.d.product_inventory }">			</MvIF>
	<MvIF EXPR = "{ l.ondemandcolumns:product_inventory }">	<MvASSIGN NAME = "l.product:product_inventory_active"	VALUE = "{ Products.d.product_inventory_active }">	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:imagetype_count }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			<MvASSIGN NAME = "l.product" MEMBER = "{ 'imagetype_' $ l.imagetype:id }" VALUE = "{ miva_variable_value( 'Products.d.imagetype_' $ l.imagetype:id ) }">
		</MvFOREACH>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Load_Query" PARAMETERS = "filter var, sort, default_sort, search_query var, count_query var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_BaseProductList_Load_Query_LowLevel( l.filter, l.sort, JSON_BaseProductList_Filters(), JSON_BaseProductList_OrderBy(), l.default_sort, g.Module_JSON, 'JSON_ProductList_Load_Query_Filter', 'JSON_ProductList_Load_Query_Search_Filter', 'JSON_Product_CustomFields_Query_Filter', l.search_query, l.count_query, l.ondemandcolumns ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Load_Query_LowLevel" PARAMETERS = "filter var, sort, filter_columns, orderby_columns, default_sort, callback_filename, callback_filter, callback_search, callback_search_customfields, search_query var, count_query var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.search_query"			VALUE = "">
	<MvASSIGN NAME = "l.count_query"			VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumns"		VALUE = "">
	<MvASSIGN NAME = "l.filter_joins"			VALUE = "">
	<MvASSIGN NAME = "l.sort_joins"				VALUE = "">
	<MvASSIGN NAME = "l.ondemandcolumn_joins"	VALUE = "">
	<MvASSIGN NAME = "l.inventory_valid"		VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.search_query, 'prod.*' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Products', 'prod' ) }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, l.callback_filename, l.callback_filter, l.callback_search, l.callback_search_customfields, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ JSON_BaseProductList_Joins_Filter( l.filter, l.filter_joins ) }">
	<MvEVAL EXPR = "{ JSON_BaseProductList_Joins_Sort( l.sort, l.sort_joins ) }">
	<MvEVAL EXPR = "{ JSON_BaseProductList_Joins_OnDemandColumns( l.ondemandcolumns, l.ondemandcolumn_joins ) }">

	<MvIF EXPR = "{ l.ondemandcolumn_joins:inventory OR l.filter_joins:inventory OR l.sort_joins:inventory }">
		<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
						[ g.Feature_INV_DB ].InventorySettings_Load( l.inventory_settings ) AND
						l.inventory_settings:active }">
			<MvASSIGN NAME = "l.inventory_valid" VALUE = 1>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Build the count query
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.count_query" VALUE = "{ l.search_query }">

	<MvIF EXPR = "{ l.filter_joins:categories }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'Categories', 'cat', 'prod.cancat_id = cat.id', '' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.inventory_valid AND l.filter_joins:inventory }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'prod.id = ips.product_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'prod.id = ipc.product_id', '' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Build the search query
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:categories OR l.filter_joins:categories OR l.sort_joins:categories }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'cat.code',	'cancat_code' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'Categories', 'cat', 'prod.cancat_id = cat.id', '' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id', 'page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'prod.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'prod.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">

	<MvIF EXPR = "{ l.inventory_valid AND ( l.ondemandcolumn_joins:inventory OR l.filter_joins:inventory OR l.sort_joins:inventory ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER(	l.search_query, 'ipc.inventory',	'product_inventory' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_BOOL(		l.search_query, 'ips.active',		'product_inventory_active' ) }">

		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'prod.id = ips.product_id', '' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'prod.id = ipc.product_id', '' ) }">

		<MvASSIGN NAME = "l.orderby_columns" VALUE = "{ l.orderby_columns $ ',product_inventory:ips.active/product_inventory_active/null_bool;ipc.inventory/product_inventory/null_integer' }">
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumn_joins:imagetypes }">
		<MvFOREACH ITERATOR = "l.imagetype" ARRAY = "l.ondemandcolumns:imagetypes" COUNT = "{ l.ondemandcolumns:imagetype_count }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pi_' $ l.imagetype:id $ '.image_id',	'imagetype_' $ l.imagetype:id ) }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'ProductImages',	'pi_' $ l.imagetype:id,	'pi_' $ l.imagetype:id $ '.product_id = prod.id AND pi_' $ l.imagetype:id $ '.type_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.imagetype:id ) ) }">
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, l.default_sort, g.Module_JSON, 'JSON_Product_CustomFields_Query_OrderBy' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductList_Load_Query_QueryCustomFields" PARAMETERS = "search_query var, filter var, count, total_count" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| For performance reasons, custom field values are only retrieved via query when total_count is less than 100,000 and
	| the number of records requested for output is greater than 500.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ ( ( l.count EQ 0 ) OR ( l.count GT 500 ) ) AND ( l.total_count LT 100000 ) }">
		<MvEVAL EXPR = "{ JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Product_CustomFields_Query' ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductIndex_Load_ID" PARAMETERS = "filter var, sort, default_sort, query var, record var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_BaseProductIndex_Load_ID_LowLevel( l.filter, l.sort, JSON_BaseProductList_Filters(), JSON_BaseProductList_OrderBy(), l.default_sort, g.Module_JSON, 'JSON_ProductList_Load_Query_Filter', 'JSON_ProductList_Load_Query_Search_Filter', 'JSON_Product_CustomFields_Query_Filter', l.query, l.record ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseProductIndex_Load_ID_LowLevel" PARAMETERS = "filter var, sort, filter_columns, orderby_columns, default_sort, callback_filename, callback_filter, callback_search, callback_search_customfields, query var, record var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.filter_joins"	VALUE = "">
	<MvASSIGN NAME = "l.sort_joins"		VALUE = "">

	<MvREFERENCE NAME = "l.product"		VARIABLE = "l.record:prod">
	<MvREFERENCE NAME = "l.pbv"			VARIABLE = "l.record:pbv">
	<MvREFERENCE NAME = "l.category"	VARIABLE = "l.record:cat">
	<MvREFERENCE NAME = "l.ipc"			VARIABLE = "l.record:ipc">
	<MvREFERENCE NAME = "l.ips"			VARIABLE = "l.record:ips">

	<MvEVAL EXPR = "{ JSON_BaseProductList_Joins_Filter( l.filter, l.filter_joins ) }">
	<MvEVAL EXPR = "{ JSON_BaseProductList_Joins_Sort( l.sort, l.sort_joins ) }">

	<MvIF EXPR = "{ ISNULL l.product }">
		<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Products', 'prod' ) }">

	<MvIF EXPR = "{ l.filter_joins:categories OR l.sort_joins:categories }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'Categories', 'cat', 'prod.cancat_id = cat.id', '' ) }">

		<MvIF EXPR = "{ l.product:cancat_id }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( l.product:cancat_id, l.category ) }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.product:page_code }">
		<MvIF EXPR = "{ NOT [ g.Feature_TUI_DB ].PageBranchVersion_Load_Code_Branch_Head( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID(), l.product:page_code, l.pbv ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.filter_joins:inventory OR l.sort_joins:inventory }">
		<MvIF EXPR = "{ [ g.Filename_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
						[ g.Feature_INV_DB ].InventorySettings_Load_Cached( l.inventory_settings ) AND
						l.inventory_settings:active }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'InventoryProductSettings', 'ips', 'prod.id = ips.product_id', '' ) }">
			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'InventoryProductCounts', 'ipc', 'prod.id = ipc.product_id', '' ) }">

			<MvASSIGN NAME = "l.ipc:inventory" VALUE = "{ [ g.Feature_INV_DB ].InventoryProductCount( l.product:id ) }">

			<MvIF EXPR = "{ ( l.ipc:inventory EQ 0 ) AND [ g.Library_DB ].Error_Is_EOF() }">
				<MvASSIGN NAME = "l.ipc:inventory" VALUE = "">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Feature_INV_DB ].InventoryProductSettings_Load( l.product:id, l.ips ) }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = 0>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.orderby_columns" VALUE = "{ l.orderby_columns $ ', product_inventory:ips.active/product_inventory_active/null_bool;ipc.inventory/product_inventory/null_integer' }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, l.callback_filename, l.callback_filter, l.callback_search, l.callback_search_customfields, l.null ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, l.default_sort, g.Module_JSON, 'JSON_Product_CustomFields_Query_OrderBy' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_BaseProductIndex_Load_ID( l.filter, l.sort, 'prod.disp_order', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index": <MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort )	OR
					NOT JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseProductList_Load_Query( l.filter, l.sort, 'prod.disp_order', l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00054', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.product_count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset": <MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.product_count ) }">
				<MvEVAL EXPR = "{ JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields_Query" PARAMETERS = "query var, module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module EQ '*' }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'fields_prod', l.modules ) }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Library_DB ].Module_Load_Features( l.module ) }">

			<MvIF EXPR = "{ NOT JSON_Product_CustomFields_Query( l.query, l.module, '*' ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_prod ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.code EQ '*' }">
		<MvFOREACH ITERATOR = "l.module_field" ARRAY = "l.module_fields" COUNT = "{ [ g.Module_Root $ l.module:module ].Module_Product_Fields( l.module, l.module_fields ) }">
			<MvIF EXPR = "{ NOT JSON_Product_CustomFields_Query( l.query, l.module, l.module_field:code ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'Product_CustomFields', l.ref ) }">

	<MvIF EXPR = "{ [ g.Library_DB ].SQL_Query_Total_Join_Count( l.query ) GE 50 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Product_Field_Capabilities( l.module, l.code, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:query }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGNARRAY NAME = "l.ref:data:queried"	VALUE = 1>
		<MvMEMBER NAME = "{ l.module:code }">
		<MvMEMBER NAME = "{ l.code }">
	</MvASSIGNARRAY>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Product_Field_Query( l.module, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields_Query_Filter" PARAMETERS = "query var, field_count var, module var, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_prod ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Product_Field_Capabilities( l.module, l.filter_name, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:search }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Product_Field_Query_Search( l.module, l.query, l.filter_name, l.filter_operator, l.filter_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields_Query_OrderBy" PARAMETERS = "query var, direction, module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_prod ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Product_Field_Capabilities( l.module, l.code, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:orderby }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Product_Field_Query_OrderBy( l.module, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_CustomFields_Query_Index" PARAMETERS = "loaded_record var, module var, product_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_prod ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Product_Field_Query_OrderBy_LoadIndexRecord( l.module, l.loaded_record, l.product_id, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Load_Query_Filter" PARAMETERS = "query var, field_count var, filter_name, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'ondemandcolumns' }">
		<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter_value">
			<MvIF EXPR = "{ ISNULL l.column_code }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ ( 'imagetype:' CIN l.column_code ) NE 1 }">
				<MvASSIGN NAME = "l.data" MEMBER = "{ l.column_code }"	VALUE = 1>
			<MvELSEIF EXPR = "{ [ g.Module_Admin ].CanI( 'IMGS', 1, 0, 0, 0 ) }">
				<MvASSIGN NAME = "l.imagetype_code"						VALUE = "{ substring_var( l.column_code, 11, len_var( l.column_code ) - 10 ) }">

				<MvIF EXPR = "{ NOT miva_array_search( l.data:imagetypes, 1, l.search_imagetype, 'strcasecmp( l.search_imagetype:code, l.imagetype_code ) EQ 0' ) }">
					<MvIF EXPR = "{ [ g.Module_Library_DB ].ImageType_Load_Code( l.imagetype_code, l.imagetype ) }">
						<MvASSIGN NAME = "l.data:imagetype_count"		VALUE = "{ miva_array_insert_var( l.data:imagetypes, l.imagetype, -1 ) }">
					</MvIF>
				</MvIF>
			</MvIF>
		</MvFOREACH>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'Product_Show' }">
		<MvIF EXPR = "{ l.filter_value EQ 'All' }">
		<MvELSEIF EXPR = "{ l.filter_value EQ 'Uncategorized' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( prod.catcount = 0 )', '' ) }">
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( prod.active = 1 )', '' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Load_Query_Search_Filter" PARAMETERS = "query var, field_count var, search_field, search_operator, search_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.search_field EQ 'category' }">
		<MvIF EXPR = "{ l.search_operator NE 'IN' AND l.search_operator NE 'NOT_IN' }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvFOREACH ITERATOR = "l.category_code" ARRAY = "l.category_codes" INDEX  = "l.pos" COUNT = "{ miva_splitstring( l.search_value, ',', l.category_codes, 'trim' ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_Code( l.category_code, l.loaded_category ) }">
				<MvASSIGN NAME = "l.loaded_category:id" VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.join_prefix" 															VALUE = "{ 'cxp' $ l.pos }">
			<MvASSIGN NAME = "g.ProductList_Load_Query_Filter_Product_Category_ID" INDEX = "{ l.pos }" 	VALUE = "{ l.loaded_category:id }">

			<MvIF EXPR = "{ l.pos GT 1 }">
				<MvIF EXPR = "{ l.search_operator EQ 'IN' }">	<MvASSIGN NAME = "l.category_where_clause" VALUE = "{ l.category_where_clause $ ' OR ' }">
				<MvELSE>										<MvASSIGN NAME = "l.category_where_clause" VALUE = "{ l.category_where_clause $ ' AND ' }">
				</MvIF>
			</MvIF>

			<MvIF EXPR = "{ l.search_operator EQ 'IN' }">		<MvASSIGN NAME = "l.category_where_clause" VALUE = "{ l.category_where_clause $ l.join_prefix $ '.cat_id IS NOT NULL' }">
			<MvELSE>											<MvASSIGN NAME = "l.category_where_clause" VALUE = "{ l.category_where_clause $ l.join_prefix $ '.cat_id IS NULL' }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CategoryXProduct', l.join_prefix, l.join_prefix $ '.product_id = prod.id AND ' $ l.join_prefix $ '.cat_id = ?', 'g.ProductList_Load_Query_Filter_Product_Category_ID[' $ l.pos $ ']' ) }">
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, '( ' $ l.category_where_clause $ ' )', '' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.search_field EQ 'product_inventory' }">
		<MvIF EXPR = "{ [ g.Filename_Admin ].CanI( 'INVT', 1, 0, 0, 0 ) AND
						[ g.Feature_INV_DB ].InventorySettings_Load_Cached( l.inventory_settings ) AND
						l.inventory_settings:active }">
			<MvIF EXPR = "{ l.search_operator EQ 'NA' }">
				<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, '( ips.active = 0 OR ips.active IS NULL )', '' ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">
				<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'ips.active = 1', '' ) }">
				<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Search_Operator_Conversion_With_Type( l.query, 'NULL_INTEGER', 'ipc.inventory', l.search_operator, l.search_value, 'AND', '' ) }">
				<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SUB_WHERE_END_Clause( l.query, 'OR', 'AND' ) }">
			</MvIF>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Delete" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Delete( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_Delete" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.product_id" ARRAY = "l.product_ids" COUNT = "{ JSON_Array_Integer( g.Product_IDs, l.product_ids ) }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Delete( l.product ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.product_id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00066', 'Product \'' $ l.product:code $ '\' deleted' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.can_view_categories"				VALUE = "{ [ g.Module_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">
	<MvASSIGN NAME = "l.can_view_pages"						VALUE = "{ [ g.Module_Admin ].CanI( 'PAGE', 1, 0, 0, 0 ) }">

	<MvASSIGN NAME = "l.product"							VALUE = "">
	<MvASSIGN NAME = "l.product:catcount"					VALUE = 0>
	<MvASSIGN NAME = "l.product:cancat_id"					VALUE = 0>
	<MvASSIGN NAME = "l.product:agrpcount"					VALUE = 0>
	<MvASSIGN NAME = "l.product:pgrpcount"					VALUE = 0>
	<MvASSIGN NAME = "l.product:price"						VALUE = 0.00>
	<MvASSIGN NAME = "l.product:cost"						VALUE = 0.00>
	<MvASSIGN NAME = "l.product:weight"						VALUE = 0.00>
	<MvASSIGN NAME = "l.product:taxable"					VALUE = 1>
	<MvASSIGN NAME = "l.product:active"						VALUE = 1>

	<MvASSIGN NAME = "l.product_inventory"					VALUE = "">
	<MvASSIGN NAME = "l.canonical_category_code"			VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'R', 'Product_Code',					l.product:code )			OR
					NOT JSON_Input_Text(	'R', 'Product_Name',					l.product:name )			OR
					NOT JSON_Input_Text(	'o', 'Product_SKU',						l.product:sku )				OR
					NOT JSON_Input_Text(	'o', 'Product_Thumbnail',				l.product:thumbnail )		OR
					NOT JSON_Input_Text(	'o', 'Product_Image',					l.product:image )			OR
					NOT JSON_Input_Price(	'O', 'Product_Price',					l.product:price  )			OR
					NOT JSON_Input_Price(	'O', 'Product_Cost',					l.product:cost  )			OR
					NOT JSON_Input_Weight(	'O', 'Product_Weight',					l.product:weight )			OR
					NOT JSON_Input_Boolean(	'O', 'Product_Taxable',					l.product:taxable )			OR
					NOT JSON_Input_Boolean(	'O', 'Product_Active',					l.product:active )			OR
					NOT JSON_Input_Text(	'o', 'Product_Page_Title',				l.product:page_title )		OR
					NOT JSON_Input_Text(	'o', 'Product_Description',				l.product:descrip )			OR
					NOT JSON_Input_Integer(	'o', 'Product_Inventory',				l.product_inventory )		OR
					NOT JSON_Input_Code(	'O', 'Product_Canonical_Category_Code',	l.canonical_category_code )	OR
					NOT JSON_Input_Code(	'o', 'Product_Alternate_Display_Page',	l.product:page_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.inventory_enabled"					VALUE = "{ [ g.Module_Admin ].CanI( 'INVT',0, 0, 1, 0 ) AND
																	   [ g.Feature_INV_DB ].InventorySettings_Load( l.inventory_settings ) AND
																	   l.inventory_settings:active }">

	<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.product:code, l.existing_product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Code', 'A product with the code \'' $ l.existing_product:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.can_view_categories OR ISNULL l.canonical_category_code }">
		<MvASSIGN NAME = "l.product:cancat_id"				VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.canonical_category_code, l.canonical_category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Canonical_Category_Code', 'Category \'' $ l.canonical_category_code $ '\' not found' ) }">
	<MvELSE>
		<MvASSIGN NAME = "l.product:cancat_id"				VALUE = "{ l.canonical_category:id }">
	</MvIF>

	<MvCOMMENT>
	|
	| Validate custom fields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customfields"		VALUE = "">
	<MvASSIGN NAME = "l.customfield_count"	VALUE = 0>
	<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Input_Retrieve_Raw( 'CustomField_Values', l.customfield_values ) }">

	<MvFOREACH ITERATOR = "l.module_code" ARRAY = "l.module_codelist" COUNT = "{ miva_struct_members( l.customfield_values, l.module_codelist ) }">
		<MvASSIGN NAME = "l.module_code"	VALUE = "{ JSON_Decode( l.module_code ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00076', 'Module \'' $ l.module_code $ '\' not found' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00077', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:fields_prod }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00078', 'Module \'' $ l.module:code $ '\' does not provide feature \'fields_prod\'' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00079', 'Module \'' $ l.module:code $ '\' is not installed in store \'' $ g.Store:code $ '\'' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.fields"	VALUE = "">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Product_Fields( l.module, l.fields ) }">

		<MvREFERENCEARRAY NAME = "l.customfield_members" VARIABLE = "l.customfield_values">
			<MvMEMBER NAME = "{ l.module:code }">
		</MvREFERENCEARRAY>

		<MvFOREACH ITERATOR = "l.customfield_code" ARRAY = "l.customfield_codelist" COUNT = "{ miva_struct_members( l.customfield_members, l.customfield_codelist ) }">
			<MvASSIGN NAME = "l.customfield_code"		VALUE = "{ JSON_Decode( l.customfield_code ) }">

			<MvIF EXPR = "{ NOT miva_array_search( l.fields, 1, l.field, 'l.field:code EQ l.customfield_code' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.module:code $ ':' $ l.customfield_code, 'Failed to load custom field \'' $ l.customfield_code $ '\'' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield"			VALUE = "">
			<MvASSIGN NAME = "l.customfield:module"		VALUE = "{ l.module }">
			<MvASSIGN NAME = "l.customfield:code"		VALUE = "{ l.customfield_code }">
			<MvASSIGN NAME = "l.customfield:type"		VALUE = "{ l.field:type }">

			<MvREFERENCEARRAY NAME = "l.customfield_value" VARIABLE = "l.customfield_values">
				<MvMEMBER NAME = "{ l.module:code }">
				<MvMEMBER NAME = "{ l.customfield_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.customfield:value"			VALUE = "{ JSON_Decode( l.customfield_value ) }">
			<MvELSE>												<MvASSIGN NAME = "l.customfield:value_count"	VALUE = "{ JSON_Array_String( l.customfield_value, l.customfield:values ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield_count"		VALUE = "{ miva_array_insert( l.customfields, l.customfield, -1 ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Insert product
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Begin() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Insert( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_URI_UT ].URI_Generate_Product_New( l.product ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00074', 'Product \'' $ l.product:code $ '\' created' ) }">

	<MvCOMMENT>
	|
	| Update Inventory, if enabled
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.inventory_enabled AND NOT ISNULL l.product_inventory }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_INV_DB ].InventoryDefaultProductSettings( l.productinventory_settings ) }">

		<MvASSIGN NAME = "l.productinventory_settings:product_id"	VALUE = "{ l.product:id }">
		<MvASSIGN NAME = "l.productinventory_settings:active"		VALUE = 1>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventoryProductSettings_Insert( l.productinventory_settings ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Feature_INV_DB ].InventoryProductCount_Insert( l.product:id, l.product_inventory ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00075', 'Current stock for product \'' $ l.product:code $ '\' updated' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Insert Custom Fields
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ l.customfield_count }">
		<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Product_Set_Field( l.customfield:module, l.product:id, l.customfield:code, l.customfield:value ) }">
		<MvELSE>												<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Product_Set_Field_Array( l.customfield:module, l.product:id, l.customfield:code, l.customfield:values, l.customfield:value_count ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.result }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.customfield:module:code $ ':' $ l.customfield:code, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.customfield_count }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Update_LastUpdated_Product( l.product ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Commit() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Product( l.product ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Update" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_code"	VALUE = "{ l.product:code }">

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'O', 'Product_Code',					l.product:code )		OR
					NOT JSON_Input_Text(	'O', 'Product_Name',					l.product:name )		OR
					NOT JSON_Input_Text(	'o', 'Product_SKU',						l.product:sku )			OR
					NOT JSON_Input_Text(	'o', 'Product_Thumbnail',				l.product:thumbnail )	OR
					NOT JSON_Input_Text(	'o', 'Product_Image',					l.product:image )		OR
					NOT JSON_Input_Price(	'O', 'Product_Price',					l.product:price )		OR
					NOT JSON_Input_Price(	'O', 'Product_Cost',					l.product:cost )		OR
					NOT JSON_Input_Weight(	'O', 'Product_Weight',					l.product:weight )		OR
					NOT JSON_Input_Boolean(	'O', 'Product_Taxable',					l.product:taxable )		OR
					NOT JSON_Input_Boolean(	'O', 'Product_Active',					l.product:active )		OR
					NOT JSON_Input_Text(	'o', 'Product_Page_Title',				l.product:page_title )	OR
					NOT JSON_Input_Text(	'o', 'Product_Description',				l.product:descrip )		OR
					NOT JSON_Input_Integer(	'o', 'Product_Inventory',				l.product_inventory )	OR
					NOT JSON_Input_Code(	'o', 'Product_Alternate_Display_Page',	l.product:page_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ tolower( l.original_code ) NE tolower( l.product:code ) }">
		<MvIF EXPR = "{ [ g.Library_DB ].Product_Load_Code( l.product:code, l.existing_product ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Code', 'A product with the code \'' $ l.existing_product:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'Product_Canonical_Category_Code' ) }">
		<MvIF EXPR = "{ NOT JSON_Input_Text( 'o', 'Product_Canonical_Category_Code', l.canonical_category_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		<MvELSEIF EXPR = "{ ISNULL l.canonical_category_code }">
			<MvASSIGN NAME = "l.product:cancat_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Category_Load_Code( l.canonical_category_code, l.canonical_category ) }">
			<MvASSIGN NAME = "l.product:cancat_id"	VALUE = "{ l.canonical_category:id }">
		<MvELSEIF EXPR = "{ [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Canonical_Category_Code', 'Category \'' $ l.canonical_category_code $ '\' not found' ) }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_NonNegative_Required( l.product:price ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Price', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Price_NonNegative_Required( l.product:cost ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Cost', g.Validation_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Weight( l.product:weight ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Weight', g.Validation_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Validate custom fields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customfields"		VALUE = "">
	<MvASSIGN NAME = "l.customfield_count"	VALUE = 0>
	<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Input_Retrieve_Raw( 'CustomField_Values', l.customfield_values ) }">

	<MvFOREACH ITERATOR = "l.module_code" ARRAY = "l.module_codelist" COUNT = "{ miva_struct_members( l.customfield_values, l.module_codelist ) }">
		<MvASSIGN NAME = "l.module_code"	VALUE = "{ JSON_Decode( l.module_code ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00080', 'Module \'' $ l.module_code $ '\' not found' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00081', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:fields_prod }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00082', 'Module \'' $ l.module:code $ '\' does not provide feature \'fields_prod\'' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00083', 'Module \'' $ l.module:code $ '\' is not installed in store \'' $ g.Store:code $ '\'' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.fields"	VALUE = "">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Product_Fields( l.module, l.fields ) }">

		<MvREFERENCEARRAY NAME = "l.customfield_members" VARIABLE = "l.customfield_values">
			<MvMEMBER NAME = "{ l.module:code }">
		</MvREFERENCEARRAY>

		<MvFOREACH ITERATOR = "l.customfield_code" ARRAY = "l.customfield_codelist" COUNT = "{ miva_struct_members( l.customfield_members, l.customfield_codelist ) }">
			<MvASSIGN NAME = "l.customfield_code"		VALUE = "{ JSON_Decode( l.customfield_code ) }">

			<MvIF EXPR = "{ NOT miva_array_search( l.fields, 1, l.field, 'l.field:code EQ l.customfield_code' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.module:code $ ':' $ l.customfield_code, 'Failed to load custom field \'' $ l.customfield_code $ '\'' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield"			VALUE = "">
			<MvASSIGN NAME = "l.customfield:module"		VALUE = "{ l.module }">
			<MvASSIGN NAME = "l.customfield:code"		VALUE = "{ l.customfield_code }">
			<MvASSIGN NAME = "l.customfield:type"		VALUE = "{ l.field:type }">

			<MvREFERENCEARRAY NAME = "l.customfield_value" VARIABLE = "l.customfield_values">
				<MvMEMBER NAME = "{ l.module:code }">
				<MvMEMBER NAME = "{ l.customfield_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.customfield:value"			VALUE = "{ JSON_Decode( l.customfield_value ) }">
			<MvELSE>												<MvASSIGN NAME = "l.customfield:value_count"	VALUE = "{ JSON_Array_String( l.customfield_value, l.customfield:values ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield_count"		VALUE = "{ miva_array_insert( l.customfields, l.customfield, -1 ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvCOMMENT>
	|
	| Update product
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Begin() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Product \'' $ l.product:code $ '\' updated' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_URI_UT ].URI_Generate_Product_Update( l.product ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00009', 'Product \'' $ l.product:code $ '\' updated' ) }">

	<MvCOMMENT>
	|
	| Update Inventory, if enabled
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT ISNULL l.product_inventory }">
		<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'INVT', 0, 0, 1, 0 ) }">
			<MvIF EXPR = "{ NOT [ g.Feature_INV_DB ].InventoryProductCount_Update( l.product:id, l.product_inventory ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00063', 'Current stock for product \'' $ l.product:code $ '\' updated' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Update Custom Fields
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ l.customfield_count }">
		<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Product_Set_Field( l.customfield:module, l.product:id, l.customfield:code, l.customfield:value ) }">
		<MvELSE>												<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Product_Set_Field_Array( l.customfield:module, l.product:id, l.customfield:code, l.customfield:values, l.customfield:value_count ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.result }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.customfield:module:code $ ':' $ l.customfield:code, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.customfield_count }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Update_LastUpdated_Product( l.product ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Product_Transaction_Commit_PreserveError() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Transaction_Commit() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_DisplayOrder_Update" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvFOREACH ITERATOR = "l.product_order" ARRAY = "g.Product_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.product_order:id"				VALUE = "{ int( l.product_order:id ) }">
		<MvASSIGN NAME = "l.product_order:offset"			VALUE = "{ int( l.product_order:offset ) }">
		<MvASSIGN NAME = "l.product_order:original_offset"	VALUE = "{ int( l.product_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Positive_Required( l.product_order:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.change_count"								VALUE = 0>

	<MvFOREACH ITERATOR = "l.product_order" ARRAY = "g.Product_Order">
		<MvASSIGN NAME = "l.change_count"							VALUE = "{ l.change_count + 1 }">
		<MvASSIGN NAME = "l.changes" INDEX = "{ l.change_count }"	VALUE = "{ l.product_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.change_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].ProductList_Update_Offsets( l.changes ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00026', 'Product sort order updated' ) }">
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductList_BatchSort" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Product_Sort_By"			VALUE = "{ trim( g.Product_Sort_By ) }">
	<MvASSIGN NAME = "g.Product_Sort_Ascending"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( g.Product_Sort_Ascending ) }">

	<MvIF EXPR = "{ substring_var( g.Product_Sort_By, 1, 1 ) EQ '-' }">
		<MvASSIGN NAME = "l.sort"				VALUE = "{ substring_var( g.Product_Sort_By, 2, len_var( g.Product_Sort_By ) - 1 ) }">
		<MvASSIGN NAME = "l.ascending"			VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.sort"				VALUE = "{ g.Product_Sort_By }">
		<MvASSIGN NAME = "l.ascending"			VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Sort_All( l.sort, l.ascending ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00027', 'Product sort order updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
|	JSON Product Attributes
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_ProductAttribute_Load" PARAMETERS = "product var, attribute var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'Attribute_ID', l.attribute_id ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Load_ID( l.attribute_id, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00086', 'Attribute not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.attribute:product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00099', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Edit_Attribute', l.attribute_code ) }">
		<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Load_Code( l.product:id, l.attribute_code, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00087', 'Attribute not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Attribute_Code', l.attribute_code ) }">
		<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Load_Code( l.product:id, l.attribute_code, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00088', 'Attribute not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00092', 'Unable to load attribute: One of Attribute_ID, Edit_Attribute, or Attribute_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductOption_Load" PARAMETERS = "product var, attribute var, option var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'Option_ID', l.option_id ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Option_Load_ID( l.option_id, l.option ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00031', 'Option not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Load_ID( l.option:attr_id, l.attribute ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00100', 'Attribute not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_ID( l.attribute:product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00101', 'Product not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Option_Code', l.option_code ) }">
		<MvIF EXPR = "{ NOT JSON_ProductAttribute_Load(	l.product, l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Option_Load_Code( l.attribute:id, l.option_code, l.option ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00032', 'Option not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-PRD-00102', 'Unable to load option: One of Option_ID or Option_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductAttribute" PARAMETERS = "attribute var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":				<MvEVAL EXPR = "{ int( l.attribute:id ) }">,
	"product_id":		<MvEVAL EXPR = "{ int( l.attribute:product_id ) }">,
	"default_id":		<MvEVAL EXPR = "{ int( l.attribute:default_id ) }">,
	"disp_order":		<MvEVAL EXPR = "{ int( l.attribute:disp_order ) }">,
	"attemp_id":		<MvEVAL EXPR = "{ int( l.attribute:attemp_id ) }">,
	"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:code ) }">",
	"type":				"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:type ) }">",
	"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:prompt ) }">",
	"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:price ) }">,
	"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:cost ) }">,
	"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.attribute:weight ) }">,
	"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.attribute:weight ) ) }">",
	"required":			<MvEVAL EXPR = "{ JSON_Boolean( l.attribute:required ) }">,
	"inventory":		<MvEVAL EXPR = "{ JSON_Boolean( l.attribute:inventory ) }">,
	"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.attribute:image ) }">"
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductOption" PARAMETERS = "option var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":				<MvEVAL EXPR = "{ int( l.option:id ) }">,
	"product_id":		<MvEVAL EXPR = "{ int( l.option:product_id ) }">,
	"attr_id":			<MvEVAL EXPR = "{ int( l.option:attr_id ) }">,
	"disp_order":		<MvEVAL EXPR = "{ int( l.option:disp_order ) }">,
	"code":				"<MvEVAL EXPR = "{ JSON_Encode( l.option:code ) }">",
	"prompt":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:prompt ) }">",
	"price":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:price ) }">,
	"cost":				<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:cost ) }">,
	"weight":			<MvEVAL EXPR = "{ encodejavascriptnumber( l.option:weight ) }">,
	"formatted_weight":	"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( l.attribute:weight ) ) }">",
	"image":			"<MvEVAL EXPR = "{ JSON_Encode( l.option:image ) }">"
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductAttributeAndOptionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.available_filters"	VALUE = "">
	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.search_query"		VALUE = "">

	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'attr.code;opt.code;attmpat.code;attmpop.code',			'code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'attr.prompt;opt.prompt;attmpat.prompt;attmpop.prompt',	'prompt' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'attr.price;opt.price;attmpat.price;attmpop.price',		'price' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'attr.cost;opt.cost;attmpat.cost;attmpop.cost',			'cost' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'attr.weight;opt.weight;attmpat.weight;attmpop.weight',	'weight' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'attr.image;opt.image;attmpat.image;attmpop.image',		'image' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'attr.type',												'type' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(	l.available_filters, 'attr.attemp_id',											'template' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_BOOL(	l.available_filters, 'attr.required;attmpat.required',							'required' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_BOOL(	l.available_filters, 'attr.inventory;attmpat.inventory',						'inventory' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'attr.code;attmpat.code',									'attr_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'attr.prompt;attmpat.prompt',								'attr_prompt' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'attr.price;attmpat.price',								'attr_price' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'attr.cost;attmpat.cost',									'attr_cost' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'attr.weight;attmpat.weight',								'attr_weight' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'attr.image;attmpat.image',								'attr_image' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'opt.code;attmpop.code',									'opt_code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'opt.prompt;attmpop.prompt',								'opt_prompt' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'opt.price;attmpop.price',									'opt_price' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'opt.cost;attmpop.cost',									'opt_cost' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_DOUBLE(	l.available_filters, 'opt.weight;attmpop.weight',								'opt_weight' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(	l.available_filters, 'opt.image;attmpop.image',									'opt_image' ) }">

	<MvCOMMENT> MMList always sends Offset and Count, but this function does not use them </MvCOMMENT>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'attr.id				AS attr_id,
																				 attr.product_id		AS attr_product_id,
																				 attr.default_id		AS attr_default_id,
																				 attr.disp_order		AS attr_disp_order,
																				 attr.code				AS attr_code,
																				 attr.type				AS attr_type,
																				 attr.attemp_id			AS attr_attemp_id,
																				 attr.prompt			AS attr_prompt,
																				 attr.price				AS attr_price,
																				 attr.cost				AS attr_cost,
																				 attr.weight			AS attr_weight,
																				 attr.required			AS attr_required,
																				 attr.inventory			AS attr_inventory,
																				 attr.image				AS attr_image,
																				 opt.id					AS opt_id,
																				 opt.product_id			AS opt_product_id,
																				 opt.attr_id			AS opt_attr_id,
																				 opt.disp_order			AS opt_disp_order,
																				 opt.code				AS opt_code,
																				 opt.prompt				AS opt_prompt,
																				 opt.price				AS opt_price,
																				 opt.cost				AS opt_cost,
																				 opt.weight				AS opt_weight,
																				 opt.image				AS opt_image,
																				 attemp.code			AS attemp_code,
																				 attemp.prompt			AS attemp_prompt,
																				 attemp.refcount		AS attemp_refcount,
																				 attmpat.id				AS attmpat_id,
																				 attmpat.attemp_id		AS attmpat_attemp_id,
																				 attmpat.default_id		AS attmpat_default_id,
																				 attmpat.disporder		AS attmpat_disporder,
																				 attmpat.code			AS attmpat_code,
																				 attmpat.type			AS attmpat_type,
																				 attmpat.prompt			AS attmpat_prompt,
																				 attmpat.price			AS attmpat_price,
																				 attmpat.cost			AS attmpat_cost,
																				 attmpat.weight			AS attmpat_weight,
																				 attmpat.required		AS attmpat_required,
																				 attmpat.inventory		AS attmpat_inventory,
																				 attmpat.image			AS attmpat_image,
																				 attmpop.id				AS attmpop_id,
																				 attmpop.attemp_id		AS attmpop_attemp_id,
																				 attmpop.attmpat_id		AS attmpop_attmpat_id,
																				 attmpop.disporder		AS attmpop_disporder,
																				 attmpop.code			AS attmpop_code,
																				 attmpop.prompt			AS attmpop_prompt,
																				 attmpop.price			AS attmpop_price,
																				 attmpop.cost			AS attmpop_cost,
																				 attmpop.weight			AS attmpop_weight,
																				 attmpop.image			AS attmpop_image' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Attributes', 'attr' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'attr', g.Store_Table_Prefix $ 'Options', 'opt', 'opt.attr_id = attr.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'attr', g.Store_Table_Prefix $ 'AttributeTemplates', 'attemp', 'attemp.id = attr.attemp_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'attr', g.Store_Table_Prefix $ 'AttributeTemplateAttrs', 'attmpat', 'attmpat.attemp_id = attr.attemp_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'attr', g.Store_Table_Prefix $ 'AttributeTemplateOptions', 'attmpop', 'attmpop.attmpat_id = attmpat.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'attr.product_id = ?', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback( l.search_query, l.filter, l.available_filters, g.Module_JSON, '', 'JSON_ProductAttributeAndOptionList_Load_Query_Search_Filter', l.null ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'code:attr.code;opt.code;attmpat.code;attmpop.code,
																		 prompt:attr.prompt;opt.prompt;attmpat.prompt;attmpop.prompt,
																		 price:attr.price;opt.price;attmpat.price;attmpop.price,
																		 cost:attr.cost;opt.cost;attmpat.cost;attmpop.cost,
																		 weight:attr.weight;opt.weight;attmpat.weight;attmpop.weight,
																		 image:attr.image;opt.image;attmpat.image;attmpop.image,
																		 type:attr.type;attemp.code;attmpat.type,
																		 required:attr.required;attmpat.required,
																		 inventory:attr.inventory;attmpat.inventory,
																		 attr_code:attr.code;attmpat.code,
																		 attr_prompt:attr.prompt;attmpat.prompt,
																		 attr_price:attr.price;attmpat.price,
																		 attr_cost:attr.cost;attmpat.cost,
																		 attr_weight:attr.weight;attmpat.weight,
																		 attr_image:attr.image;attmpat.image,
																		 opt_code:opt.code;attmpop.code,
																		 opt_prompt:opt.prompt;attmpop.prompt,
																		 opt_price:opt.price;attmpop.price,
																		 opt_cost:opt.cost;attmpop.cost,
																		 opt_weight:opt.weight;attmpop.weight,
																		 opt_image:opt.image;attmpop.image',
																		'attr.disp_order;opt.disp_order;attmpat.disporder;attmpop.disporder' ) }">

	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "Attributes"
				QUERY	= "{ l.search_sql }"
				FIELDS	= "{ l.search_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00037', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total_count"		VALUE = 0>
	<MvASSIGN NAME = "l.attr_count"			VALUE = 0>
	<MvASSIGN NAME = "l.opt_count"			VALUE = 0>
	<MvASSIGN NAME = "l.attmpat_count"		VALUE = 0>
	<MvASSIGN NAME = "l.attmpop_count"		VALUE = 0>
	<MvASSIGN NAME = "l.last_attr_id"		VALUE = 0>
	<MvASSIGN NAME = "l.last_opt_id"		VALUE = 0>
	<MvASSIGN NAME = "l.last_attmpat_id"	VALUE = 0>
	<MvASSIGN NAME = "l.last_attmpop_id"	VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"data":
		[
		<MvWHILE EXPR = "{ NOT Attributes.d.EOF }">
			<MvIF EXPR = "{ l.last_attr_id NE Attributes.d.attr_id }">
				<MvIF EXPR = "{ l.attmpop_count }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					]
				</MvIF>

				<MvIF EXPR = "{ l.attmpat_count }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					]
				</MvIF>

				<MvIF EXPR = "{ l.opt_count }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					]
				</MvIF>

				<MvIF EXPR = "{ l.attr_count }">
					<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
				</MvIF>

				<MvASSIGN NAME = "l.has_variant_parts"			VALUE = 0>
				<MvIF EXPR = "{ Attributes.d.attr_inventory		AND
								( Attributes.d.attemp_id EQ 0 )	AND
								( ( Attributes.d.attr_type EQ 'checkbox' ) OR ( Attributes.d.attr_type EQ 'text' ) OR ( Attributes.d.attr_type EQ 'memo' ) ) }">
					<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Option_HasVariantParts( l.product:id, Attributes.d.attr_id, 0, 1 ) }">
						<MvASSIGN NAME = "l.has_variant_parts"	VALUE = 1>
					</MvIF>
				</MvIF>

				<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.attr_count ) }">
				"id":					<MvEVAL EXPR = "{ int( Attributes.d.attr_id ) }">,
				"product_id":			<MvEVAL EXPR = "{ int( Attributes.d.attr_product_id ) }">,
				"default_id":			<MvEVAL EXPR = "{ int( Attributes.d.attr_default_id ) }">,
				"disp_order":			<MvEVAL EXPR = "{ int( Attributes.d.attr_disp_order ) }">,
				"attemp_id":			<MvEVAL EXPR = "{ int( Attributes.d.attr_attemp_id ) }">,
				"code":					"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attr_code ) }">",
				"type":					"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attr_type ) }">",
				"prompt":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attr_prompt ) }">",
				"price":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attr_price ) }">,
				"cost":					<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attr_cost ) }">,
				"weight":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attr_weight ) }">,
				"formatted_weight":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( Attributes.d.attr_weight ) ) }">",
				"required":				<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.attr_required ) }">,
				"inventory":			<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.attr_inventory ) }">,
				"image":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attr_image ) }">",
				"has_variant_parts":	<MvEVAL EXPR = "{ JSON_Boolean( l.has_variant_parts ) }">

				<MvIF EXPR = "{ Attributes.d.attr_attemp_id }">
					, "template":
					{
						"id":		<MvEVAL EXPR = "{ int( Attributes.d.attr_attemp_id ) }">,
						"code":		"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attemp_code ) }">",
						"prompt":	"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attemp_prompt ) }">",
						"refcount":	<MvEVAL EXPR = "{ int( Attributes.d.attemp_refcount ) }">
					}
				</MvIF>

				<MvASSIGN NAME = "l.total_count"			VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_attr_id"			VALUE = "{ Attributes.d.attr_id }">
				<MvASSIGN NAME = "l.last_opt_id"			VALUE = 0>
				<MvASSIGN NAME = "l.last_attmpat_id"		VALUE = 0>
				<MvASSIGN NAME = "l.last_attmpop_id"		VALUE = 0>
				<MvASSIGN NAME = "l.opt_count"				VALUE = 0>
				<MvASSIGN NAME = "l.attmpat_count"			VALUE = 0>
				<MvASSIGN NAME = "l.attmpop_count"			VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ Attributes.d.attr_attemp_id EQ 0 }">
				<MvIF EXPR = "{ l.last_opt_id NE Attributes.d.opt_id AND NOT ISNULL Attributes.d.opt_id }">
					<MvIF EXPR = "{ l.opt_count }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					</MvIF>

					<MvIF EXPR = "{ NOT l.opt_count }">
						, "options":
						[
					</MvIF>

					<MvASSIGN NAME = "l.has_variant_parts"			VALUE = 0>
					<MvIF EXPR = "{ Attributes.d.attr_inventory }">
						<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Option_HasVariantParts( l.product:id, Attributes.d.attr_id, 0, Attributes.d.opt_id ) }">
							<MvASSIGN NAME = "l.has_variant_parts"	VALUE = 1>
						</MvIF>
					</MvIF>

					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.opt_count ) }">
					"id":						<MvEVAL EXPR = "{ int( Attributes.d.opt_id ) }">,
					"product_id":				<MvEVAL EXPR = "{ int( Attributes.d.opt_product_id ) }">,
					"attr_id":					<MvEVAL EXPR = "{ int( Attributes.d.opt_attr_id ) }">,
					"disp_order":				<MvEVAL EXPR = "{ int( Attributes.d.opt_disp_order ) }">,
					"code":						"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.opt_code ) }">",
					"prompt":					"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.opt_prompt ) }">",
					"price":					<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.opt_price ) }">,
					"cost":						<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.opt_cost ) }">,
					"weight":					<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.opt_weight ) }">,
					"formatted_weight":			"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( Attributes.d.opt_weight ) ) }">",
					"image":					"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.opt_image ) }">",
					"has_variant_parts":		<MvEVAL EXPR = "{ JSON_Boolean( l.has_variant_parts ) }">,

					<MvIF EXPR = "{ Attributes.d.attr_default_id EQ Attributes.d.opt_id }">
						"default_opt": true
					<MvELSE>
						"default_opt": false
					</MvIF>

					<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
					<MvASSIGN NAME = "l.last_opt_id"		VALUE = "{ Attributes.d.opt_id }">
				</MvIF>
			<MvELSE>
				<MvIF EXPR = "{ l.last_attmpat_id NE Attributes.d.attmpat_id }">
					<MvIF EXPR = "{ l.attmpop_count }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
						]
					</MvIF>

					<MvIF EXPR = "{ l.attmpat_count }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					</MvIF>

					<MvIF EXPR = "{ NOT l.attmpat_count }">
						, "attributes":
						[
					</MvIF>

					<MvASSIGN NAME = "l.has_variant_parts"			VALUE = 0>
					<MvIF EXPR = "{ Attributes.d.attmpat_inventory AND
									( ( Attributes.d.attmpat_type EQ 'checkbox' ) OR ( Attributes.d.attmpat_type EQ 'text' ) OR ( Attributes.d.attmpat_type EQ 'memo' ) ) }">
						<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Option_HasVariantParts( l.product:id, Attributes.d.attr_id, Attributes.d.attmpat_id, 1 ) }">
							<MvASSIGN NAME = "l.has_variant_parts"	VALUE = 1>
						</MvIF>
					</MvIF>

					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.attmpat_count ) }">
					"id":					<MvEVAL EXPR = "{ int( Attributes.d.attmpat_id ) }">,
					"attemp_id":			<MvEVAL EXPR = "{ int( Attributes.d.attmpat_attemp_id ) }">,
					"default_id":			<MvEVAL EXPR = "{ int( Attributes.d.attmpat_default_id ) }">,
					"disporder":			<MvEVAL EXPR = "{ int( Attributes.d.attmpat_disporder ) }">,
					"code":					"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_code ) }">",
					"type":					"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_type ) }">",
					"prompt":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_prompt ) }">",
					"price":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpat_price ) }">,
					"cost":					<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpat_cost ) }">,
					"weight":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpat_weight ) }">,
					"formatted_weight":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( Attributes.d.attmpat_weight ) ) }">",
					"required":				<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.attmpat_required ) }">,
					"inventory":			<MvEVAL EXPR = "{ JSON_Boolean( Attributes.d.attmpat_inventory ) }">,
					"image":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpat_image ) }">",
					"has_variant_parts":	<MvEVAL EXPR = "{ JSON_Boolean( l.has_variant_parts ) }">

					<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
					<MvASSIGN NAME = "l.last_attmpat_id"	VALUE = "{ Attributes.d.attmpat_id }">
					<MvASSIGN NAME = "l.last_attmpop_id"	VALUE = 0>
					<MvASSIGN NAME = "l.attmpop_count"		VALUE = 0>
				</MvIF>

				<MvIF EXPR = "{ l.last_attmpop_id NE Attributes.d.attmpop_id AND NOT ISNULL Attributes.d.attmpop_id }">
					<MvIF EXPR = "{ l.attmpop_count }">
						<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
					</MvIF>

					<MvIF EXPR = "{ NOT l.attmpop_count }">
						, "options":
						[
					</MvIF>

					<MvASSIGN NAME = "l.has_variant_parts"			VALUE = 0>
					<MvIF EXPR = "{ Attributes.d.attmpat_inventory }">
						<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Option_HasVariantParts( l.product:id, Attributes.d.attr_id, Attributes.d.attmpop_attmpat_id, Attributes.d.attmpop_id ) }">
							<MvASSIGN NAME = "l.has_variant_parts"	VALUE = 1>
						</MvIF>
					</MvIF>

					<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.attmpop_count ) }">
					"id":					<MvEVAL EXPR = "{ int( Attributes.d.attmpop_id ) }">,
					"attemp_id":			<MvEVAL EXPR = "{ int( Attributes.d.attmpop_attemp_id ) }">,
					"attmpat_id":			<MvEVAL EXPR = "{ int( Attributes.d.attmpop_attmpat_id ) }">,
					"disporder":			<MvEVAL EXPR = "{ int( Attributes.d.attmpop_disporder ) }">,
					"code":					"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpop_code ) }">",
					"prompt":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpop_prompt ) }">",
					"price":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpop_price ) }">,
					"cost":					<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpop_cost ) }">,
					"weight":				<MvEVAL EXPR = "{ encodejavascriptnumber( Attributes.d.attmpop_weight ) }">,
					"formatted_weight":		"<MvEVAL EXPR = "{ JSON_Encode( [ g.Library_Utilities ].Format_Weight( Attributes.d.attmpop_weight ) ) }">",
					"image":				"<MvEVAL EXPR = "{ JSON_Encode( Attributes.d.attmpop_image ) }">",
					"has_variant_parts":	<MvEVAL EXPR = "{ JSON_Boolean( l.has_variant_parts ) }">,

					<MvIF EXPR = "{ Attributes.d.attmpat_default_id EQ Attributes.d.attmpop_id }">
						"default_opt": true
					<MvELSE>
						"default_opt": false
					</MvIF>

					<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
					<MvASSIGN NAME = "l.last_attmpop_id"	VALUE = "{ Attributes.d.attmpop_id }">
				</MvIF>
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "Attributes" ROWS = 1>
		</MvWHILE>
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "Attributes">

		<MvIF EXPR = "{ l.attmpop_count }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			]
		</MvIF>

		<MvIF EXPR = "{ l.attmpat_count }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			]
		</MvIF>

		<MvIF EXPR = "{ l.opt_count }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
			]
		</MvIF>

		<MvIF EXPR = "{ l.attr_count }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvIF>
		],
		"start_offset": 0,
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">
	}

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductAttributeAndOptionList_Load_Query_Search_Filter" PARAMETERS = "query var, field_count var, search_field, search_operator, search_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.search_field EQ 'attr_code' OR l.search_field EQ 'opt_code' OR l.search_field EQ 'attr_prompt' OR l.search_field EQ 'opt_prompt' OR l.search_field EQ 'image' }">
		<MvASSIGN NAME = "l.include_attr"				VALUE = 0>
		<MvASSIGN NAME = "l.include_opt"				VALUE = 0>
		<MvASSIGN NAME = "l.include_attmpat"			VALUE = 0>
		<MvASSIGN NAME = "l.include_attmpop"			VALUE = 0>

		<MvIF EXPR = "{ l.search_field EQ 'attr_code' }">
			<MvASSIGN NAME = "l.name"					VALUE = "code">
			<MvASSIGN NAME = "l.include_attr"			VALUE = 1>
			<MvASSIGN NAME = "l.include_attmpat"		VALUE = 1>
		<MvELSEIF EXPR = "{ l.search_field EQ 'opt_code' }">
			<MvASSIGN NAME = "l.name"					VALUE = "code">
			<MvASSIGN NAME = "l.include_opt"			VALUE = 1>
			<MvASSIGN NAME = "l.include_attmpop"		VALUE = 1>
		<MvELSEIF EXPR = "{ l.search_field EQ 'attr_prompt' }">
			<MvASSIGN NAME = "l.name"					VALUE = "prompt">
			<MvASSIGN NAME = "l.include_attr"			VALUE = 1>
			<MvASSIGN NAME = "l.include_attmpat"		VALUE = 1>
		<MvELSEIF EXPR = "{ l.search_field EQ 'opt_prompt' }">
			<MvASSIGN NAME = "l.name"					VALUE = "prompt">
			<MvASSIGN NAME = "l.include_opt"			VALUE = 1>
			<MvASSIGN NAME = "l.include_attmpop"		VALUE = 1>
		<MvELSEIF EXPR = "{ l.search_field EQ 'image' }">
			<MvASSIGN NAME = "l.name"					VALUE = "image">
			<MvASSIGN NAME = "l.include_attr"			VALUE = 1>
			<MvASSIGN NAME = "l.include_opt"			VALUE = 1>
			<MvASSIGN NAME = "l.include_attmpat"		VALUE = 1>
			<MvASSIGN NAME = "l.include_attmpop"		VALUE = 1>
		</MvIF>

		<MvIF EXPR = "{ l.search_operator EQ 'NE' }">			<MvASSIGN NAME = "l.operator" 	VALUE = "<>">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'NC' }">		<MvASSIGN NAME = "l.operator" 	VALUE = "NOT LIKE">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'NOTLIKE' }">	<MvASSIGN NAME = "l.operator" 	VALUE = "NOT LIKE">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'NOT_IN' }">	<MvASSIGN NAME = "l.operator"	VALUE = "<>">
		<MvELSEIF EXPR = "{ l.search_operator EQ 'NULL' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">

			<MvIF EXPR = "{ l.include_attr }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( attr.'		$ l.name $ ' IS NULL OR attr.'		$ l.name $ ' = \'\' )', '' ) }"> </MvIF>
			<MvIF EXPR = "{ l.include_opt }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( opt.'		$ l.name $ ' IS NULL OR opt.'		$ l.name $ ' = \'\' )', '' ) }"> </MvIF>
			<MvIF EXPR = "{ l.include_attmpat }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( attmpat.'	$ l.name $ ' IS NULL OR attmpat.'	$ l.name $ ' = \'\' )', '' ) }"> </MvIF>
			<MvIF EXPR = "{ l.include_attmpop }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( attmpop.'	$ l.name $ ' IS NULL OR attmpop.'	$ l.name $ ' = \'\' )', '' ) }"> </MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'AND' ) }">

			<MvFUNCTIONRETURN VALUE = 1>
		<MvELSE>
			<MvCOMMENT>
			|
			|	We only care about the negative cases in this override. If we don't match the
			|	above cases, return 0 so that JSON_Search_Filter handles there WHERE for us
			|
			</MvCOMMENT>

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.search_operator EQ 'NOT_IN' }">
			<MvASSIGN NAME = "l.in_count"			VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.search_value, ',', l.in_list ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.in_count"			VALUE = 1>
			<MvASSIGN NAME = "l.in_list" INDEX = 1	VALUE = "{ l.search_value }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">

		<MvFOREACH ITERATOR = "l.in_value" ARRAY = "l.in_list" COUNT = "{ l.in_count }">
			<MvIF EXPR = "{ ISNULL l.in_value }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvIF EXPR = "{ l.search_operator EQ 'NC' }">
				<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_search_value" VALUE = "{ '%' $ trim( l.in_value ) $ '%' }">
					<MvDIMENSION INDEX = "{ ++l.field_count }">
				</MvASSIGNARRAY>
			<MvELSE>
				<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_search_value" VALUE = "{ trim( l.in_value ) }">
					<MvDIMENSION INDEX = "{ ++l.field_count }">
				</MvASSIGNARRAY>
			</MvIF>

			<MvIF EXPR = "{ l.include_attr }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'attr.'		$ l.name $ '' )	$ ' ' $ l.operator $ ' ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' OR attr.'		$ l.name $ ' IS NULL )', 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']' ) }"> </MvIF>
			<MvIF EXPR = "{ l.include_opt }">		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'opt.'		$ l.name $ '' )	$ ' ' $ l.operator $ ' ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' OR opt.'		$ l.name $ ' IS NULL )', 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']' ) }"> </MvIF>
			<MvIF EXPR = "{ l.include_attmpat }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'attmpat.'	$ l.name $ '' )	$ ' ' $ l.operator $ ' ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' OR attmpat.'	$ l.name $ ' IS NULL )', 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']' ) }"> </MvIF>
			<MvIF EXPR = "{ l.include_attmpop }">	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'attmpop.'	$ l.name $ '' )	$ ' ' $ l.operator $ ' ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) $ ' OR attmpop.'	$ l.name $ ' IS NULL )', 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']' ) }"> </MvIF>
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, 'AND' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.search_field EQ 'price' OR l.search_field EQ 'cost' OR l.search_field EQ 'weight' }">
		<MvIF EXPR = "{ l.search_field EQ 'price' }">			<MvASSIGN NAME = "l.name"		VALUE = "price">
		<MvELSEIF EXPR = "{ l.search_field EQ 'cost' }">		<MvASSIGN NAME = "l.name"		VALUE = "cost">
		<MvELSE>												<MvASSIGN NAME = "l.name"		VALUE = "weight">
		</MvIF>

		<MvIF EXPR = "{ l.search_operator NE 'IN' AND l.search_operator NE 'NOT_IN' }">
			<MvASSIGN NAME = "l.in_count"			VALUE = 1>
			<MvASSIGN NAME = "l.in_list" INDEX = 1	VALUE = "{ l.search_value }">
			<MvASSIGN NAME = "l.subwhere_operator"	VALUE = "AND">
		<MvELSE>
			<MvIF EXPR = "{ l.search_operator EQ 'IN' }">	<MvASSIGN NAME = "l.subwhere_operator" VALUE = "OR">
			<MvELSE>										<MvASSIGN NAME = "l.subwhere_operator" VALUE = "AND">
			</MvIF>

			<MvASSIGN NAME = "l.in_count"			VALUE = "{ [ g.Module_Library_Utilities ].SplitStringAndTrim( l.search_value, ',', l.in_list ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_BEGIN( l.query ) }">

		<MvFOREACH ITERATOR = "l.in_value" ARRAY = "l.in_list" COUNT = "{ l.in_count }">
			<MvIF EXPR = "{ ISNULL l.in_value }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.attr_where"		VALUE = "{ JSON_ProductAttributeAndOptionList_Load_Query_Search_Filter_WHERE_PriceCostWeight( l.search_operator, 'attr.' $ l.name, l.in_value ) }">
			<MvASSIGN NAME = "l.opt_where"		VALUE = "{ JSON_ProductAttributeAndOptionList_Load_Query_Search_Filter_WHERE_PriceCostWeight( l.search_operator, 'opt.' $ l.name, l.in_value ) }">
			<MvASSIGN NAME = "l.attmpat_where"	VALUE = "{ JSON_ProductAttributeAndOptionList_Load_Query_Search_Filter_WHERE_PriceCostWeight( l.search_operator, 'attmpat.' $ l.name, l.in_value ) }">
			<MvASSIGN NAME = "l.attmpop_where"	VALUE = "{ JSON_ProductAttributeAndOptionList_Load_Query_Search_Filter_WHERE_PriceCostWeight( l.search_operator, 'attmpop.' $ l.name, l.in_value ) }">

			<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_search_value"		VALUE = "{ trim( l.in_value ) }">
				<MvDIMENSION INDEX = "{ ++l.field_count }">
			</MvASSIGNARRAY>

			<MvASSIGN NAME = "l.fields"			VALUE = "">
			<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">
			<MvASSIGN NAME = "l.null"			VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">

			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( ( ( attr.type = \'checkbox\' OR attr.type = \'text\' OR attr.type = \'memo\' ) AND ' $ l.attr_where $ ' AND attr.' $ l.name $ ' IS NOT NULL ) OR
																				 ( ' $ l.opt_where $ ' AND opt.' $ l.name $ ' IS NOT NULL ) OR
																				 ( attr.type = \'template\' AND ( attmpat.type = \'checkbox\' OR attmpat.type = \'text\' OR attmpat.type = \'memo\' ) AND ' $ l.attmpat_where $ ' AND attmpat.' $ l.name $ ' IS NOT NULL ) OR
																				 ( ' $ l.attmpop_where $ ' AND attmpop.' $ l.name $ ' IS NOT NULL ) )', l.fields $ '' ) }">
		</MvFOREACH>

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SUB_WHERE_END( l.query, l.subwhere_operator ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.search_field EQ 'inventory' }">
		<MvIF EXPR = "{ l.search_operator EQ 'TRUE' }">	<MvASSIGN NAME = "l.search_value" VALUE = 1>
		<MvELSE>										<MvASSIGN NAME = "l.search_value" VALUE = 0>
		</MvIF>

		<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_search_value"		VALUE = "{ l.search_value }">
			<MvDIMENSION INDEX = "{ ++l.field_count }">
		</MvASSIGNARRAY>

		<MvASSIGN NAME = "l.null"													VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">
		<MvASSIGN NAME = "l.null"													VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( attr.type <> \'template\' AND attr.inventory = ? ) OR
																			 ( attr.type = \'template\' AND attmpat.inventory = ? )', l.fields $ '' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	<MvELSEIF EXPR = "{ l.search_field EQ 'required' }">
		<MvIF EXPR = "{ l.search_operator EQ 'TRUE' }">	<MvASSIGN NAME = "l.search_value" VALUE = 1>
		<MvELSE>										<MvASSIGN NAME = "l.search_value" VALUE = 0>
		</MvIF>

		<MvASSIGNARRAY NAME = "g.productattributeandoptionlist_search_value"		VALUE = "{ l.search_value }">
			<MvDIMENSION INDEX = "{ ++l.field_count }">
		</MvASSIGNARRAY>

		<MvASSIGN NAME = "l.null"													VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">
		<MvASSIGN NAME = "l.null"													VALUE = "{ miva_array_insert( l.fields, 'g.productattributeandoptionlist_search_value[' $ l.field_count $ ']', -1 ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( attr.type <> \'template\' AND attr.required = ? ) OR
																			 ( attr.type = \'template\' AND attmpat.required = ? )', l.fields $ '' ) }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductAttributeAndOptionList_Load_Query_Search_Filter_WHERE_PriceCostWeight" PARAMETERS = "search_operator, column, search_value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.search_operator EQ 'IN' }">			<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_EQ(		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'NOT_IN' }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NE(		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'EQ' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_EQ(		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'GT' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_GT( 		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'GE' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_GE( 		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'LIKE' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LIKE(		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'NOTLIKE' }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NOTLIKE(	'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'NE' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_NE(		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'LT' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LT(		'DOUBLE', l.column, l.search_value ) }">
	<MvELSEIF EXPR = "{ l.search_operator EQ 'LE' }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Native_DBAPI ].DB_Filter_LE(		'DOUBLE', l.column, l.search_value ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Attribute_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.attribute"			 		VALUE = "">
	<MvASSIGN NAME = "l.attribute:product_id" 		VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.attribute:default_id" 		VALUE = 0>
	<MvASSIGN NAME = "l.attribute:attemp_id" 		VALUE = 0>
	<MvASSIGN NAME = "l.attribute:price" 			VALUE = 0.00>
	<MvASSIGN NAME = "l.attribute:cost" 			VALUE = 0.00>
	<MvASSIGN NAME = "l.attribute:weight" 			VALUE = 0.00>
	<MvASSIGN NAME = "l.attribute:required" 		VALUE = 0>
	<MvASSIGN NAME = "l.attribute:inventory"		VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_List( 'R', 'Type', l.attribute:type, 'radio,select,checkbox,text,memo,template,swatch-select',
																		'radio,select,checkbox,text,memo,template,swatch-select' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.attribute:type EQ 'template' }">
		<MvIF EXPR = "{ NOT [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Load( l.template ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvASSIGN NAME = "l.attribute:attemp_id" 	VALUE = "{ l.template:id }">

		<MvIF EXPR = "{ NOT JSON_Input_Text( 'o:50', 	'Code',		l.attribute:code ) OR
						NOT JSON_Input_Text( 'o',		'Prompt',	l.attribute:prompt ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.attribute:code }">
			<MvASSIGN NAME = "l.attribute:code"		VALUE = "{ l.template:code }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.attribute:prompt }">
			<MvASSIGN NAME = "l.attribute:prompt"	VALUE = "{ l.template:prompt }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_Code( l.attribute:code ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Code', g.Validation_Message ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT JSON_Input_Code(	'R:50', 	'Code',			l.attribute:code )		OR
						NOT JSON_Input_Text(	'R',		'Prompt',		l.attribute:prompt )	OR
						NOT JSON_Input_Text(	'o:254',	'Image',		l.attribute:image )		OR
						NOT JSON_Input_Price(	'O',		'Price',		l.attribute:price )		OR
						NOT JSON_Input_Price(	'O',		'Cost',			l.attribute:cost )		OR
						NOT JSON_Input_Weight(	'O',		'Weight',		l.attribute:weight )	OR
						NOT JSON_Input_Boolean(	'O',		'Required',		l.attribute:required )	OR
						NOT JSON_Input_Boolean(	'O',		'Inventory',	l.attribute:inventory ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ [ g.Library_DB ].Attribute_Load_Code( l.product:id, l.attribute:code, l.existing_attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Code', 'An attribute with the code \'' $ l.existing_attribute:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Attribute_Insert( l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00041', 'Attribute \'' $ l.attribute:code $ '\' created for product \'' $ l.product:code $ '\'' ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_ProductAttribute( l.attribute ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Attribute_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductAttribute_Load( l.product, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.increment_ref_id"					VALUE = 0>
	<MvASSIGN NAME = "l.decrement_ref_id"					VALUE = 0>
	<MvASSIGN NAME = "l.original_attribute"					VALUE = "{ l.attribute }">

	<MvIF EXPR = "{ NOT JSON_Input_Code( 'O:50',	'Code',		l.attribute:code )		OR
					NOT JSON_Input_Text( 'O',		'Prompt',	l.attribute:prompt )	OR
					NOT JSON_Input_List( 'O',		'Type',		l.attribute:type, 'radio,select,checkbox,text,memo,template,swatch-select',
																				  'radio,select,checkbox,text,memo,template,swatch-select' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Library_DB ].Attribute_Load_Code( l.product:id, l.attribute:code, l.existing_attribute ) AND
					l.attribute:id NE l.existing_attribute:id }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Code', 'An attribute with the code \'' $ l.existing_attribute:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.attribute:type EQ 'template' }">
		<MvASSIGN NAME = "l.attribute:price"				VALUE = 0>
		<MvASSIGN NAME = "l.attribute:cost"					VALUE = 0>
		<MvASSIGN NAME = "l.attribute:weight"				VALUE = 0>
		<MvASSIGN NAME = "l.attribute:required"				VALUE = 0>
		<MvASSIGN NAME = "l.attribute:image"				VALUE = "">

		<MvIF EXPR = "{ [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Loaders_Present() }">
			<MvIF EXPR = "{ NOT [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Load( l.template ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvIF EXPR = "{ l.original_attribute:attemp_id NE l.template:id }">
				<MvASSIGN NAME = "l.attribute:attemp_id" 	VALUE = "{ l.template:id }">

				<MvIF EXPR = "{ l.original_attribute:attemp_id }">
					<MvASSIGN NAME = "l.decrement_ref_id"	VALUE = "{ l.original_attribute:attemp_id }">

					<MvIF EXPR = "{ NOT [ g.Feature_ATT_DB ].AttributeTemplate_Decrement_ReferenceCount( l.original_attribute:attemp_id ) }">
						<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
					</MvIF>
				</MvIF>

				<MvASSIGN NAME = "l.increment_ref_id"		VALUE = "{ l.template:id }">

				<MvIF EXPR = "{ NOT [ g.Feature_ATT_DB ].AttributeTemplate_Increment_ReferenceCount( l.template:id ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>
			</MvIF>
		</MvIF>
	<MvELSE>
		<MvASSIGN NAME = "l.attribute:attemp_id" 			VALUE = 0>

		<MvIF EXPR = "{ NOT JSON_Input_Text(	'o:254',	'Image',		l.attribute:image )		OR
						NOT JSON_Input_Price(	'O',		'Price',		l.attribute:price )		OR
						NOT JSON_Input_Price(	'O',		'Cost',			l.attribute:cost )		OR
						NOT JSON_Input_Weight(	'O',		'Weight',		l.attribute:weight )	OR
						NOT JSON_Input_Boolean(	'O',		'Required',		l.attribute:required )	OR
						NOT JSON_Input_Boolean(	'O',		'Inventory',	l.inventory ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ l.original_attribute:type EQ 'template' }">
			<MvASSIGN NAME = "l.decrement_ref_id"			VALUE = "{ l.original_attribute:attemp_id }">

			<MvIF EXPR = "{ NOT [ g.Feature_ATT_DB ].AttributeTemplate_Decrement_ReferenceCount( l.original_attribute:attemp_id ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Attribute_Update( l.attribute ) }">
		<MvASSIGN NAME = "l.error_code"						VALUE = "{ g.Error_Code }">
		<MvASSIGN NAME = "l.error_message"					VALUE = "{ g.Error_Message }">

		<MvIF EXPR = "{ l.increment_ref_id }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Feature_ATT_DB ].AttributeTemplate_Decrement_ReferenceCount( l.increment_ref_id ) }"> </MvIF>
		<MvIF EXPR = "{ l.decrement_ref_id }">	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Feature_ATT_DB ].AttributeTemplate_Increment_ReferenceCount( l.decrement_ref_id ) }"> </MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( l.error_code, l.error_message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00043', 'Attribute \'' $ l.attribute:code $ '\' updated for product \'' $ l.product:code $ '\'' ) }">

	<MvIF EXPR = "{ ( l.original_attribute:type	NE l.attribute:type )	AND
					( l.attribute:type			NE 'radio' )			AND
					( l.attribute:type			NE 'select' )			AND
					( l.attribute:type			NE 'swatch-select' ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Option_Delete_All_Attribute( l.attribute:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'Inventory' ) AND l.attribute:type NE 'template' }">
		<MvIF EXPR = "{ l.inventory NE l.attribute:inventory }">
			<MvASSIGN NAME = "l.attribute:inventory"		VALUE = "{ l.inventory }">

			<MvIF EXPR = "{ NOT [ g.Library_DB ].Attribute_Update_Inventory( l.attribute ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Attribute_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductAttribute_Load( l.product, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Attribute_Delete( l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Update_LastUpdated( l.attribute:product_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Attribute_CopyTemplate" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_ATT_JSON ].JSON_AttributeTemplate_Load( l.template ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_ATT_DB ].AttributeTemplate_Copy( l.template:id, l.product:id, 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00103', 'Attribute template \'' $ l.template:code $ '\' copied to product \'' $ l.product:code $ '\'' ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Attribute_CopyLinkedTemplate" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductAttribute_Load( l.product, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.attribute:attemp_id EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00051', 'The specified attribute is not a linked attribute template' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Feature_ATT_DB ].AttributeTemplate_Load_ID( l.attribute:attemp_id, l.template ) }">
		<MvIF EXPR = "{ [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00052', 'Linked attribute template ' $ l.attribute:attemp_id $ ' not found' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Attribute_Delete_ID( l.attribute:id ) }">										<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Feature_ATT_DB ].AttributeTemplate_Decrement_ReferenceCount( l.template:id ) }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Feature_ATT_DB ].AttributeTemplate_Copy( l.template:id, l.attribute:product_id, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00053', 'Attribute template \'' $ l.template:code $ '\' copied to product \'' $ l.product:code $ '\'' ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Update_LastUpdated( l.attribute:product_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Option_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductAttribute_Load( l.product, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.option"					VALUE = "">
	<MvASSIGN NAME = "l.option:product_id"		VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.option:attr_id"			VALUE = "{ l.attribute:id }">
	<MvASSIGN NAME = "l.option:code"			VALUE = "">
	<MvASSIGN NAME = "l.option:prompt"			VALUE = "">
	<MvASSIGN NAME = "l.option:price"			VALUE = 0.00>
	<MvASSIGN NAME = "l.option:cost"			VALUE = 0.00>
	<MvASSIGN NAME = "l.option:weight"			VALUE = 0.00>
	<MvASSIGN NAME = "l.option:image"			VALUE = "">
	<MvASSIGN NAME = "l.default"				VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'R:50',		'Code',		l.option:code )		OR
					NOT JSON_Input_Text(	'R',		'Prompt',	l.option:prompt )	OR
					NOT JSON_Input_Text(	'o:254',	'Image',	l.option:image )	OR
					NOT JSON_Input_Price(	'o',		'Price',	l.option:price )	OR
					NOT JSON_Input_Price(	'o',		'Cost',		l.option:cost )		OR
					NOT JSON_Input_Weight(	'o',		'Weight',	l.option:weight )	OR
					NOT JSON_Input_Boolean(	'O',		'Default',	l.default ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].Option_Load_Code( l.attribute:id, l.option:code, l.existing_option ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Code', 'An option with the code \'' $ l.existing_option:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Option_Insert( l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00044', 'Option \'' $ l.option:code $ '\' created for attribute \'' $ l.attribute:code $ '\' on product \'' $ l.product:code $ '\'' ) }">

	<MvIF EXPR = "{ l.default }">
		<MvASSIGN NAME = "l.attribute:default_id" VALUE = "{ l.option:id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Update_Default( l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00045', 'Option \'' $ l.option:code $ '\' set as default for attribute \'' $ l.attribute:code $ '\' on product \'' $ l.product:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_ProductOption( l.option ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Option_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductOption_Load( l.product, l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_option"	VALUE = "{ l.option }">

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'O:50',		'Code',		l.option:code )		OR
					NOT JSON_Input_Text(	'O',		'Prompt',	l.option:prompt )	OR
					NOT JSON_Input_Text(	'o:254',	'Image',	l.option:image )	OR
					NOT JSON_Input_Price(	'O',		'Price',	l.option:price )	OR
					NOT JSON_Input_Price(	'O',		'Cost',		l.option:cost )		OR
					NOT JSON_Input_Weight(	'O',		'Weight',	l.option:weight )	OR
					NOT JSON_Input_Boolean(	'O',		'Default',	l.default ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ tolower( l.original_option:code ) NE tolower( l.option:code ) }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Option_Load_Code( l.attribute:id, l.option:code, l.option ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Code', 'An option with the code \'' $ l.option:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Option_Update( l.option ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00046', 'Option \'' $ l.option:code $ '\' updated for attribute \'' $ l.attribute:code $ '\' on product \'' $ l.product:code $ '\'' ) }">

	<MvIF EXPR = "{ l.default }">
		<MvASSIGN NAME = "l.attribute:default_id" VALUE = "{ l.option:id }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Update_Default( l.attribute ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00047', 'Option \'' $ l.option:code $ '\' set as default for attribute \'' $ l.attribute:code $ '\' on product \'' $ l.product:code $ '\'' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Option_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductOption_Load( l.product, l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Option_Delete( l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Option_Set_Default" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_ProductOption_Load( l.product, l.attribute, l.option ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Boolean(	'R', 'Option_Default', l.option_default ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.option_default }">
		<MvASSIGN NAME = "l.attribute:default_id" VALUE = "{ l.option:id }">
	<MvELSE>
		<MvASSIGN NAME = "l.attribute:default_id" VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Attribute_Update_Default( l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AttributeList_DisplayOrder_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.Attribute_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.attribute_order:id"					VALUE = "{ int( l.attribute_order:id ) }">
		<MvASSIGN NAME = "l.attribute_order:offset"				VALUE = "{ int( l.attribute_order:offset ) }">
		<MvASSIGN NAME = "l.attribute_order:original_offset"	VALUE = "{ int( l.attribute_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.attribute_order:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Attribute_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.Option_Order" INDEX = "l.attr_pos">
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attribute_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_order:id"				VALUE = "{ int( l.option_order:id ) }">
			<MvASSIGN NAME = "l.option_order:offset"			VALUE = "{ int( l.option_order:offset ) }">
			<MvASSIGN NAME = "l.option_order:original_offset"	VALUE = "{ int( l.option_order:original_offset ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.option_order:offset ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Option_Order[' $ l.attr_pos $ '][ ' $ l.option_pos $ ' ]', g.Validation_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.attribute_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.Attribute_Order">
		<MvASSIGN NAME = "l.attribute_changes" INDEX = "{ ++l.attribute_count }" VALUE = "{ l.attribute_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.attribute_count }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ProductAttributeList_Update_Offsets( l.product:id, l.attribute_changes ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.attribute_order" ARRAY = "g.Option_Order" INDEX = "l.attr_id">
		<MvASSIGN NAME = "l.option_count" VALUE = 0>
		
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attribute_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_changes" INDEX = "{ ++l.option_count }" VALUE = "{ l.option_order }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.option_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ProductAttributeOptionList_Update_Offsets( l.product:id, l.attr_id, l.option_changes ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Update_LastUpdated( l.product:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Categories
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_ProductCategoryIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.query"				VALUE = "">
	<MvASSIGN NAME = "l.record"				VALUE = "">

	<MvREFERENCE NAME = "l.category"		VARIABLE = "l.record:cat">
	<MvREFERENCE NAME = "l.categoryxprod"	VARIABLE = "l.record:cxp">
	<MvREFERENCE NAME = "l.pbv"				VARIABLE = "l.record:pbv">
	<MvREFERENCE NAME = "l.parentcategory"	VARIABLE = "l.record:parent_cat">

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.assigned"			VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"			VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.category:page_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].PageBranchVersion_Load_Code_Branch_Head( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID(), l.category:page_code, l.pbv ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.category:parent_id }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( l.category:parent_id, l.parentcategory ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.null"				VALUE = "{ [ g.Library_DB ].CategoryXProduct_Load( l.category:id, l.product:id, l.categoryxprod ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'Categories', 'parent_cat', 'cat.parent_id = parent_cat.id', '' ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.product_id = ? AND cxp.cat_id = cat.id', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.product_id = ? AND cxp.cat_id = cat.id', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cxp.cat_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cxp.product_id = ? AND cat.id = cxp.cat_id', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvIF EXPR = "{ NOT JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.category:id, g.Module_JSON, 'JSON_Category_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductCategoryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }"> <MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.search_query, 'cat.*,
																		  cxp.product_id AS assigned' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_INTEGER(	l.search_query, 'pbv.page_id',		'page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR(		l.search_query, 'cat.code',			'cancat_code' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR(		l.search_query, 'parent_cat.code',	'parent_category' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.product_id = ? AND cxp.cat_id = cat.id', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.product_id = ? AND cxp.cat_id = cat.id', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'cxp.cat_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'cxp.product_id = ? AND cat.id = cxp.cat_id', [ g.Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'Categories', 'parent_cat', 'parent_cat.id = cat.parent_id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Category_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Categories', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00055', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.category_count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Category_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.category_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_BaseCategoryList_Category_Read( l.category, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.category_count ) }">
				<MvEVAL EXPR = "{ JSON_Category_OnDemandColumns( l.category, l.ondemandcolumns ) }">
				, "parent_category":	"<MvEVAL EXPR = "{ JSON_Encode( Categories.d.parent_category ) }">",
				"assigned":				<MvEVAL EXPR = "{ JSON_Boolean( Categories.d.assigned ) }">

				<MvEVAL EXPR = "{ JSON_Category_CustomFields_With_Query( l.search_query, l.customfield_state, Categories.d.id, 'Categories' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ProductCategoryList_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer_Array(	'R', 'Category_IDs',	l.category_ids, l.category_id_count ) OR
					NOT JSON_Input_Boolean(			'R', 'Assigned',		l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.category_id" ARRAY = "l.category_ids" COUNT = "{ l.category_id_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( l.category_id, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.category_id, 'MER-JSN-PRD-00104', 'Category not found', l.errors ) }">
		<MvELSE>
			<MvIF EXPR = "{ [ g.Library_DB ].CategoryXProduct_Load( l.category:id, l.product:id, l.categoryxproduct ) }">
				<MvIF EXPR = "{ NOT l.assigned }">
					<MvIF EXPR = "{ NOT [ g.Library_DB ].v10_CategoryXProduct_Delete( l.categoryxproduct ) }">
						<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.category_id, g.Error_Code, g.Error_Message, l.errors ) }">
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00106', 'Product \'' $ l.product:code $ '\' removed from category \'' $ l.category:code $ '\'' ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			<MvELSEIF EXPR = "{ l.assigned }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXProduct_Insert( l.category:id, l.product:id ) }">
					<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.category_id, g.Error_Code, g.Error_Message, l.errors ) }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00105', 'Product \'' $ l.product:code $ '\' assigned to category \'' $ l.category:code $ '\'' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Price Groups
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_ProductPriceGroupList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = "">
	<MvASSIGN NAME = "l.count"			VALUE = "">
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'pg.*,
																				 m.id			AS module_id,
																				 m.code			AS module_code,
																				 m.name			AS module_name,
																				 m.provider		AS module_provider,
																				 m.api_ver		AS module_api_ver,
																				 m.version		AS module_version,
																				 m.module		AS module_module,
																				 m.refcount		AS module_refcount,
																				 m.active		AS module_active,
																				 m.priority		AS module_priority,
																				 pgxp.pgrp_id	AS assigned' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'm.name', 'type' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroupXProduct',	'pgxp' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxp.product_id = ? AND pg.id = pgxp.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pg', g.Store_Table_Prefix $ 'PriceGroupXProduct', 'pgxp', 'pgxp.product_id = ? AND pg.id = pgxp.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.product:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxp.pgrp_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pg', 'Modules', 'm', 'pg.module_id = m.id', '' ) }">

	<MvEVAL EXPR = "{ JSON_Filter( l.search_query, l.filter, [ g.Module_Feature_PGR_JSON ].JSON_BasePriceGroupList_Filters() ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, l.sort,
																		'id:pg.id,name:pg.name,type:m.name:null_char,custscope:pg.custscope,rate:pg.rate,discount:pg.discount,markup:pg.markup,
																		 dt_start:pg.dt_start,dt_end:pg.dt_end,priority:pg.priority;-pg.id,descrip:pg.descrip,display:pg.display,
																		 qualifying_subtotal:pg.qmn_subtot,qualifying_quantity:pg.qmn_quan,qualifying_weight:pg.qmn_weight,
																		 basket_quantity:pg.bmn_quan,basket_subtotal:pg.bmn_subtot,basket_weight:pg.bmn_weight',
																		'-pg.priority;pg.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'PriceGroups', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-PRD-00067', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.product_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT PriceGroups.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.pricegroup_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupAndModule_Read( l.pricegroup ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.pricegroup_count ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_JSON ].JSON_PriceGroup( l.pricegroup ) }">
			, "assigned":	<MvEVAL EXPR = "{ JSON_Boolean( PriceGroups.d.assigned ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Product Shipping Rules
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_ProductShippingRules_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PROD', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'SHIP', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingRules_Load_ProductOrDefault( l.product:id, l.productshippingrules ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Boolean(	'O', 'ShipsInOwnPackaging',		l.productshippingrules:ownpackage )		OR
					NOT JSON_Input_Number(	'O', 'Width',					l.productshippingrules:width,	10, 2 )	OR
					NOT JSON_Input_Number(	'O', 'Length',					l.productshippingrules:length,	10, 2 )	OR
					NOT JSON_Input_Number(	'O', 'Height',					l.productshippingrules:height,	10, 2 )	OR
					NOT JSON_Input_Boolean(	'O', 'LimitShippingMethods',	l.productshippingrules:limitmeths ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'ShippingMethods' ) }">
		<MvASSIGN NAME = "l.productshippingmethods"			VALUE = "">
		<MvASSIGN NAME = "l.productshippingmethod_count"	VALUE = 0>

		<MvFOREACH ITERATOR = "l.shippingmethod" ARRAY = "l.shippingmethods" COUNT = "{ JSON_Input_Array( 'ShippingMethods', l.shippingmethods ) }">
			<MvASSIGN NAME = "l.productshippingmethod"				VALUE = "">
			<MvASSIGN NAME = "l.productshippingmethod:product_id"	VALUE = "{ l.product:id }">
			<MvASSIGN NAME = "l.productshippingmethod:mod_code"		VALUE = "">
			<MvASSIGN NAME = "l.productshippingmethod:meth_code"	VALUE = "">

			<MvIF EXPR = "{ NOT JSON_Input_Element_Text( l.shippingmethod, 'R', 'module_code', l.productshippingmethod:mod_code ) OR
							NOT JSON_Input_Element_Text( l.shippingmethod, 'R', 'method_code', l.productshippingmethod:meth_code ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code( l.productshippingmethod:mod_code, l.module ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>

				<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Input_Element_Error( l.shippingmethod, 'module_code', 'Module not found' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ NOT l.module:active }">
				<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Input_Element_Error( l.shippingmethod, 'module_code', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvIF EXPR = "{ NOT l.module:feature_hash:shipping }">
				<MvASSIGN NAME = "l.null" VALUE = "{ JSON_Input_Element_Error( l.shippingmethod, 'module_code', 'Module \'' $ l.module:code $ '\' does not provide feature \'shipping\'' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
			</MvIF>

			<MvASSIGN NAME = "l.productshippingmethod_count"		VALUE = "{ miva_array_insert( l.productshippingmethods, l.productshippingmethod, -1 ) }">
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Feature_SHP_DB ].ProductShippingRules_Equal_Default( l.productshippingrules ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingRules_Delete_Product( l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingRules_Insert( l.productshippingrules ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			<MvELSEIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingRules_Update( l.productshippingrules ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'ShippingMethods' ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingMethod_Delete_All_Product( l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFOREACH ITERATOR = "l.productshippingmethod" ARRAY = "l.productshippingmethods" COUNT = "{ l.productshippingmethod_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_SHP_DB ].ProductShippingMethod_Insert( l.productshippingmethod ) }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_Error_IsIndexDuplicate( g.Error_Message ) }">
					<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
				</MvIF>
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-PRD-00109', 'Product shipping rules updated for product \'' $ l.product:code $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvCOMMENT>
|
| Helper functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "ProductCustomFieldList_Sort_Callback" PARAMETERS = "left var, right var, sort var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.result" VALUE = 0>

	<MvIF EXPR = "{ l.sort EQ 'code' }">				<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:code, l.right:code ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-code' }">			<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:code, l.left:code ) }">
	<MvELSEIF EXPR = "{ l.sort EQ 'name' }">			<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:name, l.right:name ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-name' }">			<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:name, l.left:name ) }">
	<MvELSEIF EXPR = "{ l.sort EQ 'type' }">			<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:type, l.right:type ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-type' }">			<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:type, l.left:type ) }">
	<MvELSEIF EXPR = "{ l.sort EQ 'module_name' }">		<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.left:module:name, l.right:module:name ) }">
	<MvELSEIF EXPR = "{ l.sort EQ '-module_name' }">	<MvASSIGN NAME = "l.result" VALUE = "{ strcasecmp( l.right:module:name, l.left:module:name ) }">
	</MvIF>

	<MvIF EXPR = "{ l.result NE 0 }">
		<MvFUNCTIONRETURN VALUE = "{ l.result }">
	</MvIF>

	<MvIF EXPR = "{ l.sort EQ 'public' }">			<MvASSIGN NAME = "l.left_data" VALUE = "{ l.left:public }">					<MvASSIGN NAME = "l.right_data" VALUE = "{ l.right:public }">
	<MvELSEIF EXPR = "{ l.sort EQ '-public' }">		<MvASSIGN NAME = "l.left_data" VALUE = "{ l.right:public }">				<MvASSIGN NAME = "l.right_data" VALUE = "{ l.left:public }">
	<MvELSEIF EXPR = "{ l.sort EQ 'readonly' }">	<MvASSIGN NAME = "l.left_data" VALUE = "{ l.left:readonly }">				<MvASSIGN NAME = "l.right_data" VALUE = "{ l.right:readonly }">
	<MvELSEIF EXPR = "{ l.sort EQ '-readonly' }">	<MvASSIGN NAME = "l.left_data" VALUE = "{ l.right:readonly }">				<MvASSIGN NAME = "l.right_data" VALUE = "{ l.left:readonly }">
	<MvELSEIF EXPR = "{ l.sort EQ 'searchable' }">	<MvASSIGN NAME = "l.left_data" VALUE = "{ l.left:capabilities:search }">	<MvASSIGN NAME = "l.right_data" VALUE = "{ l.right:capabilities:search }">
	<MvELSEIF EXPR = "{ l.sort EQ '-searchable' }">	<MvASSIGN NAME = "l.left_data" VALUE = "{ l.right:capabilities:search }">	<MvASSIGN NAME = "l.right_data" VALUE = "{ l.left:capabilities:search }">
	<MvELSEIF EXPR = "{ l.sort EQ 'sortable' }">	<MvASSIGN NAME = "l.left_data" VALUE = "{ l.left:capabilities:orderby }">	<MvASSIGN NAME = "l.right_data" VALUE = "{ l.right:capabilities:orderby }">
	<MvELSEIF EXPR = "{ l.sort EQ '-sortable' }">	<MvASSIGN NAME = "l.left_data" VALUE = "{ l.right:capabilities:orderby }">	<MvASSIGN NAME = "l.right_data" VALUE = "{ l.left:capabilities:orderby }">
	</MvIF>

	<MvIF EXPR = "{ l.left_data LT l.right_data }">		<MvFUNCTIONRETURN VALUE = -1>
	<MvELSEIF EXPR = "{ l.left_data GT l.right_data }">	<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Break ties using the code, followed by the module code
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ substring_var( l.sort, 1, 1 ) NE '-' }">
		<MvIF EXPR = "{ strcasecmp( l.left:code, l.right:code ) LT 0 }">					<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.left:code, l.right:code ) GT 0 }">				<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ strcasecmp( l.left:module:code, l.right:module:code ) LT 0 }">	<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.left:module:code, l.right:module:code ) GT 0 }">	<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ strcasecmp( l.right:code, l.left:code ) LT 0 }">					<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.right:code, l.left:code ) GT 0 }">				<MvFUNCTIONRETURN VALUE = 1>
		<MvELSEIF EXPR = "{ strcasecmp( l.right:module:code, l.left:module:code ) LT 0 }">	<MvFUNCTIONRETURN VALUE = -1>
		<MvELSEIF EXPR = "{ strcasecmp( l.right:module:code, l.left:module:code ) GT 0 }">	<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

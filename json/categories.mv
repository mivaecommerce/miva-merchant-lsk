<MIVA STANDARDOUTPUTLEVEL = "">

<MvCOMMENT>
|
| Miva Merchant
|
| This file and the source codes contained herein are the property of
| Miva, Inc.  Use of this file is restricted to the specific terms and
| conditions in the License Agreement associated with this file.  Distribution
| of this file or portions of this file for uses not covered by the License
| Agreement is not allowed without a written agreement signed by an officer of
| Miva, Inc.
|
| Copyright 1998-2025 Miva, Inc.  All rights reserved.
| http://www.miva.com
|
| Prefix         : MER-JSN-CAT-
| Next Error Code: 50   
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Category" PARAMETERS = "category var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.ondemandcolumns" VALUE = "">

	<MvEVAL EXPR = "{ JSON_Category_OnDemandColumns( l.category, l.ondemandcolumns ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_OnDemandColumns" PARAMETERS = "category var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	"id":			<MvEVAL EXPR = "{ int( l.category:id ) }">,
	"parent_id":	<MvEVAL EXPR = "{ int( l.category:parent_id ) }">,
	"agrpcount":	<MvEVAL EXPR = "{ int( l.category:agrpcount ) }">,
	"depth":		<MvEVAL EXPR = "{ int( l.category:depth ) }">,
	"disp_order":	<MvEVAL EXPR = "{ int( l.category:disp_order ) }">,
	"page_code":	"<MvEVAL EXPR = "{ JSON_Encode( l.category:page_code ) }">",
	"page_id":		<MvEVAL EXPR = "{ int( l.category:page_id ) }">,
	"code":			"<MvEVAL EXPR = "{ JSON_Encode( l.category:code ) }">",
	"name":			"<MvEVAL EXPR = "{ JSON_Encode( l.category:name ) }">",
	"page_title":	"<MvEVAL EXPR = "{ JSON_Encode( l.category:page_title ) }">",
	"active":		<MvEVAL EXPR = "{ JSON_Boolean( l.category:active ) }">,
	"dt_created":	<MvEVAL EXPR = "{ int( l.category:dt_created ) }">,
	"dt_updated":	<MvEVAL EXPR = "{ int( l.category:dt_updated ) }">

	<MvIF EXPR = "{ l.ondemandcolumns:uris }">
		<MvASSIGN NAME = "l.uri_count"					VALUE = 0>

		,"uris":
		[
		<MvFOREACH ITERATOR = "l.uri" ARRAY = "l.uris" COUNT = "{ [ g.Feature_URI_DB ].URIList_Load_Category( l.category:id, l.uris ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.uri_count ) }">
			<MvEVAL EXPR = "{ [ g.Feature_URI_JSON ].JSON_URI( l.uri ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
		]
	</MvIF>

	<MvIF EXPR = "{ l.ondemandcolumns:url }">
		<MvASSIGN NAME = "l.flags"				VALUE = "">
		<MvASSIGN NAME = "l.flags:nosession"	VALUE = 1>

		,"url": "<MvEVAL EXPR = "{ JSON_Encode( [ g.Feature_URI_UT ].Store_Category_URL( l.category, l.flags ) ) }">"
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseCategoryList_Filters" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.available_filters" VALUE = "">

	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'cat.id',			'id' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'cat.code',		'code' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'cat.name',		'name' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'cat.page_title',	'page_title' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'cat.dt_created',	'dt_created' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'cat.dt_updated',	'dt_updated' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_INTEGER(		l.available_filters, 'cat.depth',		'depth' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_NULL_CHAR(	l.available_filters, 'parent_cat.code',	'parent_category' ) }">
	<MvEVAL EXPR = "{ JSON_AvailableFilter_CHAR(		l.available_filters, 'cat.page_code',	'page_code' ) }">

	<MvFUNCTIONRETURN VALUE = "{ l.available_filters }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseCategoryList_OrderBy" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "id:cat.id,code:cat.code,name:cat.name,page_title:cat.page_title,active:cat.active,page_code:cat.page_code:null_char,parent_category:parent_cat.code:null_char,disp_order:cat.disp_order,dt_created:cat.dt_created,dt_updated:cat.dt_updated,depth:cat.depth">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_BaseCategoryList_Category_Read" PARAMETERS = "category var, ondemandcolumns var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].Category_Read( l.category ) }">
	
	<MvASSIGN NAME = "l.category:page_id" VALUE = "{ Category.d.page_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFieldsList_Load_Cached" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE NAME = "l.cache" VARIABLE = "g.Session:cache:json_category_customfieldslist_load_cached">

	<MvIF EXPR = "{ ISNULL l.cache }">
		<MvASSIGN NAME = "l.cache:result" VALUE = "{ JSON_Category_CustomFieldsList_Load( l.cache:fields ) }">
	</MvIF>

	<MvASSIGN NAME = "l.fields" VALUE = "{ l.cache:fields }">

	<MvFUNCTIONRETURN VALUE = "{ l.cache:result }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFieldsList_Load" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Load the custom field modules and their associated fields
	|
	| :fields[n]
	|	:code	- custom field code
	|	:type	- custom field type
	|	:public	- custom field public status
	|	:module	- reference to cached modules
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.fields"			VALUE = "">
	<MvASSIGN NAME = "l.field_count"	VALUE = 0>

	<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" INDEX = "l.pos"  COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'fields_cat', l.modules ) }">
		<MvASSIGN NAME = "l.null"			VALUE = "{ [ g.Library_DB ].Module_Load_Features( l.module ) }">
		<MvASSIGN NAME = "l.module_fields"	VALUE = "">

		<MvFOREACH ITERATOR = "l.module_field" ARRAY = "l.module_fields" COUNT = "{ [ g.Module_Root $ l.module:module ].Module_Category_Fields( l.module, l.module_fields ) }">
			<MvREFERENCEARRAY NAME = "l.field" VARIABLE = "l.fields">
				<MvDIMENSION INDEX = "{ ++l.field_count }">
			</MvREFERENCEARRAY>

			<MvASSIGN NAME = "l.field:code"				VALUE = "{ l.module_field:code }">
			<MvASSIGN NAME = "l.field:type"				VALUE = "{ l.module_field:type }">
			<MvASSIGN NAME = "l.field:public"			VALUE = "{ l.module_field:public }">
			<MvREFERENCEARRAY NAME = "l.field:module"	VARIABLE = "l.modules">
				<MvDIMENSION INDEX = "{ l.pos }">
			</MvREFERENCEARRAY>
		</MvFOREACH>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.field_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields_Initialize" PARAMETERS = "filterlist var, customfield_state var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field_count" VALUE = "{ JSON_Category_CustomFieldsList_Load_Cached( l.fields ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Category_CustomFieldList_Initialize( l.filterlist, l.fields, l.field_count, l.customfield_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFieldList_Initialize" PARAMETERS = "filterlist var, fields var, field_count, customfield_state var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ JSON_Filter_Structify( l.filterlist ) }">

	<MvASSIGN NAME = "l.customfield_state"				VALUE = "">

	<MvCOMMENT>
	|
	|	Build Custom Field Displayable data from MMBatchList "ondemandcolumns"
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.filter" ARRAY = "l.filterlist">
		<MvIF EXPR = "{ l.filter:name EQ 'ondemandcolumns' }">
			<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter:value">
				<MvIF EXPR = "{ ( 'CustomField_Values:' IN l.column_code ) NE 1 }">
					<MvFOREACHCONTINUE>
				</MvIF>

				<MvASSIGN NAME = "l.module_code"		VALUE = "{ gettoken( l.column_code, ':', 2 ) }">
				<MvASSIGN NAME = "l.customfield_code"	VALUE = "{ gettoken( l.column_code, ':', 3 ) }">

				<MvREFERENCEARRAY NAME = "l.displayable" VARIABLE = "l.displayable_custom_fields">
					<MvMEMBER NAME = "{ l.module_code }">
					<MvMEMBER NAME = "{ l.customfield_code }">
				</MvREFERENCEARRAY>

				<MvASSIGN NAME = "l.displayable" VALUE = 1>
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ l.field_count }">
		<MvREFERENCEARRAY NAME = "l.displayable" VARIABLE = "l.displayable_custom_fields">
			<MvMEMBER NAME = "{ l.field:module:code }">
			<MvMEMBER NAME = "{ l.field:code }">
		</MvREFERENCEARRAY>

		<MvIF EXPR = "{ NOT l.displayable }">
			<MvIF EXPR = "{ miva_member_exists( l.displayable_custom_fields, '*' ) }">
				<MvASSIGN NAME = "l.displayable"		VALUE = 1>
			<MvELSE>
				<MvREFERENCEARRAY NAME = "l.module_displayable" VARIABLE = "l.displayable_custom_fields">
					<MvMEMBER NAME = "{ l.field:module:code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ miva_member_exists( l.module_displayable, '*' ) }">
					<MvASSIGN NAME = "l.displayable"	VALUE = 1>
				</MvIF>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ l.displayable AND l.field:module:api_ver GE 9.07 }">
			<MvEVAL EXPR = "{ [ g.Module_Root $ l.field:module:module ].Module_Category_Field_Capabilities( l.field:module, l.field:code, l.field:capabilities ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ JSON_CustomFields_Initialize( l.fields, l.field_count, l.displayable_custom_fields, 'fields_cat_map', l.customfield_state ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields" PARAMETERS = "customfield_state var, cat_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Category_CustomFields_With_View( l.customfield_state, l.cat_id, '' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields_With_View" PARAMETERS = "customfield_state var, cat_id, view" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Category_CustomFields_With_Query( l.null, l.customfield_state, l.cat_id, l.view ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields_With_Query" PARAMETERS = "query var, customfield_state var, cat_id, view" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ l.customfield_state:plan_count EQ 0 }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'Category_CustomFields', l.ref ) }">

	<MvASSIGN NAME = "l.last_module_id"			VALUE = "">

	,"CustomField_Values":
	{

	<MvFOREACH ITERATOR = "l.plan" ARRAY = "l.customfield_state:plan" COUNT = "{ l.customfield_state:plan_count }">
		<MvIF EXPR = "{ l.plan:module:id NE l.last_module_id }">
			<MvIF EXPR = "{ NOT ISNULL l.last_module_id }">
				},
			</MvIF>

			"<MvEVAL EXPR = "{ l.plan:module:encoded_code }">":
			{

			<MvASSIGN NAME = "l.last_module_id"		VALUE = "{ l.plan:module:id }">
			<MvASSIGN NAME = "l.output_field_count"	VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ l.plan:field_single }">
			<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried">
				<MvMEMBER NAME = "{ l.plan:module:code }">
				<MvMEMBER NAME = "{ l.plan:field_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ NOT ISNULL l.view AND l.queried AND l.plan:capabilities:query }">	<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Category_Field_Query_Value( l.plan:module, l.view, l.plan:field_code ) }">
			<MvELSE>																			<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Category_Field_Value( l.plan:module, l.cat_id, l.plan:field_code ) }">
			</MvIF>

			<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
				,
			</MvIF>

			"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
		<MvELSEIF EXPR = "{ l.plan:field_array }">
			<MvASSIGN NAME = "l.values" VALUE = "">

			<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
				,
			</MvIF>

			<MvIF EXPR = "{ l.plan:module:api_ver LT 9.08 }">
				<MvASSIGN NAME = "l.value" VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Category_Field_Value( l.plan:module, l.cat_id, l.plan:field_code ) }">

				"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
			<MvELSE>
				"<MvEVAL EXPR = "{ l.plan:encoded_field_code }">":
				[
				<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values" INDEX = "l.pos" COUNT = "{ [ g.Module_Root $ l.plan:module:module ].Module_Category_Field_Value_Array( l.plan:module, l.cat_id, l.plan:field_code, l.values ) }">
					<MvIF EXPR = "{ l.pos GT 1 }">
						,	
					</MvIF>

					<MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.plan:base_type, l.plan:type_data, l.value ) }">
				</MvFOREACH>
				]
			</MvIF>
		<MvELSEIF EXPR = "{ NOT ISNULL l.plan:field_map }">
			<MvASSIGN NAME = "l.mapped"			VALUE = 0>

			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.plan:fields" COUNT = "{ l.plan:field_count }">
				<MvASSIGN NAME = "l.loaded"		VALUE = 0>

				<MvREFERENCEARRAY NAME = "l.queried" VARIABLE = "l.ref:data:queried">
					<MvMEMBER NAME = "{ l.plan:module:code }">
					<MvMEMBER NAME = "{ l.field:code }">
				</MvREFERENCEARRAY>

				<MvIF EXPR = "{ NOT ISNULL l.view AND l.queried AND l.field:capabilities:query }">
					<MvASSIGN NAME = "l.loaded" VALUE = 1>
					<MvASSIGN NAME = "l.value"	VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Category_Field_Query_Value( l.plan:module, l.view, l.field:code ) }">
				<MvELSEIF EXPR = "{ NOT l.mapped }">
					<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.plan:module:module ].Module_Category_Fields_Mapped( l.plan:module, l.cat_id, l.plan:field_map, l.module_output ) }">
					<MvASSIGN NAME = "l.mapped" VALUE = 1>
				</MvIF>

				<MvIF EXPR = "{ NOT l.loaded }">
					<MvREFERENCEARRAY NAME = "l.value" VARIABLE = "l.module_output">
						<MvMEMBER NAME = "{ l.field:code }">
					</MvREFERENCEARRAY>
				</MvIF>

				<MvIF EXPR = "{ l.output_field_count++ GT 0 }">
					,
				</MvIF>

				"<MvEVAL EXPR = "{ l.field:encoded_code }">": <MvEVAL EXPR = "{ JSON_Output_CustomField_Value( l.field:base_type, l.field:type_data, l.value ) }">
			</MvFOREACH>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.last_module_id }">
		}
	</MvIF>

	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryCustomFieldList_Load" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">		<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ [ g.Library_Utilities ].CategoryCustomFieldList_Load( l.customfields ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.count ) }">
				"code":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:code ) }">",
				"name":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:name ) }">",
				"type":			"<MvEVAL EXPR = "{ JSON_Encode( l.customfield:type ) }">",
				"public":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:public ) }">,
				"readonly":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:readonly ) }">,
				"searchable":	<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:search ) }">,
				"sortable":		<MvEVAL EXPR = "{ JSON_Boolean( l.customfield:capabilities:orderby ) }">,
				"module":
				{
					<MvEVAL EXPR = "{ JSON_Module( l.customfield:module ) }">
				}
				<MvIF EXPR = "{ l.customfield:type EQ 'choice' }">
					,
					"choices":
					[
						<MvFOREACH ITERATOR = "l.choice" ARRAY = "l.customfield:choices" INDEX = "l.choice_pos">
							<MvIF EXPR = "{ l.choice_pos GT 1 }">
								,
							</MvIF>

							"<MvEVAL EXPR = "{ JSON_Encode( l.choice ) }">"
						</MvFOREACH>
					]
				</MvIF>
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.query"				VALUE = "">
	<MvASSIGN NAME = "l.record"				VALUE = "">

	<MvREFERENCE NAME = "l.category"		VARIABLE = "l.record:cat">
	<MvREFERENCE NAME = "l.pbv"				VARIABLE = "l.record:pbv">
	<MvREFERENCE NAME = "l.parentcategory"	VARIABLE = "l.record:parent_cat">

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.category:page_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].PageBranchVersion_Load_Code_Branch_Head( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID(), l.category:page_code, l.pbv ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.category:parent_id }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( l.category:parent_id, l.parentcategory ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'Categories', 'parent_cat', 'cat.parent_id = parent_cat.id', '' ) }">

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvIF EXPR = "{ NOT JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.category:id, g.Module_JSON, 'JSON_Category_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryList_Load_Parent" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer( 'R', 'Parent_ID', l.parent_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.category_count"	VALUE = "{ [ g.Library_DB ].CategoryList_Load_Parent( l.parent_id, l.categories ) }">
	<MvIF EXPR = "{ l.category_count EQ 0 }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	[
		<MvFOREACH ITERATOR = "l.category" ARRAY = "l.categories" COUNT = "{ l.category_count }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.output_category_count ) }">
				<MvEVAL EXPR = "{ JSON_Category( l.category ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">
		</MvFOREACH>
	]
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort )	OR
					NOT JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.search_query, 'cat.*' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_INTEGER(	l.search_query, 'pbv.page_id',		'page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT_NULL_CHAR(		l.search_query, 'parent_cat.code',	'parent_category' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'Categories', 'parent_cat', 'cat.parent_id = parent_cat.id', '' ) }">

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ JSON_BaseCategoryList_Filters() }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ JSON_BaseCategoryList_OrderBy() }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Category_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Categories', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.category_count"		VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Category_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.category_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_BaseCategoryList_Category_Read( l.category, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.category_count ) }">
				<MvEVAL EXPR = "{ JSON_Category_OnDemandColumns( l.category, l.ondemandcolumns ) }">
				, "parent_category": "<MvEVAL EXPR = "{ JSON_Encode( Categories.d.parent_category ) }">"

				<MvEVAL EXPR = "{ JSON_Category_CustomFields_With_Query( l.search_query, l.customfield_state, Categories.d.id, 'Categories' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields_Query" PARAMETERS = "query var, module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.module EQ '*' }">
		<MvFOREACH ITERATOR = "l.module" ARRAY = "l.modules" COUNT = "{ [ g.Library_DB ].StoreModuleList_Load_Features_Cached( 'fields_cat', l.modules ) }">
			<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Library_DB ].Module_Load_Features( l.module ) }">

			<MvIF EXPR = "{ NOT JSON_Category_CustomFields_Query( l.query, l.module, '*' ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_cat ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.code EQ '*' }">
		<MvFOREACH ITERATOR = "l.module_field" ARRAY = "l.module_fields" COUNT = "{ [ g.Module_Root $ l.module:module ].Module_Category_Fields( l.module, l.module_fields ) }">
			<MvIF EXPR = "{ NOT JSON_Category_CustomFields_Query( l.query, l.module, l.module_field:code ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_Data_Reference( l.query, 'Category_CustomFields', l.ref ) }">

	<MvIF EXPR = "{ [ g.Library_DB ].SQL_Query_Total_Join_Count( l.query ) GE 50 }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Category_Field_Capabilities( l.module, l.code, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:query }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGNARRAY NAME = "l.ref:data:queried"	VALUE = 1>
		<MvMEMBER NAME = "{ l.module:code }">
		<MvMEMBER NAME = "{ l.code }">
	</MvASSIGNARRAY>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Category_Field_Query( l.module, l.query, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields_Query_Filter" PARAMETERS = "query var, field_count var, module var, filter_name, filter_operator, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_cat ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Category_Field_Capabilities( l.module, l.filter_name, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:search }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Category_Field_Query_Search( l.module, l.query, l.filter_name, l.filter_operator, l.filter_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields_Query_OrderBy" PARAMETERS = "query var, direction, module var, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_cat ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Root $ l.module:module ].Module_Category_Field_Capabilities( l.module, l.code, l.capabilities ) }">

	<MvIF EXPR = "{ NOT l.capabilities:orderby }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Category_Field_Query_OrderBy( l.module, l.query, l.code, l.direction ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_CustomFields_Query_Index" PARAMETERS = "loaded_record var, module var, category_id, code" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.module:api_ver LT 9.07 ) OR ( NOT l.module:feature_hash:fields_cat ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Category_Field_Query_OrderBy_LoadIndexRecord( l.module, l.loaded_record, l.category_id, l.code ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryList_Load_Query_Filter" PARAMETERS = "query var, field_count var, filter_name, filter_value, data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.filter_name EQ 'ondemandcolumns' }">
		<MvFOREACH ITERATOR = "l.column_code" ARRAY = "l.filter_value">
			<MvIF EXPR = "{ ISNULL l.column_code }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.data" MEMBER = "{ l.column_code }" VALUE = 1>
		</MvFOREACH>
	<MvELSEIF EXPR = "{ l.filter_name EQ 'Category_Show' }">
		<MvIF EXPR = "{ l.filter_value EQ 'All' }">
		<MvELSEIF EXPR = "{ l.filter_value EQ 'Active' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.query, '( cat.active = 1 )', '' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_Load_Code" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_Code( g.Category_Code, l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Category( l.category ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_Delete" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">	
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Delete( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">	
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_Insert" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.parent_category_code"			VALUE = "">

	<MvASSIGN NAME = "l.category"						VALUE = "">
	<MvASSIGN NAME = "l.category:active"				VALUE = 1>

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'R', 'Category_Code',					l.category:code )			OR
					NOT JSON_Input_Text(	'R', 'Category_Name',					l.category:name )			OR
					NOT JSON_Input_Boolean(	'O', 'Category_Active',					l.category:active )			OR
					NOT JSON_Input_Text(	'o', 'Category_Page_Title',				l.category:page_title )		OR
					NOT JSON_Input_Text(	'o', 'Category_Parent_Category',		l.parent_category_code )	OR
					NOT JSON_Input_Code(	'o', 'Category_Alternate_Display_Page', l.category:page_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Library_DB ].Category_Load_Code( l.category:code, l.existing_category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Category_Code', 'A category with the code \'' $ l.existing_category:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.parent_category_code }">
		<MvASSIGN NAME = "l.category:parent_id"	VALUE = 0>
	<MvELSEIF EXPR = "{ [ g.Library_DB ].Category_Load_Code( l.parent_category_code, l.parent_category ) }">
		<MvASSIGN NAME = "l.category:parent_id"	VALUE = "{ l.parent_category:id }">
	<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Category_Parent_Category', 'Category \'' $ l.parent_category_code $ '\' not found' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Validate custom fields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customfields"		VALUE = "">
	<MvASSIGN NAME = "l.customfield_count"	VALUE = 0>
	<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Input_Retrieve_Raw( 'CustomField_Values', l.customfield_values ) }">

	<MvFOREACH ITERATOR = "l.module_code" ARRAY = "l.module_codelist" COUNT = "{ miva_struct_members( l.customfield_values, l.module_codelist ) }">
		<MvASSIGN NAME = "l.module_code"	VALUE = "{ JSON_Decode( l.module_code ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00025', 'Module \'' $ l.module_code $ '\' not found' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00026', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:fields_cat }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00027', 'Module \'' $ l.module:code $ '\' does not provide feature \'fields_cat\'' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00028', 'Module \'' $ l.module:code $ '\' is not installed in store \'' $ g.Store:code $ '\'' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.fields"	VALUE = "">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Category_Fields( l.module, l.fields ) }">

		<MvREFERENCEARRAY NAME = "l.customfield_members" VARIABLE = "l.customfield_values">
			<MvMEMBER NAME = "{ l.module:code }">
		</MvREFERENCEARRAY>

		<MvFOREACH ITERATOR = "l.customfield_code" ARRAY = "l.customfield_codelist" COUNT = "{ miva_struct_members( l.customfield_members, l.customfield_codelist ) }">
			<MvASSIGN NAME = "l.customfield_code"		VALUE = "{ JSON_Decode( l.customfield_code ) }">

			<MvIF EXPR = "{ NOT miva_array_search( l.fields, 1, l.field, 'l.field:code EQ l.customfield_code' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.module:code $ ':' $ l.customfield_code, 'Failed to load custom field \'' $ l.customfield_code $ '\'' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield"			VALUE = "">
			<MvASSIGN NAME = "l.customfield:module"		VALUE = "{ l.module }">
			<MvASSIGN NAME = "l.customfield:code"		VALUE = "{ l.customfield_code }">
			<MvASSIGN NAME = "l.customfield:type"		VALUE = "{ l.field:type }">

			<MvREFERENCEARRAY NAME = "l.customfield_value" VARIABLE = "l.customfield_values">
				<MvMEMBER NAME = "{ l.module:code }">
				<MvMEMBER NAME = "{ l.customfield_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.customfield:value"			VALUE = "{ JSON_Decode( l.customfield_value ) }">
			<MvELSE>												<MvASSIGN NAME = "l.customfield:value_count"	VALUE = "{ JSON_Array_String( l.customfield_value, l.customfield:values ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield_count"		VALUE = "{ miva_array_insert( l.customfields, l.customfield, -1 ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Insert( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00029', 'Category \'' $ l.category:code $ '\' inserted' ) }">

	<MvIF EXPR = "{ NOT [ g.Feature_URI_UT ].URI_Generate_Category_New( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvCOMMENT>
	|
	| Insert custom fields
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ l.customfield_count }">
		<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Category_Set_Field( l.customfield:module, l.category:id, l.customfield:code, l.customfield:value ) }">
		<MvELSE>												<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Category_Set_Field_Array( l.customfield:module, l.category:id, l.customfield:code, l.customfield:values, l.customfield:value_count ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.result }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.customfield:module:code $ ':' $ l.customfield:code, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		<MvEVAL EXPR = "{ JSON_Category( l.category ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryList_Delete" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvFOREACH ITERATOR = "l.category_id" ARRAY = "l.category_ids" COUNT = "{ JSON_Array_Integer( g.Category_IDs, l.category_ids ) }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( l.category_id, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Delete( l.category ) }">
				<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.category_id, g.Error_Code, g.Error_Message, l.errors ) }">
			<MvELSE>
				<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00017', 'Category \'' $ l.category:code $ '\' deleted' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_Load" PARAMETERS = "category var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'Category_ID', l.category_id ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( l.category_id, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00030', 'Category not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Edit_Category', l.category_code ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.category_code, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00031', 'Category not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Category_Code', l.category_code ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.category_code, l.category ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00032', 'Category not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00033', 'Unable to load category: One of Category_ID, Edit_Category or Category_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ParentCategory_Load" PARAMETERS = "parentcategory var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ JSON_Input_Retrieve_Integer( 'ParentCategory_ID', l.parentcategory_id ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_ID( l.parentcategory_id, l.parentcategory ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00038', 'Parent category not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'Edit_ParentCategory', l.parentcategory_code ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.parentcategory_code, l.parentcategory ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00039', 'Parent category not found' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ JSON_Input_Retrieve( 'ParentCategory_Code', l.parentcategory_code ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.parentcategory_code, l.parentcategory ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00040', 'Parent category not found' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'MER-JSN-CAT-00041', 'Unable to load parent category: One of ParentCategory_ID, Edit_ParentCategory or ParentCategory_Code must be specified' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Category_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.original_code"	VALUE = "{ l.category:code }">

	<MvIF EXPR = "{ NOT JSON_Input_Code(	'O', 	'Category_Code',					l.category:code )		OR
					NOT JSON_Input_Text(	'O', 	'Category_Name',					l.category:name )		OR
					NOT JSON_Input_Text(	'o', 	'Category_Page_Title',				l.category:page_title )	OR
					NOT JSON_Input_Boolean(	'o', 	'Category_Active',					l.category:active )		OR
					NOT JSON_Input_Code(	'o',	'Category_Alternate_Display_Page',	l.category:page_code ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ tolower( l.original_code ) NE tolower( l.category:code ) }">
		<MvIF EXPR = "{ [ g.Library_DB ].Category_Load_Code( l.category:code, l.existing_category ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Category_Code', 'A category with the code \'' $ l.existing_category:code $ '\' already exists' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ JSON_Input_Exists( 'Category_Parent_Category' ) }">
		<MvIF EXPR = "{ NOT JSON_Input_Text( 'o', 'Category_Parent_Category', l.parent_category_code ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
		</MvIF>

		<MvIF EXPR = "{ ISNULL l.parent_category_code }">
			<MvASSIGN NAME = "l.category:parent_id"	VALUE = 0>
		<MvELSEIF EXPR = "{ [ g.Library_DB ].Category_Load_Code( l.parent_category_code, l.parent_category ) }">
			<MvASSIGN NAME = "l.category:parent_id"	VALUE = "{ l.parent_category:id }">
		<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		<MvELSE>
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Category_Parent_Category', 'Category \'' $ l.parent_category_code $ '\' not found' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Validate_Parent( l.category ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Category_Parent_Category', g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Validate custom fields
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.customfields"		VALUE = "">
	<MvASSIGN NAME = "l.customfield_count"	VALUE = 0>
	<MvASSIGN NAME = "l.null"				VALUE = "{ JSON_Input_Retrieve_Raw( 'CustomField_Values', l.customfield_values ) }">

	<MvFOREACH ITERATOR = "l.module_code" ARRAY = "l.module_codelist" COUNT = "{ miva_struct_members( l.customfield_values, l.module_codelist ) }">
		<MvASSIGN NAME = "l.module_code"	VALUE = "{ JSON_Decode( l.module_code ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ModuleAndFeatures_Load_Code_Cached( l.module_code, l.module ) }">
			<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00034', 'Module \'' $ l.module_code $ '\' not found' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:active }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00035', 'Module \'' $ l.module:code $ '\' is deactivated' ) }">
		<MvELSEIF EXPR = "{ NOT l.module:feature_hash:fields_cat }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00036', 'Module \'' $ l.module:code $ '\' does not provide feature \'fields_cat\'' ) }">
		<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreModule_Count_Module_Cached( l.module:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00037', 'Module \'' $ l.module:code $ '\' is not installed in store \'' $ g.Store:code $ '\'' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.fields"	VALUE = "">
		<MvASSIGN NAME = "l.null"	VALUE = "{ [ g.Module_Root $ l.module:module ].Module_Category_Fields( l.module, l.fields ) }">

		<MvREFERENCEARRAY NAME = "l.customfield_members" VARIABLE = "l.customfield_values">
			<MvMEMBER NAME = "{ l.module:code }">
		</MvREFERENCEARRAY>

		<MvFOREACH ITERATOR = "l.customfield_code" ARRAY = "l.customfield_codelist" COUNT = "{ miva_struct_members( l.customfield_members, l.customfield_codelist ) }">
			<MvASSIGN NAME = "l.customfield_code"		VALUE = "{ JSON_Decode( l.customfield_code ) }">

			<MvIF EXPR = "{ NOT miva_array_search( l.fields, 1, l.field, 'l.field:code EQ l.customfield_code' ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.module:code $ ':' $ l.customfield_code, 'Failed to load custom field \'' $ l.customfield_code $ '\'' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield"			VALUE = "">
			<MvASSIGN NAME = "l.customfield:module"		VALUE = "{ l.module }">
			<MvASSIGN NAME = "l.customfield:code"		VALUE = "{ l.customfield_code }">
			<MvASSIGN NAME = "l.customfield:type"		VALUE = "{ l.field:type }">

			<MvREFERENCEARRAY NAME = "l.customfield_value" VARIABLE = "l.customfield_values">
				<MvMEMBER NAME = "{ l.module:code }">
				<MvMEMBER NAME = "{ l.customfield_code }">
			</MvREFERENCEARRAY>

			<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.customfield:value"			VALUE = "{ JSON_Decode( l.customfield_value ) }">
			<MvELSE>												<MvASSIGN NAME = "l.customfield:value_count"	VALUE = "{ JSON_Array_String( l.customfield_value, l.customfield:values ) }">
			</MvIF>

			<MvASSIGN NAME = "l.customfield_count"		VALUE = "{ miva_array_insert( l.customfields, l.customfield, -1 ) }">
		</MvFOREACH>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Feature_TUI_MGR ].TemplateManager_Changeset_Begin( 'Category \'' $ l.category:code $ '\' updated' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Update( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_URI_UT ].URI_Generate_Category_Update( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00003', 'Category \'' $ l.category:code $ '\' updated' ) }">

	<MvCOMMENT>
	|
	| Update Custom Fields
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.customfield" ARRAY = "l.customfields" COUNT = "{ l.customfield_count }">
		<MvIF EXPR = "{ l.customfield:type NE 'multitext' }">	<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Category_Set_Field( l.customfield:module, l.category:id, l.customfield:code, l.customfield:value ) }">
		<MvELSE>												<MvASSIGN NAME = "l.result" VALUE = "{ [ g.Module_Root $ l.customfield:module:module ].Module_Category_Set_Field_Array( l.customfield:module, l.category:id, l.customfield:code, l.customfield:values, l.customfield:value_count ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT l.result }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'CustomField_Values:' $ l.customfield:module:code $ ':' $ l.customfield:code, g.Error_Code $ ': ' $ g.Error_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT [ g.Feature_TUI_MGR ].TemplateManager_Changeset_End() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryList_DisplayOrder_Update" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvFOREACH ITERATOR = "l.category_order" ARRAY = "g.Category_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.category_order:id"						VALUE = "{ int( l.category_order:id ) }">
		<MvASSIGN NAME = "l.category_order:offset"					VALUE = "{ int( l.category_order:offset ) }">
		<MvASSIGN NAME = "l.category_order:original_offset"			VALUE = "{ int( l.category_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Positive_Required( l.category_order:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Category_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.change_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.category_order" ARRAY = "g.Category_Order">
		<MvASSIGN NAME = "l.change_count"							VALUE = "{ l.change_count + 1 }">
		<MvASSIGN NAME = "l.changes" INDEX = "{ l.change_count }"	VALUE = "{ l.category_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.change_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryList_Update_Offsets( l.changes ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00005', 'Category sort order updated' ) }">
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryList_BatchSort" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Category_Sort_By"		VALUE = "{ trim( g.Category_Sort_By ) }">

	<MvIF EXPR = "{ substring_var( g.Category_Sort_By, 1, 1 ) EQ '-' }">
		<MvASSIGN NAME = "l.sort"				VALUE = "{ substring_var( g.Category_Sort_By, 2, len_var( g.Category_Sort_By ) - 1 ) }">
		<MvASSIGN NAME = "l.ascending"			VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.sort"				VALUE = "{ g.Category_Sort_By }">
		<MvASSIGN NAME = "l.ascending"			VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Sort_All( l.sort, l.ascending ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00006', 'Category sort order updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryCollectionIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }"> <MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter ) OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_COL_JSON ].JSON_BaseCollectionIndex_Load_ID( l.filter, l.sort, 'col.id', l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Library_DB ].CategoryXCollection_Load( l.category:id, l.record:col:id, l.record:cxp ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CategoryXCollection', 'cxp' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cxp.cat_id = ? AND col.id = cxp.col_id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Index( l.query, l.record, l.index ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryCollectionList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }"> <MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',	l.filter )	OR
					NOT JSON_Input_Text(	'o', 'Sort',	l.sort )	OR
					NOT JSON_Input_Integer(	'o', 'Offset',	l.offset )	OR
					NOT JSON_Input_Integer(	'o', 'Count',	l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Feature_COL_JSON ].JSON_BaseCollectionList_Load_Query( l.filter, l.sort, 'col.id', l.search_query, l.data ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CategoryXCollection', 'catxp' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'catxp.cat_id = ? AND col.id = catxp.col_id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Collections', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00045', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.collection_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Collections.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.collection_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Feature_COL_JSON ].JSON_BaseCollectionList_Collection_Read( l.collection, l.data:ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.collection_count ) }">
				<MvEVAL EXPR = "{ [ g.Feature_COL_JSON ].JSON_Collection_OnDemandColumns( l.collection, l.data:ondemandcolumns ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Collections" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Collections">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryCollection_Add" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Library_DB ].CategoryXCollection_Load( l.category:id, l.collection:id, l.null ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	<MvELSEIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">												<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.categoryxcollection"		VALUE = "">
	<MvASSIGN NAME = "l.categoryxcollection:cat_id" VALUE = "{ l.category:id }">
	<MvASSIGN NAME = "l.categoryxcollection:col_id" VALUE = "{ l.collection:id }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXCollection_Insert( l.categoryxcollection ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_COL_UT ].Category_Add_Collection_Products( l.category:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00047', 'Collection \'' $ l.collection:code $ '\' assigned to category \'' $ l.category:code $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryCollection_Remove" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_COL_JSON ].JSON_Collection_Load( l.collection ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXCollection_Load( l.category:id, l.collection:id, l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXCollection_Delete( l.category:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Feature_COL_UT ].Category_Remove_Collection_Products( l.category:id, l.collection:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin].Admin_Log_Action( 'MER-JSN-CAT-00046', 'Collection \'' $ l.collection:code $ '\' unassigned from category \'' $ l.category:code $ '\'' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryProductIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }"> <MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.query"		VALUE = "">
	<MvASSIGN NAME = "l.record"		VALUE = "">
	<MvASSIGN NAME = "l.filter"		VALUE = "">
	<MvASSIGN NAME = "l.sort"		VALUE = "">
	<MvASSIGN NAME = "l.assigned"	VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"	VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.assigned AND NOT l.unassigned }">	<MvASSIGN NAME = "l.default_sort" VALUE = "cxp.disp_order">
	<MvELSE>											<MvASSIGN NAME = "l.default_sort" VALUE = "prod.disp_order">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_BaseProductIndex_Load_ID( l.filter, l.sort, l.default_sort, l.query, l.record ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ [ g.Library_DB ].CategoryXProduct_Load( l.category:id, l.record:prod:id, l.record:cxp ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.cat_id = ? AND cxp.product_id = prod.id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'prod', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.cat_id = ? AND cxp.product_id = prod.id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cxp.product_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cxp.cat_id = ? AND prod.id = cxp.product_id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.record:prod:id, g.Module_JSON, 'JSON_Product_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryProductList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }"> <MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = 0>
	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>
	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.count_query"	VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ l.assigned AND NOT l.unassigned }">	<MvASSIGN NAME = "l.default_sort" VALUE = "cxp.disp_order">
	<MvELSE>											<MvASSIGN NAME = "l.default_sort" VALUE = "prod.disp_order">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseProductList_Load_Query( l.filter, l.sort, l.default_sort, l.search_query, l.count_query, l.ondemandcolumns ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.search_query, 'cxp.product_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.cat_id = ? AND cxp.product_id = prod.id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">
	<MvELSEIF EXPR = "{ l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'prod', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.cat_id = ? AND cxp.product_id = prod.id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'cxp.product_id IS NULL', '' ) }">

		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.count_query, 'prod', g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp', 'cxp.cat_id = ? AND cxp.product_id = prod.id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.count_query, 'cxp.product_id IS NULL', '' ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'cxp.cat_id = ? AND prod.id = cxp.product_id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">

		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.count_query, g.Store_Table_Prefix $ 'CategoryXProduct', 'cxp' ) }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.count_query, 'cxp.cat_id = ? AND prod.id = cxp.product_id', [ g.Library_DB ].SQL_Query_Field( l.category:id ) ) }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.count_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_BaseProductList_Load_Query_QueryCustomFields( l.search_query, l.filter, l.count, l.total_count ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Products', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00007', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.product_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ JSON_Product_CustomFields_Initialize( l.filter, l.customfield_state ) }">	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data": 
		[
		<MvWHILE EXPR = "{ ( NOT Products.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.product_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_BaseProductList_Product_Read( l.product, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.product_count ) }">
				"assigned": <MvEVAL EXPR = "{ JSON_Boolean( Products.d.assigned ) }">,
				<MvEVAL EXPR = "{ JSON_Product_OnDemandColumns( l.product, l.ondemandcolumns ) }">
				<MvEVAL EXPR = "{ JSON_Product_CustomFields_With_Query( l.search_query, l.customfield_state, Products.d.id, 'Products' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Products" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Products">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryProduct_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Product_Load( l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{	NOT JSON_Input_Boolean( 'R', 'Assigned', l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ [ g.Library_DB ].CategoryXProduct_Load( l.category:id, l.product:id, l.categoryxproduct ) }">
		<MvIF EXPR = "{ NOT l.assigned }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].v10_CategoryXProduct_Delete( l.categoryxproduct ) }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Filename_Admin].Admin_Log_Action( 'MER-JSN-CAT-00011', 'Product \'' $ l.product:code $ '\' removed from category \'' $ l.category:code $ '\'' ) }">
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ l.assigned }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXProduct_Insert( l.category:id, l.product:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00010', 'Product \'' $ l.product:code $ '\' assigned to category \'' $ l.category:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryProductList_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.processed" 		VALUE = 0>
	<MvASSIGN NAME = "l.error_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.errors" 		VALUE = "">
	<MvASSIGN NAME = "l.start_time" 	VALUE = "{ s.dyn_time_t }">

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Integer_Array(	'R', 'Product_IDs',	l.product_ids, l.product_id_count ) OR
					NOT JSON_Input_Boolean(			'R', 'Assigned',	l.assigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.product_id" ARRAY = "l.product_ids" COUNT = "{ l.product_id_count }">
		<MvASSIGN NAME = "l.processed" 	VALUE = "{ l.processed + 1 }">

		<MvIF EXPR = "{ NOT [ g.Library_DB ].Product_Load_ID( l.product_id, l.product ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>

			<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.product_id, 'MER-JSN-CAT-00042', 'Product not found', l.errors ) }">
		<MvELSE>

			<MvIF EXPR = "{ [ g.Library_DB ].CategoryXProduct_Load( l.category:id, l.product:id, l.categoryxproduct ) }">
				<MvIF EXPR = "{ NOT l.assigned }">
					<MvIF EXPR = "{ NOT [ g.Library_DB ].v10_CategoryXProduct_Delete( l.categoryxproduct ) }">
						<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.category_id, g.Error_Code, g.Error_Message, l.errors ) }">
					</MvIF>

					<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00044', 'Product \'' $ l.product:code $ '\' removed from category \'' $ l.category:code $ '\'' ) }">
				</MvIF>
			<MvELSEIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			<MvELSEIF EXPR = "{ l.assigned }">
				<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXProduct_Insert( l.category:id, l.product:id ) }">
					<MvASSIGN NAME = "l.error_count" VALUE = "{ JSON_Response_ListProcessed_Error( l.category_id, g.Error_Code, g.Error_Message, l.errors ) }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00043', 'Product \'' $ l.product:code $ '\' assigned to category \'' $ l.category:code $ '\'' ) }">
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ ( s.dyn_time_t - l.start_time ) GE 60 }">								<MvFOREACHSTOP>
		<MvELSEIF EXPR = "{ ( s.dyn_time_remaining GE 0 ) AND ( s.dyn_time_remaining LE 3 ) }">	<MvFOREACHSTOP>
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ l.error_count }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Errors( l.processed, l.errors ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_ListProcessed_Success( l.processed ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryProductList_BatchSort" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.Category_ID" 			VALUE = "{ int( g.Category_ID ) }">
	<MvASSIGN NAME = "g.Product_Sort_By"		VALUE = "{ trim( g.Product_Sort_By ) }">

	<MvIF EXPR = "{ substring_var( g.Product_Sort_By, 1, 1 ) EQ '-' }">
		<MvASSIGN NAME = "l.sort"				VALUE = "{ substring_var( g.Product_Sort_By, 2, len_var( g.Product_Sort_By ) - 1 ) }">
		<MvASSIGN NAME = "l.ascending"			VALUE = 0>
	<MvELSE>
		<MvASSIGN NAME = "l.sort"				VALUE = "{ g.Product_Sort_By }">
		<MvASSIGN NAME = "l.ascending"			VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXProduct_Sort_All( g.Category_ID, l.sort, l.ascending ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00012', 'Product sort order updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryProductList_DisplayOrder_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'PROD', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFOREACH ITERATOR = "l.product_order" ARRAY = "g.Product_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.product_order:id"				VALUE = "{ int( l.product_order:id ) }">
		<MvASSIGN NAME = "l.product_order:offset"			VALUE = "{ int( l.product_order:offset ) }">
		<MvASSIGN NAME = "l.product_order:original_offset"	VALUE = "{ int( l.product_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Positive_Required( l.product_order:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Product_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.change_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.product_order" ARRAY = "g.Product_Order">
		<MvASSIGN NAME = "l.change_count"														VALUE = "{ l.change_count + 1 }">
		<MvASSIGN NAME = "l.changes" 	INDEX = "{ l.change_count }" MEMBER = "product_id"		VALUE = "{ l.product_order:id }">
		<MvASSIGN NAME = "l.changes" 	INDEX = "{ l.change_count }" MEMBER = "offset"			VALUE = "{ l.product_order:offset }">
		<MvASSIGN NAME = "l.changes" 	INDEX = "{ l.change_count }" MEMBER = "original_offset"	VALUE = "{ l.product_order:original_offset }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.change_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].CategoryXProduct_Update_Offsets( l.category:id, l.changes ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00014', 'Product sort order updated' ) }">

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ChildCategoryIndex_Load_ID" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }"> <MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>

	<MvASSIGN NAME = "l.query"				VALUE = "">
	<MvASSIGN NAME = "l.record"				VALUE = "">

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',				l.filter )				OR
					NOT JSON_Input_Text(	'o', 'Sort',				l.sort )				OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',			l.assigned )			OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',			l.unassigned )			OR
					NOT JSON_Input_Integer(	'R', 'ParentCategory_ID',	l.parentcategory_id )	OR
					NOT JSON_Input_Integer(	'R', 'Category_ID',			l.category_id ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvREFERENCE NAME = "l.category"		VARIABLE = "l.record:cat">
	<MvREFERENCE NAME = "l.pbv"				VARIABLE = "l.record:pbv">
	<MvREFERENCE NAME = "l.parentcategory"	VARIABLE = "l.record:parent_cat">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( l.category_id, l.category ) }">
		<MvIF EXPR = "{ [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00018', 'Category not found' ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.category:page_code }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].PageBranchVersion_Load_Code_Branch_Head( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID(), l.category:page_code, l.pbv ) }">
			<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
				<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( l.category:parent_id, l.parentcategory ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.query, 'cat', g.Store_Table_Prefix $ 'Categories', 'parent_cat', 'cat.parent_id = parent_cat.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cat.id <> ?', [ g.Library_DB ].SQL_Query_Field( l.parentcategory_id ) ) }">

	<MvIF EXPR = "{ l.unassigned AND NOT l.assigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cat.parent_id <> ?', [ g.Library_DB ].SQL_Query_Field( l.parentcategory_id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned AND NOT l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.query, 'cat.parent_id = ?', [ g.Library_DB ].SQL_Query_Field( l.parentcategory_id ) ) }">
	<MvELSEIF EXPR = "{ NOT l.assigned AND NOT l.unassigned }">
		<MvEVAL EXPR = "{ JSON_Response_Start() }">
		{
			"index": -1
		}
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ JSON_BaseCategoryList_Filters() $ l.inventory_column }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ JSON_BaseCategoryList_OrderBy() $ l.inventory_column }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.null ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">
	
	<MvIF EXPR = "{ NOT JSON_SQL_Query_Index_With_CustomFields( l.query, l.record, l.index, l.category:id, g.Module_JSON, 'JSON_Category_CustomFields_Query_Index' ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"index":	<MvEVAL EXPR = "{ int( l.index ) }">
	}
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ChildCategoryList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN>												</MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 1, 0, 0, 0 ) }"> <MvFUNCTIONRETURN VALUE = "{ JSON_Response_Access_Denied() }">	</MvIF>
	
	<MvIF EXPR = "{ NOT JSON_ParentCategory_Load( l.parentcategory ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvASSIGN NAME = "l.filter"				VALUE = "">
	<MvASSIGN NAME = "l.sort"				VALUE = "">
	<MvASSIGN NAME = "l.offset"				VALUE = 0>
	<MvASSIGN NAME = "l.count"				VALUE = 0>
	<MvASSIGN NAME = "l.assigned"			VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"			VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvASSIGN NAME = "l.search_query"		VALUE = "">
	<MvASSIGN NAME = "l.inventory_column"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_SELECT( l.search_query, 'cat.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_INTEGER( l.search_query, 'pbv.page_id',		'page_id' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR(	 l.search_query, 'parent_cat.code',	'parent_category' ) }">

	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'Categories', 'cat' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'PageBranchVersions', 'pbv', 'cat.page_code <> \'\' AND pbv.branch_id = ? AND pbv.head = 1 AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'pbv.code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'cat.page_code' ), [ g.Module_Library_DB ].SQL_Query_Field( [ g.Module_Feature_TUI_MGR ].TemplateManager_Working_Branch_ID() ) ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'cat', g.Store_Table_Prefix $ 'Categories', 'parent_cat', 'cat.parent_id = parent_cat.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'cat.id <> ?', [ g.Library_DB ].SQL_Query_Field( l.parentcategory:id ) ) }">

	<MvIF EXPR = "{ l.unassigned AND NOT l.assigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'cat.parent_id <> ?', [ g.Library_DB ].SQL_Query_Field( l.parentcategory:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned AND NOT l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Library_DB ].SQL_Query_WHERE( l.search_query, 'cat.parent_id = ?', [ g.Library_DB ].SQL_Query_Field( l.parentcategory:id ) ) }">
	<MvELSEIF EXPR = "{ NOT l.assigned AND NOT l.unassigned }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvASSIGN NAME = "l.filter_columns" 	VALUE = "{ JSON_BaseCategoryList_Filters() $ l.inventory_column }">
	<MvASSIGN NAME = "l.orderby_columns" 	VALUE = "{ JSON_BaseCategoryList_OrderBy() $ l.inventory_column }">

	<MvEVAL EXPR = "{ JSON_Filter_Callback_With_CustomFields( l.search_query, l.filter, l.filter_columns, g.Module_JSON, 'JSON_CategoryList_Load_Query_Filter', '', 'JSON_Category_CustomFields_Query_Filter', l.ondemandcolumns ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Query_Callback_With_CustomFields( l.search_query, l.filter, g.Module_JSON, 'JSON_Category_CustomFields_Query' ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy_Callback_With_CustomFields( l.search_query, l.sort, l.orderby_columns, 'cat.disp_order', g.Module_JSON, 'JSON_Category_CustomFields_Query_OrderBy' ) }">

	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'Categories', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00019', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.category_count"		VALUE = 0>

	<MvEVAL EXPR = "{ JSON_Category_CustomFields_Initialize( l.filter, l.customfield_state ) }">
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ int( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ int( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT Categories.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.category_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ JSON_BaseCategoryList_Category_Read( l.category, l.ondemandcolumns ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.category_count ) }">
				<MvEVAL EXPR = "{ JSON_Category_OnDemandColumns( l.category, l.ondemandcolumns ) }">
				, "parent_category":	"<MvEVAL EXPR = "{ JSON_Encode( Categories.d.parent_category ) }">",
				"assigned":				<MvEVAL EXPR = "{ JSON_Boolean( Categories.d.parent_id EQ l.parentcategory:id ) }">

				<MvEVAL EXPR = "{ JSON_Category_CustomFields_With_Query( l.search_query, l.customfield_state, Categories.d.id, 'Categories' ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "Categories" ROWS = 1>
		</MvWHILE>
		]
	}

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Categories">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ChildCategory_Update_Assigned" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.ParentCategory_ID" 	VALUE = "{ int( g.ParentCategory_ID ) }">
	<MvASSIGN NAME = "g.Category_ID" 		VALUE = "{ int( g.Category_ID ) }">
	<MvASSIGN NAME = "g.Assigned" 			VALUE = "{ [ g.Filename_Admin ].Trim_Boolean( g.Assigned ) }">

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( g.ParentCategory_ID, l.parent_category ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00020', 'Failed to load parent category' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Load_ID( g.Category_ID, l.category ) }">
		<MvIF EXPR = "{ NOT [ g.Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00021', 'Failed to load child category' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Assigned AND l.parent_category:id NE l.category:parent_id }">
		<MvASSIGN NAME = "l.category:parent_id" VALUE = "{ l.parent_category:id }">
	<MvELSEIF EXPR = "{ NOT g.Assigned AND l.parent_category:id EQ l.category:parent_id }">
		<MvASSIGN NAME = "l.category:parent_id" VALUE = 0>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].Category_Update( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Assigned }">
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00022', 'Child Category \'' $ l.category:code $ '\' assigned to category \'' $ l.parent_category:code $ '\'' ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00023', 'Child Category \'' $ l.category:code $ '\' removed from category \'' $ l.parent_category:code $ '\'' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ChildCategoryList_DisplayOrder_Update" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Filename_Admin ].CanI( 'CTGY', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "g.ParentCategory_ID" 	VALUE = "{ int( g.ParentCategory_ID ) }">

	<MvFOREACH ITERATOR = "l.category_order" ARRAY = "g.Category_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.category_order:id"				VALUE = "{ int( l.category_order:id ) }">
		<MvASSIGN NAME = "l.category_order:offset"			VALUE = "{ int( l.category_order:offset ) }">
		<MvASSIGN NAME = "l.category_order:original_offset"	VALUE = "{ int( l.category_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Filename_Admin ].Validate_WholeNumber_Positive_Required( l.category_order:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ JSON_Response_FieldError( 'Category_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.change_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.category_order" ARRAY = "g.Category_Order">
		<MvASSIGN NAME = "l.change_count"														VALUE = "{ l.change_count + 1 }">
		<MvASSIGN NAME = "l.changes" 	INDEX = "{ l.change_count }" MEMBER = "id"				VALUE = "{ l.category_order:id }">
		<MvASSIGN NAME = "l.changes" 	INDEX = "{ l.change_count }" MEMBER = "offset"			VALUE = "{ l.category_order:offset }">
		<MvASSIGN NAME = "l.changes" 	INDEX = "{ l.change_count }" MEMBER = "original_offset"	VALUE = "{ l.category_order:original_offset }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.change_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Library_DB ].ChildCategoryList_Update_Offsets( g.ParentCategory_ID, l.changes ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Filename_Admin ].Admin_Log_Action( 'MER-JSN-CAT-00024', 'Child category sort order updated' ) }">
	
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryPriceGroupList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'PGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = "">
	<MvASSIGN NAME = "l.count"			VALUE = "">
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'pg.*,
																				 m.id			AS loaded_module_id,
																				 m.code			AS module_code,
																				 m.name			AS module_name,
																				 m.provider		AS module_provider,
																				 m.api_ver		AS module_api_ver,
																				 m.version		AS module_version,
																				 m.module		AS module_module,
																				 m.refcount		AS module_refcount,
																				 m.active		AS module_active,
																				 m.priority		AS module_priority,
																				 pgxc.pgrp_id	AS assigned' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT_NULL_CHAR( l.search_query, 'm.name', 'type' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroupXCategory',	'pgxc' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxc.cat_id = ? AND pg.id = pgxc.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.category:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'PriceGroups',			'pg' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pg', g.Store_Table_Prefix $ 'PriceGroupXCategory', 'pgxc', 'pgxc.cat_id = ? AND pg.id = pgxc.pgrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.category:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'pgxc.pgrp_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'pg', 'Modules', 'm', 'pg.module_id = m.id', '' ) }">

	<MvEVAL EXPR = "{ JSON_Filter( l.search_query, l.filter, [ g.Module_Feature_PGR_JSON ].JSON_BasePriceGroupList_Filters() ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy( l.search_query, l.sort,
									'id:pg.id,name:pg.name,type:m.name:null_char,custscope:pg.custscope,rate:pg.rate,discount:pg.discount,markup:pg.markup,
									 dt_start:pg.dt_start,dt_end:pg.dt_end,priority:pg.priority;-pg.id,descrip:pg.descrip,display:pg.display,
									 qualifying_subtotal:pg.qmn_subtot,qualifying_quantity:pg.qmn_quan,qualifying_weight:pg.qmn_weight,
									 basket_quantity:pg.bmn_quan,basket_subtotal:pg.bmn_subtot,basket_weight:pg.bmn_weight',
									'-pg.priority;pg.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'PriceGroups', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00048', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.pricegroup_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ encodejavascriptnumber( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ encodejavascriptnumber( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT PriceGroups.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.pricegroup_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_DB ].PriceGroupAndModule_Read( l.pricegroup ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.pricegroup_count ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_PGR_JSON ].JSON_PriceGroup( l.pricegroup ) }">
			, "assigned":	<MvEVAL EXPR = "{ encodejavascriptboolean( PriceGroups.d.assigned ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "PriceGroups" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "PriceGroups">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_CategoryAvailabilityGroupList_Load_Query" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT JSON_Store_Open() }">								<MvFUNCTIONRETURN> </MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'AGRP', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN> </MvIF>

	<MvASSIGN NAME = "l.search_query"	VALUE = "">
	<MvASSIGN NAME = "l.filter"			VALUE = "">
	<MvASSIGN NAME = "l.sort"			VALUE = "">
	<MvASSIGN NAME = "l.offset"			VALUE = "">
	<MvASSIGN NAME = "l.count"			VALUE = "">
	<MvASSIGN NAME = "l.assigned"		VALUE = 1>
	<MvASSIGN NAME = "l.unassigned"		VALUE = 0>

	<MvIF EXPR = "{ NOT JSON_Category_Load( l.category ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT JSON_Input_Filter(	'o', 'Filter',		l.filter )		OR
					NOT JSON_Input_Text(	'o', 'Sort',		l.sort )		OR
					NOT JSON_Input_Integer(	'o', 'Offset',		l.offset )		OR
					NOT JSON_Input_Integer(	'o', 'Count',		l.count )		OR
					NOT JSON_Input_Boolean(	'o', 'Assigned',	l.assigned )	OR
					NOT JSON_Input_Boolean(	'o', 'Unassigned',	l.unassigned ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_InputErrors() }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,	'ag.*,
																				 agxc.agrp_id AS assigned' ) }">

	<MvIF EXPR = "{ l.assigned AND ( NOT l.unassigned ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'AvailGroupXCategory',	'agxc' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'AvailabilityGroups',	'ag' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'agxc.cat_id = ? AND ag.id = agxc.agrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.category:id ) ) }">
	<MvELSEIF EXPR = "{ l.assigned OR l.unassigned }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query,	g.Store_Table_Prefix $ 'AvailabilityGroups',	'ag' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'ag', g.Store_Table_Prefix $ 'AvailGroupXCategory', 'agxc', 'agxc.cat_id = ? AND ag.id = agxc.agrp_id', [ g.Module_Library_DB ].SQL_Query_Field( l.category:id ) ) }">

		<MvIF EXPR = "{ NOT l.assigned }">
			<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query,	'agxc.agrp_id IS NULL', '' ) }">
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Success() }">
	</MvIF>

	<MvEVAL EXPR = "{ JSON_Filter( l.search_query, l.filter, [ g.Module_Feature_AGR_JSON ].JSON_BaseAvailabilityGroupList_Filters() ) }">
	<MvEVAL EXPR = "{ JSON_OrderBy( l.search_query, l.sort, [ g.Module_Feature_AGR_JSON ].JSON_BaseAvailabilityGroupList_OrderBy(), 'ag.id' ) }">

	<MvASSIGN NAME = "l.search_sql"	VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant', 'AvailabilityGroups', l.search_sql, l.search_fields, l.offset, l.count ) }">
		<MvFUNCTIONRETURN VALUE = "{ JSON_Response_Error( 'MER-JSN-CAT-00049', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.availabilitygroup_count" VALUE = 0>
	
	<MvEVAL EXPR = "{ JSON_Response_Start() }">
	{
		"total_count":	<MvEVAL EXPR = "{ encodejavascriptnumber( l.total_count ) }">,
		"start_offset":	<MvEVAL EXPR = "{ encodejavascriptnumber( l.offset ) }">,
		"data":
		[
		<MvWHILE EXPR = "{ ( NOT AvailabilityGroups.d.EOF ) AND ( ( l.count EQ 0 ) OR ( l.availabilitygroup_count LT l.count ) ) }">
			<MvEVAL EXPR = "{ [ g.Module_Feature_AGR_DB ].AvailabilityGroup_Read( l.availabilitygroup ) }">

			<MvEVAL EXPR = "{ JSON_ArrayElement_Start( l.availabilitygroup_count ) }">
				<MvEVAL EXPR = "{ [ g.Module_Feature_AGR_JSON ].JSON_AvailabilityGroup( l.availabilitygroup ) }">
				, "assigned": <MvEVAL EXPR = "{ encodejavascriptboolean( AvailabilityGroups.d.assigned ) }">
			<MvEVAL EXPR = "{ JSON_ArrayElement_End() }">

			<MvSKIP NAME = "Merchant" VIEW = "AvailabilityGroups" ROWS = 1>
		</MvWHILE>
		]
	}
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "AvailabilityGroups">
	<MvFUNCTIONRETURN VALUE = "{ JSON_Response_End() }">
</MvFUNCTION>
